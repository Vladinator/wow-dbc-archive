ID,Name,Script
4,Global Functions - Scene,"--
-- Scene Functions
--

function Scene:WaitTimer(waitTime)
	local timer = self:Timer(waitTime)
	self:Wait(timer)
end

function Scene:WaitCondition(conditionFunc, freq, maxTime)
	local elapsed = 0;
	if not freq or freq == 0 then
		-- Poll every frame. Reuse the same sync object to avoid allocations
		local timer = self:Timer(0)
		while conditionFunc() ~= true or (maxTime and maxTime < elapsed) do
			elapsed = elapsed + .01;
			timer:Reset()
			self:Wait(timer)
		end
	else
		-- Poll at a certain frequency
		while conditionFunc() ~= true or (maxTime and maxTime < elapsed) do
			elapsed = elapsed + freq;
			self:WaitTimer(freq)
		end
	end
end

function Scene:WaitEvent(freq, keepEvent)
	local waitCondition = function()
		local event = self:PeekEvent()
		if event then
			return true
		else
			return false
		end
	end
	
	self:WaitCondition(waitCondition, freq)
	local event = self:PeekEvent()
	assert(event ~= nil)
	if (keepEvent ~= true) then
		self:PopEvent()
	end
	return event
end

--
-- CreateActorAndWaitForLoad
--  create a single actor and wait for it to be fully renderable
--
function Scene:CreateActorAndWaitForLoad(createData, fadeInTime)
	local actorList = self:CreateActorsAndWaitForLoad({createData}, fadeTime)
	return actorList[1]
end

--
-- CreateActorsAndWaitForLoad
--   create a set of actors and wait for all of them to be renderable
--
function Scene:CreateActorsAndWaitForLoad(createDataList, fadeInTime)
	local actorList = {}
	for index, createData in pairs(createDataList) do
		local actor = self:SpawnActor(createData)
		actorList[index] = actor
	end

	self:WaitForActorsToLoad(actorList, fadeInTime)
	return actorList
end

--
-- WaitForActorsToLoad
--   hide all a list of actors and fade them in when all ready
--
function Scene:WaitForActorsToLoad(actorList, fadeInTime)
	if not fadeInTime then
		fadeInTime = 0.5
	end

	for index, actor in pairs(actorList) do
		actor:SetInteractible(false)
		actor:SetHidden(true)
		actor:Fade(0, 0)
	end

	local waitCondition = function()
		-- all actors must be renderable
		for index, actor in pairs(actorList) do
			if not actor:IsReadyToDisplay() then
				return false
			end
		end
		return true
	end
	self:WaitCondition(waitCondition)

	-- fade in the actors
	for index, actor in pairs(actorList) do
		actor:SetHidden(false)
		actor:Fade(1, fadeInTime)
	end

	-- wait until faded in
	if fadeInTime > 0 then
		self:WaitTimer(fadeInTime)
	end

	-- make everything interactible again
	for index, actor in pairs(actorList) do
		actor:SetInteractible(true)
	end
end

--
-- AddCoroutineWithParams
--   add a coroutine to run next frame, called with parameters
--
function Scene:AddCoroutineWithParams(func, ...)
	local params = {...}
	local paramBindFunc = function()
		func(unpack(params))
	end

	self:AddCoroutine(paramBindFunc)
end
"
7,Darren's Test Scene Script 1,"print(""ROLL TEST 9"")

BLAH_BLAH()

local beamBattleStateID = 27752
local shaBurstID = 27433

local stalkerModel = ""creature\\invisiblestalker\\invisiblestalker.m2""
local stalkerCreateData = ActorCreateData:Default()
stalkerCreateData.model = stalkerModel
stalkerCreateData.groundSnap = true

local sonicTarget = scene:SpawnActor(stalkerCreateData)
local shaburst = sonicTarget:PlaySpellStateVisual(beamBattleStateID)

scene:WaitTimer(10)

print(""clear"")

sonicTarget:ClearSpellVisual( shaburst)

scene:WaitTimer(2)

print(""despawn"")

sonicTarget:Despawn()

scene:WaitTimer(2)

--[[

--local stalkerModel = ""creature\\invisiblestalker\\invisiblestalker.m2""
local cloneCreateData = ActorCreateData:Default()
cloneCreateData.transform = Transform:New(Vector:New(3, 2, 0), 180)
cloneCreateData.groundSnap = true
local clone1 = scene:SpawnActivePlayerCloneActor(cloneCreateData, true)
cloneCreateData.transform = Transform:New(Vector:New(3, -2, 0), 180)
local clone2 = scene:SpawnActivePlayerCloneActor(cloneCreateData, false)

local meteorModel = ""SPELLS\\Warlock_Handofguldan_Missile_01.M2"";
--local meteorModel = ""creature\\porcupine\\porcupine.M2"";
local meteorAnimKitID = 3267;

local create = ActorCreateData:NewModel(
	""Meteor"",
	meteorModel,
	Transform:New(Vector:New(3, 0, 0), 180),
	1);
local meteor = scene:SpawnActor(create);
--scene:WaitTimer(5)
meteor:PlayAnimKit(meteorAnimKitID, false, Animations.None);


-- Roll test:
--  The procupine actor is made relative to a stalker that is rolling, and
--  the stalkers movement path is offset by the pivot point of the roll

--local stalkerModel = ""creature\\invisiblestalker\\invisiblestalker.m2""
local stalkerModel = ""spells\\axistestobject.m2""

local stalkerCreateData = ActorCreateData:Default()
stalkerCreateData.model = stalkerModel
stalkerCreateData.groundSnap = true
local stalker = scene:SpawnActor(stalkerCreateData)

function RollTo(actor, rollOffset, pos)

	-- move the stalker to the correct initial position, and make
	-- the actor relative to it
	stalker:SetHoverHeight(rollOffset)
	local transform = actor:GetTransform()
	transform.position.z = transform.position.z + rollOffset
	stalker:SetTransform(transform)
	stalker:SetFacingTurnRate(actor:GetFacingTurnRate())
	actor:SetSnapToGround(false)
	actor:SetRelativeTo(stalker)

	local moveData = MoveData:Default(1)
	moveData.posControl = MovePosControl.TotalTime
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.AngleAbs
	moveData.rollControl = MoveRotControl.None
	moveData.teleportToFirstPoint = false
	moveData.isGroundSnapping = true
	moveData.isRelative = false
	moveData.time = 2.5

	moveData.points[1].pos = pos
	moveData.points[1].pitch = -1080
	moveData.points[1].roll = 0

	stalker:Move(moveData)
	stalker:WaitMovementComplete()
	
	-- restore the actors position and groun snapping
	actor:SetRelativeTo(nil)
	actor:SetSnapToGround(true)
	local transform = stalker:GetTransform()
	transform.position.z = transform.position.z - rollOffset
	actor:SetTransform(transform)

end

local porcupineID = 64804 -- 0
local porcupineModel = """" --""creature\\invisiblestalker\\invisiblestalker.m2""
local porcCreateData = ActorCreateData:Default()
porcCreateData.creatureID = porcupineID
porcCreateData.model = porcupineModel
porcCreateData.scale = 2.5
porcCreateData.groundSnap = true
porcCreateData.transform = Transform:New(Vector:New(5, 5, 0), -90)
local porc = scene:SpawnActor(porcCreateData)

local rollOffset = 0.6
while true do
	scene:WaitTimer(5)
	RollTo(porc, rollOffset, Vector:New(5, -5, 0))
	scene:WaitTimer(0.5)
	RollTo(porc, rollOffset, Vector:New(-5, -5, 0))
	scene:WaitTimer(0.5)
	RollTo(porc, rollOffset, Vector:New(-5, 5, 0))
	scene:WaitTimer(0.5)
	RollTo(porc, rollOffset, Vector:New(5, 5, "
8,Darren's Test Scene Script 2,"print(""DazTest2"")

actorCreateData = ActorCreateData:New(53828, Transform:New(Vector:New( 5, 5, 3), -90), 0.5)
--actorCreateData.groundSnap = true
actor = scene:SpawnActor(actorCreateData)

actorCreateData.transform = Transform:New(Vector:New( -10, -10, 3))
actor2 = scene:SpawnActor(actorCreateData)

scene:WaitTimer(1)
scene:SetCamera(416, 0, actor, actor2)
--blah22

scene:WaitTimer(2)
actor:PlayLoopingFullBodyAnim(Animations.Hover)
actor:SetSnapToGround(false)
actor:WaitMoveToRel(Vector:New(0,0,5), 1)
actor:WaitMoveToRel(Vector:New(5,0,0), 2)
actor:WaitMoveToRel(Vector:New(0,0,-3), 3)
actor:SetHoverHeight(2)
actor:SetSnapToGround(true)
actor:WaitMoveToRel(Vector:New(5,0,0), 2)
scene:SetCamera(0, 2.5, nil, nil)

scene:WaitTimer(10)

print(""-- END: Darren's Test Script 2 --"")


"
9,Global Functions - Actor,"--
-- Actor Functions
--
function Actor:WaitCondition(...)
	local scene = self:GetScene()
	if scene then
		scene:WaitCondition(...)
	end
end

function Actor:WaitCastingComplete(checkAnims, spellID)
	local waitCondition = function()
		return ((not self:IsCasting()) and ((not checkAnims) or (checkAnims ~= true) or
		(
			((not spellID) or (not self:HasSpellEffect(spellID))) and
			(not self:IsPlayingSpellPreCastAnim()) and
			(not self:IsPlayingSpellCastAnim()) and
			(not self:IsPlayingCombatAction())
		)))
	end
	self:WaitCondition(waitCondition)
end

function Actor:WaitCastSpell(...)
	self:CastSpell(...)
	self:WaitCastingComplete()
end

function Actor:WaitMissilesReleased(spellVisualInstanceID)
	local waitCondition = function()
		return not self:HasPendingMissiles(spellVisualInstanceID)
	end
	self:WaitCondition(waitCondition)
end

function Actor:WaitMissilesImpacted(spellVisualInstanceID)
	local waitCondition = function()
		return not self:HasPendingOrInFlightMissiles(spellVisualInstanceID)
	end
	self:WaitCondition(waitCondition)
end

function Actor:WaitReadyToDisplay()
	local waitCondition = function()
		return not self:IsReadyToDisplay()
	end
	self:WaitCondition(waitCondition)
end

--
-- ActorAOISettings Functions
--
function ActorAOISettings:Default()
	local lod = 
	{
		priority = ActorAOIPriority.Always;
		range = ActorAOIRange.Infinite;
		minRange = ActorAOIRange.None or 0;
	}
	if (self.__meta) then
		setmetatable(lod, self.__meta)
	end
	return lod
end

--
-- ActorFadeRegionSettings Functions
--

-- backwards compatibility
if (not ActorFadeRegionSettings) then
	ActorFadeRegionSettings = { }
end

function ActorFadeRegionSettings:Default()
	local fr = 
	{
		active = false,
		radius = 0.0,
		includePlayer = true,
		excludePlayers = false,
		excludeNonPlayers = false,
		includeSounds = false,
		includeWMOs = false,	
	}
	if (self.__meta) then
		setmetatable(fr, self.__meta)
	end
	return fr
end

--
-- ActorPlayerMount Functions
--

-- backwards compatibility
if (not ActorPlayerMount) then
	ActorPlayerMount = { }
end

function ActorPlayerMount:Default()
	local m = 
	{
		dragonRidingMount = false;
	}
	if (self.__meta) then
		setmetatable(m, self.__meta)
	end
	return m
end

--
-- ActorCreateData Functions
--
function ActorCreateData:Default()
	local c =
	{
		playerCloneToken = """",
		playerCloneIsNative = true,
		itemID = 0,
		itemAppearanceModifierID = 0,
		creatureID = 0,
		creatureDisplaySetIndex = 0,
		creatureDisplayID = 0,
		playerSummon = false,
		playerMount = ActorPlayerMount:Default(),
		wmoFileDataID = 0, -- deprecated
		wmoGameObjectDisplayID = 0,
		model = """",
		modelFileID = 0,
		scale = 1.0,
		facingOffset = 0.0,
		name = """",
		transform = Transform:New(),
		hoverHeight = 0.0,
		groundSnap = true,
		interactible = true,
		selectable = false,
		floatingTooltip = true,
		hasShadow = false,
		smoothPhase = false,
		trackGround = false,
		noTransformUpdates = false,
		copyAnim = false,
		freezeAnim = false,
		noShadow = false,
		disableUpdates = false,
		aoiSettings = ActorAOISettings:Default(),
		overrideReaction = ReactionType.Default,
		overrideMinLod = 0,
		overrideLinkage = Linkage.Default,
		sceneEditorActorID = 0,
		timelineHandleName = """",
		fadeRegionSettings = ActorFadeRegionSettings:Default(),
		alwaysAnimating = false,
	}
	setmetatable(c, self.__meta)
	return c
end

function ActorCreateData:New(_id, _trans, _scale)
	local c = ActorCreateData:Default()

	c.creatureID = _id or c.creatureID
	c.scale = _scale or c.scale
	c.transform = _trans

	return c
end

function ActorCreateData:NewDisplay(_creatureID, _displayId, _trans, _scale)
	local c = ActorCreateData:Default()

	c.creatureID = _creatureID or c.creatureID
	c.creatureDisplayID = "
10,Global Functions - Math,"--
-- Vector Functions
--
function Vector:New(_x, _y, _z)
	local v = { x = _x or 0, y = _y or 0, z = _z or 0 }
	setmetatable(v, self.__meta)
	return v
end

function Vector:ToString()
	return string.format(""(%.3f, %.3f, %.3f)"", self.x, self.y, self.z)
end

Vector.Concat = function(a, b)
	local stringA = a
	if type(stringA) ~= ""string"" then
		stringA = a:ToString()
	end

	local stringB = b
	if type(stringB) ~= ""string"" then
		stringB = b:ToString()
	end

	return (stringA .. stringB)
end

Vector.Add = function(a, b)
	return Vector:New(a.x + b.x, a.y + b.y, a.z + b.z)
end

Vector.Sub = function(a, b)
	return Vector:New(a.x - b.x, a.y - b.y, a.z - b.z)
end

Vector.Mul = function(a, b)
	if type(a) == ""number"" then
		return Vector:New(a * b.x, a * b.y, a * b.z)
	else
		return Vector:New(a.x * b, a.y * b, a.z * b)
	end
end

Vector.Div = function(a, b)
	if type(b) == ""number"" then
		return Vector.Mul(a, 1.0 / b)
	end
end

Vector.Neg = function(a)
	return Vector:New(-a.x, -a.y, -a.z)
end

Vector.Magnitude = function(v)
	return math.sqrt(v.x*v.x + v.y*v.y + v.z*v.z)
end

Vector.Normalize = function(v)
	local magnitude = v:Magnitude();
	if (magnitude > 0.001) then
		return Vector:New(
				v.x/magnitude, 
				v.y/magnitude, 
				v.z/magnitude);
	else
		return Vector:New(1, 0, 0)
	end
end

Vector.CrossProduct = function ( a, b ) 
	-- TODO - end result is normalized, go through and fix
	-- usage cases
	return a:UnitCrossProduct(b)
end

Vector.UnitCrossProduct = function ( a, b ) 
	local normalA, normalB = a:Normalize(), b:Normalize();
	return normalA:CrossProductOfUnitVectors(normalB)
end

Vector.CrossProductOfUnitVectors = function ( a, b ) 
	return Vector:New( 
		((a.y * b.z) - (a.z * b.y)),
		((a.z * b.x) - (a.x * b.z)),
		((a.x * b.y) - (a.y * b.x)))
end

Vector.Dist = function ( a, b ) 
	return math.pow (math.pow( a.x-b.x, 2 ) + 
					 math.pow( a.y-b.y, 2 ) +  
					 math.pow( a.z-b.z, 2 ) , 0.5 );
end

Vector.DistXY = function ( a, b ) 
	return math.pow (math.pow( a.x-b.x, 2 ) + 
					 math.pow( a.y-b.y, 2 ), 0.5 );
end

Vector.UnitVectorFromAtoB = function ( a, b ) 
	local offset = b - a
	local dist = offset:Magnitude()
	if (dist > 0.001) then
		return offset * (1.0/dist)
	else
		return Vector:New(1, 0, 0)	
	end
end 

-- add funnctions to the metatable
Vector.__meta.__tostring = Vector.ToString
Vector.__meta.__add = Vector.Add
Vector.__meta.__sub = Vector.Sub
Vector.__meta.__mul = Vector.Mul
Vector.__meta.__div = Vector.Div
Vector.__meta.__unm = Vector.Neg
Vector.__meta.__len = Vector.Magnitude
Vector.__meta.__concat = Vector.Concat

--
-- Transform Functions
--
function Transform:New(v, _yaw, _pitch, _roll)
	local t =
	{
		position = v or Vector:New(),
		yaw = _yaw or 0,
		pitch = _pitch or 0,
		roll = _roll or 0
	}
	setmetatable(t, self.__meta)
	return t
end

--
-- Color Functions
--
if (not Color) then
	Color =  { }
end

function Color:New(_r, _g, _b, _a)
	local c =
	{
		r = _r or 0,
		g = _g or 0,
		b = _b or 0,
		a = _a or 255,
	}
	setmetatable(c, self.__meta)
	return c
end
"
11,Darren's Test Scene Script 3,"print(""-- START: Darren's Test Script 3 --"")

scene:WaitTimer(1)
scene:ApplyScreenEffect(949)
scene:WaitTimer(5)
scene:ApplyScreenEffect(950)
scene:WaitTimer(5)
scene:ClearScreenEffect(949)
scene:WaitTimer(5)
scene:ClearScreenEffect(950)
scene:WaitTimer(1)


--[[
local zeppelinModel = ""world\\expansion03\\doodads\\generic\\flying_horde_zeppelin.m2""
local zeppCreateData = ActorCreateData:Default()
zeppCreateData.model = zeppelinModel
zeppCreateData.facingOffset = 180
zeppCreateData.groundSnap = false
zeppCreateData.transform = Transform:New(Vector:New(50, 0, 20), 90)
local zepp = scene:SpawnActor(zeppCreateData)
zepp:SetFacingTurnRate(1)

local nazgrimCreatureID = 53828
local nazgrimCreateData = ActorCreateData:Default()
nazgrimCreateData.creatureID = nazgrimCreatureID
nazgrimCreateData.scale = 0.75
nazgrimCreateData.groundSnap = false
nazgrimCreateData.transform = Transform:New(Vector:New(38, 5, 2), 45)
local naz1 = scene:SpawnActor(nazgrimCreateData)

nazgrimCreateData.transform = Transform:New(Vector:New(42, -5, 2), -45)
local naz2 = scene:SpawnActor(nazgrimCreateData)

scene:WaitTimer(1)
naz1:SetRelativeTo(zepp)
naz2:SetRelativeTo(zepp)


scene:WaitTimer(2)

moveData = MoveData:Default(1)
--moveData.posControl = MovePosControl.TotalTime
moveData.posControl = MovePosControl.PointSpeed
moveData.yawControl = MoveRotControl.None
moveData.pitchControl = MoveRotControl.Angle
moveData.rollControl = MoveRotControl.Angle
moveData.teleportToFirstPoint = false
moveData.isGroundSnapping = false
moveData.isRelative = true
moveData.time = 10
moveData.speed = 4
moveData.animKitID = 2272 -- Steve's zeppelin propellor anim
moveData.pathID = 4044

zepp:Move(moveData)

ogreMoveData = MoveData:Default(2)
ogreMoveData.posControl = MovePosControl.TotalTime
ogreMoveData.yawControl = MoveRotControl.Tangent
ogreMoveData.isRelative = true
ogreMoveData.time = 5


ogreMoveData.points[1].pos = Vector:New(2,  2, 0)
ogreMoveData.points[2].pos = Vector:New(3,  -4, 0)

scene:WaitTimer(5)
naz1:Move(ogreMoveData)
scene:WaitTimer(10)
naz1:SetRelativeTo(nil)

scene:WaitTimer(15)
naz2:Move(ogreMoveData)


while (1) do
	scene:WaitTimer(10)
end
]]

print(""-- END: Darren's Test Script 3 --"")

"
12,Darren's Test Scene Script 5,"print(""-- START: Darren's Test Scene Script 5"")

-- if you have an actor somewhere in the global scope, follow it
if RunFollower then
	RunFollower(actor)
end

print(""-- END: Darren's Test Scene Script 5"")
"
13,Darren's Movement and Facing Test,"print(""-- START: Darren's Movement and Facing Test --"")

-- worldport 0, -13191.1, 259.751, 21.8579, 88.5582
points =
{
	Vector:New(-13191.5, 261.017, 21.857),
	Vector:New(-13200.5, 274.399, 21.857),
	Vector:New(-13214.2, 265.146, 21.857),
	Vector:New(-13204.1, 250.901, 21.857),
}

scene:SetRelativeCoords(false)

pointIndex = 1

actorCreateData = ActorCreateData:New(55242, Transform:New(points[pointIndex], 100), 1.0)
actor = scene:SpawnActor(actorCreateData)

scene:WaitTimer(5)

-- cut to initial camera
scene:SetCamera(302, 0.0, nil, nil)

speed = 6.0
count = 1
while true do
	local thisPoint = points[pointIndex]
	pointIndex = (pointIndex % #points) + 1
	local nextPoint = points[pointIndex]
	local lookPoint = points[(pointIndex % #points) + 1] -- look another point ahead for the head

	local offsetX = nextPoint.x - thisPoint.x
	local offsetY = nextPoint.y - thisPoint.y
	local dist = math.sqrt(offsetX*offsetX + offsetY*offsetY)

	if count == 4 then
		scene:SetCamera(0, 1, nil, nil)
	elseif count < 4 then

		if pointIndex == 1 then
			scene:SetCamera(302, 10.0, nil, nil)
	--	elseif pointIndex == 2 then
	--		scene:SetCamera(0, 0.5, nil, nil)
		elseif pointIndex == 3 then
			scene:SetCamera(303, 20.0, nil, nil)
		end

	end

	count = count + 1

	actor:SetFacingToAbs(lookPoint)
	scene:WaitTimer(2)
	actor:ClearFacing()
	actor:SetHeadFacingToAbs(nextPoint)
	scene:WaitTimer(2)
	actor:ClearHeadFacing()
	scene:WaitTimer(2)

	-- start moving towards the next point
	actor:MoveToAbs(nextPoint, dist / speed)
	print(""MoveTo: points["" .. pointIndex .. ""]"" .. nextPoint:ToString())

	-- cheecky over the shoulder look
	scene:WaitTimer(0.5)
	actor:SetHeadFacingToAbs(lookPoint)
	scene:WaitTimer(1)
	actor:ClearHeadFacing()

	actor:WaitMovementComplete()
	scene:WaitTimer(1)


end

actor:Despawn()

print(""-- END: Darren's Movement and Facing Test --"")
"
14,Kun Lai Summit - Horde Hub Swap Scene - Worker 01 - JSB,"
-- small tent panda 01
-- wait a little before running in
Wait(2)
FadeIn( panda01, 1 )

-- run to the tents
RunToLocation( panda01, 5.5, 2290.39, 944.073, 481.63, 341.549 )

Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda01, fire03.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire02 )
PutOutFire( fire03 )
PutOutFire( fire14 )

Wait(1)

RunToLocation( panda01, 3, 2293.17, 950.125, 481.201, 337.517 )

PlayLoopingSplitBodyAnim( panda01, Animations.EmoteWork )

Wait(2)

FadeOut( fire02.smoke )
FadeOut( fire03.smoke )
FadeOut( fire14.smoke )

Wait(1)

FadeIn( workDust01, 5 )
FadeIn( workDust05, 5 )

-- nazgrim trigger
WaitForTrigger( ""flagPlant"" )

Wait(1)

StopLoopingSplitBodyAnim( panda01 )

RunToLocation( panda01, 3, 2276.55, 970.392, 482.394, 101.25 )
panda01: Despawn()"
16,Darren's Math Test,"print(""Darren's Math Test"")

v1 = Vector:New(1, 2, 3)
v2 = Vector:New(2, 4, 6)

v3 = Vector.Add(v1, v2)

print(""v1 = "" .. v1 .. "", v2 = "" .. v2 .. "", add = "" .. v3)

v3 = v1 - v2
print(""v1 = "" .. v1 .. "", v2 = "" .. v2 .. "", sub = "" .. v3)

v3 = v1*4
print(""v1 = "" .. v1 .. "", v2 = "" .. v2 .. "", mul x 4 = "" .. v3)

v3 = -v1
print(""v1 = "" .. v1 .. "", v2 = "" .. v2 .. "", minus = "" .. v3)

len = v1:Magnitude()
-- len = #v1 -- NOTE: this doesn't work in Lua 5.1!
print(""len = "" .. len)
"
18,Darren's Test Scene Script 6,"print(""-- START: Darren's Test Scene Script 6 --"")

scene:WaitTimer(2)

local markerModel = ""SPELLS\\AxisTestObject.M2""

local markerCreateData = ActorCreateData:Default()
--nazgrimCreateData.creatureID = nazgrimCreatureID
markerCreateData.model = markerModel
markerCreateData.scale = 1.5
markerCreateData.groundSnap = false

local actor = nazgrim

local currentMarker = nil
while actor do
	if (currentMarker) then
		currentMarker:Despawn()
	end

	local pos = actor:GetPosition()
	local trans = actor:GetTransform()
	markerCreateData.transform = trans
	currentMarker = scene:SpawnActor(markerCreateData)

	scene:WaitTimer(1)
end

print(""-- END: Darren's Test Scene Script 6 --"")
"
25,Kun Lai Summit - Horde Hub Swap Scene - Master Script - JSB,"
scene:WaitTimer(2)

scene:SetCamera(304,0,nil,nil) -- (camera, transition time, primary target, secondary target)
scene:SetCamera(305,26,nil,nil)

-- set scene fade region
scene:SetFadeRegion(100, true)

scene:WaitTimer(18) --was 28
scene:SetCamera(311,25,nil,nil)

scene:WaitTimer(18) --was 28

scene:SetCamera(306,10,nil,nil)

scene:WaitTimer(10)

scene:SetCamera(0,2,nil,nil) -- sets camera back to game-cam
scene:WaitTimer(1)
scene:SetFadeRegion(0, false)
"
30,Kun Lai Summit - Horde Hub Swap Scene - Worker 02 - JSB,"
-- small tent panda 02
-- wait a little before running in
Wait(2)
FadeIn( panda02, 1 )

-- run to the tents
RunToLocation( panda02, 5.5, 2298.76, 922.011, 481.216, 28.7984 )

Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda02, fire16.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire04, smokeFadeOutTime )
PutOutFire( fire08, smokeFadeOutTime )
PutOutFire( fire16, smokeFadeOutTime )

Wait(1)

RunToLocation( panda02, 3, 2301.44, 926.885, 481.203, 57.6166 )

PlayLoopingSplitBodyAnim( panda02, Animations.EmoteWork )

Wait(2)

FadeOut( fire04.smoke )
FadeOut( fire08.smoke )
FadeOut( fire16.smoke )

Wait(1)

FadeIn( workDust02, 5 )


WaitForTrigger( ""flagPlant"" )

Wait(2)

StopLoopingSplitBodyAnim( panda02 )

RunToLocation( panda02, 3, 2270.03, 950.734, 481.315, 24.7839 )
panda02: Despawn()"
33,Darren's Test Scene Script 6,"print(""-- START: Darren's Test Script 6 --"")

local fireCreateData1 = ActorCreateData:NewModel(
	""Camp Fire"",
	""world\\generic\\human\\passive doodads\\firewood\\firewoodpile04.m2"",
	Transform:New(Vector:New(0, 0, 0), 0),
	2.0)


local fireCreateData2 = ActorCreateData:NewModel(
	""Fireworks"",
	""spells\\fireworks_redstreaks_01.m2"",
	Transform:New(Vector:New(0, 0, 0), 0),
	0.5)

local actorList = scene:CreateActorsAndWaitForLoad({fireCreateData1, fireCreateData2})
local fireActor = actorList[1]
fireActor:SetInteractible(false)
	
while 1 do
	scene:WaitTimer(1)
	local transform = fireActor:GetTransform()
--	transform.position = transform.position + Vector:New(0, 0.1, 0)
	transform.yaw = transform.yaw + 5
	fireActor:SetTransform(transform)
end

print(""-- END: Darren's Test Script 6 --"")
"
35,Test - Alex's Battle Pet - Test Library,"-- Add two vectors
function VectorSum( vectorA, vectorB ) 
	return Vector:New( vectorA.x+vectorB.x, vectorA.y+vectorB.y, vectorA.z+vectorB.z );
end

-- Distance between two points
function VectorDist( vectorA, vectorB ) 
	return math.pow (math.pow( vectorA.x-vectorB.x, 2 ) + 
					 math.pow( vectorA.y-vectorB.y, 2 ) +  
					 math.pow( vectorA.z-vectorB.z, 2 ) , 0.5 );	
end

-- Copy a vector
function VectorCopy( vectorA ) 
	return Vector:New( vectorA.x, vectorA.y, vectorA.z )
end

-- Scale a vector up
function VectorScale( vectorA, multi )
	return Vector:New( vectorA.x*multi, vectorA.y*multi, vectorA.z*multi )
end


-- Scale a vector up per axis
function VectorScalePerAxis( vectorA, multiX, multiY, multiZ )
	return Vector:New( vectorA.x*multiX, vectorA.y*multiY, vectorA.z*multiZ )
end

-- Magnitude
function VectorMagnitude ( vectorA )
	return math.pow( 
				math.pow(vectorA.x,2) +
				math.pow(vectorA.y,2) +
				math.pow(vectorA.z,2), 0.5 );
end

-- Normalize
function UnitVectorNormalize ( vectorA ) 
	local magnitude = VectorMagnitude ( vectorA );
  
	return Vector:New(
			vectorA.x/magnitude, 
			vectorA.y/magnitude, 
			vectorA.z/magnitude);
end

-- Unit vector pointing from A to B
function UnitVectorFromAtoB( vectorA, vectorB ) 
	local dist = VectorDist( vectorA, vectorB );

	if (dist == 0 ) then 
		return Vector:New(0,0,1);
	end

	return Vector:New( 
			(vectorB.x-vectorA.x) / dist,
			(vectorB.y-vectorA.y) / dist,
			(vectorB.z-vectorA.z) / dist);
end

-- Unit vector pointing in the perpendicular angle
function UnitVectorCrossProduct ( vectorA, vectorB ) 
	local normalA, normalB = UnitVectorNormalize(vectorA), UnitVectorNormalize(vectorB);

	return Vector:New( 
		((normalA.y * normalB.z) - (normalA.z * normalB.y)),
		((normalA.z * normalB.x) - (normalA.x * normalB.z)),
		((normalA.x * normalB.y) - (normalA.y * normalB.x)) 
		)
end

-- A common function I use 
-- 	baseLoc - the unit facing
--  faceLoc - the location being faced
--  offset  - the distance along the Base -> Face vector
function FastLocalFacingCoordinates( baseLoc, faceLoc, offset ) 
	local frontVector = UnitVectorFromAtoB(baseLoc, faceLoc);
	local upVector = UnitVectorFromAtoB(baseLoc, VectorSum(baseLoc, Vector:New(0,0,1) ) );
	local leftVector = UnitVectorCrossProduct(frontVector, upVector);

	local newLoc = baseLoc
			+ frontVector * offset.x
			+ leftVector * offset.y
			+ upVector * offset.z;

	return newLoc;
end"
39,Kun Lai Summit - Horde Hub Swap Scene - Init - Generic Actors 01 - JSB,"
smokeFadeOutTime = 10
throwBucketSpellID = 115882

-- Spawn all tents
smallPandaTentCreatureID = 60522
largePandaTentCreatureID = 60525
smallHordeTentCreatureID = 60526
largeHordeTentCreatureID = 60527
tent01 = SpawnActor( smallPandaTentCreatureID, 2302.269, 948.937, 481.253, 211 ) -- PANDA small tent 01
tent02 = SpawnActor( smallPandaTentCreatureID, 2307.038, 936.111, 481.234, 195 ) -- PANDA small tent 02
tent03 = SpawnActor( largePandaTentCreatureID, 2269.875, 897.456, 479.856, 80, 1.1, false ) -- PANDA Large tent
tent04 = SpawnActor( smallHordeTentCreatureID, 2302.269, 948.937, 481.253, 211 ) -- HORDE small tent
tent05 = SpawnActor( smallHordeTentCreatureID, 2307.038, 936.111, 481.234, 195 ) -- HORDE small tent
tent06 = SpawnActor( largeHordeTentCreatureID, 2269.875, 897.456, 479.856, 80, 1.1, false ) -- HORDE Large tent
FadeOut( tent04, 0 )
FadeOut( tent05, 0 )
FadeOut( tent06, 0 )

-- Spawn all worker pandas
pandaCreatureID = 60152
panda01 = SpawnActor( pandaCreatureID, 2280.04, 981.489, 482.941, 266.84 )
panda02 = SpawnActor( pandaCreatureID, 2286.43, 977.096, 483.15, 276.065 )
panda03 = SpawnActor( pandaCreatureID, 2272.74, 989.461, 483.852, 303.416 )
panda04 = SpawnActor( pandaCreatureID, 2278.36, 992.575, 484.587, 300.843 )
panda05 = SpawnActor( pandaCreatureID, 2269.89, 986.992, 483.538, 320.384 )
panda06 = SpawnActor( pandaCreatureID, 2224.33, 972.759, 489.625, 276.767 )
FadeOut( panda01, 0 )
FadeOut( panda02, 0 )
FadeOut( panda03, 0 )
FadeOut( panda04, 0 )
FadeOut( panda05, 0 )
FadeOut( panda06, 0 )

-- Spawn all the fires to be put out
-- SpawnFire( x, y, z, scale )
fire01 = SpawnFire( 2295.05, 964.531, 483.92, 1 ) -- banner north - TARGET
fire02 = SpawnFire( 2304.65, 937.658, 483.913, 1 ) -- tent, small - WORKER 1
fire03 = SpawnFire( 2298.1, 941.111, 481.459, 1 ) -- tent, small - WORKER 1
fire04 = SpawnFire( 2316.1, 928.04, 481.757, 1 ) -- tent, small - WORKER 2
fire05 = SpawnFire( 2308.92, 906.934, 491.892, 1 ) -- tower - WORKER 3
fire06 = SpawnFire( 2313.74, 905.326, 503.25, 1 ) -- tower - WORKER 3
fire07 = SpawnFire( 2268.93, 889.865, 499.961, 1 ) -- tent, main - WORKER 5
fire08 = SpawnFire( 2319.66, 937.674, 483.92, 1 ) -- tent, small - WORKER 2
fire09 = SpawnFire( 2322.18, 902.429, 482.895, 1 ) -- tower - WORKER 3
fire10 = SpawnFire( 2306.92, 900.443, 481.481, 2 ) -- tower - large fire - TARGET - WORKER 3
fire11 = SpawnFire( 2268.31, 895, 481.306, 2 ) -- tent, main - TARGET - WORKER 5
fire12 = SpawnFire( 2278.66, 901.373, 490.065, 1 ) -- tent, main - WORKER 5
fire13 = SpawnFire( 2262.79, 913.825, 481.15, 1 ) -- tent, main - WORKER 5
fire14 = SpawnFire( 2300.67, 947.892, 481.201, 1 ) -- tent, small - WORKER 1
fire15 = SpawnFire( 2308.14, 962.451, 485.35, 0.5 ) -- banner north, small - nearby
fire16 = SpawnFire( 2305.58, 928.971, 481.152, 0.5 ) -- tent, small, small fire - WORKER 2
fire17 = SpawnFire( 2316.01, 915.215, 481.615, 0.5 ) -- tower, small fire - WORKER 3

fire18 = SpawnFire( 2255.46, 960.028, 480.485, 0.5 ) -- off-screen, small fire - WORKER 6
fire19 = SpawnFire( 2250.81, 942.753, 485.231, 0.5 ) -- off-screen, small fire - WORKER 6
fire20 = SpawnFire( 2241.63, 902.193, 489.048, 0.5 ) -- off-screen, small fire - WORKER 6
fire21 = SpawnFire( 2242.29, 934.299, 481.146, 1 ) -- off-screen, fire - WORKER 6
fire22 = SpawnFire( 2236.61, 915.137, 481.721, 1 ) -- off-screen, fire - WORKER 6
fire23 = SpawnFire( 2245.97, 915.745, 481.147, 2 ) -- off-screen, fire - WORKER 6
fire24 = SpawnFire( 2264.56, 954.792, 481.163, 0.7 ) -- off-screen, fire - WORKER 6

-- player clone
playerCloneCreatureID = 65247
clone = SpawnActivePlayerCloneActor( 2279.81, 982.514, 483.022, 303.992 ) -- Player Clone
"
40,Kun Lai Summit - Hub Swap Scene - Util - JSB,"
fireBunnyCreatureID = 60291
fireCreatureID = 60157
smokeCreatureID = 60406


-- custom stuff for this scene
function SpawnFire( x, y, z, scale )

	local fireSet = { }
	fireSet.bunny = SpawnActor( fireBunnyCreatureID, x, y, z, 0, scale )
	fireSet.fire = SpawnActor( fireCreatureID, x, y, z, 0, scale )
	fireSet.smoke = SpawnActor( smokeCreatureID, x, y, z, 0, scale )
	
	-- start with smokes invisible
	fireSet.smoke:Fade(0, 0)

	return fireSet

end

function SpawnSmoke( x, y, z, scale )

	-- visible smoke
	local smoke = SpawnActor( smokeCreatureID, x, y, z, 0, scale )
	return smoke

end

function PutOutFire( fire )

	fire.fire:Fade( 0, 1 ) -- fire fade out
	fire.smoke:Fade( 1, 3 ) -- smoke  fade in

end
"
41,Cinematic Framework ,"
-- default all cinematics to non relative
scene:SetRelativeCoords(false) -- set to absolute worlld coords

function Wait( time )
	scene:WaitTimer( time )
end

--
-- RunToLocation( actor, speed, x, y, z, facing [default = direction of travel] )
--   Run actor to location at speed
--
function RunToLocation( actor, speed, x, y, z, facing, dontWait )

	local destPos = Vector:New(x, y, z)
	
	local currPos = actor:GetPosition()
	local offset = currPos - destPos
	local distance = offset:Magnitude()

	local travelTime = distance / speed
	
	if ( dontWait and ( dontWait == true ) ) then
		actor:MoveToAbs( destPos, travelTime );
	else
		actor:WaitMoveToAbs( destPos, travelTime )
	end

	if facing then
		actor:SetFacing( facing )
	end

end


--
-- MoveWithinCertainDistanceOfPlayer( actor, moveToDistance, speed )
--   Move an actor to within [moveToDistance] of the player who created the scene at [speed].
--
function MoveWithinCertainDistanceOfPlayer( actor, moveToDistance, speed )
	speed = speed or 10

	local actorPos = actor:GetPosition()
	local playerData = scene:GetActivePlayerDisplay()
	local playerPos = playerData:GetPosition()

	local offset = playerPos - actorPos
	local distance = offset:Magnitude()
	if (distance > moveToDistance) then
		local normalizedOffset = offset * (1/distance)
		local targetPos = playerPos - normalizedOffset*moveToDistance
		actor:MoveToAbs(targetPos, (distance - moveToDistance) / speed)
	end
end

--
-- CastSpellAtActor( caster, target, spellID, faceTarget [default = false] )
--   Cast a spell at the target actor
--
function CastSpellAtActor( caster, target, spellID, faceTarget )

	-- turn to face the target if required
	if faceTarget and faceTarget == true then
		caster:SetFacingToTarget( target, Vector:New() )
		scene:WaitTimer( 0.75 )
	end

	caster:CastSpell( spellID, target )
	
	if faceTarget and faceTarget == true then
		caster:ClearFacing()
	end

end

--
-- PlayLoopingSplitBodyAnim( actor, anim )
--   Play a looping animation on the actor
--
function PlayLoopingSplitBodyAnim( actor, anim )

	actor:PlayLoopingSplitBodyAnim( anim )

end

--
-- StopLoopingSplitBodyAnim( actor )
--   Stop playing a looping animation on the actor
--
function StopLoopingSplitBodyAnim( actor )

	actor:PlayLoopingSplitBodyAnim( anim )

end

--
-- PlayOneShotSplitBodyAnim( actor, anim )
--   Play a looping animation on the actor
--
function PlayOneShotSplitBodyAnim( actor, anim )

	actor:PlayOneShotSplitBodyAnim( anim )

end

--
-- StopLoopingSplitBodyAnim( actor )
--   Stop the looping anim kit currently playing on the actor
--
function StopLoopingSplitBodyAnim( actor )

	actor:StopAnimKit( AnimKits.LoopingSplitBody )

end

--
-- FadeOut( actor, fadeTime [ default = 2 ] )
--   Fade the actor out over fadeTime seconds
--
function FadeOut( actor, fadeTime )

	if not fadeTime then
		fadeTime = 2
	end

	actor:Fade( 0, fadeTime )

end

--
-- FadeIn( actor, fadeTime [ default = 0.5 ] )
--   Fade the actor in over fadeTime seconds
--
function FadeIn( actor, fadeTime )

	if not fadeTime then
		fadeTime = 0.5
	end

	actor:Fade( 1, fadeTime )

end

Triggers = { }
function SendTrigger( triggerName )
	Triggers[triggerName] = true
end

function WaitForTrigger( triggerName )

	local waitCondition = function()
		return (Triggers[triggerName] == true)
	end
	scene:WaitCondition(waitCondition)
end

function Actor:FollowPathAtSpeed( pathID, speed, roll, animKitID )
	local moveData = MoveData:Default()
	moveData.pathID = pathID
	moveData.speed = speed

	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.None

	if ( roll == true ) then
		moveData.rollControl = MoveRotControl.Angle
	else
		"
47,Global Constants - Animation,"
-- Useful Anim Kit IDs
AnimKits =
{
	OneShotSplitBody		= 2127;
	OneShotUpperBody		= 2128;
	OneShotFullBody			= 2129;
	OneShotFullBodyLow		= 2813;
	LoopingSplitBody		= 2130;
	LoopingUpperBody		= 2131;
	LoopingFullBody			= 2132;
	LoopingSplitBodyRide	= 4039;
}

-- matches the AnimKitBoneSet table
AnimKitBoneSets =
{
	Default = -1;
	FullBody = 0;
	UpperBody = 1;
	RightShoulder = 2;
	LeftShoulder = 3;
	Head = 4;
	RightArm = 5;
	LeftArm = 6;
	RightHand = 7;
	LeftHand = 8;
	Jaw = 9;
}

-- Construct an animation table out of the 5 individual anim tables
-- When we have removed the 4000 character limit we can eliminate this step

Animations = { }

function AddToAnimTable(subTable)
	for animName, id in pairs(subTable) do
		Animations[animName] = id
	end
end

AddToAnimTable(AnimTable1)
AddToAnimTable(AnimTable2)
AddToAnimTable(AnimTable3)
AddToAnimTable(AnimTable4)

-- avoid duplicate memory
AnimTable1 = nil
AnimTable2 = nil
AnimTable3 = nil
AnimTable4 = nil
"
49,Kun Lai Summit - Horde Hub Swap Scene - Worker 03 - JSB,"
-- tower fire panda
-- wait a little before running in
Wait(3)
FadeIn( panda03, 1 )

-- run to the tents
RunToLocation( panda03, 5.5, 2294.56, 906.778, 480.939, 346.291 )


Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda03, fire10.bunny, throwBucketSpellID )

-- wait for missile to hit
-- Wait(2)
PutOutFire( fire10, smokeFadeOutTime )
PutOutFire( fire05, smokeFadeOutTime )
PutOutFire( fire06, smokeFadeOutTime )
PutOutFire( fire09, smokeFadeOutTime )
PutOutFire( fire17, smokeFadeOutTime )

Wait(1)

RunToLocation( panda03, 3, 2286.12, 903.9, 481.107, 204.091 )

PlayLoopingSplitBodyAnim( panda03, Animations.EmoteWork )

-- Wait(2)

FadeOut( fire10.smoke )
FadeOut( fire05.smoke )
FadeOut( fire06.smoke )
FadeOut( fire09.smoke )
FadeOut( fire17.smoke )

FadeIn( workDust04, 5 )
FadeIn( workDust06, 5 )

-- nazgrim trigger
WaitForTrigger( ""flagPlant"" )

Wait(1)

StopLoopingSplitBodyAnim( panda03 )

Wait(10)

panda03: Despawn()"
50,Kun Lai Summit - Horde Hub Swap Scene - Worker 04 - JSB,"
-- northern banner panda
-- wait a little before running in
Wait(10)
FadeIn( panda04, 1 )

-- run to north post
RunToLocation( panda04, 5.5, 2294.89, 972.168, 484.038, 262.369 )


Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda04, fire01.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire01, smokeFadeOutTime )
PutOutFire( fire15, smokeFadeOutTime )

Wait(1)

RunToLocation( panda04, 5, 2295.67, 968.115, 484.196, 257.869 )

PlayLoopingSplitBodyAnim( panda04, Animations.EmoteWork )

Wait(2)

FadeOut( fire01.smoke )
FadeOut( fire15.smoke )"
51,Kun Lai Summit - Horde Hub Swap Scene - Worker 05 - JSB,"
-- large tent panda
-- wait a little before running in
Wait(2)
FadeIn( panda05, 1 )

-- run to the tents
RunToLocation( panda05, 5.5, 2279.65, 959.75, 481.641, 287.309 )
RunToLocation( panda05, 5.5, 2269.5, 922.868, 481.587, 273.584 )

Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda05, fire11.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(3.5)
PutOutFire( fire11, smokeFadeOutTime )
PutOutFire( fire07, smokeFadeOutTime )
PutOutFire( fire12, smokeFadeOutTime )
PutOutFire( fire13, smokeFadeOutTime )

Wait(1)

RunToLocation( panda05, 3, 2268.36, 914.467, 481.184, 210.584 )

PlayLoopingSplitBodyAnim( panda05, Animations.EmoteWork )

Wait(2)

FadeOut( fire11.smoke )
FadeOut( fire07.smoke )
FadeOut( fire12.smoke )
FadeOut( fire13.smoke )

-- Wait(1)

FadeIn( workDust03, 5 )

WaitForTrigger( ""flagPlant"" )

Wait(1.5)

StopLoopingSplitBodyAnim( panda05 )

RunToLocation( panda05, 3, 2256.42, 939.436, 481.148, 126.017 )
panda05: Despawn()"
54,Kun Lai Summit - Horde Hub Swap Scene - Worker 06 - JSB,"
-- off-screen panda
-- wait a little before running in
Wait(2)
FadeIn( panda06, 1 )

-- run to the tents
RunToLocation( panda06, 5.5, 2246.38, 937.082, 481.146, 302.191 )

Wait(1)

-- throw bucket at tents
-- CastSpellAtActor( panda06, fire11.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire18, smokeFadeOutTime )
PutOutFire( fire19, smokeFadeOutTime )
PutOutFire( fire20, smokeFadeOutTime )
PutOutFire( fire21, smokeFadeOutTime )
PutOutFire( fire22, smokeFadeOutTime )
PutOutFire( fire23, smokeFadeOutTime )
PutOutFire( fire24, smokeFadeOutTime )

Wait(3)

RunToLocation( panda06, 3, 2256.22, 910.613, 481.148, 327.391 )

PlayLoopingSplitBodyAnim( panda06, Animations.EmoteWork )

Wait(3)

FadeOut( fire18.smoke )
FadeOut( fire19.smoke )
FadeOut( fire20.smoke )
FadeOut( fire21.smoke )
FadeOut( fire22.smoke )
FadeOut( fire23.smoke )
FadeOut( fire24.smoke )

-- nazgrim trigger
WaitForTrigger( ""flagPlant"" )

Wait(1)

StopLoopingSplitBodyAnim( panda06 )

RunToLocation( panda06, 3, 2254.1, 944.32, 481.123, 104.867 )
panda06: Despawn()
"
57,Kun Lai Summit - Horde Hub Swap Scene - Init - Named Actors - JSB,"
-- Spawn all actors
nazgrimCreatureID = 60149
kirynCreatureID = 60592
bannerCreatureID = 60574
nazgrim01 = SpawnActor( nazgrimCreatureID, 2284.16, 980.726, 483.094, 266.8 ) -- Nazgrim
kiryn01 = SpawnActor( kirynCreatureID, 2287.65, 982.313, 483.283, 70 ) -- Kiryn
banner01 = SpawnActor( bannerCreatureID, 2284.02, 917.727, 481.979, 345 ) -- Banner

-- Initial fade
FadeOut( nazgrim01, 0 )
FadeOut( kiryn01, 0 )
FadeOut( banner01, 0 )
FadeOut( clone, 0 )"
58,Kun Lai Summit - Horde Hub Swap Scene - Nazgrim 01 - JSB,"

-- wait before running in
Wait(18)


clone:StopSoundKit(33002)

Wait(2)

FadeIn( nazgrim01, 5 )

-- run to tent
-- RunToLocation( nazgrim01, 5, 2284.52, 921.019, 481.976, 272 )


RunToLocation( nazgrim01, 6, 2284.52, 921.019, 481.976, 272 )

Wait(1)

-- plant banner - NEED EMOTE HERE
-- CastSpellAtActor( panda01, fire03.bunny, throwBucketSpellID )

-- RunToLocation( clone, 5, 2271.47, 909.58, 481.131, 264.167 )

-- tent swap



nazgrim01:PlaySoundKitStereo(33159, true)

PlayOneShotSplitBodyAnim( nazgrim01, Animations.Attack1H )


Wait(0.5)
FadeIn( banner01, 0 )

FadeIn( tent04, 1 )
FadeIn( tent05, 1 )
FadeIn( tent06, 1 )
FadeOut( tent01, 0 )
FadeOut( tent02, 0 )
FadeOut( tent03, 0 )

Wait(1)

FadeOut( workDust01, 2 )
FadeOut( workDust02, 2 )
FadeOut( workDust03, 2 )
FadeOut( workDust04, 2 )
FadeOut( workDust05, 2 )
FadeOut( workDust06, 2 )

SendTrigger( ""flagPlant"" )

-- walk to tent
RunToLocation( nazgrim01, 3, 2273.15, 914.13, 481.287, 262.367 )
RunToLocation( nazgrim01, 3, 2272.32, 907.589, 481.128, 273.167 )
RunToLocation( nazgrim01, 3, 2272.157, 896.843, 481.231, 100 )


"
59,Kun Lai Summit - Horde Hub Swap Scene - Init - Generic Actors 02 - JSB,"
-- Spawn Dust Clouds
workDustModel = ""spells\\xplosion_dust_impact_noflash.m2""
workDust01 = SpawnModelActor( workDustModel, 2298.7, 950.208, 481.153, 126.691 )
workDust02 = SpawnModelActor( workDustModel, 2305.26, 935.646, 481.217, 2.49143 )
workDust03 = SpawnModelActor( workDustModel, 2267.43, 910.647, 481.253, 199.366, 2 )
workDust04 = SpawnModelActor( workDustModel, 2279.81, 904.865, 482.649, 61.441 )
workDust05 = SpawnModelActor( workDustModel, 2304.87, 952.176, 481.153, 37.365 )
workDust06 = SpawnModelActor( workDustModel, 2276.11, 901.96, 492.636, 237.166, 3 )

FadeOut( workDust01, 0 )
FadeOut( workDust02, 0 )
FadeOut( workDust03, 0 )
FadeOut( workDust04, 0 )
FadeOut( workDust05, 0 )
FadeOut( workDust06, 0 )"
60,Kun Lai Summit - Horde Hub Swap Scene - Kiryn 01 - JSB,"
-- wait before running in
Wait(22)

FadeIn( kiryn01, 0 )

-- run into scene
RunToLocation( kiryn01, 5, 2284.09, 957.011, 481.36, 248.193 )
RunToLocation( kiryn01, 5, 2271.45, 940.75, 481.629, 300 )

-- nazgrim trigger
WaitForTrigger( ""flagPlant"" )

Wait(1)

PlayOneShotSplitBodyAnim( kiryn01, Animations.EmoteCheer )

Wait(2.5)

PlayOneShotSplitBodyAnim( kiryn01, Animations.EmoteApplaud )

Wait(10)
kiryn01: Despawn()"
61,Global Functions - Actor Movement,"--
-- Movement Helper Functions
--
function Actor:WaitMovementComplete()
	local waitCondition = function()
		return not self:IsMoving()
	end
	self:WaitCondition(waitCondition)
end

function Actor:WaitMoveToRel(...)
	self:MoveToRel(...)
	self:WaitMovementComplete()
end

function Actor:WaitMoveSplineRel(...)
	self:MoveSplineRel(...)
	self:WaitMovementComplete()
end

function Actor:WaitMoveToAbs(...)
	self:MoveToAbs(...)
	self:WaitMovementComplete()
end

function Actor:WaitMoveSplineAbs(...)
	self:MoveSplineAbs(...)
	self:WaitMovementComplete()
end

function Actor:WaitMove(...)
	self:Move(...)
	self:WaitMovementComplete()
end

function Actor:JumpToAbs(target, time, gravity)
	if ((not target) or (not time) or (time < 0.01)) then
		return
	end
	if ((not gravity) or (gravity < 0.01)) then
		gravity = 9.8
	end

	local startPos = self:GetPosition()
	local offset = target - startPos
	local flatDir = Vector:New(offset.x, offset.y)
	local horizDist = flatDir:Magnitude()
	if (horizDist < 0.01) then
		return
	end
	
	-- normalize
	flatDir = flatDir * (1.0 / horizDist)

	local vertDist = offset.z

	-- equations of motion are
	-- x(t) = Vx*t
	-- y(t) = -0.5*g*t*t + V0y*t
	
	local horizV = horizDist/time
	local vertV = 0.5*gravity*time + vertDist/time

	-- construct spline points
	local numPoints = 8
	local jumpData = MoveData:Default(numPoints)
	jumpData.posControl = MovePosControl.PointTime;
	jumpData.yawControl = MoveRotControl.Tangent;
	jumpData.animKitID = 3566

	for i = 1,numPoints do
		local t = time*i/numPoints
		local horiz = horizV*t
		local vert = -0.5*gravity*t*t + vertV*t

		jumpData.points[i].time = t
		jumpData.points[i].pos = startPos + flatDir*horiz + Vector:New(0,0,vert)
	end

	self:SetSnapToGround(false)
	self:Move(jumpData)
end

function Actor:WaitJumpToAbs(...)
	self:JumpToAbs(...)
	self:WaitMovementComplete()
	self:SetSnapToGround(true)
end

--
-- Actor Move Data
--
function MovePoint:Default()
	local p =
	{
		pos = Vector:New();
		lookAt = Vector:New();
		time = 0.0;
		speed = 1.0;
		yaw = 0.0;
		pitch = 0.0;
		roll = 0.0;
	}
	setmetatable(p, self.__meta)
	return p
end

function MoveData:Default(numPoints)
	local d =
	{
		isRelative = false;
		isGroundSnapping = false;
		teleportToFirstPoint = false;
		forceGroundSnapPositionZ = false;
		noDefaultAnimation = false;
		animKitID = 0;
		posControl = MovePosControl.TotalTime;
		yawControl = MoveRotControl.None;
		pitchControl = MoveRotControl.None;
		rollControl = MoveRotControl.None;
		time = 0.0;
		speed = 1.0;
		points = { };
		pathID = 0;
	}
	if (numPoints and numPoints > 0) then
		for i = 1,numPoints do
			table.insert(d.points, MovePoint:Default())
		end
	end

	setmetatable(d, self.__meta)
	return d
end

local holdYawPitchRollMoveData
function Actor:HoldYawPitchRoll(yaw, pitch, roll, holdTime, blendInTime, blendOutTime)

	if not holdYawPitchRollMoveData then
		holdYawPitchRollMoveData = MoveData:Default(5)
		holdYawPitchRollMoveData.posControl = MovePosControl.PointTime
		holdYawPitchRollMoveData.yawControl = MoveRotControl.Angle
		holdYawPitchRollMoveData.pitchControl = MoveRotControl.Angle
		holdYawPitchRollMoveData.rollControl = MoveRotControl.Angle
		holdYawPitchRollMoveData.noDefaultAnimation = true
	end

	-- defaults
	yaw = yaw or 0
	pitch = pitch or 0
	roll = roll or 0
	blendInTime = blendInTime or 0
	belndOutTime = blendOutTime or 0
	holdTime = holdTime or 100000 -- 'forever'

	local transform = self:GetTransform()

	-- build a spline so that we get a straight line segment
	for i=1,4 do
		holdYawPitchRollMoveData.points[i].pos = transform.position
		holdYawPitchRollMoveData.points[i].yaw = yaw
		holdYawPitchRollMoveData.points[i].pitch = pitch
		holdYawPitchRollMoveData.points[i].roll = roll
	end

	"
62,Global Functions - Actor Animation,"--
-- Actor Anim Kit Data
--
if (not AnimKitData) then
	AnimKitData = { }
	AnimKitBlendType = { }
	AnimKitSpeedType = { }
end

function AnimKitData:Default()
	local d =
	{
		animKitID = 0;
		isMaintained = false;
		animOverride = Animations.None;
		boneSetIDOverride = AnimKitBoneSets.Default;
		variationOverride = -1;	-- -1 indicates randomly pick variations
		startTimeOverrideMS = 0;
		startTimeOverrideProgress = 0;
		blendOverrideType = AnimKitBlendType.None or 0;
		blendOverrideMS = 0;
		speedOverrideType = AnimKitSpeedType.None or 0;
		speedOverrideValue = 0;
	}

	setmetatable(d, self.__meta)
	return d
end


--
-- Animation Helper Functions
--
function Actor:PlayLoopingAnimKit(animKitID)	return self:PlayAnimKit(animKitID, true, Animations.None)			end
function Actor:PlayLoopingSplitBodyAnim(anim)	return self:PlayAnimKit(AnimKits.LoopingSplitBody, false, anim)		end
function Actor:PlayLoopingUpperBodyAnim(anim)	return self:PlayAnimKit(AnimKits.LoopingUpperBody, false, anim)		end
function Actor:PlayLoopingFullBodyAnim(anim)	return self:PlayAnimKit(AnimKits.LoopingFullBody, false, anim)		end

function Actor:StopLoopingSplitBodyAnim()		return self:StopAnimKit(AnimKits.LoopingSplitBody)					end
function Actor:StopLoopingUpperBodyAnim()		return self:StopAnimKit(AnimKits.LoopingUpperBody)					end
function Actor:StopLoopingFullBodyAnim()		return self:StopAnimKit(AnimKits.LoopingFullBody)					end

function Actor:PlayOneShotAnimKit(animKitID)	return self:PlayAnimKit(animKitID, false, Animations.None)			end
function Actor:PlayOneShotSplitBodyAnim(anim)	return self:PlayAnimKit(AnimKits.OneShotSplitBody, true, anim)		end
function Actor:PlayOneShotUpperBodyAnim(anim)	return self:PlayAnimKit(AnimKits.OneShotUpperBody, true, anim)		end
function Actor:PlayOneShotFullBodyAnim(anim)	return self:PlayAnimKit(AnimKits.OneShotFullBody, true, anim)		end

function Actor:WaitAnimKitComplete(animKit)
	if not animKit then
		return
	end
	local waitCondition = function()
		return animKit:IsStopped()
	end
	self:WaitCondition(waitCondition)
end

function Actor:WaitPlayOneShotAnimKit(animKitID)	self:WaitAnimKitComplete(self:PlayAnimKit(animKitID, false, Animations.None))		end
function Actor:WaitPlayOneShotSplitBodyAnim(anim)	self:WaitAnimKitComplete(self:PlayAnimKit(AnimKits.OneShotSplitBody, true, anim))	end
function Actor:WaitPlayOneShotUpperBodyAnim(anim)	self:WaitAnimKitComplete(self:PlayAnimKit(AnimKits.OneShotUpperBody, true, anim))	end
function Actor:WaitPlayOneShotFullBodyAnim(anim)	self:WaitAnimKitComplete(self:PlayAnimKit(AnimKits.OneShotFullBody, true, anim))	end
"
67,Townlong Steppes - Ring worm Intro - Init,"
local RingWormBossID = 62324
local BurrowBunnyID = 62363
RingWormBoss = SpawnActor( RingWormBossID, 1207.9, 2818.9, 264.736, 0, 1.0, false )
BurrowBunny = SpawnActor( BurrowBunnyID, 1211.57, 2818.17, 264.24, 0, 1.0, false )"
68,Townlong Steppes - Ring worm Intro - Camera,"
scene:WaitTimer(1)

scene:SetCamera(400,8,nil,nil) -- (camera, transition time, primary target, secondary target)
scene:WaitTimer(9)
scene:SetCamera(0,4,nil,nil) -- sets camera back to game-cam
scene:WaitTimer(4)"
69,Townlong Steppes - Ring worm Intro - Bunny 01,"
-- small tent panda 01
-- wait a little before running in
FadeOut( RingWormBoss, 0 )
BurrowBunny:PlaySpellStateVisual(27282)
Wait(1)
RingWormBoss:PlayLoopingAnimKit(1125) 
FadeIn( RingWormBoss, 0 )
Wait(3)
RingWormBoss:PlayOneShotAnimKit(1789)
RingWormBoss:StopAnimKit(1125)
Wait(2)
FadeOut( BurrowBunny, 1 )"
70,Kun Lai Summit - Alliance Hub Swap Scene - Init - Generic Actors 01 - JSB,"
smokeFadeOutTime = 10
throwBucketSpellID = 115882

-- Spawn all tents
smallPandaTentCreatureID = 60522
largePandaTentCreatureID = 60525
smallAllianceTentCreatureID = 60820
largeAllianceTentCreatureID = 60821
tent01 = SpawnActor( smallPandaTentCreatureID, 2152.409, 1501.663, 487.742, 268.5 ) -- PANDA small tent 01
tent02 = SpawnActor( smallPandaTentCreatureID, 2138.757, 1500.734, 487.761, 284.5 ) -- PANDA small tent 02
tent03 = SpawnActor( smallPandaTentCreatureID, 2148.100, 1435.750, 487.660, 108.5 ) -- PANDA small tent 03
tent04 = SpawnActor( largePandaTentCreatureID, 2168.000, 1472.986, 486.8, 211.5, 1.1, false ) -- PANDA Large tent
tent05 = SpawnActor( smallAllianceTentCreatureID, 2152.409, 1501.663, 487.742, 268.5 ) -- ALLIANCE small tent 01
tent06 = SpawnActor( smallAllianceTentCreatureID, 2138.757, 1500.734, 487.761, 284.5 ) -- ALLIANCE small tent 02
tent07 = SpawnActor( smallAllianceTentCreatureID, 2148.100, 1435.750, 487.660, 108.5 ) -- ALLIANCE small tent 03
tent08 = SpawnActor( largeAllianceTentCreatureID, 2168.000, 1472.986, 486.8, 211.5, 1.1, false ) -- ALLIANCE Large tent
FadeOut( tent05, 0 )
FadeOut( tent06, 0 )
FadeOut( tent07, 0 )
FadeOut( tent08, 0 )

-- Spawn all worker pandas
pandaCreatureID = 60152
panda01 = SpawnActor( pandaCreatureID, 2103.91, 1417.33, 484.7, 74.5427 )
panda02 = SpawnActor( pandaCreatureID, 2096.83, 1418.82, 483.977, 68.0177 )
panda03 = SpawnActor( pandaCreatureID, 2098.09, 1414.32, 484.135, 51.8177 )
panda04 = SpawnActor( pandaCreatureID, 2103.89, 1412.06, 484.121, 65.5426 )
panda05 = SpawnActor( pandaCreatureID, 2087.87, 1438.84, 484.083, 119.093 )
panda06 = SpawnActor( pandaCreatureID, 2099.66, 1417.14, 484.388, 53.8431 )
FadeOut( panda01, 0 )
FadeOut( panda02, 0 )
FadeOut( panda03, 0 )
FadeOut( panda04, 0 )
FadeOut( panda05, 0 )
FadeOut( panda06, 0 )

-- Spawn all the fires to be put out
-- SpawnFire( x, y, z, scale )
fire01 = SpawnFire( 2159.96, 1476.05, 487.886, 3 ) -- Large panda tent, 3x fire
fire02 = SpawnFire( 2168.71, 1476.88, 487.886, 3 ) -- Large panda tent, 3x fire
fire03 = SpawnFire( 2110.28, 1485.25, 487.913, 3 ) -- Near Tower, 3x fire
fire04 = SpawnFire( 2122.64, 1493.68, 515.617, 3 ) -- Tower, 3x fire
fire05 = SpawnFire( 2125.73, 1490.26, 509.835, 1 ) -- Tower, 1x fire
fire06 = SpawnFire( 2122.71, 1496.35, 501.108, 1 ) -- Tower, 1x fire
fire07 = SpawnFire( 2124.03, 1491.26, 488.064, 1 ) -- Tower, 1x fire
fire08 = SpawnFire( 2143.5, 1508.59, 487.921, 1 ) -- Small Tents, 1x fire
fire09 = SpawnFire( 2138.67, 1499.58, 493.044, 1 ) -- Small Tents, 1x fire 
fire10 = SpawnFire( 2150.04, 1498.04, 490.246, 1 ) -- Small Tents, 1x fire 
fire11 = SpawnFire( 2120.79, 1483.48, 497.618, 1 ) -- Tower, 1x fire
fire12 = SpawnFire( 2176.27, 1470.22, 487.886, 1 ) -- Large panda tent, 1x fire
fire13 = SpawnFire( 2101.56, 1457.59, 487.886, 1 ) -- Banners, 1x fire
fire14 = SpawnFire( 2147.09, 1439, 487.886, 1 ) -- Small Tent, 1x fire
fire15 = SpawnFire( 2124.7, 1434.41, 490.16, 0.5 ) -- Banner, 0.5x fire
fire16 = SpawnFire( 2143.98, 1427.61, 487.886, 0.5 ) -- Small Tent, 0.5x fire
fire17 = SpawnFire( 2140.25, 1436.31, 488.941, 0.5 ) -- Small Tent, 0.5x fire
fire18 = SpawnFire( 2136.92, 1450.06, 488.658, 0.5 ) -- Bonfire, 0.5x fire
fire19 = SpawnFire( 2136.95, 1425.65, 487.886, 0.5 ) -- Banner, 0.5x fire
fire20 = SpawnFire( 2158.72, 1435.44, 489.272, 0.5 ) -- Small Tent, 0.5x fire
fire21 = SpawnFire( 2163.96, 1437.02, 489.037, 0.5 ) -- Small Tent, 0.5x fire
fire22 = SpawnFire( 2177.94, 1444.31, 487.903, 0.5 ) -- Small Tent, 0.5x fire
fire23 = SpawnFire( 2154.34, 1464.3, 509.851, 0.5 ) -- Large panda tent, 0.5x fire

-- player clone
playerCloneCreatureID = 65247
clone = SpawnActivePlayerCloneActor( 2099.16, 1431.96, 486.184, 41.5521 ) -- Player Clone
FadeOut( clone, 0 )"
71,Kun Lai Summit - Alliance Hub Swap Scene - Init - Generic Actors 02 - JSB,"
-- Spawn Dust Clouds
workDustModel = ""spells\\xplosion_dust_impact_noflash.m2""
workDust01 = SpawnModelActor( workDustModel, 2147.85, 1436.33, 487.886, 126.691, 1.5 ) -- Smal Tent
workDust02 = SpawnModelActor( workDustModel, 2139.15, 1499.97, 487.886, 2.49143, 1.5 ) -- Small Tents
workDust03 = SpawnModelActor( workDustModel, 2158.62, 1472.41, 487.886, 217.141, 2 ) -- Large Tent LEFT
workDust04 = SpawnModelActor( workDustModel, 2153.06, 1501.22, 487.886, 61.441, 1.5 ) -- Small Tents
workDust05 = SpawnModelActor( workDustModel, 2146.45, 1502.85, 487.886, 37.365, 1.5 ) -- Small Tents
workDust06 = SpawnModelActor( workDustModel, 2165.57, 1466.66, 487.886, 217.366, 3 ) -- Large Tent RIGHT

FadeOut( workDust01, 0 )
FadeOut( workDust02, 0 )
FadeOut( workDust03, 0 )
FadeOut( workDust04, 0 )
FadeOut( workDust05, 0 )
FadeOut( workDust06, 0 )
"
72,Kun Lai Summit - Alliance Hub Swap Scene - Init - Named Actors - JSB,"
-- Spawn all actors
taylorCreatureID = 60828
mishkaCreatureID = 60829
sullyCreatureID = 60861
bannerCreatureID = 60830
taylor01 = SpawnActor( taylorCreatureID, 2096.16, 1417.78, 483.821, 58 ) -- Taylor
mishka01 = SpawnActor( mishkaCreatureID, 2106.12, 1417.89, 484.903, 58 ) -- Mishka
sully01 = SpawnActor( sullyCreatureID, 2108.15, 1429.34, 486.384, 58 ) -- Sully
banner01 = SpawnActor( bannerCreatureID, 2144.02, 1472.73, 487.886, 214 ) -- Banner

-- Initial fade
FadeOut( taylor01, 0 )
FadeOut( mishka01, 0 )
FadeOut( sully01, 0 )
FadeOut( banner01, 0 )
"
73,Kun Lai Summit - Alliance Hub Swap Scene - Master Script - JSB,"
scene:WaitTimer(1)

-- set scene fade region
scene:SetFadeRegion(100, true)

scene:WaitTimer(1)

scene:SetCamera(314,0,nil,nil) -- (camera, transition time, primary target, secondary target)
scene:SetCamera(315,26,nil,nil)



scene:WaitTimer(18) --was 28
scene:SetCamera(326,25,nil,nil)

scene:WaitTimer(18) --was 28

scene:SetCamera(327,10,nil,nil)

scene:WaitTimer(13)

scene:SetCamera(0,2,nil,nil) -- sets camera back to game-cam
scene:SetFadeRegion(0, false)"
74,Kun Lai Summit - Alliance Hub Swap Scene - Worker 01 - JSB,"
-- small tent panda 01
-- wait a little before running in
Wait(2)
FadeIn( panda01, 1 )

-- run to the tents
RunToLocation( panda01, 5.5, 2124.77, 1439.72, 487.887, 13.4 )
RunToLocation( panda01, 5.5, 2142.83, 1443.31, 487.887, 311.3 )

Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda01, fire14.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire14 )
PutOutFire( fire16 )
PutOutFire( fire17 )
PutOutFire( fire20 )
PutOutFire( fire21 )
PutOutFire( fire22 )
PutOutFire( fire18 )
PutOutFire( fire19 )

Wait(1)

RunToLocation( panda01, 3, 2142.27, 1441.6, 487.886, 319.625 )

PlayLoopingSplitBodyAnim( panda01, Animations.EmoteWork )

Wait(2)

FadeOut( fire14.smoke )
FadeOut( fire16.smoke )
FadeOut( fire17.smoke )
FadeOut( fire20.smoke )
FadeOut( fire21.smoke )
FadeOut( fire22.smoke )
FadeOut( fire18.smoke )
FadeOut( fire19.smoke )

Wait(1)

FadeIn( workDust01, 5 )

-- taylor trigger
WaitForTrigger( ""flagPlant"" )

Wait(1)

StopLoopingSplitBodyAnim( panda01 )

RunToLocation( panda01, 3, 2110.84, 1445.04, 487.89, 149 )
panda01: Despawn()
"
75,Kun Lai Summit - Alliance Hub Swap Scene - Worker 02 - JSB,"
-- small tents panda 02
-- wait a little before running in
Wait(1)
FadeIn( panda02, 1 )

-- run to the tents
-- RunToLocation( panda02, 5.5, 2129.01, 1466.96, 487.886, 47.8317 )
RunToLocation( panda02, 5.5, 2152.03, 1484.51, 487.886, 91.0317 )

Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda02, fire10.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire09, smokeFadeOutTime )
PutOutFire( fire08, smokeFadeOutTime )
PutOutFire( fire10, smokeFadeOutTime )

Wait(1)

RunToLocation( panda02, 3, 2149.38, 1493.51, 487.886, 86.5315 )

PlayLoopingSplitBodyAnim( panda02, Animations.EmoteWork )

Wait(2)

FadeOut( fire09.smoke )
FadeOut( fire08.smoke )
FadeOut( fire10.smoke )

Wait(1)

FadeIn( workDust02, 5 )
FadeIn( workDust04, 5 )
FadeIn( workDust05, 5 )


WaitForTrigger( ""flagPlant"" )

Wait(2)

StopLoopingSplitBodyAnim( panda02 )

RunToLocation( panda02, 3, 2161.75, 1492.9, 487.886, 87.4315 )
RunToLocation( panda02, 3, 2166.38, 1522.54, 494.402, 78.4314 )
panda02: Despawn()
"
76,Kun Lai Summit - Alliance Hub Swap Scene - Worker 03 - JSB,"
-- tower fire panda
-- wait a little before running in
Wait(3)
FadeIn( panda03, 1 )

-- run to the tents
RunToLocation( panda03, 5.5, 2119.68, 1473.66, 487.886, 98.231 )


Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda03, fire03.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire03, smokeFadeOutTime )
PutOutFire( fire05, smokeFadeOutTime )
PutOutFire( fire06, smokeFadeOutTime )
PutOutFire( fire04, smokeFadeOutTime )
PutOutFire( fire11, smokeFadeOutTime )
PutOutFire( fire07, smokeFadeOutTime )

Wait(1)

RunToLocation( panda03, 3, 2148.77, 1477.56, 487.887, 339.207 )

PlayLoopingSplitBodyAnim( panda03, Animations.EmoteWork )

-- Wait(2)

FadeOut( fire03.smoke )
FadeOut( fire05.smoke )
FadeOut( fire06.smoke )
FadeOut( fire04.smoke )
FadeOut( fire11.smoke )
FadeOut( fire07.smoke )

FadeIn( workDust03, 5 )

-- nazgrim trigger
WaitForTrigger( ""flagPlant"" )

Wait(1)

StopLoopingSplitBodyAnim( panda03 )

Wait(10)

panda03: Despawn()
"
77,Kun Lai Summit - Alliance Hub Swap Scene - Worker 04 - JSB,"
-- banner panda
-- wait a little before running in
Wait(10)
FadeIn( panda04, 1 )

-- run to north post
RunToLocation( panda04, 5.5, 2099.62, 1447.23, 487.911, 69.189 )


Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda04, fire13.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(2)
PutOutFire( fire13, smokeFadeOutTime )
PutOutFire( fire15, smokeFadeOutTime )

Wait(1)

RunToLocation( panda04, 5, 2098.87, 1447.92, 487.936, 123.639 )

PlayLoopingSplitBodyAnim( panda04, Animations.EmoteWork )

Wait(2)

FadeOut( fire13.smoke )
FadeOut( fire15.smoke )
"
78,Kun Lai Summit - Alliance Hub Swap Scene - Worker 05 - JSB,"
-- large tent panda
-- wait a little before running in
Wait(3)
FadeIn( panda05, 1 )

-- run to the tents
-- RunToLocation( panda05, 5.5, 2134.59, 1451.11, 487.886, 34.7651 )
RunToLocation( panda05, 5.5, 2152.82, 1462.71, 487.886, 30.484 )

Wait(1)

-- throw bucket at tents
CastSpellAtActor( panda05, fire01.bunny, throwBucketSpellID )

-- wait for missile to hit
Wait(3.5)
PutOutFire( fire01, smokeFadeOutTime )
PutOutFire( fire02, smokeFadeOutTime )
PutOutFire( fire12, smokeFadeOutTime )
PutOutFire( fire23, smokeFadeOutTime )

Wait(1)

RunToLocation( panda05, 3,  2159.28, 1460.91, 487.886, 5.73899 )

PlayLoopingSplitBodyAnim( panda05, Animations.EmoteWork )

Wait(2)

FadeOut( fire01.smoke )
FadeOut( fire02.smoke )
FadeOut( fire12.smoke )
FadeOut( fire23.smoke )

-- Wait(1)

FadeIn( workDust06, 5 )

WaitForTrigger( ""flagPlant"" )

Wait(6.5)

StopLoopingSplitBodyAnim( panda05 )

RunToLocation( panda05, 3, 2135.24, 1461.33, 487.886, 178.989 )
panda05: Despawn()
"
80,Kun Lai Summit - Alliance Hub Swap Scene - Taylor 01 - JSB,"
-- wait before running in
Wait(18)


clone:StopSoundKit(33002)

Wait(2)

FadeIn( taylor01, 5 )

-- run to tent
RunToLocation( taylor01, 5,  2141.59, 1470.78, 487.886, 44 )

Wait(1)

-- plant banner - NEED EMOTE HERE
-- CastSpellAtActor( panda01, fire03.bunny, throwBucketSpellID )


-- tent swap

taylor01:PlaySoundKitStereo(33160, true)

PlayOneShotSplitBodyAnim( taylor01, Animations.Attack1H )
Wait(0.5)
FadeIn( banner01, 0 )

FadeIn( tent05, 0 )
FadeIn( tent06, 0 )
FadeIn( tent07, 0 )
FadeIn( tent08, 0 )
FadeOut( tent01, 0 )
FadeOut( tent02, 0 )
FadeOut( tent03, 0 )
FadeOut( tent04, 0 )

Wait(1)

FadeOut( workDust01, 2 )
FadeOut( workDust02, 2 )
FadeOut( workDust03, 2 )
FadeOut( workDust04, 2 )
FadeOut( workDust05, 2 )
FadeOut( workDust06, 2 )

SendTrigger( ""flagPlant"" )

-- walk to tent
RunToLocation( taylor01, 3, 2149.99, 1464.34, 487.886, 2.649 )
RunToLocation( taylor01, 3, 2168.91, 1474.57, 487.886, 193 )
"
81,Kun Lai Summit - Alliance Hub Swap Scene - Mishka 01 - JSB,"
-- wait before running in
Wait(22)

FadeIn( mishka01, 0 )

-- run into scene
RunToLocation( mishka01, 5, 2117.27, 1453.24, 487.886, 41.1248 )
RunToLocation( mishka01, 3, 2124.83, 1468.99, 487.886, 14.7998 )

-- taylor trigger
WaitForTrigger( ""flagPlant"" )

Wait(1)

PlayOneShotSplitBodyAnim( mishka01, Animations.EmoteCheer )

Wait(2.5)

PlayOneShotSplitBodyAnim( mishka01, Animations.EmoteApplaud )

Wait(10)
mishka01: Despawn()
"
82,Kun Lai Summit - Alliance Hub Swap Scene - Sully 01 - JSB,"
-- wait before running in
Wait(24)

FadeIn( sully01, 0 )

-- run into scene
RunToLocation( sully01, 5, 2117.5, 1443.63, 487.887, 30.1199 )
RunToLocation( sully01, 3, 2136.57, 1454.03, 487.886, 13.4693 )

-- taylor trigger
WaitForTrigger( ""flagPlant"" )

Wait(2)

PlayOneShotSplitBodyAnim( sully01, Animations.EmoteCheer )

Wait(2.5)

PlayOneShotSplitBodyAnim( sully01, Animations.EmoteApplaud )

Wait(10)
mishka01: Despawn()
"
92,Kun Lai Summit - Reclaiming the Thunder God - Init - Generic Actors 01 - JSB,"
-- spawn clone
-- local cloneCreatureID = 61833
-- clone = SpawnActivePlayerCloneActor( 3633.26, 1787.4, 742.973, 355.452 )


-- spawn cho
local choCreatureID = 65561
cho = SpawnActor( choCreatureID, 3637.06, 1790.83, 742.973, 332.503 )


-- spawn thunder king
local tKingCreatureID = 65630
thunderKing = SpawnActor( tKingCreatureID, 3757.5, 1655.82, 748.963, 356, 2 )

-- Spawn Mogu Door
moguDoorCreatureID = 61129
moguDoor01 = SpawnActor( moguDoorCreatureID, 3674.03, 1657.67, 742.974, 173 ) -- mogu door

-- Spawn Priest
trollPriestCreatureID = 61075
trollPriest01 = SpawnActor( trollPriestCreatureID, 3605.16, 1622.07, 742.666, 85.6491 ) -- troll priest

FadeOut( trollPriest01, 0 )
FadeOut( cho, 0 )
-- FadeOut( clone, 0 )


-- Spawn Grunts

-- Spawn Grunt 01
trollGruntCreatureID = 61074

trollGrunt01 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt02 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt03 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt04 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt05 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt06 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt07 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt08 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt09 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt10 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt11 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt12 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt13 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt14 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt15 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt16 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt17 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt18 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt19 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt20 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt21 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt22 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt23 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt24 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt25 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt26 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt27 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt28 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt29 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt30 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt31 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt32 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt33 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt34 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt35 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
trollGrunt36 = "
93,Kun Lai Summit - Reclaiming the Thunder God - Init - Generic Actors 02 - JSB,"
-- Spawn Fire Wall
-- fireWallModel = ""WORLD\\EXPANSION03\\DOODADS\\GRIMBATOLRAID\\GrimBatolRaid_Fire_Wall_01.M2""
-- fireWall01 = SpawnModelActor( fireWallModel, 3617.5, 1754.9, 742.973, 45, 0.4 )

-- FadeOut( fireWall01, 0 )

-- Spawn Mogu Remains
-- moguRemainsModel = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\Mogu_Statue_02Broken_Piece01.M2""
-- moguRemains01 = SpawnModelActor( moguRemainsModel, 3759, 1655.91, 748.963, 180, 3 )

-- Spawn Mogu Statues
-- moguStatueModel = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\Mogu_Statue_Double.M2""
-- moguStatue01 = SpawnModelActor( moguStatueModel, 3739.53, 1657.26, 742.974, 180, 3 )

-- Spawn Mogu Effects
moguPulseModel = ""SPELLS\\BloodBolt_Chest.M2""
moguPulse01 = SpawnModelActor( moguPulseModel, 3755.71, 1656.08, 751, 3, false )

-- FadeOut( moguPulse01, 0)"
95,Kun Lai Summit - Reclaiming the Thunder God - Master Script - JSB,"

Wait(1.0)

scene:SetCamera(440,0,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait(1.0)


scene:SetCamera(441,4,nil,nil) -- (camera, transition time, primary target, secondary target)


Wait( 3.5 )

SetCameraFollowPath( 368, 4.5, 4071, 4073, 14 )

Wait( 11 )

scene:SetCamera(444,2,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 2.5 )

SetCameraFollowPath( 442, 2, 4081, nil, 5 )

Wait( 4.5 )

SetCameraFollowPath( 368, 2, 4093, 4094, 7 )

SendTrigger( ""cloneTrigger"" )

Wait( 5 )

scene:SetCamera(493,15,nil,nil)

Wait( 10 )

SetCameraFollowPath( 368, 2, 4127, 4128, 7 )

Wait( 7 )

scene:SetCamera(0,3,nil,nil) -- sets camera back to game-cam

Wait( 3 )

scene:EndScene()

-- scene:SetCamera(345,4,nil,nil) -- (camera, transition time, primary target, secondary target)


-- scene:WaitTimer(2)

-- scene:SetCamera(346,3,nil,nil)

-- scene:WaitTimer(2)

-- scene:SetCamera(347,2.2,nil,nil) -- down the hall

-- scene:WaitTimer(1.2)

-- scene:SetCamera(337,4,nil,nil) -- turn
-- scene:WaitTimer(1.5) -- wait for doors to open

-- scene:SetCamera(338,15,nil,nil)

-- scene:WaitTimer(5.5) 
-- scene:SetCamera(339,5,nil,nil)

-- scene:WaitTimer(2) 

-- scene:SetCamera(340,6,nil,nil) -- look at thunder king

-- scene:WaitTimer(5)

-- scene:SetCamera(338,2.5,nil,nil) -- backing up

-- scene:WaitTimer(1)

-- SendTrigger( ""cloneTrigger"" )

-- scene:SetCamera(337,2.5,nil,nil) -- backing up

-- scene:WaitTimer(1)

-- SendTrigger( ""priestTrigger"" )

-- scene:SetCamera(347,4,nil,nil)

-- scene:WaitTimer(2)

-- scene:SetCamera(344,3.5,nil,nil) -- zoom


-- scene:SetCamera(341,0,nil,nil)

-- scene:SetCamera(342,10,nil,nil)

-- scene:WaitTimer(10)

-- scene:SetCamera(343,2,nil,nil) -- ready to zoom

-- scene:WaitTimer(1.5)

-- scene:SetCamera(344,3,nil,nil) -- zoom

-- scene:WaitTimer(9.5)

-- scene:SetCamera(346,3,nil,nil)

-- scene:WaitTimer(2)

-- scene:SetCamera(345,4,nil,nil)

-- scene:WaitTimer(3)

-- scene:SetCamera(0,3,nil,nil) -- sets camera back to game-cam
"
116,Kun Lai Summit - Reclaiming the Thunder God - Mogu Door 01 - JSB,"-- close door
moguDoor01:PlayLoopingFullBodyAnim(Animations.Closed) 

Wait(11)
moguDoor01:StopLoopingFullBodyAnim()
moguDoor01:PlayLoopingAnimKit(2209)"
117,Kun Lai Summit - Reclaiming the Thunder God - Troll Priest 01 - JSB,"-- clone trigger
WaitForTrigger( ""cloneTrigger"" )
FadeIn ( trollPriest01, 0 )

Wait(2)

RunToLocation( trollPriest01, 5, 3606.92, 1640.85, 742.683, 84.3163 )


Wait(0.8)

PlayOneShotSplitBodyAnim( trollPriest01, Animations.EmoteTalk )
trollPriest01:BroadcastTextStereo(BroadcastType.Say, 65410)

SendTrigger( ""priestTrigger"" )

Wait(4.0)

PlayOneShotSplitBodyAnim( trollPriest01, Animations.EmoteTalkExclamation )
trollPriest01:BroadcastTextStereo(BroadcastType.Say, 65411)

Wait(5)

PlayOneShotSplitBodyAnim( trollPriest01, Animations.EmoteLaugh )
trollPriest01:BroadcastTextStereo(BroadcastType.Say, 66818)

-- trollPriest01:PlaySpellStateVisual( 24391 )

Wait(5.5)



RunToLocation( trollPriest01, 5, 3606.92, 1640.85, 742.683, 264 )

RunToLocation( trollPriest01, 5, 3605.16, 1622.07, 742.666, 264 )

RunToLocation( trollPriest01, 5, 3602.81, 1598.81, 743.012, 264.299 )

RunToLocation( trollPriest01, 5, 3600.05, 1571.08, 757.963, 264.075 )

RunToLocation( trollPriest01, 5, 3615.26, 1557.32, 759.908, 21.2992 )

-- SendTrigger( ""priestTrigger"" )


Wait(100)"
120,Kun Lai Summit - Reclaiming the Thunder God - Grunt 01 - JSB,"-- path 01
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

trollGrunt01:FollowPath( 3049, 12 )

Wait(100)"
121,Kun Lai Summit - Resurrecting the Thunder God - Master Script - JSB,"local genericFOV90 = 368

scene:WaitTimer(1) 

scene:SetCamera(0, 0, nil, nil)
--SetCameraFollowPath( genericFOV90, 2, 4218, 4219, 35 )
SetCameraFollowPath( genericFOV90, 0, 4254, 4255, 4 ) -- Establish Town
scene:WaitTimer(0.5)

scene:SetCamera(467, 4, nil, nil) --Pause wide shot of town
scene:WaitTimer(3)

SetCameraFollowPath( genericFOV90, 3, 4241, 4298, 10 ) --Long Arc (formerly 4280)
scene:WaitTimer(8) 

scene:SetCamera(468, 3, nil, nil) --Island Gates
scene:WaitTimer(2)

SetCameraFollowPath( genericFOV90, 4.5, 4229, 4279, 10 ) 
--scene:WaitTimer(1)
scene:WaitTimer(8)

--scene:SetCamera(359,3,nil,nil)
--scene:WaitTimer(2)

--scene:SetCamera(348,5,nil,nil)
--scene:WaitTimer(2)

--scene:SetCamera(349,5,nil,nil)
--scene:WaitTimer(2)

--scene:SetCamera(350,5,nil,nil) -- aiming at island
--scene:WaitTimer(1.5)

--scene:SetCamera(351,5,nil,nil)
--scene:WaitTimer(1.5)

--scene:SetCamera(352,5,nil,nil)
--scene:WaitTimer(1.5)

--scene:SetCamera(353,5,nil,nil)
--scene:WaitTimer(1.5)

--scene:SetCamera(354,5,nil,nil)
--scene:WaitTimer(1.5)

--scene:SetCamera(358,5,nil,nil)
--scene:WaitTimer(1.5)

--scene:SetCamera(355,6,nil,nil)
--scene:WaitTimer(2.5)

scene:SetCamera(356,3,nil,nil)
SendTrigger(""summoning complete"")
--scene:WaitTimer(2)

scene:WaitTimer(3)

scene:SetCamera(469,10,nil,nil)
--scene:SetCamera(463,10,nil,nil)
scene:WaitTimer(11)
scene:SetCamera(357,5,nil,nil)
--SendTrigger(""summoning complete"")
--scene:WaitTimer(20)
--WaitForTrigger(""done"")
scene:WaitTimer(7)
SendTrigger(""kill audio"")
--scene:SetCamera(0,0,nil,nil)

scene:EndScene()
"
122,Kun Lai Summit - Resurrecting the Thunder God - Init - Generic Actors 01 - JSB,"--Spawn the Thunder King
thunderKingID = 65630
thunderKing = SpawnActor( thunderKingID, 5234.26, 57.6505, 33.6385, 66.0716, 1.35, false)

--thunderKingGhostCreatureID = 61710
--thunderKingGhost = SpawnActor( thunderKingGhostCreatureID, 5236.44, 63.0171, 34.9194, 164.089, 2, false)
--FadeOut(thunderKingGhost, 0)

--Spawn Prophet Khar'zul
kharZulCreatureID = 61541
kharZul = SpawnActor( kharZulCreatureID, 5246.04, 62.2873, 31.962, 182.46, 0.8, false ) -- first drum

--Spawn Gara'jal
garaJalCreatureID = 60143
garaJal = SpawnActor( garaJalCreatureID, 5246.34, 54.166, 31.962, 152.448, 0.7, false ) -- first drum

--Spawn Other priestly dude
trollPopeCreatureID = 66212
trollPope = SpawnActor( trollPopeCreatureID, 5242.43, 48.9539, 31.962, 132.735, 1.5, false ) -- first drum

--Spawn Zandalari Prisoner
prisonerCreatureID = 62629
zandalariPrisoner = SpawnActor( prisonerCreatureID, 4415.28, 929.384, 123.771, 141.768, 1, false)
FadeOut(zandalariPrisoner, 0)

--Spawn Crows
crowCreatureID = 64551
crowPathID = 4213
crowPointsID = 4214
crows = SpawnActorsAtPoints( crowCreatureID, crowPointsID, false)
--crowPath1 = SpawnActor( crowCreatureID, 5243.35, 45.6953, 40.1999, 61.2, .5, false)
--crowPath2 = SpawnActor( crowCreatureID, 5241.64, 47.4099, 43.1999, 61.2, .5, false)
--crowPath3 = SpawnActor( crowCreatureID, 5244.19, 50.1395, 45.1999, 61.2, .5, false)
--crowPath4 = SpawnActor( crowCreatureID, 5246.81, 52.849, 48.1999, 61.2, .5, false)
--crowPath5 = SpawnActor( crowCreatureID, 5242.48, 50.0878, 50.1999, 61.2, .5, false)


-- Spawn Priest
trollUnderlingCreatureID = 61309
trollGuard01CreatureID = 61292
trollGuard02CreatureID = 61300
trollGuard03CreatureID = 61301
moguGuardCreatureID = 61304
trollPriestCreatureID = 61310

-- Spawn Underlings
trollUnderling01 = SpawnActor( trollUnderlingCreatureID, 4931.42, 66.8542, 6.84169, 25, 1, false ) -- first drum
trollUnderling02 = SpawnActor( trollUnderlingCreatureID, 4928.74, 22.5174, 1.05685, 317.344, 1, false )
trollUnderling03 = SpawnActor( trollUnderlingCreatureID, 5103.04, 25.6123, 6.4546, 287.645, 1, false )
trollUnderling04 = SpawnActor( trollUnderlingCreatureID, 5102.15, 18.2928, 5.92104, 54.319, 1, false )
trollUnderling05 = SpawnActor( trollUnderlingCreatureID, 5171.84, 15.3511, 12.9757, 104.494, 1, false )
trollUnderling06 = SpawnActor( trollUnderlingCreatureID, 5242.5, 44.022, 31.9608, 279.659, 1, false ) -- scene drum right
trollUnderling07 = SpawnActor( trollUnderlingCreatureID, 5250.12, 70.2691, 31.9608, 60.0603, 1, false ) -- scene drum left
trollUnderling08 = SpawnActor( trollUnderlingCreatureID, 4840.43, 39.5383, 2.19625, 292.79, 1, false ) -- kneeling
trollUnderling09 = SpawnActor( trollUnderlingCreatureID, 4832.77, 33.9119, 1.61703, 227.54, 1, false ) -- reading
trollUnderling10 = SpawnActor( trollUnderlingCreatureID, 4814.25, 65.1461, 3.15087, 56.99, 1, false ) -- working
trollUnderling11 = SpawnActor( trollUnderlingCreatureID, 5251.9, 66.0285, 31.9608, 24.2841, 1, false ) -- scene drum middle
trollUnderling12 = SpawnActor( trollUnderlingCreatureID, 5108.35, 18.0521, 6.18136, 137.475, 1, false ) -- dancer
trollUnderling13 = SpawnActor( trollUnderlingCreatureID, 5057.14, 112.82, 7.02602, 323.55, 1, false ) -- dancer
trollUnderling14 = SpawnActor( trollUnderlingCreatureID, 4927.19, 27.2821, 1.10828, 310.05, 1, false ) -- dancer
trollUnderling15 = SpawnActor( trollUnderlingCreatureID, 4924.87, 73.9892, 7.64432, 29.0254, 1, false ) -- dancer
trollUnderling16 = SpawnActor( trollUnderlingCreatureID, 5164.11, 109.492, 14.5615, 34.425, 1, false ) -- dancer
trollUnderling17 = SpawnActor( trollUnderlingCreatureID, 5017.6, 60.4968, 5.43745, 224.535, 1, false ) -- Chiller
 
--Patrol
trollPatroller01 = SpawnActor( trollGuard01CreatureID, 5111.17, 82.2937, 4.55431, 197.1, 1, false ) -- dancer
trollPatroller02 = SpawnActor( "
123,Kun Lai Summit - Resurrecting the Thunder God - Troll Patroller 01,"
Wait(3)

RunToLocation( trollGuard01, 4, 4905.35, 48.013, 3.56636, 151.861 )
RunToLocation( trollGuard01, 4, 4885.88, 56.5586, 4.25848, 156.811 )"
124,Kun Lai Summit - Resurrecting the Thunder God - Trolls at Dock,"
PlayLoopingSplitBodyAnim( trollUnderling08, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( trollUnderling09, Animations.EmoteReadLoop )
PlayLoopingSplitBodyAnim( trollUnderling10, Animations.EmoteWork )

-- trollUnderling08 =  -- kneeling
-- trollUnderling09 =  -- reading
-- trollUnderling10 = -- working"
125,Kun Lai Summit - Resurrecting the Thunder God - Troll Drummers,"--[[
trollUnderling01:PlaySpellStateVisual(drumSoundsAuraID) 
trollUnderling06:PlaySpellStateVisual(drumSoundsAuraID) 
trollUnderling07:PlaySpellStateVisual(drumSoundsAuraID) 
trollUnderling11:PlaySpellStateVisual(drumSoundsAuraID) 
]]--

PlayLoopingSplitBodyAnim( trollUnderling01, Animations.Attack1H )
PlayLoopingSplitBodyAnim( trollUnderling06, Animations.Attack1H )
PlayLoopingSplitBodyAnim( trollUnderling07, Animations.Attack1H )

scene:WaitTimer(0.5)

PlayLoopingSplitBodyAnim( trollUnderling11, Animations.Attack1H )"
126,Kun Lai Summit - Reclaiming the Thunder God - Grunt 02 - JSB,"-- path 02
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(1)

trollGrunt02:FollowPath( 3050, 12 )


Wait(100)"
127,Kun Lai Summit - Reclaiming the Thunder God - Grunt 03 - JSB,"-- path 03
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(2)

trollGrunt03:FollowPath( 3051, 12 )


Wait(100)"
128,Kun Lai Summit - Reclaiming the Thunder God - Grunt 04 - JSB,"-- path 04
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(3)

trollGrunt04:FollowPath( 3052, 12 )


Wait(100)"
129,Kun Lai Summit - Reclaiming the Thunder God - Grunt 09 - JSB,"-- path 09
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

-- Wait(1)

trollGrunt09:FollowPath( 3062, 12 )


Wait(100)"
130,Kun Lai Summit - Reclaiming the Thunder God - Grunt 08 - JSB,"-- path 08
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(1)

trollGrunt08:FollowPath( 3061, 12 )


Wait(100)"
131,Kun Lai Summit - Reclaiming the Thunder God - Grunt 07 - JSB,"-- path 07
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(2)

trollGrunt07:FollowPath( 3060, 12 )


Wait(100)"
132,Kun Lai Summit - Reclaiming the Thunder God - Grunt 06 - JSB,"-- path 06
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(3)

trollGrunt06:FollowPath( 3059, 12 )


Wait(100)"
133,Kun Lai Summit - Reclaiming the Thunder God - Grunt 05 - JSB,"-- path 05
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

-- Wait(0.3)

trollGrunt05:FollowPath( 3058, 12 )


Wait(100)"
149,Jade Forest - Fresco Scene 01 - Master Script - JSB,"
-- scene:WaitTimer(2)

soundBunny:PlaySoundKitStereo(33119, true)

scene:SetCamera(363,7,nil,nil) -- (camera, transition time, primary target, secondary target)


scene:WaitTimer(10) 


scene:SetCamera(364,7,nil,nil) 

scene:WaitTimer(5) 

scene:SetCamera(0,2,nil,nil) -- sets camera back to game-cam
"
150,Jade Forest - Horde Intro Scene - Master - JSB,"
local sceneOrigin = scene:GetPosition()
scene:SetCamera(0, 0.0, nil, nil)

Wait(1.0)

-- initial pan
-- scene:SetCamera(365, 0.0, nil, nil)

--CameraPosFollowPath( 370, 3095, 10 )
--CameraTgtFollowPath( 370, 3096, 10 )
SetCameraFollowPath( 370, 0.0, 3095, 3096, 15 )

local shakeY
local shakeZ
if Scene.AddCameraShake then
	shakeY = scene:AddCameraEffect(30, sceneOrigin, nil, 1)
	shakeZ = scene:AddCameraEffect(31, sceneOrigin, nil, 1)
end


--scene:SetCamera(366, 15.0, nil, nil)
Wait(8)
SendTrigger( ""gorrokMove"" )
Wait(3)
-- cut to Nazgrim

-- scene:SetCamera(367, 10, nil, nil)

scene:SetCamera(367, 15, nil, nil)

Wait(9)
scene:SetCamera(374, 0, nil, nil) -- rivett intial shot
WaitForTrigger( ""rivettTalk"" )
scene:SetCamera(375, 0.25, nil, nil) -- rivett close shot


if Scene.ClearCameraShake and shakeY and shakeZ then
	scene:RemoveCameraEffect(shakeY)
	scene:RemoveCameraEffect(shakeZ)
end

-- Cliff cam
Wait(6)

SetCameraFollowPath( 372, 0, nil, 3097, 20 )


Wait(10)
SendTrigger( ""allianceShip"" )

Wait(7)
-- look down at alliance ship
scene:SetCamera(373, 1, nil, nil)
SendTrigger( ""shipSpotted"" )
Wait(3)

scene:SetCamera(386, 1, nil, nil)

scene:SetCamera(382, 20, nil, nil) -- panning nazgrim
Wait(5.5)

scene:SetCamera(380, 0, nil, nil) -- ship to zepp

scene:SetCamera(379, 35, nil, nil)
Wait( 0.1 )
SendTrigger( ""zeppelinMove"" )
Wait(13)

SendTrigger( ""shipMove"" )

-- scene:SetCamera(381, 0, nil, nil)
SetCameraFollowPath( 383, 0.0, 3114, 3113, 14 )

Wait(10)

SetCameraFollowPath( 385, 4.0, 3116, 3117, 16 )

Wait(12)
SendTrigger( ""crashMove"" )
scene:SetCamera(384, 0, nil, nil)

Wait( 10 )
SendTrigger( ""zeppelinCrash"" )"
151,Jade Forest - Horde Intro Scene - Zeppelin - JSB,"
-- PlayLoopingSplitBodyAnim( zeppelin, Animations.ShipMoving )

zeppelin:PlayLoopingAnimKit(2272)


zeppelinDest = Vector:New(3292.78, -337.059, 266.204)
zeppelinMoveSpeed = 6
zeppelinSrc = zeppelin:GetPosition()
zeppelinMoveOffset = zeppelinDest - zeppelinSrc

-- force the ship to face a direction
zeppelin:SetFacingToAbs(Vector:New(3969.94, -99.27, 259.995))

WaitForTrigger( ""zeppelinMove"" )

RunToLocation(zeppelin, zeppelinMoveSpeed, zeppelinDest.x, zeppelinDest.y, zeppelinDest.z)

--[[
--
-- COPY THIS INTO ZEPP PASSENGER SCRIPT
-- COPY STARTS HERE
--
local relativeMover = allianceCaptain -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY THIS INTO ZEPP PASSENGER SCRIPT
-- COPY ENDS HERE
--
]]

WaitForTrigger( ""crashMove"" )

zeppelin:FollowPath( 3118, 10 )

Wait( 10.2 )

FadeOut( zeppelin, 0 )
zeppelinFire:Despawn()
zeppelinFire01:Despawn()
zeppelinFire02:Despawn()
zeppelinFire03:Despawn()
Wait( 2.5 )
zeppelin:Despawn()"
152,Jade Forest - Horde Intro Scene - Init - JSB,"
-- spawn zeppelin
-- local zeppelinModel = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\ND_HordeGunship_Doodad.M2""
local zeppelinModel = ""world\\expansion03\\doodads\\generic\\flying_horde_zeppelin.m2""
--zeppelin = SpawnModelActor( zeppelinModel, 3444.23, -278.363, 284.752, 249.2335, 1.0, false )
local zeppelins = SpawnModelActorsAtPoints( zeppelinModel, 3093, false )
zeppelin = zeppelins[1]

local allianceShipModel = ""world\\expansion03\\doodads\\generic\\alliance_ship01.m2""
allianceShip = SpawnModelActor( allianceShipModel, 3457.83, -923.965, 0, 257.2773, 1.0, false )

-- spawn nazgrim
local nazgrimCreatureID = 61682
nazgrim = SpawnActor( nazgrimCreatureID, 3447.54, -289.77, 266.9, 175.826, 1.0, false )

-- spawn gorrok
local gorrokCreatureID = 61846
gorrok = SpawnActor( gorrokCreatureID, 3434.29, -289.758, 268.19, 203.226, 1.0, false )

-- spawn clone
local cloneCreatureID = 61833
-- if (not Scene.SpawnActivePlayerCloneActor) then
-- 	clone = SpawnActor( cloneCreatureID, 3447.19, -285, 266.9, 215.151, 1.0, false )
-- else
	clone = SpawnActivePlayerCloneActor( 3447.19, -285, 266.9, 215.151, 1.0, false )
-- end

-- spawn rivett
local rivettCreatureID = 61844
rivett = SpawnActor( rivettCreatureID, 3458.38, -288.321, 268.1, 290.783, 1.0, false )

-- spawn shokia
local shokiaCreatureID = 61866
shokia = SpawnActor( shokiaCreatureID, 3449.31, -278.87, 266.9, 209.976, 1.0, false )

-- spawn kiryn
local kirynCreatureID = 61867
kiryn = SpawnActor( kirynCreatureID, 3459.4, -278.842, 268.458, 202.139, 1.0, false )
kiryn:PlayLoopingFullBodyAnim(Animations.SitChairMed)

-- spawn zin'jun
local zinjunCreatureID = 61868
zinjun = SpawnActor( zinjunCreatureID, 3461.3, -283.872, 268.4, 199.819, 1.0, false )
zinjun:PlayLoopingFullBodyAnim(Animations.SitChairMed)

-- spawn snuff
local snuffCreatureID = 61869
snuff = SpawnActor( snuffCreatureID, 3459.5, -283.872, 268.1, 108, 0.7, false )
snuff:PlayLoopingFullBodyAnim(Animations.Sleep)

-- spawn Vanguard01
local vanguard01CreatureID = 61845
vanguard01 = SpawnActor( vanguard01CreatureID, 3432.55, -287.139, 268.19, 133.576, 1.0, false )

-- spawn Vanguard02
local vanguard02CreatureID = 61845
vanguard02 = SpawnActor( vanguard02CreatureID, 3435.51, -293.801, 268.19, 273, 1.0, false )

-- spawn Vanguard03
local vanguard03CreatureID = 61845
vanguard03 = SpawnActor( vanguard03CreatureID, 3452.83, -289.126, 266.9, 186, 1.0, false )

-- spawn Vanguard04
-- local vanguard04CreatureID = 61845
-- vanguard04 = SpawnActor( vanguard04CreatureID, 3449.31, -278.87, 266.9, 209.976, 1.0, false )

-- spawn Alliance Captain
local allianceCaptainCreatureID = 62635
allianceCaptain = SpawnActor( allianceCaptainCreatureID, 3438.27, -953.387, 18.8127, 63, 1.0, false )

-- spawn Zeppelin Cannon Bunnies
local zeppelinCannonBunnyCreatureID = 61997
zeppelinCannon01 = SpawnActor( zeppelinCannonBunnyCreatureID, 3454.88, -291.905, 263.772, 307.796, 1.0, false )
zeppelinCannon02 = SpawnActor( zeppelinCannonBunnyCreatureID, 3448.31, -294.369, 263.772, 296.321, 1.0, false )
zeppelinCannon03 = SpawnActor( zeppelinCannonBunnyCreatureID, 3442.37, -295.521, 263.957, 279.446, 1.0, false )
zeppelinCannon04 = SpawnActor( zeppelinCannonBunnyCreatureID, 3437.49, -295.544, 264.3, 280.5711, 1.0, false )


-- spawn fogs
-- in front
local cloudModel = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mists = SpawnModelActorsAtPoints( cloudModel, 3094, false )

-- special fog
local mistModel = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mist = SpawnModelActor( mistModel, 3450.53, -299.764, 269, 128.282, 4.0, false )
FadeOut( mist, 0 )

"
153,Jade Forest - Horde Intro Scene - Nazgrim - JSB,"
WaitForTrigger( ""nazgrimTalk"" )

nazgrim:PlayOneShotAnimKit(2332)
Wait(2)
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalkNoSheathe)
nazgrim:BroadcastText(BroadcastType.Say, 65983)


WaitForTrigger( ""rivettTalk"" )

RunToLocation( nazgrim, 4, 3447.87, -293.173, 266.9, 294 )

WaitForTrigger( ""shipSpotted"" )
Wait( 1 )

nazgrim:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)
nazgrim:BroadcastText(BroadcastType.Say, 65984)
Wait( 2 )

nazgrim:SetFacing(120)
Wait( 1 )

nazgrim:PlayOneShotAnimKit(2329)
nazgrim:BroadcastText(BroadcastType.Say, 65985)
Wait( 4 )



-- COPY STARTS HERE
--
local relativeMover = nazgrim -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
nazgrim:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

"
154,Cinematic Framework - Spawning,"
--
-- SpawnActor( creatureID, x, y, z, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor
--
function SpawnActor( creatureID, x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )
	local createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actor = scene:SpawnActor( createData )
	actor:SetInteractible( false )
	return actor

end

--
-- SpawnActorAtVector( creatureID, vector, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor at a vector location
--
function SpawnActorAtVector( creatureID, vector, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnTransform = Transform:New( vector, facing )
	local createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actor = scene:SpawnActor( createData )
	actor:SetInteractible( false )
	return actor

end

--
-- WaitForSmoothPhase( createData, maxWait [default 5] )
--   Wait up to maxWait seconds for a unit to be destroyed for smooth phaseing replacement
--
function WaitForSmoothPhase( createData, maxWait )
	if (not createData) or (not Scene.ShouldWaitForSmoothPhase) then
		return
	end

	if not maxWait then
		maxWait = 5.0
	end

	local pingInterval = 0.25 -- quarter of a second ping
	local currentWait = 0.0
	local phaseTimer = scene:Timer(pingInterval)
	while (scene:ShouldWaitForSmoothPhase(createData) and (currentWait < maxWait)) do
		phaseTimer:Reset()
		scene:Wait(phaseTimer)
		currentWait = currentWait + pingInterval
	end
end

--
-- SmoothPhaseSpawnActor( creatureID, x, y, z, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor
--
function SmoothPhaseSpawnActor( creatureID, x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )
	local createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false
	createData.smoothPhase = true

	WaitForSmoothPhase( createData )

	local actor = scene:SpawnActor( createData )
	actor:SetInteractible( false )
	return actor

end

--
-- SpawnActivePlayerCloneActor( x, y, z, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor cloned from the active player
--
function SpawnActivePlayerCloneActor( x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )

	local clonesAvailable = true
	local creatureID = 0
	if (not Scene.SpawnActivePlayerCloneActor) then
		clonesAvailable = false
		creatureID = 65247 -- backup clone creature
	end

	local createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actor = nil
	if (clonesAvailable == true ) then
		actor = scene:SpawnActivePlayerCloneActor( createData, false )
	end

	if (not actor) then
		actor = scene:SpawnActor( createData )
	end

	actor:SetInteractible( false )
	return actor

end

--
-- SpawnPlayerCloneActorByToken( token, x, y, z, facing [default 0], scale [default 1], snapToGround [default false] )
--   Spawn an uninteractible actor cloned from the specified "
155,Cinematic Framework - Camera,"
--
-- Internal variables
--
local cameraDummyDefaultPos = scene:GetPosition()
local cameraDummyModel = ""creature\\invisiblestalker\\invisiblestalker.m2""

local cameraDummyCreateData = ActorCreateData:Default()
cameraDummyCreateData.model = cameraDummyModel
cameraDummyCreateData.transform.position = cameraDummyDefaultPos
cameraDummyCreateData.groundSnap = false
cameraDummyCreateData.interactible = false
cameraDummyCreateData.floatingTooltip = false

local cameraDummyPositions = { }
local cameraDummyTargets = { }

--
-- SetCameraFollowPath
--
function SetCameraFollowPath( cameraModeID, transitionTime, posPathID, tgtPathID, moveTime )
	local posDummy = CameraPosFollowPath( cameraModeID, posPathID, moveTime )
	local tgtDummy = CameraTgtFollowPath( cameraModeID, tgtPathID, moveTime )
	scene:SetCamera( cameraModeID, transitionTime, posDummy, tgtDummy )
end

--
-- SetCameraFollowReversePath
--
function SetCameraFollowReversePath( cameraModeID, transitionTime, posPathID, tgtPathID, moveTime )
	local posDummy = CameraPosFollowPath( cameraModeID, posPathID, moveTime, true )
	local tgtDummy = CameraTgtFollowPath( cameraModeID, tgtPathID, moveTime, true )
	scene:SetCamera( cameraModeID, transitionTime, posDummy, tgtDummy )
end
--
-- MoveCameraToPathStart
--
function MoveCameraToPathStart( cameraModeID, transitionTime, posPathID, tgtPathID)
	local posStartDummy = scene:SpawnActor(cameraDummyCreateData)
	table.insert(cameraDummyPositions, posStartDummy)
	local tgtStartDummy = scene:SpawnActor(cameraDummyCreateData)
	table.insert(cameraDummyTargets, tgtStartDummy)
	CameraDummySetAtPathStart(posStartDummy, posPathID)
	CameraDummySetAtPathStart(tgtStartDummy, tgtPathID)
	scene:SetCamera( cameraModeID, transitionTime, posStartDummy, tgtStartDummy)
end

--
-- MoveCameraToPathNode
--
function MoveCameraToPathNodeIndex( cameraModeID, transitionTime, posPathID, posPathNodeIndex, tgtPathID, tgtPathNodeIndex)
	local posStartDummy = scene:SpawnActor(cameraDummyCreateData)
	table.insert(cameraDummyPositions, posStartDummy)
	local tgtStartDummy = scene:SpawnActor(cameraDummyCreateData)
	table.insert(cameraDummyTargets, tgtStartDummy)
	CameraDummySetAtPathNode(posStartDummy, posPathID, posPathNodeIndex)
	CameraDummySetAtPathNode(tgtStartDummy, tgtPathID, tgtPathNodeIndex)
	scene:SetCamera( cameraModeID, transitionTime, posStartDummy, tgtStartDummy)
end

--
-- CameraPosFollowPath
--
function CameraPosFollowPath( cameraModeID, pathID, moveTime, reverse )
	if not pathID then
		return nil
	end

	local cameraDummyPos = scene:SpawnActor(cameraDummyCreateData)
	table.insert(cameraDummyPositions, cameraDummyPos)
	
	CameraDummyFollowPath( cameraDummyPos, pathID, moveTime, reverse )
	return cameraDummyPos
end

--
-- CameraPosFollowPath
--
function CameraTgtFollowPath( cameraModeID, pathID, moveTime, reverse )
	if not pathID then
		return nil
	end

	local cameraDummyTgt = scene:SpawnActor(cameraDummyCreateData)
	table.insert(cameraDummyTargets, cameraDummyTgt)

	CameraDummyFollowPath( cameraDummyTgt, pathID, moveTime, reverse )
	return cameraDummyTgt
end

--
-- CameraDummyFollowPath
--
function CameraDummyFollowPath( cameraDummy, pathID, moveTime, reverse )
	if (reverse) then
		path = scene:LoadPath(pathID)
		CameraDummySetAtPathNode(cameraDummy, pathID, #(path.nodes))
		cameraDummy:FollowPathReverse(pathID, moveTime)
	else
		CameraDummySetAtPathStart ( cameraDummy, pathID )
		-- start following
		cameraDummy:FollowPath( pathID, moveTime )
	end
end

function CameraDummySetAtPathStart( cameraDummy, pathID )
	local path = scene:LoadPath( pathID )
	if #path.nodes > 0 then
		-- snap to the first point
		local transform = cameraDummy:GetTransform()
		transform.position = path.nodes[1].pos
		cameraDummy:SetTransform( transform )
	end
end

function "
156,Jade Forest - Horde Intro Scene - Alliance Ship - JSB,"

allianceShipDest = Vector:New(3650.85, -622.323, 0)
allianceShipMoveTime = 25


allianceShipSrc = allianceShip:GetPosition()
allianceShipMoveOffset = allianceShipDest - allianceShipSrc

-- force the ship to face a direction
allianceShip:SetFacingToAbs(Vector:New(3416.34, -985.503, 0))

WaitForTrigger( ""allianceShip"" )

RunToLocation(allianceShip, allianceShipMoveTime, allianceShipDest.x, allianceShipDest.y, allianceShipDest.z)

-- WaitForTrigger( ""shipMove"" )

-- RunToLocation(allianceShip, 10, 4113.9, -581.805, 0)


WaitForTrigger( ""zeppelinMove"" )
Wait( 13.5 )

-- allianceShipDest = Vector:New(3603.17, -571.637, 0)
RunToLocation(allianceShip, 500, 3845.42, -645.091, 0)
RunToLocation(shipFire03, 500, 3859.47, -636.061, 18.5503)
RunToLocation(shipFire02, 500, 3851.24, -641.253, 6.3)
RunToLocation(shipFire01, 500, 3835.78, -653.77, 12.9994)
RunToLocation(zeppelinTarget04, 500, 3822.34, -663.603, 17.7212)

local instance = shipFire01:PlaySpellStateVisual(19388)
local instance = shipFire02:PlaySpellStateVisual(19388)
local instance = shipFire03:PlaySpellStateVisual(19388)
local instance = zeppelinTarget04:PlaySpellStateVisual(19388)
"
189,Jade Forest - Horde Intro Scene - Alliance Captain - JSB,"allianceCaptain:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCaptain -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 2 )

allianceCaptain:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)

Wait( 8.1 )

local shakeOrigin = Vector:New(3723.47, -639.766, 14.877)
shakeX = scene:AddCameraEffect( 32, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin, nil, 1 )


allianceCaptain:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCaptain:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCaptain:FollowPath( 3231, 2 )

Wait( 3 )

allianceCaptain:Despawn()"
191,Jade Forest - Horde Intro Scene - Gorrok - JSB,"
WaitForTrigger( ""gorrokMove"" )
RunToLocation( gorrok, 2, 3442.33, -288.137, 267.447, 336 )
Wait(1)

gorrok:PlayLoopingFullBodyAnim(Animations.EmoteTalk)
gorrok:BroadcastText(BroadcastType.Say, 65982)
Wait(4)
gorrok:StopLoopingFullBodyAnim()

Wait(4)

SendTrigger( ""nazgrimTalk"" )
Wait(5)
gorrok:PlayOneShotFullBodyAnim(Animations.EmoteSalute)
Wait(3)

RunToLocation( gorrok, 2, 3434.29, -289.758, 268.19, 203.226 )

SendTrigger( ""rivettTalk"" )


WaitForTrigger( ""shipSpotted"" )
Wait(1.5)
RunToLocation( gorrok, 2, 3439.87, -293.908, 267.8, 293.237 )



-- COPY STARTS HERE
--
local relativeMover = gorrok -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

gorrok:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- gorrok:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
192,Jade Forest - Horde Intro Scene - Rivett - JSB,"
WaitForTrigger( ""gorrokMove"" )
Wait(5)
RunToLocation( rivett, 2, 3454.62, -276.787, 268.1, 60 )
Wait(6)
rivett:SetFacing(157)
Wait(5)
RunToLocation( rivett, 2, 3456.92, -282.23, 268.1, 251.326 )

WaitForTrigger( ""rivettTalk"" )
Wait(0.25)
rivett:PlayOneShotFullBodyAnim(Animations.EmoteShout)
rivett:BroadcastText(BroadcastType.Say, 65990)
Wait(2)
rivett:PlayOneShotFullBodyAnim(Animations.EmotePoint)

WaitForTrigger( ""shipSpotted"" )
Wait(2)
RunToLocation( rivett, 2, 3456.49, -282.811, 268.1, 275 )


-- COPY STARTS HERE
--
local relativeMover = rivett -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

rivett:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
193,Jade Forest - Horde Intro Scene - Special Fog - JSB,"
WaitForTrigger( ""rivettTalk"" )
FadeIn( mist, 0 )

Wait(8)
FadeOut( mist, 6 )
"
194,Jade Forest - Horde Intro Scene - Zin'jun - JSB,"
WaitForTrigger( ""rivettTalk"" )

Wait( 1 )

zinjun:PlayOneShotAnimKit(2331)

Wait(10)
zinjun:PlayOneShotFullBodyAnim(Animations.Stand)
Wait(1)
zinjun:PlayLoopingFullBodyAnim(Animations.Stand)
-- zinjun:PlayOneShotFullBodyAnim(Animations.EmotePoint)

Wait(4)

RunToLocation( zinjun, 1, 3460.48, -284.169, 268.1, 199.819 )

-- COPY STARTS HERE
--
local relativeMover = zinjun -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

zinjun:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

"
195,Jade Forest - Horde Intro Scene - Kiryn - JSB,"WaitForTrigger( ""rivettTalk"" )

Wait(12)

kiryn:PlayLoopingFullBodyAnim(Animations.Stand)


Wait(4)

RunToLocation( kiryn, 1, 3456.55, -280.263, 268.1, 130.8 )


-- COPY STARTS HERE
--
local relativeMover = kiryn -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
kiryn:PlayLoopingFullBodyAnim(Animations.Cower)
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

"
196,Lorewalker Story - S1: Grummle - Init - Scene 1 Actors - ZTO,"-- Spell preloads
grummleTransformSpellID = 120566
grummleTransformEffectSpellID = 120704

-- Spawn troggs
troggID = 61900
troggMain = SpawnActor( troggID, 1447.39, 361.676, 550.221, 42.0026 ) -- Trogg protagonist
trogg01 = SpawnActor( troggID, 1455.21, 362.066, 550.221, 162.378 ) -- Trogg extra
trogg02 = SpawnActor( troggID, 1447.25, 367.173, 550.221, 335.853 ) -- Trogg extra
trogg03 = SpawnActor( troggID, 1450.18, 360.01, 550.221, 242.928 ) -- Trogg extra
FadeOut( troggMain, 0 )
FadeOut( trogg01, 0 )
FadeOut( trogg02, 0 )
FadeOut( trogg03, 0 )

-- Spawn mogu
moguFleshshaperID = 61898
moguGruntID = 61899
moguMain = SpawnActor( moguFleshshaperID, 1460.34, 362.918, 550.222, 131.724 ) -- Mogu Main Character
moguGrunt01 = SpawnActor( moguGruntID, 1464.41, 378.03, 550.222, 218.403 ) -- Mogu Grunt Character
moguGrunt02 = SpawnActor( moguGruntID, 1467.7, 374.153, 550.222, 218.403 ) -- Mogu Grunt Character
FadeOut( moguMain, 0 )
FadeOut( moguGrunt01, 0 )
FadeOut( moguGrunt02, 0 )

-- Spawn Grummle
grummleID = 61901
grummleBagID = 61902
grummleMain = SpawnActor( grummleID, 1454.37, 369.568, 550.222, 41.102 ) -- Grummle spawns where Trogg fades
grummleMainBag = SpawnActor( grummleBagID, 1460.31, 374.792, 550.222, 221.327 ) -- Grummle spawns where Trogg fades
grummlePacker1 = SpawnActor( grummleBagID, 1463.23, 374.766, 550.222, 221.327 ) -- Grummle spawns offset from grummlemainbag
grummlePacker2 = SpawnActor( grummleBagID, 1460.55, 377.703, 550.222, 221.327 ) -- Grummle spawns offset from grummlemainbag
grummleIncenseSniffer = SpawnActor( grummleID, 1448.58, 362.965, 550.222, 131.491 ) -- Grummle spawns offset from grummlemainbag
FadeOut( grummleMain, 0 )
FadeOut( grummleMainBag, 0 )
FadeOut( grummlePacker1, 0 )
FadeOut( grummlePacker2, 0 )
FadeOut( grummleIncenseSniffer, 0 )

-- Spawn Grummle Incense
incenseID = 62262
incense1 = SpawnActor( incenseID, 1447.74, 358.042, 550.221, 117.09)
incense2 = SpawnActor( incenseID, 1450.52, 358.761, 550.221, 127.665)
incense3 = SpawnActor( incenseID, 1451.03, 361.861, 550.221, 140.265)
incense4 = SpawnActor( incenseID, 1446.18, 360.548, 550.221, 114.165)
FadeOut( incense1, 0 )
FadeOut( incense2, 0 )
FadeOut( incense3, 0 )
FadeOut( incense4, 0 )
"
197,Lorewalker Story - S1: Grummle - Trogg01 - ZTO,"-- Wandering Trogg
-- meander around
WaitForTrigger( ""Spawn Troggs"" )
FadeIn( trogg01, 1 )
local actorAuraVisual = trogg01:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Run forward
RunToLocation( trogg01, 5.5, 1451.81, 362.822, 550.222, 177.767 )
Wait(1)
RunToLocation( trogg01, 5.5, 1452.64, 360.794, 550.222, 292.292 )
Wait(1)
RunToLocation( trogg01, 5.5, 1453.48, 362.303, 550.222, 60.7672 )

-- grummle trigger
WaitForTrigger( ""grummleTransform"" )

Wait(1)

RunToLocation( trogg01, 5.5, 1448.95, 356.926, 550.222, 228.392 )
trogg01: Despawn()"
198,Lorewalker Story - S1: Grummle - Trogg02 - ZTO,"-- Wandering Trogg
-- meander around
WaitForTrigger( ""Spawn Troggs"" )
FadeIn( trogg02, 1 )
local actorAuraVisual = trogg02:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Run forward
RunToLocation( trogg02, 5.5, 1445.27, 364.92, 550.221, 228.754 )
Wait(1)
RunToLocation( trogg02, 5.5, 1444.47, 367.409, 550.221, 91.9536 )
Wait(1)
RunToLocation( trogg02, 5.5, 1446.52, 365.808, 550.221, 8.25353 )

-- grummle trigger
WaitForTrigger( ""grummleTransform"" )

Wait(1)

RunToLocation( trogg02, 5.5, 1442.34, 362.558, 550.221, 222.679 )
trogg02: Despawn()"
199,Lorewalker Story - S1: Grummle - Trogg03 - ZTO,"-- Wandering Trogg
-- meander around
WaitForTrigger( ""Spawn Troggs"" )
FadeIn( trogg03, 1 )
local actorAuraVisual = trogg03:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Run forward
RunToLocation( trogg03, 5.5, 1448.08, 355.902, 550.221, 242.928 )
Wait(1)
RunToLocation( trogg03, 5.5, 1446.66, 357.854, 550.221, 122.103 )
Wait(1)
RunToLocation( trogg03, 5.5, 1448.39, 358.707, 550.221, 18.378 )

-- grummle trigger
WaitForTrigger( ""grummleTransform"" )

Wait(1)

RunToLocation( trogg03, 5.5, 1446.07, 357.41, 550.221, 209.178 )
trogg03: Despawn()"
200,Lorewalker Story - S1: Grummle - TroggMain - ZTO,"-- Wandering Trogg
-- meander around
WaitForTrigger( ""Spawn Troggs"" )
local actorAuraVisual = troggMain:PlaySpellStateVisual(24803) --Cast Actor Visual

WaitForTrigger( ""troggSpawn"" )
FadeIn( troggMain, 1 )
Wait(2)

-- Run forward
RunToLocation( troggMain, 2, 1454.37, 369.568, 550.222, 41.102 )
Wait(1)


-- grummle transform trigger
WaitForTrigger( ""grummleTransform"" )
CastSpellAtActor( troggMain, troggMain, grummleTransformEffectSpellID )
FadeOut( troggMain, 1 )
troggMain: Despawn()"
201,Lorewalker Story - S1: Grummle - MoguMain - ZTO,"-- Mogu enters stage right
-- cross to slightly center stage right
WaitForTrigger( ""Spawn Mogu"" )

SendTrigger( ""cueLight_CC"" )
FadeIn( moguMain, 2 )
local actorAuraVisual = moguMain:PlaySpellStateVisual(24803) --Cast Actor Visual
RunToLocation( moguMain, 2, 1457.22, 366.413, 550.222, 131.724 )

-- Summons the Troggs
SendTrigger( ""troggSpawn"" )

-- Continue forward march
RunToLocation( moguMain, 2, 1458.92, 371.169, 550.222, 218.403 )
Wait(5)

CastSpellAtActor( moguMain, troggMain, grummleTransformSpellID )
Wait (1)
SendTrigger(""grummleTransform"")
Wait (1)
FadeOut( moguMain, 1)
moguMain:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait (5)


moguMain: Despawn()

-- Wait for command and then drift off stage
--WaitForTrigger(""startRunning"")
--moguMain: SetFacingToAbs(Vector:New(1444.44, 360.476, 550.221)) 
--moguMain: PlayLoopingAnimKit( 2319 )
--RunToLocation( moguMain, 2, 1467.41, 377.901, 550.222, 218.403 )
--FadeOut( moguMain, 1)
--moguMain:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
--
--Wait (5)
--
--
--moguMain: Despawn()"
202,Lorewalker Story - S1: Grummle - MoguGrunt01 - ZTO,"-- MoguGrunts enter stage right
-- Remain at attention
WaitForTrigger(""Spawn Mogu"")
Wait (2)
FadeIn( moguGrunt01, 1 )
local actorAuraVisual = moguGrunt01:PlaySpellStateVisual(24803) --Cast Actor Visual


-- Wait for Grummle Trigger
WaitForTrigger( ""grummleTransform"" )
Wait(2)
PlayOneShotSplitBodyAnim( moguGrunt01, Animations.EmoteLaugh )
Wait(1)
PlayOneShotSplitBodyAnim( moguGrunt01, Animations.EmoteLaugh )
Wait(1)
PlayOneShotSplitBodyAnim( moguGrunt01, Animations.EmoteLaugh )



-- Wait for command and then drift off stage
WaitForTrigger(""startRunning"")
FadeOut( moguGrunt01, 1)

Wait(5)
moguGrunt01: Despawn()"
203,Lorewalker Story - S1: Grummle - MoguGrunt02 - ZTO,"-- MoguGrunts enter stage right
-- Remain at attention
WaitForTrigger(""Spawn Mogu"")
Wait (2)
FadeIn( moguGrunt02, 1 )
local actorAuraVisual = moguGrunt02:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Wait for Grummle Trigger
WaitForTrigger( ""grummleTransform"" )
Wait(2)
PlayOneShotSplitBodyAnim( moguGrunt02, Animations.EmoteLaugh )
Wait(1)
PlayOneShotSplitBodyAnim( moguGrunt02, Animations.EmoteLaugh )
Wait(1)
PlayOneShotSplitBodyAnim( moguGrunt02, Animations.EmoteLaugh )



-- Wait for command and then drift off stage
WaitForTrigger(""startRunning"")
FadeOut( moguGrunt02, 1)

Wait(5)
moguGrunt02: Despawn()"
205,Stormwind - Varian Gets Punched - Master - PRK,"scene:SetCamera(376, 0.5, nil, nil)

Wait(5.0)

scene:SetCamera(377, 0, nil, nil)

Wait(3.0)

scene:SetCamera(378, 0, nil, nil)

Wait(3.0)

scene:SetCamera(0, 1, nil, nil) -- sets camera back to game-cam"
206,Jade Forest - Horde Intro Scene - Snuff - JSB,"
WaitForTrigger( ""rivettTalk"" )
Wait(1.5)
snuff:StopLoopingFullBodyAnim()
-- snuff:PlayOneShotFullBodyAnim(Animations.SleepUp)
snuff:PlayOneShotAnimKit(2330)
Wait(10)


RunToLocation( snuff, 4, 3458.08, -288.528, 268.1, 290.064 )


WaitForTrigger( ""shipSpotted"" )
Wait( 1.5 )

snuff:PlayOneShotFullBodyAnim(Animations.EmoteRoar)

-- snuff:PlayLoopingFullBodyAnim(Animations.Stand)
-- snuff:SetFacing( 190 ) 

-- COPY STARTS HERE
--
local relativeMover = snuff -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

snuff:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()"
207,Lorewalker Story - S1: Grummle - GrummleMain - ZTO,"-- Grummle spawns where trogg got tacknuked
WaitForTrigger( ""grummleTransform"" )
FadeIn( grummleMain, 0 )
local actorAuraVisual = grummleMain:PlaySpellStateVisual(24803) --Cast Actor Visual
Wait(2)

-- Face downstage center
grummleMain: SetFacing( 132.227 )
Wait(1)

-- Cheer
PlayOneShotSplitBodyAnim( grummleMain, Animations.BattleRoar )
Wait(1)



-- Face Stage left and begin fake running
grummleMain: SetFacing( 221.327 )
SendTrigger( ""startRunning"" )
PlayLoopingSplitBodyAnim( grummleMain, Animations.Run )
Wait(3)

-- Despawn and replace with bag version
SendTrigger( ""grummleTransform2"" )
SendTrigger( ""blackLight_CC"" )
FadeOut(grummleMain, 1)
Wait(1)
grummleMain: Despawn()
"
208,Lorewalker Story - S1: Grummle - GrummleMainBag - ZTO,"-- Grummle spawns where non-pack version of grummle is running in place
WaitForTrigger( ""grummleTransform2"" )
PlayLoopingSplitBodyAnim( grummleMainBag, Animations.Run )
SendTrigger( ""cueLight_CR"" )
FadeIn( grummleMainBag, 1 )
local actorAuraVisual = grummleMainBag:PlaySpellStateVisual(24803) --Cast Actor Visual
Wait(1)

-- Start Scene 2
--SendTrigger(""scene2Trigger"")

Wait(5)

-- Start Scene 3
--SendTrigger(""scene3Trigger"")
Wait(1)
SendTrigger(""addGrummle1"")
Wait(3)

-- Start Scene 4
--SendTrigger(""scene4Trigger"")
Wait(1)
SendTrigger(""addGrummle2"")
Wait(3)
SendTrigger(""callSmack"")

-- Wait for tree hit
WaitForTrigger(""treeSmack"")
grummleMainBag: StopLoopingSplitBodyAnim( Animations.Run )
grummleMainBag: PlayOneShotAnimKit( 2327 )
local dazeAuraVisual = grummleMainBag:PlaySpellStateVisual(84) --Cast Daze Visual
PlayLoopingSplitBodyAnim( grummleMainBag, Animations.SitGround )
Wait(3)

SendTrigger(""clearTree"")
Wait(1)

-- Call in the Pandas, look at each, and then walk off with stinky one
--SendTrigger(""callPandas"")
--grummleMainBag:ClearSpellVisual( dazeAuraVisual) --Clear Daze Visual
--PlayOneShotSplitBodyAnim( grummleMainBag, Animations.SitGroundUp )
--grummleMainBag: StopLoopingSplitBodyAnim( Animations.SitGround )
--grummleMainBag: SetFacing(130.147)

--PlayLoopingSplitBodyAnim( grummleMainBag, Animations.Stand )

--Wait(2)
--grummleMainBag: SetFacing(183) -- Face Stinky Pandaren
--Wait(2)
--grummleMainBag: SetFacing(80) -- Face Rich Pandaren
--Wait(2)
--grummleMainBag: SetFacing(183) -- Face Stinky Pandaren
--Wait(2)

--RunToLocation( grummleMainBag, 2, 1450.79, 369.54, 550.221  )
--SendTrigger(""clearPandas"") -- Fade out pandas mid pathing
--RunToLocation( grummleMainBag, 2, 1447.98, 369.523, 550.221  )


-- End Scene
SendTrigger( ""blackLight_CR"" )
--SendTrigger(""endScene"")
FadeOut(grummleMainBag, 1)
grummleMainBag: Despawn()"
209,Lorewalker Story - S1: Grummle - Init - Scene 2 Actors - ZTO,"-- Spawn Pack 1 group
pandarenSlaveID = 61904
--pandarenSlave01 = SpawnActor(pandarenSlaveID, 1448.95, 358.934, 550.222, 268.352 ) -- Pandaren Slave
--moguSlaver01 = SpawnActor(moguGruntID, 1450.02, 356.149, 550.222, 90.8269 ) -- Mogu Slaver
--FadeOut( pandarenSlave01, 0 )
--FadeOut( moguSlaver01, 0 )

-- Spawn Pack 2 group
pandarenSlave02 = SpawnActor(pandarenSlaveID, 1457.77, 366.87, 550.222, 328.589 ) -- Pandaren Slave
pandarenSlave03 = SpawnActor(pandarenSlaveID, 1461.31, 370.165, 550.222, 278.864 ) -- Pandaren Slave
moguSlaver02 = SpawnActor(moguGruntID, 1461.65, 365.438, 550.222, 122.714 ) -- Mogu Slaver
grummleCheer1 = SpawnActor(grummleID, 1461.78, 361.129, 551.808, 131.713 ) -- Grummle Cheer 1
grummleCheer2 = SpawnActor(grummleID, 1459.34, 358.958, 551.808, 93.2375 ) -- Grummle Cheer 1
grummleCheer3 = SpawnActor(grummleID, 1457.85, 360.444, 550.223, 82.6616 ) -- Grummle Cheer 1
grummleCheer4 = SpawnActor(grummleID, 1455.37, 362.743, 550.223, 34.5116 ) -- Grummle Cheer 1
FadeOut( pandarenSlave02, 0 )
FadeOut( pandarenSlave03, 0 )
FadeOut( moguSlaver02, 0 )
FadeOut( grummleCheer1, 0 )
FadeOut( grummleCheer2, 0 )
FadeOut( grummleCheer3, 0 )
FadeOut( grummleCheer4, 0 )

-- Spawn Pack 3 group
--shadopanID = 61908
--hozenID = 61906
--hozen01 = SpawnActor(hozenID, 1448.95, 358.934, 550.222, 268.352 ) -- Hozen Downstage
--hozen02 = SpawnActor(hozenID, 1447.04, 357.023, 550.222, 359.702 ) -- Hozen Downstage
--shadopan01 = SpawnActor(shadopanID, 1450.02, 356.149, 550.222, 90.8269 ) -- Shadowpan Upstage
--FadeOut( shadopan01, 0 )
--FadeOut( hozen01, 0 )
--FadeOut( hozen02, 0 )"
210,Lorewalker Story - S1: Grummle - Scene 2 - pandarenSlave01 - ZTO,"-- Wait until scene 2 begins
-- pandarenSlave01: SetFacingToAbs(Vector:New(1483.4, 227.516, 550.222)) 
-- pandarenSlave01: PlayLoopingAnimKit( 2312 )

-- WaitForTrigger(""scene2Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
-- FadeIn( pandarenSlave01, 1)
-- local actorAuraVisual = pandarenSlave01:PlaySpellStateVisual(24803) --Cast Actor Visual
-- RunToLocation( pandarenSlave01, 2, 1466.88, 375.627, 550.221 )
-- FadeOut( pandarenSlave01, 1)
-- pandarenSlave01:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

-- Wait(5)
-- pandarenSlave01: Despawn()"
211,Lorewalker Story - S1: Grummle - Scene 2 - moguSlaver01 - ZTO,"-- Wait until scene 2 begins
-- moguSlaver01: SetFacingToAbs(Vector:New(1448.66, 601.672, 550.222)) 
-- moguSlaver01:PlayLoopingFullBodyAnim(Animations.EmoteLaugh)

-- WaitForTrigger(""scene2Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
-- FadeIn( moguSlaver01, 1)
-- local actorAuraVisual = moguSlaver01:PlaySpellStateVisual(24803) --Cast Actor Visual
-- RunToLocation( moguSlaver01, 2, 1467.81, 372.467, 550.222 )
-- FadeOut( moguSlaver01, 1)
-- moguSlaver01:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
-- 
-- Wait(5)
-- moguSlaver01: Despawn()"
212,Lorewalker Story - S1: Grummle - Scene 3 - pandarenSlave02 - ZTO,"-- Wait until scene 3 begins
--pandarenSlave02: SetFacingToAbs(Vector:New(1483.4, 227.516, 550.222)) 
pandarenSlave02: PlayLoopingAnimKit( 2315 )

WaitForTrigger(""scene3Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
FadeIn( pandarenSlave02, 1)
local actorAuraVisual = pandarenSlave02:PlaySpellStateVisual(24803) --Cast Actor Visual
--RunToLocation( pandarenSlave02, 2, 1466.88, 375.627, 550.221 )


--Clear when end scene command is heard
WaitForTrigger( ""endScene3"" )
FadeOut( pandarenSlave02, 1)
pandarenSlave02:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
pandarenSlave02: Despawn()"
213,Lorewalker Story - S1: Grummle - Scene 3 - pandarenSlave03 - ZTO,"-- Wait until scene 3 begins
--pandarenSlave03: SetFacingToAbs(Vector:New(1739.47, 358.197, 550.222)) 
Wait (1)
pandarenSlave03: PlayLoopingAnimKit( 2315 )

WaitForTrigger(""scene3Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
FadeIn( pandarenSlave03, 1)
local actorAuraVisual = pandarenSlave03:PlaySpellStateVisual(24803) --Cast Actor Visual
--RunToLocation( pandarenSlave03, 2, 1464.94, 373.747, 550.222 )

--Clear when end scene command is heard
WaitForTrigger( ""endScene3"" )
FadeOut( pandarenSlave03, 1)
pandarenSlave03:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
pandarenSlave03: Despawn()"
214,Lorewalker Story - S1: Grummle - Scene 3 - moguSlaver02 - ZTO,"-- Wait until scene 3 begins
moguSlaver02: SetFacingToAbs(Vector:New(1448.66, 601.672, 550.222)) 
moguSlaver02: PlayLoopingAnimKit( 2316 )

WaitForTrigger(""scene3Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
SendTrigger( ""cueLight_UC"")
FadeIn( moguSlaver02, 1)
local actorAuraVisual = moguSlaver02:PlaySpellStateVisual(24803) --Cast Actor Visual
--RunToLocation( moguSlaver02, 2, 1467.81, 372.467, 550.222 )

--Clear when end scene command is heard
WaitForTrigger( ""endScene3"" )
SendTrigger( ""blackLight_UC"")
FadeOut( moguSlaver02, 1)
moguSlaver02:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
moguSlaver02: Despawn()"
215,Lorewalker Story - S1: Grummle - Scene 4 - hozen01 - ZTO,"-- Wait until scene 4 begins
-- hozen01: SetFacingToAbs(Vector:New(1483.4, 227.516, 550.222)) 
-- hozen01: PlayLoopingAnimKit( 2315 )

-- WaitForTrigger(""scene4Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
-- FadeIn( hozen01, 1)
-- local actorAuraVisual = hozen01:PlaySpellStateVisual(24803) --Cast Actor Visual
-- RunToLocation( hozen01, 2, 1466.88, 375.627, 550.221  )
-- FadeOut( hozen01, 1)
-- hozen01:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

-- Wait(5)
-- hozen01: Despawn()"
216,Lorewalker Story - S1: Grummle - Scene 5 - shadopan01 - ZTO,"-- Wait until scene 5 begins
--shadopan01: SetFacingToAbs(Vector:New(1281.7, 556.612, 536.167)) 
--shadopan01: PlayLoopingAnimKit( 2315 )

WaitForTrigger(""scene5Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
FadeIn( light_cr, 1)
FadeIn( shadopan01, 1)
local actorAuraVisual = shadopan01:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for grummles to arrive
WaitForTrigger (""Scene5a"")
PlayOneShotSplitBodyAnim( shadopan01, Animations.EmoteBow )

-- Clear shado-pan at end of scene
WaitForTrigger (""endScene5"")
FadeOut( light_cr, 1)
FadeOut( shadopan01, 1)
shadopan01:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
shadopan01: Despawn()"
217,Lorewalker Story - S1: Grummle - Scene 4 - hozen02 - ZTO,"-- Wait until scene 3 begins
-- hozen02: SetFacingToAbs(Vector:New(1739.47, 358.197, 550.222)) 
-- Wait (1)
-- hozen02: PlayLoopingAnimKit( 2315 )

-- WaitForTrigger(""scene4Trigger"")

-- Kneel before slavemaster and truck from stage left to stage right
-- FadeIn( hozen02, 1)
-- local actorAuraVisual = hozen02:PlaySpellStateVisual(24803) --Cast Actor Visual
-- RunToLocation( hozen02, 2, 1464.94, 373.747, 550.222 )
-- FadeOut( hozen02, 1)
-- hozen02:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

-- Wait(5)
-- hozen02: Despawn()"
218,Jade Forest - Horde Intro Scene - Cannon01 - JSB,"cannon01:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 15 )


cannon01:Despawn()"
219,Jade Forest - Horde Intro Scene - Cannon02 - JSB,"cannon02:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 15 )


cannon02:Despawn()"
220,Jade Forest - Horde Intro Scene - Mists - JSB,"WaitForTrigger( ""shipSpotted"" )

Wait( 3 )
for index, mist in pairs(mists) do
	mist:Fade( 0, 3 )
end

Wait( 3 )

-- despawn all the mists
for index, mist in pairs(mists) do
	mist:Despawn()
end"
221,Jade Forest - Horde Intro Scene - Vangard01 - JSB,"-- COPY STARTS HERE
--
local relativeMover = vanguard01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

vanguard01:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- vanguard01:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
222,Jade Forest - Horde Intro Scene - Vangard02 - JSB,"-- COPY STARTS HERE
--
local relativeMover = vanguard02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

vanguard02:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- vanguard02:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
223,Jade Forest - Horde Intro Scene - Vangard03 - JSB,"-- COPY STARTS HERE
--
local relativeMover = vanguard03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

vanguard03:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- vanguard03:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
225,Jade Forest - Horde Intro Scene - Shokia - JSB,"
WaitForTrigger( ""shipSpotted"" )
Wait(1.9)
RunToLocation( shokia, 2, 3450.24, -285.118, 267.019, 267.956 )


-- COPY STARTS HERE
--
local relativeMover = shokia -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

shokia:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
shokia:PlayLoopingFullBodyAnim(Animations.KneelLoop)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
226,Jade Forest - Horde Intro Scene - Clone - JSB,"
WaitForTrigger( ""rivettTalk"" )

Wait(16)

RunToLocation( clone, 1, 3449.42, -286.845, 266.9, 276.345 )


-- COPY STARTS HERE
--
local relativeMover = clone -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

WaitForTrigger( ""zeppelinCrash"" )

RunToLocation( clone, 400, 3168.19, -429.932, 246.441, 213 )
clone:PlayLoopingFullBodyAnim(Animations.FlyFall)
clone:FollowPath( 3246, 3 )

Wait( 2.5 )

scene:SetCamera(402, 0, nil, nil)

Wait( 0.5 )

scene:SetCamera(0, 0, nil, nil)"
228,Jade Forest - Horde Intro Scene - Zeppelin Cannon01 - JSB,"zeppelinCannon01:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship

WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )


--
-- COPY STOPS HERE
--

"
229,Jade Forest - Horde Intro Scene - Zeppelin Cannon02 - JSB,"zeppelinCannon02:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

"
230,Jade Forest - Horde Intro Scene - Zeppelin Cannon03 - JSB,"zeppelinCannon03:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

"
231,Jade Forest - Horde Intro Scene - Zeppelin Cannon04 - JSB,"zeppelinCannon04:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--
"
232,Jade Forest - Horde Intro Scene - Cannons Fire - JSB,"
WaitForTrigger( ""zeppelinMove"" )
Wait( 2.5 ) 
CastSpellAtActor( zeppelinCannon01, zeppelinTarget02,120673 )
Wait( 0.6 ) 
CastSpellAtActor( zeppelinCannon02, zeppelinTarget01,120673 )
Wait( 0.8 ) 
CastSpellAtActor( zeppelinCannon03, zeppelinTarget03,120673 )
Wait( 0.5 ) 
CastSpellAtActor( zeppelinCannon04, zeppelinTarget04,120682 )

Wait( 1.26 )

CastSpellAtActor( cannon01, shipTarget01,120705 )
CastSpellAtActor( cannon01, shipTarget01,122262 )
Wait( 0.3 ) 
CastSpellAtActor( cannon02, shipTarget02,120705 )
CastSpellAtActor( cannon02, shipTarget02,122262 )
Wait( 0.3 ) 
CastSpellAtActor( cannon03, shipTarget03,120705 )
CastSpellAtActor( cannon03, shipTarget03,122262 )
Wait( 0.3 ) 
CastSpellAtActor( cannon04, shipTarget04,120705 )
CastSpellAtActor( cannon04, shipTarget04,122262 )

"
233,Jade Forest - Horde Intro Scene - Init 02 - JSB,"-- spawn Zeppelin Cannon Targets
local zeppelinTargetBunnyCreatureID = 61997
zeppelinTarget01 = SpawnActor( zeppelinTargetBunnyCreatureID, 3609.44, -593.548, 0, 326.921, 1.0, false )
zeppelinTarget02 = SpawnActor( zeppelinTargetBunnyCreatureID, 3676.5, -557.003, 0, 251.096, 1.0, false )
zeppelinTarget03 = SpawnActor( zeppelinTargetBunnyCreatureID, 3593.46, -636.814, 0, 303.071, 1.0, false )
zeppelinTarget04 = SpawnActor( zeppelinTargetBunnyCreatureID, 3633.02, -648.158, 16.8191, 333.671, 1.0, false )

-- spawn Ship Cannon Targets
local shipTargetBunnyCreatureID = 61997
shipTarget01 = SpawnActor( shipTargetBunnyCreatureID, 3479.28, -207.399, 284.855, 283.35, 1.0, false )
shipTarget02 = SpawnActor( shipTargetBunnyCreatureID, 3423.08, -246.839, 269.832, 283.825, 1.0, false )
shipTarget03 = SpawnActor( shipTargetBunnyCreatureID, 3417.72, -262.495, 268.646, 294.4, 1.0, false )
shipTarget04 = SpawnActor( shipTargetBunnyCreatureID, 3446.75, -291.758, 298.825, 307.425, 1.0, false )

-- spawn Ship Fire Bunnies
shipFire01 = SpawnActor( shipTargetBunnyCreatureID, 3645.32, -629.195, 12.1322, 139.734, 1.0, false )
shipFire02 = SpawnActor( shipTargetBunnyCreatureID, 3653.98, -615.715, 8.04192, 146.709, 1.0, false )
shipFire03 = SpawnActor( shipTargetBunnyCreatureID, 3658.26, -610.236, 18.7299, 141.309, 1.0, false )

-- spawn Cannons
local cannonModel = ""CREATURE\\ALLIANCEBRASSCANNON\\AllianceBrassCannon.M2""
cannon01 = SpawnModelActor( cannonModel, 3443.82, -935.37, 12.12, 144.899, 1, false ) -- ( modelFileName, x, y, z, facing, scale, snapToGround )
cannon02 = SpawnModelActor( cannonModel, 3446.112, -932.104, 11.9, 285.375, 1, false )
cannon03 = SpawnModelActor( cannonModel, 3448.505, -928.838, 11.75, 312.15, 1, false )
cannon04 = SpawnModelActor( cannonModel, 3451.00, -925.57, 11.652, 143.099, 1, false )

-- spawn zeppelin fire
local zeppelinFireCreatureID = 61997
zeppelinFire = SpawnActor( zeppelinFireCreatureID, 3310.88, -336.348, 279, 143, 5, false )

-- spawn zeppelin fire 01
local zeppelinFireCreatureID = 61997
zeppelinFire01 = SpawnActor( zeppelinFireCreatureID, 3302.44, -334.681, 278.071, 325.581, 1, false )

-- spawn zeppelin fire 02
local zeppelinFireCreatureID = 61997
zeppelinFire02 = SpawnActor( zeppelinFireCreatureID, 3308.47, -332.332, 273.305, 313.882, 1, false )

-- spawn zeppelin fire 03
local zeppelinFireCreatureID = 61997
zeppelinFire03 = SpawnActor( zeppelinFireCreatureID, 3292.96, -344.628, 282.832, 27.9496, 1, false )


-- spawn crash bunny
local crashbunnyCreatureID = 61997
crashBunny = SpawnActor( crashbunnyCreatureID, 3172.29, -422.428, 239.355, 203.225, 1, false )

-- spawn Alliance Crewman 01
local allianceCrewmanCreatureID = 62634
allianceCrewman01 = SpawnActor( allianceCrewmanCreatureID, 3448.72, -936.778, 12.8252, 133.159, 1.0, false )

-- spawn Alliance Crewman 02
local allianceCrewmanCreatureID = 62634
allianceCrewman02 = SpawnActor( allianceCrewmanCreatureID, 3457.39, -935.658, 12.1602, 143.644, 1.0, false )

-- spawn Alliance Crewman 03
local allianceCrewmanCreatureID = 62634
allianceCrewman03 = SpawnActor( allianceCrewmanCreatureID, 3453.5, -941.767, 12.6392, 88.2943, 1.0, false )

-- spawn Alliance Crewman 04
local allianceCrewmanCreatureID = 62634
allianceCrewman04 = SpawnActor( allianceCrewmanCreatureID, 3464.04, -922.214, 6.76588, 150.169, 1.0, false )

-- spawn Alliance Crewman 05
local allianceCrewmanCreatureID = 62634
allianceCrewman05 = SpawnActor( allianceCrewmanCreatureID, 3470.05, -911.329, 17.9969, 128.254, 1.0, false )

"
234,Jade Forest - Horde Intro Scene - Cannon03 - JSB,"cannon03:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do


WaitForTrigger( ""zeppelinMove"" )
Wait( 15 )


cannon03:Despawn()"
235,Jade Forest - Horde Intro Scene - Cannon04 - JSB,"cannon04:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )
Wait( 15 )


cannon04:Despawn()"
236,Lorewalker Story - S1: Grummle - Fog Bunnies - ZTO DEPRECATED,"-- DEPRECATED
-- local actorAuraVisual = fogbunny1:PlaySpellStateVisual(24841) --Cast Actor Visual
-- local actorAuraVisual = fogbunny2:PlaySpellStateVisual(24841) --Cast Actor Visual
-- local actorAuraVisual = fogbunny3:PlaySpellStateVisual(24841) --Cast Actor Visual

-- WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
-- FadeOut(fogbunny1, 1)
-- FadeOut(fogbunny2, 1)
-- FadeOut(fogbunny3, 1)
-- fogbunny1: Despawn()
-- fogbunny2: Despawn()
-- fogbunny3: Despawn()"
237,Jade Forest - Horde Intro Scene - Ship Cannon Target - JSB,"
WaitForTrigger( ""zeppelinMove"" )

Wait( 11 )

-- local instance = zeppelinTarget04:PlaySpellStateVisual(19388)
local instance = zeppelinTarget04:PlaySpellStateVisual(25187)

Wait( 4 )

local instance = shipFire01:PlaySpellStateVisual(25187)
local instance = shipFire02:PlaySpellStateVisual(25187)
local instance = shipFire03:PlaySpellStateVisual(25187)
"
238,Jade Forest - Horde Intro Scene - Cannons Target 01 - Zeppelin - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
239,Jade Forest - Horde Intro Scene - Cannons Target 02 - Zeppelin - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
240,Jade Forest - Horde Intro Scene - Cannons Target 03 - Zeppelin - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
241,Jade Forest - Horde Intro Scene - Cannons Target 04 - Zeppelin - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
242,Lorewalker Story - S1: Grummle - grummlePacker1 - ZTO,"-- Wait until called
WaitForTrigger(""addGrummle1"")

PlayLoopingSplitBodyAnim( grummlePacker1, Animations.Run )
FadeIn( grummlePacker1, 1 )
local actorAuraVisual = grummlePacker1:PlaySpellStateVisual(24803) --Cast Actor Visual



-- Wait until tree hits lead grummle, then cross and exit stage right
WaitForTrigger(""treeSmack"")
RunToLocation( grummlePacker1, 7, 1443.38, 362.09, 550.221  )
FadeOut( grummlePacker1, 1)
grummlePacker1:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
grummlePacker1: Despawn()"
243,Lorewalker Story - S1: Grummle - grummlePacker2 - ZTO,"-- Wait until called
WaitForTrigger(""addGrummle2"")

PlayLoopingSplitBodyAnim( grummlePacker2, Animations.Run )
FadeIn( grummlePacker2, 1 )
local actorAuraVisual = grummlePacker2:PlaySpellStateVisual(24803) --Cast Actor Visual



-- Wait until tree hits lead grummle, then cross and exit stage right
WaitForTrigger(""treeSmack"")
RunToLocation( grummlePacker2, 7, 1446.07, 358.825, 550.221  )
FadeOut( grummlePacker2, 1)
grummlePacker2:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
grummlePacker2: Despawn()"
244,Lorewalker Story - S1: Grummle - Init - Scene 4 Actors - ZTO,"-- Spawn Pack 1 group
lamppostID = 62032
lamppost1 = SpawnActor(lamppostID, 1454.04, 369.326, 550.221, 268.352 ) -- Lamppost spawn stage left
FadeOut( lamppost1, 0 )

-- Spawn Pandaren group
richPandarenID = 62053
richPandaren1 = SpawnActor(richPandarenID, 1445.58, 361.45, 550.222, 71.41 ) -- Spawns downstage right
FadeOut( richPandaren1, 0 )

-- Spawn Grummle Vendors
grummleVendor1 = SpawnActor(grummleID, 1448.32, 363.899, 550.222, 207.985 ) -- Spawns downstage left
grummleVendor2 = SpawnActor(grummleBagID, 1448.64, 360.894, 550.221, 145.9) -- Spawn second vendor
FadeOut( grummleVendor1, 0 )
FadeOut( grummleVendor2, 0 )

-- Spawn Yak
yakID = 62272
whiteyak = SpawnActor(yakID, 1450.86, 362.875, 550.222, 188.409 ) -- Spawns downstage left
FadeOut( whiteyak, 0 )"
245,Lorewalker Story - S1: Grummle - Scene 1 - lamppost1 - ZTO,"-- Wait until scene 3 begins
WaitForTrigger(""callSmack"")

-- Kneel before slavemaster and truck from stage left to stage right
FadeIn( lamppost1, 1)
local actorAuraVisual = lamppost1:PlaySpellStateVisual(24803) --Cast Actor Visual
RunToLocation( lamppost1, 4, 1460.04, 374.389, 550.222 )
SendTrigger(""treeSmack"")


-- Kneel before slavemaster and truck from stage left to stage right
WaitForTrigger(""clearTree"")
FadeOut( lamppost1, 1)
lamppost1:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
lamppost1: Despawn()"
248,Lorewalker Story - S1: Grummle - Scene 4 - stinkyPandaren - ZTO,"-- Wait until called by GrummleMainBag
--WaitForTrigger(""scene4Trigger"")

-- Fade in on command, beckon at little grummle
--FadeIn( stinkyPandaren1, 1)
--local actorAuraVisual = stinkyPandaren1:PlaySpellStateVisual(24803) --Cast Actor Visual
--local actorSmokeVisual = stinkyPandaren1:PlaySpellStateVisual(13960) --Cast Smoke Visual
--stinkyPandaren1:PlayLoopingFullBodyAnim(Animations.EmoteTalk)


-- Beckon grummle over
--WaitForTrigger(""endScene4"")
--FadeOut( stinkyPandaren1, 1)
--stinkyPandaren1:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
--stinkyPandaren1:ClearSpellVisual( actorSmokeVisual) --Clear Actor Visual

--Wait(5)
--stinkyPandaren1: Despawn()
"
249,Lorewalker Story - S1: Grummle - Scene 4 - richPandaren - ZTO,"-- Wait until called by GrummleMainBag
WaitForTrigger(""scene4Trigger"")

-- Fade in on command, beckon at little grummle
FadeIn( light_cl, 2 )
FadeIn( richPandaren1, 1)
local actorAuraVisual = richPandaren1:PlaySpellStateVisual(24803) --Cast Actor Visual
richPandaren1: PlayLoopingFullBodyAnim(Animations.EmoteTalkExclamation)


-- Beckon grummle over
WaitForTrigger(""scene5Trigger"")
PlayOneShotSplitBodyAnim( grummleMain, Animations.EmotePoint )
Wait(3)

FadeOut(light_cl, 2)
FadeOut( richPandaren1, 1)
richPandaren1: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
richPandaren1: Despawn()"
250,ZZOLD - Stormstout Brewery - Cinematic Framework - Spawning,"--
-- SpawnModelActor( modelFileName, pointsPathID, snapToGround [=true] )
--   Spawn an uninteractible actor
--[[
function SpawnModelActorsAtPoints( modelFileName, pointsPathID, snapToGround )

	createData = ActorCreateData:Default()
	createData.model = modelFileName
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	return actors

end 
--]]
"
251,ZZOLD - Stormstout Brewery - Cinematic Framework,"--[[
-- default all cinematics to non relative
scene:SetRelativeCoords(false) -- set to absolute worlld coords

function Wait( time )
	scene:WaitTimer( time )
end

--
-- SpawnActor( creatureID, x, y, z, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor
--
function SpawnActor( creatureID, x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )
	createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actor = scene:SpawnActor( createData )
	actor:SetInteractible( false )
	return actor

end

--
-- SpawnModelActor( modelFileName, x, y, z, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor
--
function SpawnModelActor( modelFileName, x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local pos = Vector:New( x, y, z )
	local transform = Transform:New( pos, facing )
	createData = ActorCreateData:NewModel( ""dummy"", modelFileName, transform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actor = scene:SpawnActor( createData )
	return actor

end


--
-- RunToLocation( actor, speed, x, y, z, facing [default = direction of travel] )
--   Run actor to location at speed
--
function RunToLocation( actor, speed, x, y, z, facing )

	local destPos = Vector:New(x, y, z)
	
	local currPos = actor:GetPosition()
	local offset = currPos - destPos
	local distance = offset:Magnitude()

	local travelTime = distance / speed
	
	actor:WaitMoveToAbs( destPos, travelTime )

	if facing then
		actor:SetFacing( facing )
	end

end


--
-- CastSpellAtActor( caster, target, spellID, faceTarget [default = false] )
--   Cast a spell at the target actor
--
function CastSpellAtActor( caster, target, spellID, faceTarget )

	-- turn to face the target if required
	if faceTarget and faceTarget == true then
		caster:SetFacingToTarget( target, Vector:New() )
		scene:WaitTimer( 0.75 )
	end

	caster:CastSpell( spellID, target )
	
	if faceTarget and faceTarget == true then
		caster:ClearFacing()
	end

end

--
-- PlayLoopingSplitBodyAnim( actor, anim )
--   Play a looping animation on the actor
--
function PlayLoopingSplitBodyAnim( actor, anim )

	actor:PlayLoopingSplitBodyAnim( anim )

end

--
-- StopLoopingSplitBodyAnim( actor )
--   Stop playing a looping animation on the actor
--
function StopLoopingSplitBodyAnim( actor )

	actor:PlayLoopingSplitBodyAnim( anim )

end

--
-- PlayOneShotSplitBodyAnim( actor, anim )
--   Play a looping animation on the actor
--
function PlayOneShotSplitBodyAnim( actor, anim )

	actor:PlayOneShotSplitBodyAnim( anim )

end

--
-- StopLoopingSplitBodyAnim( actor )
--   Stop the looping anim kit currently playing on the actor
--
function StopLoopingSplitBodyAnim( actor )

	actor:StopAnimKit( AnimKits.LoopingSplitBody )

end

--
-- FadeOut( actor, fadeTime [ default = 2 ] )
--   Fade the actor out over fadeTime seconds
--
function FadeOut( actor, fadeTime )

	if not fadeTime then
		fadeTime = 2
	end

	actor:Fade( 0, fadeTime )

end

--
-- FadeIn( actor, fadeTime [ default = 0.5 ] )
--   Fade the actor in over fadeTime seconds
--
function FadeIn( actor, fadeTime )

	if not fadeTime then
		fadeTime = 0.5
	end

	actor:Fade( 1, fadeTime )

end

Triggers = { }
function SendTrigger( triggerName )
	Triggers[triggerName] = true
end

function WaitForTrigger( triggerName )

	local waitCondition = function()
		return (Triggers[triggerName] == true)
	end
	"
252,Siege of Niuzao Temple - The Mantid Army - Init - SLG,"-- spawn flyers 1
local flyerCreatureID = 62091
flyer00 = SpawnActor( flyerCreatureID, 1842.57, 5277.2, 168.81, 315.917, false )
flyer01 = SpawnActor( flyerCreatureID, 1842.57, 5277.2, 178.81, 315.917, false )
flyer02 = SpawnActor( flyerCreatureID, 1842.57, 5277.2, 188.81, 315.917, false )
flyer03 = SpawnActor( flyerCreatureID, 1842.57, 5277.2, 198.81, 315.917, false )
flyer04 = SpawnActor( flyerCreatureID, 1842.57, 5277.2, 208.81, 315.917, false )


flyer10 = SpawnActor( flyerCreatureID, 1851.98, 5284.56, 168.81, 315.917, false )
flyer11 = SpawnActor( flyerCreatureID, 1851.98, 5284.56, 178.81, 315.917, false )
flyer12 = SpawnActor( flyerCreatureID, 1851.98, 5284.56, 188.81, 315.917, false )
flyer13 = SpawnActor( flyerCreatureID, 1851.98, 5284.56, 198.81, 315.917, false )
flyer14 = SpawnActor( flyerCreatureID, 1851.98, 5284.56, 208.81, 315.917, false )

flyer20 = SpawnActor( flyerCreatureID, 1861.37, 5291.57, 168.81, 315.917, false )
flyer21 = SpawnActor( flyerCreatureID, 1861.37, 5291.57, 178.81, 315.917, false )
flyer22 = SpawnActor( flyerCreatureID, 1861.37, 5291.57, 188.81, 315.917, false )
flyer23 = SpawnActor( flyerCreatureID, 1861.37, 5291.57, 198.81, 315.917, false )
flyer24 = SpawnActor( flyerCreatureID, 1861.37, 5291.57, 208.81, 315.917, false )"
253,Stormstout Brewery - Virmen Keg Scene - Init 1,"-- spawn Virmen
local virmenCreatureID = 60205

virmen1 = SpawnActor( virmenCreatureID, -726, 1250, 165, 0, 1.0, false )
virmen2 = SpawnActor( virmenCreatureID, -728, 1250, 165, 10, 1.0, false )
virmen3 = SpawnActor( virmenCreatureID, -730, 1250, 165, 20, 1.0, false )
virmen4 = SpawnActor( virmenCreatureID, -732, 1250, 165, 30, 1.0, false )
virmen5 = SpawnActor( virmenCreatureID, -734, 1250, 165, 40, 1.0, false )
virmen6 = SpawnActor( virmenCreatureID, -736, 1250, 165, 50, 1.0, false )
virmen7 = SpawnActor( virmenCreatureID, -738, 1250, 165, 60, 1.0, false )
virmen8 = SpawnActor( virmenCreatureID, -724, 1250, 165, 70, 1.0, false )
virmen9 = SpawnActor( virmenCreatureID, -722, 1250, 165, 80, 1.0, false )
virmen10 = SpawnActor( virmenCreatureID, -720, 1250, 165, 90, 1.0, false )
virmen11 = SpawnActor( virmenCreatureID, -718, 1250, 165, 100, 1.0, false )

virmen12 = SpawnActor( virmenCreatureID, -727, 1252, 165, 110, 1.0, false )
virmen13 = SpawnActor( virmenCreatureID, -727, 1254, 165, 120, 1.0, false )
virmen14 = SpawnActor( virmenCreatureID, -727, 1256, 165, 130, 1.0, false )
virmen15 = SpawnActor( virmenCreatureID, -727, 1258, 165, 140, 1.0, false )
virmen16 = SpawnActor( virmenCreatureID, -727, 1260, 165, 150, 1.0, false )
virmen17 = SpawnActor( virmenCreatureID, -727, 1248, 165, 160, 1.0, false )
virmen18 = SpawnActor( virmenCreatureID, -727, 1246, 165, 170, 1.0, false )
virmen19 = SpawnActor( virmenCreatureID, -727, 1244, 165, 180, 1.0, false )
virmen20 = SpawnActor( virmenCreatureID, -727, 1242, 165, 190, 1.0, false )
virmen21 = SpawnActor( virmenCreatureID, -727, 1240, 165, 200, 1.0, false )

virmen22 = SpawnActor( virmenCreatureID, -729, 1252, 165, 210, 1.0, false )
virmen23 = SpawnActor( virmenCreatureID, -725, 1252, 165, 220, 1.0, false )
virmen24 = SpawnActor( virmenCreatureID, -723, 1252, 165, 230, 1.0, false )
virmen25 = SpawnActor( virmenCreatureID, -721, 1252, 165, 240, 1.0, false )
virmen26 = SpawnActor( virmenCreatureID, -731, 1252, 165, 250, 1.0, false )
virmen27 = SpawnActor( virmenCreatureID, -733, 1252, 165, 260, 1.0, false )
virmen28 = SpawnActor( virmenCreatureID, -735, 1252, 165, 270, 1.0, false )
virmen29 = SpawnActor( virmenCreatureID, -737, 1252, 165, 280, 1.0, false )
virmen30 = SpawnActor( virmenCreatureID, -719, 1252, 165, 290, 1.0, false )

virmen31 = SpawnActor( virmenCreatureID, -729, 1248, 165, 300, 1.0, false )
virmen32 = SpawnActor( virmenCreatureID, -725, 1248, 165, 310, 1.0, false )
virmen33 = SpawnActor( virmenCreatureID, -723, 1248, 165, 320, 1.0, false )
virmen34 = SpawnActor( virmenCreatureID, -721, 1248, 165, 330, 1.0, false )
virmen35 = SpawnActor( virmenCreatureID, -731, 1248, 165, 340, 1.0, false )
virmen36 = SpawnActor( virmenCreatureID, -733, 1248, 165, 350, 1.0, false )
virmen37 = SpawnActor( virmenCreatureID, -735, 1248, 165, 0, 1.0, false )
virmen38 = SpawnActor( virmenCreatureID, -737, 1248, 165, 10, 1.0, false )
virmen39 = SpawnActor( virmenCreatureID, -719, 1248, 165, 20, 1.0, false )

virmen40 = SpawnActor( virmenCreatureID, -728, 1246, 165, 30, 1.0, false )
virmen41 = SpawnActor( virmenCreatureID, -724, 1246, 165, 40, 1.0, false )
virmen42 = SpawnActor( virmenCreatureID, -722, 1246, 165, 50, 1.0, false )
virmen43 = SpawnActor( virmenCreatureID, -720, 1246, 165, 60, 1.0, false )
virmen44 = SpawnActor( virmenCreatureID, -730, 1246, 165, 70, 1.0, false )
virmen45 = SpawnActor( virmenCreatureID, -732, 1246, 165, 80, 1.0, false )
virmen46 = SpawnActor( virmenCreatureID, -734, 1246, 165, 90, 1.0, false )
virmen47 = SpawnActor( virmenCreatureID, -736, 1246, 165, 100, 1.0, false )
virmen48 = SpawnActor( virmenCreatureID, -718, 1246, 165, 120, 1.0, false )
"
254,Jade Forest - Horde Intro Scene - Celebration - JSB,"
WaitForTrigger( ""shipMove"" )

Wait( 4 )
nazgrim:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)
Wait( 2.5 )
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteRoar)

shokia:StopLoopingFullBodyAnim()
shokia:PlayLoopingFullBodyAnim(Animations.Stand)

Wait( 0.5 )

shokia:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
clone:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
rivett:StopLoopingFullBodyAnim()
vanguard01:StopLoopingFullBodyAnim()
gorrok:StopLoopingFullBodyAnim()

Wait( 0.5 )

rivett:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
vanguard01:PlayOneShotFullBodyAnim(Animations.EmoteApplaud)
gorrok:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
snuff:PlayOneShotFullBodyAnim(Animations.EmoteDance)
vanguard02:StopLoopingFullBodyAnim()
vanguard03:StopLoopingFullBodyAnim()
kiryn:StopLoopingFullBodyAnim()
zinjun:StopLoopingFullBodyAnim()

Wait( 0.25 )
kiryn:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
zinjun:PlayOneShotFullBodyAnim(Animations.EmotePoint)


-- more cheers

WaitForTrigger( ""crashMove"" )
kiryn:Despawn()
zinjun:Despawn()
vanguard01:Despawn()
vanguard02:Despawn()
vanguard03:Despawn()
snuff:Despawn()
gorrok:Despawn()
rivett:Despawn()
nazgrim:Despawn()
shokia:Despawn()

"
255,Stormstout Brewery - Virmen Keg Scene - Init 2,"-- spawn Virmen
local virmenCreatureID = 60205

virmen49 = SpawnActor( virmenCreatureID, -729, 1244, 165, 130, 1.0, false )
virmen50 = SpawnActor( virmenCreatureID, -725, 1244, 165, 140, 1.0, false )
virmen51 = SpawnActor( virmenCreatureID, -723, 1244, 165, 150, 1.0, false )
virmen52 = SpawnActor( virmenCreatureID, -721, 1244, 165, 160, 1.0, false )
virmen53 = SpawnActor( virmenCreatureID, -731, 1244, 165, 170, 1.0, false )
virmen54 = SpawnActor( virmenCreatureID, -733, 1244, 165, 180, 1.0, false )
virmen55 = SpawnActor( virmenCreatureID, -735, 1244, 165, 190, 1.0, false )
virmen56 = SpawnActor( virmenCreatureID, -737, 1244, 165, 200, 1.0, false )
virmen57 = SpawnActor( virmenCreatureID, -719, 1244, 165, 210, 1.0, false )

virmen58 = SpawnActor( virmenCreatureID, -728, 1242, 165, 210, 1.0, false )
virmen59 = SpawnActor( virmenCreatureID, -724, 1242, 165, 220, 1.0, false )
virmen60 = SpawnActor( virmenCreatureID, -722, 1242, 165, 230, 1.0, false )
virmen61 = SpawnActor( virmenCreatureID, -720, 1242, 165, 240, 1.0, false )
virmen62 = SpawnActor( virmenCreatureID, -730, 1242, 165, 250, 1.0, false )
virmen63 = SpawnActor( virmenCreatureID, -732, 1242, 165, 260, 1.0, false )
virmen64 = SpawnActor( virmenCreatureID, -734, 1242, 165, 270, 1.0, false )
virmen65 = SpawnActor( virmenCreatureID, -736, 1242, 165, 280, 1.0, false )

virmen66 = SpawnActor( virmenCreatureID, -729, 1240, 165, 290, 1.0, false )
virmen67 = SpawnActor( virmenCreatureID, -725, 1240, 165, 300, 1.0, false )
virmen68 = SpawnActor( virmenCreatureID, -731, 1240, 165, 310, 1.0, false )
virmen69 = SpawnActor( virmenCreatureID, -733, 1240, 165, 320, 1.0, false )
virmen70 = SpawnActor( virmenCreatureID, -735, 1240, 165, 330, 1.0, false )

virmen71 = SpawnActor( virmenCreatureID, -729, 1254, 165, 340, 1.0, false )
virmen72 = SpawnActor( virmenCreatureID, -725, 1254, 165, 350, 1.0, false )
virmen73 = SpawnActor( virmenCreatureID, -723, 1254, 165, 0, 1.0, false )
virmen74 = SpawnActor( virmenCreatureID, -721, 1254, 165, 10, 1.0, false )
virmen75 = SpawnActor( virmenCreatureID, -731, 1254, 165, 20, 1.0, false )
virmen76 = SpawnActor( virmenCreatureID, -733, 1254, 165, 30, 1.0, false )
virmen77 = SpawnActor( virmenCreatureID, -735, 1254, 165, 40, 1.0, false )
virmen78 = SpawnActor( virmenCreatureID, -737, 1254, 165, 50, 1.0, false )
virmen79 = SpawnActor( virmenCreatureID, -719, 1254, 165, 60, 1.0, false )

virmen80 = SpawnActor( virmenCreatureID, -728, 1256, 165, 70, 1.0, false )
virmen81 = SpawnActor( virmenCreatureID, -724, 1256, 165, 80, 1.0, false )
virmen82 = SpawnActor( virmenCreatureID, -722, 1256, 165, 90, 1.0, false )
virmen83 = SpawnActor( virmenCreatureID, -720, 1256, 165, 100, 1.0, false )
virmen84 = SpawnActor( virmenCreatureID, -730, 1256, 165, 110, 1.0, false )
virmen85 = SpawnActor( virmenCreatureID, -732, 1256, 165, 120, 1.0, false )
virmen86 = SpawnActor( virmenCreatureID, -734, 1256, 165, 130, 1.0, false )
virmen87 = SpawnActor( virmenCreatureID, -736, 1256, 165, 140, 1.0, false )
"
256,Stormstout Brewery - Virmen Keg Scene - Init 3,"local virmenCreatureID = 60205

virmen88 = SpawnActor( virmenCreatureID, -729, 1258, 165, 150, 1.0, false )
virmen89 = SpawnActor( virmenCreatureID, -725, 1258, 165, 160, 1.0, false )
virmen90 = SpawnActor( virmenCreatureID, -723, 1258, 165, 170, 1.0, false )

virmen91 = SpawnActor( virmenCreatureID, -731, 1258, 165, 180, 1.0, false )
virmen92 = SpawnActor( virmenCreatureID, -733, 1258, 165, 190, 1.0, false )
virmen93 = SpawnActor( virmenCreatureID, -735, 1258, 165, 200, 1.0, false )
virmen94 = SpawnActor( virmenCreatureID, -737, 1258, 165, 300, 1.0, false )

virmen95 = SpawnActor( virmenCreatureID, -728, 1260, 165, 210, 1.0, false )
virmen96 = SpawnActor( virmenCreatureID, -726, 1260, 165, 230, 1.0, false )
virmen97 = SpawnActor( virmenCreatureID, -730, 1260, 165, 250, 1.0, false )
virmen98 = SpawnActor( virmenCreatureID, -732, 1260, 165, 260, 1.0, false )
virmen99 = SpawnActor( virmenCreatureID, -734, 1260, 165, 270, 1.0, false )
virmen100 = SpawnActor( virmenCreatureID, -736, 1260, 165, 280, 1.0, false )
virmen101 = SpawnActor( virmenCreatureID, -724, 1258, 165, 240, 1.0, false )

Wait(604800)"
257,Siege of Niuzao Temple - The Mantid Army - Master - SLG,"-- Make the flyers play their flying anims
flyer00:PlayLoopingAnimKit(1380)
flyer01:PlayLoopingAnimKit(1380)
flyer02:PlayLoopingAnimKit(1380)
flyer03:PlayLoopingAnimKit(1380)
flyer04:PlayLoopingAnimKit(1380)

flyer10:PlayLoopingAnimKit(1380)
flyer11:PlayLoopingAnimKit(1380)
flyer12:PlayLoopingAnimKit(1380)
flyer13:PlayLoopingAnimKit(1380)
flyer14:PlayLoopingAnimKit(1380)

flyer20:PlayLoopingAnimKit(1380)
flyer21:PlayLoopingAnimKit(1380)
flyer22:PlayLoopingAnimKit(1380)
flyer23:PlayLoopingAnimKit(1380)
flyer24:PlayLoopingAnimKit(1380)

Wait( 10 )"
258,Jade Forest - Horde Intro Scene - Zeppelin Fires - JSB,"zeppelinFire:SetFacingToAbs(Vector:New(2972.01, -45.2662, 337.945))
zeppelinFire01:SetFacingToAbs(Vector:New(2972.01, -45.2662, 337.945))
zeppelinFire02:SetFacingToAbs(Vector:New(2972.01, -45.2662, 337.945))

WaitForTrigger( ""zeppelinMove"" )

Wait( 25 )


local instance = zeppelinFire:PlaySpellStateVisual(25195)
local instance = zeppelinFire01:PlaySpellStateVisual(25196)
local instance = zeppelinFire02:PlaySpellStateVisual(25196)

Wait( 6 )

local instance = zeppelinFire01:PlaySpellStateVisual(25195)

Wait( 2 )

local instance = zeppelinFire02:PlaySpellStateVisual(25195)


-- Wait( 5 )



WaitForTrigger( ""crashMove"" )
local instance = zeppelinFire:PlaySpellStateVisual(19335)
local instance = zeppelinFire03:PlaySpellStateVisual(9520)
local instance = zeppelinFire03:PlaySpellStateVisual(19335)

zeppelinFire:FollowPath( 3120, 10 )
zeppelinFire03:FollowPath( 3245, 10 )
"
259,Jade Forest - Horde Intro Scene - CRASH - JSB,"
WaitForTrigger( ""zeppelinCrash"" )

local instance = crashBunny:PlaySpellStateVisual(25201)

local shakeOrigin01 = Vector:New(3168.19, -429.932, 246.441)
shakeX = scene:AddCameraEffect( 35, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 36, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 37, shakeOrigin01, nil, 1 )
"
276,Darren's Test 4000+,"print(""sub script 1!!"")
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
"
277,[1] Darren's Test 4000+,"--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

print(""sub script 2 :("")
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
"
278,[2] Darren's Test 4000+,"--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------
--80----------------------------------------------------------------------------

print(""sub script 3"")
"
281,Lorewalker Story - S1: Grummle - Init - Pre-scene Actors - ZTO,"-- Spawn huge mogu head!!
moguFaceID = 62170
moguFace = SpawnActor( moguFaceID, 1460.83, 362.878, 550.222, 131.721, .5 ) -- Mogu Main Character
moguFace: PlayLoopingAnimKit( 2340 )
FadeOut( moguFace, 0 )"
282,Lorewalker Story - S1: Grummle - MoguFace - ZTO,"-- Bring on the mighty mogu face!
WaitForTrigger( ""Spawn Face"" )
FadeIn( moguFace, 2 )


--FadeOut( moguFace, 2)
WaitForTrigger( ""Spawn Mogu"" )
FadeOut( moguFace, 2 )
moguFace: Despawn()"
283,Lorewalker Story - Stage Lights and Cho Setup - Init - ZTO,"-- Spawn Lorewalker Character
function SpawnLorewalkerActor( actorID, x, y, z, facing, scale, snapToGround )
	actor = 
		{
		name = SpawnActor( actorID, x, y, z, facing, scale, snapToGround );
		actorAuraVisual = actor.name:PlaySpellStateVisual(24803);
		}
	FadeOut(actor.name, 0)
	return actor
end 

-- Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, true )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, true )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, true )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, true )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, true )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, true )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, true )  -- Downstage Center bunny
 
-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is
--PlayLoopingSplitBodyAnim( lorewalker, Animations.EmoteReadLoop  ) -- Need to find Read anim

--Sounds
gong = 12827



-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
SendTrigger(""smoothPhaseComplete"")"
284,Lorewalker Story - Stage Lights - UL - ZTO,"-- Light - Upstage Left - When Called
WaitForTrigger( ""cueLight_UL"" )
FadeIn(light_ul, 2)


-- Fade out when call sent
WaitForTrigger( ""blackLight_UL"" )
FadeOut(light_ul, 2)

WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
FadeOut(light_ul, 1)
light_ul: Despawn()
"
285,Lorewalker Story - Stage Lights - UC - ZTO,"-- Light - Upstage Center - When Called
WaitForTrigger( ""cueLight_UC"" )
FadeIn(light_uc, 2)


-- Fade out when call sent
WaitForTrigger( ""blackLight_UC"" )
FadeOut(light_uc, 2)

WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
FadeOut(light_uc, 1)
light_uc: Despawn()
"
286,Lorewalker Story - Stage Lights - UR - ZTO,"-- Light - Upstage Right - When Called
WaitForTrigger( ""cueLight_UR"" )
FadeIn(light_ur, 2)


-- Fade out when call sent
WaitForTrigger( ""blackLight_UR"" )
FadeOut(light_ur, 2)

WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
FadeOut(light_ur, 1)
light_ur: Despawn()
"
287,Lorewalker Story - Stage Lights - CC - ZTO,"-- Light - Upstage Right - When Called
WaitForTrigger( ""cueLight_CC"" )
FadeIn(light_cc, 1)


-- Fade out when call sent
WaitForTrigger( ""blackLight_CC"" )
FadeOut(light_cc, 1)

WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
FadeOut(light_cc, 1)
light_cc: Despawn()
"
288,Lorewalker Story - Stage Lights - CL - ZTO,"-- Light - Center Left - When Called
WaitForTrigger( ""cueLight_CL"" )
FadeIn(light_cl, 1)


-- Fade out when call sent
WaitForTrigger( ""blackLight_CL"" )
FadeOut(light_cl, 1)

WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
FadeOut(light_cl, 1)
light_cl: Despawn()"
289,Lorewalker Story - Stage Lights - CR - ZTO,"-- Light - Center Left - When Called
WaitForTrigger( ""cueLight_CR"" )
FadeIn(light_cr, 1)


-- Fade out when call sent
WaitForTrigger( ""blackLight_CR"" )
FadeOut(light_cr, 1)

WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
FadeOut(light_cr, 1)
light_cr: Despawn()"
290,Lorewalker Story - S1: Grummle - Lorewalker Cho - ZTO,"--OnScene start

Wait (2)
lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
lorewalker:BroadcastText(BroadcastType.Say, 61462)
Wait (2)
SendTrigger( ""Spawn Face"" )
RunToLocation( lorewalker, 2, 1449.42, 358.265, 550.221, 36.9958 )

SendTrigger( ""Spawn Mogu"" ) -- Bring in the mogu
SendTrigger( ""Spawn Troggs"" ) -- Bring in the troggs

--Cross to Center Stage in time for Grummle transform
RunToLocation( lorewalker, 2, 1457.44, 365.731, 550.221, 130.144 ) 


--Wait for GrummleTransform to happen
WaitForTrigger( ""grummleTransform"" )
Wait (3)
RunToLocation( lorewalker, 2, 1463.12, 371.442, 550.221, 130.144 ) --Cross to Stage right

--Cross to Center Stage in time for Grummle transform
Wait (3)
SendTrigger( ""smokingGrummle"" )
RunToLocation( lorewalker, 2, 1457.44, 365.731, 550.221, 130.144 ) 

--On Treesmack
WaitForTrigger( ""treeSmack"" )
Wait (3)
RunToLocation( lorewalker, 2, 1451.2, 366.019, 550.221, 104.938 ) 
SendTrigger( ""scene3Trigger"" )
Wait (9)

-- Done with War, queue merchants
SendTrigger( ""endScene3"" )
Wait (1)
SendTrigger( ""scene4Trigger"" )

-- Let the talking happen then trigger scene 5
Wait (7)
SendTrigger( ""scene5Trigger"" )

-- Wait for things to play out and then clear scene 4 and queue scene 6
Wait (12)
SendTrigger( ""endScene4"" )
SendTrigger( ""endScene5"" )
RunToLocation( lorewalker, 2, 1456.04, 367.276, 550.222, 133.746 )
SendTrigger( ""scene6Trigger"" )


--Kill scene 6
Wait (15)
SendTrigger( ""endScene6"" )


-- Clean up
--WaitForTrigger( ""endScene"" )
Wait (2)
SendTrigger( ""endScene"" )
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.221, 93.5645 )
lorewalker: Despawn()
light_ul: Despawn()
light_ur: Despawn()"
292,Orgrimmar - MoP Horde Intro Scene - Init - JSB,"
-- spawn zeppelin
local zeppelinModel = ""world\\expansion03\\doodads\\generic\\flying_horde_zeppelin.m2""
--zeppelin = SpawnModelActor( zeppelinModel, 3444.23, -278.363, 284.752, 249.2335, 1.0, false )
local zeppelins = SpawnModelActorsAtPoints( zeppelinModel, 3131, false )
zeppelin = zeppelins[1]

-- spawn nazgrim
local nazgrimCreatureID = 61682
nazgrim = SpawnActor( nazgrimCreatureID, 1840.65, -4419.42, 135.233, 41, 1.0, false )

-- spawn gorrok
local gorrokCreatureID = 61846
gorrok = SpawnActor( gorrokCreatureID, 1842.06, -4408.59, 135.232, 317.414, 1.0, false )

-- spawn zin'jun
local zinjunCreatureID = 61868
zinjun = SpawnActor( zinjunCreatureID, 1840.35, -4412.36, 135.233, 334.341, 1.0, false )

-- spawn snuff
local snuffCreatureID = 61869
snuff = SpawnActor( snuffCreatureID, 1839.86, -4415.26, 135.233, 332.626, 1.0, false )
snuff:PlayLoopingFullBodyAnim(Animations.SitGround)

-- spawn rivett
local rivettCreatureID = 61844
rivett = SpawnActor( rivettCreatureID, 1843.93, -4420.85, 135.233, 104.292, 1.0, false )


-- spawn kiryn
local kirynCreatureID = 61867
kiryn = SpawnActor( kirynCreatureID, 1847.05, -4419.12, 135.233, 9.03616, 1.0, false )


-- spawn shokia
local shokiaCreatureID = 61866
shokia = SpawnActor( shokiaCreatureID, 1848.93, -4419, 135.233, 192.74, 1.0, false )

-- spawn Vanguard01
local vanguard01CreatureID = 61845
vanguard01 = SpawnActor( vanguard01CreatureID, 1762, -4370, 159.02, 306.719, 1.0, false )

-- spawn Vanguard02
local vanguard02CreatureID = 61845
vanguard02 = SpawnActor( vanguard02CreatureID, 1758.5, -4362, 157.9, 338.219, 1.0, false )

-- spawn Vanguard03
local vanguard03CreatureID = 61845
vanguard03 = SpawnActor( vanguard03CreatureID, 1754, -4366.5, 157.9, 276.569, 1.0, false )

-- spawn clone
playerCloneCreatureID = 65247
clone = SpawnActivePlayerCloneActor( 1843.04, -4417.14, 135.232, 224.772, 1.0, false )
"
293,Lorewalker Story - S1: Grummle - grummleIncenseSniffer - ZTO,"-- Wait until called
WaitForTrigger(""smokingGrummle"")

PlayLoopingSplitBodyAnim( grummleIncenseSniffer, Animations.SitGround )
SendTrigger(""cueLight_CL"")
FadeIn( grummleIncenseSniffer, 1 )
local actorAuraVisual = grummleIncenseSniffer:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait (8)



-- Wait until tree hits lead grummle, then cross and exit stage right
WaitForTrigger(""treeSmack"")
--RunToLocation( grummleIncenseSniffer, 7, 1443.38, 362.09, 550.221  )
SendTrigger(""blackLight_CL"")
FadeOut( grummleIncenseSniffer, 1)
grummleIncenseSniffer:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
grummleIncenseSniffer: Despawn()"
294,Lorewalker Story - S1: Grummle - incense - ZTO,"-- Wait until called
WaitForTrigger(""smokingGrummle"")

PlayLoopingSplitBodyAnim( grummleIncenseSniffer, Animations.SitGround )
FadeIn( incense1, 1 )
Wait(1)
FadeIn( incense2, 1 )
Wait(1)
FadeIn( incense3, 1 )
Wait(1)
FadeIn( incense4, 1 )
Wait(1)


-- Wait until tree hits lead grummle, then cross and exit stage right
WaitForTrigger(""treeSmack"")
--RunToLocation( grummleIncenseSniffer, 7, 1443.38, 362.09, 550.221  )
FadeOut( incense1, 1)
FadeOut( incense2, 1)
FadeOut( incense3, 1)
FadeOut( incense4, 1)

Wait(5)
incense1: Despawn()
incense2: Despawn()
incense3: Despawn()
incense4: Despawn()"
295,Lorewalker Story - S1: Grummle - Scene 3 - grummleCheer1 - ZTO,"-- Wait until scene 3 begins
WaitForTrigger(""scene3Trigger"")

-- Cheer for the liberation
FadeIn( grummleCheer1, 1)
local actorAuraVisual = grummleCheer1:PlaySpellStateVisual(24803) --Cast Actor Visual
Wait(1)
PlayOneShotSplitBodyAnim( grummleCheer1, Animations.BattleRoar )
Wait(1)
PlayOneShotSplitBodyAnim( grummleCheer3, Animations.BattleRoar )
Wait(1)
PlayOneShotSplitBodyAnim( grummleCheer2, Animations.BattleRoar )
Wait(1)
PlayOneShotSplitBodyAnim( grummleCheer4, Animations.BattleRoar )

--Clear when end scene command is heard
WaitForTrigger( ""endScene3"" )
FadeOut( grummleCheer1, 1)
grummleCheer1:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
grummleCheer1: Despawn()"
296,Lorewalker Story - S1: Grummle - Scene 3 - grummleCheer1 - ZTO,"-- Wait until scene 3 begins
WaitForTrigger(""scene3Trigger"")

-- Cheer for the liberation
FadeIn( grummleCheer2, 1)
local actorAuraVisual = grummleCheer2:PlaySpellStateVisual(24803) --Cast Actor Visual

--Clear when end scene command is heard
WaitForTrigger( ""endScene3"" )
FadeOut( grummleCheer2, 1)
grummleCheer2:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
grummleCheer2: Despawn()"
297,Lorewalker Story - S1: Grummle - Scene 3 - grummleCheer3 - ZTO,"-- Wait until scene 3 begins
WaitForTrigger(""scene3Trigger"")

-- Cheer for the liberation
FadeIn( grummleCheer3, 1)
local actorAuraVisual = grummleCheer3:PlaySpellStateVisual(24803) --Cast Actor Visual

--Clear when end scene command is heard
WaitForTrigger( ""endScene3"" )
FadeOut( grummleCheer3, 1)
grummleCheer3:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
grummleCheer3: Despawn()"
298,Lorewalker Story - S1: Grummle - Scene 3 - grummleCheer4 - ZTO,"-- Wait until scene 3 begins
WaitForTrigger(""scene3Trigger"")

-- Cheer for the liberation
FadeIn( grummleCheer4, 1)
local actorAuraVisual = grummleCheer4:PlaySpellStateVisual(24803) --Cast Actor Visual

--Clear when end scene command is heard
WaitForTrigger( ""endScene3"" )
FadeOut( grummleCheer4, 1)
grummleCheer4:ClearSpellVisual( actorAuraVisual) --Clear Actor Visual

Wait(5)
grummleCheer4: Despawn()"
299,Lorewalker Story - S1: Grummle - Scene 4 - grummleVendor1 - ZTO,"-- Wait until called by GrummleMainBag
WaitForTrigger(""scene4Trigger"")

-- Fade in on command, beckon at little grummle
FadeIn( grummleVendor1, 1)
local actorAuraVisual = grummleVendor1:PlaySpellStateVisual(24803) --Cast Actor Visual
grummleVendor1: PlayLoopingFullBodyAnim( Animations.EmoteTalk )


-- Wait for scene 5 trigger then cross stage right
WaitForTrigger(""scene5Trigger"")
grummleVendor1: StopLoopingSplitBodyAnim( Animations.EmoteTalk )
RunToLocation( grummleVendor1, 2, 1460.35, 375.131, 550.221, 41.5002  )
SendTrigger(""Scene5a"")
Wait (2)
PlayOneShotSplitBodyAnim( grummleVendor1, Animations.EmoteTalk )


-- Beckon grummle over
WaitForTrigger(""endScene4"")
FadeOut( grummleVendor1, 1)
grummleVendor1: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
Wait(5)
grummleVendor1: Despawn()"
300,Lorewalker Story - S1: Grummle - Init - Scene 5 Actors - ZTO,"-- Spawn Pandaren group
shadopanID = 61908
shadopan01 = SpawnActor(shadopanID, 1462.94, 376.842, 550.221, 199.45 ) -- Spawns downstage left
FadeOut( shadopan01, 0 )

"
301,Lorewalker Story - S1: Grummle - Scene 4 - grummleVendor2 - ZTO,"-- Wait until called by GrummleMainBag
WaitForTrigger(""scene4Trigger"")

-- Fade in on command, beckon at little grummle
FadeIn( grummleVendor2, 1)
local actorAuraVisual = grummleVendor2:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Wait for scene 5 trigger then cross stage right
WaitForTrigger(""scene5Trigger"")
RunToLocation( grummleVendor2, 2, 1460.58, 372.162, 550.221, 41.5002  )
Wait (3)
PlayOneShotSplitBodyAnim( grummleVendor2, Animations.EmoteTalk )

-- Beckon grummle over
WaitForTrigger(""endScene4"")
FadeOut( grummleVendor2, 1)
grummleVendor2: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
Wait(5)
grummleVendor2: Despawn()"
302,Lorewalker Story - S1: Grummle - Scene 4 - whiteyak - ZTO,"-- Wait until called by GrummleMainBag
WaitForTrigger(""scene4Trigger"")

-- Fade in on command, beckon at little grummle
FadeIn( whiteyak, 1)
local actorAuraVisual = whiteyak:PlaySpellStateVisual(23826) -- Incense Aura for Yak

-- Wait for scene 5 trigger then cross stage right
WaitForTrigger(""scene5Trigger"")
RunToLocation( whiteyak, 2, 1457.78, 372.955, 550.222, 38.3463  )

-- Beckon grummle over
WaitForTrigger(""endScene4"")
FadeOut( whiteyak, 1)
whiteyak: ClearSpellVisual( actorAuraVisual) --Clear Incense Visual
Wait(5)
whiteyak: Despawn()"
303,Lorewalker Story - S1: Grummle - Init - Scene 6 Actors - ZTO,"-- Spawn Grummle Vendors
grummleVendor3 = SpawnActor(grummleID, 1454.06, 365.674, 550.222, 99.7705 ) -- Spawns downstage left
grummleVendor4 = SpawnActor(grummleBagID, 1457.42, 369.071, 550.222, 175.146) -- Spawn second vendor
grummleVendor5 = SpawnActor(grummleID, 1455.07, 368.678, 550.222, 133.071 ) -- Spawns downstage left
FadeOut( grummleVendor3, 0 )
FadeOut( grummleVendor4, 0 )
FadeOut( grummleVendor5, 0 )"
304,Lorewalker Story - S1: Grummle - Scene 6 - grummleVendor3 - ZTO,"-- Wait until called by Lorewalker Cho
WaitForTrigger(""scene6Trigger"")

-- Fade in on command, beckon at little grummle
FadeIn( light_cc, 2 )
FadeIn( grummleVendor3, 2)
local actorAuraVisual = grummleVendor3:PlaySpellStateVisual(24803) --Cast Actor Visual
local fluteAura = grummleVendor3:PlaySpellStateVisual(24987) --Cast Flute Visual
--grummleVendor3: PlayLoopingFullBodyAnim(Animations.HoldRifle)


-- Beckon grummle over
WaitForTrigger(""endScene6"")
FadeOut( grummleVendor3, 1)
grummleVendor3: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
grummleVendor3: ClearSpellVisual( fluteAura) -- Clear Flute Visual
Wait(5)
grummleVendor3: Despawn()"
305,Lorewalker Story - S1: Grummle - Scene 6 - grummleVendor4 - ZTO,"-- Wait until called by Lorewalker Cho
WaitForTrigger(""scene6Trigger"")

-- Fade in on command, beckon at little grummle
FadeIn( grummleVendor4, 2)
local actorAuraVisual = grummleVendor4:PlaySpellStateVisual(24803) --Cast Actor Visual
grummleVendor4: PlayLoopingFullBodyAnim(Animations.EmoteTalk)



-- Beckon grummle over
WaitForTrigger(""endScene6"")
FadeOut( grummleVendor4, 1)
grummleVendor4: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
Wait(5)
grummleVendor4: Despawn()"
306,Lorewalker Story - S1: Grummle - Scene 6 - grummleVendor5 - ZTO,"-- Wait until called by Lorewalker Cho
WaitForTrigger(""scene6Trigger"")

-- Fade in on command, beckon at little grummle
FadeIn( grummleVendor5, 2)
local actorAuraVisual = grummleVendor5:PlaySpellStateVisual(24803) --Cast Actor Visual
grummleVendor5: PlayLoopingFullBodyAnim(Animations.SitGround)



-- Beckon grummle over
WaitForTrigger(""endScene6"")
FadeOut( grummleVendor5, 1)
grummleVendor5: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
Wait(5)
grummleVendor5: Despawn()"
307,Orgrimmar - MoP Horde Intro Scene - Master - JSB,"
if (Scene.SetFadeRegion) then
 	scene:SetFadeRegion(10, true) -- (radius, fadeActivePlayer)
end

Wait( 2 )

SetCameraFollowPath( 390, 0.0, 3155, nil, 34 )

Wait( 27 )

SendTrigger( ""zeppelinLeave"" )

Wait( 2 )

SetCameraFollowPath( 399, 6, nil, 3166, 45 )

Wait( 7 )

if (Scene.EndScene) then
	scene:EndScene()
end

-- scene:SetCamera(391, 25, nil, nil)
"
308,Orgrimmar - MoP Horde Intro Scene - Zeppelin - JSB,"
-- PlayLoopingSplitBodyAnim( zeppelin, Animations.ShipMoving )

zeppelin:PlayLoopingAnimKit(2272)

zeppelin:SetFacingToAbs(Vector:New(1144.22, -3788.84, 155.643))

zeppelinStart = zeppelin:GetPosition()
zeppelinDest1 = Vector:New(1825.42, -4432.02, 153.1)
zeppelinDest2 = Vector:New(1954.46, -4547.58, 170.281)

zeppelinInitialMoveSpeed = 9
zeppelinMoveSpeed = 4

zeppelinMoveOffsetInitial = zeppelinDest1 - zeppelinStart
zeppelinMoveOffset = zeppelinDest2 - zeppelinDest1

-- Wait ( 22 ) -- TEMP

SendTrigger( ""zeppelinStart"" )

-- force the ship to face a direction
--zeppelin:SetFacingToAbs(Vector:New(1703.49, -4311.06, 136.569))

RunToLocation(zeppelin, zeppelinInitialMoveSpeed, zeppelinDest1.x, zeppelinDest1.y, zeppelinDest1.z)

WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )


RunToLocation(zeppelin, zeppelinMoveSpeed, zeppelinDest2.x, zeppelinDest2.y, zeppelinDest2.z)

"
309,Orgrimmar - MoP Horde Intro Scene - Nazgrim - JSB,"
Wait ( 4 )

nazgrim:SetFacing(150)

Wait ( 1 )

nazgrim:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)

Wait( 9 )

SendTrigger( ""zeppelinReady"" )

RunToLocation( nazgrim, 4, 1835.71, -4421.69, 135.18, 210.603 )

RunToLocation( nazgrim, 4, 1829.62, -4425.06, 135.18, 316.353 )


-- COPY STARTS HERE
--
local relativeMover = nazgrim -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
310,Orgrimmar - MoP Horde Intro Scene - Rivett - JSB,"
WaitForTrigger( ""zeppelinReady"" )

Wait( 0.6 )

RunToLocation( rivett, 3.5, 1838.08, -4421.66, 135.234, 215.103)

RunToLocation( rivett, 3.5, 1826.46, -4420.67, 135.3, 156.378)

RunToLocation( rivett, 3.5, 1824.86, -4419.68, 136.4, 147.603)

RunToLocation( rivett, 3.5, 1823.17, -4418.4, 136.4, 310.278)



-- COPY STARTS HERE
--
local relativeMover = rivett -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
311,Townlong - Dread Shadow Fight - Camera,"local rand = math.random(0,2)
local path


	if rand == 0 then
		path = 3159
	elseif rand == 1 then
		path = 3181
	else
		path = 3182
	end



scene:SetCamera(392, 0, nil, nil)
SetCameraFollowPath( 398, 0.0, path, nil, 1.8 )
Wait(1.5)





scene:SetCamera(0, 0, nil, nil) -- sets camera back to game-cam"
312,Orgrimmar - MoP Horde Intro Scene - Kiryn - JSB,"
WaitForTrigger( ""zeppelinReady"" )

Wait( 0.7 )

RunToLocation( kiryn, 3.5, 1838.08, -4421.66, 135.234, 215.103)

RunToLocation( kiryn, 3.5, 1824.08, -4423.17, 135.3, 141.851)

RunToLocation( kiryn, 3.5, 1822.66, -4422.05, 136.4, 131.726)

RunToLocation( kiryn, 3.5, 1819.94, -4418.78, 136.4, 316.901)



-- COPY STARTS HERE
--
local relativeMover = kiryn -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
313,Orgrimmar - MoP Horde Intro Scene - Snuff - JSB,"
Wait( 2 )
snuff:StopLoopingFullBodyAnim()
Wait( 1 )
snuff:PlayLoopingFullBodyAnim(Animations.Stand)

-- board zepp

WaitForTrigger( ""zeppelinReady"" )

Wait( 4.2 )
snuff:StopLoopingFullBodyAnim()

RunToLocation( snuff, 3.5, 1838.08, -4421.66, 135.234, 215.103)

RunToLocation( snuff, 3.5, 1828.71, -4418.81, 135.3, 135.326)

RunToLocation( snuff, 3.5, 1824.9, -4415.01, 136.4, 327.926)

RunToLocation( snuff, 3.5, 1824.9, -4415.01, 136.4, 327.926)
Wait( 2 )
snuff:PlayLoopingFullBodyAnim(Animations.Sleep)


-- COPY STARTS HERE
--
local relativeMover = snuff -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()"
314,Orgrimmar - MoP Horde Intro Scene - Zin'jun - JSB,"

-- board zepp

WaitForTrigger( ""zeppelinReady"" )

Wait( 5 )

RunToLocation( zinjun, 3.5, 1838.08, -4421.66, 135.234, 215.103)

RunToLocation( zinjun, 3.5, 1827.17, -4420.16, 135.3, 139.151)

RunToLocation( zinjun, 3.5, 1825.77, -4418.44, 136.4, 139.826)

RunToLocation( zinjun, 3.5, 1823.17, -4415.84, 136.4, 321.401)

-- COPY STARTS HERE
--
local relativeMover = zinjun -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()"
315,Orgrimmar - MoP Horde Intro Scene - Shokia - JSB,"
WaitForTrigger( ""zeppelinReady"" )

Wait( 2 )

RunToLocation( shokia, 3.5, 1838.08, -4421.66, 135.234, 215.103)

RunToLocation( shokia, 3.5, 1832.44, -4428.37, 135.586, 197.201)

RunToLocation( shokia, 3.5, 1823.88, -4425.88, 135.3, 336.476)



-- COPY STARTS HERE
--
local relativeMover = shokia -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
316,Orgrimmar - MoP Horde Intro Scene - Gorrok - JSB,"WaitForTrigger( ""zeppelinReady"" )

Wait( 5.7 )

RunToLocation( gorrok, 3.5, 1838.08, -4421.66, 135.234, 215.103)

RunToLocation( gorrok, 3.5, 1836.41, -4426.74, 135.5, 300)

RunToLocation( gorrok, 3.5, 1838.25, -4433.68, 136.2, 316.901)



-- COPY STARTS HERE
--
local relativeMover = gorrok -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
317,Orgrimmar - MoP Horde Intro Scene - Clone - JSB,"WaitForTrigger( ""zeppelinReady"" )

Wait( 2 )

RunToLocation( clone, 3.5, 1838.08, -4421.66, 135.234, 215.103)

RunToLocation( clone, 3.5, 1826.63, -4429.49, 135.18, 269.876)

-- COPY STARTS HERE
--
local relativeMover = clone -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinLeave"" )

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
318,Orgrimmar - MoP Horde Intro Scene - Vanguard01 - JSB,"
-- COPY STARTS HERE
--
local relativeMover = vanguard01 -- CHANGE allianceCaptain to the appropriate NPC

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinStart"" )

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest1 = worldPosSrc + zeppelinMoveOffsetInitial
local worldPosDest2 = worldPosDest1 + zeppelinMoveOffset

-- Wait ( 2 )

-- clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinInitialMoveSpeed, worldPosDest1.x, worldPosDest1.y, worldPosDest1.z )

WaitForTrigger( ""zeppelinLeave"" )

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest2.x, worldPosDest2.y, worldPosDest2.z )

relativeMover:StopLoopingFullBodyAnim()
"
319,Orgrimmar - MoP Horde Intro Scene - Vanguard02 - JSB,"
-- COPY STARTS HERE
--
local relativeMover = vanguard02 -- CHANGE allianceCaptain to the appropriate NPC

vanguard02:SetFacingToAbs(Vector:New(2119.86, -4527.32, 177.23, 159.12))

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinStart"" )

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest1 = worldPosSrc + zeppelinMoveOffsetInitial
local worldPosDest2 = worldPosDest1 + zeppelinMoveOffset

RunToLocation( relativeMover, zeppelinInitialMoveSpeed, worldPosDest1.x, worldPosDest1.y, worldPosDest1.z )

WaitForTrigger( ""zeppelinLeave"" )

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest2.x, worldPosDest2.y, worldPosDest2.z )

relativeMover:StopLoopingFullBodyAnim()"
320,Orgrimmar - MoP Horde Intro Scene - Vanguard03 - JSB,"
-- COPY STARTS HERE
--
local relativeMover = vanguard03 -- CHANGE allianceCaptain to the appropriate NPC

vanguard03:SetFacingToAbs(Vector:New(1837.18, -4680.15, 153.848, 270.476))

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinStart"" )

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest1 = worldPosSrc + zeppelinMoveOffsetInitial
local worldPosDest2 = worldPosDest1 + zeppelinMoveOffset

RunToLocation( relativeMover, zeppelinInitialMoveSpeed, worldPosDest1.x, worldPosDest1.y, worldPosDest1.z )

WaitForTrigger( ""zeppelinLeave"" )

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest2.x, worldPosDest2.y, worldPosDest2.z )

relativeMover:StopLoopingFullBodyAnim()"
349,Lorewalker Story - S2: Saurok - Init - Scene 1 Actors - ZTO,"-- Spell preloads
TransformSpellID = 120566
TransformEffectSpellID = 120704
squibID = 86438

--Spawn and hide Mogu
moguID1 = 62426
moguID2 = 62427
moguID3 = 62428
moguBoss = 62169

moguPoleArm1 = SpawnActor( moguID1, 1461.08, 361.964, 550.222, 129.022, 1, false ) -- Mogu grunt with polearm
moguMace1 = SpawnActor( moguID2, 1461.08, 361.964, 550.222, 129.022, 2, false ) -- Mogu grunt with mace
moguFist1 = SpawnActor( moguID3, 1461.08, 361.964, 550.222, 129.022, 1, false ) -- Mogu grunt with fist
tian = SpawnActor( moguBoss, 1461.08, 361.964, 550.222, 129.022, 1, false)

-- Fade out until needed
FadeOut( moguPoleArm1, 0 )
FadeOut( moguMace1, 0 )
FadeOut( moguFist1, 0 )
FadeOut( tian, 0 )

-- Spawn and hide lizards
lizardID = 43981
lizard1 = SpawnActor( lizardID, 1452.1, 372.201, 550.222, 219.019, .5 ) -- Lizard center stage
lizard2 = SpawnActor( lizardID, 1446.68, 363.408, 550.221, 317.117, .5 ) -- Lizard stage right
lizard3 = SpawnActor( lizardID, 1459.67, 375.32, 550.221, 340.068, .5 ) -- Lizard stage left

-- Fade out until called
FadeOut( lizard1, 0 )
FadeOut( lizard2, 0 )
FadeOut( lizard3, 0 )

-- Eggs
eggID = 61988
egg1 = SpawnActor( eggID, 1452.31, 371.112, 550.222, 352.44, 1 ) -- Lizard center stage
egg2 = SpawnActor( eggID, 1455.51, 370.128, 550.222, 128.573, 1 ) -- Lizard stage right
egg3 = SpawnActor( eggID, 1452.27, 368.597, 550.222, 350.865, 1 ) -- Lizard stage left

-- Fade out until called
FadeOut( egg1, 0 )
FadeOut( egg2, 0 )
FadeOut( egg3, 0 )

-- First Saurok
saurokID = 62433
littlesaurok = SpawnActor( saurokID, 1452.31, 371.112, 550.222, 131.265, 1, false ) -- Lizard center stage

-- Fade out until called
FadeOut( littlesaurok, 0 )

-- Pandaren Slaves
pandarenSlaveID = 61904
pandarenSlavef1 = SpawnActor( pandarenSlaveID, 1461.4, 367.534, 550.221, 221.275, 0.75, true ) 
pandarenSlavef2 = SpawnActor( pandarenSlaveID, 1458.4, 370.953, 550.221, 221.275, 0.75, true ) 
pandarenSlavef3 = SpawnActor( pandarenSlaveID, 1455.16, 374.636, 550.221, 221.275, 0.75, true ) 

pandarenSlavef4 = SpawnActor( pandarenSlaveID, 1465.63, 370.143, 550.221, 221.275, 0.75, true ) 
pandarenSlavef5 = SpawnActor( pandarenSlaveID, 1462.47, 373.747, 550.221, 221.275, 0.75, true ) 
pandarenSlavef6 = SpawnActor( pandarenSlaveID, 1458.85, 377.871, 550.221, 221.275, 0.75, true ) 

pandarenSlavef7 = SpawnActor( pandarenSlaveID, 1455.64, 362.476, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef8 = SpawnActor( pandarenSlaveID, 1452.28, 366.209, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef9 = SpawnActor( pandarenSlaveID, 1449.67, 369.429, 550.221, 41.9498, 0.75, true ) 

pandarenSlavef10 = SpawnActor( pandarenSlaveID, 1452.36, 359.539, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef11 = SpawnActor( pandarenSlaveID, 1448.95, 363.222, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef12 = SpawnActor( pandarenSlaveID, 1446.42, 366.514, 550.221, 41.9498, 0.75, true ) 

FadeOut(pandarenSlavef1, 0)
FadeOut(pandarenSlavef2, 0)
FadeOut(pandarenSlavef3, 0)
FadeOut(pandarenSlavef4, 0)
FadeOut(pandarenSlavef5, 0)
FadeOut(pandarenSlavef6, 0)
FadeOut(pandarenSlavef7, 0)
FadeOut(pandarenSlavef8, 0)
FadeOut(pandarenSlavef9, 0)
FadeOut(pandarenSlavef10, 0)
FadeOut(pandarenSlavef11, 0)
FadeOut(pandarenSlavef12, 0)

--Mogu Victim
moguVictim = SpawnActor( moguID3, 1468.92, 372.636, 550.222, 194.726, 1, true)
FadeOut( moguVictim, 0 )
"
351,Lorewalker Story - S2: Saurok - Scene 1 - MoguMace1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = moguMace1:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Wait until called
WaitForTrigger( ""Scene2"" )
FadeIn(moguMace1, 1)
RunToLocation(moguMace1, 2, 1462.35, 368.695, 550.223, 132.17)
PlayLoopingSplitBodyAnim( moguMace1, Animations.Ready2HL )

-- Wait for Scene 4
WaitForTrigger( ""hack"" )
FadeOut(moguMace1, 1)

--Wait for Scene 8
WaitForTrigger( ""Scene8"" )
Wait(3)
FadeIn(moguMace1, 2)

--Wait for kill order from Saurok
WaitForTrigger(""saurok_tank2 killme"")
PlayOneShotSplitBodyAnim( moguMace1, Animations.Attack2HL )

--Wait for Scene 9
WaitForTrigger(""Scene9"")
StopLoopingSplitBodyAnim( moguMace1, Animations.Ready2HL )
RunToLocation(moguMace1, 2, 1460.79, 371.474, 550.222, 52.9622)
PlayLoopingSplitBodyAnim( moguMace1, Animations.Attack2HL )

--Wait to be dismissed
WaitForTrigger( ""Scene10"" )
Wait(5)
FadeOut(light_ur, 2)
FadeOut( moguMace1, 1)

-- Wait until dismissed
WaitForTrigger( ""endScene"" )
moguMace1: Despawn()"
352,Lorewalker Story - S2: Saurok - Scene 1 - MoguPolearm1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = moguPoleArm1:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Wait until called
WaitForTrigger( ""Scene2"" )
Wait(1)
FadeIn(moguPoleArm1, 1)
RunToLocation(moguPoleArm1, 2, 1454.68, 361.609, 550.222, 130.598)
PlayLoopingSplitBodyAnim( moguPoleArm1, Animations.Ready2H )

-- Wait for Scene 4
WaitForTrigger( ""hack"" )
FadeOut(moguPoleArm1, 1)

--Wait for Scene 8
WaitForTrigger( ""Scene8"" )
Wait(3)
FadeIn(moguPoleArm1, 2)

--Wait for Scene 9
WaitForTrigger(""Scene9"")
StopLoopingSplitBodyAnim( moguPoleArm1, Animations.Ready2H )
PlayLoopingSplitBodyAnim( moguPoleArm1, Animations.Attack2H )
RunToLocation(moguPoleArm1, 2, 1451.01, 362.101, 550.222, 210.249)

--Wait to be dismissed
WaitForTrigger( ""Scene10"" )
Wait(5)
FadeOut( moguPoleArm1, 1)

-- Wait for scene end
WaitForTrigger( ""endScene"" )
moguPoleArm1: Despawn()"
353,Lorewalker Story - S2: Saurok - Scene 1 - Tian - ZTO,"-- Wait until Scene 2
WaitForTrigger( ""Scene2"" )
Wait(3)
FadeIn(tian, 1)
local actorAuraVisual = tian:PlaySpellStateVisual(24803) --Cast Actor Visual
RunToLocation(tian, 2, 1457.29, 366.243, 550.222, 129.022)

--Wait for Scene 3
WaitForTrigger( ""Scene3"" )
Wait(2)
CastSpellAtActor( tian, egg1, TransformSpellID )
Wait(1)
SendTrigger( ""eggBreak"" )

Wait(3)


-- Wait for Scene 4
WaitForTrigger( ""hack"" )
FadeOut(tian, 2)


-- Wait for Scene 5
WaitForTrigger( ""Scene8"" )
Wait(3)
FadeIn(tian, 1)
PlayLoopingSplitBodyAnim( tian, Animations.EmoteTalkExclamation )

--Wait for saurok_hack4 to arrive 
WaitForTrigger( ""Scene9"" )
StopLoopingSplitBodyAnim( tian, Animations.EmoteTalkExclamation )
tian: SetFacing(159.967)
Wait(1)
CastSpellAtActor( tian, saurok_hack4, TransformSpellID )
Wait(1)
SendTrigger( ""throttle"" )
tian: SetFacing(99.8915)
Wait(1)
CastSpellAtActor( tian, saurok_hack5, TransformSpellID )
Wait(1)
SendTrigger( ""throttle2"" )
Wait(2)
tian: SetFacing(129.022)
PlayOneShotSplitBodyAnim( tian, Animations.SpellCastDirected )
Wait(1)
CastSpellAtActor( tian, saurok_pillar01, 108005 )
CastSpellAtActor( tian, saurok_pillar02, 108005 )
SendTrigger(""saurok_pillar01 - kill"")
SendTrigger(""saurok_pillar02 - kill"")
Wait(1)
PlayLoopingSplitBodyAnim( tian, Animations.EmoteLaugh )


-- Wait for end of Scene 10
WaitForTrigger( ""Scene10"" )
Wait(6)
Kill( tian )
--CastSpellAtActor( tian, tian, squibID )
--StopLoopingSplitBodyAnim(tian, Animations.EmoteLaugh )
--PlayOneShotSplitBodyAnim(tian, Animations.Death)
--Wait(2.4)
--tian:PlayLoopingAnimKit(3284)

-- Wait until despawned
WaitForTrigger( ""endScene"" )
tian: Despawn()"
354,Lorewalker Story - S2: Saurok - Scene 1 - lizard1 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene3"" )
Wait(2)
FadeIn(lizard1, 1)
local actorAuraVisual = lizard1:PlaySpellStateVisual(24803) --Cast Actor Visual
lizard1:FollowRelativePathAtSpeed(4437, 4)
--[[
RunToLocation(lizard1, 2, 1452.79, 374.391, 550.221, 103.819)
RunToLocation(lizard1, 2, 1450.64, 372.105, 550.221, 226.669)
RunToLocation(lizard1, 2, 1453.33, 375.299, 550.221, 36.0935)
RunToLocation(lizard1, 2, 1452.79, 374.391, 550.221, 103.819)
RunToLocation(lizard1, 2, 1450.64, 372.105, 550.221, 226.669)
RunToLocation(lizard1, 2, 1453.33, 375.299, 550.221, 36.0935)
]]--
--RunToLocation(lizard1, 2, 1452.79, 374.391, 550.221, 103.819)
--RunToLocation(lizard1, 2, 1450.64, 372.105, 550.221, 226.669)
--RunToLocation(lizard1, 2, 1453.33, 375.299, 550.221, 36.0935)
--RunToLocation(lizard1, 2, 1452.79, 374.391, 550.221, 103.819)
--RunToLocation(lizard1, 2, 1450.64, 372.105, 550.221, 226.669)
--RunToLocation(lizard1, 2, 1453.33, 375.299, 550.221, 36.0935)
--lizard1: Despawn()

-- Wait until dismissed
--WaitForTrigger( ""eggBreak"" )
WaitForTrigger( ""hack"" )
FadeOut(lizard1, 1)
lizard1: Despawn()"
355,Lorewalker Story - S2: Saurok - Scene 1 - lizard2 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene3"" )
Wait(2)
FadeIn(lizard2, 1)
local actorAuraVisual = lizard2:PlaySpellStateVisual(24803) --Cast Actor Visual
lizard2:FollowRelativePathAtSpeed(4437, 4)
--[[
RunToLocation(lizard2, 2, 1446.11, 364.98, 550.221, 153.093)
RunToLocation(lizard2, 2, 1446.68, 363.408, 550.221, 317.117)
RunToLocation(lizard2, 2, 1447.04, 365.694, 550.221, 63.5425)
RunToLocation(lizard2, 2, 1446.11, 364.98, 550.221, 153.093)
RunToLocation(lizard2, 2, 1446.68, 363.408, 550.221, 317.117)
RunToLocation(lizard2, 2, 1447.04, 365.694, 550.221, 63.5425)
RunToLocation(lizard2, 2, 1446.11, 364.98, 550.221, 153.093)
RunToLocation(lizard2, 2, 1446.68, 363.408, 550.221, 317.117)
RunToLocation(lizard2, 2, 1447.04, 365.694, 550.221, 63.5425)
]]--
--RunToLocation(lizard2, 2, 1446.11, 364.98, 550.221, 153.093)
--RunToLocation(lizard2, 2, 1446.68, 363.408, 550.221, 317.117)
--RunToLocation(lizard2, 2, 1447.04, 365.694, 550.221, 63.5425)
--lizard2: Despawn()

-- Wait until dismissed
--WaitForTrigger( ""eggBreak"" )
WaitForTrigger( ""hack"" )
FadeOut(lizard2, 1)
lizard2: Despawn()"
356,Lorewalker Story - S2: Saurok - Scene 1 - lizard3 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene3"" )
Wait(2)
FadeIn(lizard3, 1)
local actorAuraVisual = lizard3:PlaySpellStateVisual(24803) --Cast Actor Visual
lizard3:FollowRelativePathAtSpeed(4437, 4)

--[[
RunToLocation(lizard3, 2, 1457.11, 376.419, 550.221, 276.168)
RunToLocation(lizard3, 2, 1459.67, 375.32, 550.221, 340.068)
RunToLocation(lizard3, 2, 1458.24, 376.539, 550.221, 135.543)
RunToLocation(lizard3, 2, 1457.11, 376.419, 550.221, 276.168)
RunToLocation(lizard3, 2, 1459.67, 375.32, 550.221, 340.068)
RunToLocation(lizard3, 2, 1458.24, 376.539, 550.221, 135.543)
RunToLocation(lizard3, 2, 1457.11, 376.419, 550.221, 276.168)
RunToLocation(lizard3, 2, 1459.67, 375.32, 550.221, 340.068)
RunToLocation(lizard3, 2, 1458.24, 376.539, 550.221, 135.543)
]]--
--RunToLocation(lizard3, 2, 1457.11, 376.419, 550.221, 276.168)
--RunToLocation(lizard3, 2, 1459.67, 375.32, 550.221, 340.068)
--RunToLocation(lizard3, 2, 1458.24, 376.539, 550.221, 135.543)
--lizard3: Despawn()

-- Wait until dismissed
--WaitForTrigger( ""eggBreak"" )
WaitForTrigger( ""hack"" )
FadeOut(lizard3, 1)
lizard3: Despawn()"
357,Lorewalker Story - S2: Saurok - Scene 1 - egg - ZTO,"-- Wait until called
WaitForTrigger( ""Scene3"" )
Wait(2)
FadeIn(egg1, 1)
FadeIn(egg2, 1)
FadeIn(egg3, 1)

-- Wait until dismissed
WaitForTrigger( ""eggBreak"" )
FadeOut(egg1, 1)
Wait(3)

--Wait for Scene 6
WaitForTrigger( ""hack"" )
FadeOut(egg2, 1)
FadeOut(egg3, 1)

-- Wait for end scene
WaitForTrigger( ""endScene"" )
egg1: Despawn()
egg2: Despawn()
egg3: Despawn()"
358,Lorewalker Story - S2: Saurok - Scene 1 - littlesaurok - ZTO,"-- Wait until called
WaitForTrigger( ""eggBreak"" )
--Wait(2)
CastSpellAtActor( littlesaurok, littlesaurok, TransformEffectSpellID )
FadeIn(littlesaurok , 1)
Wait(2)
PlayOneShotSplitBodyAnim( littlesaurok, Animations.BattleRoar )
Wait(5)
FadeOut(light_dc, 2)
SendTrigger(""hack"")
Wait(2)
SendTrigger(""heal"")
Wait(2)
SendTrigger(""tank"")

--Wait for Scene 4
WaitForTrigger(""Scene4"")
RunToLocation(littlesaurok, 3, 1453.42, 371.551, 550.221, 42.1724)
--Wait(2)
WaitForTrigger( ""littlesaurok - sword"" )
local swordVisual = littlesaurok:PlaySpellStateVisual(27087) --Cast Sword Visual
Wait(1)
littlesaurok: SetFacing(138.697)
Wait(1)
PlayOneShotSplitBodyAnim( littlesaurok, Animations.BattleRoar )
Wait(2)
RunToLocation(littlesaurok, 7, 1447.68, 365.663, 550.222, 263.347)
RunToLocation(littlesaurok, 7, 1448.74, 353.613, 550.221, 222.173)
RunToLocation(littlesaurok, 7, 1444.93, 350.169, 549.567, 222.173)
FadeOut(littlesaurok, 2)
Wait(10)
RunToLocation(littlesaurok, 10, 1458.79, 364.319, 550.221, 129.462)

--Wait for Scene 10
WaitForTrigger(""Scene10"")
Wait(5)
FadeIn(littlesaurok, 2)
PlayLoopingSplitBodyAnim( littlesaurok, Animations.Ready1H )
Wait(2)
StopLoopingSplitBodyAnim( littlesaurok, Animations.Ready1H )
RunToLocation(littlesaurok, 2, 1454.97, 365.425, 550.222, 131.27)
PlayLoopingSplitBodyAnim( littlesaurok, Animations.BattleRoar )

--Wait for Scene 11
WaitForTrigger(""Scene11"")
StopLoopingSplitBodyAnim( littlesaurok, Animations.BattleRoar )
RunToLocation(littlesaurok, 4, 1445.41, 350.704, 550.221, 225.987)
FadeOut(littlesaurok, 2)

-- Wait until dismissed
WaitForTrigger( ""endScene"" )
Wait(4)
FadeOut(littlesaurok, 1)
littlesaurok: Despawn()"
359,Lorewalker Story - S2: Saurok - Init - Scene 2 Actors - ZTO,"--Spawn and hide saurok
hackID = 61935
healID = 61934
tankID = 61933

saurok_hack = SpawnActor( hackID, 1463.6, 372.819, 550.221, 129.915 ) -- Hacky saurok
saurok_heal = SpawnActor( healID, 1449.86, 361.5, 550.221, 129.915 ) -- Healy saurok
saurok_tank = SpawnActor( tankID, 1456.69, 367.043, 550.221, 129.915 ) -- Tank saurok

--Fade out until needed
FadeOut(saurok_hack, 0)
FadeOut(saurok_heal, 0)
FadeOut(saurok_tank, 0)"
360,Lorewalker Story - S2: Saurok - Scene 2 - saurok_hack - ZTO,"-- Wait until called
WaitForTrigger( ""hack"" )
--Wait(2)
FadeIn(light_cr, 1)
FadeIn(saurok_hack , 1)
Wait(1)
PlayOneShotSplitBodyAnim( saurok_hack, Animations.BattleRoar )

-- Wait until dismissed and setup for scene 6
WaitForTrigger( ""Scene6"" )
FadeOut(light_cr, 1)
FadeOut(saurok_hack, 1)

-- EndScene
WaitForTrigger( ""endScene"" )
saurok_hack: Despawn()"
361,Lorewalker Story - S2: Saurok - Scene 2 - saurok_heal - ZTO,"-- Wait until called
WaitForTrigger( ""heal"" )
--Wait(2)
FadeIn(light_cl, 1)
FadeIn(saurok_heal , 1)
Wait(1)
PlayOneShotSplitBodyAnim( saurok_heal, Animations.BattleRoar )

-- Wait until dismissed
WaitForTrigger( ""Scene6"" )
FadeOut(light_cl, 1)
FadeOut(saurok_heal, 1)

--Wait for End Scene
WaitForTrigger( ""endScene"" )
saurok_heal: Despawn()"
362,Lorewalker Story - S2: Saurok - Scene 2 - saurok_tank - ZTO,"-- Wait until called
WaitForTrigger( ""tank"" )
--Wait(2)
FadeIn(light_cc, 1)
FadeIn(saurok_tank , 1)
Wait(1)
saurok_tank: PlayOneShotFullBodyAnim( Animations.BattleRoar )

-- Wait until dismissed
WaitForTrigger( ""Scene6"" )
FadeOut(light_cc, 1)
FadeOut(saurok_tank, 1)
saurok_tank: Despawn()"
363,Lorewalker Story - S2: Saurok - Init - Scene 3 Actors - ZTO,"--Spawn and hide saurok
--hackID = 61935
--healID = 61934
--tankID = 61933

saurok_hack2 = SpawnActor( hackID, 1447.03, 364.472, 550.221, 246.69 ) -- Hacky saurok
saurok_heal2 = SpawnActor( healID, 1453.51, 361.922, 550.221, 195.84 ) -- Healy saurok
saurok_tank2 = SpawnActor( tankID, 1449.89, 363.63, 550.221, 221.265 ) -- Tank saurok

--Fade out until needed
FadeOut(saurok_hack2, 0)
FadeOut(saurok_heal2, 0)
FadeOut(saurok_tank2, 0)


--Spawn Mantid
mantidID = 66036

mantid1 = SpawnActor( mantidID, 1439.88, 362.652, 566.913, 35.2501, 1, false)
mantid2 = SpawnActor( mantidID, 1448.77, 354.581, 566.913, 55.0502, 1, false)
mantid3 = SpawnActor( mantidID, 1445.54, 361.697, 550.221, 54.0878, 1, true ) 
mantid4 = SpawnActor( mantidID, 1448.2, 358.863, 550.221, 25.7378, 1, true ) 

FadeOut(mantid1, 0)
FadeOut(mantid2, 0)
FadeOut(mantid3, 0)
FadeOut(mantid4, 0)
"
364,Lorewalker Story - S2: Saurok - Scene 3 - saurok_tank2 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene6"" )
--Wait(2)
FadeIn(saurok_tank2, 1)
FadeIn(light_cl, 1)
PlayLoopingSplitBodyAnim( saurok_tank2, Animations.Attack1H )
Wait(2)
SendTrigger(""kill mantid3"")
Wait(1)
SendTrigger(""kill mantid4"")
StopLoopingSplitBodyAnim( saurok_tank2, Animations.Attack1H )


WaitForTrigger(""landed"") -- Wait for mantid to land
RunToLocation(saurok_tank2, 7, 1457.67, 367.054, 550.221, 41.1673)
--Wait(1)
PlayOneShotSplitBodyAnim( saurok_tank2, Animations.Attack1H )
Wait(1)
SendTrigger(""kill mantid2"")
--Wait(1)
PlayOneShotSplitBodyAnim( saurok_tank2, Animations.Attack1H )
Wait(1)
SendTrigger(""kill mantid1"")

-- Wait for Scene 7
WaitForTrigger( ""Scene7"" )
RunToLocation(saurok_tank2, 7, 1461.66, 369.909, 550.221, 37.7924)
PlayLoopingSplitBodyAnim( saurok_tank2, Animations.Attack1H )

--Wait for Scene 8
WaitForTrigger(""Scene8"")
RunToLocation(saurok_tank2, 7, 1464.2, 373.284, 550.221, 8.54268)
PlayOneShotSplitBodyAnim( saurok_tank2, Animations.Special2H )
Wait(1)
SendTrigger(""moguVictim - Kill"")
Wait(1)
RunToLocation(saurok_tank2, 7, 1458.58, 372.719, 550.221, 250.418)
Wait(1)
SendTrigger(""saurok_tank2 killme"")
Wait(1)
PlayOneShotSplitBodyAnim(saurok_tank2, Animations.Death)
PlayLoopingSplitBodyAnim(saurok_tank2, Animations.Dead)

--Wait for Scene 10
WaitForTrigger(""Scene10"")
FadeOut(saurok_tank2, 1)
saurok_tank2: Despawn()"
365,Lorewalker Story - S2: Saurok - Scene 3 - saurok_heal2 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene6"" )
--Wait(2)
FadeIn(saurok_heal2, 1)
PlayLoopingSplitBodyAnim( saurok_heal2, Animations.ReadySpellOmni )


--Wait For Scene 7
WaitForTrigger(""Scene7"")
RunToLocation( saurok_heal2, 2, 1451.47, 360.6, 550.221, 44.5438)

--Wait For Scene 9
WaitForTrigger(""Scene9"")
Wait(4)
StopLoopingSplitBodyAnim( saurok_heal2, Animations.ReadySpellOmni )
CastSpellAtActor( saurok_heal2, saurok_heal2, squibID )
PlayOneShotSplitBodyAnim(saurok_heal2, Animations.Death)
PlayLoopingSplitBodyAnim(saurok_heal2, Animations.Dead)

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_heal2, 1)
saurok_heal2: Despawn()"
366,Lorewalker Story - S2: Saurok - Scene 3 - saurok_hack2 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene6"" )
--Wait(2)
FadeIn(saurok_hack2, 1)
PlayLoopingSplitBodyAnim( saurok_hack2, Animations.Attack1H )

--Wait For Scene 7
WaitForTrigger(""Scene7"")
StopLoopingSplitBodyAnim( saurok_hack2, Animations.Attack1H )
RunToLocation( saurok_hack2, 2, 1447.48, 362.487, 550.221, 14.3938)
Wait(1)
RunToLocation( saurok_hack2, 5, 1459.18, 372.756, 550.221, 13.9413)
PlayLoopingSplitBodyAnim( saurok_hack2, Animations.Attack1H )

--Wait for Scene 8
WaitForTrigger(""Scene8"")
StopLoopingSplitBodyAnim( saurok_hack2, Animations.Attack1H )
RunToLocation( saurok_hack2, 2, 1463.07, 372.409, 550.221, 247.717)
Wait(1)
PlayLoopingSplitBodyAnim( saurok_hack2, Animations.Ready1H )


--Wait For Scene 9
WaitForTrigger(""Scene9"")
Wait(2)
--StopLoopingSplitBodyAnim( saurok_hack2, Animations.Attack1H )
CastSpellAtActor( saurok_hack2, saurok_hack2, squibID )
PlayOneShotSplitBodyAnim(saurok_hack2, Animations.Death)
PlayLoopingSplitBodyAnim(saurok_hack2, Animations.Dead)


-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_hack2, 1)
saurok_hack2: Despawn()"
367,Lorewalker Story - S2: Saurok - mantid3 and 4 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
-- Wait until called
local actorAuraVisual = mantid3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = mantid4:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim(mantid3, Animations.Attack2H )
Wait(1)
PlayLoopingSplitBodyAnim(mantid4, Animations.Attack2H )


--Wait for Scene 6
WaitForTrigger( ""Scene6"" )
FadeIn(mantid3, 1)
FadeIn(mantid4, 1)

--Wait For Kill order
WaitForTrigger(""kill mantid3"")
CastSpellAtActor( mantid3, mantid3, squibID )
StopLoopingSplitBodyAnim(mantid3, Animations.Attack2H )
PlayOneShotSplitBodyAnim(mantid3, Animations.Death)
PlayLoopingSplitBodyAnim(mantid3, Animations.Dead)

--Wait For Kill order
WaitForTrigger(""kill mantid4"")
CastSpellAtActor( mantid4, mantid4, squibID )
StopLoopingSplitBodyAnim(mantid4, Animations.Attack2H )
PlayOneShotSplitBodyAnim(mantid4, Animations.Death)
PlayLoopingSplitBodyAnim(mantid4, Animations.Dead)

-- Wait until dismissed
WaitForTrigger( ""Scene7"" )
FadeOut(mantid3, 1)
FadeOut(mantid4, 1)
mantid3: Despawn()
mantid4: Despawn()"
368,Lorewalker Story - S2: Saurok - Init - Scene 4 Actors - ZTO,"--Spawn in saurok
saurok_hack3 = SpawnActor( hackID, 1428.7, 351.351, 548.016, 115.063, 1, true ) -- Hacky saurok
saurok_heal3 = SpawnActor( healID, 1439.16, 368.383, 552.797, 0.76214, 1, true ) -- Healy saurok
saurok_tank3 = SpawnActor( tankID, 1470.07, 379.684, 550.221, 220.683, 1, false ) -- Tank saurok

--Fade out until needed
FadeOut(saurok_hack3, 0)
FadeOut(saurok_heal3, 0)
FadeOut(saurok_tank3, 0)

"
369,Lorewalker Story - S2: Saurok - saurok_hack3 - ZTO,"-- Wait until called
WaitForTrigger( ""aScene6"" )
Wait(2)
FadeIn(saurok_hack3, 1)
saurok_hack3: PlayLoopingFullBodyAnim( Animations.MountSelfRun )
RunToLocation( saurok_hack3, 5, 1424.86, 359.302, 548.016, 71.4126, true)
RunToLocation( saurok_hack3, 5, 1436.79, 382.699, 548.016, 36.9876, true)
RunToLocation( saurok_hack3, 5, 1446.27, 375.394, 550.221, 310.813, true)
RunToLocation( saurok_hack3, 5, 1446.68, 366.068, 550.221, 271.888, true)
RunToLocation( saurok_hack3, 5, 1456.09, 362.285, 550.221, 110.338, true)


FadeOut(saurok_hack3, 1)

-- Wait until dismissed
WaitForTrigger( ""endScene"" )
FadeOut(saurok_hack3, 1)
saurok_hack3: Despawn()"
370,Lorewalker Story - S2: Saurok - saurok_heal3 - ZTO,"-- Wait until called
WaitForTrigger( ""aScene6"" )
Wait(2)
FadeIn(saurok_heal3, 1)
PlayOneShotSplitBodyAnim( saurok_heal3, Animations.BattleRoar)
Wait(2)
saurok_heal3: PlayLoopingFullBodyAnim( Animations.MountSelfRun )
RunToLocation( saurok_heal3, 5, 1447.68, 368.496, 550.221, 0.76214, true)
FadeOut(saurok_heal3, 1)

-- Wait until dismissed
WaitForTrigger( ""endScene"" )
FadeOut(saurok_heal3, 1)
saurok_heal3: Despawn()"
371,Lorewalker Story - S2: Saurok - saurok_tank3 - ZTO,"-- Wait until called
WaitForTrigger( ""aScene6"" )
--Wait(2)
FadeIn(saurok_tank3, 1)
saurok_tank3: PlayLoopingFullBodyAnim( Animations.MountSelfRun )
--saurok_tank3: SetFacingToAbs(Vector:New(1449.06, 352.7, 545.224)) 
RunToLocation(saurok_tank3, 5, 1455.2, 366.898, 550.221, 220.683, false)
Wait(5)

-- Wait until dismissed
WaitForTrigger( ""Scene6"" )
FadeOut(saurok_tank3, 1)
saurok_tank3: Despawn()"
372,Lorewalker Story - S2: Saurok - Init - Scene 5 Actors - ZTO,"--Spell Effects
fieryExplosionSpellID = 99977
trollExplosionSpellID = 52565
bloodyExplosionSpellID = 3240

--Spawn in saurok
saurok_hack4 = SpawnActor( hackID, 1439.12, 368.2, 552.797, 345.014, 1, false ) -- Hacky saurok
saurok_hack5 = SpawnActor( hackID, 1438.44, 385.48, 548.016, 306.99, 1, false ) -- Healy saurok
saurok_hack6 = SpawnActor( hackID, 1457.27, 384.883, 552.797, 280.889, 1, false ) -- Tank saurok
saurok_waller01 = SpawnActor( hackID, 1439.12, 368.2, 552.797, 345.014, 1, false ) -- Hacky saurok
saurok_waller02 = SpawnActor( hackID, 1439.12, 368.2, 552.797, 345.014, 1, false ) -- Hacky saurok
saurok_waller03 = SpawnActor( hackID, 1439.12, 368.2, 552.797, 345.014, 1, false ) -- Hacky saurok
saurok_waller04 = SpawnActor( hackID, 1439.12, 368.2, 552.797, 345.014, 1, false ) -- Hacky saurok

saurok_pillar01 = SpawnActor( healID, 1442.15, 373.229, 552.797, 354.699, 1, true)
saurok_pillar02 = SpawnActor( healID, 1451.11, 381.812, 552.797, 282.249, 1, true)


--Fade out until needed
FadeOut(saurok_hack4, 0)
FadeOut(saurok_hack5, 0)
FadeOut(saurok_hack6, 0)


FadeOut(saurok_waller01, 0)
FadeOut(saurok_waller02, 0)
FadeOut(saurok_waller03, 0)
FadeOut(saurok_waller04, 0)

FadeOut(saurok_pillar01, 0)
FadeOut(saurok_pillar02, 0)"
373,Lorewalker Story - S2: Saurok - Scene 5 - saurok_hack4 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene8"" )
Wait(2)
FadeIn(saurok_hack4, 1)
saurok_hack4: PlayLoopingFullBodyAnim( Animations.MountSelfRun )
RunToLocation(saurok_hack4, 4, 446.87, 366.149, 550.221, 337.138, true) --Run to Tian
saurok_hack4: StopLoopingFullBodyAnim( Animations.MountSelfRun )
SendTrigger( ""attackTian"" ) --Let Tian know i'm here

--OnThrottle
WaitForTrigger( ""throttle"" )
saurok_hack4: PlayLoopingFullBodyAnim( Animations.Strangulate ) --Start to get strangled
RunToLocation(saurok_hack4, 10, 446.87, 366.149, 555.221, 337.138, false) --Float in air
CastSpellAtActor( saurok_hack4, saurok_hack4, fieryExplosionSpellID ) --Explode
FadeOut(saurok_hack4, 0)

-- Wait until dismissed 
WaitForTrigger( ""endScene"" )
FadeOut(saurok_hack4, 1)
saurok_hack4: Despawn()"
374,Lorewalker Story - S2: Saurok - Scene 5 - saurok_hack5 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene8"" )
Wait(4)
FadeIn(saurok_hack5, 1)
saurok_hack5: PlayLoopingFullBodyAnim( Animations.MountSelfRun )
RunToLocation(saurok_hack5, 4, 1449.92, 372.145, 550.221, 312.613, true)
saurok_hack5: StopLoopingFullBodyAnim( Animations.MountSelfRun )

--OnThrottle
WaitForTrigger( ""throttle2"" )
CastSpellAtActor( saurok_hack5, saurok_hack5, fieryExplosionSpellID ) --Explode
saurok_hack5: PlayOneShotFullBodyAnim( Animations.Death ) --Start to get strangled
saurok_hack5: PlayLoopingFullBodyAnim( Animations.Dead ) --Start to get strangled

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_hack5, 1)
saurok_hack5: Despawn()"
375,Lorewalker Story - S2: Saurok - Scene 5 - saurok_hack6 - ZTO,"-- Wait until called
WaitForTrigger( ""Scene8"" )
Wait(3)
FadeIn(saurok_hack6, 1)
saurok_hack6: PlayLoopingFullBodyAnim( Animations.MountSelfRun )
RunToLocation(saurok_hack6, 4, 1462.71, 375.488, 550.221, 242.189, true)
saurok_hack6: StopLoopingFullBodyAnim( Animations.MountSelfRun )

--Wait to be killed
WaitForTrigger( ""Scene9"" )
Wait(3)
saurok_hack6: PlayOneShotFullBodyAnim( Animations.Death )
saurok_hack6: PlayLoopingFullBodyAnim( Animations.Dead )


-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_hack6, 1)
saurok_hack6: Despawn()"
376,Shen-zin Su - Healing Cinematic - Init,"
local FlashHealModel = ""Spells\\FlashHeal_Base.mdx""
local NourishModel = ""SPELLS\\Druid_Nourish.M2""
local HolyNovaModel = ""SPELLS\\HolyNova_Impact_Base.M2""
local ForceOfNatureModel = ""SPELLS\\ForceofNature_Impact.M2""
local LeafyBushModel = ""WORLD\\EXPANSION04\\DOODADS\\VALLEYOFFOURWINDS\\GIANTLEAVES\\VFW_GiantLeaves04.M2""
local BloodBushModel = ""WORLD\\EXPANSION04\\DOODADS\\TURTLEZONE\\BLOODPLANT\\TU_BloodPlant01.M2""
local BloodTreeModel = ""WORLD\\EXPANSION04\\DOODADS\\TURTLEZONE\\BLOODTREE\\TU_BloodTree02.M2""

-- SpawnModelActor( modelFileName, x, y, z, facing [default 0], scale [default 1] )
LeafyBush01 = SpawnModelActor( LeafyBushModel, 292.373, 3939.95, 86.6253, 0, 0.5 )
Nourish01 = SpawnModelActor ( NourishModel, 292.373, 3939.95, 86.6253, 0, 4 )
FadeOut(Nourish01, 0)

LeafyBush02 = SpawnModelActor( LeafyBushModel, 361.547, 3964.84, 89.0553, 30, 0.5 )
Nourish02 = SpawnModelActor ( NourishModel, 361.547, 3964.84, 89.0553, 30, 4 )
FadeOut(Nourish02, 0)

BloodBushModel01 = SpawnModelActor( BloodBushModel, 298.55, 3929.71, 87.7374, 60, 0.5 )
Nourish03 = SpawnModelActor ( NourishModel, 298.55, 3929.71, 87.7374, 60, 4 )
FadeOut(Nourish03, 0)

BloodBushModel02 = SpawnModelActor( BloodBushModel, 360.415, 3980.49, 95.142, 90, 0.5 )
Nourish04 = SpawnModelActor ( NourishModel, 360.415, 3980.49, 95.142, 90, 4 )
FadeOut(Nourish04, 0)

BloodTreeModel01 = SpawnModelActor( BloodTreeModel, 342.981, 3933.61, 101.403, 120, 0.2 )
Nourish05 = SpawnModelActor ( NourishModel, 342.981, 3933.61, 101.403, 120, 4 )
FadeOut(Nourish05, 0)

BloodTreeModel02 = SpawnModelActor( BloodTreeModel, 364.929, 3978.52, 94.6798, 160, 0.2 )
Nourish06 = SpawnModelActor ( NourishModel, 364.929, 3978.52, 94.6798, 160, 4 )
FadeOut(Nourish06, 0)"
377,Shen-zin Su - Healing Cinematic - Bunny 01,"FadeIn( Nourish01, 0 )
FadeIn( Nourish03, 0 )

FadeIn( Nourish05, 0 )
FadeIn( Nourish02, 0 )

FadeIn( Nourish04, 0 )
FadeIn( Nourish06, 0 )

Wait( 1 )
LeafyBush01:SetScale(1)
BloodBushModel01:SetScale(1)

Wait( 1 )
BloodTreeModel01:SetScale(0.75)
LeafyBush02:SetScale(1)


Wait( 1 )
BloodBushModel02:SetScale(1)
BloodTreeModel02:SetScale(0.75)
"
378,Shen-zin Su - Healing Cinematic - Camera,"
local sceneOrigin = scene:GetPosition()
scene:SetCamera(0, 0.0, nil, nil)

--scene:WaitTimer(1)

SetCameraFollowPath( 492, 4, 4399, 4400, 20 )
LeafyBush01:PlaySoundKitStereo (27417, true) 
scene:WaitTimer(5)
LeafyBush01:PlaySoundKitStereo (27418, true) 
scene:WaitTimer(14)
scene:WaitTimer(1)
--(Camera, Previous camera transition time, Path number, Target number, path duration) 

--Old movements:
--scene:SetCamera(316,8,nil,nil) -- (camera, transition time, primary target, secondary target)
--scene:WaitTimer(2)
--scene:SetCamera(328,8,nil,nil)
--scene:WaitTimer(2)
--scene:SetCamera(329,8,nil,nil)
--scene:WaitTimer(2)
--scene:SetCamera(330,8,nil,nil)
--scene:WaitTimer(2)
--scene:SetCamera(331,8,nil,nil)
--scene:WaitTimer(2)
--scene:SetCamera(332,8,nil,nil)
--scene:WaitTimer(2)
--scene:SetCamera(333,8,nil,nil)
--scene:WaitTimer(2)
scene:SetCamera(0,4,nil,nil) -- sets camera back to game-cam
scene:WaitTimer(4)
scene:EndScene()"
379,Jade Forest - Horde Intro Scene - Alliance Crewman01 - JSB,"allianceCrewman01:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 3.9 )

allianceCrewman01:PlayOneShotFullBodyAnim(Animations.EmoteKneel)

Wait( 6.2 )

allianceCrewman01:SetFacingToAbs ( Vector:New (3743.72, -672.189, 14.29) )
allianceCrewman01:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCrewman01:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCrewman01:FollowPath( 3233, 2 )

Wait( 3 )

allianceCrewman01:Despawn()
"
380,Jade Forest - Horde Intro Scene - Alliance Crewman02 - JSB,"allianceCrewman02:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 4.1 )

allianceCrewman02:PlayOneShotFullBodyAnim(Animations.EmoteKneel)

Wait( 6 )

allianceCrewman02:SetFacingToAbs ( Vector:New (3743.72, -672.189, 14.29) )
allianceCrewman02:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCrewman02:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCrewman02:FollowPath( 3234, 2 )


Wait( 3 )

allianceCrewman02:Despawn()
"
381,Jade Forest - Horde Intro Scene - Alliance Crewman03 - JSB,"allianceCrewman03:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 4.3 )

allianceCrewman03:PlayOneShotFullBodyAnim(Animations.EmoteKneel)

Wait( 5.8 )

allianceCrewman03:SetFacingToAbs ( Vector:New (3743.72, -672.189, 14.29) )
allianceCrewman03:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCrewman02:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCrewman03:FollowPath( 3232, 2 )

Wait( 3 )

allianceCrewman03:Despawn()"
382,Jade Forest - Horde Intro Scene - Alliance Crewman04 - JSB,"allianceCrewman04:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 3 )

allianceCrewman04:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)

Wait( 7.1 )

allianceCrewman04:PlayOneShotFullBodyAnim(Animations.Knockdown)


Wait( 5 )

allianceCrewman04:Despawn()"
383,Jade Forest - Horde Intro Scene - Alliance Crewman05 - JSB,"allianceCrewman05:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman05 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 2 )
allianceCrewman05:SetFacingToAbs ( Vector:New (3457.83, -923.965, 0) )
Wait( 1 )

allianceCrewman05:PlayOneShotFullBodyAnim(Animations.EmoteShout)

Wait( 7.1 )
allianceCrewman05:PlayOneShotFullBodyAnim(Animations.Knockdown)

Wait( 5 )

allianceCrewman05:Despawn()"
386,Townlong Steppes - Finale Spyglass Intro - Init,"
local Boss1ID = 62579
local Boss2ID = 62580
local Boss3ID = 62581
Boss1 = SpawnActor( Boss1ID, 1376.05, 4399.58, 211.893, 95, 1.0, false )
Boss2 = SpawnActor( Boss2ID, 1595.37, 4470.21, 146.622, 291, 1.0, false )
Boss3 = SpawnActor( Boss3ID, 1667.88, 4807.43, 152.732, 60, 1.0, false )
Boss3:PlaySpellStateVisual(26302)"
387,Townlong Steppes - Finale Spyglass Intro - Bunny 01,"
Wait(1)
FadeIn( Boss1, 1 )
FadeIn( Boss2, 1 )
FadeIn( Boss3, 1 )"
388,Townlong Steppes - Finale Spyglass Intro - Camera,"
-- scene:WaitTimer(1)

-- (camera, transition time, primary target, secondary target)
scene:SetCamera(403,1,nil,nil) --Camera Loc 1, Tar 1
scene:WaitTimer(3)
scene:SetCamera(446,3,nil,nil) --Camera Loc 1.5, Tar 1
scene:WaitTimer(7)
scene:SetCamera(403,3,nil,nil) --Camera Loc 1, Tar 1
scene:WaitTimer(3)
scene:SetCamera(404,3,nil,nil) --Camera Loc 1, Tar 2
scene:WaitTimer(3)
scene:SetCamera(405,3,nil,nil) --Camera Loc 2, Tar 2
scene:WaitTimer(4)
scene:SetCamera(406,2,nil,nil) --Camera Loc 3, Tar 3
scene:WaitTimer(4)
scene:SetCamera(407,2,nil,nil) --Camera Loc 4, Tar 4
scene:WaitTimer(4)
scene:SetCamera(408,3,nil,nil) --Camera Loc 1, Tar 4
scene:WaitTimer(4)
scene:SetCamera(0,1,nil,nil) -- sets camera back to game-cam"
538,Jade Forest - Stay a While Scene - Init - JSB,"
-- spawn cho
local choCreatureID = 55768
-- SmoothPhaseSpawnActor( creatureID, x, y, z, facing, scale, snapToGround )
cho = SmoothPhaseSpawnActor( choCreatureID, 2130.74, -474.679, 392.929, 29, 1.0, false )
cho:PlayLoopingFullBodyAnim(Animations.SitGround)
SendTrigger(""ChoSpawnComplete"")

-- spawn Mist
local mistModel = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mist = SpawnModelActor( mistModel, 2127.5, -476.5, 398, 27.4498, 2.0, false )
FadeOut( mist, 0 )

-- spawn mogu
local moguCreatureID = 63143
mogu = SpawnActor( moguCreatureID, 2128.1, -475.986, 395, 354, 1.5, false )
mogu:PlayLoopingAnimKit(2442)
FadeOut( mogu, 0 )
"
539,Jade Forest - Stay a While Scene - Cho - JSB,"
WaitForTrigger(""ChoSpawnComplete"")

Wait( 5 )
cho:StopLoopingFullBodyAnim()
cho:PlayOneShotFullBodyAnim(Animations.SitGroundUp)

Wait( 2 )
cho:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
-- say ""Thanks to your actions, the Hozen fear your people. Indulge me a moment...""
cho:BroadcastText(BroadcastType.Say, 66179)
Wait( 4 )

RunToLocation( cho, 2, 2141.74, -476.905, 392.37, 330.525 )
Wait( 1 )

cho:PlayLoopingFullBodyAnim(Animations.EmoteUseStanding)
Wait( 2 )
cho:StopLoopingFullBodyAnim()
local actorAuraVisual = cho:PlaySpellStateVisual(20291) 
Wait( 0.5 )
cho:SetFacing(128)

cho:PlayLoopingFullBodyAnim(Animations.EmoteReadLoop)
-- say ""Ah! Here we are. Over 14,000 years ago, this entire land was ruled by a terrible race of warlords called 'The mogu'.""
cho:BroadcastText(BroadcastType.Say, 66180)

SendTrigger( ""moguAppear"" )
Wait( 14 )

-- say ""The mogu ruled through FEAR. And fear kept them in power - until the first Pandaren monks taught my people COURAGE. And the mogu were overthrown.""
cho:BroadcastText(BroadcastType.Say, 66181)
cho:ClearSpellVisual( actorAuraVisual)

cho:StopLoopingFullBodyAnim()
RunToLocation( cho, 2, 2135.42, -476.072, 392.935, 205.425 )
cho:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
Wait( 9 )
cho:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
cho:BroadcastText(BroadcastType.Say, 66182)

SendTrigger( ""moguDisappear"" )

Wait( 3 )

cho:SetFacing(66)

-- say ""You see, those who lead through fear only stay in power while those they govern lack courage.""
cho:BroadcastText(BroadcastType.Say, 66183)
cho:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
Wait( 8 )

RunToLocation( cho, 2, 2130.74, -474.679, 392.929, 29 )
-- say ""The hozen are many things, but they are not cowards - not for long. To lead them, you must inspire them!""
cho:BroadcastText(BroadcastType.Say, 66184)
cho:PlayOneShotFullBodyAnim(Animations.EmoteNo)
Wait( 3 )
cho:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
Wait( 4 )
cho:PlayOneShotFullBodyAnim(Animations.SitGroundDown)
Wait( 3.27 )
cho:PlayLoopingFullBodyAnim(Animations.SitGround)

Wait( 5 )
--cho:Despawn()

"
540,Jade Forest - Stay a While Scene - Mist - JSB,"
WaitForTrigger( ""moguAppear"" )

FadeIn( mist, 3 )

-- Wait( 4 )

-- FadeOut( mist, 5)


WaitForTrigger( ""moguDisappear"" )

FadeIn( mist, 3 )

Wait( 4 )

FadeOut( mist, 3)"
541,Jade Forest - Stay a While Scene - Mogu - JSB,"
WaitForTrigger( ""moguAppear"" )
Wait( 2 )
FadeIn( mogu, 7 )


WaitForTrigger( ""moguDisappear"" )

Wait( 3 )

FadeOut( mogu, 3)"
542,Great Wall - Mantid Army - Init 1,"-- spawn mantid
local mantidCreatureID = 63560
local mantidCreatureID2 = 61213
--
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2541.46, 325.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2541.46, 325.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2541.46, 325.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2531.46, 328.746, 261.158, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2531.46, 326.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1126.48, 2531.46, 325.609, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2521.46, 327.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2521.46, 328.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2521.46, 329.763, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2511.46, 329.416, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2511.46, 328.912, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2511.46, 328.912, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2501.46, 327.876, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1116.48, 2501.46, 327.079, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2501.46, 326.181, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2491.46, 326.373, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2491.46, 328.377, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2491.46, 328.589, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2481.46, 328.993, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2481.46, 329.241, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2481.46, 329.595, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID2, 1106.48, 2471.46, 330.094, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2471.46, 330.459, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2471.46, 330.761, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2461.46, 331.059, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2461.46, 330.907, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2461.46, 329.844, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2451.46, 327.626, 265.568, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2451.46, 326.966, 264.443, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2451.46, 326.434, 272.093, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2441.46, 326.216, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2441.46, 326.166, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2441.46, 325.404, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2431.46, 326.117, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2431.46, 326.701, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1126.48, 2431.46, 326.742, 272.093, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2421.46, 326.924, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2421.46, "
543,Great Wall - Mantid Army - Init 2,"-- spawn mantid
local mantidCreatureID = 63560
local mantidCreatureID2 = 61213
--
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2554.46, 305.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2554.46, 305.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2554.46, 305.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1061.51, 2544.46, 305.746, 261.158, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2544.46, 305.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2544.46, 305.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2521.46, 305.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2521.46, 305.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2521.46, 305.763, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2511.46, 305.416, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2511.46, 305.912, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2511.46, 305.912, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2501.46, 305.876, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2501.46, 305.079, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2501.46, 305.181, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2491.46, 305.373, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2491.46, 305.377, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2491.46, 305.589, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1061.51, 2481.46, 305.993, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2481.46, 305.241, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2481.46, 305.595, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2471.46, 305.094, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2471.46, 305.459, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2471.46, 305.761, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2461.46, 305.059, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2461.46, 305.907, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2461.46, 305.844, 264.668, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2451.46, 305.626, 265.568, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2451.46, 305.966, 264.443, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2451.46, 305.434, 272.093, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2441.46, 305.216, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2441.46, 305.166, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2441.46, 305.404, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2431.46, 305.117, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1051.51, 2431.46, 305.701, 272.093, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2431.46, 305.742, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2421.46, 305.924, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1051.51, 2421.46, "
544,Great Wall - Mantid Army - Init 3,"-- spawn mantid
local mantidCreatureID = 63560
local mantidCreatureID2 = 61213
--
table.insert(mantid, SpawnActor( mantidCreatureID, 995.17, 2554.46, 300.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 980.17, 2554.46, 300.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 965.17, 2554.46, 300.392, 270.609, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 950.17, 2554.46, 300.746, 261.158, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 995.17, 2544.46, 300.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 980.17, 2544.46, 300.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 965.17, 2544.46, 300.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 950.17, 2544.46, 300.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 995.17, 2534.46, 300.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 980.17, 2534.46, 300.609, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 965.17, 2534.46, 300.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 950.17, 2534.46, 300.796, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 995.17, 2524.46, 293.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 980.17, 2524.46, 293.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 965.17, 2524.46, 293.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 950.17, 2524.46, 293.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 995.17, 2514.46, 293.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 980.17, 2514.46, 293.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 965.17, 2514.46, 293.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 950.17, 2514.46, 293.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 995.17, 2504.46,300.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 980.17, 2504.46, 300.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 965.17, 2504.46, 300.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 950.17, 2504.46, 300.796, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 995.17, 2494.46, 300.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 980.17, 2494.46, 300.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 965.17, 2494.46, 300.364, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 950.17, 2494.46, 300.796, 266.243, 1.0, true ))
"
545,[1] Great Wall - Mantid Army - Init 1,"327.336, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2421.46, 327.936, 272.093, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2411.46, 328.895, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2411.46, 329.115, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2411.46, 328.474, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2401.46, 328.244, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1116.48, 2401.46, 328.198, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2401.46, 328.108, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1106.48, 2391.46, 327.811, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1116.48, 2391.46, 327.493, 279.294, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1126.48, 2391.46, 327.196, 279.294, 1.0, true ))
"
546,[1] Great Wall - Mantid Army - Init 2,"305.336, 272.093, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2421.46, 305.936, 272.093, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2411.46, 305.895, 272.093, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2411.46, 305.115, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2411.46, 305.474, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2401.46, 305.244, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1051.51, 2401.46, 305.198, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2401.46, 305.108, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 1061.51, 2391.46, 305.811, 279.294, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 1051.51, 2391.46, 305.493, 279.294, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 1041.51, 2391.46, 305.196, 279.294, 1.0, true ))
"
548,Great Wall - Mantid Army - Init 4,"-- spawn mantid
local mantidCreatureID = 63560
local mantidCreatureID2 = 61213
--
table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2554.46, 311.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 856.724, 2554.46, 311.392, 270.609, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2554.46, 311.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 816.724, 2554.46, 311.000, 261.158, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2544.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 856.724, 2544.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2544.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 816.724, 2544.46, 311.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2534.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 856.724, 2534.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 836.724, 2534.46, 311.364, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 816.724, 2534.46, 311.796, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2524.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 856.724, 2524.46, 311.609, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2524.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 816.724, 2524.46, 311.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2514.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 856.724, 2514.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2514.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 816.724, 2514.46, 311.796, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2504.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 856.724, 2504.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2504.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 816.724, 2504.46, 311.796, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2494.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 856.724, 2494.46, 311.609, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2494.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 816.724, 2494.46, 311.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2484.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 856.724, 2484.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2484.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 816.724, 2484.46, 311.796, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 876.724, 2474.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 856.724, 2474.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 836.724, 2474.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 816.724, 2474.46, 311.796, 266.243, 1.0, true ))
"
550,Great Wall - Mantid Army - Init 5,"-- spawn mantid
local mantidCreatureID = 63560
local mantidCreatureID2 = 63561

table.insert(mantid, SpawnActor( mantidCreatureID, 776.724, 2554.46, 311.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 756.724, 2554.46, 311.392, 270.609, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 736.724, 2554.46, 311.392, 270.609, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2554.46, 311.000, 261.158, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 776.724, 2544.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 756.724, 2544.46, 311.609, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 736.724, 2544.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2544.46, 311.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 776.724, 2534.46, 311.737, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 756.724, 2534.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 736.724, 2534.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2534.46, 311.796, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID, 776.724, 2524.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 756.724, 2524.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 736.724, 2524.46, 311.364, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2524.46, 311.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 776.724, 2514.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 756.724, 2514.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 736.724, 2514.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 716.724, 2514.46, 311.796, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 776.724, 2504.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 756.724, 2504.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 736.724, 2504.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2504.46, 311.796, 266.243, 1.0, true ))

table.insert(mantid, SpawnActor( mantidCreatureID2, 776.724, 2494.46, 311.737, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 756.724, 2494.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 736.724, 2494.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2494.46, 311.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 776.724, 2484.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 756.724, 2484.46, 311.609, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 736.724, 2484.46, 311.364, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2484.46, 311.796, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 776.724, 2474.46, 311.737, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID2, 756.724, 2474.46, 311.609, 266.243, 1.0, true))
table.insert(mantid, SpawnActor( mantidCreatureID, 736.724, 2474.46, 311.364, 266.243, 1.0, true ))
table.insert(mantid, SpawnActor( mantidCreatureID, 716.724, 2474.46, 311.796, 266.243, 1.0, true ))
"
556,Valley of the Four Winds - Stoneplow Finale - Init Friends - PRK ,"if (Scene.SetFadeRegion) then
	scene:SetFadeRegion(10, true) -- (radius, fadeActivePlayer)
end 

paradeSpeed = 8

--player
playerLoc = scene:GetPosition()
playerX = playerLoc.x
playerY = playerLoc.y
playerZ = playerLoc.z
player = SpawnActivePlayerCloneActor( playerX, playerY, playerZ, 247) 

-- wall cap
local wallModel = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\GREATWALL_CAP\\PA_GreatWall_Cap_01.M2""
local walls = SpawnModelActorsAtPoints( wallModel, 3389, false )
wall = walls[1]
-- wall noise bunnies
noiseBunnyA = SpawnFadedActorAtPoint( 63404, 4037, false)
noiseBunnyB = SpawnFadedActorAtPoint( 63404, 4038, false)
noiseBunnyC = SpawnFadedActorAtPoint( 63404, 4039, false)
buzzBunny = SpawnFadedActorsAtPoints( 63404, 4419, false)
-- wall dustsquibs
dustSquibs = SpawnFadedActorsAtPoints( 63404, 4041, false)


-- loon mai
loon = SpawnActorAtPoint( 63374, 3368, true )
-- leven dawnblade
leven = SpawnActorAtPoint( 63377, 3369, true )

-- fo sho knucklebump
fosho = SpawnActorAtPoint( 63378, 3370, true )
fosho:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
-- ko-yan na
koyan = SpawnActorAtPoint( 63379, 3371, true )
koyan:PlayLoopingSplitBodyAnim(Animations.Ready1H)
-- jooru
jooru = SpawnActorAtPoint( 63380, 3372, true )
jooru:PlayLoopingSplitBodyAnim(Animations.ReadySpellDirected)

--farmers, kids
farmerA = SpawnActorAtPoint(63409, 3391, true)
farmerB = SpawnActorAtPoint(63412, 3392, true)
farmerC = SpawnActorAtPoint(63410, 3393, true)
kidA = SpawnActorAtPoint(63405, 3394, true)
kidB = SpawnActorAtPoint(63406, 3395, true)
kidC = SpawnActorAtPoint(63407, 3396, true)
kidD = SpawnActorAtPoint(63408, 3397, true)
kidE = SpawnActorAtPoint(63411, 3398, true)



-- hidden master
hiddenmaster = SpawnFadedActorAtPoint( 63385, 3377, true)
-- lin tenderpaw
lin = SpawnFadedActorAtPoint( 63386, 3378, true)
-- xiao
xiao = SpawnFadedActorAtPoint( 63387, 3379, true)
-- kang bramblestaff
kang = SpawnFadedActorAtPoint( 63388, 3380, false)
-- ken-ken
kenken = SpawnFadedActorAtPoint( 63389, 3381, false)
-- clever ashyo
ashyo = SpawnFadedActorAtPoint( 63390, 3382, true )

-- chen
chen = SpawnFadedActorAtPoint( 63381, 3373, false )
-- li li
lili = SpawnFadedActorAtPoint( 63382, 3374, true )
-- mudmug
mudmug = SpawnFadedActorAtPoint( 63383, 3375, true )

-- dezco
dezco = SpawnFadedActorAtPoint( 63394, 3385, true )
braveA = SpawnFadedActorAtPoint( 63398, 3399, true )
braveB = SpawnFadedActorAtPoint( 63398, 3400, true )
braveC = SpawnFadedActorAtPoint( 63398, 3401, true )
braveD = SpawnFadedActorAtPoint( 63398, 3407, true )

-- lyalia
lyalia = SpawnFadedActorAtPoint( 63395, 3386, true )
sentinelA = SpawnFadedActorAtPoint( 63399, 3402, true )
sentinelB = SpawnFadedActorAtPoint( 63399, 3403, true )
sentinelC = SpawnFadedActorAtPoint( 63399, 3404, true )
sentinelD = SpawnFadedActorAtPoint( 63399, 3408, true )

-- koro
koro = SpawnFadedActorAtPoint( 63384, 3376, true )
monkA = SpawnFadedActorAtPoint( 63397, 3413, true )
monkB = SpawnFadedActorAtPoint( 63397, 3414, true )
monkC = SpawnFadedActorAtPoint( 63397, 3415, true )
monkD = SpawnFadedActorAtPoint( 63397, 3416, true )
priestA = SpawnFadedActorAtPoint( 63451, 3417, true )
priestB = SpawnFadedActorAtPoint( 63451, 3418, true )
priestC = SpawnFadedActorAtPoint( 63451, 3419, true )
priestD = SpawnFadedActorAtPoint( 63451, 3420, true )


-- yi-mo
yimo = SpawnFadedActorAtPoint( 63396, 3387, true )
wardenA = SpawnFadedActorAtPoint( 63400, 3405, true )
wardenB = SpawnFadedActorAtPoint( 63400, 3406, true )
wardenC = SpawnFadedActorAtPoint( 63400, 3409, true )
wardenD = SpawnFadedActorAtPoint( 63400, 3410, true )
wardenE = SpawnFadedActorAtPoint( 63400, 3411, true )
wardenF = SpawnFadedActorAtPoint( 63400, 3412, true )


-- miss fanny
missfanny = SpawnFadedActorAtPoint( 63392, 3384, true )
-- pang"
557,PetBattle - Constants,"--------------------------------------------------------------------------------
-- spawning options
battleScale    = 1.0
spawnFwdOffset = 0.0
initialFadeInTime = 0.5

--------------------------------------------------------------------------------
-- pet ranges and move speeds
playerRadius   = 5.0
idleRadius     = 2.0
readyRadius    = 1.25
rangedRadius   = 0.5
meleeRadius    = -0.5
backlineRadius = 4.0
forwardSpeed   = 7
backwardSpeed  = 8

--------------------------------------------------------------------------------
-- backline
backlineSpacing = 2.0
backlineAlpha   = 1.0
backlineFadeTime = 0.25

--------------------------------------------------------------------------------
-- pad
padModel = fid(124640)
padAlpha = 1.0
padScale = 1.0

--------------------------------------------------------------------------------
-- arena
arenaRingModel = fid(606219)
arenaRingAlpha = 0.5
arenaRingScale = 1.0
arenaFadeTime = 5.0

--------------------------------------------------------------------------------
-- camera
freelookZoomMin = 5
freelookZoomMax = 15
freelookZoomStart = 10.0
useFreelookCamera = true
if (not Scene.SetGameCameraTarget) then
	useFreelookCamera = false
end

battleCameraIDs =
{
	intro = 336;
	idle = 335;
}

--------------------------------------------------------------------------------
-- animation
petBattleAnimKits =
{
	Stand 			= 2267;
	Death 			= 2268;
	Dead  			= 2269;
	StandHoldDecay 	= 2133;
	CloseClosed		= 2770;
	OpenOpened		= 2769;
	Custom0Custom1  = 2768;
}
"
558,PetBattle - Functions,"
function BuildVector(facing, fwd, right)
	local facingRads = math.rad(facing)
	local facingX = math.cos(facingRads)
	local facingY = math.sin(facingRads)
	
	local absPos = Vector:New(
		(facingX*fwd - facingY*right) * battleScale,
		(facingY*fwd + facingX*right) * battleScale,
		0)
	
	if spawnFwdOffset then
		absPos.x = absPos.x + spawnFwdOffset
	end

	return absPos
end

function GetTeamByIndex(teamIndex)
	return teams[teamIndex]
end

function GetActivePetByIndex(teamIndex)
	local team = GetTeamByIndex(teamIndex)
	return team.pets[team.activePet]
end


function ResetActivePets()
	-- return pets to idle
	WaitMoveToRadius(GetActivePetByIndex(1), idleRadius)
	WaitMoveToRadius(GetActivePetByIndex(2), idleRadius)
end

function LookAtOpposingTeam(pet)
	local lookAtPos = BuildVector(pet.teamFacing, idleRadius, 0)
	pet.actor:SetFacingToAbs(lookAtPos)
end

function SetHealth(pet, health, fullUpdate)

	local oldHealth = pet.currentHealth
	pet.currentHealth = health


	-- damage numbers feedback for observed battles
	if (isObserved) and (not fullUpdate) and (oldHealth ~= nil) then
		local change = health - oldHealth
		if (change < 0) and (Actor.AddDamageText) then
			pet.actor:AddDamageText(nil, -change, false, false)
		elseif (change > 0)  and (Actor.AddHealingText) then
			pet.actor:AddHealingText(nil, change, false, false)
		end
	end

	if (pet.currentHealth <= 0) and (not pet.deathAnimKit) then
		-- HACKfix facing way off in the distance so as to effectively not rotate
		local lookAtPos = BuildVector( (pet.teamFacing or 0.0), idleRadius*1000, 0)
		pet.actor:SetFacingToAbs(lookAtPos)
		if ( pet.realActor ) then 
			pet.realActor:SetFacingToAbs(lookAtPos)
		end

		RemoveAllAuraVisuals(pet)

		-- play dead
		local deathKitID = 62
		if (fullUpdate == true) then
			-- already dead
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			end
		else
			-- dieing
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			end
			scene:WaitTimer(1.5)
		end

		pet.dead = true;


		return ""dead"";
	elseif (pet.currentHealth > 0) and (pet.deathAnimKit) then
		-- resurrect

		pet.deathAnimKit:Stop()
		pet.deathAnimKit = nil
		pet.dead = false;
		local lookAtPos = BuildVector(pet.teamFacing, idleRadius, 0)
		LookAtOpposingTeam(pet)
		pet.actor:Fade(GetAlpha(pet), 0.5)
		UpdateAuraVisuals(pet)

		return ""respawn"";
	end
end

function SetXP(pet, xp, level, fullUpdate)
	local oldXP = pet.xp
	local oldLevel = pet.level
	pet.xp = xp
	pet.level = level
	if (fullUpdate) then
		return
	end
		
	local xpChange = pet.xp - oldXP
	local levelChange = pet.level - oldLevel
	if (xpChange <= 0) and (levelChange <= 0) then
		return
	end

	if (xpChange > 0) and (pet.playerID == observingPlayerIndex) then
		pet.actor:AddWorldXPGainText(xpChange)
	end

	if (levelChange > 0) then
		pet.actor:ApplyLevelUpEffect()
	end
end

function GetAlpha(pet)
	if (pet.deathAnimKit) then
		return 0
	else
		return 1
	end
end

function GetAttackRadius(rangeType)
	local attackRadius = readyRadius
	if rangeType == PetBattleRange.Melee then
		attackRadius = meleeRadius
	elseif rangeType == PetBattleRange.Ranged then
		attackRadius = rangedRadius
	end
	return attackRadius
end
"
560,PetBattle - Init Player,"
allPlayers = { }

function InitTeam(playerID, team)

	-- save the team
	allPlayers[playerID] = team

	local padRadius = -idleRadius
	if (playerID == PetBattlePlayerID.Weather) then
		padRadius = 0
		team.isWeather = true
	else
		team.isWeather = false
	end

	-- spawn a pad for this team
	local padPos = BuildVector(team.teamFacing, padRadius, 0)
	local padTransform = Transform:New(padPos, team.teamFacing)
	local padCreateData = ActorCreateData:NewModel(""pad"", padModel, padTransform, padScale*battleScale)
	padCreateData.interactible = false
	if (PetBattleScene.SpawnPet) then
		padActor = battleScene:SpawnPet(playerID, PetBattlePetID.Pad, padCreateData)
	else
		padActor = scene:SpawnActor(padCreateData)
	end
	padActor:Fade(padAlpha, 0)

	-- spawn NPC character
	if (team.npcCreatureID and team.npcCreatureID > 0 and team.npcDisplayID) then
		local npcPos = BuildVector(team.teamFacing, -playerRadius, 0)
		local npcCreateData = ActorCreateData:Default()
		npcCreateData.creatureID = team.npcCreatureID
		npcCreateData.creatureDisplayID = team.npcDisplayID
		npcCreateData.transform = Transform:New(npcPos, team.teamFacing)
		npcCreateData.interactible = false
		if (PetBattleScene.SpawnNPC) then
			team.npcActor = battleScene:SpawnNPC(playerID, npcCreateData)
		else
			team.npcActor = scene:SpawnActor(npcCreateData)
		end
		team.playerDisplay = team.npcActor
	end

	team.pets = { }
	local numDescs = #team.petDescs
	local backLineOffset = (0.5 - math.floor((numDescs - 1) / 2)) * backlineSpacing
	for id, petDesc in pairs(team.petDescs) do
		local pet = { desc = petDesc, teamFacing = team.teamFacing, slot = id, auras = { } }
		pet.playerID = playerID
		team.pets[id] = pet

		if (id == PetBattlePetID.Pad) then
			pet.isPad = true
			pet.actor = padActor
			pet.sessile = true
			team.pad = pet
		else			
			pet.isPad = false
			pet.sessile = false
			local radius = backlineRadius
			local offset = 0
			if id == team.activePet then
				if (numDescs > 1) and (initialBattleState.battleState == PetBattleState.WaitingPreBattle) then
					radius = backlineRadius
				else
					radius = idleRadius
				end
			else
				offset = backLineOffset
				backLineOffset = backLineOffset + backlineSpacing
			end
			
			local pos = BuildVector(team.teamFacing, -radius, offset)
			local transform = Transform:New(pos, team.teamFacing)
			
			local petCreateData = ActorCreateData:New(petDesc.creatureID, transform, battleScale)
			petCreateData.creatureDisplayID = petDesc.displayID or 0

			pet.actor = scene:SpawnActor(petCreateData)

			SetXP(pet, petDesc.xp, petDesc.level, true)
			SetHealth(pet, petDesc.health, true)

			pet.status = petDesc.status

			pet.currentRadius = radius
			pet.currentOffset = offset

			-- always face the opponent location (at idleRadius)
			LookAtOpposingTeam(pet)


			-- hide all pets until loaded
			pet.actor:SetInteractible(false)
			pet.actor:SetHidden(true)
			pet.actor:Fade(0, 0)
			pet.standAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Stand, false, Animations.None)
		end

		-- apply initial auras
		for auraIndex, auraData in pairs(petData.auras or { }) do
			local auraVisual = petAbilityVisuals[auraData.auraVisualID]
			if (auraVisual) then
				ApplyAura(pet, auraData.instanceID, auraData.turnsRemaining, auraVisual.spellVisualID)
			end
		end

	end
end

function WaitAllPetsLoaded()

	local waitCondition = function()
		-- all actors must be renderable
		for playerID, player in pairs( allPlayers ) do
			if ( player.pets ) then 
				for slot, pet in pairs ( player.pets ) do
					if not pet.actor:IsReadyToDisplay() then
						return false
					end
				end
			end
		end
		return true
	end
	scene:WaitCondition(waitCondition)

end

function FadeInAllPets( fadeInTime )

	for playerID, player in pairs( "
561,[1] PetBattle - Init Player,"allPlayers ) do
		if (player.isWeather == false) then
			for slot, pet in pairs ( player.pets ) do
				if (pet.isPad == false) then
					pet.actor:SetHidden(false)

					local targetAlpha = backlineAlpha
					if slot == player.activePet then
						-- use the front alpha if it is the active pet
						targetAlpha = GetAlpha(pet)
					end

					pet.actor:Fade(targetAlpha, fadeInTime)
				end
			end
		end
	end

	-- wait until faded in
	if fadeInTime > 0 then
		scene:WaitTimer( fadeInTime )
	end

	-- make everything interactible again
	for playerID, player in pairs( allPlayers ) do
		if (player.isWeather == false) then
			for slot, pet in pairs ( player.pets ) do
				if (pet.isPad == false) then
					pet.actor:SetInteractible( true )
				end
			end
		end
	end

end
"
562,PetBattle - Play Spell Effect,"
--------------------------------------------------------------------------------
function SpellEffectPlayShared(effect, abilityVisualID)
	local casterPlayerID = effect.casterPlayerID
	local casterPlayer = GetTeamByIndex(casterPlayerID)
	local casterCastingPet = casterPlayer.pets[effect.casterPetSlot]

	local casterFrontPet = casterPlayer.pets[casterPlayer.activePet]

	local targetPlayerID = targetData.playerID;
	local targetPlayer = GetTeamByIndex(targetPlayerID)
	local targetPet = targetPlayer.pets[targetData.petSlot]

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end

	local casterCastingPet, spellVisualID = PerformSpellVisual(casterCastingPet, abilityVisualID, targetPet)

	return casterCastingPet, spellVisualID 
end

--------------------------------------------------------------------------------
function MovePetToFrontLines(pet, opponent, range )
--[[
	-- Move pet if its the current pet
	if ( (casterPlayer.activePet == effect.casterPetSlot) and (not casterFrontPet.deathAnimKit) ) then 
		MovePetToFrontLines(casterFrontPet, opponentFrontPet, abilityVisual.range )
	end

	-- Wait for opponent
	WaitForOpponentPet(opponentFrontPet)
]]--
	PetMoveToAttackPosition(pet, opponent, range );
end

function WaitForOpponentPet(opponent)
	-- make sure the opponent pet is at the correct radius
	if not opponent.deathAnimKit then
		WaitMoveToRadius(opponent, readyRadius)
	end
end

-- Remapping his function to be more genericl
function PerformSpellVisual(casterCastingPet, abilityVisualID, targetPet)
	PerformSpellVisualManyTargets(casterCastingPet, abilityVisualID, {targetPet})
end

function PerformSpellVisualManyTargets(casterCastingPet, abilityVisualID, targetList, waitForMissiles)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
--print(""Cast Time: ""..abilityVisual.castTime);
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellVisual(preCastInstance)

	-- loop through all the targets
	local targetActors = {};
	for k, v in pairs(targetList) do
		table.insert(targetActors, v.actor);
	end

	local castInstanceID = 0
	if ( #targetActors > 1 or casterCastingPet.actor ~= targetActors[1] ) then
--print(""Missile Travel Time: ""..abilityVisual.impactTime);
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisualAtTargets(
			spellVisualID,
			abilityVisual.impactTime,
			true,
			targetActors)
	else
		-- self targeted
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisual(spellVisualID)
	end

	-- wait for impact
	local waitMissiles = ( waitForMissiles == nil or waitForMissiles == true );
	local missilesExist = casterCastingPet.actor:HasPendingMissiles(castInstanceID)

	if (waitMissiles == true and missilesExist ) then
		casterCastingPet.actor:WaitMissilesImpacted(castInstanceID)
	else
--	print(""Impact Time: ""..abilityVisual.impactTime);
		scene:WaitTimer(abilityVisual.impactTime)
	end

	return casterCastingPet, spellVisualID

end



function PerformSpellVisualManyPoints(casterCastingPet, abilityVisualID, pointList, waitForMissiles)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == "
563,PetBattle - Result - Swap,"--------------------------------------------------------------------------------
-- SWAP
function EffectSwap(teamId, petIndex)

--	ResetActivePets()
	
	local team = GetTeamByIndex(teamId)
	if team.activePet == petIndex then
		return
	end

	local lastPet = team.pets[team.activePet]
	local nextPet = team.pets[petIndex]
	if not nextPet then
		return
	end

	-- make the player point
	if (team.playerDisplay) then
		team.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmotePoint)
	end

	-- store where the backline pet was
	local backLineOffset = nextPet.currentOffset

	nextPet.actor:Fade(GetAlpha(nextPet), backlineFadeTime)		
	if (lastPet.currentHealth <= 0) then
		lastPet.actor:Fade(0, backlineFadeTime)

		-- backline pet moves straight to the front
		WaitMoveToRadius(nextPet, idleRadius, 0)

		-- teleport the corpse
		MoveToRadius(lastPet, backlineRadius, backLineOffset, true)

		-- fade corpse back in
		lastPet.actor:Fade(backlineAlpha, backlineFadeTime)
	else
		-- swap pets normally
		lastPet.actor:Fade(backlineAlpha, backlineFadeTime)

		-- backline pet moves straight to the front
		MoveToRadius(nextPet, idleRadius, 0)
		
		-- frontline pet moves forward then back
		WaitMoveToRadius(lastPet, backlineRadius, 0)
		MoveToRadius(lastPet, backlineRadius, backLineOffset)
		
		-- continue once the new frontline pet has finished moving
		nextPet.actor:WaitMovementComplete()
	end

	team.activePet = petIndex
end
"
564,PetBattle - Result - Set Health,"
--------------------------------------------------------------------------------
-- SET HEALTH

function EffectSetHealth(effect, dontWait)

	local abilityVisual = GetAbilityVisualFromEffectID(effect.effectID)
	local abilityVisualID = nil
	if (abilityVisual) then
		abilityVisualID = abilityVisual.ID
	end

	effectSourcePet, spellVisualID = EffectCastShared(effect, abilityVisualID)
	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for SetHealth"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	-- signal the impact
	SignalEffectProcessed()

	-- final stage: actually apply the impact visuals and damage
	local playersWithDeaths = { }
	local playersWithKills = { }

	local isCritical = false
	if (effect.flags and effect.flags.crit) then
		isCritical = true
	end

	local targetPlayer = GetTeamByIndex(effect.targetPlayerID)
	local targetPet = targetPlayer.pets[effect.targetPetSlot]

	local effectSourceActor = nil
	if (effectSourcePet) then
		effectSourceActor = effectSourcePet.actor
	end
	if (effect.flags and effect.flags.miss == true) then
		targetPet.actor:AddWorldText(effectSourceActor, MissReasons.Physical, false, false)	
	else
		if (spellVisualID) then
			targetPet.actor:PlaySpellImpactVisual(spellVisualID)
		end

		local oldHealth = targetPet.currentHealth
		local newHealth = effect.value	-- actual health change is stored in the value field

		SetHealth(targetPet, newHealth, false, isCritical)

		if (newHealth <= 0) and (oldHealth > 0) then
			playersWithDeaths[effect.casterPlayerID] = true
			if (effectSourcePet) then
				playersWithKills[effect.casterPlayerID] = true
			end
		end
	end

	-- feedback on players that lost pets
	for playerID, hasDeath in pairs(playersWithDeaths) do
		if (hasDeath) then
			playersWithKills[playerID] = nil
			local player = GetTeamByIndex(playerID)
			if (player and player.playerDisplay) then
				player.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmoteCry)
			end
		end
	end

	-- feedback on players that killed pets
	for playerID, hasKill in pairs(playersWithKills) do
		if (hasKill) then
			local player = GetTeamByIndex(playerID)
			if (player and player.playerDisplay) then
				player.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmoteCheer)
			end
		end
	end

	-- wait until the casters animation has completed
	if (spellVisualID) and (effectSourceActor) then
		effectSourceActor:WaitCastingComplete(true)
	end
end"
565,PetBattle - Result - Aura Apply,"
-- store a mapping of all active auras to the pet they're on
local activeAuraPets = { }

--------------------------------------------------------------------------------
-- APPLY AURA
function EffectAuraApply(effect)

	local abilityVisual = GetAbilityVisualFromEffectID(effect.effectID)
	local abilityVisualID = nil
	if (abilityVisual) then
		abilityVisualID = abilityVisual.ID
	end

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(effect.auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local casterCastingPet
	local spellVisualID
	effectSourcePet, spellVisualID = EffectCastShared(effect, abilityVisualID)
	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no auraVisual for aura"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	-- signal the impact
	SignalEffectProcessed()

	-- final stage: actually apply the impact visuals and damage
	local targetPlayer = GetTeamByIndex(effect.targetPlayerID)
	local targetPet = targetPlayer.pets[effect.targetPetSlot]

	local effectSourceActor = nil
	if (effectSourcePet) then
		effectSourceActor = effectSourcePet.actor
	end

	if (effect.failureReason and effect.failureReason == PetBattleMoveFailureReason.Miss) then
		targetPet.actor:AddWorldText(effectSourceActor, MissReasons.Physical, false, false)
	else
		if (spellVisualID) then
			targetPet.actor:PlaySpellImpactVisual(spellVisualID)
		end

		-- apply an aura, tracked by instance ID
		ApplyAura(targetPet, effect.auraInstanceID, effect.auraTurnsRemaining, auraSpellVisualID)
	end

	-- wait until the casters animation has completed
	if (spellVisualID) then
		effectSourceActor:WaitCastingComplete(true)
	end
end

--------------------------------------------------------------------------------
function ApplyAura(pet, auraInstanceID, turnsRemaining, spellVisualID, auraAbilityID)
	local aura = pet.auras[auraInstanceID]
	if (not aura) then
		aura = { }
		pet.auras[auraInstanceID] = aura
	end

	activeAuraPets[auraInstanceID] = pet

	-- clear existing aura visual for this instance, if there is one
	if (aura.spellVisualID and aura.spellVisualInstanceID) then
		pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)                        
	end

	aura.spellVisualID = spellVisualID
	if (aura.spellVisualID) then
		aura.spellVisualInstanceID = pet.actor:PlaySpellStateVisual(spellVisualID)

		if ( pet.realActor ) then 
			aura.spellVisualInstanceID = pet.realActor:PlaySpellStateVisual(spellVisualID)
		end

	else
		aura.spellVisualInstanceID = nil
	end
	aura.playerID = pet.playerID;
	aura.petSlot = pet.slot;
	aura.turnsRemaining = turnsRemaining
	aura.running = true;

	return aura;
end

--------------------------------------------------------------------------------
function UpdateAuraVisuals(pet)

	for auraInstanceID, aura in pairs(pet.auras) do
		if (aura.spellVisualID and aura.spellVisualInstanceID) then
			pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)                        

			if ( pet.realActor ) then 
				pet.realActor:ClearSpellVisual( aura.spellVisualInstanceID)                        
			end

		end
		aura.spellVisualInstanceID = pet.actor:PlaySpellStateVisual(spellVisualID)

		if ( pet.realActor ) then 
			aura.spellVisualInstanceID = pet.realActor:PlaySpellStateVisual(spellVisualID)
		end
	end
end

--------------------------------------------------------------------------------
function RemoveAura(pet, auraInstanceID)

	RemoveAuraVisual(pet, pet.auras[auraInstanceID])
	pet.auras[auraInstanceID].running = false;
	pet.auras[auraInstanceID] = nil
	activeAuraPets[auraInstanceID].running = false;
	activeAuraPets[auraInstanceID] = nil
end

"
566,PetBattle - Result - Aura Change,"
--------------------------------------------------------------------------------
-- REMOVE AURA

function EffectAuraChange(effect, cancel)

	target = effect.target
	local petPlayerID = target.playerID
	local petSlot = target.petSlot

	local player = GetTeamByIndex(petPlayerID)
	local pet = player.pets[petSlot]

	if not petSlot then
		return
	end

	local auraInstanceID = target.auraInstanceID
	local aura = pet.auras[auraInstanceID]
	if not aura then
		print(""ERROR: unknown aura instance ID "" .. auraInstanceID)
		return
	end

	if (cancel == true) or (target.turnsRemaining < 1) then
		RemoveAura(pet, auraInstanceID)
	else
		aura.turnsRemaining = target.turnsRemaining
	end

end
"
567,PetBattle - Result - Status Change,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function EffectStatusChange(effect)
	if (not effect) then
		return
	end

	target = effect.target
	local targetPlayer = GetTeamByIndex(target.playerID)
	local targetPet = targetPlayer.pets[target.petSlot]

	if (target and target.newStatus) then
		targetPet.status = target.newStatus
	end

	-- check if we need to perform a special trap visual
	local player = nil
	if (effect.casterPlayerID > 0) then
		player = GetTeamByIndex(effect.casterPlayerID)
	end

	if (player) then
		if (effect.abilityVisualID == player.trapVisualID) then
			TrapCast(effect)
		end
	end
end
"
568,PetBattle - 2. Pre-Playback Processing,"--------------------------------------------------------------------------------
-- Group and process all round effects

local processDebug = false;

-- TODO: child proc groups were not being handled as expected
local flattenProcs = false; 

function ProcessAllRoundResults(allEvents)
	if ( processDebug ) then 
		DebugPrint(""== Round Result Grouping =="")
	end

	-- group on (turnInstanceID, effectID, stackDepth)

	-- build an effect tree, taking into account procs
	local turnGroups = { }
	local effectGroups = { }
	
	-- top level turns that we will process
	local topLevelTurnGroups = { }
	
	-- generate groups, and a  mapping from effectIndex
	local lastEffect = nil

	local currentFlatTurnKey = 1
	local currentFlatEffectKey = 1
	local lastGenKeyEvent = nil

	for eventIndex, event in pairs(allEvents) do
		local turnKey
		local effectKey

		if (flattenProcs == true) then
			-- flatten the turn structure for key generation, preserving order
			-- and maintaining group splits on visuals
			if (lastGenKeyEvent) then
				local turnGroupDiffers = false
				if (event.stackDepth ~= lastGenKeyEvent.stackDepth) or (event.turnInstanceID ~= lastGenKeyEvent.turnInstanceID) then
					turnGroupDiffers = true
					currentFlatTurnKey = currentFlatTurnKey + 1
				end

				if (turnGroupDiffers == true) or (event.turnInstanceID ~= lastGenKeyEvent.turnInstanceID) then
					currentFlatEffectKey = currentFlatEffectKey + 1
				end
			end

			turnKey = currentFlatTurnKey
			effectKey = currentFlatEffectKey
			lastGenKeyEvent = event

			if ( EVENT_DEBUG_MODE ) then 
				print(""FLATTENED: "" .. event.instanceID .. "", TK="" .. tostring(turnKey) .. "", EK="" .. tostring(currentFlatEffectKey))
			end
		else
			turnKey, effectKey = GenerateUniqueGroupKeys(event)

			if ( EVENT_DEBUG_MODE ) then 
				print(""PROCTREE: "" .. event.instanceID .. "", TK="" .. tostring(turnKey) .. "", EK="" .. tostring(currentFlatEffectKey))
			end
		end

		local abilityEffect 	
		local abilityEffectType 
		local abilityTurn 		
		local ability 			

		local abilityID
		local abilityVisualID 			
		local turnVisualID				
		local effectVisualID 			
		local effectFallbackVisualID

		-- Load up the relevant spell data
		abilityEffect 	= GetAbilityEffect(event.effectID);
		if ( abilityEffect ) then 
			abilityEffectType 	= GetAbilityEffectType(abilityEffect.effectType)
			abilityTurn 		= GetAbilityTurn(abilityEffect.turnID)
			ability 			= GetAbility(abilityTurn.abilityID)

			abilityID 				= ability.ID;
			abilityVisualID 		= ability.visualID
			turnVisualID			= abilityTurn.visualID
			effectVisualID 			= abilityEffect.visualID
			effectFallbackVisualID	= abilityEffectType.visualID
		end

		local filteredEvent = FilterResultEventsByType(event);
--print(""Turn Key: ""..turnKey.."" EffectID: ""..event.effectID);
		-- find or build a turn group as necessary
		local turnGroup = turnGroups[turnKey]
		if (not turnGroup) then
			turnGroup =
			{
				class = ""turn"";

				key = turnKey;
				turnInstanceID = event.turnInstanceID;
				firstEvent = filteredEvent;
				effects = { };

				turnVisualID = turnVisualID;
				abilityID = abilityID or event.trapAbilityID;
				playerID = event.casterPlayerID or event.targetPlayerID;
				petSlot = event.casterPetSlot or event.targetPetSlot;
				sourceAuraInstanceID = event.sourceAuraInstanceID;
			}
			turnGroup = FilteredEventMetaTable( turnGroup )
			turnGroups[turnKey] = turnGroup
			
			if (event.stackDepth <= 1) or (not lastEffect) then
				table.insert(topLevelTurnGroups, turnGroup)
			else
				DebugPrint ( ""PROC!!"", event.effectID, "" : "",abilityID )				
--print( ""Proc Detected ""..event.instanceID )
--				table.insert(topLevelTurnGroups, turnGroup)		
			
				-- this is a proc off of the last effect, and should be attached as a child
				"
570,PetBattle - Reward XP and Level,"--------------------------------------------------------------------------------
-- REWARD
function EventReward(rewards)
--[[
	local rewardedPets = {}
	for rewardIndex,reward in pairs(rewards) do
		if not (reward.wasCaptured) then
			local player = GetTeamByIndex(reward.playerID)
			local playerPet = player.pets[reward.petSlot]
			if (playerPet) then
				local rewardedPet =
				{
					pet = playerPet;
					newXP = reward.newXP;
					newLevel = reward.newLevel;
				}
				rewardedPets[rewardIndex] = rewardedPet

				-- resurrect and move this pet up
				if (playerPet.deathAnimKit) then
					playerPet.deathAnimKit:Stop()
					playerPet.deathAnimKit = nil		
				end

				playerPet.actor:Fade(1.0, backlineFadeTime)
				MoveToVictoryLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local waitCondition = function()
		-- all actors must be renderable
		for prewardIndex,rewardedPet in pairs(rewardedPets) do
			if rewardedPet.pet.actor:IsMoving() then
				return false
			end
		end
		return true
	end
	scene:WaitCondition(waitCondition)

	-- apply the rewards
	for rewardIndex,rewardedPet in pairs(rewardedPets) do
		SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
	end
--]]
end

function MoveToVictoryLocation(pet)
	MoveToRadius(playerPet, idleRadius, playerPet.currentOffset)
end
"
571,PetBattle - Selected - Ability Selected Movement,"--------------------------------------------------------------------------------
-- MOVE (ability) SELECTED
function EventMoveAbilitySelected(abilityVisualID)

	-- print(""Move Selected: Ability Visual ID: "" .. abilityVisualID)
	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if (not abilityVisual) then
		return
	end

	local player = nil
	local pet = nil
	if (observingPlayerIndex > 0) then
		player = GetTeamByIndex(observingPlayerIndex)
		if (player) then
			pet = player.pets[player.activePet]
		end
	end

	if (not pet) then
		return
	end

	local casterPlayer = GetTeamByIndex(observingPlayerIndex)
	local casterCastingPet = casterPlayer.pets[effect.casterPetSlot]
	local casterFrontPet = casterPlayer.pets[casterPlayer.activePet]
	local opponentFrontPet = GetActivePetByIndex(3 - observingPlayerIndex)

	PetMoveToAttackPosition(pet, opponentFrontPet, ""ready"" );
	
end
"
572,PetBattle - Selected - Pet Swap Selected Movement,"--------------------------------------------------------------------------------
-- MOVE (pet swap) SELECTED
function EventMovePetSwapSelected(petSlot)

	-- print(""Move Selected: Pet Swap Slot: "" .. petSlot)

end"
573,PetBattle - Selected - Trap Selected Movement,"--------------------------------------------------------------------------------
-- MOVE (trap) SELECTED
function EventMoveTrapSelected()

	-- print(""Move Selected: Trap"")
	StartTrapPrecast(observingPlayerIndex)

end

function GetTrapVisuals(playerID)

	local player = nil
	local playerDisplay = nil
	if (playerID and (playerID > 0)) then
		player = GetTeamByIndex(playerID)
		if (player) then
			playerDisplay = player.playerDisplay
		end
	end
	
	if (not playerDisplay) then
		return
	end

	if (not player.trapVisualID) then
		return
	end

	local trapVisual = petAbilityVisuals[player.trapVisualID]
	local trapSpellVisualID = nil
	if (trapVisual) then
		trapSpellVisualID = trapVisual.spellVisualID
	end

	if (not trapSpellVisualID) or (trapSpellVisualID == 0) then
		return
	end

	return player, playerDisplay, trapVisual, trapSpellVisualID
end

function StartTrapPrecast(playerID)

	local player
	local playerDisplay
	local trapVisual
	local trapSpellVisualID
	player, playerDisplay, trapVisual, trapSpellVisualID = GetTrapVisuals(playerID)
	if (not player) then
		return
	end

	if (playerDisplay) then
		if (not player.trapPrecastID) then
			player.trapPrecastID = playerDisplay:PlaySpellPreCastVisual(trapSpellVisualID )
		end
	end

end

function ClearTrapPrecast(playerID)

	local player
	local playerDisplay
	local trapVisual
	local trapSpellVisualID
	player, playerDisplay, trapVisual, trapSpellVisualID = GetTrapVisuals(playerID)
	if (not player) then
		return
	end

	if (player.trapPrecastID) then
		playerDisplay:ClearSpellVisual(player.trapPrecastID)
		player.trapPrecastID = nil
	end

end

function TrapCast(effect)

	local playerID = effect.casterPlayerID

	local player
	local playerDisplay
	local trapVisual
	local trapSpellVisualID
	player, playerDisplay, trapVisual, trapSpellVisualID = GetTrapVisuals(playerID)

	if (not player) then
		return
	end

--	print(""Casting Trap..."")

	StartTrapPrecast(playerID)
	scene:WaitTimer(trapVisual.castTime)
	ClearTrapPrecast()

	for targetIndex, target in pairs(effect.targets) do
		local targetPlayer = GetTeamByIndex(target.playerID)
		local targetPet = targetPlayer.pets[target.petSlot]

		if (targetPet) then
			local trapSuccess = false
			if (targetPet.status) then
				trapSuccess = targetPet.status.isTrapped
			end

			castInstanceID = playerDisplay:PlaySpellCastVisualAtTargets(trapSpellVisualID, trapVisual.impactTime, true, {targetPet.actor})
			scene:WaitTimer(trapVisual.impactTime)

			local waitCondition = function()
				return not playerDisplay:HasPendingOrInFlightMissiles(castInstanceID)
			end
			scene:WaitCondition(waitCondition)

			if (trapSuccess) then
				--print(""Succesful Trap"")
				targetPet.trappedVisualInstance = targetPet.actor:PlaySpellStateVisual(trapSpellVisualID)
			else
				print(""Failed Trap"")
			end
		end
	end

end
"
574,PetBattle - 1. Handle Event,"
-- Helper Functions for processing effects
local currentEffectInstanceID = nil

-- uncomment the below to check for dupes
--local processHistoryList = { }

function ProcessEvent(event)

	-- apply the different types of effects
	if not (event) then
		return true
	end

	local eventType = event.eventType

	StartEffectProcessing(event)

	if (eventType == PetBattleEvent.BattleOver) then

		return false, event.winnerID
	elseif (eventType == PetBattleEvent.BattleResultsBegin ) then

		if ( event.winnerID == 3 or event.abandoned ) then 
			FleeCeremony(event.winnerID);
		elseif ( event.winnerID == observingPlayerIndex ) then 
			VictoryCeremony(event.winnerID)
		end

	elseif (eventType == PetBattleEvent.BattleResults) then

		if ( event.winnerID == observingPlayerIndex ) then 
			EventReward(event.rewards)
		end

	elseif (eventType == PetBattleEvent.ObserverChange) then

		local newIsObserved = false
		local newObservingPlayerIndex = 0
		if (battleScene.GetUIObservingPlayer) then
			newObservingPlayerIndex = battleScene:GetUIObservingPlayer()
			if (observingPlayerIndex > 0) then
				newIsObserved = true
			end
		end

		if (newIsObserved ~= isObserved) or (newObservingPlayerIndex ~= newIsObserved) then
			isObserved = newIsObserved
			observingPlayerIndex = newObservingPlayerIndex
			if (observingPlayerIndex > 0) then
				SetCamera(3)
			else
				SetCamera(4)
			end
		end

	elseif (eventType == PetBattleEvent.MoveAbilitySelected) then
		EventMoveAbilitySelected(event.abilityVisualID)
	elseif (eventType == PetBattleEvent.MovePetSwapSelected) then
		EventMovePetSwapSelected(event.newFrontPet)
	elseif (eventType == PetBattleEvent.MoveTrapSelected) then
		EventMoveTrapSelected()
	elseif (eventType == PetBattleEvent.RoundEffect) then
		print(""WARNING: processing round result outside of RoundStart/End"")
		ProcessRoundResult(event)
	elseif (eventType == PetBattleEvent.RoundStart) then

		-- pull off all round effects
		local allEffects = { }
		local effectNum = 0
		local done = false
		while ((done ~= true) and (battleScene:HasPendingEffects() == true)) do
			event = battleScene:GetPendingEffect()
			eventType = event.eventType
			if (eventType == PetBattleEvent.RoundComplete) then
				done = true
			else
				effectNum = effectNum + 1
				allEffects[effectNum] = event
			end
		end
		
		-- if we have at least one effect or we're done, make sure
		-- process the round start then batch process effects
		-- NOTE: the event we are left with will be RoundComplete
		if (done == true or #allEffects > 0) then
			SignalEffectProcessed()
			ProcessAllRoundResults(allEffects)

			-- switch to the next pendign event
			StartEffectProcessing(event)
		end
	end

	-- Ensure the current effect was processed
	SignalEffectProcessed()

	if (eventType == PetBattleEvent.RoundComplete) then
		if ( PostRoundCleanUp ) then
			PostRoundCleanUp(event);
		end
		
		for playerID, player in pairs(teams) do
			ClearTrapPrecast(playerID)
		end
		--ResetActivePets()
	end

	return true
end

--local lastEvent = nil
function StartEffectProcessing(event)
--	lastEvent = event

	local instanceID = event.instanceID
	if ((instanceID ~= nil) and (processHistoryList ~= nil)) then
		local history = processHistoryList[instanceID]
		if (history ~= nil) then
			print(""ERROR: started processing old event ID "" .. instanceID .. "", in history as "" .. tostring(history))
			ForceStackError()
		else
			processHistoryList[instanceID] = ""STARTED""
		end
	end

	-- save the instance ID of the effect currently being processed
	currentEffectInstanceID = instanceID
end

function SignalEffectProcessed()

--[[	if (lastEvent and
		lastEvent.eventType == PetBattleEvent.RoundResult and
		(lastEvent.resultType == PetBattleEffect.SetHealth or
		lastEvent.effectType == "
575,[1] PetBattle - 1. Handle Event,"PetBattleEffect.SetHealth)
		and lastEvent.value <= 0) then
		ForceStackError()
	end]]

	if ((currentEffectInstanceID ~= nil) and (processHistoryList ~= nil)) then
		local history = processHistoryList[currentEffectInstanceID]
		if (history ~= ""STARTED"") then
			print(""ERROR: signaled processed old event ID "" .. instanceID .. "", in history as "" .. tostring(history))
			ForceStackError()			
		else
			processHistoryList[currentEffectInstanceID] = ""PROCESSED""
		end
	end

	if currentEffectInstanceID and battleScene then
		battleScene:SignalEffectApplied(currentEffectInstanceID)
		currentEffectInstanceID = nil
	end
end

-- TODO: add a pcall for safety, but pcall where the function can yield requires
-- Lua 5.1 at least
local createFormatString = [[
return function(...)
  local customFunc = function(...)
    return %s
  end
  customFunc(...)
  return true
end
]]

function LoadCustomVisualScript(abilityVisual)
	if (not abilityVisual) then
		return
	end

	local customScriptString = abilityVisual.scriptFunctionString

	if (customScriptString and #customScriptString > 0) then
		local createString = string.format(createFormatString, customScriptString, abilityVisual.ID, customScriptString)
		local status, result = pcall(loadstring(createString))
		if (status == true) then
			setfenv(result, getfenv())
			abilityVisual.scriptFunction = result
		else
			print(""ERROR: loading script on BattlePetVisual ID="" .. abilityVisual.ID .. "" failed: "" .. createString)
			print(""ERROR: "" .. result)
		end
	end

end

"
576,PetBattle - Cameras,"
--------------------------------------------------------------------------------
-- camera
battleCameraIDs =
{
	intro = 336;
	idle = 335;
}

local cameraBunny = nil
function StartCameraBunny(transitionTime)
	if ( not isObserved ) or ( not useFreelookCamera ) then
		return
	end

	local player = teams[observingPlayerIndex]

	local cameraBunnyCreate = ActorCreateData:Default()
	cameraBunnyCreate.name = ""arenaCameraBunny""
	cameraBunnyCreate.modelFileID = padModel
	cameraBunnyCreate.transform.position = player.playerDisplay:GetPosition()
	cameraBunnyCreate.transform.facing = player.teamFacing
	cameraBunnyCreate.interactible = false

	cameraBunny = scene:SpawnActor(cameraBunnyCreate)
	cameraBunny:SetFacingToAbs(BuildVector(player.teamFacing, playerRadius, 0.0))

	if (PetBattleScene.SetPetBattleGameCameraTarget) then
		battleScene:SetPetBattleGameCameraTarget(cameraBunny, freelookZoomMin, freelookZoomMax)
	else
		scene:SetGameCameraTarget(cameraBunny, freelookZoomMin, freelookZoomMax)
	end
	
	cameraBunny:MoveToAbs(Vector:New(), transitionTime)
end

function StopCameraBunny(transitionTime)
	if ( not cameraBunny ) or ( not isObserved ) or ( not useFreelookCamera ) then
		return
	end

	-- return to the player
	local player = teams[observingPlayerIndex]

	if (PetBattleScene.ResetPetBattleGameCameraZoom) then
		battleScene:ResetPetBattleGameCameraZoom()
	else
		scene:ResetGameCameraZoom()
	end

	cameraBunny:MoveToAbs(player.playerDisplay:GetPosition(), transitionTime)
	scene:WaitTimer(transitionTime)
	scene:SetGameCameraTarget(nil, 0.0, 0.0)
end

function SetCamera(camera)
	if ( not isObserved or availableCamTransition == 0 ) then
		return
	end

	local observedTeam = teams[observingPlayerIndex]
	local otherTeam = teams[3 - observingPlayerIndex]
	local observedPadActor = observedTeam.pad.actor
	if (not observedPadActor) then
		observedPadActor = observedTeam.pad
	end

	if ( camera == 1 ) then 
		scene:SetCamera(battleCameraIDs.intro, 1.75, observedPadActor, arenaRing)
	elseif ( camera == 2 ) then 
		scene:SetCamera(battleCameraIDs.idle, 1.0, observedPadActor, arenaRing)
	elseif ( camera == 3 ) then 
		scene:SetCamera(battleCameraIDs.idle, 0.0, observedPadActor, arenaRing)
	elseif ( camera == 4 ) then
		scene:SetCamera(0, 0.75, nil, nil)
	end
end
"
577,PetBattle - Intro,"
local cameraBunny

--------------------------------------------------------------------------------
function BattleIntro()

	scene:WaitTimer(0.1) --(0.25)
	SetCamera(1)
	StartCameraBunny(0.75) --(1.5)

	if (battleScene.SignalOpeningStart) then
		battleScene:SignalOpeningStart()
	end

	--WaitAllPetsLoaded()

	if (useFreelookCamera) then
		scene:WaitTimer(0.5)
		SetCamera(2)

		scene:WaitTimer(1.4) --(1.6)
		scene:SetCamera(0, 1.2, nil, nil) -- changed from 0.75 -> 

	else
		scene:WaitTimer(0.25)
		SetCamera(2)
		scene:WaitTimer(0.75)
	end

	if (battleScene.SignalReadyToStart) then
		battleScene:SignalReadyToStart()
	else
		battleScene:SignalOpeningComplete()
	end

	-- fade in the pets
	FadeInAllPets(initialFadeInTime)

end
"
578,PetBattle - Arena,"
--------------------------------------------------------------------------------
-- Spawn Client Side Arena Visuals
local arenaCreateData = ActorCreateData:Default()
arenaCreateData.name = ""arenaRing""
arenaCreateData.modelFileID = arenaRingModel
arenaCreateData.scale = arenaRingScale
arenaCreateData.interactible = false
arenaRing = scene:SpawnActor(arenaCreateData)
arenaRing:Fade(0, 0)
arenaRing:PlayLoopingFullBodyAnim(Animations.Hold)

scene:WaitTimer(0.25)
--arenaRing:Fade(arenaRingAlpha, arenaFadeTime)
arenaRing:Fade(0, 0)

local debugScale = false

if ( debugScale ) then
	local scaleCreateData = ActorCreateData:Default()
	scaleCreateData.name = ""scaleAxis""
	scaleCreateData.modelFileID = fid(397940)
	scaleCreateData.scale = 2.0
	scaleCreateData.interactible = false
	axis = scene:SpawnActor(scaleCreateData)
end"
579,PetBattle - Placeholder Players,"
--------------------------------------------------------------------------------
-- Placeholder opponents for cross-realm etc battles
--  - script runs in parallel and pings for a player to become valid

local placeHolderCreatureIDs =
{
	32695;
	32697;
	32700;
	32702;
	32704;
	32706;
	32708;
	32709;
	32710;
	32711;
	32712;
	32713;
	32714;
	32715;
	32716;
	32717;
	32718;
	32719;
	32720;
	32721;
	66865;
	66866;
	66871;
	66872;
}

local needPlaceHolder = true
--if not (PetBattleScene.GetActivePlayerDisplay) then
--	needPlaceHolder = false
--end

local placeHolderPingTime = 2.5
local placeHolderActors = { }

while (needPlaceHolder) do
--	needPlaceHolder = false
	for playerID, player in pairs(teams or { }) do
		if (playerID ~= PetBattlePlayerID.Weather) and (player.isNPC ~= true) then
			player.playerDisplay = battleScene:GetActivePlayerDisplay(playerID)
			if (not player.playerDisplay) then
				-- still need a placeholder
				--needPlaceHolder = true

				-- create it if we haven't already
				local placeHolderActor = placeHolderActors[playerID]
				if (not placeHolderActor) then
					local createData = ActorCreateData:Default()
					createData.creatureID = placeHolderCreatureIDs[math.random(#placeHolderCreatureIDs)]
					createData.name = ""placeHolder"" .. playerID
					createData.interactible = false
					createData.floatingTooltip = false

					local placeHolderFacing = player.teamFacing
--print(""Placeholder P"" .. playerID)

					local pos = BuildVector(placeHolderFacing, -playerRadius, 0.0)
					local transform = Transform:New(pos, placeHolderFacing)
					createData.transform = transform

					placeHolderActor = scene:SpawnActor(createData)
					placeHolderActors[playerID] = placeHolderActor
				end

				-- keep using the placeholder
				player.playerDisplay = placeHolderActor
			else
				-- done with this placeholder, despawn it
				local placeHolderActor = placeHolderActors[playerID]
				if (placeHolderActor) then
					placeHolderActor:Despawn()
				end

				placeHolderActors[playerID] = nil
			end
		end
	end
	scene:WaitTimer(placeHolderPingTime)
end

placeHolderActors = nil
"
580,PetBattle - Main,"
--------------------------------------------------------------------------------
-- battle constants
isObserved = false
observingPlayerIndex = 0
availableCamTransition = 0

if battleScene then
	initialBattleState = battleScene:GetBattleState()
	observingPlayerIndex = battleScene:GetUIObservingPlayer()
	if (observingPlayerIndex > 0) then
		isObserved = true
		if (PetBattleScene.GetUICameraTransition) then
			availableCamTransition = battleScene:GetUICameraTransition()
		else
			availableCamTransition = 1
		end
	end
end

InitStaticData(initialBattleState)

--------------------------------------------------------------------------------
-- build ability and abilityVisual map
petAbilities = { }
for index,ability in pairs(initialBattleState.abilityDescs) do
	petAbilities[ability.ID] = ability
end

petAbilityVisuals = { }
for index,abilityVisual in pairs(initialBattleState.abilityVisualDescs) do
	local visualID = abilityVisual.ID
	petAbilityVisuals[visualID] = abilityVisual

	-- add any custom script function
	LoadCustomVisualScript(abilityVisual)
end

--------------------------------------------------------------------------------
-- spawn teams
initialBattleState.players[PetBattlePlayerID.Weather].teamFacing = 0
initialBattleState.players[PetBattlePlayerID.Player1].teamFacing = 0
initialBattleState.players[PetBattlePlayerID.Player2].teamFacing = 180

teams = { }
teams[PetBattlePlayerID.Weather] = initialBattleState.players[PetBattlePlayerID.Weather]
teams[PetBattlePlayerID.Player1] = initialBattleState.players[PetBattlePlayerID.Player1]
teams[PetBattlePlayerID.Player2] = initialBattleState.players[PetBattlePlayerID.Player2]

if (PetBattleScene.GetActivePlayerDisplay) then
	if (teams[1]) then
		teams[1].playerDisplay = battleScene:GetActivePlayerDisplay(1)
	end
	if (teams[2]) then
		teams[2].playerDisplay = battleScene:GetActivePlayerDisplay(2)
	end
end

if (teams[PetBattlePlayerID.Player2].isNPC == true) and (#teams[PetBattlePlayerID.Player2].petDescs <= 1) then
	-- when battling a single NPC, don't show backline
	backlineAlpha = 0.0
end

InitTeam(teams[PetBattlePlayerID.Weather])
InitTeam(teams[PetBattlePlayerID.Player1])
InitTeam(teams[PetBattlePlayerID.Player2])

InitAurasAndStates ( teams[PetBattlePlayerID.Weather] )
InitAurasAndStates ( teams[PetBattlePlayerID.Player1] )
InitAurasAndStates ( teams[PetBattlePlayerID.Player2] )

-- wait for teams to load
if (Scene.SetCameraInterruptedByFreelook) then
	scene:SetCameraInterruptedByFreelook(true)
end

if (initialBattleState.battleState == PetBattleState.WaitingPreBattle) then
	BattleIntro()
else
	if isObserved then
		PlayBattleMusic()
		if (useFreelookCamera) then
			StartCameraBunny(0)
		else
			SetCamera(3)
		end
	end
	WaitAllPetsLoaded()
	FadeInAllPets(0)
end

-- Pet Battle loop
local inBattle = true
local winnerID

while (inBattle == true) do
	local event = nil

	-- poll for battle events
	local waitForEvents = function()
		return battleScene:HasPendingEffects()
	end
	scene:WaitCondition(waitForEvents)

	event = battleScene:GetPendingEffect()

	inBattle, winnerID = ProcessEvent(event)
end

VictoryCeremonyCleanUp(winnerID)

if isObserved then
	if (useFreelookCamera) then
		StopCameraBunny(0.25)
	else
		SetCamera(4)
		scene:WaitTimer(0.75)
	end
end

--scene:WaitTimer(0.5);

battleScene:SignalBattleComplete()
"
581,Valley of the Four Winds - Stoneplow Finale - Camera - PRK ,"local genericFOV90 = 368
local genericFOV60 = 369
local genericFOV45 = 370
local genericFOV30 = 371

--Wall shot
SendTrigger(""WallShot1"")
loon:PlaySoundKitStereo(31922, true)
SetCameraFollowPath( genericFOV90, 2, 3971, 3972, 5)
--CameraTgtFollowPath( genericFOV90, 3422, 9 )
Wait(7)

--Loon looks at wall
SendTrigger(""LoonShot1"")
SetCameraFollowPath( genericFOV90, 0, 3428, 3429, 10)
Jiggle()
Wait(3)

--Over Loon's shoulder
SetCameraFollowPath( genericFOV30, 0, 3430, 3431, 10)
Wait(3)

--Back at their faces
SendTrigger(""LoonShot3"")
SetCameraFollowPath( genericFOV90, 0, 3428, 3429, 10)
Wait(5)
SendTrigger(""StartColossus"")
Wait(1)

--Wall shot again
SendTrigger(""WallShot2"")
SetCameraFollowPath( genericFOV90, 0, 3423, 3422, 10)
Wait(7)

--Loon, close
SendTrigger(""LoonShot4"")
SetCameraFollowPath( genericFOV90, 0, 3428, 3429, 10)
Jiggle()
Wait(6)

--Break Wall
SetCameraFollowPath( genericFOV90, 0, 3424, 3422, 7)
SendTrigger(""WallShot3"")
Wait(7)
SendTrigger(""WallShot4"")
SetCameraFollowPath( genericFOV90, 0, 4027, 4028, 15)
Wait(15)


--Back on Loon, camera on a spline
SendTrigger(""LoonShot5"")
SetCameraFollowPath( genericFOV90, 0, 3443, 3429, 25)
Jiggle()
Wait(21)

--Kids Pan
SendTrigger(""KidsShot"")
SetCameraFollowPath( genericFOV90, 0, 3451, 3452, 11.5)
Wait(11.5)

--Chen Shot
SendTrigger(""ChenEnters"")
SetCameraFollowPath( genericFOV90, 0, 3461, 3462, 9)
Wait(14)

--Kung Fu Shot
SendTrigger(""KungFuEnters"")
SetCameraFollowPath( genericFOV90, 0, 3552, 3553, 11)
Wait(11)

--Loon and Chen
SendTrigger(""LoonShot6"")
SetCameraFollowPath( genericFOV90, 0, 3428, 3429, 15)
Wait(5)
SendTrigger(""KillKungFuMantid"")
Wait(6)
SetCameraFollowPath( genericFOV45, 0, 4034, 4035, 6)
Wait(6)
--]]

SendTrigger(""TriggerParade"")
Wait(1)

--Wide Parade Shot
SetCameraFollowPath( genericFOV90, 0, 3554, 3555, 14)
Wait(12)

SendTrigger(""MudmugLili"")
SetCameraFollowPath( genericFOV30, 0, 4117, 4118, 2.5)
Wait(2.5)

SetCameraFollowPath( genericFOV60, 0, 4113, 4114, 2.5)
Wait(2.5)

SetCameraFollowPath( genericFOV60, 0, 4115, 4116, 3)
Wait(3)

SetCameraFollowPath( genericFOV90, 0, 4119, 4120, 7)
Wait(3)
SendTrigger(""FinalWave"")
Wait(7)

--Set camera back to game-cam
--scene:SetCamera(0, 1, nil, nil)

--End scene, instant fade to black
scene:ApplyScreenEffect(938)
scene:WaitTimer(3)
scene:ClearScreenEffect(938)
scene:EndScene()
"
582,Global Functions - Actor Sound,"--
-- Sound Helper Functions
--
function Actor:WaitSoundKitComplete(soundKit)
	if not soundKit then
		return
	end
	local waitCondition = function()
		return soundKit:IsStopped()
	end
	self:WaitCondition(waitCondition)
end

function Actor:WaitBroadcastSoundComplete()
	local waitCondition = function()
		if (self:IsPlayingDialogSound()) then
			return false
		else
			return true
		end
	end
	self:WaitCondition(waitCondition)
end"
583,Valley of the Four Winds - Stoneplow Finale - Wall - PRK ,"WaitForTrigger(""WallShot1"")
Wait(5)
noiseBunnyA:PlaySoundKit(31901, true)

WaitForTrigger(""StartColossus"")
noiseBunnyB:PlaySoundKit(31904, true)

WaitForTrigger(""WallShot3"")

for i = 1, (#buzzBunny) do
	buzzBunny[i]:PlaySoundKitStereo(32763, false)
end

Wait(1)
noiseBunnyC:PlaySoundKit(31906, true)
Wait(0.3)
wall:PlayOneShotAnimKit(2474)
noiseBunnyC:PlaySoundKit(31918, true)
Wait(1)
noiseBunnyC:PlaySoundKit(32790, true)


WaitForTrigger(""LoonShot5"")
for i = 1, (#buzzBunny) do
	buzzBunny[i]:StopSoundKit(32763)
end
"
584,Valley of the Four Winds - Stoneplow Finale - Loon Mai - PRK ,"WaitForTrigger(""LoonShot1"")
Wait(0.3)
loon:SetFacing(82)
loon:BroadcastTextStereo(BroadcastType.Say, 62776) --What the
--loon:PlaySoundKit(32476, true)
SendTrigger(""TriggerLeven01"")
Wait(1.5)
loon:PlayOneShotSplitBodyAnim(Animations.EmotePointNoSheathe)
loon:BroadcastTextStereo(BroadcastType.Say, 62777) --What that noise
--loon:PlaySoundKit(32477, true)
Wait(1)
loon:FollowPath(3426, 2)
Wait(2)
loon:SetFacing(84)

WaitForTrigger(""LoonShot3"")
Wait(1)
loon:SetFacing(303)
loon:PlayOneShotSplitBodyAnim(Animations.EmotePointNoSheathe)
loon:BroadcastTextStereo(BroadcastType.Say, 62779) --I know but what
--loon:PlaySoundKit(32478, true)
Wait(3)
loon:SetFacing(84)

WaitForTrigger(""LoonShot4"")
Wait(0.3)
loon:PlayOneShotSplitBodyAnim(Animations.EmoteNo)
loon:BroadcastTextStereo(BroadcastType.Say, 62781) --No, no
--loon:PlaySoundKit(32479, true)
Wait(3)
loon:PlayOneShotSplitBodyAnim(Animations.EmoteRoar)
loon:BroadcastTextStereo(BroadcastType.Say, 62782) --Men, to arms
SendTrigger(""FarmersAssemble"")

WaitForTrigger(""LoonShot5"")
Wait(1)
loon:SetFacing(75)
--loon:PlayLoopingSplitBodyAnim(Animations.Ready2HL)
loon:PlayOneShotSplitBodyAnim(Animations.EmotePointNoSheathe)
loon:BroadcastTextStereo(BroadcastType.Say, 62783) --You three to front
--loon:PlaySoundKit(32480, true)
SendTrigger(""DeployShadoPan"")
Wait(3.75)
loon:SetFacing(111)
loon:PlayOneShotSplitBodyAnim(Animations.EmotePointNoSheathe)
loon:BroadcastTextStereo(BroadcastType.Say, 62784) --You two cover left
--loon:PlaySoundKit(32481, true)
SendTrigger(""DeployFarmers"")
Wait(5.5)
loon:SetFacing(300)
loon:PlayOneShotSplitBodyAnim(Animations.EmotePointNoSheathe)
loon:BroadcastTextStereo(BroadcastType.Say, 62785) --Levan go right
--loon:PlaySoundKit(32482, true)
SendTrigger(""DeployLeven"")
Wait(5)
loon:BroadcastTextStereo(BroadcastType.Say, 62786) --Everyone else hold line
--loon:PlaySoundKit(32483, true)
Wait(2)
loon:SetFacing(175)
loon:PlayOneShotSplitBodyAnim(Animations.EmotePointNoSheathe)
Wait(5.5)
loon:BroadcastTextStereo(BroadcastType.Say, 67664) --You're just kids
Wait(4)
loon:BroadcastTextStereo(BroadcastType.Say, 62789) --We don't stand a chance
--loon:PlaySoundKit(32485, true)
Wait(4)
loon:BroadcastTextStereo(BroadcastType.Say, 62790) --FALL BA...
--loon:PlaySoundKit(32486, true)
loon:FollowPath(4036, 2)
loon:SetFacing(85)

WaitForTrigger(""LoonShot6"")
loon:SetFacing(80)
Wait(1)
loon:PlayOneShotSplitBodyAnim(Animations.EmoteTalkQuestion)
loon:BroadcastTextStereo(BroadcastType.Say, 62792) --Who you be
--loon:PlaySoundKit(32487, true)


WaitForTrigger(""TriggerParade"")
Wait(3)
loon:SetFacing(85)"
585,Valley of the Four Winds - Stoneplow Finale - Leven - PRK ,"WaitForTrigger(""TriggerLeven01"")
Wait(1)
leven:FollowPathAtSpeed(3427, 8)
Wait(3)
leven:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
leven:BroadcastTextStereo(BroadcastType.Say, 62778) --Come from wall sir
--leven:PlaySoundKit(32475, true)
Wait(3)
leven:SetFacing(84)

WaitForTrigger(""DeployLeven"")
Wait(2)
leven:SetFacing(120)
leven:PlayOneShotSplitBodyAnim(Animations.EmoteSalute)
Wait(3)
leven:FollowPath(3447, 8)
leven:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)

WaitForTrigger(""ChenPunch"")
leven:StopLoopingSplitBodyAnim(Animations.AttackUnarmed)

WaitForTrigger(""ChenBow"")
Wait(0.2)
leven:SetFacing(50)
leven:PlayOneShotSplitBodyAnim(Animations.EmoteSalute)
"
586,Valley of the Four Winds - Stoneplow Finale - Farmers/Kids - PRK ,"WaitForTrigger(""FarmersAssemble"")
Wait(1)
farmerA:FollowPath(3432, 6)
Wait(0.7)
farmerB:FollowPath(3433, 9)
Wait(0.7)
farmerC:FollowPath(3434, 7)

kidA:FollowPath(3435, 4)
Wait(0.1)
kidB:FollowPath(3436, 5)
Wait(0.4)
kidC:FollowPath(3437, 5)
Wait(0.2)
kidD:FollowPath(3438, 6)
Wait(0.2)
kidE:FollowPath(3439, 5)



WaitForTrigger(""DeployFarmers"")
kidA:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
kidB:PlayLoopingSplitBodyAnim(Animations.Cower)
kidC:PlayLoopingSplitBodyAnim(Animations.Cower)
kidD:PlayLoopingSplitBodyAnim(Animations.Ready2H)
kidE:SetFacing(275)
kidE:PlayLoopingSplitBodyAnim(Animations.EmoteCry)
Wait(2)
farmerA:PlayOneShotSplitBodyAnim(Animations.EmoteYes)
Wait(0.5)
farmerB:PlayOneShotSplitBodyAnim(Animations.EmoteCheer)
Wait(3)
farmerA:FollowPath(3448, 8)
Wait(0.5)
farmerB:FollowPath(3449, 8)
farmerA:WaitMovementComplete()
farmerB:WaitMovementComplete()
farmerA:PlayLoopingSplitBodyAnim(Animations.Ready2HL)
farmerB:PlayLoopingSplitBodyAnim(Animations.Attack2H)

WaitForTrigger(""TriggerParade"")
Wait(1)
farmerC:FollowPathAtSpeed( 3557, 3 )
Wait(0.5)
kidA:FollowPathAtSpeed( 3558, 5 )
kidB:FollowPathAtSpeed( 3559, 6 )
Wait(0.5)
kidC:FollowPathAtSpeed( 3560, 3 )
Wait(0.5)
kidD:FollowPathAtSpeed( 3561, 4 )
kidE:FollowPathAtSpeed( 3562, 5 )
Wait(5)
farmerC:SetFacing(333)
kidA:SetFacing(333)
kidB:SetFacing(333)
kidC:SetFacing(333)
kidD:SetFacing(333)
kidE:SetFacing(333)
kidB:PlayLoopingSplitBodyAnim(Animations.EmoteCheer)
kidE:PlayLoopingSplitBodyAnim(Animations.Cower)"
587,Valley of the Four Winds - Stoneplow Finale - Shado-Pan - PRK ,"WaitForTrigger(""FarmersAssemble"")
fosho:StopLoopingSplitBodyAnim(Animations.ReadyUnarmed)
jooru:StopLoopingSplitBodyAnim(Animations.ReadySpellDirected)
koyan:StopLoopingSplitBodyAnim(Animations.Ready1H)
Wait(0.5)
fosho:FollowPath(3440, 4)
jooru:FollowPath(3441, 4)
koyan:FollowPath(3442, 4)


WaitForTrigger(""DeployShadoPan"")
Wait(2)
fosho:PlayOneShotSplitBodyAnim(Animations.EmoteSalute)
Wait(0.2)
jooru:PlayOneShotSplitBodyAnim(Animations.EmoteSalute)
Wait(0.1)
koyan:PlayOneShotSplitBodyAnim(Animations.EmoteSalute)
Wait(3)
fosho:FollowPath(3444, 6)
jooru:FollowPath(3445, 6)
koyan:FollowPath(3446, 6)
fosho:WaitMovementComplete()
jooru:WaitMovementComplete()
koyan:WaitMovementComplete()

fosho:PlayLoopingSplitBodyAnim(Animations.Ready2H)
jooru:PlayLoopingSplitBodyAnim(Animations.MonkHealReadyUnarmed)
koyan:PlayLoopingSplitBodyAnim(Animations.Ready1H)"
588,Valley of the Four Winds - Stoneplow Finale - Init Enemies - PRK ,"-- mantid - leven
mantidLeven01 = SpawnFadedActorAtPoint( 63402, 3453, false )
mantidLeven02 = SpawnFadedActorAtPoint( 63402, 3454, false )
mantidLeven03 = SpawnFadedActorAtPoint( 56723, 3455, false )
mantidLeven04 = SpawnFadedActorAtPoint( 63402, 3456, false )


-- mantid - farmers
mantidFarmers01 = SpawnFadedActorAtPoint( 63402, 3457, false )
mantidFarmers02 = SpawnFadedActorAtPoint( 63403, 3458, false )
mantidFarmers03 = SpawnFadedActorAtPoint( 63402, 3459, false )


-- mantid colossus
mantidColossus = SpawnFadedActorAtPoint( 63404, 3968, false )


-- mantid flyers
mantidFlyerA = SpawnFadedActorsAtPoints( 66663, 3983, false )
mantidFlyerB = SpawnFadedActorsAtPoints( 66663, 3983, false )
mantidFlyerC = SpawnFadedActorsAtPoints( 66663, 3983, false )
mantidFlyerD = SpawnFadedActorsAtPoints( 66663, 3983, false )


--mantid final
mantidFinalGround = SpawnFadedActorsAtPoints( 63402, 4328, false)
mantidFinalSky = SpawnFadedActorsAtPoints( 66663, 4331, false)
"
589,Valley of the Four Winds - Stoneplow Finale - Chen - PRK ,"--local kickSpell = 124002

--Fade in
WaitForTrigger(""KidsShot"")
Wait(1)
FadeIn(chen, 0)

--Run in, jumpkick fool
WaitForTrigger(""ChenEnters"")
chen:FollowPath(3460, 5)
Wait(1)
chen:PlayOneShotUpperBodyAnim(Animations.BattleRoar)
chen:BroadcastTextStereo(BroadcastType.Say, 62791) --rraaaagh
chen:PlaySoundKitStereo(32762, true)
Wait(4)
chen:PlayLoopingFullBodyAnim(Animations.FlyingKick)
chen:FollowPathAtSpeed(4006, 13)
SendTrigger(""ChenKick"")
Wait(2.7)
chen:StopLoopingFullBodyAnim(Animations.FlyingKick)
chen:WaitMovementComplete()
chen:PlayOneShotAnimKit(2886)
SendTrigger(""ChenPunch"")


local punchSound = chen:PlaySoundKit(32635, false)
Wait(3)
chen:StopSoundKit(32635)

--[[
chen:PlaySoundKit(32635, true)
Wait(3)
--]]


chen:PlayOneShotSplitBodyAnim(Animations.EmoteBow)
SendTrigger(""ChenBow"")
Wait(4)
chen:FollowPathAtSpeed(4033, 12)
chen:WaitMovementComplete()
chen:SetFacing(268)

--Talk with Loon
WaitForTrigger(""LoonShot6"")
Wait(3)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
chen:BroadcastTextStereo(BroadcastType.Say, 62794) --no matter, we help
Wait(5)
chen:SetFacing(85)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalkQuestion)
chen:BroadcastTextStereo(BroadcastType.Say, 62796) --you surrender?
Wait(2.5)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalkQuestion)
chen:SetFacing(268)
Wait(5)
chen:SetFacing(85)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
chen:BroadcastTextStereo(BroadcastType.Say, 62797) --you got another wall bro
Wait(6)
SendTrigger(""Mudmug"")
Wait(3)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
chen:BroadcastTextStereo(BroadcastType.Say, 62798) --we lay down our lives
Wait(4)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
chen:BroadcastTextStereo(BroadcastType.Say, 62799) --this land belongs to us
Wait(4)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
chen:BroadcastTextStereo(BroadcastType.Say, 62800) --ancestors
Wait(2)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
chen:BroadcastTextStereo(BroadcastType.Say, 62801) --kids
Wait(2)
chen:PlayOneShotSplitBodyAnim(Animations.EmoteTalk)
chen:BroadcastTextStereo(BroadcastType.Say, 62802) --never give up your dreams
Wait(5)
"
590,Valley of the Four Winds - Stoneplow Finale - Mantid (Flankers) - PRK ,"local bloodSquib = 26782

WaitForTrigger(""KidsShot"")
Wait(1)
mantidLeven03:PlayLoopingAnimKit(1395)
mantidLeven03:PlaySpellStateVisual(26302)


FadeIn(mantidLeven01, 0)
FadeIn(mantidLeven02, 0)
FadeIn(mantidLeven03, 0)
FadeIn(mantidLeven04, 0)
mantidLeven01:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)
Wait(0.2)
mantidLeven04:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)
Wait(0.15)
mantidLeven02:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
Wait(0.2)
mantidLeven03:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)



WaitForTrigger(""ChenEnters"")
FadeIn(mantidFarmers01, 0)
FadeIn(mantidFarmers02, 0)
FadeIn(mantidFarmers03, 0)
mantidFarmers01:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)
mantidFarmers02:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)
mantidFarmers03:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)

WaitForTrigger(""ChenKick"")
Wait(.6)
--mantidLeven03:PlayOneShotAnimKit(2068)
mantidLeven03:PlayOneShotAnimKit(1034)
mantidLeven03:PlaySpellImpactVisual(bloodSquib)
mantidLeven03:PlaySoundKit(32638, true)

WaitForTrigger(""ChenPunch"")
mantidLeven01:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven02:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven04:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven01:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven02:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven04:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven01:PlaySpellImpactVisual(bloodSquib)
mantidLeven01:PlayOneShotAnimKit(1034)
Wait(.2)
mantidLeven02:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven04:PlaySpellImpactVisual(bloodSquib)
mantidLeven04:PlayOneShotAnimKit(1034)
Wait(.2)
mantidLeven02:PlaySpellImpactVisual(bloodSquib)
Wait(.2)
mantidLeven02:PlaySpellImpactVisual(bloodSquib)
mantidLeven02:PlayOneShotAnimKit(1034)

WaitForTrigger(""KillKungFuMantid"")
mantidFarmers01:PlayOneShotAnimKit(1034)
mantidFarmers01:PlaySpellImpactVisual(bloodSquib)
mantidFarmers01:PlaySoundKit(32638, true)

mantidFarmers02:PlayOneShotAnimKit(1034)
mantidFarmers02:PlaySpellImpactVisual(bloodSquib)

mantidFarmers03:PlayOneShotAnimKit(1034)
mantidFarmers03:PlaySpellImpactVisual(bloodSquib)

"
592,Brazie's PetBattle - Init Pad,"--------------------------------------------------------------------------------
-- pad
padModel = fid(124640)
padAlpha = 1.0
padScale = 1.0


function InitPad(transform)
	-- spawn a pad for this team
	local padCreateData = ActorCreateData:Default();
	padCreateData.name = ""pad"";
	padCreateData.modelFileID = padModel;
	padCreateData.transform = transform;
	padCreateData.scale = padScale*battleScale;

	pad = scene:SpawnActor(padCreateData)
	pad:Fade(padAlpha, 0.5)
	pad:SetInteractible(false);

	return pad;
end"
593,Brazie's PetBattle - Init Player,"
function InitTeam(team)
	local playerID = team.playerID;

	-- Save the team
	allPlayers[playerID] = team;
	team.playerID = playerID;

	-- Spawn a Pad
	local homeTransform = HOME_LIST[playerID];
	team.pad = InitPad(homeTransform);

	-- Save the home loc
	team.home = homeTransform.position;

	-- Weather is neutral, so set it up then eject
	if (playerID == PetBattlePlayerID.Weather) then
		team.isWeather = true

		local padPet = { 
			isPad = true;
			actor = team.pad;
			auras = {}; 
			slot = petIndex; 
			--team = team.playerID; 
			playerID = team.playerID;
			moveSpeed = 1000;
		}; 
		team.pets = {};
		team.pets[PetBattlePetID.Weather] = padPet;
		team.pets[PetBattlePetID.Weather].actor = team.pad;

		InitStates( team.playerID, PetBattlePetID.Weather, team.petDescs[PetBattlePetID.Weather].states );
		InitAuras( team.playerID, PetBattlePetID.Weather, team.petDescs[PetBattlePetID.Weather].auras )

		return;
	else
		team.isWeather = false
	end

	-- Create the Master
	local masterTransform = MASTER_SPOTS[playerID];
	local masterLoc = masterTransform.position;
	local master
	
	-- Spawn an NPC if needed
	if (team.npcCreatureID and team.npcCreatureID > 0 and team.npcDisplayID) then
		local npcCreateData = ActorCreateData:Default();
		npcCreateData.creatureID = team.npcCreatureID;
		npcCreateData.creatureDisplayID = team.npcDisplayID;
		npcCreateData.interactible = false;
		npcCreateData.transform = masterTransform;
		npcCreateData.scale = battleScale;

		-- try and smooth phase the NPC to an actor
		npcCreateData.smoothPhase = true;
		local maxWait = 2.5
		local pingInterval = 0.25; -- quarter of a second ping
		local currentWait = 0.0;
		local phaseTimer = scene:Timer(pingInterval);
		while (scene:ShouldWaitForSmoothPhase(npcCreateData) and (currentWait < maxWait)) do
			phaseTimer:Reset();
			scene:Wait(phaseTimer);
			currentWait = currentWait + pingInterval
		end
		master = battleScene:SpawnNPC( playerID, npcCreateData );

		master:SetFacingToAbs(Vector:New());

		-- Assign the master to his team

		-- Darren's scripts required these two
		team.npcActor = master;
		team.playerDisplay = master;

		-- Mine is generic
		team.master = master;
	end

	if ( team.isNPC == true and team.npcActor == nil ) then 
		team.wildBattle = true;
	end

	-- Assign Pets to temporary data
	team.pets = {};

	mainPetLoc = homeTransform;
	
	local backLineCount = 0;

	local offsetTable = BACKROW_PET_OFFSETS;

	-- If it's a wild battle, make them run in from a distance.
	if ( team.wildBattle and initialBattleState.battleState == PetBattleState.WaitingPreBattle ) then
		offsetTable = WILD_PET_OFFSETS;
	end

	for slot,v in pairs( team.petDescs ) do 
		-- If its your pad object
		if ( slot == PetBattlePetID.Pad ) then
			local padPet = { 
				isPad = true;
				actor = team.pad;
				auras = {}; 
				slot = slot; 
				--team = team.playerID; 
				playerID = team.playerID;
				sessile = true;
			};
			team.pets[slot] =  padPet;

		-- Spawn the appropriate pet in front if the game is mid-session
		elseif ( slot == team.activePet ) then 
			local petLoc = mainPetLoc

			if ( initialBattleState.battleState == PetBattleState.WaitingPreBattle ) then

				petLoc = offsetTable[playerID][3]
			end

			team.pets[slot] = InitPet(team, slot, petLoc);
			team.pets[slot].backlineIndex = 3;
		else
			backLineCount = backLineCount + 1;

			-- Placed in master-relative coordinates
			local transform = offsetTable[playerID][backLineCount]   
			team.pets[slot] =  InitPet(team, slot, transform );
			team.pets[slot].backlineIndex = backLineCount;
		end
		

--[[
if ( id == PetBattlePetID.Pad ) then
	print(""DEBUG AURAS:""..#v.auras);
	DEBUG_TABLE(v.auras);
	print(""DEBUG STATES:""..#v.states);
	DEBUG_TABLE(v.states);
end
--]]
	end


	-- If the "
594,[1] Brazie's PetBattle - Init Player,"battle has already started
	-- Make them all face the guy in the center
	if ( initialBattleState.battleState ~= PetBattleState.WaitingPreBattle ) then 
		for k,v in pairs(team.pets) do
			if ( k ~= team.activePet ) then 
				v.actor:SetFacingToTarget(team.pets[team.activePet].actor, Vector:New());
			else
				local enemyTeam = teams [3-playerID];
				if ( enemyTeam.pets ) then 
					v.actor:SetFacingToTarget(enemyTeam.pets[enemyTeam.activePet].actor, Vector:New());
				end
			end
		end

	-- Otherwise, everyone faces the center of the game
	else
		for k,v in pairs(team.pets) do
			if ( k ~= team.activePet ) then 
				v.actor:SetFacingToAbs(Vector:New());
			end
		end
	end
end

-- You must initialize states and auras after all of the pet objects are created
function InitAurasAndStates ( team )
	for slot,v in pairs( team.petDescs ) do 
		InitStates( team.playerID, slot, v.states );
		InitAuras( team.playerID, slot, v.auras)
	end
end

function InitPet(team, petIndex, transform)
	local petData = team.petDescs[petIndex];
	local petCreateData = ActorCreateData:New(petData.creatureID, transform, battleScale);
	petCreateData.creatureDisplayID = petData.displayID or 0;

	local petActor
	if (PetBattleScene.SpawnPet) then

		petActor = battleScene:SpawnPet(team.playerID, petIndex, petCreateData)
	else
		petActor = scene:SpawnActor(petCreateData)
	end

	local pet = { 
		isPet = true;
		actor = petActor; 
		moveSpeed = DEFAULT_MOVE_SPEED;
		turnRate = DEFAULT_TURN_RATE;
		auras = {}; 
		slot = petIndex; 
		playerID = team.playerID; 
		--team = team.playerID;
		creatureID = petData.creatureID;
		displayID = petData.displayID;
		teamFacing = team.teamFacing; -- Needed for Darren compat only
		health = petData.health;
		createData = petCreateData;
		sessile = false;
	};

	-- For Darren Compatibility only
	pet.currentRadius = backlineRadius
	pet.currentOffset = 0

	-- Initialize stuff
	SetXP(pet, petData.xp, petData.level, true)
	SetHealth(pet, petData.health, true)

	pet.status = petData.status

	-- Initially invisible?
	petActor:SetInteractible(false);
	petActor:SetFacingTurnRate(DEFAULT_TURN_RATE);
	--petActor:SetHidden(true);
	--petActor:Fade(0, 0); 
	pet.standAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Stand, false, Animations.None)

	return pet;
end

function InitAuras(playerID, slot, auraList)
	-- apply initial auras
	for auraIndex, auraData in pairs(auraList or { }) do	
--print(""Aura initialized "",playerID,"":"",slot,"" InstanceID: "",auraData.instanceID,"" AuraID: "",auraData.abilityID );		
		local petROID = GETROIDFROMPLAYERIDANDSLOT( playerID, slot )
		local aura = CreateAura( petROID, auraData.instanceID, auraData.turnsRemaining, auraData.abilityID )
	end
end

function InitStates(playerID, slot, states)
	-- add visual rendering support in the future
	local petROID = GETROIDFROMPLAYERIDANDSLOT( playerID, slot )
	local pet = ROIDTOPET( petROID );
	local team = ROIDTOPLAYER( petROID );

	pet.states = pet.states or {};

	for index, stateData in pairs ( states ) do

		if ( stateData.ID == STATE_WATER_BUBBLED and stateData.value > 0 ) then 
			pet.bubbleStateVisual = pet.actor:PlaySpellStateVisual( PET_BATTLES_WATER_BUBBLE );
		end
		if ( stateData.ID == STATE_BIGGLESWORTH and stateData.value > 0 ) then 
			pet.BigglesworthStateVisual = pet.actor:PlaySpellStateVisual( PET_BATTLES_BIGGLESWORTH );
		end
		if ( stateData.ID == STATE_FETISH_RANDOM_COLOR and stateData.value > 0 ) then 


			pet.fetishBaseState = pet.actor:PlaySpellStateVisual( FETISH_BASE_STATE );

			local i = math.random(1, #FETISH_STATES );
		
			pet.fetishRandomState = pet.actor:PlaySpellStateVisual( FETISH_STATES[i] );
		end

		-- Initialize the state table
		pet.states[stateData.ID] = stateData.value;
	end
end"
595,PetBattle - Victory Ceremony,"function VictoryCeremony(winnerID)
	if (winnerID == 1) or (winnerID == 2) then
		local winnerTeam = teams[winnerID]
		for petIndex, pet in pairs(winnerTeam.pets) do
			if (winnerTeam.activePet ~= petIndex) and (pet.isPad == false) and (pet.currentHealth > 0) then
				-- move backline up to celebrate
				pet.actor:Fade(1.0, backlineFadeTime)
				MoveToRadius(pet, idleRadius, pet.currentOffset)
			end
		end
		scene:WaitTimer(1.0)
	end
end

function VictoryCeremonyCleanUp(winnerID)
	-- Do nothing
end

function FleeCeremony(winnerID)
end"
596,Brazie's PetBattle - Turn - Swap,"function EffectSwap(teamId, petIndex)
	local team = GetTeamByIndex(teamId)
	if team.activePet == petIndex then
		return
	end

	local lastPet = team.pets[team.activePet]
	local nextPet = team.pets[petIndex]
	if not nextPet then
		return
	end

	-- make the player or npc point
	if (team.master) then
		team.master:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmotePoint)
	end

	local nextTeam = math.fmod(teamId,2)+1;
	local opponent = allPlayers[nextTeam].pets[ allPlayers[nextTeam].activePet ]

	-- Handle the cosmetic swap
	PerformSwap( lastPet, nextPet, opponent );

	--print(""NEW PET INDEX: ""..petIndex);
	team.activePet = petIndex
end

function PerformSwap ( pet, newPet, opponent )
	if ( pet.preSwapped or newPet.preSwapped ) then 
		return
	end

	local currentPetLoc = pet.actor:GetPosition();
	local currentBacklineLoc = newPet.actor:GetPosition();

--print(""Swapping "",pet.slot,"" with "",newPet.slot);

	-- Backline Index swap
	pet.backlineIndex, newPet.backlineIndex = newPet.backlineIndex, pet.backlineIndex


	local movePet = true;

	-- If pet picked was your pad, dont move it
	if ( pet.isPad ) then
		currentPetLoc = HOME_LIST[pet.playerID].position;
		movePet = false;

	elseif ( pet.currentHealth <= 0 or pet.moveSpeed == 0 ) then
		-- Send the pet into the ring, not to the corpse
		currentPetLoc = HOME_LIST[pet.playerID].position;
		movePet = false;
warning(""Swap - RealActor Fade 0,0.5"");
		pet.actor:Fade(0, 0.5);

		if ( pet.trap ) then 
			pet.trap:Fade(0, 0.5);
		end
		scene:WaitTimer(0.5)
	end

	-- Swap Locations
	if ( movePet and pet.moveSpeed > 0.01) then
		pet.actor:ClearFacing();
		local distance = pet.actor:GetPosition():Dist(currentBacklineLoc);
		pet.actor:MoveToAbs(currentBacklineLoc, distance/pet.moveSpeed)

	end

	-- New guy faces the enemy
	local distance = newPet.actor:GetPosition():Dist(currentPetLoc);
	local newPetMoved = false;
	if ( not newPet.isPad and newPet.currentHealth > 0 and newPet.moveSpeed > 0.01 ) then 
		newPet.actor:ClearFacing();
		newPet.actor:MoveToAbs(currentPetLoc, distance/newPet.moveSpeed)
		newPetMoved = true;
	end

	-- If dead, fade corpse in
	if ( pet.currentHealth <= 0 or pet.moveSpeed < 0.01 ) then 
warning(""Swap - RealActor Fade Backling,0"");
		pet.actor:MoveToAbs(currentBacklineLoc, 0)
		pet.actor:Fade(1.0, 1)

		if ( pet.trap ) then 
			pet.trap:MoveToAbs(currentBacklineLoc, 0)
			pet.trap:Fade(1.0, 1)
		end

	-- If alive wait for it to move to the end
	else
		pet.actor:WaitMovementComplete()
	end
	
	--pgm added this so that new pet doesn't move sideways when entering playfield
	if(newPetMoved) then
		newPet.actor:WaitMovementComplete();
	end
	newPet.actor:SetFacingToAbs( opponent.actor:GetPosition() )

	--ReturnOrResetCheck( newPet, opponent );


	-- Make all of your back-line pets look at the front pet
	for k,v in pairs( allPlayers[pet.playerID].pets ) do 
		if ( k ~= allPlayers[pet.playerID].activePet and (not v.currentHealth or v.currentHealth > 0 ) ) then 
			v.actor:SetFacingToTarget(newPet.actor, Vector:New());
		end
	end
end "
597,Brazie's PetBattle - End Game - Victory - Rewards,"function EventReward(rewards)

	if ( #rewards < 1 ) then
		return;
	end 

	local pet = ROIDTOPET( GETROIDFROMPLAYERIDANDSLOT( rewards[1].playerID, rewards[1].petSlot )  );

	if ( rewards[1].awardedXP == 0 and pet.currentHealth == rewards[1].newHealth ) then
		return;
	end

	--VictoryCeremony_PerformDance(player)

	-- apply the rewards
	local reward = rewards[1];

	if not (reward.wasCaptured) then
		local rewardedPet =
		{
			pet = ROIDTOPET( GETROIDFROMPLAYERIDANDSLOT( reward.playerID, reward.petSlot )  );
			awardedXP = reward.awardedXP;
			newXP = reward.newXP;
			newLevel = reward.newLevel;
			newHealth = reward.newHealth;
		}

		if ( rewardedPet.newLevel > rewardedPet.pet.level ) then  
			SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
			scene:WaitTimer(0.5);
			rewardedPet.pet.actor:PlaySpellCastVisual(26429);

			if ( rewardedPet.newHealth and rewardedPet.newHealth ~= rewardedPet.pet.currentHealth ) then 
				rewardedPet.pet.actor:PlaySpellImpactVisual(26605);
				SetHealth(rewardedPet.pet,  rewardedPet.newHealth, false, {} )
				scene:WaitTimer(1.0);
			end
		elseif ( rewardedPet.awardedXP ) then 
			if ( rewardedPet.newHealth and rewardedPet.newHealth ~= rewardedPet.pet.currentHealth ) then 
				rewardedPet.pet.actor:PlaySpellImpactVisual(26605);
				SetHealth(rewardedPet.pet,  rewardedPet.newHealth, false, {} )
				scene:WaitTimer(1.0);
			end



			SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
			scene:WaitTimer(1.0);
		end


	end

	SignalEffectProcessed();

end"
598,PetBattle - Pet Movement Stuff,"

function PetMoveToAttackPosition(pet, opponent, attackType)
	if ( not attackType or attackType == PetBattleRange.InPlace ) then 
		local radius = GetAttackRadius(attackType);
		WaitMoveToRadius(pet, radius);

	elseif (attackType == PetBattleRange.Melee or attackType == PetBattleRange.Ranged ) then 
		local attackRadius = GetAttackRadius(attackType);
		WaitMoveToRadius(pet, attackRadius);
	end

	LookAtOpposingTeam(pet)
end

function MoveToRadius(pet, radius, offset, instant)
	local radiusMove = pet.currentRadius - radius
	local offsetMove = (offset or 0.0) - pet.currentOffset
	local distToMove = math.sqrt(radiusMove*radiusMove + offsetMove*offsetMove)
	local moveTime = 0
	if (instant == true) then
		moveTime = 0
	elseif radiusMove < 0 then
		moveTime = distToMove / backwardSpeed
	else
		moveTime = distToMove / forwardSpeed
	end	

	pet.currentRadius = radius
	pet.currentOffset = (offset or 0.0)

	local pos = BuildVector( (pet.teamFacing or 0.0) , -pet.currentRadius, pet.currentOffset)
	pet.actor:MoveToAbs(pos, moveTime)
end

function GetAttackRadius(rangeType)
	local attackRadius = readyRadius
	if rangeType == PetBattleRange.Melee then
		attackRadius = meleeRadius
	elseif rangeType == PetBattleRange.Ranged then
		attackRadius = rangedRadius
	end
	return attackRadius
end

function WaitMoveToRadius(pet, radius, offset)
	MoveToRadius(pet, radius, offset)
	pet.actor:WaitMovementComplete()
end"
600,PetBattle - 4. Playback Turn,"--------------------------------------------------------------------------------
-- Group and process all round effects
local debugOn = false
function PlaybackAllTurns(topLevelTurnGroups)

	if (debugOn == true) then
		print(""  "")
		print(""== Start Round Playback =="")
	end 
	
	-- process top level turns in order
	for index, turn in pairs(topLevelTurnGroups) do
		Dispatcher_HandleTurn( turn )
	end

	if (debugOn == true) then
		print(""== End Round Playback =="")
		print(""  "")
	end

end

--------------------------------------------------------------------------------
function ProcessRoundTurnGroup(turnGroup)
	
	if (debugOn == true) then
		print(""- Processing Turn "" .. turnGroup.firstEffect.turnInstanceID)
	end

	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnGroup.firstEffect.turnVisualID) then
		turnVisual = petAbilityVisuals[turnGroup.firstEffect.turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		if ( turnVisual.scriptFunction( turnGroup ) ) then
			processed = true
		end
	end

	-- fallback processing
	if (processed ~= true) then
		for index, effectGroup in pairs(turnGroup.effects) do
			ProcessRoundEffectGroup(effectGroup)
		end
	end
end

--------------------------------------------------------------------------------
function ProcessRoundEffectGroup(effectGroup)
	if (debugOn == true) then
		print(""-   Processing Effect "" .. effectGroup.firstEffect.abilityEffectID)
	end

	-- use a custom script handler if we have one
	local effectVisual = nil
	if (effectGroup.firstEffect.abilityVisualID) then
		effectVisual = petAbilityVisuals[effectGroup.firstEffect.abilityVisualID]
	end
	local processed = false
	if (effectVisual and effectVisual.scriptFunction) then
		if ( effectVisual.scriptFunction( effectGroup ) ) then
			processed = true
		end
	end

	-- fallback handling
	if (processed ~= true) then
		for index, effectResult in pairs(effectGroup.results) do
			StartEffectProcessing(effectResult)
			
			ProcessRoundResult(effectResult)
			
			SignalEffectProcessed()

			if (effectResult.procGroup) then
				ProcessRoundTurnGroup(effectResult.procGroup)
			end
		end
	end
end

--------------------------------------------------------------------------------
-- Process an individula Round Effect Result
function ProcessRoundResult(event)

	local eventType = event.eventType
	local effectType = event.effectType

	if not (eventType == PetBattleEvent.RoundEffect) then
		return
	end

	if (debugOn == true) then
		print(""-     Processing Result "" .. event.instanceID)
	end

	-- battle round effects
	if (effectType == PetBattleEffect.SetHealth) then
		EffectSetHealth(event)
	elseif (effectType == PetBattleEffect.AuraApply) then
		EffectAuraApply(event)
	elseif (effectType == PetBattleEffect.AuraCancel) then
		EffectAuraChange(event, true)
	elseif (effectType == PetBattleEffect.AuraChange) then
		EffectAuraChange(event, false)
	elseif (effectType == PetBattleEffect.PetSwap) then
		EffectSwap(event.casterPlayerID, event.newFrontPet)
	elseif (effectType == PetBattleEffect.StatusChange) then
		EffectStatusChange(event)
	end

end

--------------------------------------------------------------------------------
local maxStackDepth = 16          -- turn keys are not guaranteed unique above this stack depth
local maxTurnInstanceIDs = 100    -- effect keys are not guaranteed unique above this many actions a turn

local effectZeroCount = 0;
local turnInstanceZeroCount = 0;
 
--------------------------------------------------------------------------------
function GenerateUniqueGroupKeys(effect)	
	local stackDepth = effect.stackDepth or 0
	local turnInstanceID = effect.turnInstanceID or 0
	local effectID = effect.effectID or 0
	if (stackDepth > maxStackDepth) then
"
602,Brazie's PetBattle - Library - Pet Movement,"

function PerformRelativeSlide( opponent, pet, front, left, up, duration ) 
	if ( opponent.moveSpeed <= 0 ) then
		return;
	end

	local newDrift = CalculateUnitFacingRelativeOffset(opponent, pet, front, left, up ) 

	local opponentDriftPoint = newDrift;
	local driftDistance = opponentDriftPoint:Dist( opponent.actor:GetPosition() )

	local speed = opponent.moveSpeed;

	if ( not speed ) then
		speed = 5;
	else
		speed = opponent.moveSpeed;
	end

	local duration = (duration or driftDistance/speed)

	opponent.actor:MoveToAbs(opponentDriftPoint, duration );

end

function BuildKnockbackSpline(petStartPosition, petFinalPoint, duration)
	local gravity = -9.8/2; -- M / sec / sec
	local points = 10;  

	local dx = petFinalPoint.x - petStartPosition.x;
	local dy = petFinalPoint.y - petStartPosition.y;
	local xVelocity = dx / duration;  -- M / sec
	local yVelocity = dy / duration;  -- M / sec

	local zVelocity = ( gravity * duration * duration ) * -2;

	local list = {};
	local timeStep = duration / points

	for i=0, points do 
		local time = timeStep * i; 
		local x = time * xVelocity;
		local y = time * yVelocity;
		local u = gravity*time*time + zVelocity*time;
--print(""t: "",time,"" x: "",x,""u: "",u);
		table.insert(list, 
			petStartPosition + Vector:New(x,y,u) 
			);
	end
	table.insert(list, petFinalPoint);
	table.remove(list, 1);

	return list;
end


function CalculateLocationFacingRelativeOffset(pet, location, front, left, up)
	--FastLocalFacingCoordinates ( pet.actor:GetPosition(), location, Vector:New(front, left, up) );

	return FastLocalFacingCoordinates ( pet.actor:GetPosition(), location, Vector:New(front, left, up) );
end

function CalculateUnitFacingRelativeOffset(opponent, pet, front, left, up ) 
	local opponentLocation = opponent.actor:GetPosition();

	return CalculateLocationFacingRelativeOffset(opponent, pet.actor:GetPosition(), front, left, up);
end"
603,Valley of the Four Winds - Stoneplow Finale - Zhu's Wardens - PRK ,"WaitForTrigger(""TriggerParade"")
FadeIn(yimo, 0)
FadeIn(wardenA, 0)
FadeIn(wardenB, 0)
FadeIn(wardenC, 0)
FadeIn(wardenD, 0)
FadeIn(wardenE, 0)
FadeIn(wardenF, 0)

yimo:FollowPathAtSpeed(3515, paradeSpeed)
wardenA:FollowPathAtSpeed(3516, paradeSpeed)
wardenB:FollowPathAtSpeed(3517, paradeSpeed)
wardenC:FollowPathAtSpeed(3518, paradeSpeed)
wardenD:FollowPathAtSpeed(3519, paradeSpeed)
wardenE:FollowPathAtSpeed(3520, paradeSpeed)
wardenF:FollowPathAtSpeed(3521, paradeSpeed)

yimo:WaitMovementComplete()
wardenA:WaitMovementComplete()
wardenB:WaitMovementComplete()
wardenC:WaitMovementComplete()
wardenD:WaitMovementComplete()
wardenE:WaitMovementComplete()
wardenF:WaitMovementComplete()

yimo:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
wardenA:PlayLoopingSplitBodyAnim(Animations.ReadyRifle)
wardenB:PlayLoopingSplitBodyAnim(Animations.ReadyRifle)
wardenC:PlayLoopingSplitBodyAnim(Animations.ReadyRifle)
wardenD:PlayLoopingSplitBodyAnim(Animations.ReadyRifle)
wardenE:PlayLoopingSplitBodyAnim(Animations.ReadyRifle)
wardenF:PlayLoopingSplitBodyAnim(Animations.ReadyRifle)
"
604,Valley of the Four Winds - Stoneplow Finale - Li Li/Mudmug - PRK ,"WaitForTrigger(""TriggerParade"")
FadeIn(lili, 0)
FadeIn(mudmug, 0)

lili:FollowPathAtSpeed(3523, paradeSpeed)
mudmug:FollowPathAtSpeed(3522, paradeSpeed)

WaitForTrigger(""Mudmug"")
mudmug:PlayOneShotSplitBodyAnim(Animations.EmoteCheer)
mudmug:BroadcastTextStereo(BroadcastType.Say, 62795) --pitchfork
--mudmug:PlaySoundKit(32504, true)

lili:WaitMovementComplete()
mudmug:WaitMovementComplete()

lili:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
mudmug:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)

WaitForTrigger(""MudmugLili"")
Wait(0.2)
mudmug:PlayOneShotSplitBodyAnim(Animations.EmoteFlex)
Wait(0.3)
lili:PlayOneShotSplitBodyAnim(Animations.EmoteWave)"
605,Valley of the Four Winds - Stoneplow Finale - Tauren - PRK ,"local babyFront = 22929
local babyBack = 22775


WaitForTrigger(""TriggerParade"")
FadeIn(dezco, 0)
FadeIn(braveA, 0)
FadeIn(braveB, 0)
FadeIn(braveC, 0)
FadeIn(braveD, 0)
dezco:PlaySpellStateVisual(babyFront)
dezco:PlaySpellStateVisual(babyBack)


dezco:FollowPathAtSpeed(3529, paradeSpeed)
braveA:FollowPathAtSpeed(3525, paradeSpeed)
braveB:FollowPathAtSpeed(3526, paradeSpeed)
braveC:FollowPathAtSpeed(3527, paradeSpeed)
braveD:FollowPathAtSpeed(3528, paradeSpeed)

dezco:WaitMovementComplete()
braveA:WaitMovementComplete()
braveB:WaitMovementComplete()
braveC:WaitMovementComplete()
braveD:WaitMovementComplete()

dezco:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
braveA:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
braveB:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
braveC:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
braveD:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
"
606,Valley of the Four Winds - Stoneplow Finale - Hidden Master - PRK ,"WaitForTrigger(""TriggerParade"")
FadeIn(hiddenmaster, 0)

hiddenmaster:FollowPathAtSpeed(3524, paradeSpeed)

hiddenmaster:WaitMovementComplete()

hiddenmaster:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
"
607,Valley of the Four Winds - Stoneplow Finale - Pang/Miss Fanny - PRK ,"WaitForTrigger(""TriggerParade"")
FadeIn(pang, 0)
FadeIn(missfanny, 0)

pang:FollowPathAtSpeed(3530, paradeSpeed)
missfanny:FollowPathAtSpeed(3531, paradeSpeed)"
608,Valley of the Four Winds - Stoneplow Finale - Night Elves - PRK ,"WaitForTrigger(""TriggerParade"")
FadeIn(lyalia, 0)
FadeIn(sentinelA, 0)
FadeIn(sentinelB, 0)
FadeIn(sentinelC, 0)
FadeIn(sentinelD, 0)

lyalia:FollowPathAtSpeed(3532, paradeSpeed)
sentinelA:FollowPathAtSpeed(3533, paradeSpeed)
sentinelB:FollowPathAtSpeed(3534, paradeSpeed)
sentinelC:FollowPathAtSpeed(3535, paradeSpeed)
sentinelD:FollowPathAtSpeed(3536, paradeSpeed)

lyalia:WaitMovementComplete()
sentinelA:WaitMovementComplete()
sentinelB:WaitMovementComplete()
sentinelC:WaitMovementComplete()
sentinelD:WaitMovementComplete()

lyalia:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
sentinelA:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
sentinelB:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
sentinelC:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
sentinelD:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
"
609,Valley of the Four Winds - Stoneplow Finale - Crane Monks - PRK ,"WaitForTrigger(""TriggerParade"")
FadeIn(koro, 0)
FadeIn(monkA, 0)
FadeIn(monkB, 0)
FadeIn(monkC, 0)
FadeIn(monkD, 0)
FadeIn(priestA, 0)
FadeIn(priestB, 0)
FadeIn(priestC, 0)
FadeIn(priestD, 0)

koro:FollowPathAtSpeed(3537, paradeSpeed)
monkA:FollowPathAtSpeed(3538, paradeSpeed)
monkB:FollowPathAtSpeed(3539, paradeSpeed)
monkC:FollowPathAtSpeed(3540, paradeSpeed)
monkD:FollowPathAtSpeed(3541, paradeSpeed)
priestA:FollowPathAtSpeed(3542, paradeSpeed)
priestB:FollowPathAtSpeed(3543, paradeSpeed)
priestC:FollowPathAtSpeed(3544, paradeSpeed)
priestD:FollowPathAtSpeed(3545, paradeSpeed)

koro:WaitMovementComplete()
monkA:WaitMovementComplete()
monkB:WaitMovementComplete()
monkC:WaitMovementComplete()
monkD:WaitMovementComplete()
priestA:WaitMovementComplete()
priestB:WaitMovementComplete()
priestC:WaitMovementComplete()
priestD:WaitMovementComplete()

koro:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
monkA:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
monkB:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
monkC:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
monkD:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
priestA:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
priestB:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
priestC:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
priestD:PlayLoopingSplitBodyAnim(Animations.ReadyUnarmed)
"
610,Valley of the Four Winds - Stoneplow Finale - Kung Fu Five - PRK ,"local waterPrecast = 27200

--Fade in
WaitForTrigger(""ChenEnters"")
Wait(1)
FadeIn(xiao, 0)
FadeIn(lin, 0)
FadeIn(kang, 0)
FadeIn(kenken, 0)
FadeIn(ashyo, 0)

--Run in, punch fools
WaitForTrigger(""KungFuEnters"")
xiao:FollowPathAtSpeed(3547, 4)
kenken:FollowPathAtSpeed(3548, 9)
ashyo:FollowPathAtSpeed(3549, 6)
lin:FollowPathAtSpeed(3551, 7)
kang:FollowPathAtSpeed(3550, 7)

Wait(1)
kenken:PlayOneShotUpperBodyAnim(Animations.EmoteCheer)

Wait(0.5)
kang:PlayOneShotUpperBodyAnim(Animations.EmoteRoar)
kenken:PlaySoundKit(32640, true)
kang:PlaySoundKit(32639, true)

Wait(0.5)
xiao:PlayOneShotUpperBodyAnim(Animations.EmoteTalkExclamation)
xiao:BroadcastTextStereo(BroadcastType.Say, 59411)
lin:PlaySoundKit(32642, true)

Wait(1)
lin:PlayOneShotUpperBodyAnim(Animations.EmoteCheer)

kenken:WaitMovementComplete()
kenken:PlayLoopingSplitBodyAnim(Animations.CustomSpell06)

kang:WaitMovementComplete()
kang:PlayLoopingFullBodyAnim(Animations.SpinningKick)
kang:FollowPathAtSpeed(4040, 9)

xiao:WaitMovementComplete()
xiao:PlayLoopingSplitBodyAnim(Animations.MonkDefenseReadyUnarmed)

ashyo:WaitMovementComplete()
ashyo:PlaySpellStateVisual(waterPrecast)
local waterSound = ashyo:PlaySoundKit(32636, true)

lin:WaitMovementComplete()
lin:PlayLoopingSplitBodyAnim(Animations.AttackUnarmed)

kang:WaitMovementComplete()
kang:SetFacing(245)
kang:StopLoopingFullBodyAnim(Animations.SpinningKick)
kang:PlayLoopingSplitBodyAnim(Animations.MonkOffenseReadyUnarmed)
local kickSound = kang:PlaySoundKit(32637, true)

WaitForTrigger(""LoonShot6"")
ashyo:StopSoundKit(32636)
kang:StopSoundKit(32637)
"
611,Global Functions - Debug,"
-- Alias
Broadcast = print;
Print = print;

-- Debug stuff
--
function DEBUG_TABLE(table, depth, lookup)
	if ( not depth ) then
		depth = 0;
	end

	if ( depth > 20 ) then
		return;
	end

	local prefix = """";

	for i=1,depth do
		prefix = prefix..""    "";
	end

	if ( type(table) == ""table"" ) then 
		for k,v in pairs(table) do	
			local label;
			if ( lookup ) then 
				label = GetStateLabel(k);
			end
			if ( k == ""__meta"" or k == ""__index"" ) then 
				Print(prefix.."" K :""..k.."" V: ""..""Unprintable!"");
			elseif ( type(v) == ""table"" ) then 
				if ( label ) then 
					Print(prefix.."" K: ""..label.."" V: { "");
				else
					Print(prefix.."" K: ""..k.."" V: { "");
				end
				DEBUG_TABLE(v, depth+1, lookup); 
				Print(prefix..""  }"");
			else
				if ( label ) then 
					Print(prefix.."" K: ""..label.."" V: ""..tostring(v));
				else
					Print(prefix.."" K: ""..k.."" V: ""..tostring(v));
				end
			end
		end
	else
		Print(prefix.."" ""..tostring(table) );
	end
end

-- Pet battle specific debug tools - remove this later
function GetStateLabel(zub)
	for k,v in pairs (STATE_LOOKUP) do
		if ( v == zub ) then
			return k;
		end
	end

	return zub;
end

STATE_LOOKUP = {
    STATE_Is_Dead = 1;
    STATE_maxHealthBonus = 2;
    STATE_speedBonus = 3;
    STATE_Stat_Kharma = 4;
    STATE_healthBonus = 17;
    STATE_Stat_Power = 18;
    STATE_Stat_Stamina = 19;
    STATE_Stat_Speed = 20;
    STATE_Mechanic_IsPoisoned = 21;
    STATE_Mechanic_IsStunned = 22;
    STATE_Mod_DamageDealtPercent = 23;
    STATE_Mod_DamageTakenPercent = 24;
    STATE_Mod_SpeedPercent = 25;
    STATE_Ramping_DamageID = 26;
    STATE_Ramping_DamageUses = 27;
    STATE_Condition_WasDamagedThisTurn = 28;
    STATE_untargettable = 29;
    STATE_Mechanic_IsUnderground = 30;
    STATE_Last_HitTaken = 31;
    STATE_Last_HitDealt = 32;
    STATE_Mechanic_IsFlying = 33;
    STATE_Mechanic_IsBurning = 34;
    STATE_turnLock = 35;
    STATE_swapLock = 36;
    STATE_Stat_CritChance = 40;
    STATE_Stat_Accuracy = 41;
    STATE_Passive_Critter = 42;
    STATE_Passive_Beast = 43;
    STATE_Passive_Humanoid = 44;
    STATE_Passive_Flying = 45;
    STATE_Passive_Dragon = 46;
    STATE_Passive_Elemental = 47;
    STATE_Passive_Mechanical = 48;
    STATE_Passive_Magic = 49;
    STATE_Passive_Undead = 50;
    STATE_Passive_Aquatic = 51;
    STATE_Mechanic_IsChilled = 52;
    STATE_Weather_BurntEarth = 53;
    STATE_Weather_ArcaneStorm = 54;
    STATE_Weather_Moonlight = 55;
    STATE_Weather_Darkness = 56;
    STATE_Weather_Sandstorm = 57;
    STATE_Weather_Blizzard = 58;
    STATE_Weather_Mud = 59;
    STATE_Weather_Rain = 60;
    STATE_Weather_Sunlight = 61;
    STATE_Weather_LightningStorm = 62;
    STATE_Weather_Windy = 63;
    STATE_Mechanic_IsWebbed = 64;
    STATE_Mod_HealingDealtPercent = 65;
    STATE_Mod_HealingTakenPercent = 66;
    STATE_Mechanic_IsInvisible = 67;
};

"
613,PetBattle - Debug Stuff,"debugOn = false;

warningsEnabled = battleScene:WarningsEnabled();

function DebugPrint(...)
	if ( debugOn == true ) then
		print(...);
	end
end

function LocalDebugPrint(enabled, name)
	local debugPrint = function(data)
		if (debugOn == true) then
			DebugPrint(name .. "": "" .. tostring(data))
		end
	end
	return debugPrint
end

function warning (...)
	if ( warningsEnabled == true ) then
		print(...);
	end
end


STATE_LOOKUP = {
    STATE_Is_Dead = 1;
    STATE_maxHealthBonus = 2;
    STATE_speedBonus = 3;
    STATE_Stat_Kharma = 4;
    STATE_healthBonus = 17;
    STATE_Stat_Power = 18;
    STATE_Stat_Stamina = 19;
    STATE_Stat_Speed = 20;
    STATE_Mechanic_IsPoisoned = 21;
    STATE_Mechanic_IsStunned = 22;
    STATE_Mod_DamageDealtPercent = 23;
    STATE_Mod_DamageTakenPercent = 24;
    STATE_Mod_SpeedPercent = 25;
    STATE_Ramping_DamageID = 26;
    STATE_Ramping_DamageUses = 27;
    STATE_Condition_WasDamagedThisTurn = 28;
    STATE_untargettable = 29;
    STATE_Mechanic_IsUnderground = 30;
    STATE_Last_HitTaken = 31;
    STATE_Last_HitDealt = 32;
    STATE_Mechanic_IsFlying = 33;
    STATE_Mechanic_IsBurning = 34;
    STATE_turnLock = 35;
    STATE_swapLock = 36;
    STATE_Stat_CritChance = 40;
    STATE_Stat_Accuracy = 41;
    STATE_Passive_Critter = 42;
    STATE_Passive_Beast = 43;
    STATE_Passive_Humanoid = 44;
    STATE_Passive_Flying = 45;
    STATE_Passive_Dragon = 46;
    STATE_Passive_Elemental = 47;
    STATE_Passive_Mechanical = 48;
    STATE_Passive_Magic = 49;
    STATE_Passive_Undead = 50;
    STATE_Passive_Aquatic = 51;
    STATE_Mechanic_IsChilled = 52;
    STATE_Weather_BurntEarth = 53;
    STATE_Weather_ArcaneStorm = 54;
    STATE_Weather_Moonlight = 55;
    STATE_Weather_Darkness = 56;
    STATE_Weather_Sandstorm = 57;
    STATE_Weather_Blizzard = 58;
    STATE_Weather_Mud = 59;
    STATE_Weather_Rain = 60;
    STATE_Weather_Sunlight = 61;
    STATE_Weather_LightningStorm = 62;
    STATE_Weather_Windy = 63;
    STATE_Mechanic_IsWebbed = 64;
    STATE_Mod_HealingDealtPercent = 65;
    STATE_Mod_HealingTakenPercent = 66;
    STATE_Mechanic_IsInvisible = 67;
};"
614,[1] PetBattle - 2. Pre-Playback Processing,"lastEffect.procGroup = turnGroup
			end
		
			if ( processDebug ) then 
				DebugPrint(""+ New Turn Group, turnID = "" .. event.turnInstanceID .. "", depth = "" .. event.stackDepth
					.."", ability: ""..tostring(abilityID));
			end
		end
		
		-- find or build an effect group as necessary
		local effectGroup = effectGroups[effectKey]
		if (not effectGroup) then
			effectGroup =
			{
				class = ""effect"";

				key = effectKey;
				firstEvent = filteredEvent;
				results = { };
				
				effectID				= event.effectID;
				effectVisualID 			= effectVisualID;
				effectFallbackVisualID 	= effectFallbackVisualID;
				targetPlayerID 			= event.targetPlayerID;
				targetPetSlot 			= event.targetPetSlot;
			}
			--effectGroup = FilteredEventMetaTable( effectGroup )

			effectGroups[effectKey] = effectGroup

		
			-- this is a new effect group, link it to the end of our parent turn group
			table.insert(turnGroup.effects, effectGroup)

			if ( processDebug ) then
				local effectName = ""Unknown"";

				for k,v in pairs(PetBattleEffect) do 
					if ( v == event.effectType ) then
						effectName = k;
					end
				end

				DebugPrint(""+   New Effect Group, effectID = "" .. event.effectID.."" effectType: ""..effectName)
			end
		end


		-- add this effect to the end of the group list
		table.insert(effectGroup.results, filteredEvent)

		if ( processDebug ) then

			local effectName = ""Unknown"";

			for k,v in pairs(PetBattleEffect) do 
				if ( v == event.effectType ) then
					effectName = k;
				end
			end

			local eventType = ""Unknown"";
			for k,v in pairs(PetBattleEvent) do 
				if ( v == event.eventType ) then
					eventType = k;
				end 
			end

			DebugPrint(""+     New Result, instanceID = "" .. event.instanceID.."" effectType: ""..effectName.."" eventType: ""..eventType)
		end
		
--		lastEffect = event
		lastEffect = filteredEvent
	end
	if ( processDebug ) then
		DebugPrint(""  "")
	end

	-- [ABrazie]: Heavy duty debug mode
	if ( EVENT_DEBUG_MODE ) then 
		for turnID, turn in pairs (topLevelTurnGroups) do 
			DebugTurnGroup(turnID, turn)
		end
	end

	PostProcessAllTurns( topLevelTurnGroups ) 

	PlaybackAllTurns(topLevelTurnGroups);

	if ( processDebug ) then
		DebugPrint(""  "")
	end
end

function DebugTurnGroup(turnID, turn)
	print(""turnKey = "" .. turn.key)
	for effectID, effect in pairs( turn.effects ) do
		print(""effectKey = "" .. effect.key)
		for resultID, result in pairs( effect.results ) do 
			print( ""  AA: T) ""..turnID.."" E) ""..effectID.."" R) ""..resultID.."" I)""..result.instanceID.."" - ""..DEBUG_EVENT_LOG[result.instanceID]  );
			if (result.procGroup) then
				DebugTurnGroup(""PROC"", result.procGroup)
			end
		end
	end
end

-- Used for the Brazie Event Filtering System
function FilterResultEventsByType(event)
	return event;
end"
620,Brazie's PetBattle - PreTurn - Move Selected - Run Up,"--------------------------------------------------------------------------------
-- MOVE (ability) SELECTED
function EventMoveAbilitySelected(abilityVisualID)
	-- print(""Move Selected: Ability Visual ID: "" .. abilityVisualID)
	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if (not abilityVisual) then
		return
	end

	local player = nil
	local pet = nil
	if (observingPlayerIndex > 0) then
		player = GetTeamByIndex(observingPlayerIndex)
		if (player) then
			pet = player.pets[player.activePet]
		end
	end

	if (not pet) then
		return
	end

	local casterPlayer = GetTeamByIndex(observingPlayerIndex)
	local casterFrontPet = casterPlayer.pets[casterPlayer.activePet]
	local opponentFrontPet = GetActivePetByIndex(3 - observingPlayerIndex)
--[[
	-- Move up a bit
	local sourcePosition, targetPosition = casterFrontPet.actor:GetPosition(), opponentFrontPet.actor:GetPosition();

	-- Handle the flying case
	if ( victim and victim.states )  and 
		( victim.states[STATE_FLYING] and victim.states[STATE_FLYING] > 0 ) then
		local victimPlayer = ROIDTOPLAYER( victimROID );

		sourcePosition = victimPlayer.home;
	end

	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local moveUpSpot = LocalToWorldCoords( Vector:New( 1,0,0 ) );

	--casterFrontPet.actor:MoveToAbs(  moveUpSpot, moveUpSpot:Dist( casterFrontPet.actor:GetPosition() ) / casterFrontPet.moveSpeed );
--]]
	ReturnOrResetCheck (casterFrontPet, opponentFrontPet)
end
"
621,Brazie's PetBattle - Post Turn - Reset,"backwardSpeedMulti = 0.7;

-- Reset after an attack if needed
function Dispatcher_PerformPostAttackCleanup( ROID )
	local pet = ROIDTOUNIT(ROID);
	if ( not pet ) then 
		print (""ERROR: Post-Attack Clean-up - Invalid ROID: ""..ROIDTOSTRING(ROID).."" || ""..ROID);
		return;
	end

	local opponent = GetActivePetByIndex(3 - pet.playerID)
		
	ReturnOrResetCheck( pet, opponent );
end

function ReturnOrResetCheck (pet, opponent)

	if ( not pet or not pet.playerID  ) then
		print(""ERROR: ReturnOrResetCheck - Pet has no player ID"");
		return;
	end

	if ( pet.isPad ) then 
		return;
	end
	local STATE_FLYING = 33;

	if ( pet.states and pet.states[STATE_FLYING] and pet.states[STATE_FLYING] > 0 ) then
		return;
	end

	if ( not opponent ) then 
		print(""ERROR: ReturnOrResetCheck - Opponent was not provided!"");
		return;
	end

	local newFrontVector = UnitVectorFromAtoB(opponent.actor:GetPosition(), pet.actor:GetPosition()  );
	local returnPoint = newFrontVector * 1.75*battleScale;


	local petLoc = returnPoint;
	local petHome = HOME_LIST[pet.playerID].position;
	local newDist = petLoc:Dist ( petHome );

	local returnDistance = pet.actor:GetPosition():Dist(petLoc)

	if ( newDist > 1.75 * battleScale ) then 
		petLoc = HOME_LIST[pet.playerID].position;
		returnDistance = petHome:Dist(pet.actor:GetPosition());
	end
--[[
	if ( not opponent.dead and not opponent.isPad ) then
		local opponentHome = HOME_LIST[opponent.playerID].position;

		local opponentReturnDistance = opponent.actor:GetPosition():Dist(opponentHome)

		if ( opponentReturnDistance > 1.75 * battleScale ) then 		

print (""enemy go home"");
			local distance = opponentHome:Dist(opponent.actor:GetPosition());

			--opponent.actor:MoveToAbs( opponentHome, distance/ ( opponent.moveSpeed*backwardSpeedMulti) );

		end
	end
]]--
	if ( not pet.dead and not pet.isPad and pet.moveSpeed > 0 ) then 
		--pet.actor:WaitMoveToAbs( pet.home, returnDistance/ ( pet.speed*backwardSpeedMulti) );

		-- LAST MINUTE HACK: DWilliams. MoveToAbs is not rejecting distance if already at the home
		-- loc due to a zOffset when on slopes
		local currentLoc = pet.actor:GetPosition()
		local flatPetLoc = Vector:New(petLoc.x, petLoc.y, currentLoc.z)

		pet.actor:MoveToAbs( flatPetLoc, returnDistance/ ( pet.moveSpeed*backwardSpeedMulti) );
		pet.actor:WaitMovementComplete()
		--opponent.actor:WaitMovementComplete()
		pet.actor:SetFacingToAbs(opponent.actor:GetPosition())
		opponent.actor:SetFacingToAbs(pet.actor:GetPosition())
	end


end

"
623,Brazie's PetBattle - Constants,"-- Replace Arena Ring Size
arenaRingScale = 1.0

DEFAULT_MOVE_SPEED = 5;
DEFAULT_TURN_RATE = 15;

-- Return Speed
backwardSpeedMulti = 0.7;

-- Replace Home Locations

HOME_LIST = {
	-- Weather
	[0] = Transform:New(Vector:New(  0, 0, 1), 180);
	-- Players
	[1] = Transform:New(Vector:New( -2, 0, 0), 0);
	[2] = Transform:New(Vector:New(  2, 0, 0), 180); 
};
MASTER_SPOTS = { 
	-- Weather
	[0] = Transform:New(Vector:New( 0, 0, 3), 180);
	-- Players
	[1] = Transform:New(Vector:New( -5, 0, 1), 0);
	[2] = Transform:New(Vector:New(  5, 0, 1), 180);
};

BACKROW_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1,  2, 0) , 0 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -2, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  2, 0) , 180 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1, -2, 0) , 180 );
	};
}

WILD_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -16,  8, 0) , 0 ); 
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -16, -8, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  16,  8, 0) , 180 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  16, -8, 0) , 180 );
	};
}


FLEE_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11,  -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11,  6, 0) , 0 );
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11, -6, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11,  6, 0) , 180 );
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11, -6, 0) , 180 );
	};
}


VICTORY_PET_OFFSETS = {
	Vector:New(-1, 0, 0 );
	Vector:New(-1, 2, 0 );
	Vector:New(-1, -2, 0 );
};


-- Locations
OBJECT_LOCATIONS = {
	[PetBattlePlayerID.Weather] = {
		[1] = Transform:New(Vector:New( 0, 0, 0), 0);
		[2] = Transform:New(Vector:New( 0, 1, 0), 0);
		[3] = Transform:New(Vector:New( 0, -1, 0), 0);
	};
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1,  2, 0) , 0 );
		[2] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1, -2, 0) , 0 );
		[3] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New( -1,  0, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New(  1,  2, 0) , 180 );
		[2] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New(  1, -2, 0) , 180 );
		[3] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New( -1,  0, 0) , 180 );
	};
}

MAX_FIELD_OBJECTS = 3;

-- Wall Locations
"
624,Brazie's PetBattle - Dispatcher,"-- Responsible Object ID Tracking and Management
--
--ROID = 0xFFFF;

UNIT_ACTION_QUEUE = {
	--[ROID] = { 
	--  ROID = ROID;
	--  isProcessing = bool;
	--	commands = {
	--		{ func=function()end; args = {}; };
	--	};
	-- }
}

-- A global kill switch if I need it ??
BOT_KILL_SWITCH = false;

-- Parallel Mode Switch
PARALLEL_MODE = true;

function Dispatcher_AddCommandToQueue( responsibleObjectID, func, ...)

	if ( PARALLEL_MODE ) then
		if ( not UNIT_ACTION_QUEUE [responsibleObjectID] ) then
			UNIT_ACTION_QUEUE [responsibleObjectID] = {
				ROID = responsibleObjectID;
				isProcessing = false;
				commands = {};
			};
		end
		table.insert( UNIT_ACTION_QUEUE [responsibleObjectID].commands, 
			{
				func = func;
				args = {...};
			});

	else
		func(responsibleObjectID, ...);
	end

	--[[
	local status, result = pcall(func, responsibleObjectID, ...)
	if (status == true) then
		-- Research what this command does
		--setfenv(result, getfenv())

		print(""Result from pcall was: "",type(result));

		return result
	else
		print(""ERROR: Function Dispatched to "" .. responsibleObjectID.. "" failed."")
		print(""ERROR: "" .. result)
	end
	]]
end"
625,Brazie's PetBattle - Dispatcher - Display Damage,"function Dispatcher_SetHealth(ROID, newHealth, dontDraw, flags)
	local pet = ROIDTOPET( ROID )

	SetHealth(pet, newHealth, dontDraw, flags);
end

function SetHealth(pet, newHealth, dontDraw, flags)
	local oldHealth = pet.currentHealth
	pet.currentHealth = newHealth

	local change = 0;

	if ( oldHealth ) then
		change = newHealth - oldHealth

		if ( not dontDraw ) then
			DisplayHealthChange(pet, change, flags)
		end
	end
 
	--Dispatcher_AddCommandToQueue( PETTOROID(pet), Dispatcher_DeathAndRespawnCheck ); 

	return change, DeathAndRespawnCheck(pet);
end

function DisplayHealthChange(pet, change, flags)

	-- damage numbers feedback for observed battles
	if (isObserved) then
		if (change < 0 or flags.unkillable) then

-- BATTLE_PET_MESSAGE_CRITICAL
-- BATTLE_PET_MESSAGE_STRONG
-- BATTLE_PET_MESSAGE_TRAP_MISSED
-- BATTLE_PET_MESSAGE_WEAK
-- BATTLE_PET_MESSAGE_TRAP_SPELL_LOCK

			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)

			-- Make it positive
			if (change < 0) then
				change = -change;
			else
				change = 0
			end

			local text = tostring(change)

			if ( flags.crit ) then 
				type = WorldText.Critical;
				local color = Color:New(255, 0, 0)
				useColor = true;
				local criticalText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_CRITICAL"" )
				text = string.format( criticalText or ""%1$s"", text );
			end

			if ( flags.strong ) then 
				local strongText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_STRONG"" )
			
				text = string.format( strongText or ""%1$s (Strong)"", text )
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			elseif ( flags.weak ) then 
				local weakText 		= GetGlobalString( ""BATTLE_PET_MESSAGE_WEAK"" )
 
				text = string.format( weakText or ""%1$s (Weak)"", text )
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			else
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			end

		elseif (change > 0 or flags.heal) then
			local useColor = false;
			local type = WorldText.Healing;

			if ( flags.crit ) then 
				type =  WorldText.HealingCritical;
			end

			local color = Color:New(0, 255, 0)

			pet.actor:AddCustomWorldText( type, useColor, color, tostring(change) ) 
			--pet.actor:AddHealingText(nil, change, false, false)
		end
	end
end

--[[
	""Damage""                
	""Absorb""                
	""Critical""              
	""Miss""                  
	""XPGain""                
	""HonorGain""             
	""Healing""               
	""HealingCritical 
	""BuildingDamage"" 
	""BuildingHeal""  
	""Threat""                
	""WhiteDamage""   
	""None""        

--]]
"
626,Brazie's PetBattle - Dispatcher - Death and Respawn Check,"function Dispatcher_DeathAndRespawnCheck(ROID)
	local pet = ROIDTOPET( ROID )
	if ( not pet ) then 
		warning (""ERROR: Dispatcher_DeathAndRespawnCheck - No pet!"");
		return;
	end
	return DeathAndRespawnCheck(pet);
end


--
-- Returns:
--
--		nil - no change
--		""died"" - pet just perished
--		""dead"" - pet was dead and remained dead
--		""respawn"" - pet was dead and is now alive
function DeathAndRespawnCheck(pet, forced)
	if (pet.currentHealth <= 0) and (not pet.dead or forced ) then
--warning(""Pet Killed"");

		-- HACKfix facing way off in the distance so as to effectively not rotate
		local lookAtPos = BuildVector( (pet.teamFacing or 0.0), idleRadius*1000, 0)
		pet.actor:SetFacingToAbs(lookAtPos)
		if ( pet.realActor ) then 
			pet.realActor:SetFacingToAbs(lookAtPos)
		end

		RemoveAllAuraVisuals(pet)

		-- play dead
		local deathKitID = 62
		if (fullUpdate == true) then
			-- already dead
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			end
		else
			-- dieing
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			end
			scene:WaitTimer(1.5)
		end

		return ""died""
	elseif (pet.currentHealth <= 0) and (pet.deathAnimKit or forced) then
--warning(""Pet Is Dead"");
		return ""dead""
	elseif (pet.currentHealth > 0) and (pet.deathAnimKit or forced) then
--warning(""Pet Revived"");
		-- resurrect
		if ( pet.deathAnimKit ) then 
			pet.deathAnimKit:Stop()
			pet.deathAnimKit = nil
			pet.dead = nil;
		end

		local lookAtPos = BuildVector(pet.teamFacing, idleRadius, 0)
		--LookAtOpposingTeam(pet)
		pet.actor:Fade(1, 0.5)
		--UpdateAuraVisuals(pet)

		return ""respawn""
	end
end"
627,Brazie's PetBattle - Dispatcher - Display XP,"function Dispatcher_SetXP(ROID, ...)
	local pet = ROIDTOPET( ROID )

	return SetXP(pet, ...)
end

function SetXP(pet, xp, newLevel, dontDraw)
	local oldXP = pet.xp
	local oldLevel = pet.level
	pet.xp = xp
	pet.level = newLevel
	if (dontDraw) then
		return
	end
	
	-- Show XP bonus if it was a hard fight
	local enemyTeam = GetTeamByIndex( EnemyOf( pet.playerID ) ) ;
	local difficultFight = false;

	for k,v in pairs ( enemyTeam.pets ) do 
		if ( oldLevel and v.level and v.level > oldLevel ) then 
			difficultFight = true;
		end
	end


	local xpChange = pet.xp - oldXP
	local levelChange = pet.level - oldLevel
	ShowXPGains(pet, xpChange, levelChange, dontDraw, difficultFight )
end

function ShowXPGains(pet, xpChange, levelChange, dontDraw, difficultFight )		
	if (xpChange <= 0) and (levelChange <= 0) then
		return
	end

	if (xpChange > 0) and (pet.playerID == observingPlayerIndex) then
		local type = WorldText.XPGain;
		local useColor = false;
		local color = Color:New(255, 255, 0)
		local text = tostring(xpChange)
		local xpText = GetGlobalString( ""BATTLE_PET_MESSAGE_XP"" ) or ""%1$s XP"";

		if ( difficultFight ) then 
			xpText = GetGlobalString( ""BATTLE_PET_MESSAGE_XP_DIFFICULTY_BONUS"" ) or ""%1$s XP (Difficulty Bonus)"";
		end
		text = string.format( xpText or ""%1$s"", text );
		pet.actor:AddCustomWorldText( type, useColor, color, text ) 		
	end

	if (levelChange > 0) then
		pet.actor:ApplyLevelUpEffect()
	end
end"
628,Brazie's PetBattle - Dispatcher - Pet Owner Emote,"function Dispatcher_OwnerEmote( ROID, emote )
	local player = ROIDTOPLAYER( ROID )

	if (player and player.playerDisplay) then
		player.playerDisplay:PlayAnimKit(AnimKits.OneShotFullBodyLow, true, emote) --OneShotUpperBody
	end
end"
630,Brazie's PetBattle - Core - Default Do Result Processing,"
function DoResult(result, dontWait, successEffect, failureEffect, func, ... )
	local targetROID = GetMoveToROID( result ); 

	local failed, flags = DidItFail ( result );
	local missed = flags.miss;

	if ( not failed ) then 
		if ( type(successEffect) == ""function"" ) then
			successEffect( targetROID, result );
		end
	else
		if ( type(failureEffect) == ""function"" ) then 
			failureEffect( targetROID, result );
		end
	end

	-- Do the special thing
	if ( type(func) == ""function"" ) then 
		func(targetROID, result, ...); 
	else
		print(""ERROR: DoResult - invalid result function. Type is: "",result)
	end

	-- [ABrazie]: Heavy duty debug mode
	if ( EVENT_DEBUG_MODE ) then 
		local currentEffectInstanceID = result.instanceID;

		if ( currentEffectInstanceID ) then
			print(""Signal ID: ""..currentEffectInstanceID.."" ""..DEBUG_EVENT_LOG[currentEffectInstanceID]);

			if ( LAST_SIGNAL_ID and currentEffectInstanceID < LAST_SIGNAL_ID ) then
				print(""You skipped some effects!"");

				print(result);

				for i=LAST_SIGNAL_ID, currentEffectInstanceID, -1 do 
					print ( i.."") ""..tostring(DEBUG_EVENT_LOG[i]) );
				end

				--afsaf11423();
			end

			if ( LAST_SIGNAL_ID 
					and currentEffectInstanceID > LAST_SIGNAL_ID + 1 
					and DEBUG_EVENT_LOG[LAST_SIGNAL_ID+1] ~= nil ) then

				print(""You skipped ""..(currentEffectInstanceID-LAST_SIGNAL_ID).."" effects!"");
				
				print(result);

				for i=currentEffectInstanceID, LAST_SIGNAL_ID+1, -1 do 
					print ( i.."") ""..tostring(DEBUG_EVENT_LOG[i]) );
				end

				--afsaf11423(); 
			end
			LAST_SIGNAL_ID = currentEffectInstanceID;
		end
	end

	-- signal the impact
	SignalEffectProcessed()


end"
633,Brazie's PetBattle - Dispatcher - Result - Set Health,"function set_health_func(targetROID, result, ...)
	local targetPet = ROIDTOPET(targetROID);

	local oldHealth = targetPet.currentHealth
	local newHealth = select(1,...)
	local hidden = false;

	local crit = false; 

	if ( result.flags and result.flags.crit ) then 
		crit = true;
	end 

	amountChanged, result = SetHealth(targetPet, newHealth, hidden, result.flags )

	-- This shouldn't be an inline response - convert to a dispatch later
	if ( result == ""died"" ) then
--print(""SetHealth - died""..targetROID);
		local targetMaster = GETROIDFROMPLAYERID(targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;
		local enemyMaster = GETROIDFROMPLAYERID(3-targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;

		Dispatcher_AddCommandToQueue( targetMaster, Dispatcher_OwnerEmote, Animations.EmoteCry )
		Dispatcher_AddCommandToQueue( enemyMaster, Dispatcher_OwnerEmote, Animations.EmoteCheer )

	elseif ( result == ""respawn"" ) then
--print(""SetHealth - respawn""..targetROID);
		local casterMaster = GETROIDFROMPLAYERID(targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;

		Dispatcher_AddCommandToQueue( casterMaster, Dispatcher_OwnerEmote, Animations.EmoteCheer )
	else
--print(""SetHealth ""..targetROID);

	end

end"
635,Brazie's PetBattle - Dispatcher - Result - Aura Change,"function aura_change_func(targetROID, result, ...)
	local targetPet = ROIDTOPET( targetROID );

	if not targetPet then
		warning(""ERROR: Unknown pet provided to aura_change_func: "", ROIDTOSTRING(targetROID), result );
		return;
	end

	local auraInstanceID, turnsRemaining, auraAbilityID, cancel = ...
	local aura = targetPet.auras[auraInstanceID]

	if not aura then
		warning(""WARNING: Unknown aura instance ID. "", auraInstanceID, "" (You probably reloaded UI) "" )
--print(result);
		warning(""WARNING: Attempting to reapply aura: "", auraAbilityID);
		aura = CreateAura(targetROID, auraInstanceID, turnsRemaining, auraAbilityID);
	end

	if ( not turnsRemaining ) then
		warning(""ERROR: no turns remaining"");
	end

	if (cancel == true) or (turnsRemaining == 0 ) then

		RemoveAura(targetPet, auraInstanceID)
	else
		-- [ABrazie]: 7/25/2012
		-- Added this block so the spell impact visuals play when an aura
		-- Has its duration extendeded
		if ( turnsRemaining > aura.turnsRemaining ) then 
			local auraSpellVisualID = 0
			local auraVisual = GetAuraAbilityVisual(auraAbilityID)
			if (auraVisual) then
				auraSpellVisualID = auraVisual.spellVisualID
			end

			local target = ROIDTOUNIT(targetROID);

			if (auraSpellVisualID) then
				target.actor:PlaySpellImpactVisual(auraSpellVisualID)
			end
		end

		aura.turnsRemaining = turnsRemaining
	end
end
"
637,Brazie's PetBattle - Dispatcher - Result - Aura Apply,"function apply_aura_func( targetROID, result, ... )
	local auraInstanceID, turnsRemaining, auraAbilityID = ...

	-- apply an aura, tracked by instance ID

	if (DidItFail(result)) then
		return
	end

--print(""Applying aura to "",targetROID, "" ("",targetPet.slot,"") of "",auraAbilityID,"" using spell visual ID: "",auraSpellVisualID);

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local target = ROIDTOUNIT(targetROID);

	if ( target ) then 
		if (auraSpellVisualID) then
			target.actor:PlaySpellImpactVisual(auraSpellVisualID)
		end
	end

	aura = CreateAura( targetROID, auraInstanceID, turnsRemaining, auraAbilityID );

end
"
638,Brazie's PetBattle - Dispatcher - Result - Swap ,"function swap_func(targetROID, result )
	if ( result.flags.invalidTarget ) then 
		return;
	end

	local casterPlayer 		= ROIDTOPLAYER( targetROID ) ;
	local casterNewFrontPet = ROIDTOPET( targetROID );
	local casterFrontPet 	= casterPlayer.pets[casterPlayer.activePet]

	local opponentPlayer 	= GetTeamByIndex(3-casterNewFrontPet.playerID)
	local opponentFrontPet 	= opponentPlayer.pets[opponentPlayer.activePet]

	local casterMasterROID = GETROIDFROMPLAYERID(casterPlayer.playerID) + ROID_TYPE_PLAYER_MASTER;

	if ( casterNewFrontPet.slot ~= casterFrontPet.slot ) then 
		Dispatcher_AddCommandToQueue( casterMasterROID, Dispatcher_OwnerEmote, Animations.EmotePoint )

		casterPlayer.activePet = casterNewFrontPet.slot

		-- This could probably be dispatched
		PerformSwap( casterFrontPet, casterNewFrontPet, opponentFrontPet );

	else
		casterPlayer.activePet = casterNewFrontPet.slot
	end
	-- Clean up also forces the pets to run forward.
	DefaultTurnCleanUp(targetROID);
end"
639,Brazie's PetBattle - Core - Default Do Effect Processing,"function DefaultDoEffectProcessing(userROID, isEffect, effect, handlerOverrides ) 
	-- Only handle ""effect"" objects
	if ( effect.class ~= ""effect"" ) then
		warning (""ERROR: Object of type ""..effect.class.."" passed to DefaultDoEffect"");
		return SignalEffectProcessed();
	end

	for index=1,#effect.results do 
		local result = effect.results[index];

		StartEffectProcessing(result)
		
		local handlerTable = GetDefaultHandlerTable(result, index);

		-- Allows you to blow away basic handling
		if ( handlerOverrides ) then
			for eventType,overrides in pairs(handlerOverrides) do 
				
				for k,v in pairs(overrides) do 
					if ( not handlerTable[eventType] ) then
						handlerTable[eventType] = {};
					end
					handlerTable[eventType][k] = v;
				end
			end
		end

		local eventType = result.eventType
		local effectType = result.resultType

		-- This should only occur in case of a bug...
		if eventType and not (eventType == PetBattleEvent.RoundResult ) then
			break;
		end
		
		SignalEffectProcessed()

		-- DoFunction
		if ( handlerTable[effectType] ) then 
			local success = handlerTable[effectType].successEffect
			local failure = handlerTable[effectType].failureEffect

			local victimROID = ResultToTargetROID ( result );
			local successFunc;
			local failureFunc;

			-- sometimes I get slotless effects...
			if ( victimROID ~= nil and userPet ) then 
				successFunc = function () success( victimROID, userROID ); end;
				failureFunc = function () failure( victimROID, userROID ); end;
			end

			DoResult(result, 
				handlerTable[effectType].dontWait, 
				successFunc,
				failureFunc,
				handlerTable[effectType].func, 
				unpack( handlerTable[effectType].args) )
		else
			DebugPrint(""UNHANDLED EFFECT TYPE: "",effectType);
		end

		if (result.procGroup) then
			ProcessRoundTurnGroup(result.procGroup)
		end
	end
end
"
640,Brazie's PetBattle - Core - Default Turn,"function Dispatcher_DefaultTurnBehaviour( ROID, turn, successOverride, failureOverride, isPeriodic )
	DefaultTurnBehaviour( ROID, ""turn"", turn, successOverride, failureOverride);
end 

function DefaultTurnBehaviour( ROID, isTurn, turn, successOverride, failureOverride, successEffectOverride, failureEffectOverride, isPeriodic )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..turn.class.."" passed to DefaultTurnBehaviour"");

		if ( turn.class == ""effect"" ) then 
			warning(""WARNING: Calling Effect handling for Effect..."");

			DefaultEffectVisualHandler( ROID, turn, turn.effectVisualID, successEffectOverride, failureEffectOverride )
			DefaultDoEffectProcessing( userROID, ""effect"", turn ); 
		end

		return;
	end

	local visuals = true;
	local movementAllowed = true; -- Is used to handle the backline periodic case
	local isAuraUpdate = (turn.turnInstanceID == 0);

	-- If this is not being performed by a specific pet, skip the casting effects
	-- [ABrazie]: 6/25/2012 - I don't recall when this situation would occur.
	-- 			Making a note to review this later

	if ( not ROIDISUNIT( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Is an aura update package
	if ( isAuraUpdate or isPeriodic ) then 
		movementAllowed = false;
	else
--print("" Turn: "", turn.turnInstanceID);
	end

	local targetROID = GetMoveToROID( turn.effects[1] ); 

	-- Move into position
	if ( movementAllowed ) then 
		DefaultTurnPreEffectMovement( ROID, turn )
	end

	local turnVisualPlayed = false;

	if ( visuals and ( turn.turnVisualID and turn.turnVisualID > 0 ) ) then 
		turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride)
	end

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
		local effectVisualPlayed

		-- Will cause the creature to walk into range of the next target
		local nextTargetROID = GetMoveToROID( effect ); 
		if ( nextTargetROID ~= targetROID and movementAllowed ) then 
			DefaultTurnEffectMovement( ROID, turn, effect )
			targetROID = nextTargetROID
		end

		-- Visuals
		if ( visuals ) then  
			effectVisualPlayed = DefaultDoEffect( ROID, effect, successEffectOverride, failureEffectOverride )

			if ( effectVisualPlayed and movementAllowed ) then 
				DefaultEffectCleanUp( ROID );
			end
		else
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end
	end

	if ( turnVisualPlayed and movementAllowed ) then 
		DefaultTurnCleanUp(ROID);
	end
end

--
--  Moves the unit into the right place
--
function DefaultTurnPreEffectMovement( attackerROID, turn )
	local turnVisualID = turn.turnVisualID ;

	local targetROID = GetMoveToROID( turn ); 
	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	-- Visual Data
	local turnVisual = petAbilityVisuals[turnVisualID]

	-- Stationary if undefined
	if ( not turnVisual ) then 
		warning(""ERROR: Turn PreEffect Movement - No turn ability visual!"",turn.abilityID)
		PerformMove( attackerROID, targetROID, PetBattleRange.InPlace, missed ); 

	-- Stationary if sessile
	else
		local attackerUnit = ROIDTOUNIT( attackerROID );
		if ( attackerUnit and attackerUnit.sessile ) then 
			warning(""WARNING: Sessile pet. (probably a construct). No movement."");
			return;
		else
			PerformMove( attackerROID, targetROID, turnVisual.range, missed ); 
		end
	end
end


--
--  Moves the unit into the right place
--
function DefaultTurnEffectMovement( attackerROID, turn, effect )
	local turnVisualID = turn.turnVisualID;
	local effectVisualID = effect.effectVisualID or effect.effectFallbackVisualID; 

	local targetROID = GetMoveToROID( effect ); 

	local failed, flags = DidItFail ( effect );
	local missed = flags.miss;

	-- Visual Data
	local effectVisual = "
641,Brazie's PetBattle - Library - BitLib,"function bit(p)
  return 2 ^ (p - 1)  -- 1-based indexing
end

-- Typical call:  if hasbit(x, bit(3)) then ...
function hasbit(x, p)
  return x % (p + p) >= p       
end

function setbit(x, p)
  return hasbit(x, p) and x or x + p
end

function clearbit(x, p)
  return hasbit(x, p) and x - p or x
end

function bitor(x, y)
  local p = 1; 
  local z = 0; 
  local limit = x > y and x or y
  while p <= limit do
    if hasbit(x, p) or hasbit(y, p) then
      z = z + p
    end
    p = p + p
  end
  return z
end

function bitand(x, y)
  local p = 1; 
  local z = 0; 
  local limit = x > y and x or y
  while p <= limit do
    if hasbit(x, p) and hasbit(y, p) then
      z = z + p
    end
    p = p + p
  end
  return z
end"
642,Brazie's PetBattle - Library - ROIDs,"
-- Responsible Object ID
ROID_TYPE_PLAYER_PET_SLOT_1 = 0x0001; 
ROID_TYPE_PLAYER_PET_SLOT_2 = 0x0002;
ROID_TYPE_PLAYER_PET_SLOT_3 = 0x0004;
ROID_TYPE_PLAYER_MASTER		= 0x0008;
ROID_TYPE_PLAYER_PAD		= 0x0010;
ROID_TYPE_PLAYER_PAD_OBJ_1	= 0x0020;
ROID_TYPE_PLAYER_PAD_OBJ_2	= 0x0040;
ROID_TYPE_PLAYER_PAD_OBJ_3	= 0x0080;

ROID_TYPE_WEATHER			= 0x0100;

ROID_TYPE_PLAYER_1 			= 0x1000;
ROID_TYPE_PLAYER_2 			= 0x2000; 

function ROIDISAPET( ROID ) 
	return (bitand(ROID,0x17) > 0)
end

function ROIDISAOBJECT ( ROID )
	return (bitand(ROID,0x0E0) > 0)
end

function ROIDISWEATHER ( ROID )
	return (bitand(ROID,ROID_TYPE_WEATHER) > 0)
end

function ROIDISUNIT( ROID )  
	return ( ROIDISAPET( ROID ) or ROIDISAOBJECT ( ROID ) )
end

function ROIDTOSTRING( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

	if ( not ROIDISAPET( ROID ) and not ROIDISAOBJECT( ROID ) ) then
		if ( ROID == ROID_TYPE_PLAYER_1 ) then
			return ""Player 1 - No Unit"";
		elseif ( ROID == ROID_TYPE_PLAYER_2 ) then
			return ""Player 2 - No Unit"";
		elseif ( ROID == ROID_TYPE_WEATHER ) then
			return ""Weather - No Unit"";
		end

		return ""Invalid ROID: ""..ROID;
			
	end



	local unit = ROIDTOUNIT(ROID);
	local playerID = unit.playerID;
	local slot = unit.slot;

	local castingTeamName = ""Unknown"";
	local castingPetSlotName = ""Unknown""; 

	for k,v in pairs(PetBattlePlayerID) do 
		if ( v == playerID ) then
			castingTeamName = k;
		end
	end


	if ( ROIDISAPET ( ROID ) ) then 
		castingPetSlotName = "" - Pet ""; 
		
		local pet = unit;
		for k,v in pairs(PetBattlePetID) do 
			if ( v == slot ) then
				castingPetSlotName = castingPetSlotName..k;
			end
		end
	elseif ( ROIDISAOBJECT ( ROID ) ) then 
		castingPetSlotName = "" - Object ""; 
		local sub = ( bitand(ROID,0x0E0) )

		if ( sub == ROID_TYPE_PLAYER_PAD_OBJ_1 ) then 
			castingPetSlotName = castingPetSlotName..'1';
		elseif ( sub == ROID_TYPE_PLAYER_PAD_OBJ_2 ) then 
			castingPetSlotName = castingPetSlotName..'2';
		elseif ( sub == ROID_TYPE_PLAYER_PAD_OBJ_3 ) then 
			castingPetSlotName = castingPetSlotName..'3';
		end
	end

	return castingTeamName..castingPetSlotName;
end

function ROIDTOPLAYER( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

	local playerID = 0;
	if ( bitand(ROID, ROID_TYPE_WEATHER) == ROID_TYPE_WEATHER ) then
		playerID = PetBattlePlayerID.Weather;
	elseif ( bitand(ROID, 0xF000) == ROID_TYPE_PLAYER_1 ) then
		playerID = PetBattlePlayerID.Player1;
	elseif ( bitand(ROID, 0xF000) == ROID_TYPE_PLAYER_2 ) then
		playerID = PetBattlePlayerID.Player2;
	else
		return nil;
	end

	return GetTeamByIndex(playerID)
end

function ROIDTOPET( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

--print(ROID,"" p1: "",ROID_TYPE_PLAYER_1, "" p2: "",ROID_TYPE_PLAYER_2)
	local player = ROIDTOPLAYER( ROID );

	if ( player ) then
		local slot = nil;

		if ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_1 ) then
			slot = PetBattlePetID.Slot1
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_2 ) then
			slot = PetBattlePetID.Slot2
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_3 ) then
			slot = PetBattlePetID.Slot3
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PAD ) then
			slot = PetBattlePetID.Pad
		elseif ( bitand(ROID, ROID_TYPE_WEATHER) > 0 ) then
			slot = PetBattlePetID.Weather
		end

		if ( slot ) then
			return player.pets[slot]
		end
	end

	return nil;
end

function ROIDTOOBJ( ROID )
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOOBJ."");
		return nil;
	end

	local player = ROIDTOPLAYER( ROID );

	if ( player ) then
		local slot = nil;

		if ( bitand(ROID, 0x0E0) == "
643,[1] PetBattle - 4. Playback Turn,"		print (""WARNING: stack depth exceeded "" .. maxStackDepth)
	end
	if (maxTurnInstanceIDs > maxTurnInstanceIDs) then
		print (""WARNING: max turn instanceIDs exceeded "" .. maxTurnInstanceIDs)
	end

	-- This is to handle non-data generated effects
	if ( turnInstanceID == 0 ) then 
		turnInstanceZeroCount = turnInstanceZeroCount + 1;
		turnInstanceID = turnInstanceZeroCount * -1;
	end
	
	if ( effectID == 0 ) then 
		effectZeroCount = effectZeroCount + 1;
		effectID = effectZeroCount * -1;
	end
	
	local turnKey = turnInstanceID*maxStackDepth + stackDepth
	local effectKey = effectID*maxTurnInstanceIDs*maxStackDepth + turnKey
	return turnKey, effectKey
end

function HandleSpellVisualPackage(casterPlayerID, casterPetSlot, turnVisualID, ...)

	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnVisualID) then
		turnVisual = petAbilityVisuals[turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		Dispatcher_AddCommandToQueue(casterPlayerID, casterPetSlot, turnVisual.scriptFunction, ...)
		processed = true;
	end

	return processed
end

"
645,Turn Package - Multi-Attack,"function Dispatcher_MultiAttack( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_MultiAttack"");

		return;
	end

	-- Generate some points
	local points = {
	}

	local numPoints = #turn.effects;

	local offset=270

	local totalAngle = 720 / 2
	local step= totalAngle/numPoints;

	for i=offset+step,offset+720,step do 
		local sin = math.sin(i/180*math.pi)*1.25
		local cos = math.cos(i/180*math.pi)*1.25
		table.insert(points, Vector:New(sin, cos, 0));

	end

	local pet = ROIDTOUNIT(ROID);
	local originalPetLoc = pet.actor:GetPosition();

	local i=0;

	local visualMode = ""turn"";


	-- Get up close
	DefaultTurnPreEffectMovement( ROID, turn )

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Use the first result from each effect
		local targetROID = GetMoveToROID( effect ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( effect );
		local missed = flags.miss;

		local originalTargetLoc = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

		-- Face the target
		pet.actor:SetFacingToTarget(target.actor, Vector:New())


		-- Do the effect visual
		if ( visualMode == ""turn"" ) then 
			local effectVisualPlayed = DefaultTurnOnEffectVisualHandler( ROID, turn, effect )
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 

		elseif ( visualMode == ""effect"" ) then  
			local effectVisualPlayed = DefaultDoEffect( ROID, effect )

		else
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end
 
		-- ## Unique Stuff Start 
		i = i + 1;
		local v = points[i]; 
		if ( v ) then 
			local newDrift = FastLocalFacingCoordinates(originalTargetLoc, originalPetLoc , v * -battleScale );
			local targetDriftPoint 	=  newDrift;
			local driftDistance = targetDriftPoint:Dist( pet.actor:GetPosition() )
			pet.actor:MoveToAbs(targetDriftPoint, driftDistance/pet.moveSpeed );
		end
		-- ## Unique Stuff End

	end

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end
"
646,Brazie's PetBattle - Dispatcher - Result - SetState,"function set_state_func(targetROID, result) 
	local targetPet = ROIDTOPET( targetROID );
	if not targetPet then
		warning(""ERROR: Unknown pet provided to set_state_func: "", ROIDTOSTRING(targetROID), result );
		return;
	end

	local label = ""Unknown State"";

	for k,v in pairs(STATE_LOOKUP) do
		if ( v == result.stateID ) then
			label = k;
			break;
		end
	end

	--Print(""*** State Update: "",label,"" = "",result.stateValue) 

	if ( not targetPet.states ) then
		targetPet.states = {};
	end

	targetPet.states[result.stateID]  = result.stateValue;

	-- stealth activated
	if ( result.stateID == STATE_STEALTHED ) then
		if ( result.stateValue > 0 ) then
			targetPet.stealthed = true;
		else
			targetPet.stealthed = false;
		end
		
		local stealthAlpha = GetNaturalAlpha( targetROID )
--		print(""STEALTH CHANGED, ALPHA = "" .. tostring(stealthAlpha))
		targetPet.actor:Fade(stealthAlpha, 0.5)
	end

	-- stealth activated
	if ( result.stateID == STATE_FLY_TIER ) then

		if ( result.stateValue > 0 ) then
			targetPet.actor:SetHoverHeight(0.5)
			targetPet.flyTier = true;
		else
			targetPet.actor:SetHoverHeight(0.0)
			targetPet.flyTier = false;
		end
		
	end

	-- stealth activated
	if ( result.stateID == STATE_INVISIBLE ) then
		if ( result.stateValue > 0 ) then
			targetPet.invisible = true;
		else
			targetPet.invisible = false;
		end
		
		targetPet.actor:Fade( GetNaturalAlpha( targetROID ) , 0.5)
	end


	-- Float custom text
	if ( result.stateID == STATE_CHARGING ) then
		if ( result.stateValue > 0 ) then
			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)
 
			local text = GetGlobalString( ""BATTLE_PET_MESSAGE_CHARGING"" ) or ""Charging"";
			targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		end
	end

	if ( result.stateID == STATE_CLEANSE ) then
		if ( result.stateValue > 0 ) then 
			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)
 
			local text = GetGlobalString( ""BATTLE_PET_MESSAGE_CLEANSED"" ) or ""Cleansed"";
			targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		end
	end

	if ( result.stateID == STATE_RECOVERING ) then
		if ( result.stateValue > 0 ) then
			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)

			local text = GetGlobalString( ""BATTLE_PET_MESSAGE_RECOVERING"" ) or ""Recovering"";
			targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		end
	end

	-- Clone Mode
	if ( result.stateID == STATE_CLONE_ACTIVE ) then
		if ( result.stateValue > 0 ) then 
			--print(""Clone Mode ACTIVATED!""..targetROID);
		else
			--print(""Clone Mode DEACTIVATED!""..targetROID);
		end
	end
end"
648,Turn Package - Vanish - Ambush,"function Dispatcher_VanishAttackOnMultiHit( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_VanishAttackOnMultiHit"");

		return;
	end

	-- Behave normally on 1 effect
	if ( #turn.effects == 1 ) then 
		DefaultTurnBehaviour( ROID, isTurn, turn )

	else

		-- ## Unique Stuff Start 
		local ShadowStep = function(targetROID) 
			local pet = ROIDTOUNIT(ROID);
			local target =  ROIDTOUNIT( targetROID );

			local failed, flags = DidItFail ( turn );
			local missed = flags.miss;

			local alpha = 0;
			local delay = 0.5; -- sec
			pet.actor:PlaySpellCastVisual(255);
			pet.actor:Fade(alpha, delay)
			scene:WaitTimer(delay)
			pet.actor:SetFacingToTarget(target.actor, Vector:New())

			local targetLocation =  ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

			local behindSpot = FastLocalFacingCoordinates(targetLocation, pet.actor:GetPosition() , Vector:New(-0.5,0,0) );

			local distance = targetLocation:Dist( behindSpot )

			pet.actor:WaitMoveToAbs(behindSpot,0); --driftDistance/pet.moveSpeed 

			pet.actor:PlaySpellCastVisual(255);
			pet.actor:Fade( GetNaturalAlpha(ROID) , delay)
			scene:WaitTimer(delay)
		end
		-- ## Unique Stuff End

		local HandleEffect = function ( effectId )
			local effect = turn.effects[effectId];
			local effectVisualPlayed = DefaultTurnOnEffectVisualHandler( ROID, turn, effect )

			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 

			if ( effectVisualPlayed ) then 
				DefaultTurnCleanUp( ROID );
			end
		end

		local targetROID = GetMoveToROID( turn.effects[1] ); 

		ShadowStep( targetROID );

		-- Behave normally on 1 effect, do this on multiple effects
		if ( #turn.effects > 1 ) then 
			for i=2, #turn.effects do
				HandleEffect ( i-1 );

				local nextTargetROID = GetMoveToROID( turn.effects[i] ); 
				if ( targetROID ~= nextTargetROID ) then 
					ShadowStep( nextTargetROID );
					targetROID = nextTargetROID;
				end
			end
		end

		HandleEffect( #turn.effects );

	end
end
"
649,PetBattle - Dispatcher - Thread Bot 1,"local BOT_ID = 1
ThreadBotMain(BOT_ID)"
650,PetBattle - Dispatcher - Thread Bot 2,"local BOT_ID = 2
ThreadBotMain(BOT_ID)"
651,Brazie's PetBattle - Library - Helper Functions,"allPetsShown = true; 

function GetNaturalAlpha(ROID)
	local player = ROIDTOPLAYER( ROID ) 
	local pet = ROIDTOUNIT( ROID ) 

	if ( pet.slot == player.activePet ) then

		if ( pet.underground ) then 
			return 0.1;
		elseif ( pet.stealthed ) then 
			return 0.5;
		elseif ( pet.isTrapped ) then
			return 0;
		else
			return 1;
		end
	elseif ( allPetsShown ) then

		if ( pet.underground ) then 
			return 0;
		elseif ( pet.stealthed ) then 
			return 0.5;
		elseif ( pet.isTrapped ) then
			return 0;
		else
			return 1;
		end
	end
end


-- [ABrazie]: Created this function to handle the situation where dead creatures
-- 		Would continue to face their targets after death. 
-- 
function DefaultFacing( attackerROID, victimROID ) 
	local attacker = ROIDTOUNIT( attackerROID );
	local victim = ROIDTOUNIT( victimROID );

	if ( victim and attacker.currentHealth and attacker.currentHealth> 0 ) then
		attacker.actor:SetFacingToTarget( victim.actor, Vector:New() )
	end
end


function CreateAxisAtLoc(transform, scale)
	local scaleCreateData = ActorCreateData:Default()
	scaleCreateData.name = ""scaleAxis"" 
	scaleCreateData.modelFileID = fid(397940)
	scaleCreateData.scale = scale or 2.0
	scaleCreateData.transform = transform or Transform:New()
	scaleCreateData.interactible = false
	scaleCreateData.groundSnap = false
	local axis = scene:SpawnActor(scaleCreateData)

	return axis;
end

function EnemyOf( playerID )
	return 3 - playerID
end"
652,"Turn Package - Skip Turn, Run The First N Effects","function Dispatcher_SkipTurnAnimateEffects1toN( n, ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_SkipTurnAnimateEffects1toN"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISUNIT( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	local turnVisualPlayed = false;

	if ( visuals ) then 
		--turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn)
	end

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
		local effectVisualPlayed

		if ( index <= n ) then
			effectVisualPlayed = DefaultDoEffect(ROID, effect)

			if ( effectVisualPlayed ) then 
				DefaultEffectCleanUp( ROID );
			end
		else
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end
	end

	if ( turnVisualPlayed ) then 
		DefaultTurnCleanUp(ROID);
	end
end"
653,Turn Package - Leap Into Range - Play N,"function Dispatcher_LeapIntoMeleeOnlyPlayN( n, ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_LeapIntoMeleeOnlyPlayN"");

		return;
	end

	-- MY MOVEMENT START
	local pet = ROIDTOUNIT(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualPlayed

	local turnVisualID = turn.turnVisualID
	local turnVisual = petAbilityVisuals[turnVisualID]
	local turnVisualSpellID = turnVisual.spellVisualID

	local visKit = pet.actor:PlaySpellStateVisual(6)

	local targetROID = GetMoveToROID( turn.effects[1] ); 
	local target = ROIDTOPET( targetROID )

	PerformLeap(ROID, targetROID, turnVisual.range, Animations.Jump )
	pet.actor:ClearSpellVisual( visKit)

	turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn)

	DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride)

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		if ( index <= n ) then 
			-- Default Visual 
			DefaultDoEffect( ROID, effect ); 
		else
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end
	end 

	-- Default CleanUp
	DefaultTurnCleanUp(ROID);

end"
654,Brazie's PetBattle - Turn - Perform Move,"
-- Moves the unit to the correct location based on the ability
function PerformMove(attackerROID, victimROID, range, miss)
	
	local player = ROIDTOPLAYER(attackerROID);
	local pet = ROIDTOUNIT(attackerROID);

	if ( not pet or (pet and pet.isPad) or (pet and pet.slot ~= player.activePet ) ) then
		return;
	end

	if ( victimROID == 0 ) then
		return;
	end

	local opponent = ROIDTOUNIT( victimROID )
	if ( not opponent or victimROID == attackerROID ) then 
		pet.actor:SetFacingToAbs( Vector:New() )
		return;
	end

	local finalDestination = ObtainAttackPoint(attackerROID, victimROID, range, miss)

	if ( finalDestination and pet.moveSpeed > 0 ) then 
		local distance = finalDestination:Dist( pet.actor:GetPosition() );

		if ( distance > 0.02 ) then 
			local moveTime = distance/battleScale/(pet.moveSpeed);
			if(range == 0 and miss) then
				pet.actor:ClearFacing();
				crashNextFacing = true;
			end
			pet.actor:WaitMoveToAbs(finalDestination, moveTime)
		end
	else
		-- ""You didnt need to go anywhere 
	end
end

"
655,Brazie's PetBattle - Turn - Perform Leap,"
-- Moves the unit to the correct location based on the ability
function PerformLeap(attackerROID, victimROID, range, miss, animation)
	local player = ROIDTOPLAYER( attackerROID );
	local pet = ROIDTOUNIT( attackerROID );
	if ( not pet or (pet and pet.isPad) or (pet and pet.slot ~= player.activePet ) ) then
		return;
	end
	local opponent =  ROIDTOUNIT( victimROID );
	if ( not opponent or victimROID == attackerROID ) then 
		pet.actor:SetFacingToAbs( Vector:New() )
		return;
	end

	local finalDestination = ObtainAttackPoint( attackerROID, victimROID, range, miss )

	if ( finalDestination and pet.moveSpeed > 0 ) then 
		local distance = finalDestination:Dist( pet.actor:GetPosition() );

		if ( distance > 0.02 ) then 
			PerformJump( pet, finalDestination, 0.5, animation )

		end
	else
		-- ""You didnt need to go anywhere
	end
end


function PerformJump( pet, dest, duration, animation )
	if ( not pet.moveSpeed or pet.moveSpeed <= 0 ) then
		return;
	end

	local moveTime = duration or 0.5
	local anim = animation or Animations.JumpLoop

	local kit;
	if ( anim ) then 
		-- This causes an animation to replace normal movement anims
		kit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, anim );
	end

	pet.actor:SetSnapToGround(false)
	pet.actor:MoveSplineAbs( 
			BuildKnockbackSpline(pet.actor:GetPosition(), dest, moveTime), moveTime )
	pet.actor:WaitMovementComplete()
	pet.actor:SetSnapToGround(true)

	if ( kit ) then 
		kit:Stop();
	end

end

"
660,Global Constants - Animation Table 1,"AnimTable1 =
{  
	None = -1;
	Stand = 0;
	Death = 1;
	Spell = 2;
	Stop = 3;
	Walk = 4;
	Run = 5;
	Dead = 6;
	Rise = 7;
	StandWound = 8;
	CombatWound = 9;
	CombatCritical = 10;
	ShuffleLeft = 11;
	ShuffleRight = 12;
	Walkbackwards = 13;
	Stun = 14;
	HandsClosed = 15;
	AttackUnarmed = 16;
	Attack1H = 17;
	Attack2H = 18;
	Attack2HL = 19;
	ParryUnarmed = 20;
	Parry1H = 21;
	Parry2H = 22;
	Parry2HL = 23;
	ShieldBlock = 24;
	ReadyUnarmed = 25;
	Ready1H = 26;
	Ready2H = 27;
	Ready2HL = 28;
	ReadyBow = 29;
	Dodge = 30;
	SpellPrecast = 31;
	SpellCast = 32;
	SpellCastArea = 33;
	NPCWelcome = 34;
	NPCGoodbye = 35;
	Block = 36;
	JumpStart = 37;
	Jump = 38;
	JumpEnd = 39;
	Fall = 40;
	SwimIdle = 41;
	Swim = 42;
	SwimLeft = 43;
	SwimRight = 44;
	SwimBackwards = 45;
	AttackBow = 46;
	FireBow = 47;
	ReadyRifle = 48;
	AttackRifle = 49;
	Loot = 50;
	ReadySpellDirected = 51;
	ReadySpellOmni = 52;
	SpellCastDirected = 53;
	SpellCastOmni = 54;
	BattleRoar = 55;
	ReadyAbility = 56;
	Special1H = 57;
	Special2H = 58;
	ShieldBash = 59;
	EmoteTalk = 60;
	EmoteEat = 61;
	EmoteWork = 62;
	EmoteUseStanding = 63;
	EmoteTalkExclamation = 64;
	EmoteTalkQuestion = 65;
	EmoteBow = 66;
	EmoteWave = 67;
	EmoteCheer = 68;
	EmoteDance = 69;
	EmoteLaugh = 70;
	EmoteSleep = 71;
	EmoteSitGround = 72;
	EmoteRude = 73;
	EmoteRoar = 74;
	EmoteKneel = 75;
	EmoteKiss = 76;
	EmoteCry = 77;
	EmoteChicken = 78;
	EmoteBeg = 79;
	EmoteApplaud = 80;
	EmoteShout = 81;
	EmoteFlex = 82;
	EmoteShy = 83;
	EmotePoint = 84;
	Attack1HPierce = 85;
	Attack2HLoosePierce = 86;
	AttackOff = 87;
	AttackOffPierce = 88;
	Sheath = 89;
	HipSheath = 90;
	Mount = 91;
	RunRight = 92;
	RunLeft = 93;
	MountSpecial = 94;
	Kick = 95;
	SitGroundDown = 96;
	SitGround = 97;
	SitGroundUp = 98;
	SleepDown = 99;
	Sleep = 100;
	SleepUp = 101;
	SitChairLow = 102;
	SitChairMed = 103;
	SitChairHigh = 104;
	LoadBow = 105;
	LoadRifle = 106;
	AttackThrown = 107;
	ReadyThrown = 108;
	HoldBow = 109;
	HoldRifle = 110;
	HoldThrown = 111;
	LoadThrown = 112;
	EmoteSalute = 113;
	KneelStart = 114;
	KneelLoop = 115;
	KneelEnd = 116;
	AttackUnarmedOff = 117;
	SpecialUnarmed = 118;
	StealthWalk = 119;
	StealthStand = 120;
	Knockdown = 121;
	EatingLoop = 122;
	UseStandingLoop = 123;
	ChannelCastDirected = 124;
	ChannelCastOmni = 125;
	Whirlwind = 126;
	Birth = 127;
	UseStandingStart = 128;
	UseStandingEnd = 129;
	CreatureSpecial = 130;
	Drown = 131;
	Drowned = 132;
	FishingCast = 133;
	FishingLoop = 134;
	Fly = 135;
	EmoteWorkNoSheathe = 136;
	EmoteStunNoSheathe = 137;
	EmoteUseStandingNoSheathe = 138;
	SpellSleepDown = 139;
	SpellKneelStart = 140;
	SpellKneelLoop = 141;
	SpellKneelEnd = 142;
	Sprint = 143;
	InFlight = 144;
	Spawn = 145;
	Close = 146;
	Closed = 147;
	Open = 148;
	Opened = 149;
	Destroy = 150;
	Destroyed = 151;
	Rebuild = 152;
	Custom0 = 153;
	Custom1 = 154;
	Custom2 = 155;
	Custom3 = 156;
	Despawn = 157;
	Hold = 158;
	Decay = 159;
	BowPull = 160;
	BowRelease = 161;
	ShipStart = 162;
	ShipMoving = 163;
	ShipStop = 164;
	GroupArrow = 165;
	Arrow = 166;
	CorpseArrow = 167;
	GuideArrow = 168;
	Sway = 169;
	DruidCatPounce = 170;
	DruidCatRip = 171;
	DruidCatRake = 172;
	DruidCatRavage = 173;
	DruidCatClaw = 174;
	DruidCatCower = 175;
	DruidBearSwipe = 176;
	DruidBearBite = 177;
	DruidBearMaul = 178;
	DruidBearBash = 179;
	DragonTail = 180;
	DragonStomp = 181;
	DragonSpit = 182;
	DragonSpitHover = 183;
	DragonSpitFly = 184;
	EmoteYes = 185;
	EmoteNo = 186;
	JumpLandRun = 187;
	LootHold = 188;
	LootUp = 189;
	StandHigh = 190;
	Impact = 191;
	LiftOff = 192;
	Hover = 193;
	SuccubusEntice = 194;
	EmoteTrain = 195;
	EmoteDead = 196;
	EmoteDanceOnce = 197;
	Deflect = 198;
	EmoteEatNoSheathe = 199;
	Land = 200;}
"
665,Global Constants - Animation Table 2,"AnimTable2 = {
	Submerge = 201;
	Submerged = 202;
	Cannibalize = 203; 
	ArrowBirth = 204;
	GroupArrowBirth = 205;
	CorpseArrowBirth = 206;
	GuideArrowBirth = 207;
	EmoteTalkNoSheathe = 208;
	EmotePointNoSheathe = 209;
	EmoteSaluteNoSheathe = 210;
	EmoteDanceSpecial = 211;
	Mutilate = 212;
	CustomSpell01 = 213;
	CustomSpell02 = 214;
	CustomSpell03 = 215;
	CustomSpell04 = 216;
	CustomSpell05 = 217;
	CustomSpell06 = 218;
	CustomSpell07 = 219;
	CustomSpell08 = 220;
	CustomSpell09 = 221;
	CustomSpell10 = 222;
	StealthRun = 223;
	Emerge = 224;
	Cower = 225;
	Grab = 226;
	GrabClosed = 227;
	GrabThrown = 228;
	FlyStand = 229;
	FlyDeath = 230;
	FlySpell = 231;
	FlyStop = 232;
	FlyWalk = 233;
	FlyRun = 234;
	FlyDead = 235;
	FlyRise = 236;
	FlyStandWound = 237;
	FlyCombatWound = 238;
	FlyCombatCritical = 239;
	FlyShuffleLeft = 240;
	FlyShuffleRight = 241;
	FlyWalkbackwards = 242;
	FlyStun = 243;
	FlyHandsClosed = 244;
	FlyAttackUnarmed = 245;
	FlyAttack1H = 246;
	FlyAttack2H = 247;
	FlyAttack2HL = 248;
	FlyParryUnarmed = 249;
	FlyParry1H = 250;
	FlyParry2H = 251;
	FlyParry2HL = 252;
	FlyShieldBlock = 253;
	FlyReadyUnarmed = 254;
	FlyReady1H = 255;
	FlyReady2H = 256;
	FlyReady2HL = 257;
	FlyReadyBow = 258;
	FlyDodge = 259;
	FlySpellPrecast = 260;
	FlySpellCast = 261;
	FlySpellCastArea = 262;
	FlyNPCWelcome = 263;
	FlyNPCGoodbye = 264;
	FlyBlock = 265;
	FlyJumpStart = 266;
	FlyJump = 267;
	FlyJumpEnd = 268;
	FlyFall = 269;
	FlySwimIdle = 270;
	FlySwim = 271;
	FlySwimLeft = 272;
	FlySwimRight = 273;
	FlySwimBackwards = 274;
	FlyAttackBow = 275;
	FlyFireBow = 276;
	FlyReadyRifle = 277;
	FlyAttackRifle = 278;
	FlyLoot = 279;
	FlyReadySpellDirected = 280;
	FlyReadySpellOmni = 281;
	FlySpellCastDirected = 282;
	FlySpellCastOmni = 283;
	FlyBattleRoar = 284;
	FlyReadyAbility = 285;
	FlySpecial1H = 286;
	FlySpecial2H = 287;
	FlyShieldBash = 288;
	FlyEmoteTalk = 289;
	FlyEmoteEat = 290;
	FlyEmoteWork = 291;
	FlyEmoteUseStanding = 292;
	FlyEmoteTalkExclamation = 293;
	FlyEmoteTalkQuestion = 294;
	FlyEmoteBow = 295;
	FlyEmoteWave = 296;
	FlyEmoteCheer = 297;
	FlyEmoteDance = 298;
	FlyEmoteLaugh = 299;
	FlyEmoteSleep = 300;
	FlyEmoteSitGround = 301;
	FlyEmoteRude = 302;
	FlyEmoteRoar = 303;
	FlyEmoteKneel = 304;
	FlyEmoteKiss = 305;
	FlyEmoteCry = 306;
	FlyEmoteChicken = 307;
	FlyEmoteBeg = 308;
	FlyEmoteApplaud = 309;
	FlyEmoteShout = 310;
	FlyEmoteFlex = 311;
	FlyEmoteShy = 312;
	FlyEmotePoint = 313;
	FlyAttack1HPierce = 314;
	FlyAttack2HLoosePierce = 315;
	FlyAttackOff = 316;
	FlyAttackOffPierce = 317;
	FlySheath = 318;
	FlyHipSheath = 319;
	FlyMount = 320;
	FlyRunRight = 321;
	FlyRunLeft = 322;
	FlyMountSpecial = 323;
	FlyKick = 324;
	FlySitGroundDown = 325;
	FlySitGround = 326;
	FlySitGroundUp = 327;
	FlySleepDown = 328;
	FlySleep = 329;
	FlySleepUp = 330;
	FlySitChairLow = 331;
	FlySitChairMed = 332;
	FlySitChairHigh = 333;
	FlyLoadBow = 334;
	FlyLoadRifle = 335;
	FlyAttackThrown = 336;
	FlyReadyThrown = 337;
	FlyHoldBow = 338;
	FlyHoldRifle = 339;
	FlyHoldThrown = 340;
	FlyLoadThrown = 341;
	FlyEmoteSalute = 342;
	FlyKneelStart = 343;
	FlyKneelLoop = 344;
	FlyKneelEnd = 345;
	FlyAttackUnarmedOff = 346;
	FlySpecialUnarmed = 347;
	FlyStealthWalk = 348;
	FlyStealthStand = 349;
	FlyKnockdown = 350;
	FlyEatingLoop = 351;
	FlyUseStandingLoop = 352;
	FlyChannelCastDirected = 353;
	FlyChannelCastOmni = 354;
	FlyWhirlwind = 355;
	FlyBirth = 356;
	FlyUseStandingStart = 357;
	FlyUseStandingEnd = 358;
	FlyCreatureSpecial = 359;
	FlyDrown = 360;
	FlyDrowned = 361;
	FlyFishingCast = 362;
	FlyFishingLoop = 363;
	FlyFly = 364;
	FlyEmoteWorkNoSheathe = 365;
	FlyEmoteStunNoSheathe = 366;
	FlyEmoteUseStandingNoSheathe = 367;
	FlySpellSleepDown = 368;
	FlySpellKneelStart = 369;
	
	
}
"
670,Global Constants - Animation Table 3,"AnimTable3 = {
	FlyDruidCatRip = 400;
	FlyDruidCatRake = 401;
	FlyDruidCatRavage = 402;
	FlyDruidCatClaw = 403;
	FlyDruidCatCower = 404;
	FlyDruidBearSwipe = 405;
	FlyDruidBearBite = 406;
	FlyDruidBearMaul = 407;
	FlyDruidBearBash = 408;
	FlyDragonTail = 409; 
	FlyDragonStomp = 410;
	FlyDragonSpit = 411;
	FlyDragonSpitHover = 412;
	FlyDragonSpitFly = 413; 
	FlyEmoteYes = 414;
	FlyEmoteNo = 415;
	FlyJumpLandRun = 416;
	FlyLootHold = 417;
	FlyLootUp = 418;
	FlyStandHigh = 419;
	FlyImpact = 420;
	FlyLiftOff = 421;
	FlyHover = 422;
	FlySuccubusEntice = 423;
	FlyEmoteTrain = 424;
	FlyEmoteDead = 425;
	FlyEmoteDanceOnce = 426;
	FlyDeflect = 427;
	FlyEmoteEatNoSheathe = 428;
	FlyLand = 429;
	FlySubmerge = 430;
	FlySubmerged = 431;
	FlyCannibalize = 432;
	FlyArrowBirth = 433;
	FlyGroupArrowBirth = 434;
	FlyCorpseArrowBirth = 435;
	FlyGuideArrowBirth = 436;
	FlyEmoteTalkNoSheathe = 437;
	FlyEmotePointNoSheathe = 438;
	FlyEmoteSaluteNoSheathe = 439;
	FlyEmoteDanceSpecial = 440;
	FlyMutilate = 441;
	FlyCustomSpell01 = 442;
	FlyCustomSpell02 = 443;
	FlyCustomSpell03 = 444;
	FlyCustomSpell04 = 445;
	FlyCustomSpell05 = 446;
	FlyCustomSpell06 = 447;
	FlyCustomSpell07 = 448;
	FlyCustomSpell08 = 449;
	FlyCustomSpell09 = 450;
	FlyCustomSpell10 = 451;
	FlyStealthRun = 452;
	FlyEmerge = 453;
	FlyCower = 454;
	FlyGrab = 455;
	FlyGrabClosed = 456;
	FlyGrabThrown = 457;
	ToFly = 458;
	ToHover = 459;
	ToGround = 460;
	FlyToFly = 461;
	FlyToHover = 462;
	FlyToGround = 463;
	Settle = 464;
	FlySettle = 465;
	DeathStart = 466;
	DeathLoop = 467;
	DeathEnd = 468;
	FlyDeathStart = 469;
	FlyDeathLoop = 470;
	FlyDeathEnd = 471;
	DeathEndHold = 472;
	FlyDeathEndHold = 473;
	Strangulate = 474;
	FlyStrangulate = 475;
	ReadyJoust = 476;
	LoadJoust = 477;
	HoldJoust = 478;
	FlyReadyJoust = 479;
	FlyLoadJoust = 480;
	FlyHoldJoust = 481;
	AttackJoust = 482;
	FlyAttackJoust = 483;
	ReclinedMount = 484;
	FlyReclinedMount = 485;
	ToAltered = 486;
	FromAltered = 487;
	FlyToAltered = 488;
	FlyFromAltered = 489;
	InStocks = 490;
	FlyInStocks = 491;
	VehicleGrab = 492;
	VehicleThrow = 493;
	FlyVehicleGrab = 494;
	FlyVehicleThrow = 495;
	ToAlteredPostSwap = 496;
	FromAlteredPostSwap = 497;
	FlyToAlteredPostSwap = 498;
	FlyFromAlteredPostSwap = 499;
	ReclinedMountPassenger = 500;
	FlyReclinedMountPassenger = 501;
	Carry2H = 502;
	Carried2H = 503;
	FlyCarry2H = 504;
	FlyCarried2H = 505;
	EmoteSniff = 506;
	EmoteFlySniff = 507;
	AttackFist1H = 508;
	FlyAttackFist1H = 509;
	AttackFist1HOff = 510;
	FlyAttackFist1HOff = 511;
	ParryFist1H = 512;
	FlyParryFist1H = 513;
	ReadyFist1H = 514;
	FlyReadyFist1H = 515;
	SpecialFist1H = 516;
	FlySpecialFist1H = 517;
	EmoteReadStart = 518;
	FlyEmoteReadStart = 519;
	EmoteReadLoop = 520;
	FlyEmoteReadLoop = 521;
	EmoteReadEnd = 522;
	FlyEmoteReadEnd = 523;
	SwimRun = 524;
	FlySwimRun = 525;
	SwimWalk = 526;
	FlySwimWalk = 527;
	SwimWalkBackwards = 528;
	FlySwimWalkBackwards = 529;
	SwimSprint = 530;
	FlySwimSprint = 531;
	MountSwimIdle = 532;
	FlyMountSwimIdle = 533;
	MountSwimBackwards = 534;
	FlyMountSwimBackwards = 535;
	MountSwimLeft = 536;
	FlyMountSwimLeft = 537;
	MountSwimRight = 538;
	FlyMountSwimRight = 539;
	MountSwimRun = 540;
	FlyMountSwimRun = 541;
	MountSwimSprint = 542;
	FlyMountSwimSprint = 543;
	MountSwimWalk = 544;
	FlyMountSwimWalk = 545;
	MountSwimWalkBackwards = 546;
	FlyMountSwimWalkBackwards = 547;
	MountFlightIdle = 548;
	FlyMountFlightIdle = 549;
	MountFlightBackwards = 550;
	FlyMountFlightBackwards = 551;
	MountFlightLeft = 552;
	FlyMountFlightLeft = 553;
	MountFlightRight = 554;
	FlyMountFlightRight = 555;
	MountFlightRun = 556;
	FlyMountFlightRun = 557;
	MountFlightSprint = 558;
	FlyMountFlightSprint = 559;
	MountFlightWalk = 560;
}
"
675,Global Constants - Animation Table 4,"AnimTable4 =
{

	FlySpellKneelLoop = 370;
	FlySpellKneelEnd = 371;
	FlySprint = 372;
	FlyInFlight = 373;
	FlySpawn = 374;
	FlyClose = 375;
	FlyClosed = 376;
	FlyOpen = 377;
	FlyOpened = 378;
	FlyDestroy = 379;
	FlyDestroyed = 380;
	FlyRebuild = 381;
	FlyCustom0 = 382;
	FlyCustom1 = 383;
	FlyCustom2 = 384;
	FlyCustom3 = 385;
	FlyDespawn = 386;
	FlyHold = 387;
	FlyDecay = 388; 
	FlyBowPull = 389;
	FlyBowRelease = 390;
	FlyShipStart = 391;
	FlyShipMoving = 392;
	FlyShipStop = 393;
	FlyGroupArrow = 394;
	FlyArrow = 395;
	FlyCorpseArrow = 396;
	FlyGuideArrow = 397;
	FlySway = 398;
	FlyDruidCatPounce = 399;
--
	BartenderEmoteTalk = 600;
	FlyBartenderEmoteTalk = 601;
	BartenderEmotePoint = 602;
	FlyBartenderEmotePoint = 603;
	BarmaidStand = 604;
	FlyBarmaidStand = 605;
	BarmaidWalk = 606;
	FlyBarmaidWalk = 607;
	BarmaidRun = 608;
	FlyBarmaidRun = 609;
	BarmaidShuffleLeft = 610;
	FlyBarmaidShuffleLeft = 611;
	BarmaidShuffleRight = 612;
	FlyBarmaidShuffleRight = 613;
	BarmaidEmoteTalk = 614;
	FlyBarmaidEmoteTalk = 615;
	BarmaidEmotePoint = 616;
	FlyBarmaidEmotePoint = 617;
	MountSelfIdle = 618;
	FlyMountSelfIdle = 619;
	MountSelfWalk = 620;
	FlyMountSelfWalk = 621;
	MountSelfRun = 622;
	FlyMountSelfRun = 623;
	MountSelfSprint = 624;
	FlyMountSelfSprint = 625;
	MountSelfRunLeft = 626;
	FlyMountSelfRunLeft = 627;
	MountSelfRunRight = 628;
	FlyMountSelfRunRight = 629;
	MountSelfShuffleLeft = 630;
	FlyMountSelfShuffleLeft = 631;
	MountSelfShuffleRight = 632;
	FlyMountSelfShuffleRight = 633;
	MountSelfWalkBackwards = 634;
	FlyMountSelfWalkBackwards = 635;
	MountSelfSpecial = 636;
	FlyMountSelfSpecial = 637;
	MountSelfJump = 638;
	FlyMountSelfJump = 639;
	MountSelfJumpStart = 640;
	FlyMountSelfJumpStart = 641;
	MountSelfJumpEnd = 642;
	FlyMountSelfJumpEnd = 643;
	MountSelfJumpLandRun = 644;
	FlyMountSelfJumpLandRun = 645;
	MountSelfStart = 646;
	FlyMountSelfStart = 647;
	MountSelfFall = 648;
	FlyMountSelfFall = 649;
	Stormstrike = 650;
	FlyStormstrike = 651;
	ReadyJoustNoSheathe = 652;
	FlyReadyJoustNoSheathe = 653;
	Slam = 654;
	FlySlam = 655;
	DeathStrike = 656;
	FlyDeathStrike = 657;
	SwimAttackUnarmed = 658;
	FlySwimAttackUnarmed = 659;
	SpinningKick = 660;
	FlySpinningKick = 661;
	RoundHouseKick = 662;
	FlyRoundHouseKick = 663;
	RollStart = 664;
	FlyRollStart = 665;
	Roll = 666;
	FlyRoll = 667;
	RollEnd = 668;
	FlyRollEnd = 669;
	PalmStrike = 670;
	FlyPalmStrike = 671;
	MonkOffenseAttackUnarmed = 672;
	FlyMonkOffenseAttackUnarmed = 673;
	MonkOffenseAttackUnarmedOff = 674;
	FlyMonkOffenseAttackUnarmedOff = 675;
	MonkOffenseParryUnarmed = 676;
	FlyMonkOffenseParryUnarmed = 677;
	MonkOffenseReadyUnarmed = 678;
	FlyMonkOffenseReadyUnarmed = 679;
	MonkOffenseSpecialUnarmed = 680;
	FlyMonkOffenseSpecialUnarmed = 681;
	MonkDefenseAttackUnarmed = 682;
	FlyMonkDefenseAttackUnarmed = 683;
	MonkDefenseAttackUnarmedOff = 684;
	FlyMonkDefenseAttackUnarmedOff = 685;
	MonkDefenseParryUnarmed = 686;
	FlyMonkDefenseParryUnarmed = 687;
	MonkDefenseReadyUnarmed = 688;
	FlyMonkDefenseReadyUnarmed = 689;
	MonkDefenseSpecialUnarmed = 690;
	FlyMonkDefenseSpecialUnarmed = 691;
	MonkHealAttackUnarmed = 692;
	FlyMonkHealAttackUnarmed = 693;
	MonkHealAttackUnarmedOff = 694;
	FlyMonkHealAttackUnarmedOff = 695;
	MonkHealParryUnarmed = 696;
	FlyMonkHealParryUnarmed = 697;
	MonkHealReadyUnarmed = 698;
	FlyMonkHealReadyUnarmed = 699;
	MonkHealSpecialUnarmed = 700;
	FlyMonkHealSpecialUnarmed = 701;
	FlyingKick = 702;
	FlyFlyingKick = 703;
	FlyingKickStart = 704;
	FlyFlyingKickStart = 705;
	FlyingKickEnd = 706;
	FlyFlyingKickEnd = 707;
	CraneStart = 708;
	FlyCraneStart = 709;
	CraneLoop = 710;
	FlyCraneLoop = 711;
	CraneEnd = 712;
	FlyCraneEnd = 713;
	Despawned = 714;
	FlyDespawned = 715;
}
"
681,Global Constants - Animation Table 5,"AnimTable5 =
{
	FlyMountFlightWalk = 561;
	MountFlightWalkBackwards = 562;
	FlyMountFlightWalkBackwards = 563;
	MountFlightStart = 564;
	FlyMountFlightStart = 565;
	MountSwimStart = 566;
	FlyMountSwimStart = 567;
	MountSwimLand = 568;
	FlyMountSwimLand = 569;
	MountSwimLandRun = 570;
	FlyMountSwimLandRun = 571;
	MountFlightLand = 572;
	FlyMountFlightLand = 573;
	MountFlightLandRun = 574;
	FlyMountFlightLandRun = 575;
	ReadyBlowDart = 576;
	FlyReadyBlowDart = 577;
	LoadBlowDart = 578;
	FlyLoadBlowDart = 579;
	HoldBlowDart = 580;
	FlyHoldBlowDart = 581;
	AttackBlowDart = 582;
	FlyAttackBlowDart = 583;
	CarriageMount = 584;
	FlyCarriageMount = 585;
	CarriagePassengerMount = 586;
	FlyCarriagePassengerMount = 587;
	CarriageMountAttack = 588;
	FlyCarriageMountAttack = 589;
	BartenderStand = 590;
	FlyBartenderStand = 591;
	BartenderWalk = 592;
	FlyBartenderWalk = 593;
	BartenderRun = 594;
	FlyBartenderRun = 595;
	BartenderShuffleLeft = 596;
	FlyBartenderShuffleLeft = 597;
	BartenderShuffleRight = 598;
	FlyBartenderShuffleRight = 599;
	ThousandFists = 716;
	FlyThousandFists = 717;
	MonkHealReadySpellDirected = 718;
	FlyMonkHealReadySpellDirected = 719;
	MonkHealReadySpellOmni = 720;
	FlyMonkHealReadySpellOmni = 721;
	MonkHealSpellCastDirected = 722;
	FlyMonkHealSpellCastDirected = 723;
	MonkHealSpellCastOmni = 724;
	FlyMonkHealSpellCastOmni = 725;
	MonkHealChannelCastDirected = 726;
	FlyMonkHealChannelCastDirected = 727;
	MonkHealChannelCastOmni = 728;
	FlyMonkHealChannelCastOmni = 729;
	Torpedo = 730;
	FlyTorpedo = 731;
}
"
682,Brazie's PetBattle - Dispatcher - Default Result Handlers,"
function GetDefaultHandlerTable(result, index)
	local handlerTable = {
		[PetBattleEffect.SetHealth] = {
			dontWait = false;

			func = set_health_func;
			args = { result.value };
		};
		[PetBattleEffect.AuraApply] = {
			dontWait = true;

			showSuccessOrFail = true;

			func = apply_aura_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID };
		};
		[PetBattleEffect.AuraCancel] = {
			dontWait = true;
			func = aura_change_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID, true };

		};	
		[PetBattleEffect.AuraChange] = {
			dontWait = true;
			func = aura_change_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID, false };
		};	
		[PetBattleEffect.PetSwap] = {
			dontWait = false;

			func = swap_func;
			args = { result };
		};
		[PetBattleEffect.StatusChange] = {
			dontWait = false;
			func = status_change;
			args = { result };
		};
		[PetBattleEffect.SetState] = {
			dontWait = true;
			func = set_state_func;
			args = { result };
		};
		[PetBattleEffect.SetSpeed] = {
			dontWait = true;
			func = set_speed_func;
			args = { result };
		};
		[PetBattleEffect.SetPower] = {
			dontWait = true;
			func = set_power_func;
			args = { result };
		};
		[PetBattleEffect.NPCEmote] = {
			dontWait = false;
			func = npc_emote;
			args = { result };
		};
--[[
		[PetBattleEffect.LockEnabled] = {
			dontWait = true;
			func = spell_lock_enable_func;
			args = { result };
		};
		[PetBattleEffect.LockDisabled] = {
			dontWait = true;
			func = spell_lock_disable_func;
			args = { result };
		};
		[PetBattleEffect.LockModified] = {
			dontWait = true;
			func = spell_lock_modified_func;
			args = { result };
		};
		[PetBattleEffect.CooldownModified] = {
			dontWait = true;
			func = cooldown_modified_func;
			args = { result };
		};
--]]
	};


	return handlerTable;
end"
683,Brazie's PetBattle - Dispatcher - Result - ChangeStatus,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function status_change(targetROID, result)
	if (not result) then
		return
	end

-- 
-- I don't know why this is needed, but Okay!
-- 

--[[
print(""Debugging Status Change Table"");
DEBUG_TABLE(result)
--]]

	local targetPet = ROIDTOPET( targetROID );
	
	-- Save the local state
	if ( result.isTrapped ) then 
		targetPet.isTrapped = result.isTrapped;
	end
--[[
	-- check if we need to perform a special trap visual
	local player = nil
	if (effect.casterPlayerID > 0) then
		player = GetTeamByIndex(effect.casterPlayerID)
	end

	if (player) then
		if (effect.abilityVisualID == player.trapVisualID) then
			TrapCast(effect)
		end
	end
]]-- 
	if ( result.isTrapped ) then 
		local enemyMasterRoid = GETROIDFROMPLAYERID(3-targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;
		--Dispatcher_OwnerTrap( enemyMasterRoid, targetROID );
--print(""I'm the very best."", enemyMasterRoid);
		--scene:WaitTimer(5);
	end
end
"
684,Turn Package - Stampede With Clones,"function Dispatcher_Stampede( clonesPerRow, ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_Stampede"");

		return;
	end 

	local radius = 3; 
	local cloneSpeed = 10;
	local effectTime = 2;

	local chargeWithClones = true;

	local cols = clonesPerRow
	local rows = #turn.effects

--print(""ROWS = "" .. rows .. "", COLS = "" .. cols)

	if ( chargeWithClones ) then 
		rows = rows - 1;
	end

	-- protect against a divide by zero
	if (rows < 1) then
		rows = 1;
	end
	if (cols < 1) then
		cols = 1;
	end

	local frontSpread = radius*2 / rows; 
	local leftSpread = radius*2 / cols; 

	local objectTable = {};

	for i=1,rows do
		for j=1,cols do			
			local col = j
			local row = i;
			
			table.insert(objectTable, {
					index = (i-1)*rows+(j);
					f = -radius + row*frontSpread + math.random( -frontSpread*75,frontSpread*75 )/100, 
					l = -radius + col*leftSpread + math.random( -leftSpread*75,leftSpread*75 )/100
			});
		end
	end

	local pet = ROIDTOUNIT(ROID);
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local targetLocation =  ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )


	local name = ""Clone"";
	local creatureID = pet.creatureID; 
	local scale = 1;

	local createData = ActorCreateData:Default();
	createData.creatureID = creatureID;
	createData.scale = scale;
	createData.interactible = false;

	local petStartingPoint = pet.actor:GetPosition()
	local centerStartingPoint = FastLocalFacingCoordinates( petStartingPoint, target.actor:GetPosition(), Vector:New(-8,0,0) );
	local centerEndingPoint   = FastLocalFacingCoordinates( target.actor:GetPosition(), petStartingPoint, Vector:New(-8,0,0) );

	local cleanUpCheck=function(remove)
		local empty = true
		for i,v in pairs(objectTable) do
			if ( v.actor ) then
				if (remove) then
					v.actor:Despawn()
					v.actor = nil
				else
					local refPos = v.actor:GetPosition()
					refPos.z = v.destination.z
					local remainder = refPos:Dist( v.destination );

					if ( remainder < 2 or not v.actor:IsMoving() ) then 
						v.actor:Despawn();
						v.actor = nil
					else
						-- keep tracking this actor
						empty = false

						-- start fading if we are close to reaching the goal
						if ( remainder < 4 and not v.fading ) then
							v.actor:Fade(0, 0.25);
							v.fading = true
						end
					end
				end
			end	
		end
		return empty
	end

	-- Wave Stuff
	local timeSpent = 0;
	local waveDelay = effectTime/rows;
	local effectDelay = ( target.actor:GetPosition():Dist(petStartingPoint) / cloneSpeed ) + waveDelay;

--	print(""effectDelay = "" .. effectDelay .. "", waveDelay = "" .. waveDelay)

	local petDelay = 0;

	local nextWave = 0

	local waveIndex = 1;
	local effectIndex = 1;

	local delay = 0.05;

	-- Get the pet to charge
	local petStarted = false;
	local petFirstHit = false;
	local petArrived = false;
	local petTeleport = false;
	local petReturned = false;	
	local petDone = false;

	local doEffect = function(updateDelay)
		local effect = turn.effects[effectIndex];
		-- Use this to cap the number of effects rendered
		if ( effectIndex <= 99 ) then 
			-- Attempt to process the package
			local processed = HandleSpellVisualPackage( ROID, effect.firstEvent.abilityVisualID, ""effect"", effect)

			-- fallback handling
			if (processed ~= true) then
				-- Start the effect animation
				DefaultDoEffect(ROID, effect, nil, nil ); 
				-- End
			end
		else
			for index, result in pairs(effect.results) do
				StartEffectProcessing(result)
				SignalEffectProcessed()
			end
		end

		effectIndex = effectIndex + 1;

		if "
685,[1] Turn Package - Stampede With Clones,"( updateDelay ) then 
			effectDelay = timeSpent + waveDelay	/ 2
		end
	end

	-- Play the Cast Visual
	pet.actor:PlaySpellCastVisual(28897)

	while effectIndex <= #turn.effects do

--		print(""Effect Index = "" .. effectIndex)

		if ( timeSpent >= petDelay and not pet.actor:IsCasting()) then 
			if ( not petStarted ) then 
				petStarted = true;
				pet.actor:ClearFacing(); 
				pet.actor:MoveToAbs( centerEndingPoint,  petStartingPoint:Dist( centerEndingPoint ) / cloneSpeed );
				petDelay = 0.1
			elseif ( not petFirstHit ) then  
				local remainder = pet.actor:GetPosition():Dist( target.actor:GetPosition() );
				if ( remainder < 1 ) then
					petFirstHit = true;
					doEffect(false);
					petDelay = timeSpent + petStartingPoint:Dist( centerEndingPoint ) / cloneSpeed;
				else
					petDelay = 0.1;
				end
			elseif ( not petArrived ) then 

				local remainder = pet.actor:GetPosition():Dist( centerEndingPoint );

				if ( remainder < 4 or not pet.actor:IsMoving() ) then 
					--pet.actor:Fade(0,0.5); 
					petArrived = true;
					petDelay = timeSpent + 0.05
				else
					petDelay = timeSpent + 0.05
				end
			elseif ( not petTeleport ) then 

				pet.actor:MoveToAbs(centerStartingPoint, 0);
				petTeleport = true;
				petDelay = timeSpent + 0.05
			elseif ( pet.actor:GetPosition():Dist( centerStartingPoint ) < 1 and not pet.actor:IsMoving() ) then 
				pet.actor:MoveToAbs(petStartingPoint,  2);				
			end
		end

		if ( timeSpent >= nextWave ) then
--			print(""timeSpent = "" .. timeSpent)
			for j = 1, cols do 
				local v = objectTable[(waveIndex-1)*#turn.effects+j];

				if ( v ) then
				--	print(""Actor"")
					if ( v.actor) then
						if (not v.fading) then
							v.actor:Fade(0, 0.25);
							v.fading = true
						end

						v.actor:Despawn()
						v.actor = nil
					--	print(""Leak averted"")
					end

					createData.transform = Transform:New(centerStartingPoint + Vector:New(v.f,v.l,0),0);
					local actor = scene:SpawnActor(createData);

					v.actor = actor;
					v.destination = FastLocalFacingCoordinates( target.actor:GetPosition(), petStartingPoint, Vector:New(-8+v.f,v.l,0) );
					v.actor:Fade(1,0.5);

					local moveTime = v.actor:GetPosition():Dist( v.destination ) / cloneSpeed;

					v.actor:MoveToAbs( v.destination, moveTime )
				else
				--	print(""NO Actor"")
				end
			end

			waveIndex = waveIndex + 1;
			nextWave = timeSpent + waveDelay			
		end
	

		-- Used to filter effects
		if ( timeSpent > effectDelay ) then
			doEffect(true);
		end

		scene:WaitTimer(delay)
		timeSpent = timeSpent + delay;
		cleanUpCheck(false);
	end

	pet.actor:MoveToAbs( petStartingPoint, pet.actor:GetPosition():Dist( petStartingPoint ) / cloneSpeed );
	
	while (cleanUpCheck(true) == false) do
		scene:WaitTimer(0.1)
	end

	-- Wait until the pet is home
	pet.actor:WaitMovementComplete()
	pet.actor:SetFacingToAbs( target.actor:GetPosition() )
	pet.actor:Fade(1,0);

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end "
686,Turn Package - Huge Knockback on Multi Hit,"function Dispatcher_HugeKnockbackOnMultiHit( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_HugeKnockbackOnMultiHit"");

		return;
	end


	-- Behave normally on 1 effect
	if ( #turn.effects == 1 ) then 
		DefaultTurnBehaviour( ROID, isTurn, turn )
	else
		--DefaultTurnBehaviour( ROID, isTurn, turn, Shared_HugeKnockbackSuccess )	
		-- Move into position
		DefaultTurnPreEffectMovement(ROID, turn )

		local turnVisualPlayed = false;

		if ( visuals ) then 
			turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn, Shared_HugeKnockbackSuccess )
		end

		-- Skip the first effect
		for index=2,#turn.effects do 
			local effect = turn.effects[index];
			local effectVisualPlayed

			if ( visuals ) then  
				effectVisualPlayed = DefaultDoEffect(ROID, effect)

				if ( effectVisualPlayed ) then 
					DefaultEffectCleanUp( ROID );
				end
			else
				DefaultDoEffectProcessing( nil, ""effect"", effect ); 
			end
		end

		if ( turnVisualPlayed ) then 
			DefaultTurnCleanUp(ROID);
		end
	end



end

function huge_knockback_successEffect_visual(targetPet, casterPet, result)
	--[[
	local abilityVisualID, spellVisualID = GetVisualData(result)

	if ( not spellVisualID ) then 
		print( ""No Spell Visual ID provided to successEffect_visual"" );
		return;
	end
	]]

	--targetPet.actor:PlaySpellImpactVisual(spellVisualID)
	targetPet.actor:PlaySpellImpactVisual( 6587 ) 

	-- If its not a proc, knock!
	local team = GetTeamByIndex(casterPet.playerID)
	if ( casterPet.slot == team.activePet ) then 
		--PerformTinySlide( targetPet, casterPet ) 
		PerformKnockback( targetPet, casterPet, 3 ) 
	end
end

function Shared_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 2, 0.5 ); 	 

end"
691,Turn Package - Use Secondary Spell Visual on Multi Hit,"function Dispatcher_AlternateVisualOnMultiHit( secondaryVisualID, ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_AlternateVisualOnMultiHit"");

		return; 
	end
	-- Behave normally on 1 effect
	if ( #turn.effects == 1 ) then 
		DefaultTurnBehaviour( ROID, isTurn, turn )

	elseif ( #turn.effects > 1 ) then 
 
		-- Move into position
		DefaultTurnPreEffectMovement(ROID, turn )

		for i=2, #turn.effects do
			-- Handle 2nd effect
			local effect = turn.effects[i];

			local effectVisualPlayed = DefaultTurnOnEffectVisualHandler( ROID, turn, effect, function(...) Dispatcher_AlternateVisualOnMultiHit_Success(secondaryVisualID, ...) end )

			DefaultDoEffectProcessing( nil, ""effect"", effect ); 

			if ( effectVisualPlayed ) then 
				DefaultEffectCleanUp( ROID );
			end
		end
	end

end

function Dispatcher_AlternateVisualOnMultiHit_Success( secondaryVisual, targetROID, casterROID, visualID )
	local targetPet = ROIDTOUNIT( targetROID );

	targetPet.actor:PlaySpellImpactVisual( secondaryVisual ) 

end"
692,Turn Package - Run Turn For The First N Effects,"function Dispatcher_OnlyTurnAnimateTheEffects1toN( n, ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_OnlyTurnAnimateTheEffects1toN"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISUNIT( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	local turnVisualPlayed = false;

	if ( visuals ) then 
		--turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn)
	end

	n = n or #turn.effects

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
		local effectVisualPlayed

		if ( index <= n and visuals ) then
			effectVisualPlayed = DefaultTurnOnEffectVisualHandler( ROID, turn, effect )
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 

			if ( effectVisualPlayed ) then 
				DefaultEffectCleanUp( ROID );
			end
		else
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end
	end

	if ( turnVisualPlayed ) then 
		DefaultTurnCleanUp(ROID);
	end
end"
693,Turn Package - Ion Cannon,"function Dispatcher_BeamKnockback( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	DefaultTurnPreEffectMovement(ROID, turn )

	local turnVisualID = turn.turnVisualID
	local turnVisual = petAbilityVisuals[turnVisualID]
	local turnVisualSpellID = turnVisual.spellVisualID

	local preCastInstance = pet.actor:PlaySpellPreCastVisual(turnVisualSpellID)
	scene:WaitTimer(1)
	pet.actor:ClearSpellVisual( preCastInstance)
	pet.actor:PlaySpellCastVisual(turnVisualSpellID)


	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );
	local targetActor = nil
	if (target) then
		targetActor = target.actor
	end

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	local missBunny = nil

	if ((missed == true) or (not targetActor)) then
		local missBunnyCreateData = ActorCreateData:NewModel(
			""BeamMissTarget"",
			""creature\\invisiblestalker\\invisiblestalker.m2"",
			Transform:New(attackPoint),
			0.25)
		missBunny = scene:SpawnActor(missBunnyCreateData)
		targetActor = missBunny
	end

	local sourceActor = pet.actor
	local channelHandle = sourceActor:PlaySpellChannelVisualAtTargets(turnVisualSpellID, {targetActor})

	scene:WaitTimer(0.05)
	IonCannon_HugeSlideSuccess( targetROID, ROID, turnVisualID )

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		DefaultDoEffectProcessing( nil, ""effect"", effect ); 
	end 

	scene:WaitTimer(0.25)
	sourceActor:ClearSpellChannelVisual(turnVisualSpellID, channelHandle)

	scene:WaitTimer(1);
	if (missBunny) then
		missBunny:Despawn();
	end

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end


-- The below is deprecated, it orients a model and is generally nasty
function Dispatcher_IonCannon( model, ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

--Print(""ION CANNON!"");

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	DefaultTurnPreEffectMovement(ROID, turn )

	local turnVisualID = turn.turnVisualID
	local turnVisual = petAbilityVisuals[turnVisualID]
	local turnVisualSpellID = turnVisual.spellVisualID

	local preCastInstance = pet.actor:PlaySpellPreCastVisual(turnVisualSpellID)
	scene:WaitTimer(1)
	pet.actor:ClearSpellVisual( preCastInstance)
	pet.actor:PlaySpellCastVisual(turnVisualSpellID)


	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )


	-- Step 1: 
	--   Create the transformation matrix 

	local sourcePosition, targetPosition = pet.actor:GetPosition(), attackPoint
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local deltaX = targetPosition.x - sourcePosition.x;
	local deltaY = targetPosition.y - sourcePosition.y;
	local deltaZ = targetPosition.z - sourcePosition.z;

	local arcTan = math.atan2( deltaX, deltaY );
	local yaw = arcTan*180/math.pi;
	local arcTanP = math.atan2( math.sqrt(deltaX*deltaX + deltaY*deltaY), deltaZ );
	local pitch = arcTanP*180/math.pi;

	local zOffset = 0.4
	local "
694,Beast - Banana Barrage,"function Dispatcher_BananaBarrage( model, scale, ROID, isTurn, turn )
	-- Only handle ""turn"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type "",type(isTurn),"" passed to DefaultDoEffect"");

		return;
	end
--print(""banana"");	
	-- NOTE TO SELF:
	-- Upgrade this to drop bananas on each unit getting hit by the effect

	local userROID = TurnToUserROID(turn);

	local turnVisualID = turn.turnVisualID ;

	-- Who's getting hit
	local pet = ROIDTOPET(ROID);
	local targetROID = GetMoveToROID( turn )
	local target = ROIDTOPET( targetROID )

	-- Cast the Cast Visual
	pet.actor:PlaySpellCastVisual(28893)

	-- Bananas! 
	local bananaWaves = 6;
	local bananaRows  = 3;
	local bananaCols  = 3;
	local bananaFallSpeed = 9.8 / 3; -- M / s
	local bananaSpinRate = 720; -- deg / sec
	local bananaFallHeight = 4;

	local bananaRadius = 1;
	local frontSpread = bananaRadius * 2 / bananaRows; 
	local leftSpread = bananaRadius * 2 / bananaCols;
	local upSpread = 1;

	local objectTable = {};

	for w=1,bananaWaves do
		for r=1,bananaRows do
			for c=1,bananaCols do
				local index = c + (r-1)*bananaRows + (w-1)*bananaRows*bananaWaves;
				local f = -bananaRadius 	+ r*frontSpread + math.random( -frontSpread*75,frontSpread*75 )/100;
				local l = -bananaRadius 	+ c*leftSpread + math.random( -leftSpread*75,leftSpread*75 )/100;
				local u = 0 				+ math.random( -upSpread*75,upSpread*75 )/100;

				local pitch = math.random(0,360);
--print(f,"":"",l,"":"",u)
				table.insert(objectTable, {	index=index, f=f, l=l, u=u, pitch=pitch } ); 
			end
		end
	end
	
	-- Important
	local effectDuration = 2;
	local timeSpent = 0;
	local waveIndex = 1;
	
	local delay = 0.05;
	local waveDelay = effectDuration / bananaWaves;
	local effectDelay = waveDelay;
	local nextWaveDelay = 0;
	local nextEffectDelay = waveDelay * bananaWaves / 2;


	-- Change this variable to not show all effects
	local maxEffects = #turn.effects
	local effectIndex = 1;

	-- Handle an effect
	local doEffect = function(updateDelay)
		local effect = turn.effects[effectIndex];

--[[
		print(""Barrage Proc: New Effect"")
		for index, result in pairs(effect.results) do
			print(""Barrage Proc: "" .. tostring(result.instanceID))
		end
]]

		-- Use this to cap the number of effects rendered
		local processed = false
		if ( effectIndex <= maxEffects ) then 

			-- Attempted fix for Bug ID: 339893, uncomment below for original behavior
			DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID);
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 

--[[
			-- Attempt to process the package
			processed = HandleSpellVisualPackage( ROID, effect.firstEvent.abilityVisualID, ""effect"", effect)


			-- fallback handling
			if (processed ~= true) then
				Dispatcher_AddCommandToQueue(ROID, DefaultDoEffect, effect); 
			end
]]
		else
			--(processed ~= true) then
			for index, result in pairs(effect.results) do
				StartEffectProcessing(result)
				SignalEffectProcessed()
			end
		end

		effectIndex = effectIndex + 1;

		if ( updateDelay ) then 
			nextEffectDelay = timeSpent + effectDelay
		end
	end

	-- Create Banana Wave Actors
	local centerStartingPoint = target.actor:GetPosition();
	local bananaCreateData = ActorCreateData:Default()
	bananaCreateData.modelFileID = model or fid(528752);
	bananaCreateData.scale = scale or 1;
	bananaCreateData.groundSnap = false;
	bananaCreateData.interactible = false;
	bananaCreateData.name = ""Banana"";

	local spawnBananaWave = function ()
		for r=1,bananaRows do
			for c=1,bananaCols do 
				local bananaIndex = (waveIndex-1) * bananaWaves * bananaRows + (r-1) * bananaRows + c;
				local v = objectTable[ bananaIndex ];

				if ( v ) then
					local bananaStartLoc = centerStartingPoint + Vector:New(v.f,v.l,v.u+bananaFallHeight);

					"
695,[1] Beast - Banana Barrage,"bananaCreateData.transform = Transform:New( bananaStartLoc, 0 );
					local actor = scene:SpawnActor(bananaCreateData);

					v.actor = actor;
					v.destination = centerStartingPoint + Vector:New(v.f,v.l,v.u-bananaFallHeight);
					v.actor:Fade(1,0.5);

					local moveTime = v.actor:GetPosition():Dist( v.destination ) / bananaFallSpeed;
					local moveData = MoveData:Default(2);

					moveData.isGroundSnapping = true;	
					moveData.pitchControl = MoveRotControl.Angle 
					moveData.posControl = MovePosControl.PointSpeed

					moveData.points[1].pos = bananaStartLoc;
					moveData.points[1].speed = bananaFallSpeed
					moveData.points[1].pitch = 30 * math.fmod( bananaIndex, 12)
					moveData.points[2].pos = v.destination;
					moveData.points[2].speed = bananaFallSpeed
					moveData.points[2].pitch = 30 * math.fmod( bananaIndex, 12) + bananaSpinRate * 2 * bananaFallHeight / bananaFallSpeed;

					v.actor:Move( moveData )
				end
			end
		end

		waveIndex = waveIndex + 1;
		nextWaveDelay = timeSpent + waveDelay	
	end

	-- Despawns unneeded actors
	local cleanUpCheck=function(remove)
		for i=#objectTable,1,-1 do 
			local v = objectTable[i]
			if ( v.actor ) then
				local remainder = v.actor:GetPosition():Dist( v.destination );
				if ( remainder < 1 or not v.actor:IsMoving() ) then 
					v.actor:Despawn();
					if ( remove ) then
						table.remove(objectTable,i);
					end
				end
			elseif (remove) then
				table.remove(objectTable,i);
			end	
		end
	end

	-- Loop over the effects and draw the visuals
	while effectIndex <= #turn.effects do
		if ( timeSpent > nextWaveDelay ) then 
			spawnBananaWave();
		end

		if ( timeSpent > nextEffectDelay ) then 
			doEffect(true);
		end

		scene:WaitTimer(delay)
		timeSpent = timeSpent + delay;
		cleanUpCheck(false);
	end

	-- Reset/reposition
	--Dispatcher_AddCommandToQueue(ROID, Dispatcher_PerformPostAttackCleanup );

end"
697,----- Event Handling -----,"

--
--
-- "
698,Brazie's PetBattle - Library - ROIDs - GetROIDs,"
function GETROIDFROMPLAYERID( playerID )
	local roid = 0;
	if ( playerID == 0 ) then
		roid = roid + ROID_TYPE_WEATHER
	elseif ( playerID == 1 ) then
		roid = roid + ROID_TYPE_PLAYER_1
	elseif ( playerID == 2 ) then
		roid = roid + ROID_TYPE_PLAYER_2
	end
	return roid;

end

function GETROIDFROMPLAYERIDANDSLOT( playerID, petSlot )
	local roid = GETROIDFROMPLAYERID( playerID );
--print(""Getter: "",playerID, "" "", slot);

	if ( roid == ROID_TYPE_WEATHER ) then 
		return roid;
	end

	if ( petSlot == PetBattlePetID.Slot1 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_1
	elseif ( petSlot == PetBattlePetID.Slot2 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_2
	elseif ( petSlot == PetBattlePetID.Slot3 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_3
	elseif ( petSlot == PetBattlePetID.Pad ) then
		roid = roid + ROID_TYPE_PLAYER_PAD
	end

	return roid
end


function PETTOROID( pet ) 
	local roid  = GETROIDFROMPLAYERIDANDSLOT ( pet.playerID, pet.slot );

	return roid;
end

function GETROIDFORPLAYERPAD( playerID ) 
	local roid = GETROIDFROMPLAYERID( playerID )

	return roid + ROID_TYPE_PLAYER_PAD;
end


function GETOBJECTROIDFROMPLAYERIDANDSLOT( playerID, objectSlot )
	local roid = GETROIDFROMPLAYERID( playerID );

	if ( roid == ROID_TYPE_WEATHER ) then 
		return roid;
	end

	if ( objectSlot == 1 ) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_1
	elseif ( objectSlot == 2 ) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_2
	elseif ( objectSlot == 3) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_3
	end

	return roid
end


function TurnToUserROID(turn)
	local userPlayerID = turn.playerID
	local userSlot = turn.petSlot

	local userROID = GETROIDFROMPLAYERIDANDSLOT( userPlayerID, userSlot )

	return userROID;
end

function EffectToROIDs(effect)

	local targets = {}
	
	for index,result in pairs(effect.results) do 
		local roid = ResultToTargetROID(result)
		
		if ( roid ) then
			targets[index] = roid;
		end
	end

	return targets;
end

function ResultToTargetROID(result)
	if ( result.targetPlayerID ) then 
		local targetPlayerID, targetSlot = result.targetPlayerID, result.targetPetSlot

		local roid = GETROIDFROMPLAYERIDANDSLOT( targetPlayerID, targetSlot );

		return roid;
	elseif ( result.swapPlayerID ) then 
		local targetPlayerID, targetSlot = result.swapPlayerID, result.newFrontPet

		local roid = GETROIDFROMPLAYERIDANDSLOT( targetPlayerID, targetSlot );

		return roid;
	else
		print(""ResultToTargetROID Error"");
		print(result);
	end

	return nil;
end

function PBOIDTOROID ( pboid ) 
	if ( pboid == 1 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_1;
	elseif ( pboid == 2 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_2;
	elseif ( pboid == 3 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_3;
	elseif ( pboid == 4 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_1;
	elseif ( pboid == 5 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_2;
	elseif ( pboid == 6 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_3;
	elseif ( pboid == 7 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PAD;
	elseif ( pboid == 8 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PAD;
	elseif ( pboid == 9 ) then
		return ROID_TYPE_WEATHER;
	end
end"
702,Brazie's PetBattle - Dispatcher - Visuals - Success / Fail,"--
-- This block of code is a list of the parallel process hand-offs which are used
-- primarily for results
--


function Dispatcher_DefaultSuccessVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	local victim = ROIDTOUNIT(victimROID)
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	if ( victim and not victim.isPad  ) then
		local distance = 3;
		
		if ( flags.strong ) then 
			distance = 4;
		elseif ( flags.weak ) then
			distance = 1;
		end

		Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactBump, attackerROID, distance ); 	 
	end

end


function Dispatcher_NoKnockbackSuccessVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 

end

function Dispatcher_DefaultFailureVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	DebugPrint(""Dispatcher_DefaultFailureVisual ""..attackerROID.."" v ""..victimROID); 

	if ( flags.blocked ) then 
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformBlock, attackerROID );
	elseif ( flags.immune ) then
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformImmune, attackerROID );
	elseif ( flags.miss ) then
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformMiss,  attackerROID );
	elseif ( flags.dodge ) then
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformDodge, attackerROID );
	end

end

function GetDefaultFailActors( victimROID, attackerROID, debugText )

	DebugPrint(tostring(debugText) .. "" ""..attackerROID.."" v ""..victimROID); 

	local victim = ROIDTOUNIT( victimROID )
	if ((not victim) or not (victim.actor)) then
		victim = ROIDTOOBJ( victimROID )
	end
		
	local attacker = ROIDTOUNIT( attackerROID );

	local victimActor = nil
	if (victim) then
		victimActor = victim.actor
	else
		warning(""ERROR: "" .. tostring(debugText) .. ""missing victim"", ROIDTOSTRING(victimROID) );
	end

	local attackerActor = nil
	if (attacker) then
		attackerActor = attacker.actor
	else
		warning (""ERROR: "" .. tostring(debugText) .. "" missing attacker: "", ROIDTOSTRING(attackerROID) );
	end
	
	local feedbackActor = victimActor
	if (not feedbackActor) then
		feedbackActor = attackerActor
	end

	return victim, victimActor, attacker, attackerActor, feedbackActor
end
"
703,Brazie's PetBattle - Turn - Trap Target - Throw Trap,"function OwnerTrap( ROID, targetROID, success, turn )
	local player = ROIDTOPLAYER( ROID )
	local targetPet = ROIDTOPET( targetROID );

	if (player and player.playerDisplay) then
		

		local trapVisual = petAbilityVisuals[turn.turnVisualID]  --GetAuraAbilityVisual(player.trapAbilityID)
		local trapSpellVisualID = nil
		if (trapVisual) then
			trapSpellVisualID = trapVisual.spellVisualID
		end		

		if (not trapSpellVisualID) or (trapSpellVisualID == 0) then
			print(""ERROR: No trap turn visual! Ability ID: "",turn.turnAbilityID);
			return
		end

		local petTrapModel = fid(630755);
		if ( player.trapAbilityID == PET_TRAP_LEVEL_1 ) then
			petTrapModel = fid(630755);
		elseif ( player.trapAbilityID == PET_TRAP_LEVEL_2 ) then
			petTrapModel = fid(643996);
		elseif ( player.trapAbilityID == PET_TRAP_LEVEL_3 ) then
			petTrapModel = fid(643998);
		end

		--player.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, emote)
		
		-- Play a trap visual
		player.trapPrecastID = player.playerDisplay:PlaySpellPreCastVisual(trapSpellVisualID)

		scene:WaitTimer(trapVisual.castTime)

		player.playerDisplay:ClearSpellVisual(player.trapPrecastID)

		-- 
		if (targetPet) then
			castInstanceID = player.playerDisplay:PlaySpellCastVisualAtPoints(trapSpellVisualID, trapVisual.impactTime, true, { targetPet.actor:GetPosition() } )

			scene:WaitTimer(trapVisual.impactTime-.75)
			local missed = false;

			local waitCondition = function()
				return not player.playerDisplay:HasPendingOrInFlightMissiles(castInstanceID)
			end
			scene:WaitCondition(waitCondition)

			local t = targetPet.actor:GetTransform();
			local trapCreateData = ActorCreateData:NewModel(
				""Trap"",
				petTrapModel,
				t,
				1); -- scale
			trapCreateData.groundSnap = true;
			trapCreateData.interactible = false;

			local trapActor = scene:SpawnActor(trapCreateData);

			targetPet.trap = trapActor;

			if (success) then
				--print(""Succesful Trap"")
				--targetPet.trappedVisualInstance = targetPet.actor:PlaySpellStateVisual(trapSpellVisualID) 
	
				-- Don't move again.
				targetPet.moveSpeed = 0;
				targetPet.isTrapped = true;

				local kit = trapActor:PlayLoopingAnimKit(petBattleAnimKits.CloseClosed);

				scene:WaitTimer(1);
				targetPet.actor:SetScale(0.25);

				trapActor:PlaySpellImpactVisual( 26965 ) 

				targetPet.actor:Fade(0,2);
				scene:WaitTimer(2);

				Dispatcher_OwnerEmote( ROID, Animations.EmoteCheer )

				--trapActor:Despawn();
			else
				local kit = trapActor:PlayLoopingAnimKit(petBattleAnimKits.Custom0Custom1);

				scene:WaitTimer(1);

				local trapMissed = GetGlobalString(""BATTLE_PET_MESSAGE_TRAP_MISSED"")
				targetPet.actor:AddCustomWorldText(WorldText.Damage, true, Color:New(255, 255, 0), trapMissed)
	
				scene:WaitTimer(2);
				trapActor:Despawn();
			end

			-- The pet either dodges or gets hit
			for index=1,#turn.effects do 
				local effect = turn.effects[index];

				DefaultDoEffectProcessing( nil, ""effect"", effect ); 
			end
		end
	end
end"
704,Brazie's PetBattle - Core - Handle Turn,"function Dispatcher_HandleTurn(turn)
	-- Turn Package? Hand-off
	local userROID = GetActorROID(turn);

	-- Attempt to process the package
	local processed = Dispatcher_HandleSpellVisualPackage(userROID, turn.turnVisualID, ""turn"", turn)

	-- Baseline
	if ( not processed ) then 
		Dispatcher_DefaultTurnBehaviour(userROID, turn )
	end
end  

function Dispatcher_HandleSpellVisualPackage( ROID, turnVisualID, ...)
	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnVisualID) then
		turnVisual = petAbilityVisuals[turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		turnVisual.scriptFunction( ROID, ...)
		processed = true;
	end

	return processed
end

function GetActorROID ( turn )
	local userROID = TurnToUserROID(turn);

	local user = ROIDTOUNIT( userROID )
	local player = ROIDTOPLAYER ( userROID );
	
	if ( not player ) then 
		return userROID;
	end

	local pad = player.pets[PetBattlePetID.Pad]

--print(""Checking for clone ""..userROID);
--DEBUG_TABLE(user.states);

	-- Check if Clone Mode is turned on
	--if ( turn.cloned ) then
	if ( pad.states[STATE_CLONE_ACTIVE] and pad.states[STATE_CLONE_ACTIVE] > 0) then

		local cloneAuraID = pad.states[STATE_CLONE_AURAID];

		--print(""Clone Aura ID: "",cloneAuraID);

		-- [ABrazie]: 8/7/2012 - this should be changed to use FindObject( turn.sourceAuraInstanceID )
		-- Requires a code change from Pat MacKellar

		local object, playerID, slot, transform =  FindObjectByAbilityID( user.playerID, cloneAuraID ) 
		local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

		if (not objectROID or objectROID == 0) then
			return userROID;
		else
			return objectROID;
		end
	end

	return userROID;
end

-- This replaces the default behaviour with mine
ProcessRoundTurnGroup = Dispatcher_HandleTurn;"
705,Brazie's PetBattle - Core - Default Effect,"function DefaultDoEffect(ROID, effect, overrideSuccess, overrideFailure)
	-- Attempt to process the package
	local processed = Dispatcher_HandleSpellVisualPackage( ROID, effect.effectVisualID, ""effect"", effect )

	-- fallback handling
	if (processed ~= true) then
		local targets = EffectToROIDs ( effect );

		local effectVisualID = effect.effectVisualID;

		-- Start the effect animation
		if ( effectVisualID and effectVisualID > 0 ) then 
			DefaultEffectVisualHandler( ROID, effect, effectVisualID, overrideSuccess, overrideFailure );
		end

		DefaultDoEffectProcessing( userROID, ""effect"", effect ); 

		-- End
		if ( effectVisualID ) then 
			return true;
		end
	end
end


function DefaultEffectCleanUp(ROID)
	local userPet = ROIDTOUNIT( ROID );
	userPet.actor:WaitCastingComplete();
	scene:WaitTimer(0.25);
end


-- Default Effect Handler

function DefaultEffectVisualHandler(ROID, effect, visualID, overrideSuccess, overrideFailure)
	local targetROID = GetMoveToROID( effect ); 
	local target =  ROIDTOUNIT( targetROID );

--	print(""Daz: HANDLER "" .. visualID)

	local failed, flags = DidItFail ( effect );

	if ( not failed ) then 
		local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
		success ( targetROID, ROID, visualID, flags )
	else
		local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
		failure( targetROID, ROID, visualID, flags )
	end
end"
707,Aquatic - Whirlpool,"function Control_Whirlpool(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(418790);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0.5)
	
	local baseScale = 0.025;
	local bonusScalePerRoundRemaining = -0.01;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0) )

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
708,PetBattle - Dispatcher - Thread Bot 4,"local BOT_ID = 4
ThreadBotMain(BOT_ID)"
709,Reusable Scripts - Blizzard Effect,"function CreateBlizzardEffect( 
			baseModel, 
			baseScale,
			fillModel,
			fillScale, 
			transform,
			width,
			depth, 
			fillRate,
			groundSnap,
			fillGroundSnap,
			lifeSpan
			) 
	lifeSpan = lifeSpan or 0;
	
	local centerCreateData = ActorCreateData:NewModel(
		""Rain"",
		baseModel,
		transform,
		baseScale); -- scale
	if ( groundSnap == nil or groundSnap == true ) then 
		centerCreateData.groundSnap = true;
	else
		centerCreateData.groundSnap = false;
	end
	centerCreateData.interactible = false;

	local groundActor = scene:SpawnActor(centerCreateData);
	local kit = groundActor:PlayLoopingAnimKit(petBattleAnimKits.StandHoldDecay);

	local radiusX = width/2*10
	local radiusY = depth/2*10

	local time = 0;
	local step = 0.25; -- sec
	local objects = {};

	local fillFunction = function(delay)
		delay = delay or 0;
		time = time + delay;

		for i = 1, fillRate do 
			local t = Transform:New( transform.position+Vector:New( math.random(-radiusX,radiusX)/10, math.random(-radiusY,radiusY)/10, 0) );
			local fill = ActorCreateData:NewModel(
				""Rain"",
				fillModel,
				t,
				fillScale); -- scale
			if ( fillGroundSnap == nil or fillGroundSnap == true ) then 
				fill.groundSnap = true;
			else
				fill.groundSnap = false;
			end
			fill.interactible = false;
			local newRain = scene:SpawnActor(fill);

			table.insert(objects, {actor=newRain,birthTime=time});
			scene:WaitTimer(step);
			time = time + step;
		end

		for i=#objects,1,-1 do 
			local object = objects[i];

			if ( not object.birthTime or time > object.birthTime + lifeSpan ) then
				object.actor:Despawn();
				table.remove(objects, i);
			end
		end
	end

	local killFunction = function()
		kit:Stop();
		groundActor:Despawn();

		for i=#objects,1,-1 do 
			local object = objects[i];

			object.actor:Despawn();
			table.remove(objects, i);
		end
	end

	return killFunction, fillFunction, groundActor;

end"
737,Flying - Flying Strike,"
function Dispatcher_FlyingStrike( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

	local turnVisualID = turn.turnVisualID ;
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)
	

	-- Convert to relative space
	local sourcePosition, targetPosition = pet.actor:GetPosition(), attackPoint
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );

	-- New Spline START
	local moveData = MoveData:Default(6)
	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Tangent

	moveData.points[1].pos = Vector:New(0.0, 0, 0);
	moveData.points[1].speed = 10
	moveData.points[2].pos = Vector:New(1.0, 0, 0);
	moveData.points[2].speed = 14
	moveData.points[3].pos = Vector:New(1.3, 0, 0.5);
	moveData.points[3].speed = 7
	moveData.points[4].pos = Vector:New(-0.3, 0, 3.0);
	moveData.points[4].speed = 7
	moveData.points[5].pos = Vector:New(-0.1, 0, 1.0);
	moveData.points[5].speed = 7
	moveData.points[6].pos = Vector:New(0.1, 0, 0.5);
	moveData.points[6].speed = 2

	local stretch = true;
	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )

	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	--Play the Pre-Flight Visual
	pet.actor:PlaySpellCastVisual(28888);

	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	-- New Spline END

	scene:WaitTimer(0.2);

	-- Always remember to clean up after yourself
	DefaultTurnCleanUp(ROID);
end"
738,Brazie's PetBattle - Bezier Curve Generation,"local scaleCreateData = ActorCreateData:Default()
scaleCreateData.name = ""scaleAxis""
scaleCreateData.modelFileID = fid(397940)
scaleCreateData.scale = 1.0
scaleCreateData.interactible = false
scaleCreateData.groundSnap = false;


function Brazie_SplineBuilder( splineData, indexA, indexB ) 
	local finalSpline = {};

	for i=1,#splineData do
		local node = splineData[i];
		local nextNode = splineData[i+1];

		-- If there are spline arms specified, build a bSpline
		if ( nextNode and (node.rightArm and nextNode.leftArm ) ) then 
--print(""SEGMENT: ""..i.. "" handled as bSpline"");
			local bezierInput = {};

			table.insert(bezierInput, node.basePoint);
--[[
		scaleCreateData.transform = Transform:New( node.basePoint, 45 )
		scaleCreateData.scale = 2;
		actor = scene:SpawnActor( scaleCreateData )
--]]
			table.insert(bezierInput, node.rightArm);
			table.insert(bezierInput, nextNode.leftArm);
			table.insert(bezierInput, nextNode.basePoint);


			local output = Build_Bezier( bezierInput, 10 )

			for j=1,#output do 
				local newPoint = output[j];

				if ( #finalSpline > 0 and newPoint:Dist(finalSpline[#finalSpline]) < 0.01 ) then
				else
					table.insert(finalSpline, newPoint );
				end
			end
		-- Otherwise insert splines in a line
		else
			table.insert(finalSpline, node.basePoint);
		end
	end

	return finalSpline;
end

function Bezier_GetFactorial(n)
	if ( n < 0) then 
		print (""ERROR: Factorial < 0 requested in Bezier Curve Calculation"")
		return 1;
	elseif ( n > 32 ) then 
		print (""ERROR: Factorial > 32 requested. Not supported."");
		return 1;
	end

	return FACTORIAL_TABLE[n];
end

function Build_Bezier( arrayOfPoints, numPointsRequested )
	local bezier = {};

	local npts = #arrayOfPoints/2;
	local iCount, jCount;
	local step, t;

	-- Calculate the points on the curve

	iCount = 0;
	t = 0;
	step = 1 / (numPointsRequested-1);

	for i1 = 1, numPointsRequested do 
		if ( (1-t) < 0.00000005 ) then 
			t = 1;
		end

		local u = 1 - t;
		local tt = t * t;
		local uu = u * u;
		local uuu = uu * u;
		local ttt = tt * t;		

		local newPoint = arrayOfPoints[1] * uuu;
		newPoint = newPoint + ( arrayOfPoints[2] * t * uu * 3 );
		newPoint = newPoint + ( arrayOfPoints[3] * u * tt * 3 );
		newPoint = newPoint + ( arrayOfPoints[4] * ttt );

		table.insert(bezier, newPoint);
		
		t = t + step;
	end

	return bezier
end
"
773,Brazie's PetBattle - Result Event Filtering,"	EVENT_DEBUG_MODE = false;
	DEBUG_EVENT_LOG = {};

-- Used for the Brazie Event Filtering System
function FilterResultEventsByType(event)
	local filteredEvent = FilteredEventMetaTable({});
	
	local eventType = event.eventType
	local effectType = event.effectType

	-- Mark the result as a result
	filteredEvent.class = ""result"";

	-- What kind of result
	filteredEvent.eventType = event.eventType;
	filteredEvent.resultType = event.effectType;
	filteredEvent.instanceID = event.instanceID;

	-- darren's fix
	filteredEvent.turnInstanceID = event.turnInstanceID;
	filteredEvent.effectID = event.effectID;
	filteredEvent.stackDepth = event.stackDepth;

	-- Massive Event Logging
	if ( EVENT_DEBUG_MODE ) then 
		local text = ""Unknown"";
		for name,id in pairs( PetBattleEffect ) do 
			if ( event.effectType == id ) then 
				text = name;
			end
		end

		DEBUG_EVENT_LOG[filteredEvent.instanceID] = text 
		print(filteredEvent.instanceID..""> ""..text);
	end

	-- Procs
	filteredEvent.procGroup = event.procGroup;
	filteredEvent.sourceAuraInstanceID = event.sourceAuraInstanceID;

	-- Targetting
	filteredEvent.targetPlayerID = event.targetPlayerID;
	filteredEvent.targetPetSlot = event.targetPetSlot;

	-- Failure reasons
	if ( event.failureReason and event.failureReason > 0 ) then
		filteredEvent.failureReason =  event.failureReason;
	end

	-- Always provide a flags table
	filteredEvent.flags = {}

	-- Only show true flags 
	if ( event.flags ) then
		for  k, v in pairs ( event.flags ) do 
			if ( v ) then
				filteredEvent.flags[k] = v;
			end
		end
	end

	-- battle round effects
	if ( effectType == PetBattleEffect.SetHealth)  then

		filteredEvent.value = event.value;

	elseif (
		effectType == PetBattleEffect.AuraApply or
		effectType == PetBattleEffect.AuraChange or
		effectType == PetBattleEffect.AuraCancel ) then

		filteredEvent.auraAbilityID = event.auraAbilityID
		filteredEvent.auraInstanceID = event.auraInstanceID
		filteredEvent.auraTurnsRemaining = event.auraTurnsRemaining

	elseif ( effectType == PetBattleEffect.PetSwap ) then

		filteredEvent.targetPlayerID = event.targetPlayerID;
		filteredEvent.targetPetSlot = event.targetPetSlot;

	elseif ( effectType == PetBattleEffect.SetState ) then

		filteredEvent.stateID = event.stateID
		filteredEvent.stateValue = event.value;

	elseif ( effectType == PetBattleEffect.StatusChange ) then
		filteredEvent.isTrapped = event.status.isTrapped;
		filteredEvent.isStunned = event.status.isStunned;
		filteredEvent.isSwapLocked = event.status.isSwapLocked;

	elseif ( effectType == PetBattleEffect.SetMaxHealth ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.SetSpeed ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.SetPower ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.NPCEmote ) then
		filteredEvent.value = event.value;
	end

	return filteredEvent;
end

function FilteredEventMetaTable(newTable)

	setmetatable(newTable, { __tostring = FilteredEventMetaTablePrinter })
	
	return newTable;
end
function FilteredEventMetaTablePrinter (tableRef, depth) 
	local output = ""{\n"";
	local indent = depth or 1;
	local indentText = """";

	-- Safety valve
	if ( indent > 2 ) then
		return ""Depth Error"";
	end

	for i=1,indent do 
		indentText = indentText..""  "";
	end

	for key,val in pairs( tableRef ) do 
		local text = tostring(val);
		if ( key == ""resultType"" ) then 
			for name,id in pairs( PetBattleEffect ) do 
				if ( val == id ) then 
					text = name;
				end
			end

		elseif ( key  == ""playerID"" or key  == ""targetPlayerID"" or key  == ""swapPlayerID"" ) then 
			text = tostring(val);
			for name,id in pairs( PetBattlePlayerID ) do 
				if ( val == id ) then 
					"
774,[1] Brazie's PetBattle - Result Event Filtering,"text = name;
				end
			end

		elseif (key  == ""petSlot"" or key  == ""targetPetSlot"" or key == ""oldFrontPet"" or key == ""newFrontPet"" ) then 
			text = tostring(val);

			for name,id in pairs( PetBattlePetID ) do 
				if ( val == id ) then 
					text = name;
				end
			end			

		elseif (key  == ""stateID"" ) then 
			text = tostring(val);
			for name,id in pairs( STATE_LOOKUP ) do 
				if ( val == id ) then 
					text = name;
				end
			end			

		elseif ( type(val) == ""table"" ) then 
			text = FilteredEventMetaTablePrinter(val, indent + 1);
		else
			text = tostring(val);
		end
		output = output..indentText..""K: ""..key.."" V: ""..text..""\n"";
	end

	output = output..""}\n"";

	return output
end


	--
	-- Effect Types:
	--
	-- 

	-- EventTypes
	--
	-- This list is primarily for my own edification
	--
	-- PetBattleEvent.BattleOver
	--	params:
	--		event.winnerID - ID of the winner
	--
	-- PetBattleEvent.BattleResults
	--  params:
	--		event.rewards {
	--				playerID
	--				petSlot 
	--				wasCaptured
	--				newLevel
	--				newXP
	--			}
	--
	--	PetBattleEvent.ObserverChange
	--   param:
	--		- none -
	--
	--	PetBattleEvent.MoveAbilitySelected
	--	 params:
	--		event.abilityVisualID
	--
	--	PetBattleEvent.MovePetSwapSelected
	-- 	 params:
	--		event.newFrontPet
	--  
	-- PetBattleEvent.MoveTrapSelected
	-- 	 params:
	--		event.abilityVisualID - the trap ability visual id
	-- 
	-- PetBattleEvent.RoundEffect
	-- 	 params:
	-- 		- MANY -
	-- 
	-- PetBattleEvent.RoundStart
	--	 params:
	--		roundNumber - the round starting
	--
	-- PetBattleEvent.RoundComplete
	-- 	 params:
	-- 		roundNumber - the round ending
	--		stateChange - the battle state



--DEBUG_TABLE(event);
--[[
for k,v in pairs (PetBattleEffect) do 
	if ( v == effectType ) then 
		print("" ::"",k);
	end
end
--]]
"
775,PetBattle - Ability Data,"
local petAbilities = { }
local petAbilityTurns = { }
local petAbilityEffects = { }
local petAbilityEffectTypes = { }
local petAbilityVisuals = { }

local debugStaticData = false
local debugEffectVisualSearch = false 

function InitStaticData(initialBattleState)
	if (debugStaticData) then
		print(""Init Static Data"")
	end

	for index,ability in pairs(initialBattleState.abilityDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY "" .. ability.ID)
		end
		petAbilities[ability.ID] = ability
	end

	for index,abilityTurn in pairs(initialBattleState.abilityTurnDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY TURN "" .. abilityTurn.ID)
		end
		petAbilityTurns[abilityTurn.ID] = abilityTurn
	end

	for index,abilityEffect in pairs(initialBattleState.abilityEffectDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY EFFECT "" .. abilityEffect.ID)
		end
		petAbilityEffects[abilityEffect.ID] = abilityEffect
	end

	for index,abilityEffectType in pairs(initialBattleState.abilityEffectTypeDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY EFFECT TYPE "" .. abilityEffectType.ID)
		end
		petAbilityEffectTypes[abilityEffectType.ID] = abilityEffectType
	end

	for index,abilityVisual in pairs(initialBattleState.abilityVisualDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY VISUAL "" .. abilityVisual.ID)
		end

		petAbilityVisuals[abilityVisual.ID] = abilityVisual

		-- add any custom script function
		LoadCustomVisualScript(abilityVisual)
	end

end

function GetAbility(abilityID)
	if (abilityID) then
		return petAbilities[abilityID]
	end
end

function GetAbilityTurn(abilityTurnID)
	if (abilityTurnID) then
		return petAbilityTurns[abilityTurnID]
	end
end

function GetAbilityEffect(abilityEffectID)
	if (abilityEffectID) then
		return petAbilityEffects[abilityEffectID]
	end
end

function GetAbilityEffectType(abilityEffectTypeID)
	if (abilityEffectTypeID) then
		return petAbilityEffectTypes[abilityEffectTypeID]
	end
end

function GetAbilityVisual(abilityVisualID)
	if (abilityVisualID) then
		return petAbilityVisuals[abilityVisualID]
	end
end

function GetAllAbilityVisualsFromEffectID(effectID)
	local effectVisual = nil
	local turnVisual = nil
	local abilityVisual = nil
	local effectTypeVisual = nil

	local abilityEffect = GetAbilityEffect(effectID)
	if (abilityEffect) then
		effectVisual = GetAbilityVisual(abilityEffect.visualID)

		-- check parents: turn and then ability
		local abilityTurn = GetAbilityTurn(abilityEffect.turnID)
		if (abilityTurn) then
			turnVisual = GetAbilityVisual(abilityTurn.visualID)

			local ability = GetAbility(abilityTurn.abilityID)
			if (ability) then
				abilityVisual = GetAbilityVisual(ability.visualID)		
			end			
		end

		-- check fallback: effect properties
		local effectType = GetAbilityEffectType(abilityEffect.effectType)
		if (effectType) then
			effectTypeVisual = GetAbilityVisual(effectType.visualID)
		end
	end

	return effectVisual, turnVisual, abilityVisual, effectTypeVisual
end

function GetAbilityVisualFromEffectID(effectID)
	-- Priority rules for picking visuals for an EFFECT:
	--   1. Effect Visual
	--   2. Turn Visual (if not scripted)
	--   3. Ability Visual (if not scripted)
	--   4. Effect Type Visual
	local effectVisual = nil
	local turnVisual = nil
	local abilityVisual = nil
	local effectTypeVisual = nil
	effectVisual, turnVisual, abilityVisual, effectTypeVisual = GetAllAbilityVisualsFromEffectID(effectID)

	if (effectVisual) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" Visual: Using EFFECT Visual ID "" .. effectVisual.ID)
		end
		return effectVisual
	end

	if (turnVisual and turnVisual.scriptFunction == nil) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" "
776,[1] PetBattle - Ability Data,"Visual: Using TURN Visual ID "" .. turnVisual.ID)
		end
		return turnVisual
	end

	if (abilityVisual and abilityVisual.scriptFunction == nil) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" Visual: Using ABILITY Visual ID "" .. abilityVisual.ID)
		end
		return abilityVisual
	end

	if (debugEffectVisualSearch) then
		if (effectTypeVisual) then
			print(""Effect "" .. effectID .. "" Visual: Using EFFECT TYPE visual ID "" .. effectTypeVisual.ID)
		else
			print(""Effect "" .. effectID .. "" Visual: NONE FOUND"")
		end
	end

	return effectTypeVisual
end

function GetAuraAbilityVisualID(auraAbilityID)
	-- in the absence of any other info, search down to the first turn
	local visualID = nil
	local ability = petAbilities[auraAbilityID]
	if (not ability) then
		return visualID
	end

	if (ability.visualID and ability.visualID ~= 0) then
		visualID = ability.visualID
	end

--[[
	if (#ability.turnIDs < 1) then
		return visualID
	end

	local abilityTurn = petAbilityTurns[ ability.turnIDs[1] ]
	if (not abilityTurn) then
		return visualID
	end

	if (abilityTurn.visualID and abilityTurn.visualID ~= 0) then
		visualID = abilityTurn.visualID
	end
]]--
	return visualID
end

function GetAuraAbilityVisual(auraAbilityID)
	local abilityVisualID = GetAuraAbilityVisualID(auraAbilityID)
	if (not abilityVisualID) then
		return nil
	end

	return petAbilityVisuals[abilityVisualID]
end
"
777,[1] PetBattle - Result - Aura Apply,"--------------------------------------------------------------------------------
function RemoveAuraVisual(pet, aura)

	if aura and aura.spellVisualInstanceID then
		pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)                        

		if ( pet.realActor ) then 
			pet.realActor:ClearSpellVisual( aura.spellVisualInstanceID)                        

			-- GIANT HACK BECAUSE WE ARE OUT OF TIME
			pet.realActor:Fade(0,0);
		end
		--aura.spellVisualInstanceID = nil
	end

end

--------------------------------------------------------------------------------
function RemoveAllAuraVisuals(pet)

	for auraInstanceID, aura in pairs(pet.auras) do
		RemoveAuraVisual(pet, aura)
	end

end

--------------------------------------------------------------------------------
function GetAuraOwnerPet(auraInstanceID)
	if (auraInstanceID) then
		return activeAuraPets[auraInstanceID]
	end
end

"
779,Lorewalker Story - S13: Ballad of Liu Lang - MASTER - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

--OnScene start

Wait (2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
lorewalker:BroadcastText(BroadcastType.Say, 63692) -- VO Line 1 (infernals)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene1"" ) --Cue infernals
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(11)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(6)


lorewalker:BroadcastText(BroadcastType.Say, 63693) -- VO Line 2 (Liu Lang Statue appears)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
RunToLocation(lorewalker, 2, 1453.91, 369.731, 550.221, 315.098, true)
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteKneel )
Wait(2)
SendTrigger( ""Scene2"" ) --Cue statue
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
RunToLocation(lorewalker, 2, 1453.33, 370.313, 550.221, 131.948, true)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(1)

lorewalker:BroadcastText(BroadcastType.Say, 63694) -- VO Line 3 (Young Liu Lang riding turtle)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(3)
RunToLocation(lorewalker, 2, 1457.8, 372.666, 550.223, 174.524, true)
SendTrigger( ""Scene3"" ) --Cue young Liu Lang
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(10) --Wait(15)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)

lorewalker:BroadcastText(BroadcastType.Say, 63695) -- VO Line 4 (Liu Lang leaves, then returns on a larger turtle)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteLaugh )
Wait(4)
SendTrigger( ""Scene4"" ) --Cue Adventuring liu lang
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(17)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
Wait(7)

lorewalker:BroadcastText(BroadcastType.Say, 63696) -- VO Line 5 (Older Liu Lang tells stories about trolls and what not)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene5"" ) --Cue sand trolls, tauren, nerubians story within story
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)
SendTrigger( ""Scene5a"") -- Cue Trolls
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)
SendTrigger( ""Scene5b"") -- Cue Tauren
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)
SendTrigger( ""Scene5c"") -- Cue Nerubian
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)
SendTrigger( ""Scene5d"") -- Cue Elf
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(3)

lorewalker:BroadcastText(BroadcastType.Say, 63697) -- VO Line 6 (Exodus of people)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene6"" ) --Cue exodus of people
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(10)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
SendTrigger(""Scene6b"")
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(8)

lorewalker:BroadcastText(BroadcastType.Say, 63698) -- VO Line 7 (Fade out)
PlayOneShotSplitBodyAnim( lorewalker, "
780,Lorewalker Story - S13: Ballad of Liu Lang - Init - Well of Eternity - ZTO,"-- Well of Eternity Test
--wellID = ""world\\dungeon\\wellofeternity\\well_vortex_01.m2""
--well1 = SpawnModelActor( wellID, 1449.43, 374.338, 548, 127.674, .025, false )
--FadeOut(well1, 0)
--Well of Eternity nixed for now until a more clean way can be found to make it visible.

-- Infernals
infernalID = 64651
infernal1 = SpawnActor( infernalID, 1468.95, 369.331, 560.099, 165.699, 1, false )
infernal2 = SpawnActor( infernalID, 1464.83, 376.725, 560.229, 218.56, 1, false )
infernal3 = SpawnActor( infernalID, 1457.12, 370.088, 560.148, 216.31, 1, false )
infernal4 = SpawnActor( infernalID, 1456.69, 361.758, 560.065, 216.31, 1, false )
infernal5 = SpawnActor( infernalID, 1447.4, 362.56, 559.955, 216.31, 1, false )
infernal6 = SpawnActor( infernalID, 1448.62, 354.688, 559.897, 216.31, 1, false )
--infernal7 = SpawnActor( infernalID, 1468.95, 369.331, 560.099, 165.699, 1, false )
--infernal8 = SpawnActor( infernalID, 1468.95, 369.331, 560.099, 165.699, 1, false )
--infernal9 = SpawnActor( infernalID, 1468.95, 369.331, 560.099, 165.699, 1, false )
FadeOut(infernal1, 0)
FadeOut(infernal2, 0)
FadeOut(infernal3, 0)
FadeOut(infernal4, 0)
FadeOut(infernal5, 0)
FadeOut(infernal6, 0)

-- Fog Wall
fogwallID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\SPIRITWALL\\PA_SpiritWall_Wide.M2""
fogwall = SpawnModelActor( fogwallID, 1460.82, 361.962, 550.222, 132.452, 3, false )
FadeOut(fogwall, 0)

-- Mannoroth
mannorothID = 18075
mannoroth = SpawnActor( mannorothID, 1461.09, 367.759, 550.222, 165.295, 3, false )
FadeOut(mannoroth, 0)"
782,Brazie's PetBattle - Turn - Trap Target,"function Trap_Target(ROID, isTurn, turn)
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Trap_Target"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local turnVisualPlayed = false;

	local turnVisualID = turn.turnVisualID ;
	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 
		
		-- Perform the Turn Visual
		local masterTargets = {}

		for index=1,#turn.effects do 
			local effect = turn.effects[index];
			local targets = EffectToROIDs ( effect );

			for k,v in pairs(targets) do 
				table.insert(masterTargets, v);
			end
		end

		--Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )
		local success = turn.effects[1].results[1].isTrapped;
--print(""Trap success:  ""..tostring(success),ROID);
		OwnerTrap( ROID, masterTargets[1], success, turn )

		return true;
	end
end"
783,Brazie's PetBattle - End Game - Victory,"function VictoryCeremony(winnerID)
	local player = GetTeamByIndex(winnerID)

	if ( not player ) then 
		return
	end

	-- Only dance in PvP games
	if (  ROIDTOPLAYER( GETROIDFROMPLAYERID( 3-winnerID ) ).playerDisplay ) then  
		Dispatcher_OwnerEmote( GETROIDFROMPLAYERID( winnerID ), Animations.EmoteDance )
	end

	for i=1,3 do 
		if ( player.pets[i] ) then 
			local playerPet = player.pets[i] 

			if ( playerPet.currentHealth > 0 ) then 
				playerPet.actor:Fade(1.0, 0.5)
				playerPet.actor:ClearFacing();
				MoveToVictoryLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local facingSet = { }
	local waitCondition = function()
		-- all actors must be renderable
		for i=1,3 do
			local pet = player.pets[i] 
			if pet and pet.actor:IsMoving() then
				return false
			elseif pet and not facingSet[i] then
				local team = GetTeamByIndex(pet.playerID)
				pet.actor:ClearFacing();
				pet.actor:SetFacing(team.teamFacing);
				facingSet[i] = true
			end
		end
		return true
	end

	scene:WaitCondition(waitCondition)
	if ( player.playerDisplay ) then 
		for i=1,3 do
			local pet = player.pets[i] 
			if ( pet ) then
				local team = GetTeamByIndex(pet.playerID)

				pet.actor:ClearFacing();
				pet.actor:SetFacing(team.teamFacing);
				--pet.actor:SetFacingToTarget(player.pets[0].actor, Vector:New());
			end
		end
	end
end

function MoveToVictoryLocation(pet)
	
	local team = GetTeamByIndex(pet.playerID)
	local spot = team.home + VICTORY_PET_OFFSETS[pet.backlineIndex] + Vector:New(1,0,0);
	local distance = pet.actor:GetPosition():Dist(spot);

	if ( pet.moveSpeed > 0 ) then
		pet.actor:MoveToAbs(spot, distance/pet.moveSpeed)
	end
end


function VictoryCeremonyCleanUp(winnerID)
	SignalEffectProcessed()
end"
784,---- Libraries ----,
785,----- Parallel Dispatcher -----,
786,Brazie's PetBattle - End Game - Victory - Kirby Dance,"function VictoryCeremony_PerformDance(player)
	local loc1 = player.home + BACKROW_PET_OFFSETS[1] + Vector:New(1,0,0)
	local loc2 = player.home + BACKROW_PET_OFFSETS[2] + Vector:New(1,0,0)
	local loc3 = player.home + BACKROW_PET_OFFSETS[3] + Vector:New(1,0,0)

	local actor1
	local actor2
	local actor3

	if ( player.pets[1] ) then 
		actor1 = player.pets[1].actor;
	end
	if ( player.pets[2] ) then 
		actor2 = player.pets[2].actor;
	end
	if ( player.pets[3] ) then 
		actor3 = player.pets[3].actor;
	end

	
	Dance_HopLeft(actor1, loc1);
	Dance_HopLeft(actor2, loc2);
	Dance_HopLeft(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);

	Dance_StepRight(actor1, loc1);
	Dance_StepRight(actor2, loc2);
	Dance_StepRight(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);

	Dance_HopRight(actor1, loc1);
	Dance_HopRight(actor2, loc2);
	Dance_HopRight(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);

	Dance_StepLeft(actor1, loc1);
	Dance_StepLeft(actor2, loc2);
	Dance_StepLeft(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);
--[[
	local t = 0;
	local step = 0.01;

	actor1:ClearFacing();
	actor2:ClearFacing();
	actor3:ClearFacing();

	while ( t < 1 ) do
		t = t + step;
		local rate = 360*10

		Dance_Spin(actor1, rate, step);
		Dance_Spin(actor2, rate, step);
		Dance_Spin(actor3, rate, step);

		scene:WaitTimer(step);
	end
]]
end


function Dance_StepLeft(actor, loc)
	local time = 0.5;
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveToAbs( actor:GetPosition()+Vector:New(0,2,0) , time )
end

function Dance_StepRight(actor, loc)
	local time = 0.5;
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveToAbs( actor:GetPosition()+Vector:New(0,-2,0) , time )
end

function Dance_HopLeft(actor, loc)
	local time = 0.5;
	local spline = BuildKnockbackSpline(actor:GetPosition(), actor:GetPosition()+Vector:New(0,2,0) , time)

	actor:SetSnapToGround(false)
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveSplineAbs( spline , time )
end

function Dance_HopRight(actor, loc)
	local time = 0.5;
	local spline = BuildKnockbackSpline(actor:GetPosition(), actor:GetPosition()+Vector:New(0,-2,0) , time)

	actor:SetSnapToGround(false)
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveSplineAbs( spline , time )
end

function Dance_Recover(actor, loc)
	actor:WaitMovementComplete()
	actor:SetSnapToGround(false)
end

function Dance_Spin(actor, rate, deltaT)
	local transform = actor:GetTransform();
	local yaw = transform.yaw + rate * deltaT;

	local x,y,z = math.cos(yaw/180*math.pi), math.sin(yaw/180*math.pi), 0 
print(yaw);
	actor:SetTransform(transform);
	actor:SetFacingToAbs(actor:GetPosition() + Vector:New(x,y,z) );
end"
787,Lorewalker Story - S12: Shaohao - Init - Scene 1 - ZTO,"-- Spawn Northgate
mogugateID = 65961
gate = SpawnActor( mogugateID, 1459.95, 363.063, 550.223, 132.849, 0.5, true ) -- Spawn Northgate
FadeOut( gate, 0 )
local actorAuraVisual = gate:PlaySpellStateVisual(24803) --Cast Actor Visual

-- Spawn Trees
--treeID = 64673
treeID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_ForestTree01.M2""
tree1 = SpawnModelActor(treeID, 1464.21, 370.688, 550.222, 132.849, 0.5, true) --Spawn Tree Stage Right
tree2 = SpawnModelActor(treeID, 1449.97, 359.043, 550.222, 132.849, 0.5, true) --Spawn Tree Stage Left
tree3 = SpawnModelActor(treeID, 1452.42, 386.093, 548.573, 293.725, 0.1, true) --Spawn Tree Stage Left
tree4 = SpawnModelActor(treeID, 1467.6, 386.666, 548.572, 235.9, 0.1, true) --Spawn Tree Stage Left
tree5 = SpawnModelActor(treeID, 1437.5, 372.708, 548.574, 76.5991, 0.1, true) --Spawn Tree Stage Left
tree6 = SpawnModelActor(treeID, 1434.98, 364.122, 548.573, 80.1989, 0.1, true) --Spawn Tree Stage Left
FadeOut( tree1, 0 )
FadeOut( tree2, 0 )
FadeOut( tree3, 0 )
FadeOut( tree4, 0 )
FadeOut( tree5, 0 )
FadeOut( tree6, 0 )


-- Spawn shrubs
shrubID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\GOLDENBUSH\\VEB_goldenbush01.M2""
shrub1 = SpawnModelActor(shrubID, 1448.12, 365, 550.222, 115.524, 0.1, true)
shrub2 = SpawnModelActor(shrubID, 1458.78, 378.54, 550.222, 174.474, 0.1, true)
shrub3 = SpawnModelActor(shrubID, 1452.18, 367.387, 550.222, 134.199, 0.1, true)
shrub4 = SpawnModelActor(shrubID, 1445.84, 368.96, 550.222, 79.5234, 0.1, true)
shrub5 = SpawnModelActor(shrubID, 1456.87, 381.416, 550.221, 224.226, 0.1, true)
shrub6 = SpawnModelActor(shrubID, 1444.39, 370.38, 550.222, 31.6265, 0.1, true)

FadeOut( shrub1, 0 )
FadeOut( shrub2, 0 )
FadeOut( shrub3, 0 )
FadeOut( shrub4, 0 )
FadeOut( shrub5, 0 )
FadeOut( shrub6, 0 )"
788,Lorewalker Story - S12: Shaohao - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

--OnScene start

--Wait (2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
lorewalker:BroadcastText(BroadcastType.Say, 63733) -- VO Line 1 (Introduction)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
RunToLocation( lorewalker, 2, 1459.12, 374.651, 550.222, 132.849 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
SendTrigger( ""Scene1"" ) --Cue Door and trees
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(3)

lorewalker:PlayLoopingAnimKit(3047)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
lorewalker:BroadcastText(BroadcastType.Say, 63734) -- VO Line 2 (The Statues appear)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene2"" ) --Cue Statues
Wait(5)
lorewalker:PlayOneShotAnimKit(1530)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:PlayOneShotAnimKit(1530)
Wait (5)

lorewalker:BroadcastText(BroadcastType.Say, 63735) -- VO Line 3 (Gesture)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait (7)

lorewalker:BroadcastText(BroadcastType.Say, 63736) -- VO Line 4 (Opening Doors)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
SendTrigger( ""Scene3"" ) --Cue Door opening
--Wait (22)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:PlayOneShotAnimKit(1530)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(7)

lorewalker:BroadcastText(BroadcastType.Say, 63737) -- VO Line 5
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene4"" ) --Cue Colorification
--Wait (10)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)

lorewalker:BroadcastText(BroadcastType.Say, 63738) -- VO Line 6
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene5"" ) --Cue the Emperor Becoming one with the earth
--Wait (22)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:StopAnimKit(3047)
PlayOneShotSplitBodyAnim( lorewalker, Animations.SitGroundUp )
Wait(3)
RunToLocation( lorewalker, 2, 1455.39, 373.931, 550.221, 210.276)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)

lorewalker:BroadcastText(BroadcastType.Say, 63739) -- VO Line 7
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""endScene"" ) --Cue clean stage
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2.9)
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.305, 93.5645)
--Wait (5)
--[[
lorewalker:StopAnimKit(3047)
PlayOneShotSplitBodyAnim( lorewalker, Animations.SitGroundUp )
Wait(3)
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.305, 93.5645)
]]--
Wait(1)
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
789,Lorewalker Story - S12: Shaohao - Scene 1 - Gate and Trees - ZTO,"-- Cue trees and gate
WaitForTrigger( ""Scene3"" )
local actorAuraVisual = tree1:PlaySpellStateVisual(28556) --Cast Actor Visual
local actorAuraVisual2 = tree2:PlaySpellStateVisual(28556) --Cast Actor Visual
tree1:Fade(.75, 2)
tree2:Fade(.75, 2)

--FadeIn( tree1, 2 )
--FadeIn( tree2, 2 )
gate:PlayLoopingAnimKit(2209)
Wait(2)
gate:Fade( 0.75, 2 )

--Scene 4
--WaitForTrigger( ""Scene3"" )
--PlayOneShotSplitBodyAnim( gate, Animations.Open )
Wait(20)
FadeOut( gate, 2 )


-- Scene 5 - Recolor trees
WaitForTrigger( ""Scene4"" )
Wait(2)
local actorAuraVisual3 = light_cl:PlaySpellStateVisual(26615) --Cast Actor Visual
local actorAuraVisual4 = light_cc:PlaySpellStateVisual(26615) --Cast Actor Visual
local actorAuraVisual5 = light_cr:PlaySpellStateVisual(26615) --Cast Actor Visual
tree1: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
tree2: ClearSpellVisual( actorAuraVisual2) --Clear Actor Visual
tree1:Fade(1, 1)
tree2:Fade(1, 1)
shrub1:Fade(1, 1)
shrub2:Fade(1, 1)
shrub3:Fade(1, 1)
shrub4:Fade(1, 1)
shrub5:Fade(1, 1)
shrub6:Fade(1, 1)
tree3:Fade(1, 1)
tree4:Fade(1, 1)
tree5:Fade(1, 1)
tree6:Fade(1, 1)

shrub1:PlaySpellStateVisual(26615)
shrub2:PlaySpellStateVisual(26615)
shrub3:PlaySpellStateVisual(26615)
shrub4:PlaySpellStateVisual(26615)
shrub5:PlaySpellStateVisual(26615)
shrub6:PlaySpellStateVisual(26615)

shrub1:SetScale(1)
shrub2:SetScale(1)
shrub3:SetScale(1.2)
shrub4:SetScale(0.8)
shrub5:SetScale(1.1)
shrub6:SetScale(0.9)
tree3:SetScale(1)
tree4:SetScale(1)
tree5:SetScale(1)
tree6:SetScale(1)



-- Clean up
WaitForTrigger( ""endScene"" )
tree1: Despawn()
tree2: Despawn()
tree3: Despawn()
tree4: Despawn()
tree5: Despawn()
tree6: Despawn()
shrub1: Despawn()
shrub2: Despawn()
shrub3: Despawn()
shrub4: Despawn()
shrub5: Despawn()
shrub6: Despawn()
gate: Despawn()"
790,Lorewalker Story - S12: Shaohao - Init - Scene 2 - ZTO,"-- Spawn statues
statueSerpentID = ""WORLD\\EXPANSION04\\DOODADS\\VALLEYOFFOURWINDS\\ANCESTORPILLARS\\VFW_AncestorPillar_Dragon.M2""
statueCraneID = ""WORLD\\EXPANSION04\\DOODADS\\VALLEYOFFOURWINDS\\ANCESTORPILLARS\\VFW_AncestorPillar_Crane.M2""
statueOxID = ""WORLD\\EXPANSION04\\DOODADS\\VALLEYOFFOURWINDS\\ANCESTORPILLARS\\VFW_AncestorPillar_Ox.M2""
statueTigerID = ""WORLD\\EXPANSION04\\DOODADS\\VALLEYOFFOURWINDS\\ANCESTORPILLARS\\VFW_AncestorPillar_Tiger.M2""

--statueSerpentID = 64668
--statueCraneID = 64666
--statueOxID = 64667
--statueTigerID = 64665
statueSerpent = SpawnModelActor( statueSerpentID, 1458.09, 372.094, 550.221, 310.766, 2, false ) -- Spawn Statue: Serpent
statueCrane = SpawnModelActor( statueCraneID, 1446.7, 362.078, 550.221, 132.849, 2, false ) -- Spawn Statue: Crane
statueOx = SpawnModelActor( statueOxID, 1461.67, 375.626, 550.221, 312.623, 2, false ) -- Spawn Statue: Ox
statueTiger = SpawnModelActor( statueTigerID, 1450.65, 365.497, 550.221, 132.849, 2, false ) -- Spawn Statue: Tiger
FadeOut( statueSerpent, 0 )
FadeOut( statueCrane, 0 )
FadeOut( statueOx, 0 )
FadeOut( statueTiger, 0 )"
791,Lorewalker Story - S12: Shaohao - Scene 2 - Statues - ZTO,"-- Fade in Statues on command
WaitForTrigger( ""Scene2"" )
local actorAuraVisual1 = statueSerpent:PlaySpellStateVisual(28556) --Cast Actor Visual
local actorAuraVisual2 = statueCrane:PlaySpellStateVisual(28556) --Cast Actor Visual
local actorAuraVisual3 = statueOx:PlaySpellStateVisual(28556) --Cast Actor Visual
local actorAuraVisual4 = statueTiger:PlaySpellStateVisual(28556) --Cast Actor Visual
statueSerpent:Fade(.75, 2)
Wait(5)
statueCrane:Fade(.75, 2)
Wait(5)
statueOx:Fade(.75, 2)
Wait(5)
statueTiger:Fade(.75, 2)


WaitForTrigger( ""Scene4"" )
statueSerpent: ClearSpellVisual( actorAuraVisual1) --Clear Actor Visual
statueSerpent:Fade( 1, 2)
statueCrane: ClearSpellVisual( actorAuraVisual2) --Clear Actor Visual
statueCrane:Fade( 1, 2)
statueOx: ClearSpellVisual( actorAuraVisual3) --Clear Actor Visual
statueOx:Fade( 1, 2)
statueTiger: ClearSpellVisual( actorAuraVisual4) --Clear Actor Visual
statueTiger:Fade( 1, 2)

-- Clean up when done
WaitForTrigger( ""endScene"")
statueSerpent: Despawn()
statueCrane: Despawn()
statueOx: Despawn()
statueTiger: Despawn()"
792,Lorewalker Story - S12: Shaohao - Init - Scene 3 - Shaohao - ZTO,"-- Spell preloads
meditationSpellID = 121801
colorSpellID = 75988
blastSpellID = 34944

-- Shaohao Init
shaohaoID = 61925
shaohao = SpawnActor( shaohaoID, 1461.07, 362.177, 550.221, 132.849, 1, false ) -- Spawn Shaohao

FadeOut( shaohao, 0 )
"
793,Lorewalker Story - S12: Shaohao - Scene 3 - Shaohao - ZTO,"-- Scene3: Fade in Shaohao
WaitForTrigger( ""Scene3"" )
shaohao:PlayLoopingAnimKit(3227)
--local actorAuraVisual = shaohao:PlaySpellStateVisual(28556) --Cast Actor Visual
local actorAuraVisual2 = shaohao:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
Wait(10)
FadeIn( shaohao, 2 )
Wait(5)
RunToLocation( shaohao, 1.5, 1452.35, 371.443, 550.221, 132.849 )

--Command Colorification
WaitForTrigger( ""Scene4"" )
CastSpellAtActor(shaohao, shaohao, blastSpellID)

-- Scene 5: Becomes one with the land
WaitForTrigger( ""Scene5"" )
PlayLoopingSplitBodyAnim( shaohao, Animations.SitGround )
--shaohao: ClearSpellVisual( actorAuraVisual) --Clear Actor Visual
local meditateAuraVisual = shaohao:PlaySpellStateVisual(25064) --Cast Actor Visual
RunToLocation( shaohao, 1.5, 1452.35, 371.443, 554.221, 132.849 )
FadeOut( shaohao, 6 )

-- Clean up when done
WaitForTrigger( ""endScene"")
shaohao: Despawn()
"
794,Lorewalker Story - Stage Lights - Clean-up - ZTO,"WaitForTrigger( ""endScene"" ) -- On clean up, despawn bunnies
FadeOut(light_ul, 1)
FadeOut(light_ur, 1)
FadeOut(light_uc, 1)
FadeOut(light_cr, 1)
FadeOut(light_cl, 1)
FadeOut(light_cc, 1)
FadeOut(light_dc, 1)
light_ul: Despawn()
light_ur: Despawn()
light_uc: Despawn()
light_cr: Despawn()
light_cl: Despawn()
light_cc: Despawn()
light_dc: Despawn()"
801,Lorewalker Story - S6: Mantid - Graveyard - Init - ZTO,"-- Spawn tombstones
gravestoneLargeID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\GRAVESTONE\\PA_Graveyard_Focal_01.M2""
gravestoneMediumID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\GRAVESTONE\\PA_GraveStone_01.M2""
gravestoneSmallID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\GRAVESTONE\\PA_Graveyard_Headstone_04.M2""

gravestoneLarge = SpawnModelActor( gravestoneLargeID, 1459.85, 363.031, 550.1, 132.849, 1, false ) -- Spawn Northgate
gravestoneMedium1 = SpawnModelActor( gravestoneMediumID, 1448.86, 358.525, 550.222, 83.8981, 1, false ) -- Spawn Northgate
gravestoneMedium2 = SpawnModelActor( gravestoneMediumID, 1465.58, 373.06, 550.222, 176.373, 1, false ) -- Spawn Northgate
gravestoneSmall1 = SpawnModelActor( gravestoneSmallID, 1457.83, 376.229, 550.221, 132.849, 1, false ) -- Spawn Northgate
gravestoneSmall2 = SpawnModelActor( gravestoneSmallID, 1448.35, 363.599, 550.221, 132.849, 1, false ) -- Spawn Northgate
gravestoneSmall3 = SpawnModelActor( gravestoneSmallID, 1462.18, 369.179, 550.221, 144.843, 1, false ) -- Spawn Northgate
FadeOut( gravestoneLarge, 0 )
FadeOut( gravestoneMedium1, 0 )
FadeOut( gravestoneMedium2, 0 )
FadeOut( gravestoneSmall1, 0 )
FadeOut( gravestoneSmall2, 0 )
FadeOut( gravestoneSmall3, 0 )
"
802,Lorewalker Story - S6: Mantid - Set Stage - ZTO,"-- Wait to be called, slowly fade in
WaitForTrigger(""cueGraves"")
FadeIn( gravestoneSmall2, 4 )
Wait(1)
FadeIn( gravestoneMedium1, 4 )
Wait(1)
FadeIn( gravestoneSmall3, 4 )
Wait(1)
FadeIn( gravestoneMedium2, 4 )
Wait(1)
FadeIn( gravestoneSmall1, 4 )
Wait(1)
FadeIn( gravestoneLarge, 4 )
Wait(2)
FadeIn( incense1, 2)
FadeIn( incense2, 2)
FadeIn( incense3, 2)"
803,Lorewalker Story - S6: Mantid - Stage Clean-Up - ZTO,"--Wait to be cleared
WaitForTrigger(""fadeOutAll"")
FadeOut( spirit1, 1 )
FadeOut( spirit2, 1 )
FadeOut( spirit3, 1 )
FadeOut( spirit4, 1 )
FadeOut( spirit5, 1 )
FadeOut( spirit6, 1 )
Wait(2)
FadeOut( incenseBurn1, 3 )
FadeOut( incenseBurn2, 3 )
FadeOut( incenseBurn3, 3 )
FadeOut( gravestoneLarge, 3 )
FadeOut( gravestoneMedium1, 3 )
FadeOut( gravestoneMedium2, 3 )
FadeOut( gravestoneSmall1, 3 )
FadeOut( gravestoneSmall2, 3 )
FadeOut( gravestoneSmall3, 3 )

--Despawns
gravestoneLarge: Despawn()
gravestoneMedium1: Despawn()
gravestoneMedium2: Despawn()
gravestoneSmall1: Despawn()
gravestoneSmall2: Despawn()
gravestoneSmall3: Despawn()
incense1: Despawn()
incense2: Despawn()
incense3: Despawn()
incenseBurn1: Despawn()
incenseBurn2: Despawn()
incenseBurn3: Despawn()
spirit1: Despawn()
spirit2: Despawn()
spirit3: Despawn()
spirit4: Despawn()
spirit5: Despawn()
spirit6: Despawn()"
804,Lorewalker Story - S6: Mantid - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start

Wait (2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
lorewalker:BroadcastText(BroadcastType.Say, 63708) -- VO Line 1 (Introduction)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteNo)
SendTrigger( ""cueGraves"" ) --Cue gravestones
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(12)
Wait(5)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteTalkQuestion)
Wait(5)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteNo) 
Wait(2)

lorewalker:BroadcastText(BroadcastType.Say, 63709) -- VO Line 2 (cueGravestones)
lorewalker:PlayOneShotAnimKit(3229)
local torchVisual = lorewalker:PlaySpellStateVisual(26620) --Cast Actor Visual
lorewalker:StopAnimKit(3229)
lorewalker:PlayLoopingAnimKit(3044)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)
 

lorewalker:BroadcastText(BroadcastType.Say, 63710) -- VO Line 3 (Serpent's Spine history)
lorewalker:PlayOneShotAnimKit(3229)
RunToLocation( lorewalker, 2, 1448.17, 365.537, 550.222, 3.09248 )
--lorewalker:PlayOneShotAnimKit(3229)
RunToLocation( lorewalker, 2, 1451.14, 365.824, 550.222, 130.893 )
--lorewalker:PlayOneShotAnimKit(3229)
--Wait(14)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(5)
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteTalkQuestion)
Wait(4)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips


lorewalker:BroadcastText(BroadcastType.Say, 63711) -- VO Line 4 (shrug)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteNo)
PlayOneShotSplitBodyAnim( lorewalker, Animations.Attack1H )
FadeOut(incense1, 1)
FadeIn(incenseBurn1, 1)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)


lorewalker:BroadcastText(BroadcastType.Say, 63712) -- VO Line 5 (Where did they come from?)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteTalkQuestion)
RunToLocation( lorewalker, 2, 1459.08, 372.702, 550.222, 130.893)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(6)


lorewalker:BroadcastText(BroadcastType.Say, 63713) -- VO Line 6 (shrug)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteNo)
PlayOneShotSplitBodyAnim( lorewalker, Animations.Attack1H )
FadeOut(incense3, 1)
FadeIn(incenseBurn3, 1)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)


lorewalker:BroadcastText(BroadcastType.Say, 63714) -- VO Line 7 (friends with mantid?)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteTalkQuestion)
RunToLocation( lorewalker, 2, 1454.8, 368.631, 550.221, 134.042)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(8)


lorewalker:BroadcastText(BroadcastType.Say, 63715) -- VO Line 8 (nobody befriends mantid)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteNo)
PlayOneShotSplitBodyAnim( lorewalker, Animations.Attack1H )
FadeOut(incense2, 1)
FadeIn(incenseBurn2, 1)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
SendTrigger( ""cueSpirits"" )
Wait(4)

--Snuff out candle, all props vanish
lorewalker:BroadcastText(BroadcastType.Say, 63716) -- VO Line 9 (snuff out candle)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteYes)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(20)
lorewalker:PlayOneShotAnimKit(3229)
Wait(5)
Wait(5)
"
805,Lorewalker Story - S6: Mantid - Insense - Init - ZTO,"-- Spawn tombstones
incenseUnlitID = ""world\\expansion04\\doodads\\pandaren\\incense\\pa_incensestick_01unburnt.m2""
incenseBurnID = ""world\\expansion04\\doodads\\pandaren\\incense\\pa_incensestick_01burn2.m2""

incense1 = SpawnModelActor( incenseUnlitID, 1449.28, 367.555, 550.221, 129.318, 1, false ) -- Spawn Northgate
incense2 = SpawnModelActor( incenseUnlitID, 1452.98, 370.588, 550.221, 129.318, 1, false ) -- Spawn Northgate
incense3 = SpawnModelActor( incenseUnlitID, 1457.39, 374.595, 550.221, 129.318, 1, false ) -- Spawn Northgate
incenseBurn1 = SpawnModelActor( incenseBurnID, 1449.28, 367.555, 550.221, 129.318, 1, false ) -- Spawn Northgate
incenseBurn2 = SpawnModelActor( incenseBurnID, 1452.98, 370.588, 550.221, 129.318, 1, false ) -- Spawn Northgate
incenseBurn3 = SpawnModelActor( incenseBurnID, 1457.39, 374.595, 550.221, 129.318, 1, false ) -- Spawn Northgate
FadeOut( incense1, 0 )
FadeOut( incense2, 0 )
FadeOut( incense3, 0 )
FadeOut( incenseBurn1, 0 )
FadeOut( incenseBurn2, 0 )
FadeOut( incenseBurn3, 0 )
"
806,Lorewalker Story - S6: Mantid - Spirits - Init - ZTO,"--Pandaren Spirits
spirits1ID = 61918
spirits2ID = 61908

spirit1 = SpawnActor( spirits1ID, 1459.02, 364.294, 552, 131.118, 1, false )  -- Spirit
spirit2 = SpawnActor( spirits2ID, 1463.89, 377.045, 552, 177.693, 1, false )  -- Spirit
spirit3 = SpawnActor( spirits1ID, 1448.04, 360.181, 552, 90.3925, 1, false )  -- Spirit
spirit4 = SpawnActor( spirits2ID, 1451.14, 353.774, 552, 90.3925, 1, false )  -- Spirit
spirit5 = SpawnActor( spirits1ID, 1464.91, 368.344, 552, 152.492, 1, false )  -- Spirit
spirit6 = SpawnActor( spirits2ID, 1462.41, 366.315, 552, 157.668, 1, false )  -- Spirit

-- Setup light
local actorAuraVisual1 = spirit1:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual2 = spirit2:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual3 = spirit3:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual4 = spirit4:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual5 = spirit5:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual6 = spirit6:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual7 = spirit1:PlaySpellStateVisual(24803) --Cast Stage Dressing Visual
local actorAuraVisual8 = spirit2:PlaySpellStateVisual(24803) --Cast Stage Dressing Visual
local actorAuraVisual9 = spirit3:PlaySpellStateVisual(24803) --Cast Stage Dressing Visual
local actorAuraVisual10 = spirit4:PlaySpellStateVisual(24803) --Cast Stage Dressing Visual
local actorAuraVisual11 = spirit5:PlaySpellStateVisual(24803) --Cast Stage Dressing Visual
local actorAuraVisual12 = spirit6:PlaySpellStateVisual(24803) --Cast Stage Dressing Visual

--Fadeouts
FadeOut( spirit1, 0 )
FadeOut( spirit2, 0 )
FadeOut( spirit3, 0 )
FadeOut( spirit4, 0 )
FadeOut( spirit5, 0 )
FadeOut( spirit6, 0 )"
807,Lorewalker Story - S6: Mantid - Spirits - ZTO,"--Wait for cue
WaitForTrigger( ""cueSpirits"" )

spirit1: PlayLoopingSplitBodyAnim( Animations.SwimIdle )
spirit2: PlayLoopingSplitBodyAnim( Animations.SwimIdle )
spirit3: PlayLoopingSplitBodyAnim( Animations.SwimIdle )
spirit4: PlayLoopingSplitBodyAnim( Animations.SwimIdle )
spirit5: PlayLoopingSplitBodyAnim( Animations.SwimIdle )
spirit6: PlayLoopingSplitBodyAnim( Animations.SwimIdle )

--Fade in and Elevate
FadeIn(spirit1, 2)
spirit1:MoveToRel(Vector:New(10,0,0), 0.2) 
FadeIn(spirit2, 2)
spirit2:MoveToRel(Vector:New(10,0,0), 0.2) 
FadeIn(spirit3, 2)
spirit3:MoveToRel(Vector:New(10,0,0), 0.2) 
FadeIn(spirit4, 2)
spirit4:MoveToRel(Vector:New(10,0,0), 0.2) 
FadeIn(spirit5, 2)
spirit5:MoveToRel(Vector:New(10,0,0), 0.2) 
FadeIn(spirit6, 2)
spirit6:MoveToRel(Vector:New(10,0,0), 0.2) 

--Move a short distance
--RunToLocation( spirit1, 0.5, 1456.76, 366.972, 552, 131.118 )
--RunToLocation( spirit2, 0.5, 1460.14, 377.196, 552, 177.693 )
--RunToLocation( spirit3, 0.5, 1448.02, 363.563, 552, 90.3925 )
--RunToLocation( spirit4, 0.5, 1451.1, 358.906, 552, 90.3925 )
--RunToLocation( spirit5, 0.5, 1460.89, 370.44, 552, 152.492 )
--RunToLocation( spirit6, 0.5, 1458.15, 368.611, 552, 150.243 )

--Wait for cue
WaitForTrigger( ""fadeOutAll"" )
FadeOut(spirit1, 0)
FadeOut(spirit2, 0)
FadeOut(spirit3, 0)
FadeOut(spirit4, 0)
FadeOut(spirit5, 0)
FadeOut(spirit6, 0)"
808,Brazie's PetBattle - Intro,"local cameraBunny

--------------------------------------------------------------------------------
local oldBattleMusicIDs = { 28753, 28754, 28755 }

local wildBattleMusicIDs = { 34084, 34085 }
local npcBattleMusicIDs = { 34088 }
local pvpBattleMusicIDs = { 34086, 34087 }

function PlayBattleMusic()
	if (isObserved == true) then
		local opponent = teams[3-observingPlayerIndex]

		local musicIDs = oldBattleMusicIDs
		if (opponent.npcCreatureID > 0 or opponent.npcDisplayID > 0) then
			musicIDs = npcBattleMusicIDs
		elseif (opponent.isNPC) then
			musicIDs = wildBattleMusicIDs
		else
			musicIDs = pvpBattleMusicIDs
		end

		battleScene:PlayPetBattleMusic(musicIDs[math.random(#musicIDs)]);
	end
end

function BattleIntro()

	PlayBattleMusic();

	Dispatcher_AddCommandToQueue(ROID_TYPE_WEATHER, Dispatcher_BattleIntro ); 	 
end

function Dispatcher_BattleIntro(ROID)

	SetCamera(1)
	scene:WaitTimer(1.0)
	SetCamera(2)
	scene:WaitTimer(0.3)
	StartCameraBunny(0.45)
	scene:WaitTimer(0.5)
	scene:SetCamera(0, 1.0, nil, nil)

	battleScene:SignalOpeningComplete()

	-- fade in the pets
	FadeInAllPets(initialFadeInTime)

end
"
809,----- Scripted Sequences -----,"

--
--
-- "
810,Kun Lai Summit - Horde Hub Swap Scene - Clone 01 - JSB,"
Wait( 1 )

clone:PlaySoundKitStereo(32996, true)

clone:PlaySoundKitStereo(33002, false)

-- wait before running in
Wait(30)
FadeIn( clone, 0 )
RunToLocation( clone, 5, 2271.47, 909.58, 481.131, 264.167 )
"
811,Flying - Missile Barrage,"function Dispatcher_MissileBarrage( ROID, isTurn, turn)
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
--print(""ROID: ""..ROID.."" User ROID: ""..userROID);
--print(""Turn: "",turn.playerID,"" : "",turn.petSlot,"" ? "",turn.firstEvent );

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )


	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	-- Target!
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )


	local turnVisualID = turn.turnVisualID ;

	local missileSpeed = 30; 

	local waves = #turn.effects
	local effectDuration = 3;
	local timeSpent = 0;
	local waveIndex = 1;
	
	local delay = 0.05;
	local waveDelay = effectDuration / waves;
	local effectDelay = waveDelay;
	local nextWaveDelay = 0;
	local nextEffectDelay = target.actor:GetPosition():Dist(pet.actor:GetPosition()) / missileSpeed;

	-- Missiles
	local numMissiles = 6
	local shootMissileWave = function(casterCastingPet, abilityVisualID)
		local points = {};
		local petPos = pet.actor:GetPosition()
		local targetPos = target.actor:GetPosition()
		local base = targetPos + petPos:UnitVectorFromAtoB(targetPos )*2;

		for i=1,numMissiles do
			table.insert( points, base + Vector:New( math.random(-1,1), math.random(-3,3), math.random(1,3) ) );
		end

		local abilityVisual = petAbilityVisuals[abilityVisualID]
		if not abilityVisual then
			return casterCastingPet
		end

		local spellVisualID = abilityVisual.spellVisualID
		local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
		scene:WaitTimer(abilityVisual.castTime)
		casterCastingPet.actor:ClearSpellVisual( preCastInstance)
		
		casterCastingPet.actor:PlaySpellCastVisualAtPoints(spellVisualID, missileSpeed, false, points );
	
		nextWaveDelay = timeSpent + waveDelay	
	end

	-- Change this variable to not show all effects
	local maxEffects = #turn.effects
	local effectIndex = 1;

	-- Handle an effect
	local doEffect = function(updateDelay)
		local effect = turn.effects[effectIndex];
		-- Use this to cap the number of effects rendered
		if ( effectIndex <= maxEffects ) then 
			-- Attempt to process the package
			local processed = HandleSpellVisualPackage( ROID, effect.firstEvent.abilityVisualID, ""effect"", effect)

			-- fallback handling
			if (processed ~= true) then
				-- Start the effect animation
				DefaultDoEffect(ROID, effect, nil, nil ); 
				-- End
			end
		else
			for index, result in pairs(effect.results) do
				StartEffectProcessing(result)
				SignalEffectProcessed()
			end
		end

		effectIndex = effectIndex + 1;

		if ( updateDelay ) then 
			nextEffectDelay = timeSpent + effectDelay
		end
	end


	-- Loop over the effects and draw the visuals
	while effectIndex <= #turn.effects do
		if ( timeSpent > nextWaveDelay ) then 
			shootMissileWave(pet, turnVisualID);
		end

		if ( timeSpent > nextEffectDelay ) then 
			doEffect(true);
		end

		scene:WaitTimer(delay)
		timeSpent = timeSpent + delay;
		--cleanUpCheck(false);
	end



	if ( turnVisualPlayed ) then 
		DefaultTurnCleanUp(ROID);
	end
end"
813,Lorewalker Story - S3: Hozen - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start

Wait (2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
lorewalker:BroadcastText(BroadcastType.Say, 63740) -- VO Line 1 (Introduction Cue Father)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )

FadeIn(light_cc, 2)

SendTrigger( ""Scene1"" ) --Cue father and son
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(12)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(5)
Wait(2)


lorewalker:BroadcastText(BroadcastType.Say, 63741) -- VO Line 2 (Watch the hozen)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene2"" ) -- Father leads boy out to Hozen village
RunToLocation( lorewalker, 2, 1450.64, 360.529, 550.221, 88.0085) --Cross to Upstage left
Wait(4) 
lorewalker:PlayOneShotAnimKit(3229)
FadeOut(light_cc, 2)
FadeIn(light_uc, 2)
FadeIn(light_ul, 2)
FadeIn(light_ur, 2)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)


lorewalker:BroadcastText(BroadcastType.Say, 63742) -- VO Line 3 (Cue Hozen Schpeel)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(19)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(10)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)

lorewalker:BroadcastText(BroadcastType.Say, 63743) -- VO Line 4 (Son talks to father)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene4"" ) -- Hozen fade out, father returns, boy turns to father
FadeOut(light_uc, 2)
FadeOut(light_ul, 2)
FadeOut(light_ur, 2)
FadeIn(light_dc, 2)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(6)

lorewalker:BroadcastText(BroadcastType.Say, 63744) -- VO Line 5 (Son tells story: garden, candle, school)
lorewalker:PlayLoopingAnimKit(3229)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
RunToLocation( light_ur, 8, 1467.46, 372.666, 550.222, 266.904)
--RunToLocation( light_cl, 8, 1467.46, 372.666, 550.222, 181.71)
RunToLocation( light_uc, 8, 1458.39, 362.847, 550.222, 221.745)
lorewalker:StopAnimKit(3229)
SendTrigger( ""Scene5"" ) -- Fade in Garden scene, Fade in candle scene, fade in school
FadeOut(light_dc, 2)
SendTrigger( ""Scene5a"" )
FadeIn(light_ur, 2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(6)
SendTrigger( ""Scene5b"" ) 
--FadeIn(light_cl, 2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
--lorewalker:PlayOneShotAnimKit(3229)
Wait(2)
FadeOut(light_ur, 2)
Wait(6)
SendTrigger( ""Scene5c"" )
FadeIn(light_uc, 2)
lorewalker:PlayLoopingAnimKit(3229)
RunToLocation(lorewalker, 2, 1459.64, 363.41, 550.223, 132.659)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
lorewalker:StopAnimKit(3229)
--Wait(10)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(1)

lorewalker:BroadcastText(BroadcastType.Say, 63745) -- VO Line 6 (clean stage)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
--FadeOut(light_ur, 2)
--FadeOut(light_cl, 2)
FadeOut(light_uc, 2)
FadeIn(light_dc, 2)
SendTrigger( ""Scene6"" ) -- Clean all but boy and father
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(7)

lorewalker:BroadcastText(BroadcastType.Say, 63746) -- VO Line 7 (Cho wraps up)
"
814,Flying - Predatory Strike,"function Dispatcher_PredatoryStrike( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	-- Peform a normal swoop on 1 effect
	if ( #turn.effects == 1 and turn.effects[1].results[1].value > 0 ) then 
		--DefaultTurnBehaviour( ROID, isTurn, turn )
		Dispatcher_FlyingStrike( ROID, isTurn, turn )
		return;
	end

	SendEverybodyHome();

	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Target!
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

	-- START SPLINE ATTACK
	local moveData = MoveData:Default(7)

	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Tangent

	moveData.points[1].pos = Vector:New(0.0, 0, 0);
	moveData.points[1].speed = 10
	moveData.points[2].pos = Vector:New(0.5, 0, 5);
	moveData.points[2].speed = 7
	moveData.points[3].pos = Vector:New(1.0, 0, 0);
	moveData.points[3].speed = 14
	moveData.points[4].pos = Vector:New(1.8, 0, 0.5);
	moveData.points[4].speed = 7
	moveData.points[5].pos = Vector:New(0.5, 0, 3.0);
	moveData.points[5].speed = 7
	moveData.points[6].pos = Vector:New(0.05, 0, 1.0);
	moveData.points[6].speed = 7
	moveData.points[7].pos = Vector:New(0.0, 0, 0);
	moveData.points[7].speed = 2

	-- Convert to relative space
-- [ABrazie]: 8/7/2012 - no longer necessary with Spline_Attack2
--[[
	local sourcePosition, targetPosition = pet.actor:GetPosition(), attackPoint

	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	for _,vect in pairs( moveData.points ) do
		vect.pos = LocalToWorldCoords( vect.pos );
	end
--]]
	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	local stretch = true;
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	-- END SPLINE ATTACK

	DefaultTurnCleanUp(ROID);
end"
816,Lorewalker Story - S3: Hozen - Init - Father and Son - ZTO,"-- Father and Son
fatherID = 64675
sonID = 64674
father = SpawnActor( fatherID, 1456.41, 370.171, 550.221, 221.972, 1, true ) -- Spawn Father center stage
son = SpawnActor( sonID, 1453.83, 367.771, 550.222, 131.762, 1, true ) -- Spawn Son center stage
FadeOut( father, 0 )
FadeOut( son, 0 )

-- Small Father and Son Montage
lorewalkerAmaiCreatureID = 64875
sonBookID = ""world\\expansion04\\doodads\\pandaren\\books\\pa_book_open_01.m2""
sonCandleID = ""world\\expansion04\\doodads\\pandaren\\shrine_props\\pa_candle_01.m2""
fatherSm1 = SpawnActor( fatherID, 1464.77, 374.356, 550.222, 185.986, .75, true ) -- Spawn Father for farming mini-scene
fatherSm2 = SpawnActor( fatherID, 1449.71, 361.6, 550.221, 183.737, .75, true ) -- Spawn Father for candle mini-scene
fatherSm3 = SpawnActor( lorewalkerAmaiCreatureID, 1457.64, 366.412, 550.222, 222.662, .75, true ) -- Spawn Father for school mini-scene
sonSm1 = SpawnActor( sonID, 1463.67, 371.56, 550.221, 123.195, .75, true ) -- Spawn Son for farming mini-scene
sonSm2 = SpawnActor( sonID, 1446.29, 361.374, 550.222, 24.6614, .75, true ) -- Spawn Son for candle mini-scene
sonSm3 = SpawnActor( sonID, 1454.95, 364.218, 550.222, 41.9866, .75, true ) -- Spawn Son for school mini-scene
sonBook = SpawnModelActor( sonBookID, 1455.79, 365.113, 550.221, 220.862, .5, true) -- Spawn book for mini-scene
sonCandle = SpawnModelActor( sonCandleID, 1447.95, 361.218, 550.222, 89.2371, 1, true) -- Spawn book for mini-scene
FadeOut( fatherSm1, 0 )
FadeOut( fatherSm2, 0 )
FadeOut( fatherSm3, 0 )
FadeOut( sonSm1, 0 )
FadeOut( sonSm2, 0 )
FadeOut( sonSm3, 0 )
FadeOut( sonBook, 0 )
FadeOut( sonCandle, 0 )

--Plants
miniFarmModelID = ""WORLD\\EXPANSION04\\DOODADS\\VALLEYOFFOURWINDS\\FIELD\\V4W_Field_TurnipWhite02.M2""
plants = SpawnModelActor( miniFarmModelID, 1465.79, 371.148, 549.622, 30, 0.1, false)
FadeOut( plants, 0 )
"
817,Lorewalker Story - S3: Hozen - Father - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = father:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for first scene
WaitForTrigger(""Scene1"")
PlayLoopingSplitBodyAnim( father, Animations.EmoteNo )
FadeIn(father, 2)

--Wait for Scene 2
WaitForTrigger(""Scene2"")
StopLoopingSplitBodyAnim( father, Animations.EmoteNo )
PlayOneShotSplitBodyAnim( father, Animations.EmotePoint )
Wait(2)
--RunToLocation( father, 2, 1455.8, 370.448, 550.221, 311.296)
--Wait(2)
RunToLocation( father, 2, 1461.1, 375.247, 550.221, 247.823)


--Wait for Scene 2
WaitForTrigger(""Scene4"")
Wait(2)
PlayOneShotSplitBodyAnim( father, Animations.EmoteTalk )
RunToLocation( father, 2, 1453.06, 373.011, 550.221, 232.973)

-- Wait for end of Scene
WaitForTrigger(""Scene7"")
FadeOut(father, 2)
father: Despawn()
"
818,Lorewalker Story - S3: Hozen - Son - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = son:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene1
WaitForTrigger(""Scene1"")
FadeIn(son, 2)

PlayLoopingSplitBodyAnim( son, Animations.Whirlwind )

--Wait for Scene2
WaitForTrigger(""Scene2"")
StopLoopingSplitBodyAnim( son, Animations.Whirlwind )
RunToLocation( son, 4, 1454.32, 369.226, 550.221, 43.0962)
Wait(1)
--RunToLocation( son, 2, 1455.42, 366.996, 550.221, 311.296)
RunToLocation( son, 4, 1459.44, 374.548, 550.221, 247.823)

--Wait for Scene 4
WaitForTrigger(""Scene4"")
RunToLocation( son, 4, 1450.77, 370.336, 550.221, 39.9229)


--Wait for Scene 5
WaitForTrigger(""Scene5"")
PlayLoopingSplitBodyAnim( son, Animations.EmoteTalk )

--Wait for Scene 6
WaitForTrigger(""Scene6"")
StopLoopingSplitBodyAnim( son, Animations.EmoteTalk )
Wait(1)
PlayOneShotSplitBodyAnim( son, Animations.EmoteBeg )
PlayOneShotSplitBodyAnim( son, Animations.EmoteTalk )


--Wait for End of scene
WaitForTrigger(""Scene7"")
FadeOut(son, 2)
son: Despawn()"
819,Flying - Nocturnal Strike,"function Dispatcher_NocturnalStrike( secondaryVisualID, ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_AlternateVisualOnMultiHit"");

		return; 
	end
	-- Behave normally on 1 effect
	if ( #turn.effects == 1 ) then 
		--DefaultTurnBehaviour( ROID, isTurn, turn )
		Dispatcher_FlyingStrike( ROID, isTurn, turn )
	elseif ( #turn.effects > 1 ) then 
 
		-- Move into position
		DefaultTurnPreEffectMovement(ROID, turn )


		for i=2, #turn.effects do
			-- Handle 2nd effect
			local effect = turn.effects[i];

			local effectVisualPlayed = DefaultTurnOnEffectVisualHandler( ROID, turn, effect, function(...) pred_secondary_successEffect_visual(secondaryVisualID, ...) end )

			DefaultDoEffectProcessing( nil, ""effect"", effect ); 

			if ( effectVisualPlayed ) then 
				DefaultEffectCleanUp( ROID );
			end
		end
	end

end

function pred_secondary_successEffect_visual( targetROID, casterROID, secondaryVisual )
	local targetPet = ROIDTOPET( targetROID );

	targetPet.actor:PlaySpellImpactVisual( secondaryVisual ) 

end
"
820,Lorewalker Story - S3: Hozen - Init - Hozen Village - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
-- Hozen Villagers
hozenID = 61906
hozen1 = SpawnActor( hozenID, 1456.51, 353.824, 551.808, 106.973, 1, true ) -- Hozen Offstage UL
hozen2 = SpawnActor( hozenID, 1471.08, 365.068, 551.808, 155.059, 0.9, true ) -- Hozen Offstage UR
hozen3 = SpawnActor( hozenID, 1469.35, 380.997, 550.221, 238.084, 1.1, true ) -- Hozen Offstage R
hozen4 = SpawnActor( hozenID, 1444.47, 353.639, 554.648, 44.359, 1, true ) -- Hozen Offstage L on box
hozen5 = SpawnActor( hozenID, 1467.12, 381.646, 554.648, 190, 1, true ) -- Hozen Offstage L on box
hozen6 = SpawnActor( hozenID, 1435.29, 384.268, 548.017, 314.583, 1, true ) -- Hozen Offstage L on box
hozen7 = SpawnActor( hozenID, 1440.48, 391.279, 548.017, 297.708, 1, true ) -- Hozen Offstage L on box
hozenScout = SpawnActor( hozenID, 1458.22, 362.747, 550.221, 100.159, 1, true ) -- Hozen UC
FadeOut( hozen1, 0 )
FadeOut( hozen2, 0 )
FadeOut( hozen3, 0 )
FadeOut( hozen4, 0 )
FadeOut( hozen5, 0 )
FadeOut( hozen6, 0 )
FadeOut( hozen7, 0 )
FadeOut( hozenScout, 0 )
local actorAuraVisual = hozen1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = hozen2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = hozen3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = hozen4:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = hozen5:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = hozen6:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = hozen7:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = hozenScout:PlaySpellStateVisual(24803) --Cast Actor Visual


-- Hozen Village
hozenFireID = ""world\\expansion04\\doodads\\Hozu\\hz_camp_fire_01.m2""
hozenTotemID = ""world\\expansion04\\doodads\\Hozu\\Totem\\hz_totem_feralhozu.m2""
hozenTorchID = ""world\\expansion04\\doodads\\Hozu\\Torches\\hz_torchjungle_03.m2""

hozenTotem1 = SpawnModelActor( hozenTotemID, 1469.7, 372.571, 550.221, 170.198, 5, true)
hozenTotem2 = SpawnModelActor( hozenTotemID, 1447.58, 354.253, 550.222, 87.6232, 5, true)
hozenFire1 = SpawnModelActor( hozenFireID, 1452.03, 363.351, 550.222, 108.098, 1, true)
hozenFire2 = SpawnModelActor( hozenFireID, 1463.54, 369.6, 550.222, 160.973, 1, true)
hozenTorch1 = SpawnModelActor( hozenTorchID, 1445.77, 360.969, 550.222, 53.4232, 1, true)
hozenTorch2 = SpawnModelActor( hozenTorchID, 1460.34, 378.032, 550.221, 201.248, 1, true)

LorewalkerActor(hozenTotem1)
LorewalkerActor(hozenTotem2)
LorewalkerActor(hozenFire1)
LorewalkerActor(hozenFire2)
LorewalkerActor(hozenTorch1)
LorewalkerActor(hozenTorch2)

FadeOut( hozenTotem1, 0)
FadeOut( hozenTotem2, 0)
FadeOut( hozenFire1, 0)
FadeOut( hozenFire2, 0)
FadeOut( hozenTorch1, 0)
FadeOut( hozenTorch2, 0)


-- Farm Mini-Scene
hozenSm1 = SpawnActor( hozenID, 1472.2, 375.626, 553.065, 217.937, 1, true ) -- Hozen on box
hozenSm2 = SpawnActor( hozenID, 1460.31, 358.857, 551.808, 41.5364, 1, true ) -- Hozen on stage
hozenSm3 = SpawnActor( hozenID, 1467.11, 381.951, 554.648, 276.775, 1, true ) -- Hozen on stage
FadeOut( hozenSm1, 0)
FadeOut( hozenSm2, 0)
FadeOut( hozenSm3, 0)

-- Candle Mini-Scene
hozenSm4 = SpawnActor( hozenID, 1443.03, 355.818, 552.49, 41.2278, 1, true ) -- Hozen on box
hozenSm5 = SpawnActor( hozenID, 1444.54, 353.555, 554.648, 57.4994, 1, true ) -- Hozen on stage
hozenSm6 = SpawnActor( hozenID, 1440.74, 357.854, 554.93, 10.4744, 1, true ) -- Hozen on stage
FadeOut( hozenSm4, 0)
FadeOut( hozenSm5, 0)
FadeOut( hozenSm6, 0)"
821,Lorewalker Story - S3: Hozen - Clean-up All - ZTO,"--Wait for EndScene
WaitForTrigger(""endScene"")

--Village Scene
hozen1: Despawn()
hozen2: Despawn()
hozen3: Despawn()
hozen4: Despawn()
hozen5: Despawn()
hozen6: Despawn()
hozen7: Despawn()
hozenScout: Despawn()
hozenTotem1: Despawn()
hozenTotem2: Despawn()
hozenFire1: Despawn()
hozenFire2: Despawn()
hozenTorch1: Despawn()
hozenTorch2: Despawn()

--Mini-scene actors
fatherSm1: Despawn()
fatherSm2: Despawn()
fatherSm3: Despawn()
sonSm1: Despawn()
sonSm2: Despawn()
sonSm3: Despawn()
sonBook: Despawn()
sonCandle: Despawn()"
822,Lorewalker Story - S3: Hozen - HozenScout - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--Wait for Scene 2
PlayLoopingSplitBodyAnim( hozenScout, Animations.CustomSpell05 )
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn( hozenScout, 2)
Wait(2)
StopLoopingSplitBodyAnim( hozenScout, Animations.CustomSpell05 )
RunToLocation( hozenScout, 2, 1456.36, 364.067, 550.221, 130.984)
PlayOneShotSplitBodyAnim( hozenScout, Animations.CustomSpell06 )
Wait(2)
RunToLocation( hozenScout, 4, 1445.87, 351.521, 550.221, 225.484)
FadeOut( hozenScout, 2)
SendTrigger(""Scene3"")"
823,Lorewalker Story - S3: Hozen - Hozen1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn( hozen1, 2)
Wait(1)
RunToLocation( hozen1, 4, 1452.62, 360.169, 550.222, 100.834)
PlayLoopingSplitBodyAnim( hozen1, Animations.CustomSpell06 )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozen1, 2)"
824,Lorewalker Story - S3: Hozen - Hozen2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn( hozen2, 2)
Wait(1)
RunToLocation( hozen2, 4, 1456.36, 364.067, 550.221, 130.984)
PlayLoopingSplitBodyAnim( hozen2, Animations.CustomSpell06 )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozen2, 2)"
825,Lorewalker Story - S3: Hozen - Hozen3 - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn( hozen3, 2)
Wait(1)
RunToLocation( hozen3, 4, 1445.97, 351.45, 550.221, 228.634)
PlayLoopingSplitBodyAnim( hozen3, Animations.CustomSpell06 )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozen3, 2)"
826,Lorewalker Story - S3: Hozen - Hozen4 - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn( hozen4, 2)
Wait(1)
PlayLoopingSplitBodyAnim( hozen4, Animations.CustomSpell06 )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozen4, 2)"
827,Lorewalker Story - S3: Hozen - Hozen5 - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn( hozen5, 2)
Wait(1)
PlayLoopingSplitBodyAnim( hozen5, Animations.CustomSpell06 )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozen5, 2)"
828,Lorewalker Story - S3: Hozen - Hozen6 - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn( hozen6, 2)
Wait(1)
RunToLocation( hozen6, 4, 1446.69, 374.44, 550.221, 311.433)
RunToLocation( hozen6, 4, 1448.45, 359.83, 550.221, 9.99619)
PlayLoopingSplitBodyAnim( hozen6, Animations.ChannelCastDirected )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozen6, 2)"
829,Lorewalker Story - S3: Hozen - Hozen7 - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn( hozen7, 2)
Wait(1)
RunToLocation( hozen7, 4, 1449.2, 378.904, 550.221, 340.009)
RunToLocation( hozen7, 4, 1458.4, 377.75, 550.221, 25.6836)
Wait(2)
RunToLocation( hozen7, 4, 1446.02, 366.117, 550.221, 224.584)
RunToLocation( hozen7, 4, 1456.62, 377.806, 550.221, 103.759)
PlayLoopingSplitBodyAnim( hozen7, Animations.CustomSpell05 )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozen7, 2)"
830,Beast - Headbutt,"function Tornado_Headbutt(ROID, isTurn, turn)
	Dispatcher_Headbutt(34039, ROID, isTurn, turn)
end

function Dispatcher_Headbutt(overrideVis, ROID, isTurn, turn)
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
 
	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	
	local attackPoint = ObtainAttackPoint( ROID, targetROID, PetBattleRange.Melee, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, Uppercut_HugeKnockbackSuccess);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	-- New Spline START
	local moveData = MoveData:Default(3)
	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.2*distToTarget, 0, 0) );
	moveData.points[3].speed = 7

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local visKitID = overrideVis or PET_BATTLES_SPRINT_TRAIL;
	local visKit = pet.actor:PlaySpellStateVisual(visKitID)
	Spline_Attack2(test, success, finish, moveData, stretch, pet.actor, attackPoint)

	pet.actor:ClearSpellVisual( visKit)

	DefaultTurnCleanUp(ROID);
end

function Headbutt_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 3, 1 ); 	 
end"
831,Lorewalker Story - S3: Hozen - HozenVillage - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--Wait for Scene 3
WaitForTrigger(""Scene3"")
hozenTotem1: Fade(.75, 2)
hozenTotem2: Fade(.75, 2)
hozenFire1: Fade(.75, 2)
hozenFire2: Fade(.75, 2)
hozenTorch1: Fade(.75, 2)
hozenTorch2: Fade(.75, 2)

--FadeIn( hozenTotem1, 2)
--FadeIn( hozenTotem2, 2)
--FadeIn( hozenFire1, 2)
--FadeIn( hozenFire2, 2)
--FadeIn( hozenTorch1, 2)
--FadeIn( hozenTorch2, 2)


--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut( hozenTotem1, 2)
FadeOut( hozenTotem2, 2)
FadeOut( hozenFire1, 2)
FadeOut( hozenFire2, 2)
FadeOut( hozenTorch1, 2)
FadeOut( hozenTorch2, 2)
"
832,Lorewalker Story - S3: Hozen - fatherSm1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = fatherSm1:PlaySpellStateVisual(24803) --Cast Actor Visual
--PlayLoopingSplitBodyAnim( fatherSm1, Animations.EmoteWork )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5a"" )
FadeIn( fatherSm1, 2)
--local actorAuraVisualrake = fatherSm1:PlaySpellStateVisual(26665) --Cast Actor Visual Rake
plants:Fade( 0.75, 1 )
fatherSm1:PlayLoopingAnimKit(3295)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
--fatherSm1: ClearSpellVisual( actorAuraVisualrake)
FadeOut( fatherSm1, 2)
FadeOut( plants, 2)
"
833,Lorewalker Story - S3: Hozen - fatherSm2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = fatherSm2:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( fatherSm2, Animations.KneelLoop )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5b"" )
FadeIn( fatherSm2, 2)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( fatherSm2, 2)"
834,Lorewalker Story - S3: Hozen - fatherSm3 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = fatherSm3:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( fatherSm3, Animations.EmoteReadLoop )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5c"" )
FadeIn( fatherSm3, 2)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( fatherSm3, 2)"
835,Lorewalker Story - S3: Hozen - sonSm1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = sonSm1:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( sonSm1, Animations.Special2H )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5a"" )
FadeIn( sonSm1, 2)
local actorAuraVisualrake = sonSm1:PlaySpellStateVisual(26665) --Cast Actor Visual Rake
 
--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
sonSm1: ClearSpellVisual( actorAuraVisualrake)
FadeOut( sonSm1, 2)"
836,Lorewalker Story - S3: Hozen - sonSm2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = sonSm2:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( sonSm2, Animations.SitGround )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5b"" )
FadeIn( sonCandle, 2)
FadeIn( sonSm2, 2)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( sonCandle, 2)
FadeOut( sonSm2, 2)"
837,Lorewalker Story - S3: Hozen - sonSm3 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = sonSm3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = sonBook:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( sonSm3, Animations.KneelLoop )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5c"" )
FadeIn( sonBook, 2)
FadeIn( sonSm3, 2)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( sonBook, 2)
FadeOut( sonSm3, 2)"
838,Lorewalker Story - S3: Hozen - hozenSm2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenSm2 :PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5a"" )
FadeIn( hozenSm2 , 2)
local actorAuraVisualturnip = hozenSm2 :PlaySpellStateVisual(26666) --Cast Actor Visual Rake
RunToLocation( hozenSm2, 3, 1468.65, 366.92, 551.808, 51.0994, true)
RunToLocation( hozenSm2, 3, 1467.45, 369.767, 550.222, 115.225, true)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
hozenSm2: ClearSpellVisual( actorAuraVisual)
FadeOut( hozenSm2, 2)
hozenSm2: Despawn()"
839,Lorewalker Story - S3: Hozen - hozenSm1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenSm1:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( hozenSm1, Animations.CustomSpell06 )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5a"" )
FadeIn( hozenSm1 , 2)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( hozenSm1, 2)
hozenSm1: Despawn()"
840,Lorewalker Story - S3: Hozen - hozenSm3 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenSm3:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5a"" )
FadeIn( hozenSm3 , 2)
local actorAuraVisualturnip = hozenSm3:PlaySpellStateVisual(26666) --Cast Actor Visual Rake
RunToLocation( hozenSm3, 2, 1468.53, 376.841, 550.221, 250.9, true)


--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
hozenSm3: ClearSpellVisual( actorAuraVisual)
FadeOut( hozenSm3, 2)
hozenSm3: Despawn()"
841,Lorewalker Story - S3: Hozen - hozenSm4 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenSm4:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( hozenSm4, Animations.SitGround )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5b"" )
local actorAuraVisual = hozenSm4:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
FadeIn( hozenSm4 , 2)

--Wait for Mini-Scene 5c
WaitForTrigger( ""Scene5c"" )
Wait(2)
hozenSm4: ClearSpellVisual( actorAuraVisual)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( hozenSm4, 2)
hozenSm4: Despawn()"
842,Lorewalker Story - S3: Hozen - hozenSm5 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenSm5:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( hozenSm5, Animations.SitGround )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5b"" )
local actorAuraVisual = hozenSm5:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
FadeIn( hozenSm5 , 2)

WaitForTrigger( ""Scene5c"" )
Wait(2)
hozenSm5: ClearSpellVisual( actorAuraVisual)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( hozenSm5, 2)
hozenSm5: Despawn()"
843,Lorewalker Story - S3: Hozen - hozenSm6 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenSm6:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( hozenSm6, Animations.SitGround )

--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5b"" )
local actorAuraVisual = hozenSm6:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
FadeIn( hozenSm6 , 2)

WaitForTrigger( ""Scene5c"" )
Wait(2)
hozenSm6: ClearSpellVisual( actorAuraVisual)


--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut( hozenSm6, 2)
hozenSm6: Despawn()"
844,Lorewalker Story - S3: Hozen - Init - Stars - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--spawn stars
starID = 64677

star1 = SpawnActor( starID, 1453.29, 358.657, 558.21, 198.8, 1, false )
star2 = SpawnActor( starID, 1448.95, 353.994, 561.144, 206.675, 0.5, false )
star3 = SpawnActor( starID, 1447.38, 358.593, 561.456, 229.85, 0.75, false )
star4 = SpawnActor( starID, 1444.65, 368.259, 561.144, 268.325, 0.9, false )
star5 = SpawnActor( starID, 1447.61, 361.845, 557.342, 246.05, 1, false )

FadeOut(star1, 0)
FadeOut(star2, 0)
FadeOut(star3, 0)
FadeOut(star4, 0)
FadeOut(star5, 0)"
845,Lorewalker Story - S3: Hozen - stars - ZTO,"--Wait for Mini-Scene Queue
WaitForTrigger( ""Scene5b"" )
FadeIn(star1, 0)
FadeIn(star2, 0)
FadeIn(star3, 0)
FadeIn(star4, 0)
FadeIn(star5, 0)

--Wait for Clean up command
WaitForTrigger( ""Scene6"" )
FadeOut(star1, 0)
FadeOut(star2, 0)
FadeOut(star3, 0)
FadeOut(star4, 0)
FadeOut(star5, 0)
star1: Despawn()
star2: Despawn()
star3: Despawn()
star4: Despawn()
star5: Despawn()"
846,Lorewalker Story - S10: Yaungol - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

--OnScene Start

Wait (2)
lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
lorewalker:BroadcastText(BroadcastType.Say, 63725) -- VO Line 1 (Intro, Fire in hand)
local actorAuraVisual = lorewalker:PlaySpellStateVisual(26672) --Hand Fire
lorewalker:PlayLoopingAnimKit(2733)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
RunToLocation( lorewalker, 2, 1456.62, 371.879, 550.222, 223.299, true)
Wait(2)
CastSpellAtActor(campfire, campfire, 51505, false)
PlayOneShotSplitBodyAnim( lorewalker, Animations.Loot )
Wait(1)
lorewalker:StopAnimKit(2733)
lorewalker: ClearSpellVisual( actorAuraVisual) -- Clear handfire
SendTrigger( ""Scene1"" ) --Cue Fire in hand, Fire casts to campfire, slow fade in of tauren
Wait(1)
RunToLocation( lorewalker, 2, 1451.25, 372.834, 550.221, 129.696, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait (7)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63726) -- VO Line 2 (Instrument of change)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene2"" ) --Cue super slow fade in of Tauren
Wait (5)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63727) -- VO Line 3 (Tauren doing Taureny things)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene3"" ) --Cue cosmetic interaction of cho with Tauren. ""Sundering"" results in traumatic change of scene.
--Wait (20)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteFlex )
Wait(5)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63728) -- VO Line 4 (Tauren emerge as Yaungol)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene4"" ) --Cue fires die down, Yaungol remain
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(10)
lorewalker:StopAnimKit(3229)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63729) -- VO Line 5 (Yaungol war wagons and what not)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
SendTrigger( ""Scene5"" ) -- Fade in Yaungol siege weapons
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(5)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63730) -- VO Line 6 (Yaungol do battle with Shado-Pan, Saurok, and Mantid)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene6"" ) --Cue faux battle
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(3)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63731) -- VO Line 7 (Fade all but Cho holding fire)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
RunToLocation( lorewalker, 2, 1456.62, 371.879, 550.222, 223.299, true)
Wait(1)
PlayOneShotSplitBodyAnim( lorewalker, Animations.Loot )
Wait(1)
SendTrigger( ""Scene7"" ) --Fade all but Cho holding fire
"
847,Lorewalker Story - S10: Yaungol - Init - Tauren - ZTO,"-- Spawn Tauren
taurenID = 64653
tauren1 = SpawnActor( taurenID, 1458.51, 371.073, 550.222, 187.974, 1, true ) -- Spawn Tauren: Campfire right
tauren2 = SpawnActor( taurenID, 1452.18, 364, 550.222, 80.4239, 1, true ) -- Spawn Tauren: Campfire Left
tauren3 = SpawnActor( taurenID, 1463.98, 372.164, 550.222, 168.624, 1, true ) -- Spawn Tauren: Tent
tauren4 = SpawnActor( taurenID, 1450.46, 357.868, 550.222, 132.624, 1, true ) -- Spawn Tauren: Blacksmith
FadeOut( tauren1, 0 )
FadeOut( tauren2, 0 )
FadeOut( tauren3, 0 )
FadeOut( tauren4, 0 )

-- Spawn Campfire
campfireID = ""World\\Expansion02\\Doodads\\Generic\\Bonfire\\bonfirenorthrend_01.m2""
campfire = SpawnModelActor( campfireID, 1454.5, 369.367, 550.222, 135.324, 1, true ) -- Spawn Main Campfire
FadeOut( campfire, 0 )

-- Spawn Tauren Tents
taurenTentID = ""World\\expansion02\\doodads\\wintertauren\\wt_tent03.m2""
tent1 =  SpawnModelActor( taurenTentID, 1464.9, 372.163, 550.221, 180.099, 1, true ) -- Spawn Tauren: Campfire right
FadeOut( tent1, 0)

-- Spawn Anvil
anvilID = ""World\\Azeroth\\Elwynn\\PassiveDoodads\\Anvil\\anvil.m2""
anvil1 =  SpawnModelActor( anvilID, 1449.28, 359.155, 550.222, 45.5481, 1, true ) -- Spawn Anvil
FadeOut( anvil1, 0)"
848,Lorewalker Story - S10: Yaungol - Tauren Clean-Up - ZTO,"-- Clean up Tauren
WaitForTrigger( ""endScene"" )
tauren1: Despawn()
tauren2: Despawn()
tauren3: Despawn()
tauren4: Despawn()

campfire: Despawn()

tent1: Despawn()

anvil1: Despawn()"
849,Lorewalker Story - S10: Yaungol - Tauren1 - ZTO,"local actorAuraVisual = tauren1:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( tauren1, Animations.UseStandingLoop )

--Wait for Scene 2
WaitForTrigger (""Scene2"")
FadeIn(tauren1, 5)

--Wait for Scene 3a
WaitForTrigger (""Scene3a"")
StopLoopingSplitBodyAnim( tauren1, Animations.UseStandingLoop )
PlayLoopingSplitBodyAnim( tauren1, Animations.Cower )
--local actorAuraVisual = tauren1:PlaySpellStateVisual(18671) --Cast Actor Visual

--Wait for Scene 4
WaitForTrigger (""Scene4"")
--tauren1: ClearSpellVisual( actorAuraVisual) -- Clear fire
FadeOut(tauren1, 1)"
850,Lorewalker Story - S10: Yaungol - Tauren2 - ZTO,"local actorAuraVisual = tauren2:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( tauren2, Animations.UseStandingLoop )

--Wait for Scene 2
WaitForTrigger (""Scene2"")
FadeIn(tauren2, 5)

--Wait for Scene 3a
WaitForTrigger (""Scene3a"")
StopLoopingSplitBodyAnim( tauren2, Animations.UseStandingLoop )
PlayLoopingSplitBodyAnim( tauren2, Animations.Cower )
--local actorAuraVisual = tauren2:PlaySpellStateVisual(18671) --Cast Actor Visual

--Wait for Scene 4
WaitForTrigger (""Scene4"")
--tauren2: ClearSpellVisual( actorAuraVisual) -- Clear fire
FadeOut(tauren2, 1)"
851,Lorewalker Story - S10: Yaungol - Tauren3 - ZTO,"local actorAuraVisual = tauren3:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( tauren3, Animations.SitGround )

--Wait for Scene 2
WaitForTrigger (""Scene2"")
FadeIn(tauren3, 5)

--Wait for Scene 3a
WaitForTrigger (""Scene3a"")
StopLoopingSplitBodyAnim( tauren3, Animations.SitGround )
PlayLoopingSplitBodyAnim( tauren3, Animations.Cower )
--local actorAuraVisual = tauren3:PlaySpellStateVisual(18671) --Cast Actor Visual

--Wait for Scene 4
WaitForTrigger (""Scene4"")
--tauren3: ClearSpellVisual( actorAuraVisual) -- Clear fire
FadeOut(tauren3, 1)"
852,Lorewalker Story - S10: Yaungol - Tauren4 - ZTO,"local actorAuraVisual = tauren4:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( tauren4, Animations.EmoteWork )

--Wait for Scene 2
WaitForTrigger (""Scene2"")
local hammerAuraVisual = tauren4:PlaySpellStateVisual(28951) --Cast Actor Visual
FadeIn(tauren4, 5)

--Wait for Scene 3a
WaitForTrigger (""Scene3a"")
StopLoopingSplitBodyAnim( tauren4, Animations.EmoteWork )
PlayLoopingSplitBodyAnim( tauren4, Animations.Cower )
--local actorAuraVisual = tauren4:PlaySpellStateVisual(18671) --Cast Actor Visual

--Wait for Scene 4
WaitForTrigger (""Scene4"")
tauren4: ClearSpellVisual( hammerAuraVisual) -- Clear fire
FadeOut(tauren4, 1)"
853,Lorewalker Story - S10: Yaungol - TaurenVillage - ZTO,"local actorAuraVisual = anvil1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = tent1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 2
WaitForTrigger (""Scene2"")
FadeIn(anvil1, 5)
FadeIn(tent1, 5)

--Wait for Scene 4
WaitForTrigger (""Scene4"")
FadeOut(anvil1, 1)
FadeOut(tent1, 1)"
854,Lorewalker Story - S10: Yaungol - campfire - ZTO,"--Wait for Scene 1a
WaitForTrigger(""Scene1"")
FadeIn(campfire, 2)

-- Notify rest of scene when ready for sundering
WaitForTrigger(""Scene3"")
Wait(10)
SendTrigger(""Scene3a"")

-- Wait for Cho to collect Fire
WaitForTrigger(""Scene7"")
FadeOut(campfire, 1)"
855,Lorewalker Story - S10: Yaungol - Init - Fire Effects - ZTO,"--Spawn UberFirewall
firewall2ID = ""World\\Expansion03\\Doodads\\GrimBatolRaid\\grimbatolraid_fire_wall_02.m2""
firewall = SpawnModelActor( firewall2ID, 1460.99, 362.016, 550.222, 130.821, 1, true ) -- Spawn Main Campfire
firewall2 = SpawnModelActor( firewall2ID, 1444.23, 359.038, 550.222, 28.6714, 1, true ) -- Spawn Main Campfire
firewall3 = SpawnModelActor( firewall2ID, 1464.44, 379.72, 550.222, 234.097, 1, true ) -- Spawn Main Campfire

FadeOut( firewall, 0 )
FadeOut( firewall2, 0 )
FadeOut( firewall3, 0 )"
856,Lorewalker Story - S10: Yaungol - fire effects - ZTO,"PlayLoopingSplitBodyAnim( firewall, Animations.Stand )

--Wait for Scene 3a
WaitForTrigger(""Scene3a"")
FadeIn(firewall, 1)
FadeIn(firewall2, 1)
FadeIn(firewall3, 1)

--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeOut(firewall, 2)
FadeOut(firewall2, 2)
FadeOut(firewall3, 2)

firewall: Despawn()
firewall2: Despawn()
firewall3: Despawn()"
857,Lorewalker Story - S10: Yaungol - Init - Yaungol - ZTO,"-- Spawn Tauren
yaungolID = 62437
yaungolWarriorID = 64662
yaungol1 = SpawnActor( yaungolID, 1458.51, 371.073, 550.222, 187.974, 1, true ) -- Spawn Tauren: Campfire right
yaungol2 = SpawnActor( yaungolWarriorID, 1452.18, 364, 550.222, 80.4239, 1, true ) -- Spawn Tauren: Campfire Left
yaungol3 = SpawnActor( yaungolWarriorID, 1463.98, 372.164, 550.222, 168.624, 1, true ) -- Spawn Tauren: Tent
yaungol4 = SpawnActor( yaungolID, 1450.46, 357.868, 550.222, 132.624, 1, true ) -- Spawn Tauren: Blacksmith
FadeOut( yaungol1, 0 )
FadeOut( yaungol2, 0 )
FadeOut( yaungol3, 0 )
FadeOut( yaungol4, 0 )

-- Spawn Yak Tents
yakTentID = ""world\\expansion04\\doodads\\Yakmen\\Tent\\yakmen_tent_small_01.m2""
tent2 =  SpawnModelActor( yakTentID, 1467.71, 372.363, 550.222, 168.624, 0.75, true ) -- Spawn yak tent upstage right
FadeOut( tent2, 0)

-- Spawn Yaungol Siege Weapons
yakSiegeID = ""world\\expansion04\\doodads\\Yakmen\\\yakmen_siegeweapon_01.m2""
siege2 =  SpawnModelActor( yakSiegeID, 1459.27, 352.801, 550.222, 124.297, .5, false ) -- Upstage left Yakmensiege
siege1 =  SpawnModelActor( yakSiegeID, 1476.42, 359.46, 550.221, 142.747, .5, false ) -- Upstage right Yakmensiege
FadeOut( siege2, 0)
FadeOut( siege1, 0)

-- Spawn Yak Totems
yakTotemID = ""world\\expansion04\\doodads\\Yakmen\\Yakmen_Totem_01.m2""
totem1 =  SpawnModelActor( yakTotemID, 1459.99, 377.463, 540.221, 222.913, 0.5, false ) -- Downstage Right Totem
totem2 =  SpawnModelActor( yakTotemID, 1445.73, 364.82, 540.221, 44.0378, 0.5, false ) -- Downstage left Totem
totem3 =  SpawnModelActor( yakTotemID, 1460.05, 363.291, 535.222, 128.798, 1, false ) -- Downstage left Totem
FadeOut( totem2, 0)
FadeOut( totem1, 0)
FadeOut( totem3, 0)

-- Spawn Yak Anvil
yakanvilID = ""world\\expansion04\\doodads\\Yakmen\\yakmen_anvil_01.m2""
anvil2 =  SpawnModelActor( yakanvilID, 1449.28, 359.155, 550.222, 311.049, 1, true ) -- Spawn Anvil
FadeOut( anvil2, 0)

-- Spawn Yak Anvil
yakanvilID = ""world\\expansion04\\doodads\\Yakmen\\yakmen_anvil_01.m2""
anvil2 =  SpawnModelActor( yakanvilID, 1449.28, 359.155, 550.222, 311.049, 1, true ) -- Spawn Anvil
FadeOut( anvil2, 0)"
858,Lorewalker Story - S10: Yaungol - YaungolVillage - ZTO,"local actorAuraVisual = anvil2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = tent2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = totem1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = totem2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = totem3:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(anvil2, 2)
FadeIn(tent2, 2)
--[[
FadeIn(totem1, 5)
FadeIn(totem2, 5)
FadeIn(totem3, 5)

WaitForTrigger (""Scene5"")
RunToLocation(totem3, 2, 1460.05, 363.291, 550.222, 128.798, false)
RunToLocation(totem1, 2, 1459.99, 377.463, 550.221, 222.913, false)
RunToLocation(totem2, 2, 1445.73, 364.82, 550.221, 44.0378, false)
]]--

--Wait for Scene 4
WaitForTrigger (""Scene6"")
FadeOut(anvil2, 1)
FadeOut(tent2, 1)
FadeOut(totem1, 1)
FadeOut(totem2, 1)
FadeOut(totem3, 1)

--Wait for End Scene
WaitForTrigger(""endScene"")
anvil2: Despawn()
tent2: Despawn()
totem1: Despawn()
totem2: Despawn()
totem3: Despawn()"
859,Lorewalker Story - S10: Yaungol - Yaungol1 - ZTO,"local actorAuraVisual = yaungol1:PlaySpellStateVisual(24803) --Cast Actor Visual


--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(yaungol1, 1)
Wait(2)
PlayOneShotSplitBodyAnim( yaungol1, Animations.BattleRoar )
RunToLocation( yaungol1, 2, 1455.34, 372.751, 550.221, 137.347)
PlayLoopingSplitBodyAnim( yaungol1, Animations.ReadyUnarmed )

--Wait for Scene 4
WaitForTrigger (""Scene6"")
FadeOut(yaungol1, 1)"
860,Lorewalker Story - S10: Yaungol - Yaungol2 - ZTO,"local actorAuraVisual = yaungol2:PlaySpellStateVisual(24803) --Cast Actor Visual


--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(yaungol2, 1)
Wait(2)
PlayOneShotSplitBodyAnim( yaungol2, Animations.BattleRoar )
RunToLocation( yaungol2, 2, 1451, 369.448, 550.221, 126.997)
PlayLoopingSplitBodyAnim( yaungol2, Animations.ReadyUnarmed )

--Wait for Scene 4
WaitForTrigger (""Scene6"")
FadeOut(yaungol2, 1)"
861,Lorewalker Story - S10: Yaungol - Yaungol3 - ZTO,"local actorAuraVisual = yaungol3:PlaySpellStateVisual(24803) --Cast Actor Visual


--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(yaungol3, 1)
Wait(2)
PlayOneShotSplitBodyAnim( yaungol3, Animations.EmoteCheer )

--Wait for Scene 4
WaitForTrigger (""Scene6"")
FadeOut(yaungol3, 1)"
862,Lorewalker Story - S10: Yaungol - Yaungol4 - ZTO,"local actorAuraVisual = yaungol4:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(yaungol4, 1)
Wait(2)
PlayLoopingSplitBodyAnim( yaungol4, Animations.EmoteWork )

--Wait for Scene 4
WaitForTrigger (""Scene6"")
FadeOut(yaungol4, 1)"
863,Lorewalker Story - S10: Yaungol - siege1 - ZTO,"local actorAuraVisual = siege1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeIn(siege1, 5)
RunToLocation(siege1, 2, 1459.27, 369.969, 550.222, 141.172, false) --Move on stage through fire
Wait(1)
PlayOneShotSplitBodyAnim( siege1, Animations.LoadThrown )
PlayLoopingSplitBodyAnim( siege1, Animations.HoldThrown )

--Wait for Scene 6
WaitForTrigger(""Scene6"")
FadeOut(siege1, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
siege1: Despawn()"
864,Lorewalker Story - S10: Yaungol - siege2 - ZTO,"local actorAuraVisual = siege2:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeIn(siege2, 5)
RunToLocation(siege2, 2, 1452.12, 361.41, 550.222, 122.047, false) --Move on stage through fire
Wait(1)
PlayOneShotSplitBodyAnim( siege2, Animations.LoadThrown )
PlayLoopingSplitBodyAnim( siege2, Animations.HoldThrown )

--Wait for Scene 6
WaitForTrigger(""Scene6"")
FadeOut(siege2, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
siege2: Despawn()"
865,Beast - Uppercut,"
function Dispatcher_Uppercut( ROID, isTurn, turn )
	-- Only handle ""turn"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )


	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	
	local attackPoint = ObtainAttackPoint( ROID, targetROID, PetBattleRange.Melee, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, Uppercut_HugeKnockbackSuccess);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	-- New Spline START
	local moveData = MoveData:Default(3)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent


	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 3) );
	moveData.points[3].speed = 7

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	DefaultTurnCleanUp(ROID);



end

function Uppercut_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID ); 	 

end"
866,Aquatic - Surge,"function Dispatcher_Surge(ROID, isTurn, turn)
	-- Only handle ""effect"" objects
	if (isTurn ~= ""turn"") then
		print(""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");
		return;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn)

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if (not pet or (pet and pet.isPad)) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	-- local target =  ROIDTOUNIT( targetROID );

	local _, flags = DidItFail( turn );
	local missed = flags.miss;
	
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed)
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, Surge_HugeKnockbackSuccess);
		DefaultDoEffectProcessing(ROID, ""effect"", effect); 
	end

	-- New Spline START
	local moveData = MoveData:Default(7)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent


	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0, 0, pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords = GetStandardMatrixOps(sourcePosition, targetPosition)

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist(targetPosition);

	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1) * 2;	
 
	moveData.points[1].pos = LocalToWorldCoords(Vector:New(0.00 * distToTarget, 0, 0));
	moveData.points[1].speed = 10
	
	moveData.points[2].pos = LocalToWorldCoords(Vector:New(1.00 * distToTarget, 0, 0));
	moveData.points[2].speed = 10
	
	moveData.points[3].pos = LocalToWorldCoords(Vector:New(2.00 * distToTarget, dir * 0.5, 0));
	moveData.points[3].speed = 10
	
	moveData.points[4].pos = LocalToWorldCoords(Vector:New(0.90 * distToTarget, dir * 1.0, 0));
	moveData.points[4].speed = 12
	
	moveData.points[5].pos = LocalToWorldCoords(Vector:New(0.25 * distToTarget, dir * -0.5, 0));
	moveData.points[5].speed = 12
	
	moveData.points[6].pos = player.home + LocalToWorldCoords(Vector:New(0.0 * distToTarget, dir * -0.25, 0));
	moveData.points[6].speed = 12
	
	moveData.points[7].pos = player.home
	moveData.points[7].speed = 12

	local stretch = false;
	-- local splineDuration = 2;

	pet.actor:ClearFacing();

	-- Play the Cast Visual
	-- pet.actor:PlaySpellCastVisual(28896)

	local visKit = pet.actor:PlaySpellStateVisual(PET_BATTLES_SPRINT_TRAIL)
	Spline_Attack2(test, success, finish, moveData, stretch, pet.actor, attackPoint)

	pet.actor:ClearSpellVisual( visKit)                              

	DefaultTurnCleanUp(ROID);
end

function Surge_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if (not attackerROID) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID);
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 2, 0.5);
end"
867,Item - RAM - Alerage Spinning Flame Keg,"	local scaleCreateData = ActorCreateData:Default()
	scaleCreateData.name = ""scaleAxis""
	--scaleCreateData.model = ""SPELLS\\AxisTestObject.m2""
	scaleCreateData.model = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\KEG\\PA_Keg_14.M2""
	scaleCreateData.scale = 0.5
	scaleCreateData.interactible = false
	axis = scene:SpawnActor(scaleCreateData)

	local flameBreath = ActorCreateData:Default()
	flameBreath.name = ""flameBreath""
	flameBreath.model = ""SPELLS\\FlameBreath.M2""
	flameBreath.scale = 0.7
	flameBreath.interactible = false
	local flameObject = scene:SpawnActor(flameBreath)
	flameObject:SetSnapToGround(false)


	local yaw = 0
	local rate = 720;
	local time = 0;
	local delay = 1/60;
	local duration = 6

	--actor:SetSnapToGround(false)

	repeat
		time = time + delay;
		scene:WaitTimer(delay)

		yaw = rate * time

		axis:SetTransform( Transform:New(Vector:New(), yaw, 0, 0 ) )
		flameObject:SetTransform( Transform:New(Vector:New(0, 0, 0.3), yaw, 0, 0 ) )
	until ( time >= duration )

	axis:Fade(0,0.25);
	flameObject:Fade(0, 0.25)
	scene:WaitTimer(0.25);

	axis:Despawn();
	flameObject:Despawn();"
868,Lorewalker Story - S5: Mogu - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene Start

Wait (2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
lorewalker:BroadcastText(BroadcastType.Say, 63718) -- VO Line 1 (Intro)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
FadeIn(light_ur, 2)
SendTrigger( ""Scene1"" ) 
Wait (5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait (5)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63719) -- VO Line 2 (Mogu ruled Pandaria)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene2"" ) --Cue mogu
FadeIn(light_uc, 2)
FadeIn(light_ul, 2)
--Wait (18)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(5)
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63720) -- VO Line 3 (The Slaves of Pandaria)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene3"" ) --Cue slaves
--Wait (17)
lorewalker:PlayOneShotAnimKit(3229)
Wait(5)
lorewalker:StopAnimKit(3229)
lorewalker:PlayOneShotAnimKit(2625)
Wait(3)
--lorewalker:PlayOneShotAnimKit(2625)
Wait(5)
lorewalker:StopAnimKit(2625)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63721) -- VO Line 4 (slaves sent to the wall)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene4"" ) --Cue the wall
FadeOut(light_uc, 2)
FadeOut(light_ul, 2)
FadeOut(light_ur, 2)
--Wait (17)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(6)
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63722) -- VO Line 5 (Mogu Fleshshapers make Saurok and terrorcotta)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene5"" ) -- Cue the saurok and terrorcotta
--Wait (17)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(6)
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63723) -- VO Line 6 (Mogu marching through field of slaves)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene6"" ) --Cue mogu walking through a field of slaves
--Wait (17)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteCheer )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(3)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

SendTrigger( ""Scene7"" ) --cue Kang assuming the position
lorewalker:BroadcastText(BroadcastType.Say, 63724) -- VO Line 7 (The Rise of Kang)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.305, 93.5645) -- Return to spawnpoint
Wait (7)
SendTrigger( ""endScene"" )
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips


--Wrap up
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, "
869,Lorewalker Story - S5: Mogu - Init - Slaves - ZTO,"-- Spell Visual IDs
chainsAuraID = 28949


-- Spawn Pandaren
pandarenCivilianID = 61918
pandarenCiv1 = SpawnActor( pandarenCivilianID, 1464.27, 376.518, 550.221, 260.425, 0.75, false ) -- Spawn Pandaren Villager: UL
pandarenCiv2 = SpawnActor( pandarenCivilianID, 1463.66, 373.237, 550.222, 76.725, 0.75, false ) -- Spawn Pandaren Villager: UL
pandarenCiv3 = SpawnActor( pandarenCivilianID, 1464.63, 369.362, 550.222, 218.025, 0.75, false ) -- Spawn Pandaren Villager: UC
pandarenCiv4 = SpawnActor( pandarenCivilianID, 1462.1, 367.24, 550.222, 41.8501, 0.75, false ) -- Spawn Pandaren Villager: UC
FadeOut( pandarenCiv1, 0 )
FadeOut( pandarenCiv2, 0 )
FadeOut( pandarenCiv3, 0 )
FadeOut( pandarenCiv4, 0 )

-- Spawn Slaves
pandarenSlaveID = 61904
pandarenSlaveMaleID = 67249
pandarenSlave1 = SpawnActor( pandarenSlaveMaleID, 1464.27, 376.518, 550.221, 260.425, 0.75, true ) -- Spawn Pandaren Villager: UL
pandarenSlave2 = SpawnActor( pandarenSlaveMaleID, 1445.96, 365.144, 550.222, 354.476, 0.75, true ) -- Spawn Pandaren Villager: UL
pandarenSlave3 = SpawnActor( pandarenSlaveID, 1464.63, 369.362, 550.222, 218.025, 0.75, true ) -- Spawn Pandaren Villager: UC
pandarenSlave4 = SpawnActor( pandarenSlaveID, 1459.46, 379.245, 550.222, 260.427, 0.75, true ) -- Spawn Pandaren Villager: UC
pandarenSlavesChains = SpawnFadedActorsAtPoints( pandarenSlaveID, 4453, true ) -- Spawn Pandaren Villager: UC
FadeOut( pandarenSlave1, 0 )
FadeOut( pandarenSlave2, 0 )
FadeOut( pandarenSlave3, 0 )
FadeOut( pandarenSlave4, 0 )

--Spawn Hozen Villagers
hozenVillagerID = 61906
hozenCiv1 = SpawnActor( hozenVillagerID, 1470.1, 368.103, 551.808, 218.35, 0.75, true ) -- Spawn Hozen Villager: UL
hozenCiv2 = SpawnActor( hozenVillagerID, 1460.62, 373.919, 550.222, 203.275, 0.75, true ) -- Spawn hozen Villager: DC
FadeOut( hozenCiv1, 0 )
FadeOut( hozenCiv2, 0 )

--Spawn Jinyu Villager
jinyuVillagerID = 64658
jinyuCiv1 = SpawnActor( jinyuVillagerID, 1467.26, 370.565, 550.222, 167.725, 0.75, true ) -- Spawn Jinyu Villager: UL
FadeOut( jinyuCiv1, 0 )

--Final Scene slaves
pandarenSlavef1 = SpawnActor( pandarenSlaveID, 1461.4, 367.534, 550.221, 221.275, 0.75, true ) 
pandarenSlavef2 = SpawnActor( pandarenSlaveID, 1458.4, 370.953, 550.221, 221.275, 0.75, true ) 
pandarenSlavef3 = SpawnActor( pandarenSlaveID, 1455.16, 374.636, 550.221, 221.275, 0.75, true ) 

pandarenSlavef4 = SpawnActor( pandarenSlaveID, 1465.63, 370.143, 550.221, 221.275, 0.75, true ) 
--pandarenSlavef5 = SpawnActor( pandarenSlaveID, 1462.47, 373.747, 550.221, 221.275, 0.75, true ) 
pandarenSlavef6 = SpawnActor( pandarenSlaveID, 1458.85, 377.871, 550.221, 221.275, 0.75, true ) 

pandarenSlavef7 = SpawnActor( pandarenSlaveID, 1455.64, 362.476, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef8 = SpawnActor( pandarenSlaveID, 1452.28, 366.209, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef9 = SpawnActor( pandarenSlaveID, 1449.67, 369.429, 550.221, 41.9498, 0.75, true ) 

pandarenSlavef10 = SpawnActor( pandarenSlaveID, 1452.36, 359.539, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef11 = SpawnActor( pandarenSlaveID, 1448.95, 363.222, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef12 = SpawnActor( pandarenSlaveID, 1446.42, 366.514, 550.221, 41.9498, 0.75, true ) 

FadeOut(pandarenSlavef1, 0)
FadeOut(pandarenSlavef2, 0)
FadeOut(pandarenSlavef3, 0)
FadeOut(pandarenSlavef4, 0)
--FadeOut(pandarenSlavef5, 0)
FadeOut(pandarenSlavef6, 0)
FadeOut(pandarenSlavef7, 0)
FadeOut(pandarenSlavef8, 0)
FadeOut(pandarenSlavef9, 0)
FadeOut(pandarenSlavef10, 0)
FadeOut(pandarenSlavef11, 0)
FadeOut(pandarenSlavef12, 0)"
870,Lorewalker Story - S5: Mogu - Pandaren Villagers - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = pandarenCiv1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenCiv2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenCiv3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenCiv4:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( pandarenCiv1, Animations.EmoteTalk )
PlayLoopingSplitBodyAnim( pandarenCiv2, Animations.EmoteTalk )
PlayLoopingSplitBodyAnim( pandarenCiv3, Animations.EmoteTalk )
PlayLoopingSplitBodyAnim( pandarenCiv4, Animations.EmoteTalk )

--Wait for Scene1
WaitForTrigger(""Scene1"")
Wait(2)
FadeIn(pandarenCiv1, 2)
FadeIn(pandarenCiv2, 2)
FadeIn(pandarenCiv3, 2)
FadeIn(pandarenCiv4, 2)

--Wait for Scene 2
WaitForTrigger(""Scene2"")
pandarenCiv1:SetFacing(220.598)
pandarenCiv3:SetFacing(220.598)
pandarenCiv2:SetFacing(220.598)
pandarenCiv4:SetFacing(220.598)
Wait(2)
RunToLocation(pandarenCiv4, 2, 1462.64, 369.194, 550.221, 219.981, true)
PlayOneShotSplitBodyAnim( pandarenCiv4, Animations.EmoteWave )


---Wait for the slap
WaitForTrigger(""Scene2a"")

--Slap Civ4
PlayOneShotSplitBodyAnim( pandarenCiv4, Animations.Death )
PlayLoopingSplitBodyAnim( pandarenCiv4, Animations.Dead )
Wait(2)

--Strangles Civ2
local moguPrisonRune = pandarenCiv2:PlaySpellStateVisual(25803) --Cast Mogu prison rune
Wait(2)
pandarenCiv2: ClearSpellVisual( moguPrisonRune) -- Clear chroma
PlayOneShotSplitBodyAnim( pandarenCiv2, Animations.Death )
PlayLoopingSplitBodyAnim( pandarenCiv2, Animations.Dead )

--Civ3 and Civ1 begin to bow
PlayLoopingSplitBodyAnim( pandarenCiv3, Animations.EmoteBow )
PlayLoopingSplitBodyAnim( pandarenCiv1, Animations.EmoteBow )

--Wait for Scene2b
WaitForTrigger(""Scene2b"")
FadeOut(pandarenCiv1, 2)
FadeOut(pandarenCiv3, 2)


--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut(pandarenCiv2, 2)
FadeOut(pandarenCiv4, 2)


--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
pandarenCiv1: Despawn()
pandarenCiv2: Despawn()
pandarenCiv3: Despawn()
pandarenCiv4: Despawn()"
871,Lorewalker Story - S5: Mogu - HozenCiv1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenCiv1:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( hozenCiv1, Animations.SitGround )

--Wait for Scene1
WaitForTrigger(""Scene1"")
Wait(2)
FadeIn(hozenCiv1, 2)

--Wait for Scene2b
WaitForTrigger(""Scene2b"")
StopLoopingSplitBodyAnim( hozenCiv1, Animations.SitGround )
RunToLocation(hozenCiv1, 2, 1455.8, 356.121, 551.808, 131.951)
RunToLocation(hozenCiv1, 2, 1452.82, 359.25, 550.222, 313.976)
PlayLoopingSplitBodyAnim( hozenCiv1, Animations.EmoteWork )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut(hozenCiv1, 2)


--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
hozenCiv1: Despawn()
"
872,Lorewalker Story - S5: Mogu - HozenCiv2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = hozenCiv2:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( hozenCiv2, Animations.CustomSpell05 )

--Wait for Scene1
WaitForTrigger(""Scene1"")
Wait(2)
FadeIn(hozenCiv2, 2)

--Wait for Scene2b
WaitForTrigger(""Scene2b"")
StopLoopingSplitBodyAnim( hozenCiv2, Animations.CustomSpell05 )
RunToLocation(hozenCiv2, 2, 1458.9, 365.811, 550.223, 312.401)
PlayLoopingSplitBodyAnim( hozenCiv2, Animations.EmoteWork )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut(hozenCiv2, 2)


--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
hozenCiv2: Despawn()
"
873,Lorewalker Story - S5: Mogu - JinyuCiv1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = jinyuCiv1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene1
WaitForTrigger(""Scene1"")
Wait(2)
FadeIn(jinyuCiv1, 2)

--Wait for Scene2b
WaitForTrigger(""Scene2b"")
RunToLocation( jinyuCiv1, 2, 1465.87, 370.76, 550.221, 311.106)
PlayLoopingSplitBodyAnim( jinyuCiv1, Animations.EmoteWork )

--Wait For Scene4
WaitForTrigger(""Scene4"")
FadeOut(jinyuCiv1, 2)

--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
jinyuCiv1: Despawn()"
874,Brazie's PetBattle - Core - Default Turn - Variants - No Knockback,"function DefaultTurnBehaviour_NoKnockback( ROID, isTurn, turn )
	local turnSuccess, turnFailure, effectSuccess, effectFailure = Dispatcher_NoKnockbackSuccessVisual, nil, nil, nil
	local isPeriodic = false;
	DefaultTurnBehaviour( ROID, isTurn, turn, turnSuccess, turnFailure, effectSuccess, effectFailure, isPeriodic );
end

function DefaultTurnBehaviour_Periodic( ROID, isTurn, turn )
	local turnSuccess, turnFailure, effectSuccess, effectFailure = Dispatcher_NoKnockbackSuccessVisual, nil, nil, nil
	local isPeriodic = true;
	DefaultTurnBehaviour( ROID, isTurn, turn, turnSuccess, turnFailure, effectSuccess, effectFailure, isPeriodic );
end
 "
875,Brazie's PetBattle - End Game - Flee,"function FleeCeremony ( winnerID )

	local playerID = (3-winnerID)

	Dispatcher_OwnerEmote( GETROIDFROMPLAYERID( playerID ), Animations.Cower )
	local player = GetTeamByIndex(playerID)

	if ( not player ) then 
		print(""Missing player!"");
		return 
	end
 
	for i=1,3 do 
		if ( player.pets[i] ) then 
			local playerPet = player.pets[i] 

			if ( playerPet.currentHealth > 0 ) then 
				playerPet.actor:Fade(1.0, 0.5)
				MoveToFleeLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local waitCondition = function()
		-- all actors must be renderable
		for i=1,3 do
			local pet = player.pets[i] 
			if pet and pet.actor:IsMoving() then
				return false
			end
		end
		return true
	end

	scene:WaitCondition(waitCondition)
end


function MoveToFleeLocation(pet)
	
	local team = GetTeamByIndex(pet.playerID)
	local spot = FLEE_PET_OFFSETS[pet.playerID][pet.slot].position;
	local distance = pet.actor:GetPosition():Dist(spot);

	if ( pet.moveSpeed > 0 ) then
		pet.actor:SetFacingToAbs(spot);
		pet.actor:MoveToAbs(spot, distance/pet.moveSpeed/2)
	end
end
"
876,----- Bot Dispatcher -----,
877,Lorewalker Story - S5: Mogu - pandarenSlave - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = pandarenSlave1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlave2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlave3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlave4:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( pandarenSlave2, Animations.Cower )
PlayLoopingSplitBodyAnim( pandarenSlave4, Animations.Cower )

--Wait for Scene2b
WaitForTrigger(""Scene2b"")
Wait(2)
FadeIn(pandarenSlave1, 2)
FadeIn(pandarenSlave3, 2)
RunToLocation(pandarenSlave1, 2, 1461.81, 368.332, 550.221, 306.606)
pandarenSlave1:PlaySpellStateVisual(28951) --Blacksmith Hammer Aura
PlayLoopingSplitBodyAnim( pandarenSlave1, Animations.EmoteWork )
RunToLocation(pandarenSlave3, 2, 1455.23, 361.472, 550.221, 311.106)
pandarenSlave3:PlaySpellStateVisual(28951) --Blacksmith Hammer Aura
PlayLoopingSplitBodyAnim( pandarenSlave3, Animations.EmoteWork )

--Wait For Scene5
WaitForTrigger(""Scene5"")
FadeOut(pandarenSlave1, 2)
FadeOut(pandarenSlave3, 2)
Wait(2)
FadeIn(pandarenSlave2, 2)
Wait(4)
FadeIn(pandarenSlave4, 2)


--Wait for Scene6
WaitForTrigger(""Scene6"")
Wait(2)
FadeOut(pandarenSlave2, 2)
FadeOut(pandarenSlave4, 2)

--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
pandarenSlave1: Despawn()
pandarenSlave2: Despawn()
pandarenSlave3: Despawn()
pandarenSlave4: Despawn()"
878,Lorewalker Story - S5: Mogu - Init - Mogu - ZTO,"-- Mogu Spell Effects
StrangulateSpellID = 120566

-- Spawn Mogu
moguPolearmID = 61899
moguMaceID = 62427
moguFistID = 62428
moguCasterID = 61898

moguPolearm1 = SpawnActor( moguPolearmID, 1446.42, 351.626, 550.22, 47.0791, 1, true ) -- Spawn Mogu: Offstage - Left
moguMace1 = SpawnActor( moguMaceID, 1441.39, 360.843, 550.22, 29.9789, 1.5, true ) -- Spawn Pandaren Villager: UL
moguMace2 = SpawnActor( moguMaceID, 1446.42, 351.626, 550.22, 47.0791, 1.5, true ) -- Spawn Mogu: Offstage - Left
moguCaster1 = SpawnActor( moguCasterID, 1452.68, 366.112, 550.22, 28.8539, 1, true ) -- Spawn Pandaren Villager: UC

FadeOut( moguPolearm1, 0 )
FadeOut( moguMace1, 0 )
FadeOut( moguMace2, 0 )
FadeOut( moguCaster1, 0 )"
879,Lorewalker Story - S5: Mogu - moguCaster1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = moguCaster1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene1
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn(moguCaster1, 2)
RunToLocation(moguCaster1, 2, 1460.09, 367.254, 550.221, 35.3789, true)
SendTrigger(""Scene2a"")
PlayOneShotSplitBodyAnim( moguCaster1, Animations.ShieldBash )
Wait(2)
CastSpellAtActor( moguCaster1, pandarenCiv2, StrangulateSpellID )
Wait(6)
SendTrigger(""Scene2b"")
Wait(2)
RunToLocation( moguCaster1, 2, 1462.58, 374.709, 550.221, 167.904, true)

--Wait for Scene2b
WaitForTrigger(""Scene4"")

FadeOut(moguCaster1, 2)

--Wait for Scene5 to move out of sight
WaitForTrigger(""Scene5"")
RunToLocation(moguCaster1, 10, 1461.05, 362.146, 550.221, 132.625, true)

--Return for Scene 6
WaitForTrigger(""Scene6"")
FadeIn(moguCaster1, 2)
RunToLocation(moguCaster1, 2, 1452.2, 371.767, 550.221, 132.625, true)

--Wait for Scene 7
WaitForTrigger(""Scene7"")
FadeOut(moguCaster1, 1)

--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
moguCaster1: Despawn()"
881,Brazie's PetBattle - Dispatcher - Result - Create Aura,"function CreateAura(targetROID, auraInstanceID, turnsRemaining, auraAbilityID )
	local targetPet = ROIDTOPET(targetROID);

	if ( not targetPet ) then 
		warning(""ERROR: Invalid pet supplied to CreateAura: "", ROIDTOSTRING( targetROID ), result );
		return;
	end

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local aura = ApplyAura(targetPet, auraInstanceID, turnsRemaining, auraSpellVisualID);

	if ( aura and auraVisual and auraVisual.scriptFunction ) then 

--		if (auraAbilityID == 175) then
--			print(""VOLCANO "" .. auraVisual.ID .. "", "" .. auraVisual.scriptFunctionString)
--			auraVisual.scriptFunction( targetROID, ""aura"", aura, auraInstanceID, turnsRemaining, auraAbilityID ); 
--			return aura
--		end

		warning(""WARNING: Running custom script for Aura of ""..auraAbilityID);
		Dispatcher_AddCommandToQueue(targetROID, auraVisual.scriptFunction, ""aura"", aura, auraInstanceID, turnsRemaining, auraAbilityID ); 	 

		--scene:WaitTimer(0.01); 
	elseif ( not auraVisual ) then
		warning(""WARNING: AuraVisual record missing for ability "", auraAbilityID);
	else
		warning(""WARNING: Default visual being used for aura of "", auraAbilityID);
	end

	return aura;
end
"
882,Lorewalker Story - S5: Mogu - moguMace2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = moguMace2:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene2
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn(moguMace2, 2)
RunToLocation(moguMace2, 2, 1453.67, 361.247, 550.223, 42.1758, true)
WaitForTrigger(""Scene2a"")
PlayOneShotSplitBodyAnim( moguMace2, Animations.EmoteRoar )


--Wait for Scene2b
WaitForTrigger(""Scene2b"")
Wait(2)
RunToLocation( moguMace2, 2, 1451.26, 355.907, 550.222, 82.9007, true)
PlayLoopingSplitBodyAnim( moguMace2, Animations.EmotePoint )

--Wait for Scene2b
WaitForTrigger(""Scene5"")

FadeOut(moguMace2, 2)

--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
moguMace2: Despawn()"
883,Lorewalker Story - S5: Mogu - moguMace1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = moguMace1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene2
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn(moguMace1, 2)
RunToLocation(moguMace1, 2, 1449.91, 365.397, 550.223, 42.1758, true)
WaitForTrigger(""Scene2a"")
PlayOneShotSplitBodyAnim( moguMace1, Animations.EmoteRoar )


--Wait for Scene2b
WaitForTrigger(""Scene2b"")
Wait(2)
RunToLocation( moguMace1, 2, 1469.25, 372.242, 550.222, 172.001, true)
PlayLoopingSplitBodyAnim( moguMace1, Animations.EmotePoint )

--Wait for Scene2b
WaitForTrigger(""Scene5"")

FadeOut(moguMace1, 2)

--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
moguMace1: Despawn()"
884,Lorewalker Story - S5: Mogu - Init - Great Wall - ZTO,"--Spawn Great wall
greatWallID = ""WORLD\\EXPANSION04\\DOODADS\\ValeofEternalBlossoms\\Greatwall_Cap\\pa_greatwall_cap_01.m2""
greatWall = SpawnModelActor (greatWallID, 1462.3, 360.426, 550.222, 43.3007, .25, false)
FadeOut(greatWall, 0)"
885,Lorewalker Story - S5: Mogu - greatWall - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = greatWall:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene3
WaitForTrigger(""Scene3"")
Wait(2)
FadeIn(greatWall, 4)

--Wait for Scene2b
WaitForTrigger(""Scene5"")
FadeOut(greatWall, 4)

--Wait for endScene to Despawn
WaitForTrigger(""endScene"")
greatWall: Despawn()"
886,Lorewalker Story - S5: Mogu - Init - Saurok and Terrorcotta - ZTO,"--Spawn and hide saurok
hackID = 61935
healID = 61934
tankID = 61933

saurok_hack = SpawnActor( hackID, 1447.84, 369.707, 550.222, 213.852 ) -- Hacky saurok
saurok_heal = SpawnActor( healID, 1448.74, 360.226, 550.222, 123.627 ) -- Healy saurok
saurok_tank = SpawnActor( tankID, 1450.63, 363.448, 550.222, 147.477 ) -- Tank saurok

--Fade out until needed
FadeOut(saurok_hack, 0)
FadeOut(saurok_heal, 0)
FadeOut(saurok_tank, 0)

--Spawn and Hide Terrorcotta
terrorcottaID = 62639
quilenCreatureID = 63627

terrorcotta1 = SpawnActor( terrorcottaID, 1462.53, 374.006, 550.222, 131.051) --Terrorcotta

quilen = SpawnActor( quilenCreatureID, 1464.91, 375.456, 550.221, 150.12, 1, false) -- Quillen


--Fade out until needed
FadeOut(terrorcotta1, 0)
FadeOut(quilen, 0)"
887,Lorewalker Story - S5: Mogu - Init - Downstage Lights - ZTO,"-- Spawn Stage Light bunnies
bunnyID = 62026

light_dl = SpawnActor( bunnyID, 1444.85, 366.736, 550.222, 308.576 )  -- Upstage Left bunny
light_dr = SpawnActor( bunnyID, 1458.02, 377.933, 550.222, 308.576 )  -- Upstage Center bunny
light_kangSpecial = SpawnActor( bunnyID, 1462.47, 373.747, 550.221, 221.275 )  -- Spawn on Kang
WaitForTrigger(""smoothPhaseComplete"")
-- Setup light
local actorAuraVisual = light_dl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual = light_dr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
local actorAuraVisual = light_kangSpecial:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual

-- Fade Out until called
FadeOut( light_dl,0 )
FadeOut( light_dr,0 )
FadeOut( light_kangSpecial,0 )"
888,Lorewalker Story - S5: Mogu - saurok_hack - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = saurok_hack:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( saurok_hack, Animations.MountSelfIdle )

-- Wait for Scene 5
WaitForTrigger(""Scene5"")
Wait(3)
saurok_hack:Fade(.75, 2)


--Wait for Scene 6
WaitForTrigger(""Scene6"")
Wait(2)
FadeOut(saurok_hack, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
saurok_hack:Despawn()"
889,Lorewalker Story - S5: Mogu - saurok_heal - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = saurok_heal:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim(saurok_heal, Animations.ReadyUnarmed)

-- Wait for Scene 5
WaitForTrigger(""Scene5"")
Wait(3)
saurok_heal:Fade(.75, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
Wait(2)
FadeOut(saurok_heal, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
saurok_heal:Despawn()"
890,Lorewalker Story - S5: Mogu - saurok_tank - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = saurok_tank:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( saurok_tank, Animations.ReadyRifle )

-- Wait for Scene 5
WaitForTrigger(""Scene5"")
Wait(3)
saurok_tank:Fade(.75, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
Wait(2)
FadeOut(saurok_tank, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
saurok_tank:Despawn()"
891,Lorewalker Story - S5: Mogu - Downstage Lights - ZTO,"-- Wait for Scene5
WaitForTrigger(""Scene5"")
Wait(2)
FadeIn( light_dl,2 )
Wait(1)
FadeIn( light_dr,2 )

-- Wait for Scene6
WaitForTrigger(""Scene6"")
Wait(2)
FadeOut( light_dl,2 )
Wait(1)
FadeOut( light_dr,2 )
Wait(3)
FadeIn( light_kangSpecial, 2)



-- Wait for EndScene
WaitForTrigger(""endScene"")
light_dl: Despawn()
light_dr: Despawn()

FadeOut( light_kangSpecial, 2)
light_kangSpecial: Despawn()"
892,Lorewalker Story - S5: Mogu - terrorcotta - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = terrorcotta1:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( terrorcotta1, Animations.Ready2HL )

-- Wait for Scene 5
WaitForTrigger(""Scene5"")
Wait(5)
FadeIn(terrorcotta1, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
Wait(2)
FadeOut(terrorcotta1, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
terrorcotta1:Despawn()"
893,Lorewalker Story - S5: Mogu - Pandaren Slaves Finale - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = pandarenSlavef1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef4:PlaySpellStateVisual(24803) --Cast Actor Visual
--local actorAuraVisual = pandarenSlavef5:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef6:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef7:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef8:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef9:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef10:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef11:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef12:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( pandarenSlavef1, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef2, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef3, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef4, Animations.KneelLoop )
--PlayLoopingSplitBodyAnim( pandarenSlavef5, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef6, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef7, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef8, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef9, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef10, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef11, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef12, Animations.KneelLoop )

--Wait for Scene 6
WaitForTrigger(""Scene6"")
Wait(2)
FadeIn(pandarenSlavef1, 1)
FadeIn(pandarenSlavef2, 1)
FadeIn(pandarenSlavef3, 1)
FadeIn(pandarenSlavef4, 1)
--FadeIn(pandarenSlavef5, 1)
FadeIn(pandarenSlavef6, 1)
FadeIn(pandarenSlavef7, 1)
FadeIn(pandarenSlavef8, 1)
FadeIn(pandarenSlavef9, 1)
FadeIn(pandarenSlavef10, 1)
FadeIn(pandarenSlavef11, 1)
FadeIn(pandarenSlavef12, 1)

--Wait for Scene 7
WaitForTrigger(""Scene7"")
FadeOut(pandarenSlavef1, 1)
FadeOut(pandarenSlavef2, 1)
FadeOut(pandarenSlavef3, 1)
FadeOut(pandarenSlavef4, 1)
--FadeOut(pandarenSlavef5, 1)
FadeOut(pandarenSlavef6, 1)
FadeOut(pandarenSlavef7, 1)
FadeOut(pandarenSlavef8, 1)
FadeOut(pandarenSlavef9, 1)
FadeOut(pandarenSlavef10, 1)
FadeOut(pandarenSlavef11, 1)
FadeOut(pandarenSlavef12, 1)

--Wait for endScene
WaitForTrigger(""endScene"")
pandarenSlavef1: Despawn()
pandarenSlavef2: Despawn()
pandarenSlavef3: Despawn()
pandarenSlavef4: Despawn()
--pandarenSlavef5: Despawn()
pandarenSlavef6: Despawn()
pandarenSlavef7: Despawn()
pandarenSlavef8: Despawn()
pandarenSlavef9: Despawn()
pandarenSlavef10: Despawn()
pandarenSlavef11: Despawn()
pandarenSlavef12: Despawn()"
894,Lorewalker Story - S5: Mogu - Init - Kang - ZTO,"-- Spawn Kang
kangID = 61907

kang = SpawnActor( kangID, 1462.47, 373.747, 550.221, 221.275, 1, true ) 

FadeOut( kang, 0 )
"
895,Lorewalker Story - S5: Mogu - Kang - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local kangAuraVisual = kang:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( kang, Animations.KneelLoop )


--Wait for Scene6
WaitForTrigger(""Scene6"")
Wait(2)
FadeIn(kang, 1)
Wait(6)
PlayOneShotSplitBodyAnim( kang, Animations.KneelEnd )
StopLoopingSplitBodyAnim( kang, Animations.KneelLoop )
Wait(2.23)
PlayLoopingSplitBodyAnim( kang, Animations.Stand )
kang:SetFacing(161.2)

--Wait for Scene 7
WaitForTrigger(""Scene7"")
PlayOneShotSplitBodyAnim( kang, Animations.BattleRoar )
kang: ClearSpellVisual( kangAuraVisual) -- Clear chroma
StopLoopingSplitBodyAnim( kang, Animations.Stand )
PlayLoopingSplitBodyAnim( kang, Animations.ReadyUnarmed )


--Wait for endScene
WaitForTrigger(""endScene"")
FadeOut(kang, 1)
kang: Despawn()"
896,Jade Forest - Alliance - Dream Brew - Init - ZTO,"--Spells
anduinRedemptionSpellID = 39794
varianTransformID = 120704
waterInTheFaceID = 105604
nukeExplosion = 103119

--Spawn Player Clone
playerClone = SpawnActivePlayerCloneActor ( -603.652, -2299.72, 21.7098, 127.348)
FadeOut(playerClone, 0)

-- Spawn Lo'gash
logashID = 39622
logash = SpawnActor( logashID, -618.722, -2308.68, 21.9635, 30.039, .8, true )  -- Lo'gosh spawns behind house
FadeOut(logash, 0)

-- Spawn Anduin
anduinID = 64628
anduin = SpawnActor( anduinID, -589.409, -2292.17, 21.7195, 212.49, 1.5, true )  -- Anduin spawns behind house
FadeOut(anduin, 0)

-- Spawn Garrosh
garroshID = 64629
garrosh = SpawnActor( garroshID, -561.908, -2338.62, 11, 132.974, 15, false )  -- Garrosh spawns behind the wall
FadeOut(garrosh, 0)

-- Spawn King Varian Wrynn
varianID = 29611
varian = SpawnActor( varianID, -610.106, -2302.14, 21.7196, 352.798, 1, true )  -- Lorewalker Cho spawns off screen
FadeOut(varian, 0)

-- Spawn Fire Effects
firewallID = ""World\\Expansion03\\Doodads\\GrimBatolRaid\\grimbatolraid_fire_wall_02.m2""
firewall1 = SpawnModelActor( firewallID, -555.031, -2319.77, 17.9596, 146.475, 3, false ) -- Spawn Main Campfire
firewall1b = SpawnModelActor( firewallID, -551.277, -2322.26, 21.5928, 146.475, 3, false ) -- Spawn Main Campfire
firewall2 = SpawnModelActor( firewallID, -574.984, -2346.05, 18.0594, 130.275, 3, false ) -- Spawn Main Campfire
firewall2b = SpawnModelActor( firewallID, -575.218, -2348.87, 21.3402, 129.15, 3, false ) -- Spawn Main Campfire
firewall3 = SpawnModelActor( firewallID, -564.484, -2336.77, 16.5849, 136.636, 2, false ) -- Spawn Main Campfire
FadeOut(firewall1, 0)
FadeOut(firewall1b, 0)
FadeOut(firewall2, 0)
FadeOut(firewall2b, 0)
FadeOut(firewall3, 0)

-- Spawn Lorewalker Cho
lorewalkerChoID = 54961
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, -578.598, -2311.74, 18.4597, 144.004, 1, true )  -- Lorewalker Cho spawns off screen
FadeOut(lorewalker, 0)

-- Horde Props
bunnyCreatureID = 62026
tallbannerID = ""WORLD\\GENERIC\\ORC\\PASSIVE DOODADS\\HORDEBANNERS\\HordeBanner04.m2""
burningBannerID = ""WORLD\\GENERIC\\ORC\\PASSIVE DOODADS\\HORDEBANNERS\\HordeBanner04_Burned.M2""
bannerID = ""WORLD\\GENERIC\\ORC\\PASSIVE DOODADS\\HORDEBANNERS\\HordeBanner02.m2""
horde_sm1 = SpawnModelActor( bannerID, -569.918, -2324.86, 10.459, 134.262, 1, false ) -- Spawn Main Campfire
horde_sm2 = SpawnModelActor( bannerID, -577.947, -2332.72, 10.0644, 125.937, 1, false ) -- Spawn Main Campfire
horde_tl1 = SpawnModelActor( tallbannerID, -566.653, -2322.1, 0.459, 54.7153, 1, false ) -- Spawn Main Campfire
horde_tl2 = SpawnModelActor( tallbannerID, -580.315, -2335.8, 1.2333, 253.615, 1, false ) -- Spawn Main Campfire
horde_burn1 = SpawnModelActor( burningBannerID, -563.945, -2327.59, 23.3689, 54.7153, 1, false ) -- Spawn Main Campfire
horde_burn2 = SpawnModelActor( burningBannerID, -574.702, -2337.25, 23.3689, 253.615, 1, false ) -- Spawn Main Campfire
nukeBunny = SpawnActor( bunnyCreatureID, -537.056, -2343.98, 16.9699, 141.54, 1, false)
FadeOut(horde_sm1, 0)
FadeOut(horde_sm2, 0)
FadeOut(horde_tl1, 0)
FadeOut(horde_tl2, 0)
FadeOut(horde_burn1, 0)
FadeOut(horde_burn2, 0)"
897,Jade Forest - Alliance - Dream Brew - logash - ZTO,"--cue Lo'gash
WaitForTrigger(""cueLogash"")
FadeIn(logash, 2)
--RunToLocation( logash, 2, -618.722, -2308.68, 21.9635, 30.039, true)
logash:BroadcastTextStereo(BroadcastType.Say, 65150) -- VO Line 1 (Intro, Fire in hand)
logash:PlayLoopingAnimKit(2716)
RunToLocation( logash, 2, -610.106, -2302.14, 21.7196, 352.798, true)
logash:StopAnimKit(2716)
StopLoopingSplitBodyAnim( logash, Animations.Walk)
--logash:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
SendTrigger( ""Scene1"" ) --Cue Anduin

--Wait for Anduin to cast spell
WaitForTrigger(""Scene2"")
PlayOneShotSplitBodyAnim( logash, Animations.CreatureSpecial )
Wait(2)
CastSpellAtActor( logash, logash, varianTransformID )
FadeOut(logash, 1)
logash: Despawn()"
898,Jade Forest - Alliance - Dream Brew - Varian - ZTO,"--cue Varian
WaitForTrigger(""Scene2"")
Wait(1)
PlayOneShotSplitBodyAnim( varian, Animations.EmoteRoar)
Wait(1)
FadeIn(varian, 1)
CastSpellAtActor( varian, varian, varianTransformID )
Wait(3)
Wait(2)
PlayOneShotSplitBodyAnim( varian, Animations.KneelStart)
PlayLoopingSplitBodyAnim( varian, Animations.KneelLoop)

--Wait for Anduin to cast spell
WaitForTrigger(""Scene5"")
FadeOut(varian, 1)
varian: Despawn()"
899,Jade Forest - Alliance - Dream Brew - anduin - ZTO,"--cue Anduin
WaitForTrigger(""Scene1"")
FadeIn(anduin, 2)
local anduinWings = anduin:PlaySpellStateVisual(7880) --Hand Fire
RunToLocation( anduin, 4, -588.314, -2289.04, 21.72, 223.873, true)
RunToLocation( anduin, 4, -599.429, -2299.57, 21.5321, 216.448, true)
anduin:BroadcastTextStereo(BroadcastType.Say, 65151) -- Anduin VO Line 1 
CastSpellAtActor( anduin, logash, anduinRedemptionSpellID )
--anduin:WaitCastingComplete(anduin, anduinRedemptionSpellID)
Wait(2)
SendTrigger(""Scene2"") -- Tell Lo'gash to transform in to Varian
Wait(2)
--anduin:WaitSoundKitComplete(27573) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)
anduin:BroadcastTextStereo(BroadcastType.Say, 65152) -- Anduin VO Line 2
SendTrigger(""Scene2a"")
RunToLocation( anduin, 7, -597.141, -2306.56, 19.9895, 316.123, true)
SendTrigger(""Scene3"") -- Prep Garrosh and fire and all that jazz
RunToLocation( anduin, 7, -567.083, -2335.15, 18.4476, 315.223, true)
--anduin:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(5)
SendTrigger(""Scene4"")
RunToLocation( anduin, 7, -558.953, -2343.22, 9.7377, 315.223, true)
FadeOut(anduin, 1)
anduin: Despawn()"
900,Jade Forest - Alliance - Dream Brew - Garrosh - ZTO,"--Wait for cue from Anduin
WaitForTrigger(""Scene3"")
PlayLoopingSplitBodyAnim( garrosh, Animations.SitGround)
Wait(5)

WaitForTrigger(""Scene4"")
FadeIn(garrosh, 2)
--PlayOneShotSplitBodyAnim( garrosh, Animations.SitGroundUp)
Wait(1)
garrosh: PlayLoopingAnimKit(2777)
--PlayOneShotSplitBodyAnim( garrosh, Animations.EmoteTalkExclamation)
StopLoopingSplitBodyAnim( garrosh, Animations.SitGround)
Wait(2)
garrosh:BroadcastTextStereo(BroadcastType.Say, 65153) -- Anduin VO Line 1 
garrosh: PlayLoopingAnimKit(3183)
garrosh: PlayOneShotAnimKit(2766)
--garrosh:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(5)
garrosh: StopAnimKit(3183)
SendTrigger(""Scene5"")

--Wait for cue from Cho 
WaitForTrigger(""Scene6"")
FadeOut(garrosh, 1)
garrosh: Despawn()"
901,Jade Forest - Alliance - Dream Brew - Firewalls - ZTO,"--Wait for cue from Anduin
WaitForTrigger(""Scene3"")
Wait(2)
FadeIn(firewall1, 4)
FadeIn(firewall1b, 4)
FadeIn(firewall2, 4)
FadeIn(firewall2b, 4)
FadeIn(firewall3, 4)


-- Wait until cleared by Lorewalker Cho
WaitForTrigger(""Scene6"")
FadeOut(firewall1, 1)
FadeOut(firewall1b, 1)
FadeOut(firewall2, 1)
FadeOut(firewall2b, 1)
FadeOut(firewall3, 1)

firewall1: Despawn()
firewall1b: Despawn()
firewall2: Despawn()
firewall2b: Despawn()
firewall3: Despawn()"
902,Jade Forest - Alliance - Dream Brew - Lorewalker Cho - ZTO,"--Wait for cue from Anduin
WaitForTrigger(""Scene4"")
Wait(2)
FadeIn(lorewalker, 2)
local waterBucket = lorewalker:PlaySpellStateVisual(18444) --Hand Fire
Wait(4)
RunToLocation(lorewalker, 3, -589.224, -2312.56, 18.6052, 121.731, true)

--Wait for cue from Garrosh
WaitForTrigger(""Scene5"")
lorewalker:BroadcastTextStereo(BroadcastType.Say, 62624) -- Lorewalker VO Line 1 
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk)
lorewalker: PlayLoopingAnimKit(3183)
RunToLocation(lorewalker, 3, -594.965, -2303.37, 20.2492, 131.623, true)
RunToLocation(lorewalker, 3, -602.024, -2295.34, 21.8028, 288.102, true)
Wait(2)
CastSpellAtActor( lorewalker, playerClone, waterInTheFaceID )
lorewalker:WaitCastingComplete(lorewalker, waterInTheFaceID)
Wait(1)
SendTrigger(""Scene6"")
lorewalker:ClearSpellVisual( waterBucket)
Wait(3)
lorewalker: StopAnimKit(3183)
SendTrigger(""endScene"")
lorewalker:Despawn()"
903,Jade Forest - Alliance - Dream Brew - player - ZTO,"local sleepingSpell = playerClone:PlaySpellStateVisual(12147) --Hand Fire
PlayLoopingSplitBodyAnim (playerClone, Animations.Sleep )
Wait(2)
FadeIn(playerClone, 2)

--Wait for Cho
WaitForTrigger(""endScene"")
playerClone:Despawn()"
904,Jade Forest - Alliance - Dream Brew - Horde Static Banners - ZTO,"--Wait for cue from Anduin
WaitForTrigger(""Scene4"")
FadeIn(horde_burn1, 1)
FadeIn(horde_burn2, 1)

-- Wait until cleared by Lorewalker Cho
WaitForTrigger(""Scene6"")
FadeOut(horde_burn1, 1)
FadeOut(horde_burn2, 1)

horde_burn1: Despawn()
horde_burn2: Despawn()"
905,Jade Forest - Alliance - Dream Brew - horde_sm1 - ZTO,"--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeIn(horde_sm1, 5)
RunToLocation(horde_sm1, 4, -569.918, -2324.86, 18.459, 134.262, false)

--Wait to be dismissed
WaitForTrigger(""Scene6"")
FadeOut(horde_sm1, 1)
horde_sm1: Despawn()"
906,Jade Forest - Alliance - Dream Brew - horde_sm2 - ZTO,"--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeIn(horde_sm2, 5)
RunToLocation(horde_sm2, 4, -577.947, -2332.72, 19.0644, 125.937, false)

--Wait to be dismissed
WaitForTrigger(""Scene6"")
FadeOut(horde_sm2, 1)
horde_sm2: Despawn()"
907,Jade Forest - Alliance - Dream Brew - horde_tl1 - ZTO,"--Wait for Scene 4
WaitForTrigger(""Scene4"")
Wait(2)
FadeIn(horde_tl1, 5)
RunToLocation(horde_tl1, 4, -566.653, -2322.1, 18.459, 54.7153, false)

--Wait to be dismissed
WaitForTrigger(""Scene6"")
FadeOut(horde_tl1, 1)
horde_tl1: Despawn()"
908,Jade Forest - Alliance - Dream Brew - horde_tl2 - ZTO,"--Wait for Scene 4
WaitForTrigger(""Scene4"")
Wait(2)
FadeIn(horde_tl2, 5)
RunToLocation(horde_tl2, 4, -580.315, -2335.8, 19.2333, 253.615, false)

--Wait to be dismissed
WaitForTrigger(""Scene6"")
FadeOut(horde_tl2, 1)
horde_tl2: Despawn()"
910,Jade Forest - Alliance - Dream Brew - Master Script - ZTO,"scene:WaitTimer(2)
scene:SetCamera(432,2,nil,nil)

scene:WaitTimer(2)
SendTrigger(""cueLogash"")

scene:SetCamera(431,2,nil,nil) -- (camera, transition time, primary target, secondary target)

-- set scene fade region
scene:SetFadeRegion(100, true)

WaitForTrigger(""Scene1"")
scene:SetCamera(433,5,nil,nil)

WaitForTrigger(""Scene2a"")
scene:SetCamera(434,5,nil,nil)

WaitForTrigger(""Scene4"")

scene:SetCamera(435,2,nil,nil) -- sets camera back to Garrosh
WaitForTrigger(""Scene5"") -- Lorewalker Cho Says his line
Wait(2)
scene:SetCamera(434,5,nil,nil) -- sets camera back to game-cam

scene:SetCamera(433,15,nil,nil)
--Wait(2)
--scene:SetCamera(432,2,nil,nil)
--Wait(2)
WaitForTrigger(""Scene6"")
scene:SetCamera(0,3,nil,nil)
--Wait(3)
WaitForTrigger(""endScene"")
scene:SetFadeRegion(0, false)
"
911,Undead - Death and Decay,"function Control_DeathAndDecay(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local fillModel = fid(165886);
	local groundModel = fid(464032);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0)

	local killFunction, fillFunction, actor = CreateBlizzardEffect( 
			groundModel,
			0.2,		-- Base scale
			fillModel, 
			0.2,		-- Fill Scale
			Transform:New(centerPosition,0),
			2,  -- width
			2,  -- depth
			6   -- fill rate
			) 
	
	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		fillFunction(3)

		scene:WaitTimer(3);
	end

	killFunction();
end"
912,Reusable Scripts - Build Pad Object,"function CreatePadObject(
			baseModel, 
			baseScale,
			transform,
			snapToGround
			)

	local centerCreateData = ActorCreateData:Default();
	
	centerCreateData.name = ""Center"";
	centerCreateData.modelFileID = baseModel;
	centerCreateData.transform = transform;
	centerCreateData.scale = baseScale;
	centerCreateData.interactible = false;
	if ( snapToGround == false ) then 
		centerCreateData.groundSnap = false
	end

	local groundActor = scene:SpawnActor(centerCreateData);
	local kit = groundActor:PlayLoopingAnimKit(petBattleAnimKits.StandHoldDecay);

	local killFunction = function()
		kit:Stop();
		groundActor:Despawn();
	end

	return groundActor, killFunction;
end"
913,Brazie's PetBattle - Dispatcher - Visuals - Cast / Impact,"--
-- Performs the effect visual for each target
--
function Dispatcher_PerformMultiTargetVisual( userROID, targetROIDs,  visualID )
	local user = ROIDTOUNIT( userROID );

	local targets = {};

--print(""CastVisual: "", ROIDTOSTRING(userROID),"" ? "",visualID );
	for i=1,#targetROIDs do 
		local targetROID = targetROIDs[i];
		local targetPet = ROIDTOUNIT( targetROID );
--print(""CastVisual@: "", ROIDTOSTRING(targetROID) );

		if ( targetPet and targetROID ~= userROID ) then 
			table.insert( targets, targetPet );
		elseif ( targetROID == userROID ) then 
			warning (""WARNING: MultiTargetVisual - Target is the caster and is being skipped. This is probably not a bug, but confirm."");
		else
			warning (""ERROR: MultiTargetVisual - Invalid target pet: "",ROIDTOSTRING(targetROID) );
		end 
	end

	if ( not user ) then 
		warning (""ERROR: MultiTargetVisual - Invalid pet. "",ROIDTOSTRING(userROID) );
		return;
	end

	PerformSpellVisualManyTargets( user, visualID, targets )
end 

-- Performs an impact visual whenever
--

function Dispatcher_PerformResultImpactVisual( victimROID, attackerROID, abilityVisualID )

	if ( not abilityVisualID ) then 
		warning( ""ERROR: No Spell Visual ID provided to Dispatcher_PerformResultImpactVisual"" );
		return;
	end
--print( ""ImpactVisual: "",ROIDTOSTRING(targetROID),"" "",abilityVisualID ); 


	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return
	end
	local spellVisualID = abilityVisual.spellVisualID
--print( ""ImpactVisual: "",ROIDTOSTRING(victimROID),"" Spell Vis ID: "",spellVisualID );

	local targetPet = ROIDTOPET(victimROID);
	if ( targetPet ) then 
		if ( victimROID == attackerROID ) then 
			targetPet.actor:PlaySpellImpactVisual(spellVisualID)
		else
			targetPet.actor:PlaySpellTargetImpactVisual(spellVisualID)
		end
	end
end
"
914,Brazie's PetBattle - Dispatcher - Visuals - Dodge,"
-- Performs a dodge when requested
--
function Dispatcher_PerformDodge( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	-- Process independently
	local victimActorCanMove = false
	if ( victimActor and (victim.sessile == false) ) then
		victimActorCanMove = true
		victimActor:WaitMovementComplete()
	end

	DebugPrint(""dodge"") 
	if ( feedbackActor ) then
		feedbackActor:PlaySoundKit(15927, true);
		feedbackActor:AddWorldText( victim.actor, MissReasons.Dodged, false, false)
	end

	if ( not victimActorCanMove ) then
		return
	end

	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return
	end

	local coin = math.random(0,1);
	if ( coin == 0 ) then 
		coin = -1;
	end

	local front = 0.01;
	local left = 0.75*coin;
	local up = 0; 

	victimActor:SetFacingToTarget( attackerActor, Vector:New() )

	PerformRelativeSlide( victim, attacker, front, left, up );

	victimActor:WaitMovementComplete()
end
"
915,Brazie's PetBattle - Dispatcher - Visuals - Knockbacks,"
-- Performs a bump when requested
--
function Dispatcher_PerformImpactBump( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		PerformBump( victim, attacker, distance, time ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactVerticalKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end
 
	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		--PerformKnockback( victim, attacker, d, t ) 
	
		PerformVerticalKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactHugeKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactHomeKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not "
916,Kun Lai Summit - Alliance Hub Swap Scene - Clone 01 - JSB,"
Wait( 1 )

clone:PlaySoundKitStereo(32996, true)

clone:PlaySoundKitStereo(33002, false)

-- wait before running in
Wait(30)
FadeIn( clone, 0 )
RunToLocation( clone, 5, 2131.4, 1455.66, 487.884, 30.7971 )
RunToLocation( clone, 5, 2158.2, 1466.69, 487.887, 36.0621 )"
918,Aquatic - Tranquillity,"function Control_Tranquillity(ROID, isAura, aura, auraInstanceID, turnsRemaining)
	local pad = ROIDTOPET(ROID); 

	local fillModel = fid(165886);
	local groundModel = fid(167134);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0)

	local killFunction, fillFunction, actor = CreateBlizzardEffect( 
			groundModel,
			0.2,		-- Base scale
			fillModel, 
			0.2,		-- Fill Scale
			Transform:New(centerPosition,0),
			2,  -- width
			2,  -- depth
			0   -- fill rate
			) 
	
	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		fillFunction(3)

		scene:WaitTimer(3);
	end

	killFunction();
end "
919,Brazie's PetBattle - Core - Default Turn - Visuals,"
-- Play a visual and hit every involved unit
function DefaultTurnVisualHandler( ROID, turn, overrideSuccess, overrideFailure, overrideEffectSuccess, overrideEffectFailure )
	local turnVisualID = turn.turnVisualID ;

	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 
		
		-- Perform the Turn Visual
		local masterTargets = turn.primaryTargetList;

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		-- Face the first target
		if ( target ) then 
			DefaultFacing ( ROID, targetROID );
		end

		Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )
 
--		print(""Daz: turn visual="" .. tostring(turnVisualID) .. "", failed="" .. tostring(failed))

		if ( not failed ) then 
			local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
			success ( targetROID, ROID, turnVisualID, flags )
		else
			local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
			failure( targetROID, ROID, turnVisualID, flags )
		end

-- 
-- The TurnVisual Handler should not run the effects. Let the loop handle that.
--[[
		for index=1,#turn.effects do 
			local effect = turn.effects[index];			
			DefaultEffectVisualHandler(ROID, effect, turnVisualID, overrideEffectSuccess, overrideEffectFailure)
		end 
--]]
		return true;
	end

	return false;
end


-- Play a visual and hit every involved unit
function DefaultTurnOnEffectVisualHandler( ROID, turn, effect, overrideSuccess, overrideFailure )
	local turnVisualID = turn.turnVisualID ;
	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 

		local masterTargets = { effect.primaryTarget };


		-- [ABrazie]: Removed on 7/6/2012 to fire only at the primary target of the effect
		---= effect.targetList;
	
		-- [ABrazie]: Removed on 6/25 to support the premade target list
		-- This only took the first result into account. May cause bugs.
		-- May fix bugs. Please review later.
		--
		--[[
		local targets = {ResultToTargetROID(effect.results[1])}  --EffectToROIDs ( effect );

		for k,v in pairs(targets) do 
			table.insert(masterTargets, v);
		end
		-]]

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		-- Face the first target
		DefaultFacing ( ROID, targetROID );

		Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )

		if ( not failed ) then 
			local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
			success ( targetROID, ROID, turnVisualID, flags )
		else
			local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
			failure( targetROID, ROID, turnVisualID, flags )
		end

		return true;
	else
		print(""WARNING: NO turn visual provided to DefaultTurnOnEffectVisualHandler."");
	end

	return false;
end"
920,Lorewalker Story - S7: Monks - Init - Slaves - ZTO,"-- Spawn Slaves
pandarenSlaveID = 61904

pandarenSlavef1 = SpawnActor( pandarenSlaveID, 1461.4, 367.534, 550.221, 221.275, 0.75, true ) 
pandarenSlavef2 = SpawnActor( pandarenSlaveID, 1458.4, 370.953, 550.221, 221.275, 0.75, true ) 
pandarenSlavef3 = SpawnActor( pandarenSlaveID, 1455.16, 374.636, 550.221, 221.275, 0.75, true ) 

pandarenSlavef4 = SpawnActor( pandarenSlaveID, 1465.63, 370.143, 550.221, 221.275, 0.75, true ) 
pandarenSlavef6 = SpawnActor( pandarenSlaveID, 1458.85, 377.871, 550.221, 221.275, 0.75, true ) 

pandarenSlavef7 = SpawnActor( pandarenSlaveID, 1455.64, 362.476, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef8 = SpawnActor( pandarenSlaveID, 1452.28, 366.209, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef9 = SpawnActor( pandarenSlaveID, 1449.67, 369.429, 550.221, 41.9498, 0.75, true ) 

pandarenSlavef10 = SpawnActor( pandarenSlaveID, 1452.36, 359.539, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef11 = SpawnActor( pandarenSlaveID, 1448.95, 363.222, 550.221, 41.9498, 0.75, true ) 
pandarenSlavef12 = SpawnActor( pandarenSlaveID, 1446.42, 366.514, 550.221, 41.9498, 0.75, true ) 

FadeOut(pandarenSlavef1, 0)
FadeOut(pandarenSlavef2, 0)
FadeOut(pandarenSlavef3, 0)
FadeOut(pandarenSlavef4, 0)
FadeOut(pandarenSlavef6, 0)
FadeOut(pandarenSlavef7, 0)
FadeOut(pandarenSlavef8, 0)
FadeOut(pandarenSlavef9, 0)
FadeOut(pandarenSlavef10, 0)
FadeOut(pandarenSlavef11, 0)
FadeOut(pandarenSlavef12, 0)"
921,Lorewalker Story - S7: Monks - Init - Kang - ZTO,"-- Spawn Kang
kangID = 61907

kang = SpawnActor( kangID, 1462.47, 373.747, 550.221, 221.275, 1, true ) 

FadeOut( kang, 0 )
"
922,Lorewalker Story - S7: Monks - Pandaren Slaves Kneeling - ZTO,"--local actorAuraVisual = pandarenSlavef1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef4:PlaySpellStateVisual(24803) --Cast Actor Visual
--local actorAuraVisual = pandarenSlavef5:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef6:PlaySpellStateVisual(24803) --Cast Actor Visual
--local actorAuraVisual = pandarenSlavef7:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef8:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef9:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef10:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef11:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef12:PlaySpellStateVisual(24803) --Cast Actor Visual
--PlayLoopingSplitBodyAnim( pandarenSlavef1, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef2, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef3, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef4, Animations.KneelLoop )
--PlayLoopingSplitBodyAnim( pandarenSlavef5, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef6, Animations.KneelLoop )
--PlayLoopingSplitBodyAnim( pandarenSlavef7, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef8, Animations.KneelLoop )
--PlayLoopingSplitBodyAnim( pandarenSlavef9, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef10, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef11, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef12, Animations.KneelLoop )

--Wait for Scene 2
WaitForTrigger(""Scene2"")
Wait(2)
--FadeIn(pandarenSlavef1, 1)
FadeIn(pandarenSlavef2, 1)
FadeIn(pandarenSlavef3, 1)
FadeIn(pandarenSlavef4, 1)
--FadeIn(pandarenSlavef5, 1)
FadeIn(pandarenSlavef6, 1)
--FadeIn(pandarenSlavef7, 1)
FadeIn(pandarenSlavef8, 1)
--FadeIn(pandarenSlavef9, 1)
FadeIn(pandarenSlavef10, 1)
FadeIn(pandarenSlavef11, 1)
FadeIn(pandarenSlavef12, 1)

--WaitForScene 5
WaitForTrigger(""Scene5"")
--StopLoopingSplitBodyAnim( pandarenSlavef1, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef2, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef3, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef4, Animations.KneelLoop )
--StopLoopingSplitBodyAnim( pandarenSlavef5, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef6, Animations.KneelLoop )
--StopLoopingSplitBodyAnim( pandarenSlavef7, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef8, Animations.KneelLoop )
--StopLoopingSplitBodyAnim( pandarenSlavef9, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef10, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef11, Animations.KneelLoop )
StopLoopingSplitBodyAnim( pandarenSlavef12, Animations.KneelLoop )

--[[
--pandarenSlavef1: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
pandarenSlavef2: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
pandarenSlavef3: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
pandarenSlavef4: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
--pandarenSlavef5: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
pandarenSlavef6: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
--pandarenSlavef7: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
pandarenSlavef8: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
--pandarenSlavef9: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
pandarenSlavef10: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
"
923,Lorewalker Story - S7: Monks - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

--OnScene Start

Wait (2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
lorewalker:BroadcastText(BroadcastType.Say, 66423) -- VO Line 1 (Intro)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene1"" ) 
RunToLocation(lorewalker, 2, 1456.09, 361.544, 550.223, 103.572)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(7) --Wait (10)
--lorewalker:WaitSoundKitComplete(30121) -- Catch-up

lorewalker:BroadcastText(BroadcastType.Say, 66424) -- VO Line 2 (Mogu ruled Pandaria)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
RunToLocation(lorewalker, 2, 1462.1, 365.337, 550.221, 156.014)
lorewalker:PlayOneShotAnimKit( 3229 )
SendTrigger( ""Scene2"" ) --Cue mogu & slaves
Wait(10) --Wait (14)
--lorewalker:WaitSoundKitComplete(30122) -- Catch-up

WaitForTrigger(""Scene3b"") --Wait for Kang to be in position.
lorewalker:BroadcastText(BroadcastType.Say, 66425) -- VO Line 3 (The Slaves of Pandaria)
lorewalker:StopAnimKit( 3229 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene3"" ) --Kang issues command
Wait (7) 
--lorewalker:WaitSoundKitComplete(30123) -- Catch-up

lorewalker:BroadcastText(BroadcastType.Say, 66426) -- VO Line 4 (slaves sent to the wall)
--lorewalker:PlayOneShotAnimKit( 3229 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene4"" ) --Kang Challenges
Wait (5)
lorewalker:PlayOneShotAnimKit( 3229 )
Wait (5)
--lorewalker:WaitSoundKitComplete(30124) -- Catch-up

lorewalker:BroadcastText(BroadcastType.Say, 66427) -- VO Line 5 (Mogu Fleshshapers make Saurok and terrorcotta)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene5"" ) -- Kang Fights the other pandaren
Wait (15)
--lorewalker:WaitSoundKitComplete(30125) -- Catch-up

lorewalker:BroadcastText(BroadcastType.Say, 66428) -- VO Line 6 (Mogu marching through field of slaves)
lorewalker:StopAnimKit( 3229 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene6"" ) --Cue Speach
--Wait (22)
Wait(5)
lorewalker:PlayOneShotAnimKit( 3229 )
Wait(10)
lorewalker:StopAnimKit( 3229 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(7)
--lorewalker:WaitSoundKitComplete(30126) -- Catch-up

lorewalker:BroadcastText(BroadcastType.Say, 66429) -- VO Line 7 (The Rise of Kang)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene7"" ) --cue slaves bowing before Kang
Wait (10)
--lorewalker:WaitSoundKitComplete(30127) -- Catch-up

lorewalker:BroadcastText(BroadcastType.Say, 66430) -- VO Line 7 (The Rise of Kang)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene8"" ) --cue Kang assuming the position
FadeIn(light_ul, 2)
FadeIn(light_ur, 2)
FadeIn(light_cc, 2)
Wait (5)
--lorewalker:WaitSoundKitComplete(30128) -- Catch-up

lorewalker:BroadcastText(BroadcastType.Say, 66431) -- VO Line 7 (The Rise of Kang)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Scene9"" ) --cue Kang assuming the position
FadeOut(light_uc, 2)
FadeOut(light_ul, 2)
FadeOut(light_ur, 2)
FadeOut(light_cc, 2)
RunToLocation(lorewalker, 2, 1447.18, 371.453, 550.221, 93.5645)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(6)--Wait (10)
--lorewalker:WaitSoundKitComplete(30129) -- Catch-up

--Wrap up
SendTrigger( ""endScene"" )
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(4)
lorewalker: Despawn()
scene:EndScene()"
924,Lorewalker Story - S7: Monks - Kang - ZTO,"local actorAuraVisual = kang:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( kang, Animations.KneelLoop )


--Wait for Scene6
WaitForTrigger(""Scene2"") 
Wait(2)
FadeIn(kang, 1)
Wait(4)
--FadeIn(light_ur, 2)
Wait(2)
StopLoopingSplitBodyAnim( kang, Animations.KneelLoop )
PlayOneShotSplitBodyAnim( kang, Animations.KneelEnd )
Wait(2)
--kang:SetFacing(161.2)
RunToLocation(kang, 2, 1457.4, 365.832, 550.223, 129.699, true)
Wait(2)
--FadeOut(light_ur, 2)
FadeIn(light_uc, 2)
SendTrigger(""Scene3b"")

--Wait for Scene 3
WaitForTrigger(""Scene3"")
PlayOneShotSplitBodyAnim( kang, Animations.EmoteRoar )
kang: ClearSpellVisual( actorAuraVisual) -- Clear chroma
PlayLoopingSplitBodyAnim( kang, Animations.MonkOffenseReadyUnarmed )

--Wait for Scene 4
WaitForTrigger(""Scene4"")
Wait(5)
PlayOneShotSplitBodyAnim( kang, Animations.EmoteTalkExclamation )

--Wait for Scene 5
WaitForTrigger(""Scene5"")
Wait(2)
PlayOneShotSplitBodyAnim( kang, Animations.ParryUnarmed )
Wait(2)
PlayOneShotSplitBodyAnim( kang, Animations.MonkOffenseParryUnarmed )
Wait(2)
PlayOneShotSplitBodyAnim( kang, Animations.MonkDefenseParryUnarmed )
Wait(2)
PlayOneShotSplitBodyAnim( kang, Animations.ParryUnarmed )
Wait(2)
PlayOneShotSplitBodyAnim( kang, Animations.MonkOffenseParryUnarmed )


--Wait for Scene 6
WaitForTrigger(""Scene6"")
StopLoopingSplitBodyAnim( kang, Animations.MonkOffenseReadyUnarmed )
PlayOneShotSplitBodyAnim( kang, Animations.EmoteFlex )
Wait(5)
PlayOneShotSplitBodyAnim( kang, Animations.EmoteNo )
Wait(5)
PlayLoopingSplitBodyAnim( kang, Animations.EmoteTalkExclamation )


-- Wait for Scene 7
WaitForTrigger(""Scene7"")
StopLoopingSplitBodyAnim( kang, Animations.EmoteTalkExclamation )
PlayLoopingSplitBodyAnim( kang, Animations.ReadyBow )

--Wait for endScene
WaitForTrigger(""Scene9"")
Wait(2)
FadeOut(kang, 2)
kang: Despawn()"
925,Lorewalker Story - S7: Monks - pandarenSlavef1 - ZTO,"local actorAuraVisual = pandarenSlavef1:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( pandarenSlavef1, Animations.KneelLoop )

--Wait for Scene 2
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn(pandarenSlavef1, 1)

--Wait for Scene 7
WaitForTrigger(""Scene5"")
Wait(2)
StopLoopingSplitBodyAnim( pandarenSlavef1, Animations.KneelLoop)
RunToLocation( pandarenSlavef1, 3, 1458.01, 368.667, 550.222, 254.575)
Wait(1)
PlayOneShotSplitBodyAnim( pandarenSlavef1, Animations.AttackUnarmed)
Wait(1)
FadeOut(pandarenSlavef1, 1)

--Wait for endScene
WaitForTrigger(""endScene"")
pandarenSlavef1: Despawn()
"
926,Lorewalker Story - S7: Monks - pandarenSlavef7 - ZTO,"local actorAuraVisual = pandarenSlavef7:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( pandarenSlavef7, Animations.KneelLoop )

--Wait for Scene 2
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn(pandarenSlavef7, 1)

--Wait for Scene 7
WaitForTrigger(""Scene5"")
StopLoopingSplitBodyAnim( pandarenSlavef7, Animations.KneelLoop)
RunToLocation( pandarenSlavef7, 3, 1455.44, 366.083, 550.221, 351.998)
Wait(1)
PlayOneShotSplitBodyAnim( pandarenSlavef7, Animations.AttackUnarmed)
Wait(1)
FadeOut(pandarenSlavef7, 1)

--Wait for endScene
WaitForTrigger(""endScene"")
pandarenSlavef7: Despawn()"
927,Lorewalker Story - S7: Monks - pandarenSlavef9 - ZTO,"local actorAuraVisual = pandarenSlavef9:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( pandarenSlavef9, Animations.KneelLoop )

--Wait for Scene 2
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn(pandarenSlavef9, 1)

--Wait for Scene 7
WaitForTrigger(""Scene5"")
Wait(4)
StopLoopingSplitBodyAnim( pandarenSlavef9, Animations.KneelLoop)
RunToLocation( pandarenSlavef9, 3, 1456.49, 367.246, 550.222, 313.523)
Wait(1)
PlayOneShotSplitBodyAnim( pandarenSlavef9, Animations.AttackUnarmed)
Wait(1)
FadeOut(pandarenSlavef9, 1)

--Wait for endScene
WaitForTrigger(""endScene"")
pandarenSlavef9: Despawn()"
928,[1] Lorewalker Story - S7: Monks - Pandaren Slaves Kneeling - ZTO,"pandarenSlavef11: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
pandarenSlavef12: SetFacingToAbs(Vector:New(1457.4, 365.832, 550.223)) 
]]--

--PlayLoopingSplitBodyAnim( pandarenSlavef1, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef2, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef3, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef4, Animations.Stand )
--PlayLoopingSplitBodyAnim( pandarenSlavef5, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef6, Animations.Stand )
--PlayLoopingSplitBodyAnim( pandarenSlavef7, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef8, Animations.Stand )
--PlayLoopingSplitBodyAnim( pandarenSlavef9, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef10, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef11, Animations.Stand )
PlayLoopingSplitBodyAnim( pandarenSlavef12, Animations.Stand )

--Wait for Scene 6
WaitForTrigger(""Scene6"")
RunToLocation(pandarenSlavef3, 2, 1455.38, 371.777, 550.221, 288.095)
RunToLocation(pandarenSlavef8, 2, 1451.67, 370.383, 550.221, 333.995)
RunToLocation(pandarenSlavef12, 2, 1451.03, 366.385, 550.221, 1.21942)
RunToLocation(pandarenSlavef6, 2, 1463.56, 371.749, 550.222, 224.645)

StopLoopingSplitBodyAnim( pandarenSlavef2, Animations.Stand )
StopLoopingSplitBodyAnim( pandarenSlavef3, Animations.Stand )
StopLoopingSplitBodyAnim( pandarenSlavef4, Animations.Stand )
--StopLoopingSplitBodyAnim( pandarenSlavef5, Animations.Stand )
StopLoopingSplitBodyAnim( pandarenSlavef6, Animations.Stand )
--StopLoopingSplitBodyAnim( pandarenSlavef7, Animations.Stand )
StopLoopingSplitBodyAnim( pandarenSlavef8, Animations.Stand )
--StopLoopingSplitBodyAnim( pandarenSlavef9, Animations.Stand )
StopLoopingSplitBodyAnim( pandarenSlavef10, Animations.Stand )
StopLoopingSplitBodyAnim( pandarenSlavef11, Animations.Stand )
StopLoopingSplitBodyAnim( pandarenSlavef12, Animations.Stand )

--Wait for Scene 6
WaitForTrigger(""Scene7"")
PlayLoopingSplitBodyAnim( pandarenSlavef2, Animations.EmoteBow )
PlayLoopingSplitBodyAnim( pandarenSlavef3, Animations.EmoteBeg )
PlayLoopingSplitBodyAnim( pandarenSlavef4, Animations.EmoteBow )
--PlayLoopingSplitBodyAnim( pandarenSlavef5, Animations.ReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef6, Animations.EmoteBeg )
--PlayLoopingSplitBodyAnim( pandarenSlavef7, Animations.ReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef8, Animations.EmoteBow )
--PlayLoopingSplitBodyAnim( pandarenSlavef9, Animations.ReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef10, Animations.EmoteBeg )
PlayLoopingSplitBodyAnim( pandarenSlavef11, Animations.EmoteBow )
PlayLoopingSplitBodyAnim( pandarenSlavef12, Animations.EmoteBeg )

--Wait For Scene 8
WaitForTrigger(""Scene8"")
StopLoopingSplitBodyAnim( pandarenSlavef2, Animations.EmoteBow )
StopLoopingSplitBodyAnim( pandarenSlavef3, Animations.EmoteBeg )
StopLoopingSplitBodyAnim( pandarenSlavef4, Animations.EmoteBow )
--PlayLoopingSplitBodyAnim( pandarenSlavef5, Animations.ReadyUnarmed )
StopLoopingSplitBodyAnim( pandarenSlavef6, Animations.EmoteBeg )
--PlayLoopingSplitBodyAnim( pandarenSlavef7, Animations.ReadyUnarmed )
StopLoopingSplitBodyAnim( pandarenSlavef8, Animations.EmoteBow )
--PlayLoopingSplitBodyAnim( pandarenSlavef9, Animations.ReadyUnarmed )
StopLoopingSplitBodyAnim( pandarenSlavef10, Animations.EmoteBeg )
StopLoopingSplitBodyAnim( pandarenSlavef11, Animations.EmoteBow )
StopLoopingSplitBodyAnim( pandarenSlavef12, Animations.EmoteBeg )

pandarenSlavef2:SetFacing(133.947)
pandarenSlavef3:SetFacing(133.947)
pandarenSlavef4:SetFacing(133.947)
pandarenSlavef6:SetFacing(133.947)
pandarenSlavef8:SetFacing(133.947)
pandarenSlavef10:SetFacing(133.947)
pandarenSlavef11:SetFacing(133.947)
pandarenSlavef12:SetFacing(133.947)

PlayLoopingSplitBodyAnim( pandarenSlavef2, "
929,Lorewalker Story - S7: Monks - Init - Mogu - ZTO,"-- Spawn Mogu
moguPolearmID = 62426
moguCasterID = 61898

moguPolearm1 = SpawnActor( moguPolearmID, 1466.67, 367.291, 550.223, 129.469, 1, true ) -- Spawn Mogu: Offstage - Left
moguPolearm2 = SpawnActor( moguPolearmID, 1456.24, 358.404, 550.222, 130.195, 1, true ) -- Spawn Mogu: Offstage - Left
moguCaster1 = SpawnActor( moguCasterID, 1459.65, 363.623, 550.223, 129.694, 1, true ) -- Spawn Pandaren Villager: UC

FadeOut( moguPolearm1, 0 )
FadeOut( moguPolearm2, 0 )
FadeOut( moguCaster1, 0 )"
930,Lorewalker Story - S7: Monks - MoguCaster1 - ZTO,"local actorAuraVisual = moguCaster1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait For Scene 2
WaitForTrigger(""Scene2"")
FadeIn(moguCaster1, 2)
Wait(1)
RunToLocation(moguCaster1, 1, 1451.86, 372.025, 550.223, 131.719)
FadeOut(moguCaster1, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
moguCaster1: Despawn()"
931,Lorewalker Story - S7: Monks - MoguPolearm1 - ZTO,"local actorAuraVisual = moguPolearm1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait For Scene 2
WaitForTrigger(""Scene2"")
FadeIn(moguPolearm1, 2)
RunToLocation(moguPolearm1, 1, 1458, 377.217, 550.223, 131.269)
FadeOut(moguPolearm1, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
moguPolearm1: Despawn()"
932,Lorewalker Story - S7: Monks - MoguPolearm2 - ZTO,"local actorAuraVisual = moguPolearm2:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait For Scene 2
WaitForTrigger(""Scene2"")
FadeIn(moguPolearm2, 2)
Wait(1)
RunToLocation(moguPolearm2, 1, 1447.39, 368.656, 550.222, 132.67)
FadeOut(moguPolearm2, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
moguPolearm2: Despawn() "
933,[2] Lorewalker Story - S7: Monks - Pandaren Slaves Kneeling - ZTO,"Animations.MonkOffenseReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef3, Animations.MonkOffenseReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef4, Animations.MonkOffenseReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef6, Animations.MonkOffenseReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef8, Animations.MonkOffenseReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef10, Animations.MonkOffenseReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef11, Animations.MonkOffenseReadyUnarmed )
PlayLoopingSplitBodyAnim( pandarenSlavef12, Animations.MonkOffenseReadyUnarmed )


--Wait for Scene 9
WaitForTrigger(""Scene9"")
--FadeOut(pandarenSlavef1, 1)
FadeOut(pandarenSlavef2, 1)
FadeOut(pandarenSlavef3, 1)
FadeOut(pandarenSlavef4, 1)
--FadeOut(pandarenSlavef5, 1)
FadeOut(pandarenSlavef6, 1)
--FadeOut(pandarenSlavef7, 1)
FadeOut(pandarenSlavef8, 1)
--FadeOut(pandarenSlavef9, 1)
FadeOut(pandarenSlavef10, 1)
FadeOut(pandarenSlavef11, 1)
FadeOut(pandarenSlavef12, 1)

--Wait for endScene
WaitForTrigger(""endScene"")
--pandarenSlavef1: Despawn()
pandarenSlavef2: Despawn()
pandarenSlavef3: Despawn()
pandarenSlavef4: Despawn()
--pandarenSlavef5: Despawn()
pandarenSlavef6: Despawn()
--pandarenSlavef7: Despawn()
pandarenSlavef8: Despawn()
--pandarenSlavef9: Despawn()
pandarenSlavef10: Despawn()
pandarenSlavef11: Despawn()
pandarenSlavef12: Despawn()"
934,Lorewalker Story - S13: Ballad of Liu Lang - infernals - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(2)
FadeIn(infernal1, 2)
RunToLocation( infernal1, 5, 1446.44, 356.233, 532.656, 211.599, false)

-- Wait for Scene 2
WaitForTrigger(""Scene2"")
FadeOut(infernal1, 2)

--Wrap up
--WaitForTrigger(""endScene"")
infernal1:Despawn()
"
935,Lorewalker Story - S13: Ballad of Liu Lang - well1 - ZTO (DEPRECATED),"--Well is suffering from portalling issues. A better position might allow this to be visible. Saving this for later.
--Wait for Scene 1
--WaitForTrigger(""Scene1"")
--Wait(5)
--FadeIn(well1, 2)

-- Wait for Scene 2
--WaitForTrigger(""Scene2"")
--FadeOut(well1, 2)

--Wrap up
--WaitForTrigger(""endScene"")
--well1:Despawn()"
936,----- Object Manager -----,
937,Lorewalker Story - S13: Ballad of Liu Lang - infernal2 - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(3)
FadeIn(infernal2, 2)
RunToLocation( infernal2, 5, 1452.23, 366.835, 540.699, 218.785, false)

-- Wait for Scene 2
WaitForTrigger(""Scene2"")
FadeOut(infernal2, 2)

--Wrap up
--WaitForTrigger(""endScene"")
infernal2:Despawn()
"
938,Lorewalker Story - S13: Ballad of Liu Lang - infernal3 - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(4)
FadeIn(infernal3, 2)
RunToLocation( infernal3, 5, 1446.68, 361.455, 541.557, 220.585, false)

-- Wait for Scene 2
WaitForTrigger(""Scene2"")
FadeOut(infernal3, 2)

--Wrap up
--WaitForTrigger(""endScene"")
infernal3:Despawn()
"
939,Lorewalker Story - S13: Ballad of Liu Lang - infernal4 - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(2)
FadeIn(infernal4, 2)
RunToLocation( infernal4, 5, 1449.35, 355.527, 543.057, 219.685, false)

-- Wait for Scene 2
WaitForTrigger(""Scene2"")
FadeOut(infernal4, 2)

--Wrap up
--WaitForTrigger(""endScene"")
infernal4:Despawn()
"
940,Lorewalker Story - S13: Ballad of Liu Lang - infernal5 - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(3)
FadeIn(infernal5, 2)
RunToLocation( infernal5, 5, 1439.97, 356.891, 542.285, 217.66, false)

-- Wait for Scene 2
WaitForTrigger(""Scene2"")
FadeOut(infernal5, 2)

--Wrap up
--WaitForTrigger(""endScene"")
infernal5:Despawn()
"
941,Lorewalker Story - S13: Ballad of Liu Lang - infernal6 - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(4)
FadeIn(infernal6, 2)
RunToLocation( infernal6, 5, 1437.94, 346.477, 542.228, 218.11, false)

-- Wait for Scene 2
WaitForTrigger(""Scene2"")
FadeOut(infernal6, 2)

--Wrap up
--WaitForTrigger(""endScene"")
infernal6:Despawn()"
942,Lorewalker Story - S13: Ballad of Liu Lang - Init - Liu Lang and Pandaren - ZTO,"--Spell Aura Visual IDs
umbrellaAuraID = 28555

--Spawn Liu Lang
youngLiuLangID = 61920
adultLiuLangID = 61922
oldLiuLangID = 61923

youngLiuLang = SpawnActor( youngLiuLangID, 1458.69, 364.207, 551.221, 127.948, 1, false )
adultLiuLang = SpawnActor( adultLiuLangID, 1458.69, 364.207, 555.221, 127.948, 1, false )
oldLiuLang = SpawnActor( oldLiuLangID, 1458.69, 364.207, 557.221, 127.948, 1, false )

FadeOut(youngLiuLang, 0)
FadeOut(adultLiuLang, 0)
FadeOut(oldLiuLang, 0)
youngLiuLang:PlaySpellStateVisual(umbrellaAuraID)
adultLiuLang:PlaySpellStateVisual(umbrellaAuraID)
oldLiuLang:PlaySpellStateVisual(umbrellaAuraID)


--Spawn Shen-zin su
youngShenzinID = 61931
headShenzinID = 61932

youngShenzin = SpawnActor( youngShenzinID, 1458.69, 364.207, 550.221, 127.948, 1, false )
adultShenzin = SpawnActor( youngShenzinID, 1458.69, 364.207, 550.221, 127.948, 4, false )
adultShenzin2 = SpawnActor( youngShenzinID, 1458.69, 364.207, 550.221, 127.948, 5, false )
headShenzin = SpawnActor( headShenzinID, 1458.69, 364.207, 550.221, 127.948, 0.35, false )

FadeOut(youngShenzin, 0)
FadeOut(adultShenzin, 0)
FadeOut(adultShenzin2, 0)
FadeOut(headShenzin, 0)

--Spawn Liu Lang Statue
statueLiuLangID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\TURTLESHRINE\\PA_turtleshrine_ext_notree.M2""
statueLiuLang = SpawnModelActor( statueLiuLangID, 1459.13, 363.868, 550.221, 131.048, 0.5, false )
FadeOut(statueLiuLang, 0)

--Spawn villagers
pandarenVillagerID = 61918

villager1 = SpawnActor( pandarenVillagerID, 1463.76, 377.081, 550.223, 197.024, 1, false )
villager2 = SpawnActor( pandarenVillagerID, 1458.98, 379.084, 550.221, 230.999, 1, false )
villager3 = SpawnActor( pandarenVillagerID, 1464.12, 370.534, 550.221, 180.149, 1, false )
villager4 = SpawnActor( pandarenVillagerID, 1446.34, 366.035, 550.222, 29.173, 1, false )
villager5 = SpawnActor( pandarenVillagerID, 1450.4, 361.557, 550.222, 59.0981, 1, false )
villager6 = SpawnActor( pandarenVillagerID, 1445.71, 361.084, 550.222, 45.1481, 1, false )
FadeOut(villager1, 0)
FadeOut(villager2, 0)
FadeOut(villager3, 0)
FadeOut(villager4, 0)
FadeOut(villager5, 0)
FadeOut(villager6, 0)

--More Villagers
adventurer1 = SpawnActor( pandarenVillagerID, 1452.33, 376.581, 550.221, 299.621, 1, false )
adventurer2 = SpawnActor( pandarenVillagerID, 1455.31, 376.311, 550.221, 291.972, 1, false )
adventurer3 = SpawnActor( pandarenVillagerID, 1448.7, 370.591, 550.221, 334.721, 1, false )
adventurer4 = SpawnActor( pandarenVillagerID, 1448.82, 373.649, 550.221, 321.445, 1, false )
FadeOut(adventurer1, 0)
FadeOut(adventurer2, 0)
FadeOut(adventurer3, 0)
FadeOut(adventurer4, 0)

--Spawn Tauren
taurenID = 64653
tauren1 = SpawnActor( taurenID, 1448.64, 363.054, 551.862, 77.3199, .75, false )
tauren2 = SpawnActor( taurenID, 1450.01, 359.937, 551.862, 94.8699, .75, false )
tauren3 = SpawnActor( taurenID, 1447.65, 361.093, 551.862, 94.8699, .75, false )
bunny1 = SpawnActor( bunnyID, 1448.64, 363.054, 551.862, 77.3199, 1, false)
FadeOut(tauren1, 0)
FadeOut(tauren2, 0)
FadeOut(tauren3, 0)
FadeOut(bunny1, 0)

--Spawn Trolls
trollID = 64652
troll1 = SpawnActor( trollID, 1464.82, 373.679, 551.862, 160.57, .75, false )
troll2 = SpawnActor( trollID, 1464.55, 376.227, 551.862, 218.17, .75, false )
bunny2 = SpawnActor( bunnyID, 1465.71, 375.338, 551.862, 160.57, 1, false)
FadeOut(troll1, 0)
FadeOut(troll2, 0)
FadeOut(bunny2, 0)

--Spawn Nerubians
nerubianID = 64654
nerubian = SpawnActor( nerubianID, 1463.31, 368.866, 553.19, 116.246, 1, false )
bunny3 = SpawnActor( bunnyID, 1463.31, 368.866, 553.19, 116.246, 1, false)
FadeOut(nerubian, 0)
FadeOut(bunny3, 0)

--Spawn Blood Elves
belfID = 64655
belf1 = SpawnActor( belfID, 1452.83, 358.087, 553.19, 111.521, 1.25, false )
belf2 = SpawnActor( belfID, 1454.32, 359.698, 553.19, 161.471, 1.25, false )
bunny4 = "
943,Brazie's PetBattle - Object Manager,"local OBJECTS = {};

-- Create object managers
OBJECTS[PetBattlePlayerID.Weather] = {}
OBJECTS[PetBattlePlayerID.Player1] = {}
OBJECTS[PetBattlePlayerID.Player2] = {}

-- Standard Object Structure
-- {
--	playerID		= 1 | 2;
--	moveSpeed		= 0 | > 0;
--	auraID 			= 1234;
--	auraInstance 	= 3;
--	actor			= < Actor >;
--  actors			= { < Actor > }; -- Additional actors
--	location		= 1 to 3;
-- }


-- 
-- Register
-- 
--	Returns: object, playerID, slot, transform
-- 
function RegisterObject(playerID, auraID, auraInstanceID )
	local obj = {
		auraID = auraID;
		auraInstanceID = auraInstanceID;
		playerID = playerID;
	};

	local slot,location = FindNextObjectSlot( playerID );


	-- If there was no slot found
	if ( slot == 0 ) then 
		warning(""WARNING: Ran out of object slots in the PetBattle object manager. Add new locations."");
		return obj, playerID, nil;
	else
		obj.slot = slot;
		OBJECTS[playerID][slot] = obj;

		return obj, playerID, slot, location;
	end

end

--
-- Find the next empty slot
--
function FindNextObjectSlot( playerID ) 

	if ( not playerID ) then 
		warning(""ERROR: Invalid playerID: "",playerID,"" passed to RegisterObject."");
	else

		for slot=1,MAX_FIELD_OBJECTS do 
			if ( OBJECTS[playerID] ) then 
				if ( not OBJECTS[playerID][slot] ) then 
					return slot, OBJECT_LOCATIONS[playerID][slot]
				end
			else
				warning(""ERROR: Invalid playerID: "",playerID,"" passed to RegisterObject."");
			end
		end
	end

	return 0;
end

--  
--  Retrieve
-- 
--	Returns: object, playerID, slot, transform
--  
function GetObject(playerID, slot)
	return OBJECTS[playerID][slot], playerID, slot, OBJECT_LOCATIONS[playerID][slot];
end

--  
--  Find
-- 
--	Returns: object, playerID, slot, transform
--  
function FindObject( auraInstanceID )
	for playerID, playerObjects in pairs( OBJECTS ) do 
		for slot, obj in pairs( playerObjects ) do
			if ( obj.auraInstanceID == auraInstanceID ) then 
				return obj, playerID, slot, OBJECT_LOCATIONS[playerID][slot];
			end
		end
	end

	print(""WARNING: Invalid auraInstanceID passed to FindObject: "",auraInstanceID);
end




--  
--  Find
-- 
--	Returns: object, playerID, slot, transform
--  
function FindObjectByAbilityID(playerID, auraID )

--print(""Looking for: "",playerID, "","", auraID);
	if ( OBJECTS[playerID] ) then 
--print( #OBJECTS[playerID] );
		for slot, obj in pairs( OBJECTS[playerID] ) do
--print(""Slot: "",slot,"" Aura: "",obj.auraID);
			if ( obj.auraID == auraID ) then 
--print(""Found: "",playerID, "", "", slot);
				return obj, playerID, slot, OBJECT_LOCATIONS[playerID][slot];
			end
		end
	else
		print(""WARNING: Invalid player ID passed to FindObjectByAbilityID: "",playerID);
	end
end



--
-- Unregister
--
function UnregisterObject(playerID, slot)
	OBJECTS[playerID][slot] = nil;
end

--
-- Get All Objects
-- 
function GetAllObjects()
	return OBJECTS;
end"
944,Lorewalker Story - S13: Ballad of Liu Lang - statueLuiLang - ZTO,"--Wait for Scene 2
WaitForTrigger(""Scene2"")
FadeIn(statueLiuLang, 2)


-- Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeOut(statueLiuLang, 2)

--Wrap up
WaitForTrigger(""endScene"")
statueLiuLang:Despawn()"
945,Lorewalker Story - S13: Ballad of Liu Lang - adultLuiLang - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene5"")
FadeIn(adultLiuLang, 3)
adultLiuLang: PlayOneShotAnimKit( 2804 )
adultLiuLang:SetRelativeTo(adultShenzin)
--RunToLocation( adultLiuLang, 3, 1454.51, 369.082, 554.721, 130.648, false)
Wait(2)
PlayLoopingSplitBodyAnim( adultLiuLang, Animations.EmoteTalk )

-- Wait for Scene 4
WaitForTrigger(""Scene6"")
StopLoopingSplitBodyAnim( adultLiuLang, Animations.EmoteTalk )
--adultLiuLang: SetFacing(310.423)
--RunToLocation( adultLiuLang, 3, 1469.84, 351.779, 554.721, 311.548, false)
WaitForTrigger(""Scene6a"")
FadeOut(adultLiuLang, 2)



--Wrap up
WaitForTrigger(""endScene"")
adultLiuLang:Despawn()"
946,Lorewalker Story - S13: Ballad of Liu Lang - adultShenzin - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene5"")
FadeIn(adultShenzin, 3)
adultShenzin: PlayLoopingAnimKit( 1478 )
RunToLocation( adultShenzin, 2, 1454.51, 369.082, 550.221, 130.648, false)


-- Wait for Scene 4
WaitForTrigger(""Scene6"")
adultShenzin: SetFacing(310.423)
RunToLocation( adultShenzin, 2, 1469.84, 351.779, 550.221, 311.548, false)
SendTrigger(""Scene6a"")
FadeOut(adultShenzin, 2)

--Wrap up
WaitForTrigger(""endScene"")
adultShenzin:Despawn()"
947,Lorewalker Story - S13: Ballad of Liu Lang - fogwall - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(8)
FadeIn(fogwall, 5)

-- Wait for Scene 2
WaitForTrigger(""Scene7"")
Wait(8)
FadeOut(fogwall, 2)

--Wrap up
WaitForTrigger(""endScene"")
fogwall:Despawn()"
949,Lorewalker Story - S13: Ballad of Liu Lang - villager- ZTO,"local actorAuraVisual = villager1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = villager2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = villager3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = villager4:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = villager5:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = villager6:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( villager1, Animations.EmoteLaugh )
PlayLoopingSplitBodyAnim( villager5, Animations.EmoteLaugh )
Wait(1)
PlayLoopingSplitBodyAnim( villager2, Animations.EmoteApplaud )
PlayLoopingSplitBodyAnim( villager6, Animations.EmoteApplaud )
Wait(1)
PlayLoopingSplitBodyAnim( villager3, Animations.EmoteLaugh )
PlayLoopingSplitBodyAnim( villager4, Animations.EmoteLaugh )

--Wait for Scene 3 
WaitForTrigger(""Scene3"")
FadeIn(villager1, 2)
FadeIn(villager2, 2)
FadeIn(villager3, 2)
FadeIn(villager4, 2)
FadeIn(villager5, 2)
FadeIn(villager6, 2)

-- Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut(villager1, 2)
FadeOut(villager2, 2)
FadeOut(villager3, 2)
FadeOut(villager4, 2)
FadeOut(villager5, 2)
FadeOut(villager6, 2)

--Wrap up
WaitForTrigger(""endScene"")
villager1:Despawn()
villager2:Despawn()
villager3:Despawn()
villager4:Despawn()
villager5:Despawn()
villager6:Despawn()"
950,Lorewalker Story - S13: Ballad of Liu Lang - youngLuiLang - ZTO,"--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn(youngLiuLang, 3)
youngLiuLang: PlayOneShotAnimKit( 2796 )
youngLiuLang:SetRelativeTo(youngShenzin)
--RunToLocation( youngLiuLang, 2, 1454.51, 369.082, 551.221, 130.648, false)

-- Wait for Scene 4
WaitForTrigger(""Scene4fade"")
--youngLiuLang: SetFacing(310.423)
--RunToLocation( youngLiuLang, 2, 1469.84, 351.779, 551.221, 311.548, false)
FadeOut(youngLiuLang, 2)

--Wrap up
WaitForTrigger(""endScene"")
youngLiuLang:Despawn()"
951,Lorewalker Story - S13: Ballad of Liu Lang - youngShenzin - ZTO (copy),"--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn(youngShenzin, 3)
youngShenzin: PlayLoopingAnimKit( 1478 )
RunToLocation( youngShenzin, 2, 1454.51, 369.082, 550.221, 130.648, false)


-- Wait for Scene 4
WaitForTrigger(""Scene4"")
youngShenzin: SetFacing(310.423)
RunToLocation( youngShenzin, 2, 1469.84, 351.779, 550.221, 311.548, false)
FadeOut(youngShenzin, 2)
SendTrigger(""Scene4fade"")

--Wrap up
WaitForTrigger(""endScene"")
youngShenzin:Despawn()"
952,Lorewalker Story - S13: Ballad of Liu Lang - headShenzin - ZTO,"PlayLoopingSplitBodyAnim( headShenzin, Animations.Submerged )
--Wait for Scene 3
WaitForTrigger(""Scene6a"") --WaitForTrigger(""Scene6b"")
Wait(6)
FadeIn(headShenzin, 3)
StopLoopingSplitBodyAnim( headShenzin, Animations.Submerged )
PlayOneShotSplitBodyAnim( headShenzin, Animations.Emerge )
--RunToLocation( headShenzin, 2, 1454.51, 369.082, 550.221, 130.648, false)


-- Wait for Scene 4
--WaitForTrigger(""endScene"")
--headShenzin: SetFacing(310.423)
--RunToLocation( headShenzin, 2, 1469.84, 351.779, 550.221, 311.548, false)
WaitForTrigger(""Scene7"")
Wait(5)
FadeOut(headShenzin, 2)

--Wrap up
WaitForTrigger(""endScene"")
headShenzin:Despawn()"
953,Lorewalker Story - S13: Ballad of Liu Lang - oldLuiLang - ZTO,"--[[Wait for Scene 3
WaitForTrigger(""Scene6a"")
FadeIn(oldLiuLang, 3)
oldLiuLang: PlayOneShotAnimKit( 2804 )
oldLiuLang:SetRelativeTo(adultShenzin2)
--RunToLocation( oldLiuLang, 3, 1454.51, 369.082, 556.221, 130.648, false)
Wait(2)
PlayLoopingSplitBodyAnim( oldLiuLang, Animations.EmoteTalk )

-- Wait for Scene 4
WaitForTrigger(""Scene6b"")
StopLoopingSplitBodyAnim( oldLiuLang, Animations.EmoteTalk )
--oldLiuLang: SetFacing(310.423)
--RunToLocation( oldLiuLang, 3, 1469.84, 351.779, 556.221, 311.548, false)
WaitForTrigger(""Scene6c"")
FadeOut(oldLiuLang, 2)

--Wrap up
WaitForTrigger(""endScene"")
oldLiuLang:Despawn()]]--"
954,Lorewalker Story - S13: Ballad of Liu Lang - adultShenzin2 - ZTO,"--[[Wait for Scene 3
WaitForTrigger(""Scene6a"")
FadeIn(adultShenzin2, 3)
adultShenzin2: PlayLoopingAnimKit( 1478 )
RunToLocation( adultShenzin2, 3, 1454.51, 369.082, 550.221, 130.648, false)


-- Wait for Scene 4
WaitForTrigger(""Scene6b"")
adultShenzin2: SetFacing(310.423)
RunToLocation( adultShenzin2, 3, 1469.84, 351.779, 550.221, 311.548, false)
SendTrigger(""Scene6c"")
FadeOut(adultShenzin2, 2)

--Wrap up
WaitForTrigger(""endScene"")
adultShenzin2:Despawn()
]]--"
955,Turn Package - Build Rocket / Launch Rocket,"function Dispatcher_BuildLaunchRocket( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )

	-- Skitter around building the object
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
		--Print(""ROCKET BUILD!!"");

		local numPoints = 6;
		local doEffectsOnPoint = 2;
		local visual = 151;

		local slot, transform = FindNextObjectSlot( caster.playerID ) 
		local location = transform.position;

		Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

		return;
	else
		local auraInstanceId = turn.firstEvent.auraInstanceID;

		--DEBUG_TABLE ( turn.effects[1].results );

		local object, playerID, slot, transform = FindObject( auraInstanceId )

		--Print(""ROCKET LAUNCH!!!"");

		if ( object ) then 
			--Print( ""I FOUND A ROCKET"");

			local visuals = true;

			-- Move into position
			--DefaultTurnPreEffectMovement(ROID, turn )

			local pet = ROIDTOPET(ROID);
			if ( not pet or (pet and pet.isPad) ) then
				return;
			end


			local targetROID = GetMoveToROID( turn.effects[1].results[2] ); 
			local target =  ROIDTOUNIT( targetROID );

			local failed, flags = DidItFail ( turn );
			local missed = flags.miss;
			local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

			local turnVisualID = turn.turnVisualID ;

			-- When you pass the test the first time
			local success = function()

				RocketLaunch_Success( targetROID, ROID, turnVisualID ) 

				-- Handle all effects
				for index=1, #turn.effects do 
					local effect = turn.effects[index];
					DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
				end
			end

			-- After the spline finishes
			local finish = function( ranSuccess )
				if ( ranSuccess ) then 
					return
				end

				-- Handle all effects
				for index=1, #turn.effects do 
					local effect = turn.effects[index];
					DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
				end
			end

			-- Keep testing
			--
			--	returns:
			--		arg1 - keep testing
			--		arg2 - succeeded
			--
			local test = function()
				local dist = target.actor:GetPosition():Dist( object.actor:GetPosition() );

				if ( dist > 0 and object.actor:IsMoving() ) then

					dist = object.actor:GetPosition():Dist( target.actor:GetPosition() );

					if ( dist < 1 ) then 
						return false, true;
					end

					return true, false;
				else
					return false, false;
				end
			end

			-- New Spline START
			local moveData = MoveData:Default(7)
			moveData.isGroundSnapping = true;	
			moveData.posControl = MovePosControl.PointSpeed
			moveData.pitchControl = MoveRotControl.AngleAbs
			moveData.rollControl = MoveRotControl.None
			moveData.yawControl = MoveRotControl.None

			moveData.points[1].pos = Vector:New(0.0, 0, 0);
			moveData.points[1].speed = 1
			moveData.points[2].pos = Vector:New(0.05, 0, 3);
			moveData.points[2].pitch = -10
			moveData.points[2].speed = 3
			moveData.points[3].pos = Vector:New(0.1, 0, 7);
			moveData.points[3].pitch = -30
			moveData.points[3].speed = 5
			moveData.points[4].pos = Vector:New(0.4, 0, 8);
			moveData.points[4].speed = 4
			moveData.points[4].pitch = -90
			moveData.points[5].pos = Vector:New(0.8, 0, 6);
			moveData.points[5].speed = 7
			moveData.points[5].pitch = -180
			moveData.points[6].pos = Vector:New(1.0, 0, 0.0);
			moveData.points[6].speed = 9
			moveData.points[6].pitch = -180
			moveData.points[7].pos = Vector:New(1.05, 0, -2);
			moveData.points[7].speed = 9
			moveData.points[7].pitch = -180

			local stretch = true;
			local FIRE_TRAIL_VISUAL_ID = 27024;
			local visKit = "
956,Lorewalker Story - S13: Ballad of Liu Lang - adventurer4 - ZTO,"local actorAuraVisual = adventurer4:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( adventurer4, Animations.SitGround )

--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeIn(adventurer4, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
StopLoopingSplitBodyAnim( adventurer4, Animations.SitGround )
PlayOneShotSplitBodyAnim( adventurer4, Animations.SitGroundUp )
Wait(1)
RunToLocation( adventurer4, 2, 1469.84, 351.779, 550.221, 311.548, false)


-- Wait for Scene 4
WaitForTrigger(""Scene7"")
FadeOut(adventurer4, 2)

--Wrap up
WaitForTrigger(""endScene"")
adventurer4:Despawn()
"
957,Lorewalker Story - S13: Ballad of Liu Lang - adventurer1 - ZTO,"local actorAuraVisual = adventurer1:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( adventurer1, Animations.SitGround )

--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeIn(adventurer1, 2)

--Wait for Scene 6b
WaitForTrigger(""Scene6b"")
StopLoopingSplitBodyAnim( adventurer1, Animations.SitGround )
PlayOneShotSplitBodyAnim( adventurer1, Animations.SitGroundUp )
Wait(1)
RunToLocation( adventurer1, 2, 1469.84, 351.779, 550.221, 311.548, false)

-- Wait for Scene 4
WaitForTrigger(""Scene7"")
FadeOut(adventurer1, 2)

--Wrap up
WaitForTrigger(""endScene"")
adventurer1:Despawn()
"
958,Lorewalker Story - S13: Ballad of Liu Lang - adventurer2 - ZTO (copy),"local actorAuraVisual = adventurer2:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( adventurer2, Animations.SitGround )

--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeIn(adventurer2, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
StopLoopingSplitBodyAnim( adventurer2, Animations.SitGround )
PlayOneShotSplitBodyAnim( adventurer2, Animations.SitGroundUp )
Wait(1)
RunToLocation( adventurer2, 2, 1469.84, 351.779, 550.221, 311.548, false)

-- Wait for Scene 7
WaitForTrigger(""Scene7"")
FadeOut(adventurer2, 2)

--Wrap up
WaitForTrigger(""endScene"")
adventurer2:Despawn()
"
959,Lorewalker Story - S13: Ballad of Liu Lang - adventurer3 - ZTO (copy),"local actorAuraVisual = adventurer3:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( adventurer3, Animations.SitGround )

--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeIn(adventurer3, 2)

--Wait for Scene 6b
WaitForTrigger(""Scene6b"")
StopLoopingSplitBodyAnim( adventurer3, Animations.SitGround )
PlayOneShotSplitBodyAnim( adventurer3, Animations.SitGroundUp )
Wait(1)
RunToLocation( adventurer3, 2, 1469.84, 351.779, 550.221, 311.548, false)

-- Wait for Scene 7
WaitForTrigger(""Scene7"")
FadeOut(adventurer3, 2)

--Wrap up
WaitForTrigger(""endScene"")
adventurer3:Despawn()
"
961,Shared Package - Build Thing At Location,"function Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

	local caster = ROIDTOPET( ROID )
	local targetPlayerID = turn.firstEvent.targetPlayerID
	local targetPetSlot = turn.firstEvent.targetPetSlot
	local targetROID = GETROIDFROMPLAYERIDANDSLOT( targetPlayerID, targetPetSlot );
	local target = ROIDTOPET( targetROID )

	local abilityVisual = petAbilityVisuals[visual]
	if not abilityVisual then
		print(""ERROR: No spell visual assigned for ability "", turn.turnAbilityID);
		return
	end
	local spellVisualID = abilityVisual.spellVisualID

	
	-- Generate some points
	local points = {
	}

	local effectsProcessed = false;

	local offset=0--pgm270
	local step= 720/numPoints;

	for i=offset+step,offset+720,step do 
		local sin = math.sin(i/180*math.pi)*1.25
		local cos = math.cos(i/180*math.pi)*1.25
		table.insert(points, Vector:New(sin, cos, 0));
	end

	local originalTargetLoc = location;
	local originalPetLoc = caster.actor:GetPosition();

	
	caster.actor:ClearFacing(); --pgm	caster.actor:SetFacingToAbs(originalTargetLoc); -- Look at the site


	-- ## Unique Stuff Start 
	for i = 1, #points do 
		local v = points[i];
		local moveTime = 0.55;
		if ( v ) then 
			local newDrift = FastLocalFacingCoordinates(originalTargetLoc, originalPetLoc , v * -battleScale );
			local targetDriftPoint 	=  newDrift;
			local driftDistance = targetDriftPoint:Dist( caster.actor:GetPosition() )
--print(""PGMtargetDriftPoint: ""..targetDriftPoint.x.."" ""..targetDriftPoint.y.."" ""..targetDriftPoint.z);
			moveTime = driftDistance / caster.moveSpeed;
			caster.actor:MoveToAbs(targetDriftPoint, moveTime );
		end
		
		local castInstanceID = caster.actor:PlaySpellCastVisualAtPoints(spellVisualID, 0, true, { CalculateLocationFacingRelativeOffset( caster, originalTargetLoc, 1, 0, 0 ) } )
		local timeToWait = moveTime*(0.45 + math.random()*0.4);--pgm 0.55
		scene:WaitTimer(timeToWait);

		if ( i > doEffectsOnPoint and effectsProcessed == false ) then
			-- Handle all effects
			for index=1,#turn.effects do 
				local effect = turn.effects[index];

				DefaultDoEffectProcessing( nil, ""effect"", effect ); 
			end 

			-- Don't try to process twice
			effectsProcessed = true;
		end
	end
	-- ## Unique Stuff End

	-- Reset/reposition
	Dispatcher_AddCommandToQueue(ROID, Dispatcher_PerformPostAttackCleanup );

end

function Mechanical_BuildThingOnAuraApply( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )

	-- Skitter around building the object
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
		local numPoints = 4;
		local doEffectsOnPoint = 2;
		local visual = 236;

		local slot, transform = FindNextObjectSlot( caster.playerID ) 
		local location = transform.position;

		Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

		scene:WaitTimer(1);
		return;
	else
		DefaultTurnBehaviour( ROID, isTurn, turn )
	end 

	-- Reset/reposition
		DefaultTurnCleanUp(ROID);

end"
962,Lorewalker Story - S13: Ballad of Liu Lang - tauren - ZTO,"local actorAuraVisual = tauren1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = tauren2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = tauren3:PlaySpellStateVisual(24803) --Cast Actor Visual
local cloudBunnyVisual = bunny1:PlaySpellStateVisual(27002) --Cast Actor Visual
tauren1: PlayLoopingAnimKit( 2716 )
tauren2: PlayLoopingAnimKit( 2716 )
tauren3: PlayLoopingAnimKit( 2716 )

--Wait for Scene 5b
WaitForTrigger(""Scene5b"")
FadeIn(tauren1, 2)
FadeIn(tauren2, 2)
FadeIn(tauren3, 2)
bunny1:Fade(0.5, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
FadeOut(tauren1, 2)
FadeOut(tauren2, 2)
FadeOut(tauren3, 2)
FadeOut(bunny1, 2)

Wait(8)
tauren1: Despawn()
tauren2: Despawn()
tauren3: Despawn()
bunny1: Despawn()"
963,Lorewalker Story - S13: Ballad of Liu Lang - trolls - ZTO,"local actorAuraVisual = troll1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = troll2:PlaySpellStateVisual(24803) --Cast Actor Visual
local cloudBunnyVisual = bunny2:PlaySpellStateVisual(27002) --Cast Actor Visual
troll1: PlayLoopingAnimKit( 835 )
troll2: PlayLoopingAnimKit( 1203 )

--Wait for Scene 5b
WaitForTrigger(""Scene5a"")
FadeIn(troll1, 2)
FadeIn(troll2, 2)
bunny2:Fade(0.5, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
FadeOut(troll1, 2)
FadeOut(troll2, 2)
FadeOut(bunny2, 2)

Wait(8)
troll1: Despawn()
troll2: Despawn()
bunny2: Despawn()"
964,Lorewalker Story - S13: Ballad of Liu Lang - nerubian - ZTO,"local actorAuraVisual = nerubian:PlaySpellStateVisual(24803) --Cast Actor Visual
local cloudBunnyVisual = bunny3:PlaySpellStateVisual(27002) --Cast Actor Visual
nerubian: PlayLoopingAnimKit( 1202 )

--Wait for Scene 5c
WaitForTrigger(""Scene5c"")
FadeIn(nerubian, 2)
bunny3:Fade(0.5, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
FadeOut(nerubian, 2)
FadeOut(bunny3, 2)

Wait(8)
nerubian: Despawn()
bunny3: Despawn()"
965,Lorewalker Story - S13: Ballad of Liu Lang - belf - ZTO,"local actorAuraVisual = belf1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = belf2:PlaySpellStateVisual(24803) --Cast Actor Visual
local cloudBunnyVisual = bunny4:PlaySpellStateVisual(27002) --Cast Actor Visual
belf1: PlayLoopingAnimKit( 2049 )
belf2: PlayLoopingAnimKit( 2049 )


--Wait for Scene 5d
WaitForTrigger(""Scene5d"")
FadeIn(belf1, 2)
FadeIn(belf2, 2)
bunny4:Fade(0.5, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
FadeOut(belf1, 2)
FadeOut(belf2, 2)
FadeOut(bunny4, 2)

Wait(8)
belf1: Despawn()
belf2: Despawn()
bunny4: Despawn()"
966,Lorewalker Story - S13: Ballad of Liu Lang - mannoroth - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(1)
FadeIn(mannoroth, 5)
mannoroth: PlayOneShotAnimKit(2038)
Wait(5)
-- Wait for Scene 2
FadeOut(mannoroth, 2)
WaitForTrigger(""Scene2"")

--Wrap up
--WaitForTrigger(""endScene"")
mannoroth:Despawn()
"
967,Brazie's PetBattle - Library - Pet Movement - Spline Attack,"--
-- Spline_Attack2 - path = MoveData object
-- 
function Spline_Attack2(testFunc, successFunc, finishFunc, path, stretchPath, actor, attackPoint )

	-- Stretch
	if ( stretchPath ) then
	-- Convert to relative space
		local sourcePosition, targetPosition = actor:GetPosition(), attackPoint
		local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

		local dist = attackPoint:Dist( actor:GetPosition() );

		for _,vect in pairs( path.points)  do
			vect.pos.x = vect.pos.x * dist;
		end

		for _,vect in pairs( path.points ) do
			vect.pos = LocalToWorldCoords( vect.pos );
		end
	end

	actor:Move( path );

	local ranSuccess = false;
	local dist = actor:GetPosition():Dist( attackPoint );

	repeat  
		local keepGoing, succeeded = testFunc()
		
		if ( succeeded ) then

			successFunc();
			ranSuccess = true;
		end

		scene:WaitTimer(0.0001);

	until ( keepGoing == false );

	actor:WaitMovementComplete()
	actor:SetSnapToGround(true)

	finishFunc ( ranSuccess );
end

--
-- returns testFunc, successFunc, finishFunc
--
function Spline_Attack2_GetDefaultHandlers(turn, actor, attackPoint, successDistance)
	local successThreshold = successDistance or 2;

	-- Default Hit Test Function
	--
	--	returns:
	--		arg1 - keep testing
	--		arg2 - succeeded
	--
	local testFunc = testFunc or function()
		local dist = attackPoint:Dist( actor:GetPosition() );

		if ( actor:IsMoving() ) then

			dist = actor:GetPosition():Dist( attackPoint );

			if ( dist < successThreshold ) then 
				return false, true;
			end

			return true, false;
		else
			return false, false;
		end
	end

	-- When you pass the test the first time
	local successFunc = function()
		local effect = turn.effects[1];
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID)
	end
	
	-- Default Success Function
	-- 
	local finishFunc = function( ranSuccess )
		local start = 1;

		if ( ranSuccess ) then 
			start = 2;
		end

		-- Handle all effects
		for index=start,#turn.effects do 
			local effect = turn.effects[index];
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end 
	end

	return testFunc, successFunc, finishFunc;
end

-- Spline_Attack - path == array of bezier spline points
--

function Spline_Attack( testFunc, successFunc, finishFunc, path, isAbsolutePath, pathDuration, actor, targetROID )

	-- MY MOVEMENT START
	local opponent = ROIDTOPET(targetROID);

	local opponentLocation = opponent.actor:GetPosition();
	local frontVector = UnitVectorFromAtoB(opponentLocation, actor:GetPosition()  );
	local upVector = UnitVectorFromAtoB(opponentLocation, (opponentLocation + Vector:New(0,0,1) ) );
	local leftVector = UnitVectorCrossProduct(frontVector, upVector);

	actor:ClearFacing(); 

	local points = {}

	-- First calculate the bezier
	local dist = opponentLocation:Dist( actor:GetPosition() );
	local heightFloor = opponent.actor:GetPosition().z - actor:GetPosition().z;

	-- Transform the path into relative space
	if ( not isAbsolutePath ) then

		for k,v in pairs( path.points ) do 
			if ( v.leftArm ) then 
				v.leftArm.x = v.leftArm.x * dist;
				v.leftArm.z = heightFloor * math.max(0, math.min(v.leftArm.x, 1)) + v.leftArm.z;
			end
			if ( v.rightArm ) then 
				v.rightArm.x = v.rightArm.x * dist;
				v.rightArm.z = heightFloor * math.max(0, math.min(v.rightArm.x, 1)) + v.rightArm.z;
			end
			if ( v.basePoint ) then 
				v.basePoint.x = v.basePoint.x * dist;
				v.basePoint.z = heightFloor *  math.max(0, math.min(v.basePoint.x, 1)) + v.basePoint.z;
			end
		end
	end


	-- Start
	local relativeSpline = Brazie_SplineBuilder( path, ""x"", ""z"");
	local realSpline = {};

	for i=1, #relativeSpline  do 
		local relativeNode = "
968,[1] Turn Package - Build Rocket / Launch Rocket,"object.actor:PlaySpellStateVisual( FIRE_TRAIL_VISUAL_ID )

			local ROCKET_LAUNCH_SOUND = 14337;
			local soundKit = object.actor:PlaySoundKit(ROCKET_LAUNCH_SOUND, true);

			object.actor:SetSnapToGround(false);

			-- have yaw forced to face at some point way out in the direction we need
			local myPos = object.actor:GetPosition()
			local facingPoint = myPos + (attackPoint-myPos)*10

			object.actor:SetFacingToAbs(facingPoint)

			Spline_Attack2( test, success, finish, moveData, stretch, object.actor, attackPoint )

			local t = object.actor:GetTransform()
			t.pitch = 180;
			object.actor:SetTransform(t);
			object.actor:SetSnapToGround(false);

			object.actor:ClearSpellVisual( visKit)

			scene:WaitTimer(0.2);
	
			-- Signal the object to despawn
			object.done = true;
		end

	end 

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end

function CreateObject_Rocket(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(356037);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = transform.position + Vector:New(0,0,-5)
	
	local baseScale = 0.07;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local rocket, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 0), 
			false )

	object.actor = rocket;

	rocket:WaitMoveToAbs ( transform.position, 2 );
	rocket:SetSnapToGround(true);

	local q = 1
 
	while ( aura.running and q < 1000 ) do 
		q = q + 1;
--[[
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end
]]--
		scene:WaitTimer(0.1);
	end

	while ( not object.done ) do
		scene:WaitTimer(0.1);
	end

	rocket:Fade(0,0.1);
	--print(""Killed the rocket! "",q);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function RocketLaunch_Success( victimROID, attackerROID, visualID ) 

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactSlide, attackerROID, 2, 0.5); 
end
"
970,Turn Package - Build Turret / Fire Turret,"local DEBUG_ON = false;
local DebugPrint = function(data)
	if ((DEBUG_ON == true)) then
		print(""Debug Turret Build/Fire: "" .. tostring(data))
	end
end

function Dispatcher_BuildTurret( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		DebugPrint(""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )

	-- Skitter around building the object
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
		local numPoints = 4;
		local doEffectsOnPoint = 2;
		local visual = 152;

		local slot, transform = FindNextObjectSlot( caster.playerID ) 
		local location = transform.position;

		Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

		scene:WaitTimer(1);
		return;
	else
		DefaultTurnBehaviour( ROID, isTurn, turn )
	end 

	-- Reset/reposition
		DefaultTurnCleanUp(ROID);

end

function CreateObject_Turret(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);
--print(""Makin a turret "",auraAbilityID,  "", player "",aura.playerID ); 
	local groundModel = fid(126016);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = transform.position + Vector:New(0,0,-5)
	
	local baseScale = 0.5;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local rocket, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 0), 
			false )

	object.actor = rocket;

	rocket:WaitMoveToAbs ( transform.position, 2 );
	rocket:SetSnapToGround(true);

	while ( aura.running ) do 
--[[
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end
]]--
		scene:WaitTimer(0.1);
	end
	DebugPrint(""Turret Aura Finished"");

	scene:WaitTimer(1)

	-- wait for any animation to complete
	while ( object.firing == true ) do
		scene:WaitTimer(0.1)
	end
	DebugPrint(""Object Done"");

	rocket:Fade(0,0.1);
	--print(""Killed the turret! "",q);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function Dispatcher_FireTurret( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		DebugPrint(""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
	local caster = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	if(not object) then
		--pattymack added this incase reflect bounces back a turret fire.
		return;
	end
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID,"" STR: "",ROIDTOSTRING(objectROID), "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);

	-- Make it sessile
	object.moveSpeed = 0;

	DebugPrint(""Fire Effects Start"");
	object.firing = true;
	Dispatcher_OnlyTurnAnimateTheEffects1toN( 3, objectROID, isTurn, turn )
	object.firing = false;

	DebugPrint(""Fire Effects End"");

	-- [ABrazie]: To really work, this should confirm the aura is no longer present...
	
end"
971,[1] Brazie's PetBattle - Library - ROIDs,"ROID_TYPE_PLAYER_PAD_OBJ_1 ) then
			slot = 1
		elseif ( bitand(ROID, 0x0E0) == ROID_TYPE_PLAYER_PAD_OBJ_2 ) then
			slot = 2
		elseif ( bitand(ROID, 0x0E0) == ROID_TYPE_PLAYER_PAD_OBJ_3 ) then
			slot = 3
		end

		if ( slot ) then
			local object, playerID, slot, transform = GetObject(player.playerID, slot)

			return object;
		end
	end

	return nil;
end

function ROIDTOWEATHER ( ROID )
	if ( ROID == ROID_TYPE_WEATHER ) then 
		local player = ROIDTOPLAYER( ROID );

		return player.pets[0];
	else
		warning(""ERROR: Invalid ROID passed to ROIDTOWEATHER."");
	end
end

function ROIDTOUNIT( ROID )
	if ( ROIDISAPET( ROID ) ) then
		local pet = ROIDTOPET( ROID );
		return pet;
	elseif ( ROIDISAOBJECT ( ROID ) ) then
		local obj = ROIDTOOBJ( ROID );

		return obj;
	elseif ( ROIDISWEATHER ( ROID ) ) then
		return ROIDTOWEATHER ( ROID );
	else
		warning(""ERROR: Invalid ROID passed to ROIDTOUNIT, "", ROID);
	end
end
"
972,[1] ZZOLD - Stormstout Brewery - Cinematic Framework,"scene:WaitCondition(waitCondition)
end
]]--"
973,PetBattle - Dispatcher - Thread Bot 3,"local BOT_ID = 3
ThreadBotMain(BOT_ID)"
974,Brazie's PetBattle - Post Turn,"function PostRoundCleanUp( event )

	-- [ABrazie]: Gutted on 7/3/2012 to replace with new, unified system
	--[[
	local pet = GetActivePetByIndex(1)
	local opponent = GetActivePetByIndex(2)
		
	ReturnOrResetCheck( pet, opponent );
	ReturnOrResetCheck( opponent, pet );
	--]]


	SendEverybodyHome()
end"
975,Lorewalker Story - S4: Jinyu - MASTER - Lorewalker Cho - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start

Wait(2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow ) 
Wait(2)
lorewalker:BroadcastText(BroadcastType.Say, 63699) -- VO Line 1 (Pond)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene1"" ) --Cue pool
RunToLocation(lorewalker, 2, 1450.44, 360.535, 550.221, 74.6446, true)
lorewalker:WaitMovementComplete()
lorewalker:SetFacing(74.6446)
Wait(7)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 63700) -- VO Line 2 (Throwing stone)
CastSpellAtActor( lorewalker, poolBunny, throwRockID )
Wait(1)
SendTrigger( ""Scene2"" ) --Cue statue
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--Wait(9)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 63701) -- VO Line 3 (Murloc)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
FadeIn(light_uc, 2)
SendTrigger( ""Scene3"" ) --Cue murlocs
Wait(3)
lorewalker:PlayOneShotAnimKit(3229)
Wait(7)
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 63702) -- VO Line 4 (Murloc -> Jinyu)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene4"" ) --Cue Murloc to Jinyu transform
--Wait(15)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(5)
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 63703) -- VO Line 5 (Jinyu Waterspeaker)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
FadeOut(light_uc, 2)
SendTrigger( ""Scene5"" ) --Cue waterspeaker and lake transform
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(15)
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(7)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 63704) -- VO Line 6 (Montage)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene6"" ) --Cue exodus of people 
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(6)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 63705) -- VO Line 7 (Big Flashy scene)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteCheer )
SendTrigger( ""Scene7"" ) --Cue return to normalsy
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 63706) -- VO Line 8 (Intense-r Scene)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene8"" ) --Cue return to normalsy
Wait(5)
SendTrigger( ""Scene8a"" ) --Cue return to normalsy
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(10)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteLaugh )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 63707) -- VO Line 9 (Fade out)
SendTrigger( ""Scene9"" ) --Cue return to normalsy
"
976,Lorewalker Story - S4: Jinyu - Init - Pool and Jinyu - ZTO,"--Spell IDs
throwRockID = 23065
TransformEffectSpellID = 120704

--Spawn Pool
poolID = ""SPELLS\\Goo_Flow_StateBlue.M2""
poolGlobeID = ""WORLD\\EXPANSION04\\DOODADS\\JINYU\\Jinyu_Water_Whirlpool_Magic.M2""

pool = SpawnModelActor( poolID, 1455.83, 367.498, 550.221, 131.345, .25, false )
poolGlobe = SpawnModelActor( poolGlobeID, 1455.83, 367.498, 550.221, 131.345, .15, false )
LorewalkerActor(pool)
LorewalkerActor(poolGlobe)
FadeOut(pool, 0)
FadeOut(poolGlobe, 0)

--Spawn waterfall
waterfallID = ""WORLD\\EXPANSION04\\DOODADS\\VALLEYOFFOURWINDS\\WATERFALL\\VFW_customWaterfall07.M2""

waterfall = SpawnModelActor( waterfallID, 1458.4, 365.117, 548.51, 41.9068, 1, false )
LorewalkerActor(waterfall)
FadeOut(waterfall, 0)

--Spawn Murlocs
murlocID = 61937

murloc1 = SpawnActor( murlocID, 1454.13, 370.531, 548.344, 356.006, 1, false)
murloc2 = SpawnActor( murlocID, 1455.03, 369.064, 548.651, 233.381, 1, false)
murloc3 = SpawnActor( murlocID, 1454.85, 371.018, 548.651, 1.18086, 1, false)

FadeOut(murloc1, 0)
FadeOut(murloc2, 0)
FadeOut(murloc3, 0)

--Spawn jinyu
jinyuWarriorID = 64657
jinyuWaterspeakerID = 64658
jinyuWaterspeakerStaffID = 64659

jinyu1 = SpawnActor( jinyuWarriorID, 1460.52, 369.422, 550.222, 169.813, 1, true)
jinyuSpeaker = SpawnActor( jinyuWaterspeakerID, 1458.05, 365.148, 550.221, 131.499, 1, true)
jinyu3 = SpawnActor( jinyuWarriorID, 1453.72, 363.285, 550.221, 99.999, 1, true)
jinyuSpeakerStaff = SpawnActor( jinyuWaterspeakerStaffID, 1458.05, 365.148, 550.221, 131.499, 2, true)

FadeOut(jinyu1, 0)
FadeOut(jinyuSpeaker, 0)
FadeOut(jinyu3, 0)
FadeOut(jinyuSpeakerStaff, 0)

--Spawn Pool Bunny
alphaBunnyID = 65434
poolBunny = SpawnActor( alphaBunnyID, 1455.83, 367.498, 550.221, 131.345, 1, true)
FadeOut(poolBunny, 0)"
977,Turn Package - Build Beaver Dam,"function Dispatcher_BuildBeaverDam( ROID, isTurn, turn )

	local numPoints = 6;
	local doEffectsOnPoint = 2;
	local visual = turn.turnVisualID;

	local caster = ROIDTOUNIT( ROID )

	local baseLoc = caster.actor:GetPosition()
	local faceLoc = Vector:New( 0, 0, 0 );
	local offset  = Vector:New( 1, 0, 0 ); -- Front, Left, Up

	-- Step 1: 
	--   Create the transformation matrix 
	local sourcePosition, targetPosition = baseLoc, faceLoc
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local location = LocalToWorldCoords( offset );


	Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

	-- Reset/reposition
	Dispatcher_AddCommandToQueue(ROID, Dispatcher_PerformPostAttackCleanup );

end"
978,Lorewalker Story - S4: Jinyu - poolBunny - ZTO,"--PlayLoopingSplitBodyAnim( poolBunny, Animations.Hold )
--local poolVisual = poolBunny:PlaySpellStateVisual(27048) --Cast Actor Visual

--Wait for Scene 1
WaitForTrigger(""Scene1"")
poolBunny:Fade(.75, 2)
--FadeIn(poolBunny, 0)

--Wait for Scene 2 (stone throw spell)
--WaitForTrigger(""Scene2"")
--StopLoopingSplitBodyAnim( pool, Animations.Hold )
--PlayOneShotSplitBodyAnim( poolBunny, Animations.Stand )

--Wait for Scene 5
--WaitForTrigger(""Scene5"")
--poolBunny: ClearSpellVisual( poolVisual) --Clear Actor Visual
--local poolVisual = poolBunny:PlaySpellStateVisual(27049) --Cast Actor Visual

--Wait for Scene 5
WaitForTrigger(""Scene9"")
FadeOut(poolBunny, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
poolBunny: Despawn()"
979,Lorewalker Story - S4: Jinyu - poolGlobe - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
PlayLoopingSplitBodyAnim( poolGlobe, Animations.Hold )

--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeIn(poolGlobe, 2)

--Wait for Scene 8 (clean up)
WaitForTrigger(""Scene9"")
FadeOut(poolGlobe, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
poolGlobe: Despawn()"
980,Lorewalker Story - S4: Jinyu - murloc1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = murloc1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn(murloc1, 2)
Wait(1)
RunToLocation(murloc1, 3, 1456.67, 370.418, 550.223, 308.981)
Wait(1)
--murloc1: SetFacing(41.006)
Wait(1)
--murloc1: SetFacing(158.231)
Wait(1)
--murloc1: SetFacing(169.813)
RunToLocation(murloc1, 3, 1460.52, 369.422, 550.222, 169.813)


--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut(murloc1, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
murloc1: Despawn()"
981,Lorewalker Story - S4: Jinyu - murloc2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = murloc2:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn(murloc2, 2)
RunToLocation(murloc2, 3, 1455.58, 368.106, 550.223, 308.981)
Wait(1)
--murloc2: SetFacing(158.231)
Wait(1)
--murloc2: SetFacing(41.006)
Wait(1)
--murloc2: SetFacing(131.499)
RunToLocation(murloc2, 3, 1458.05, 365.148, 550.221, 131.499)


--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut(murloc2, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
murloc2: Despawn()"
982,Lorewalker Story - S4: Jinyu - murloc3 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = murloc3:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeIn(murloc3, 2)
Wait(3)
RunToLocation(murloc3, 3, 1453.14, 367.684, 550.223, 189.731, false)
Wait(1)
--murloc3: SetFacing(60)
Wait(1)
--murloc3: SetFacing(120)
Wait(1)
--murloc3: SetFacing(99.999)
RunToLocation(murloc3, 3, 1453.72, 363.285, 550.221, 99.999, false)


--Wait for Scene 4
WaitForTrigger(""Scene4"")
FadeOut(murloc3, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
murloc3: Despawn()"
983,Object - Build Illusionary Barrier,"function CreateObject_Barrier(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local wallParams = {
		damModel = fid(536878);
		baseScale = 0.3;
		extraYaw = 0;
		yOffset = 0;
		xOffset = 0.0;
		startZ = -0.5;
		destZ = 0.0;
		upAnimTime = 0.0;
		downAnimTime = 2.0;
	};
	CreateObject_WallShared(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID, wallParams);
end"
984,Lorewalker Story - S4: Jinyu - jinyu1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = jinyu1:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 3
WaitForTrigger(""Scene4"")
CastSpellAtActor( jinyu1, jinyu1, TransformEffectSpellID )
FadeIn(jinyu1, 2)
Wait(2)
RunToLocation(jinyu1, 2, 1460.19, 366.184, 550.223, 136.181)
Wait(1)
PlayOneShotSplitBodyAnim( jinyu1, Animations.KneelStart )
PlayLoopingSplitBodyAnim( jinyu1, Animations.KneelLoop )

--Wait for Scene 4
WaitForTrigger(""Scene6"")
FadeOut(jinyu1, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
jinyu1: Despawn()"
985,Lorewalker Story - S4: Jinyu - jinyuSpeaker - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = jinyuSpeaker:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 3
WaitForTrigger(""Scene4"")
CastSpellAtActor( jinyuSpeaker, jinyuSpeaker, TransformEffectSpellID )
FadeIn(jinyuSpeaker, 2)

--Wait for Scene 4
WaitForTrigger(""Scene5"")
FadeOut(jinyuSpeaker, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
jinyuSpeaker: Despawn()"
986,Lorewalker Story - S4: Jinyu - jinyu3 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = jinyu3:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 3
WaitForTrigger(""Scene4"")
CastSpellAtActor( jinyu3, jinyu3, TransformEffectSpellID )
FadeIn(jinyu3, 2)
Wait(2)
RunToLocation(jinyu3, 2, 1456.16, 362.479, 550.223, 120.656)
Wait(1)
PlayOneShotSplitBodyAnim( jinyu3, Animations.KneelStart )
PlayLoopingSplitBodyAnim( jinyu3, Animations.KneelLoop )


--Wait for Scene 4
WaitForTrigger(""Scene6"")
FadeOut(jinyu3, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
jinyu3: Despawn()"
987,Lorewalker Story - S4: Jinyu - jinyuSpeakerStaff - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = jinyuSpeakerStaff:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( jinyuSpeakerStaff, Animations.ChannelCastOmni)

--Wait for Scene 3
WaitForTrigger(""Scene5"")
FadeIn(jinyuSpeakerStaff, 2)

--Wait for Scene 4
WaitForTrigger(""Scene9"")
FadeOut(jinyuSpeakerStaff, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
jinyuSpeakerStaff: Despawn()"
988,Dustwallow Marsh - Theramore Explosion Scene - Init - JSB,"
-- spawn zeppelin
local zeppelinModel = ""world\\expansion03\\doodads\\generic\\flying_horde_zeppelin.m2""

--zeppelin = SpawnModelActor( zeppelinModel, 3444.23, -278.363, 284.752, 249.2335, 1.0, false )
local zeppelins = SpawnModelActorsAtPoints( zeppelinModel, 3917, false )
zeppelin = zeppelins[1]

-- spawn bomb
local bombModel = ""WORLD\\EXPANSION01\\DOODADS\\TEROKKAR\\BOMB\\BE_ArcaneBomb_Orb.m2""
bomb = SpawnModelActor( bombModel, -4054.41, -4038.8, 270.979, 36.6342, 2.25, false ) -- ( modelFileName, x, y, z, facing, scale, snapToGround )
bombGround = SpawnModelActor( bombModel, -3720.24, -4411.71, 24.9488, 227.476, 2.25, false ) -- ( modelFileName, x, y, z, facing, scale, snapToGround )

FadeOut( bombGround, 0 )

-- spawn chain bunnies
chainBunnyCreatureID = 28960
chainBunnyA01 = SpawnActor( chainBunnyCreatureID, -4046.24, -4048.31, 280.537, 126.05 )
chainBunnyA02 = SpawnActor( chainBunnyCreatureID, -4052.27, -4041.6, 269.338, 126.05 )
chainBunnyB01 = SpawnActor( chainBunnyCreatureID, -4064.92, -4026.13, 278.651, 255.649 )
chainBunnyB02 = SpawnActor( chainBunnyCreatureID, -4056.89, -4035.76, 269.338, 306.95 )


-- spawn bomb target
bombTargetCreatureID = 65443
bombTarget = SpawnActor( bombTargetCreatureID, -3720.24, -4411.71, 24.9488, 227.476 )

-- spawn goblin
goblinCreatureID = 65446
goblin = SpawnActor( goblinCreatureID, -4058.17, -4034.47, 285.6, 312.685, 1.0, false )

-- spawn goblinA 01
goblinA01CreatureID = 65447
goblinA01 = SpawnActor( goblinA01CreatureID, -4057.45, -4041.13, 285.85, 81.6092, 1.0, false )


-- spawn goblinA 02
goblinA02CreatureID = 65447
goblinA02 = SpawnActor( goblinA02CreatureID, -4052.41, -4046.85, 286.75, 248.177, 1.0, false )

-- spawn goblinA 03
goblinA03CreatureID = 65447
goblinA03 = SpawnActor( goblinA03CreatureID, -4064.13, -4035.05, 285.6, 317, 1.0, false )

-- spawn goblinA 04
goblinA04CreatureID = 65447
goblinA04 = SpawnActor( goblinA04CreatureID, -4057.84, -4028.55, 285.6, 317, 1.0, false )


-- spawn goblinB01
goblinB01CreatureID = 65449
goblinB01 = SpawnActor( goblinB01CreatureID, -4049.87, -4040.54, 286.45, 343.945, 1.0, false )

-- spawn goblinB02
goblinB02CreatureID = 65449
goblinB02 = SpawnActor( goblinB02CreatureID, -4066.54, -4029.22, 286.79, 331.223, 1.0, false )




-- spawn fogs
-- in front
local cloudModel = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mist = SpawnModelActor( cloudModel, -4129.78, -4194.18, 264.599, 221.873, 54.0, false )
"
989,Dustwallow Marsh - Theramore Explosion Scene - Master,"
scene:ApplyScreenEffect(927) 

local sceneOrigin = scene:GetPosition()
scene:SetCamera(0, 0.0, nil, nil)

Wait(1.0)

scene:ClearScreenEffect(927)


SendTrigger( ""zeppelinMove"" )

SetCameraFollowPath( 368, 0.0, 3915, 3916, 7 )

Wait( 6.5 )


-- Wait( 5000 ) -- TEMP

scene:SetCamera(436, 7, nil, nil)

Wait( 6.5 )

SetCameraFollowPath( 368, 4.0, 3923, 3924, 15 )

Wait( 15 )

scene:SetCamera(438, 0, nil, nil)

Wait( 2 )


SendTrigger( ""zeppelinTeleport"" )


SetCameraFollowPath( 437, 3.0, nil, 3925, 7 )


Wait( 12.5 )

scene:ApplyScreenEffect(941) 

scene:SetCamera(496, 0, nil, nil)

Wait( 1 )
"
990,Lorewalker Story - S4: Jinyu - Init - Vision NPCs - ZTO,"--Vision Bunnies
visionBunny1 = SpawnActor( bunnyID, 1465.32, 369.36, 553.502, 157.553, 1, false) -- Bunny
visionBunny2 = SpawnActor( bunnyID, 1459.27, 364.339, 556.142, 132.803, 1, false) -- Bunny
visionBunny3 = SpawnActor( bunnyID, 1449.59, 360.752, 553.502, 91.8526, 1, false) -- Bunny
FadeOut(visionBunny1, 0)
FadeOut(visionBunny2, 0)
FadeOut(visionBunny3, 0)

-- Vision 1 - Mogu Emperor
moguEmperorID = 61898
moguEmperor = SpawnActor( moguEmperorID, 1465.32, 369.36, 553.502, 157.553, 1, false ) -- Spawn Shaohao

FadeOut( moguEmperor, 0 )

-- Vision 2 - Pandaren rebellion
moguGruntID = 61899
moguGrunt = SpawnActor( moguGruntID, 1459.27, 364.339, 556.142, 132.803, 1, false ) -- Spawn Shaohao

FadeOut( moguGrunt, 0 )

pandarenSlaveID = 61904
pandarenSlave01 = SpawnActor(pandarenSlaveID, 1455.91, 364.69, 556.142, 339.128, 1, false ) -- Pandaren Slave
pandarenSlave02 = SpawnActor(pandarenSlaveID, 1458.69, 367.52, 556.142, 277.928, 1, false ) -- Pandaren Slave

FadeOut(pandarenSlave01, 0)
FadeOut(pandarenSlave02, 0)

-- Vision 3 - Shaohao Init
shaohaoID = 61925
shaohao = SpawnActor( shaohaoID, 1449.53, 362.564, 553.502, 91.8526, 1, false ) -- Spawn Shaohao
shaohao2 = SpawnActor( shaohaoID, 1470.32, 379.76, 550.22, 218.256, 1, false ) -- Spawn Shaohao

FadeOut( shaohao, 0 )
FadeOut( shaohao2, 0 )

-- Mannoroth
mannorothID = 18075
mannoroth = SpawnActor( mannorothID, 1455.46, 368.561, 548.502, 65.0666, 1, false) 
FadeOut(mannoroth, 2)"
991,Dustwallow Marsh - Theramore Explosion Scene - Zeppelin - JSB,"
-- PlayLoopingSplitBodyAnim( zeppelin, Animations.ShipMoving )

zeppelin:PlayLoopingAnimKit(2272)
zeppelin:PlaySoundKit(33364, false)


zeppelinDest = Vector:New(-3950.57, -4197.59, 313.14)
zeppelinMoveSpeed = 8
zeppelinSrc = zeppelin:GetPosition()
zeppelinMoveOffset = zeppelinDest - zeppelinSrc

-- force the ship to face a direction
zeppelin:SetFacingToAbs(Vector:New(-4087.78 -3864.83, 308.798))

WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

-- Wait ( 60 ) -- TEMP

RunToLocation(zeppelin, zeppelinMoveSpeed, zeppelinDest.x, zeppelinDest.y, zeppelinDest.z)

-- WaitForTrigger( ""zeppelinTeleport"" )

RunToLocation(zeppelin, 500, -3834.78, -4345.63, 313.14)

WaitForTrigger( ""zeppelinTeleport"" )

zeppelin:FollowPath( 3926, 8 )"
992,Lorewalker Story - S4: Jinyu - Vision 3 - shaohao - ZTO DEPRECATED,"--DEPRECATED SCENE - KEEPING UNTIL FINAL APPROVAL
--local cloudBunnyVisual = visionBunny3:PlaySpellStateVisual(27002) --Cast Actor Visual
--local actorAuraVisual = shaohao:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 7
--WaitForTrigger(""Scene8"")
--Wait(5)
--FadeIn(visionBunny3, 2)
--FadeIn(shaohao, 2)

--Wait for Scene 9 (clean up)
--WaitForTrigger(""Scene9"")
--FadeOut(visionBunny3, 2)
--FadeOut(shaohao, 2)

--Wait for endScene
--WaitForTrigger(""endScene"")
--visionBunny3: Despawn()
--shaohao: Despawn()"
993,Lorewalker Story - S4: Jinyu - Vision 1 - mogu - ZTO DEPRECATED,"--DEPRECATED SCENE - KEEPING UNTIL FINAL APPROVAL
--local cloudBunnyVisual = visionBunny1:PlaySpellStateVisual(27002) --Cast Actor Visual
--local actorAuraVisual = moguEmperor:PlaySpellStateVisual(24803) --Cast Actor Visual
--PlayLoopingSplitBodyAnim( moguEmperor, Animations.Stand)

--Wait for Scene 7
--WaitForTrigger(""Scene7"")
--FadeIn(visionBunny1, 2)
--FadeIn(moguEmperor, 2)


--Wait for Scene 8 (clean up)
--WaitForTrigger(""Scene9"")
--FadeOut(visionBunny1, 2)
--FadeOut(moguEmperor, 2)


--Wait for endScene
--WaitForTrigger(""endScene"")
--visionBunny1: Despawn()
--moguEmperor: Despawn()
"
994,Lorewalker Story - S4: Jinyu - Vision 2 - rebellion - ZTO DEPRECATED,"--DEPRECATED SCENE - KEEPING UNTIL FINAL APPROVAL
--local cloudBunnyVisual = visionBunny2:PlaySpellStateVisual(27002) --Cast Actor Visual
--local actorAuraVisual = moguGrunt:PlaySpellStateVisual(24803) --Cast Actor Visual
--local actorAuraVisual = pandarenSlave01:PlaySpellStateVisual(24803) --Cast Actor Visual
--local actorAuraVisual = pandarenSlave02:PlaySpellStateVisual(24803) --Cast Actor Visual
--moguGrunt: PlayLoopingAnimKit( 2316 )
--pandarenSlave01: PlayLoopingAnimKit( 2315 )
--pandarenSlave02: PlayLoopingAnimKit( 2315 )

--Wait for Scene 7
--WaitForTrigger(""Scene8"")
--FadeIn(visionBunny2, 2)
--FadeIn(moguGrunt, 2)
--FadeIn(pandarenSlave01, 2)
--FadeIn(pandarenSlave02, 2)

--Wait for Scene 8 (clean up)
--WaitForTrigger(""Scene9"")
--FadeOut(visionBunny2, 2)
--FadeOut(moguGrunt, 2)
--FadeOut(pandarenSlave01, 2)
--FadeOut(pandarenSlave02, 2)


--Wait for endScene
--WaitForTrigger(""endScene"")
--visionBunny2: Despawn()
--moguGrunt: Despawn()
--pandarenSlave01: Despawn()
--pandarenSlave02: Despawn()
"
995,Dustwallow Marsh - Theramore Explosion Scene - Bomb - JSB,"
bomb:SetFacingToAbs(Vector:New(-4966, -3949.36, 215.292))

-- COPY STARTS HERE
--
local relativeMover = bomb -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

-- bomb:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

RunToLocation(bomb, 500, -3819.17, -4350.76, 270)

FadeOut( bomb, 0 )

-- drop bomb
SendTrigger( ""dropBomb"" )

CastSpellAtActor( bomb, bombTarget, 128438 )

bomb:PlaySoundKitStereo(33422, true)"
996,Lorewalker Story - S4: Jinyu - pool - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
PlayLoopingSplitBodyAnim( pool, Animations.Hold )

--Wait for Scene 1
WaitForTrigger(""Scene1"")
Wait(5)
pool:Fade(.75, 2)
--FadeIn(pool, 5)

--Wait for Scene 1a (stone throw spell)
WaitForTrigger(""Scene2"")
--StopLoopingSplitBodyAnim( pool, Animations.Hold )
PlayOneShotSplitBodyAnim( pool, Animations.Stand )

--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeOut(pool, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
pool: Despawn()"
997,Lorewalker Story - S4: Jinyu - waterfall - ZTO,"--Wait for Scene 5
WaitForTrigger(""Scene5"")
FadeIn(waterfall, 5)

--Wait for Scene 9 (clean up)
WaitForTrigger(""Scene9"")
FadeOut(waterfall, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
waterfall: Despawn()"
998,Lorewalker Story - S4: Jinyu - Vision 3 - shaohao2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = shaohao2:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 6
WaitForTrigger(""Scene6"")
Wait(2)
FadeIn(shaohao2, 2)
RunToLocation(shaohao2, 2, 1460.63, 371.152, 550.221, 221.631, false)
Wait(2)
PlayOneShotSplitBodyAnim(shaohao2, Animations.EmoteTalkQuestion)

--Wait for Scene 8
WaitForTrigger(""Scene8a"")
PlayLoopingSplitBodyAnim(shaohao2, Animations.Cower)
Wait(5)
RunToLocation(shaohao2, 7, 1469.89, 379.405, 550.221, 50.6305, false)
FadeOut(shaohao2, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
shaohao2: Despawn()"
999,Brazie's PetBattle - Dispatcher - Visuals - Block,"
-- Performs a block when requested
--
function Dispatcher_PerformBlock( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	-- Process independently
	if ( victimActor and (victim.sessile == false) ) then
		victimActor:WaitMovementComplete()
	end

	if (feedbackActor) then
		feedbackActor:PlaySoundKit(27044, true)
	end

	DebugPrint(""block"") 

	if ( victimActor and (victim.sessile == false) ) then
		victimActor:SetFacingToTarget( attackerActor, Vector:New() )
	end

	if (feedbackActor) then
		feedbackActor:AddWorldText( feedbackActor, MissReasons.Blocked, false, false)
	end

end
"
1000,Lorewalker Story - S4: Jinyu - Vision 4 - Mannoroth - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = mannoroth:PlaySpellStateVisual(24803) --Cast Actor Visual

--Wait for Scene 8
WaitForTrigger(""Scene8a"")
FadeIn(mannoroth, 0.5)
RunToLocation( mannoroth, 10, 1455.46, 368.561, 553.502, 65.0666, false)
PlayOneShotSplitBodyAnim( mannoroth, Animations.CreatureSpecial )
Wait(2)
PlayOneShotSplitBodyAnim( mannoroth, Animations.ReadySpellOmni )
Wait(2)
FadeOut(mannoroth, 2)

--Wait for endScene
WaitForTrigger(""endScene"")
mannoroth: Despawn()"
1001,Lorewalker Story - S2: Saurok - MASTER - Lorewalker Cho - ZTO,"--OnScene start
WaitForTrigger(""smoothPhaseComplete"")
Wait(2)
--lorewalker: StopLoopingSplitBodyAnim( Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow ) 
Wait(2)

--SCENE 1: Cho walks to weaponwrack and draws a weapon.
lorewalker:BroadcastText(BroadcastType.Say, 61470) -- VO Line 1
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk ) 
SendTrigger( ""Scene1"" ) --Cue Weapon rack
Wait(1)
RunToLocation(lorewalker, 2, 1446.13, 370.093, 550.221, 177.624)
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.UseStandingStart )  
local swordVisual = lorewalker:PlaySpellStateVisual(27059) --Cast Sword Visual
Wait(1)
RunToLocation(lorewalker, 2, 1454.54, 369.217, 550.222, 130.375)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(3)
 
lorewalker:BroadcastText(BroadcastType.Say, 61471) -- VO Line 2
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(3.5)

--SCENE 2: Mogu slavers
lorewalker:BroadcastText(BroadcastType.Say, 61798) -- VO Line 3
SendTrigger( ""Scene2"" ) -- Cue the Mogu and slaves, clear weapon rack
FadeIn(light_uc, 2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
RunToLocation( lorewalker, 2, 1456.71, 376.598, 550.221, 194.274, true)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(13)
lorewalker:PlayOneShotAnimKit(3229)
Wait(5)
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(3)

--SCENE 3: Mogu in the Egg chamber
lorewalker:BroadcastText(BroadcastType.Say, 61799) -- VO Line 4 
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
RunToLocation( lorewalker, 2, 1455.63, 373.223, 550.222, 163.673)
SendTrigger( ""Scene3"" ) -- Cue rookery and fleshwarper scene
FadeOut(light_uc, 2)
FadeIn(light_dc, 2)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(21)
lorewalker:StopAnimKit(3229)
lorewalker:PlayOneShotAnimKit(2625)
Wait(5)
lorewalker:PlayOneShotAnimKit(3229)
Wait(10)
lorewalker:StopAnimKit(3229)
lorewalker:PlayOneShotAnimKit(2625)
Wait(6)

--SCENE 4: Cho hands saurok a sword
lorewalker:BroadcastText(BroadcastType.Say, 61800) -- VO Line 5
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:PlayOneShotAnimKit(3229)
SendTrigger( ""Scene4"" ) -- Saurok crosses to Cho, fade out mogu and rookery
Wait(2)
lorewalker: ClearSpellVisual( swordVisual) -- Lose sword
lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""littlesaurok - sword"" )
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(6)

--SCENE 5: Saurok roar
lorewalker:BroadcastText(BroadcastType.Say, 61801) -- VO Line 6
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene5"" ) -- Saurok to center stage roaring and chopping
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(5)

--SCENE 6: Saurok war against enemies, pandaren slaves cheer, war errupts across the entire Seat of Knowledge
lorewalker:BroadcastText(BroadcastType.Say, 61802) -- VO Line 7
lorewalker:PlayOneShotAnimKit(3229)
SendTrigger( ""Scene6"" ) -- Saurok fight against Yaungol and Mantid
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(10)
--StopLoopingSplitBodyAnim( lorewalker, Animations.EmoteTalk )

WaitForTrigger(""kill mantid1"")
"
1002,[1] Lorewalker Story - S2: Saurok - MASTER - Lorewalker Cho - ZTO,"Wait(1)
--SCENE 7: Saurok turn on the slaves
lorewalker:StopAnimKit(3229)
lorewalker:BroadcastText(BroadcastType.Say, 61803) -- VO Line 8
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
SendTrigger( ""Scene7"" ) -- Mantid die, saurok turn and attack pandaren slaves, who then cower... and die.
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)--Wait(10)

--SCENE 8: Saurok turn on the Mogu
lorewalker:BroadcastText(BroadcastType.Say, 61804) -- VO Line 9
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Scene8"" ) -- saurok begin to assualt the mogu on stage.
FadeIn(light_uc, 2)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(6) --Wait(10)

--SCENE 9: The Mogu purge the saurok
lorewalker:BroadcastText(BroadcastType.Say, 61805) -- VO Line 10
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:PlayOneShotAnimKit(3229)
SendTrigger( ""Scene9"" ) -- Saurok start dying left and right as mogu march in from the wings. Terrorcotta and quillen attack where they can reach.
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(15)
lorewalker:StopAnimKit(3229)

--SCENE 10: Mogu victory. Piles of saurok bodies everywhere.
lorewalker:BroadcastText(BroadcastType.Say, 61806) -- VO Line 11 ()
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Scene10"" ) -- Mogu are victorious, gathering center stage, when leader mogu is stabbed in the back by the saurok with Cho's sword. The saurok looks around then scampers off stage.
FadeOut(light_cl, 2)
FadeOut(light_ur, 2)
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.305, 93.5645)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(7)
Wait(4)
Wait(3)

lorewalker:BroadcastText(BroadcastType.Say, 63691) -- VO Line 12 ()
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Scene11"" ) -- Clean all
FadeOut(light_uc, 2)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(4)

--Final
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
1003,Lorewalker Story - S2: Saurok - Init - Props - ZTO,"--Spawn Weapon Rack
rackID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\WEAPONRACK\\PA_WeaponRack_02.M2""
rack = SpawnModelActor (rackID, 1443.49, 370.564, 550.221, 4.14916, 1, true)
FadeOut(rack, 0)"
1004,Lorewalker Story - S2: Saurok - rack - ZTO,"--Wait for Scene 1
WaitForTrigger(""Scene1"")
FadeIn(rack, 2)

--Wait For Scene 2
WaitForTrigger(""Scene2"")
FadeOut(rack, 2)
Wait(10)
rack: Despawn()"
1005,Lorewalker Story - S2: Saurok - pandarenSlaves - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = pandarenSlavef1:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef2:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef3:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef4:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef5:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef6:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef7:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef8:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef9:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef10:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef11:PlaySpellStateVisual(24803) --Cast Actor Visual
local actorAuraVisual = pandarenSlavef12:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( pandarenSlavef1, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef2, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef3, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef4, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef5, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef6, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef7, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef8, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef9, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef10, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef11, Animations.KneelLoop )
PlayLoopingSplitBodyAnim( pandarenSlavef12, Animations.KneelLoop )

--Wait for Scene 2
WaitForTrigger(""Scene2"")
Wait(2)
FadeIn(pandarenSlavef1, 1)
FadeIn(pandarenSlavef2, 1)
FadeIn(pandarenSlavef3, 1)
FadeIn(pandarenSlavef4, 1)
FadeIn(pandarenSlavef5, 1)
FadeIn(pandarenSlavef6, 1)
FadeIn(pandarenSlavef7, 1)
FadeIn(pandarenSlavef8, 1)
FadeIn(pandarenSlavef9, 1)
FadeIn(pandarenSlavef10, 1)
FadeIn(pandarenSlavef11, 1)
FadeIn(pandarenSlavef12, 1)

--Wait for Scene 3
WaitForTrigger(""Scene3"")
FadeOut(pandarenSlavef1, 1)
FadeOut(pandarenSlavef2, 1)
FadeOut(pandarenSlavef3, 1)
FadeOut(pandarenSlavef4, 1)
FadeOut(pandarenSlavef5, 1)
FadeOut(pandarenSlavef6, 1)
FadeOut(pandarenSlavef7, 1)
FadeOut(pandarenSlavef8, 1)
FadeOut(pandarenSlavef9, 1)
FadeOut(pandarenSlavef10, 1)
FadeOut(pandarenSlavef11, 1)
FadeOut(pandarenSlavef12, 1)

--Wait for Scene 4
WaitForTrigger(""Scene4"")
RunToLocation(pandarenSlavef1, 10, 1464.94, 370.476, 550.221, 220.043, true)
RunToLocation(pandarenSlavef2, 10, 1465.91, 373.664, 550.221, 224.768, true)
RunToLocation(pandarenSlavef3, 10, 1464.3, 367.349, 550.221, 163.118, true)
PlayLoopingSplitBodyAnim(pandarenSlavef1, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim(pandarenSlavef2, Animations.EmoteApplaud)
PlayLoopingSplitBodyAnim(pandarenSlavef3, Animations.EmoteCheer)

--Wait For Scene 6
WaitForTrigger(""Scene6"")
FadeIn(pandarenSlavef1, 2)
FadeIn(pandarenSlavef2, 2)
FadeIn(pandarenSlavef3, 2)
FadeIn(light_ur, 2)

--Wait For Scene 7
WaitForTrigger(""Scene7"")
Wait(1)
StopLoopingSplitBodyAnim(pandarenSlavef1, Animations.EmoteCheer)
StopLoopingSplitBodyAnim(pandarenSlavef2, Animations.EmoteCheer)
StopLoopingSplitBodyAnim(pandarenSlavef3, Animations.EmoteCheer)

PlayOneShotSplitBodyAnim(pandarenSlavef1, Animations.Cower)
PlayOneShotSplitBodyAnim(pandarenSlavef2, Animations.Cower)
PlayOneShotSplitBodyAnim(pandarenSlavef3, Animations.Cower)

Wait(1)
PlayOneShotSplitBodyAnim(pandarenSlavef1, Animations.Death)
PlayLoopingSplitBodyAnim(pandarenSlavef1, "
1006,Turn Package - Basic Useful Stuff,"function TutorialJunk_DoNotCall()
	--[[
	-- Global checker:
	--
	local env = {};
	setmetatable(env, { __index = getfenv(1), __newindex = function(tab, k, v) error(""Attempt to set global ""..k); end});
	setfenv(1, env);
	]]---

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	
	local attackPoint = ObtainAttackPoint( ROID, targetROID, PetBattleRange.Melee, missed )


	-- Get the first effect type
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
	end

	-- Spellcasting

	local visual = petAbilityVisuals[turn.turnVisualID]  --GetAuraAbilityVisual(player.trapAbilityID)
	local spellVisualID = nil
	if ( visual ) then
		spellVisualID = visual.spellVisualID
	end		

	local precastID = caster.actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(visual.castTime)
	caster.actor:ClearSpellVisual( precastID)

	-- Self
	castInstanceID = caster.actor:PlaySpellCastVisual(spellVisualID, visual.impactTime, true )

	-- Targets
	castInstanceID = caster.actor:PlaySpellCastVisualAtTargets(spellVisualID, visual.impactTime, true, { targetPet.actor } )

	-- Dest
	castInstanceID = caster.actor:PlaySpellCastVisualAtPoints(spellVisualID, visual.impactTime, true, { targetPet.actor:GetPosition() } )
	scene:WaitTimer( visual.impactTime )

	-- Processing Effects 

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	-- Same thing as above, but condensed

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		DefaultDoEffect( ROID, ""effect"", effect ); 
	end 

	-- Objects
	local slot, transform = FindNextObjectSlot( caster.playerID ) 
	local location = transform.position;
	
	local object, playerID, slot, transform = FindObjectByAbilityID( caster.playerID, turn.abilityID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );


	-- Spline Shit
--[[
moveData = MoveData:Default(3)
--moveData.posControl = MovePosControl.TotalTime
moveData.posControl = MovePosControl.PointSpeed
moveData.yawControl = MoveRotControl.None
moveData.pitchControl = MoveRotControl.Angle
moveData.rollControl = MoveRotControl.Angle
moveData.teleportToFirstPoint = false
moveData.isGroundSnapping = true
moveData.isRelative = true
moveData.time = 10
moveData.speed = 4
moveData.animKitID = 2272 -- Steve's zeppelin propellor anim

moveData.points[1].pos = Vector:New(4,  -6, 4)
moveData.points[1].time = 5
moveData.points[1].speed = 2 
moveData.points[1].yaw = 45
moveData.points[1].pitch = 0
moveData.points[1].roll = 0
moveData.points[1].lookAt = Vector:New(4,  -6, 5)

]]
	local moveData = MoveData:Default(6)
	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Tangent

	moveData.points[1].pos = Vector:New(0.0, 0, 0);
	moveData.points[1].speed = 10
	moveData.points[2].pos = Vector:New(1.0, 0, 0);
	moveData.points[2].speed = 14
	moveData.points[3].pos = Vector:New(1.8, 0, 0.5);
	moveData.points[3].speed = 7
	moveData.points[4].pos = Vector:New(0.5, 0, 3.0);
	moveData.points[4].speed = 7
	moveData.points[5].pos = Vector:New(0.05, 0, 1.0);
	moveData.points[5].speed = 7
	moveData.points[6].pos = Vector:New(0.0, 0, 0);
	moveData.points[6].speed = 2

	local stretch = true;
	local splineDuration = 2;

	local visKit = "
1007,--------------------------------------------------------------------,
1008,--------------------------------------------------------------------,
1009,Turn Package - Launch Mines / Detonate Mines,"local DEBUG_ON = false;
local DebugPrint = function(data)
	if ((DEBUG_ON == true)) then
		print(""Debug Mines Launch/Detonate: "" .. tostring(data))
	end
end

function Dispatcher_LaunchMines( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Launch Mines"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )
	local enemyPadROID = GETROIDFORPLAYERPAD( 3 - caster.playerID )

	local visual = petAbilityVisuals[turn.turnVisualID]  --GetAuraAbilityVisual(player.trapAbilityID)
	local spellVisualID = nil
	if ( visual ) then
		spellVisualID = visual.spellVisualID
	end


	-- Skitter around building the object
	--if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then		
 
		local enemyPad = ROIDTOUNIT( enemyPadROID );

		--local slot, transform = FindNextObjectSlot( caster.playerID ) 
		--local location = transform.position;

		local padLoc = enemyPad.actor:GetPosition();

		-- Generate some points
		local points = {}

		local numPoints = 6;

		local offset=270
		local step= 360/numPoints;

		for i=offset+step,offset+720,step do 
			local sin = math.sin(i/180*math.pi)*1.25
			local cos = math.cos(i/180*math.pi)*1.25
			table.insert(points, Vector:New(sin, cos, 0));

		end

		local visual = petAbilityVisuals[turn.turnVisualID]  --GetAuraAbilityVisual(player.trapAbilityID)
		local spellVisualID = nil
		if ( visual ) then
			spellVisualID = visual.spellVisualID
		end		

		local precastID = caster.actor:PlaySpellPreCastVisual(spellVisualID)
		scene:WaitTimer(visual.castTime)

		--local missilePoints = {}
		for i=1, #points do 
			local point = Vector:New() + padLoc + points[i] * 2
			--table.insert(missilePoints, point );
			castInstanceID = caster.actor:PlaySpellCastVisualAtPoints(spellVisualID, visual.impactTime, true, { point } )
		end

		scene:WaitTimer(visual.impactTime)


		-- Handle all effects
		for index=1,#turn.effects do 
			local effect = turn.effects[index];

			--DefaultEffectVisualHandler( ROID, effect, turnVisualID)
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end 

	--else
	--	print(""Doing normal minefield shit"");
	--	DefaultTurnBehaviour( ROID, isTurn, turn )
	--end 

	-- Reset/reposition
		DefaultTurnCleanUp(ROID);

end

function CreateObject_Mines(baseModel, ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local enemyPad = ROIDTOUNIT( ROID );

	--local slot, transform = FindNextObjectSlot( caster.playerID ) 
	--local location = transform.position;

	--local baseModel = ""WORLD\\GOOBER\\LandMineAlteracValley.m2""

	local padLoc = enemyPad.actor:GetPosition();

	local mines = {};
	local mineCreateData = ActorCreateData:Default();
	
	mineCreateData.name = GetGlobalString( ""BATTLE_PET_OBJECT_MINE"" ) or ""Mine"";
	mineCreateData.modelFileID = baseModel;
	mineCreateData.transform = nil;
	mineCreateData.scale = 0.5;
	mineCreateData.groundSnap = true;

	-- Generate some points
	local points = {}
	local numPoints = 6;

	local offset=270
	local step= 360/numPoints;

	for i=offset+step,offset+720,step do 
		local sin = math.sin(i/180*math.pi)*1.25
		local cos = math.cos(i/180*math.pi)*1.25
		table.insert(points, Vector:New(sin, cos, 0));
	end

	for i=1,#points do
		local point = Vector:New() + padLoc + points[i] * 2

		mineCreateData.transform = Transform:New(point, 0);
		local newActor = scene:SpawnActor(mineCreateData);

		table.insert(mines, newActor);
	end

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	object.actor = mines[1];
	object.actors = mines;

	-- Loop of the near infinite
	while ( aura.running ) do 
		scene:WaitTimer(0.1);
	end

	DebugPrint(""Aura Finished"")

	while ( object.processing == true ) "
1010,[1] Lorewalker Story - S2: Saurok - pandarenSlaves - ZTO,"Animations.Dead)

Wait(2)
PlayOneShotSplitBodyAnim(pandarenSlavef3, Animations.Death)
PlayLoopingSplitBodyAnim(pandarenSlavef3, Animations.Dead)

Wait(2)
PlayOneShotSplitBodyAnim(pandarenSlavef2, Animations.Death)
PlayLoopingSplitBodyAnim(pandarenSlavef2, Animations.Dead)

--Wait For Scene 9
WaitForTrigger(""Scene9"")
FadeOut(pandarenSlavef1, 2)
FadeOut(pandarenSlavef2, 2)
FadeOut(pandarenSlavef3, 2)


--Wait for endScene
WaitForTrigger(""endScene"")
pandarenSlavef1: Despawn()
pandarenSlavef2: Despawn()
pandarenSlavef3: Despawn()
pandarenSlavef4: Despawn()
pandarenSlavef5: Despawn()
pandarenSlavef6: Despawn()
pandarenSlavef7: Despawn()
pandarenSlavef8: Despawn()
pandarenSlavef9: Despawn()
pandarenSlavef10: Despawn()
pandarenSlavef11: Despawn()
pandarenSlavef12: Despawn()"
1011,Lorewalker Story - S2: Saurok - mantid1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = mantid1:PlaySpellStateVisual(24803) --Cast Actor Visual
--local mantidWings = mantid1:PlaySpellStateVisual(26303) --Cast Actor Visual
PlayLoopingSplitBodyAnim(mantid1, Animations.Fly)

local moveData = MoveData:Default()

moveData.pathID = 4434
moveData.speed = 19

moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true
moveData.animKitID = 1395

--Wait for scene 6
WaitForTrigger(""Scene6"")
FadeIn(mantid1, 2)
Wait(5)
--RunToLocation(mantid1, 5, 1458.67, 371.215, 550.221, 29.1752, false)
mantid1:Move( moveData )
mantid1:WaitMovementComplete()
PlayOneShotSplitBodyAnim(mantid1, Animations.BattleRoar)


--Wait For Kill order
WaitForTrigger(""kill mantid1"")
PlayOneShotSplitBodyAnim(mantid1, Animations.Death)
PlayLoopingSplitBodyAnim(mantid1, Animations.Dead)

--Wait for Scene 9
WaitForTrigger(""Scene9"")
FadeOut(mantid1, 2)

Wait(10)
mantid1: Despawn()"
1012,Lorewalker Story - S2: Saurok - mantid2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = mantid2:PlaySpellStateVisual(24803) --Cast Actor Visual
--local mantidWings = mantid2:PlaySpellStateVisual(26303) --Cast Actor Visual
PlayLoopingSplitBodyAnim(mantid2, Animations.Fly)

local moveData = MoveData:Default()

moveData.pathID = 4436
moveData.speed = 19

moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true
moveData.animKitID = 1395

--Wait for scene 6
WaitForTrigger(""Scene6"")
FadeIn(mantid2, 2)
Wait(5)
--RunToLocation(mantid2, 5, 1460.72, 365.837, 550.221, 56.1752, false)
mantid2:Move( moveData )
mantid2:WaitMovementComplete()
SendTrigger(""landed"")
PlayOneShotSplitBodyAnim(mantid2, Animations.BattleRoar)

--Wait For Kill order
WaitForTrigger(""kill mantid2"")
CastSpellAtActor( mantid2, mantid2, squibID )
PlayOneShotSplitBodyAnim(mantid2, Animations.Death)
PlayLoopingSplitBodyAnim(mantid2, Animations.Dead)

--Wait for Scene 9
WaitForTrigger(""Scene9"")
FadeOut(mantid2, 2)

Wait(10)
mantid2: Despawn()"
1013,Dustwallow Marsh - Theramore Explosion Scene - Goblin - JSB,"
-- COPY STARTS HERE
--
local relativeMover = goblin -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

goblin:SetFacingToAbs(Vector:New(-3950.57, -4197.59, 313.14))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()


FadeOut( goblin, 0 )"
1014,Dustwallow Marsh - Theramore Explosion Scene - VO Manager- JSB,"
Wait( 15 )

goblinB01:PlayOneShotFullBodyAnim(Animations.EmotePoint)

Wait( 3 )

goblin:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
goblin:BroadcastTextStereo(BroadcastType.Say, 57715)
Wait( 2.5 )

goblinA01:PlayOneShotFullBodyAnim(Animations.EmoteLaugh)

-- scene:BroadcastTextStereo (65995)
"
1015,Dustwallow Marsh - Theramore Explosion Scene - GoblinA 02 - JSB,"
-- COPY STARTS HERE
--
local relativeMover = goblinA02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

goblinA02:SetFacingToAbs(Vector:New(-4231.19, -4463.79, 273.632))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()


FadeOut( goblinA02, 0 )"
1016,Dustwallow Marsh - Theramore Explosion Scene - GoblinB 01 - JSB,"

goblinB01:PlaySoundKitStereo(33364, true)


-- COPY STARTS HERE
--
local relativeMover = goblinB01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

goblinB01:SetFacingToAbs(Vector:New(-3448.24, -4253.23, 239.416))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()


FadeOut( goblinB01, 0 )"
1017,Dustwallow Marsh - Theramore Explosion Scene - Cloud - JSB,"
WaitForTrigger( ""zeppelinTeleport"" )

FadeOut( mist, 3 )"
1018,[1] Turn Package - Launch Mines / Detonate Mines,"do 
		scene:WaitTimer(0.1)
	end

	DebugPrint(""Object Done"")

	for k,v in pairs(mines) do
		v:Fade(0,0.1);
	end
 
	DebugPrint(""Mines Faded"")

	scene:WaitTimer(0.1);
	for k,v in pairs(mines) do
		v:Despawn();
	end

	UnregisterObject(object.playerID, object.slot);
end

function Dispatcher_DetonateMines( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_DetonateMines"");

		return;
	end


	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);
	
	local visual = petAbilityVisuals[turn.turnVisualID]  --GetAuraAbilityVisual(player.trapAbilityID)
	local spellVisualID = nil
	if ( visual ) then
		spellVisualID = visual.spellVisualID
	end

	object.processing = true

	local precasts = {};
	if ( object.actors ) then
		for k,v in pairs(object.actors) do 
			precasts[k] = v:PlaySpellPreCastVisual(27090)
		end
		scene:WaitTimer(0.34);

		for k,v in pairs(object.actors) do 
			v:ClearSpellVisual(precasts[k])
			castInstanceID = v:PlaySpellCastVisualAtPoints(27090, visual.impactTime, true, { v:GetPosition()+Vector:New(0,0,1) } )
		end
	end

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turn.turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	scene:WaitTimer(0.3);

	-- Reset/reposition
--pgm why reposition (this brings me back to front line)	Dispatcher_AddCommandToQueue(ROID, Dispatcher_PerformPostAttackCleanup );

	-- Signal the object to despawn
	object.processing = nil;
end"
1019,Dustwallow Marsh - Theramore Explosion Scene - GoblinA 01 - JSB,"
-- COPY STARTS HERE
--
local relativeMover = goblinA01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

goblinA01:SetFacingToAbs(Vector:New(-3695.78, -3730.07, 267.382))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()


FadeOut( goblinA01, 0 )"
1020,Dustwallow Marsh - Theramore Explosion Scene - GoblinB 02 - JSB,"


-- COPY STARTS HERE
--
local relativeMover = goblinB02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.EmoteReadLoop)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

goblinB02:SetFacingToAbs(Vector:New(-3702.23, -4308.57, 297.216))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()


FadeOut( goblinB02, 0 )"
1021,Dustwallow Marsh - Theramore Explosion Scene - GoblinA 03 - JSB,"
-- COPY STARTS HERE
--
local relativeMover = goblinA03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

goblinA03:SetFacingToAbs(Vector:New(-3668.21, -4450.2, 287.441))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()


FadeOut( goblinA03, 0 )"
1022,Dustwallow Marsh - Theramore Explosion Scene - GoblinA 04 - JSB,"
-- COPY STARTS HERE
--
local relativeMover = goblinA04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

Wait ( 6 )

goblinA04:SetFacingToAbs(Vector:New(-3668.21, -4450.2, 287.441))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()


FadeOut( goblinA04, 0 )"
1023,Weather - Lightning Storm,"function Weather_LightningStorm(ROID, isAura, aura, auraInstanceID, turnsRemaining)
	local pad = ROIDTOPET(ROID); 

	local fillModel = fid(165768);
	local groundModel = fid(365751);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,10)

	local killFunction, fillFunction, actor = CreateBlizzardEffect( 
			groundModel,
			2,		-- Base scale
			fillModel, 
			0.5,		-- Fill Scale
			Transform:New(centerPosition,0),
			10,  -- width
			10,  -- depth
			1,   -- fill rate
			false,
			true,
			nil
			) 
	
	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		fillFunction(1)

		scene:WaitTimer(1);
	end

	killFunction();
end"
1024,Weather - Snowstorm,"function Weather_SnowStorm(ROID, isAura, aura, auraInstanceID, turnsRemaining)
	local pad = ROIDTOPET(ROID); 

	local groundModel 	= fid(365751); -- ""SPELLS\\Invisible.M2""
	local fillModel 	= fid(165792);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,7.5)

	local killFunction, fillFunction, actor = CreateBlizzardEffect( 
			groundModel,
			1.5,		-- Base scale
			fillModel, 
			1,		-- Fill Scale
			Transform:New(centerPosition,0),
			8,  -- width
			8,  -- depth
			3,   -- fill rate
			false, 
			true,
			1
			) 
	
	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		fillFunction(0.25)

		scene:WaitTimer(0.25);
	end

	killFunction();
end"
1025,Critter - Mudslide,"function Weather_Mudslide(ROID, isAura, aura, auraInstanceID, turnsRemaining)
	local pad = ROIDTOPET(ROID); 

	local groundModel 	= fid(166432); 
	local fillModel 	= fid(201854);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0.15)

	local killFunction, fillFunction, actor = CreateBlizzardEffect( 
			groundModel,
			0.3,		-- Base scale
			fillModel, 
			0.2,		-- Fill Scale
			Transform:New(centerPosition,0),
			7,  -- width
			7,  -- depth
			3,   -- fill rate
			false, 
			true,
			1
			) 
	
	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		fillFunction(0.25)

		scene:WaitTimer(0.25);
	end

	killFunction();
end"
1026,Weather - Burning Ground,"function Weather_ScorchedEarth(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	if (isObserved ~= true) then
		return
	end

	local pad = ROIDTOPET(ROID);

--	local groundModel = ""WORLD\\EXPANSION03\\DOODADS\\FIRELANDS\\LAVA_SPLASH\\Firelands_Lava_Splash_01.M2"";
	local groundModel = fid(235304);


	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,-3.7)
	
	local baseScale = 0.4;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0), 
			false)

	local q = 1

	while ( aura.running and q < 100000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1027,Weather - Sandstorm,"function Weather_SandStorm(ROID, isAura, aura, auraInstanceID, turnsRemaining)
	local pad = ROIDTOPET(ROID); 

--	local groundModel 	= ""WORLD\EXPANSION03\\DOODADS\\ULDUM\\BLOWINGSAND\\Uldum_Blowing_Sand_Particle_01.M2;
-- ""SPELLS\\Invisible.M2""
	local groundModel 	= fid(512175); 

	local fillModel 	= fid(392676);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0);

	local killFunction, fillFunction, actor = CreateBlizzardEffect( 
			groundModel,
			0.5,		-- Base scale
			fillModel, 
			0.1,		-- Fill Scale
			Transform:New(centerPosition,90),
			4,  -- width
			8,  -- depth
			1,   -- fill rate
			false, 
			true,
			3
			) 

	actor:MoveToAbs(Vector:New(0,-6,3), 0);
	
	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		fillFunction(1)

		scene:WaitTimer(1);
	end

	killFunction();
end"
1028,Weather - Cleansing Rain,"function Weather_CleansingRain(ROID, isAura, aura, auraInstanceID, turnsRemaining)
	local pad = ROIDTOPET(ROID); 

	local groundModel 	= fid(365751); -- ""SPELLS\\Invisible.M2""
	local fillModel 	= fid(405429);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,8)

	local killFunction, fillFunction, actor = CreateBlizzardEffect( 
			groundModel,
			1.5,		-- Base scale
			fillModel, 
			1,		-- Fill Scale
			Transform:New(centerPosition,0),
			6,  -- width
			6,  -- depth
			3,   -- fill rate
			false, 
			true,
			1
			) 
	
	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		fillFunction(0.25)

		scene:WaitTimer(0.25);
	end

	killFunction();
end"
1029,Weather - Sunny Day,"function Weather_SunnyDay(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(575431);

	local centerPosition = pad.actor:GetPosition()+Vector:New(-2,0,-1)
	
	local baseScale = 0.05;
	local bonusScalePerRoundRemaining = 0.0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0) )

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1030,Weather - Moonlight,"function Weather_Moonlight(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	if (isObserved ~= true) then
		return
	end

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(200316);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,2)
	
	local baseScale = 2;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local snapToGround = false;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0), 
			snapToGround
			)

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1031,MoP - KS - Tiger Temple Monks - Init - ZTO,"-- Spawn Monks
monkID = 64781
pandarenScale = 1.5

monk1 = SpawnActor( monkID, 3728.9, 570.283, 664.583, 338.345, pandarenScale, true )
monk2 = SpawnActor( monkID, 3742.13, 575.516, 661.731, 329.345, pandarenScale, true )
monk3 = SpawnActor( monkID, 3766.97, 599.334, 663.26, 291.321, pandarenScale, true )
monk4 = SpawnActor( monkID, 3795.67, 613.461, 666.609, 275.346, pandarenScale, true )
monk5 = SpawnActor( monkID, 3809.35, 600.364, 661.652, 256.896, pandarenScale, true )
monk6 = SpawnActor( monkID, 3824.87, 605.792, 665.789, 243.847, pandarenScale, true )
monk7 = SpawnActor( monkID, 3838.92, 584.431, 661.269, 230.572, pandarenScale, true )
monk8 = SpawnActor( monkID, 3874.7, 564.486, 668.605, 198.398, pandarenScale, true )
monk9 = SpawnActor( monkID, 3853.67, 487.34, 664.32, 146.647, pandarenScale, true )
monk10 = SpawnActor( monkID, 3822.95, 465.19, 663.978, 101.422, pandarenScale, true )
monk11 = SpawnActor( monkID, 3791.57, 450.27, 667.892, 85.6721, pandarenScale, true )
monk12 = SpawnActor( monkID, 3774.82, 464.455, 663.474, 74.1971, pandarenScale, true )
monk13 = SpawnActor( monkID, 3747.43, 478.583, 663.88, 52.3719, pandarenScale, true )
monk14 = SpawnActor( monkID, 3735.71, 509.069, 660.314, 19.9719, pandarenScale, true )
monk15 = SpawnActor( monkID, 3716.31, 512.831, 667.019, 15.2469, pandarenScale, true )


monk1:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk2:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk3:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk4:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk5:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk6:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk7:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk8:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk9:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk10:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk11:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk12:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk13:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk14:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )
monk15:SetFacingToAbs ( Vector:New (3777.72, 536.779, 639.007) )

PlayLoopingSplitBodyAnim (monk1, Animations.EmoteCheer)
Wait(1)
PlayLoopingSplitBodyAnim (monk2, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk4, Animations.EmoteCheer)
Wait(1)
PlayLoopingSplitBodyAnim (monk5, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk14, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk7, Animations.EmoteCheer)
Wait(1)
PlayLoopingSplitBodyAnim (monk8, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk9, Animations.EmoteCheer)
Wait(1)
PlayLoopingSplitBodyAnim (monk10, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk6, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk12, Animations.EmoteCheer)
Wait(1)
PlayLoopingSplitBodyAnim (monk13, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk11, Animations.EmoteCheer)
Wait(1)
PlayLoopingSplitBodyAnim (monk15, Animations.EmoteCheer)
PlayLoopingSplitBodyAnim (monk3, Animations.EmoteCheer)

Wait(300)
scene:EndScene() "
1032,Object - Create Clone,"function Create_Clone( ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)
	local pad = ROIDTOPET(ROID);
--print(""Makin a clone... "",auraAbilityID,  "", player "",aura.playerID);

--DEBUG_TABLE(pad) 
	
	local PBOID = pad.states[STATE_CLONE_PBOID];

	local cloneROID = PBOIDTOROID( PBOID );

	local clonedPet = ROIDTOUNIT( cloneROID );

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local petCreateData = ActorCreateData:New()
	petCreateData.transform = transform;
	petCreateData.creatureID = clonedPet.creatureID or 0;
	petCreateData.creatureDisplayID = clonedPet.displayID or 0;
	petCreateData.interactible = true;

	local petActor = battleScene:SpawnPet(clonedPet.playerID, clonedPet.slot, petCreateData)

	object.clone = true;
	object.actor = petActor;
	object.moveSpeed = clonedPet.moveSpeed;

	-- [ABrazie] 7/26/2012 - Horrible hack for the Sen'jin Fetish
	if ( clonedPet.states[STATE_FETISH_RANDOM_COLOR] and clonedPet.states[STATE_FETISH_RANDOM_COLOR] > 0 ) then 
		clonedPet.fetishBaseState = petActor:PlaySpellStateVisual( FETISH_BASE_STATE );

		local i = math.random(1, #FETISH_STATES );

		clonedPet.fetishRandomState = petActor:PlaySpellStateVisual( FETISH_STATES[i] );
	end

	--rocket:WaitMoveToAbs ( transform.position, 2 );
	--rocket:SetSnapToGround(true);

	local q = 1
 
	while ( aura.running and q < 100000 ) do  
		q = q + 0.1;
--[[
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end
]]--
		scene:WaitTimer(0.1);
	end

	petActor:Fade(0,0.1);
	--print(""Killed the turret! "",q);

	petActor:Despawn();

	UnregisterObject(object.playerID, object.slot);
	
end"
1034,Dread Wastes - Mantid Swarm Small - Mantid2 -  ZTO,"
MantidController(2)
"
1035,Turn Package - Blink to Target,"function Dispatcher_Blinkstrike( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_VanishAttackOnMultiHit"");

		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- ## Unique Stuff Start 
	local Blinkstrike = function ( targetROID ) 
		local pet = ROIDTOUNIT(ROID);
		local target =  ROIDTOUNIT( targetROID );

		local alpha = 0;
		local delay = 0.2; -- sec

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		local opponentLocation =  ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
		local attackSpot = FastLocalFacingCoordinates(opponentLocation, pet.actor:GetPosition() , Vector:New(0.5,0,0) );


		local distance = opponentLocation:Dist( attackSpot )

		pet.actor:PlaySpellCastVisualAtPoints(263,  0.2, true, {attackSpot} );
		pet.actor:PlaySpellImpactVisual(263)
		pet.actor:Fade(alpha, delay)
		scene:WaitTimer(delay)
		pet.actor:SetFacingToTarget(target.actor, Vector:New())

		pet.actor:WaitMoveToAbs(attackSpot,0); --driftDistance/pet.moveSpeed 

		pet.actor:PlaySpellCastVisual(263);
		pet.actor:Fade( GetNaturalAlpha(ROID) , delay)
		scene:WaitTimer(delay)
	end
	-- ## Unique Stuff End


	local HandleEffect = function ( effectIndex ) 
		local effect = turn.effects[effectIndex];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	local targetROID = GetMoveToROID( turn.effects[1] ); 

	Blinkstrike( targetROID );

	-- Behave normally on 1 effect, do this on multiple effects
	if ( #turn.effects > 1 ) then 
		for i=2, #turn.effects do
			local nextTargetROID = GetMoveToROID( turn.effects[i] ); 

			if ( targetROID ~= nextTargetROID ) then 
				HandleEffect ( i-1 );
				Blinkstrike( nextTargetROID );
				targetROID = nextTargetROID;
			end
		end
	end

	HandleEffect ( #turn.effects );

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);
end
"
1036,Aquatic - Frost Trap,"function Control_FrostTrap(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(307487);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0)
	
	local baseScale = 0.1;
	local bonusScalePerRoundRemaining = 0.025;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0) )

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1037,Elemental - Lava Wave,"function Elemental_LavaWave( ROID, isTurn, turn )

	RemoveObjectWave( 28899, fid(166573), 2133, ROID, isTurn, turn )

end"
1040,Jade Forest - Sha of Doubt Scene - Init - JSB,"
-- spawn sha
shaCreatureID = 64245
sha = SpawnActor( shaCreatureID, 829.33, -1871.12, 66.15, 144.918, 1, false )


-- spawn sha vortex
local vortexModel = ""SPELLS\\Sha_vortex_01.M2""
vortex = SpawnModelActor( vortexModel, 829.33, -1871.12, 66.15, 144.918, 20, false )

-- spawn sha burble
local burbleModel = ""SPELLS\\Sha_State_Base_High.M2""
burble = SpawnModelActor( burbleModel, 829.33, -1871.12, 70, 144.918, 120, false )


Wait( 10 )

"
1041,Jade Forest - Sha of Doubt Scene - Master - JSB,"
local sceneOrigin = scene:GetPosition()
scene:SetCamera(0, 0.0, nil, nil)

Wait(1.0)

-- SendTrigger( ""zeppelinMove"" )

SetCameraFollowPath( 368, 0.0, 3966, 3967, 15 )

Wait( 14 )"
1042,Global Functions - Matrix Math,"

-- I'm not validating sizes. Assuming 4x
function MultiplyMatrixes ( ... )
	local matrixA = select(1, ...)
	local matrixB = select(2, ...)

	local newMatrix = {};

	-- Cheap and easy ... can expand or make generic later if needed
	for row = 1, 4 do
		for col = 1, 4 do
			for m = 1, 4 do 
				newMatrix[row] = newMatrix[row] or {};
				newMatrix[row][col] = newMatrix[row][col] or 0;
				newMatrix[row][col] = newMatrix[row][col] + matrixA[row][m] * matrixB[m][col];
			end
		end
	end

	-- Do this many times if required
	if ( select(""#"", ...) > 2 ) then
		return MultiplyMatrixes ( newMatrix, select(3, ...) );
	end

	return newMatrix;	
end

function ApplyMatrixToVectorPoint( matrixA, vector )
	if ( matrixA == nil ) then
		print(""ERROR: MatrixA is nil"");
	end

	local matrixB = { 
			[1] = { vector.x };
			[2] = { vector.y };
			[3] = { vector.z };
			[4] = { 1 };
	};

	local newMatrix = {};

	-- Cheap and easy ... can expand or make generic later if needed
	for row = 1, 4 do
		-- col max = #matrixB[1] ?
		for col = 1, 1 do
			for m = 1, 4 do 
				newMatrix[row] = newMatrix[row] or {};
				newMatrix[row][col] = newMatrix[row][col] or 0;
				newMatrix[row][col] = newMatrix[row][col] + matrixA[row][m] * matrixB[m][col];
			end
		end
	end

	-- Pass back a new vector
	return Vector:New( newMatrix[1][1], newMatrix[2][1], newMatrix[3][1] );
end

function CreateTranslationMatrix( deltaX, deltaY, deltaZ )
	local matrix = {
		[1] = { 1, 0, 0, deltaX };
		[2] = { 0, 1, 0, deltaY };
		[3] = { 0, 0, 1, deltaZ };
		[4] = { 0, 0, 0, 1 };
	};

	return matrix;
end

function CreateRotationMatrixAroundX( angle )
	local cos, sin = math.cos(angle), math.sin(angle)
	local matrix = {
		[1] = { 1,    0,    0, 0 };
		[2] = { 0,  cos, -sin, 0 };
		[3] = { 0,  sin,  cos, 0 };
		[4] = { 0,    0,    0, 1 };
	};
	return matrix;
end

function CreateRotationMatrixAroundY( angle )
	local cos, sin = math.cos(angle), math.sin(angle)
	local matrix = {
		[1] = { 1,    0,    0, 0 };
		[2] = { 0,  cos, -sin, 0 };
		[3] = { 0,  sin,  cos, 0 };
		[4] = { 0,    0,    0, 1 };
	};
	return matrix;
end

function CreateRotationMatrixAroundZ( angle )
	local cos, sin = math.cos(angle), math.sin(angle)
	local matrix = {
		[1] = {  cos, -sin, 0, 0 };
		[2] = {  sin,  cos, 0, 0 };
		[3] = {    0,    0, 1, 0 };
		[4] = {    0,    0, 0, 1 };
	};
	return matrix;
end

function CopyMatrix ( M )
	local matrix = {};

	for k,v in pairs( M ) do 
		matrix[k] = {};

		for k2,v2 in pairs( v ) do 
			matrix[k][k2] = v2;
		end
	end

	return matrix;
end

function LocalToWorldMatrix( target, source )
	local forward = target - source;
	forward = forward:Normalize()

	local up = Vector:New(0,0,1);
	local side = forward:CrossProduct( up );

	up = side:CrossProduct( forward );

	-- Create the matrix
	local matrix = CreateTranslationMatrix( Vector:New(0,0,0) );
	matrix[1][1], matrix[1][2], matrix[1][3]  = forward.x, side.x, up.x;
	matrix[2][1], matrix[2][2], matrix[2][3]  = forward.y, side.y, up.y;
	matrix[3][1], matrix[3][2], matrix[3][3]  = forward.z, side.z, up.z;

	-- Translate
	matrix[1][4] = source.x
	matrix[2][4] = source.y
	matrix[3][4] = source.z

	-- Return
	return matrix;
end

function WorldToLocalMatrix( target, source )
	local M = CopyMatrix ( LocalToWorldMatrix( target, source ) )

	return InvertMatrix ( M );
end

function InvertMatrix( M )
	local oldX 
	local oldY 
	local oldZ

	oldX, oldY, oldZ = M[1][4], M[2][4], M[3][4];

	-- Swap values
	M[2][1], M[1][2] = M[1][2], M[2][1];
	M[3][1], M[1][3] = M[1][3], M[3][1];
	M[3][2], M[2][3] = M[2][3], M[3][2];
	
	-- Translate
	M[1][4] = -oldX
	M[2][4] = -oldY
	M[3][4] = -oldZ

	return M
end"
1044,Jade Forest - Sha of Doubt Scene - Sha - JSB,"
Wait( 4 )

sha:PlayOneShotAnimKit(2876)
sha:PlaySpellStateVisual(27181)

RunToLocation( sha, 50, 829.33, -1871.12, 0, 144.918 )

sha:SetScale(0.5)
sha:PlaySoundKitStereo(34025, true)

Wait( 2 )

RunToLocation( sha, 50, 829.33, -1871.12, -300, 144.918 )

sha:SetScale(0.1)"
1046,Jade Forest - Sha of Doubt Scene - Vortex - JSB,"
vortex:PlaySoundKitStereo(34026, true)

Wait( 4 )

-- sha:PlayOneShotAnimKit(2876)

RunToLocation( sha, 50, 829.33, -1871.12, 0, 144.918 )

vortex:SetScale(0.5)

Wait( 2 )

RunToLocation( vortex, 50, 829.33, -1871.12, -200, 144.918 )

vortex:SetScale(0.1)"
1047,Valley of the Four Winds - Stoneplow Finale - Colossus - PRK ,"--mantidColossus

--Approach, beat on Wall
WaitForTrigger(""StartColossus"")
FadeIn(mantidColossus, 0)
mantidColossus:FollowPathAtSpeed(3969, 29)
mantidColossus:WaitMovementComplete()
mantidColossus:PlayOneShotAnimKit(2883)
Wait(1.5)
noiseBunnyC:PlaySoundKit(31919, true)
DustExplosion(dustSquibs)
Wait(.7)
mantidColossus:PlayOneShotAnimKit(2883)
Wait(1.5)
noiseBunnyC:PlaySoundKit(31919, true)
DustExplosion(dustSquibs)
Wait(.7)
mantidColossus:PlayOneShotAnimKit(2883)
Wait(1.5)
noiseBunnyC:PlaySoundKit(31919, true)
DustExplosion(dustSquibs)
Wait(.7)
mantidColossus:PlayOneShotAnimKit(2883)
Wait(1.5)
noiseBunnyC:PlaySoundKit(31919, true)
DustExplosion(dustSquibs)

--Approach, beat on Wall
WaitForTrigger(""WallShot3"")
mantidColossus:PlayOneShotAnimKit(2880)
Wait(2)
mantidColossus:PlaySoundKit(32764, false)
mantidColossus:FollowPathAtSpeed(3970, 22)
mantidColossus:WaitMovementComplete()
noiseBunnyC:PlaySoundKit(31906, true)
mantidColossus:PlayLoopingAnimKit(3231)"
1048,Valley of the Four Winds - Stoneplow Finale - Functions - PRK ,"function Actor:MantidSwoopSetup()

	--Actor.waitTime = math.random(0,20)/10

	local flyerSplineNum = math.random(1,7)
	if flyerSplineNum == 1 then
		Actor.flyerSpline = 3989
	elseif flyerSplineNum == 2 then
		Actor.flyerSpline = 3990
	elseif flyerSplineNum == 3 then
		Actor.flyerSpline = 3992
	elseif flyerSplineNum == 4 then
		Actor.flyerSpline = 3993
	elseif flyerSplineNum == 5 then
		Actor.flyerSpline = 3994
	elseif flyerSplineNum == 6 then
		Actor.flyerSpline = 3995
	elseif flyerSplineNum == 7 then
		Actor.flyerSpline = 3996
	end

	Actor.flyerSpeed = 6 + math.random(0,9)

end

function DustExplosion( squibsList )
	for i = 1, (#squibsList) do
		squibsList[i]:PlaySpellImpactVisual(19344)
	end
end

"
1049,Valley of the Four Winds - Stoneplow Finale - Mantid (Flyers) - PRK ,"WaitForTrigger(""WallShot3"")
	--scene:SetRelativeCoords(false)

for i = 1, (#mantidFlyerA) do
	--mantidFlyerA[i]:PlaySpellStateVisual(26303)
	mantidFlyerA[i]:PlayLoopingAnimKit(1395)
	FadeIn(mantidFlyerA[i], 2)
	mantidFlyerA[i]:MantidSwoopSetup()
	--Wait(mantidFlyer[i].waitTime)
	--mantidFlyer[i]:FollowPathAtSpeed(mantidFlyer[i].flyerSpline, mantidFlyer[i].flyerSpeed)
	mantidFlyerA[i]:FollowRelativePathAtSpeed(mantidFlyerA[i].flyerSpline, mantidFlyerA[i].flyerSpeed)
end

Wait(2)

for i = 1, (#mantidFlyerB) do
	--mantidFlyerB[i]:PlaySpellStateVisual(26303)
	mantidFlyerB[i]:PlayLoopingAnimKit(1395)
	FadeIn(mantidFlyerB[i], 2)
	mantidFlyerB[i]:MantidSwoopSetup()
	--Wait(mantidFlyer[i].waitTime)
	--mantidFlyer[i]:FollowPathAtSpeed(mantidFlyer[i].flyerSpline, mantidFlyer[i].flyerSpeed)
	mantidFlyerB[i]:FollowRelativePathAtSpeed(mantidFlyerB[i].flyerSpline, mantidFlyerB[i].flyerSpeed)
end

Wait(2)

for i = 1, (#mantidFlyerC) do
	--mantidFlyerC[i]:PlaySpellStateVisual(26303)
	mantidFlyerC[i]:PlayLoopingAnimKit(1395)
	FadeIn(mantidFlyerC[i], 2)
	mantidFlyerC[i]:MantidSwoopSetup()
	--Wait(mantidFlyer[i].waitTime)
	--mantidFlyer[i]:FollowPathAtSpeed(mantidFlyer[i].flyerSpline, mantidFlyer[i].flyerSpeed)
	mantidFlyerC[i]:FollowRelativePathAtSpeed(mantidFlyerC[i].flyerSpline, mantidFlyerC[i].flyerSpeed)
end

Wait(2)

for i = 1, (#mantidFlyerD) do
	--mantidFlyerD[i]:PlaySpellStateVisual(26303)
	mantidFlyerD[i]:PlayLoopingAnimKit(1395)
	FadeIn(mantidFlyerD[i], 2)
	mantidFlyerD[i]:MantidSwoopSetup()
	--Wait(mantidFlyer[i].waitTime)
	--mantidFlyer[i]:FollowPathAtSpeed(mantidFlyer[i].flyerSpline, mantidFlyer[i].flyerSpeed)
	mantidFlyerD[i]:FollowRelativePathAtSpeed(mantidFlyerD[i].flyerSpline, mantidFlyerD[i].flyerSpeed)
end

Wait(2)

WaitForTrigger(""KungFuEnters"")
for i = 1, (#mantidFlyerA) do
	mantidFlyerA[i]:Despawn()
end

for i = 1, (#mantidFlyerB) do
	mantidFlyerB[i]:Despawn()
end

for i = 1, (#mantidFlyerC) do
	mantidFlyerC[i]:Despawn()
end

for i = 1, (#mantidFlyerD) do
	mantidFlyerD[i]:Despawn()
end


"
1050,Item - RAM - Flip Table Scene,"	local tableObject = ActorCreateData:Default()
	tableObject.name = ""Table""
	--scaleCreateData.model = ""SPELLS\\AxisTestObject.m2""
	--scaleCreateData.model = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\KEG\\PA_Keg_14.M2""
	--tableObject.model = ""WORLD\\GENERIC\\GOBLIN\\PASSIVEDOODADS\\TABLE\\Goblin_Table_Cloth_01.mdx""
	tableObject.model = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\TABLE\\PA_Table_02.mdx""
	tableObject.scale = 1.0
	tableObject.interactible = true
	--tableObject.title = ""title""
	local tableObj = scene:SpawnActor(tableObject)


	local crabObject = ActorCreateData:Default()
	crabObject.name = ""Ghostcrawler""
	crabObject.model = ""CREATURE\\DEEPSEACRAB\\DeepSeaCrab_Ghost.mdx""
	crabObject.scale = 0.6
	crabObject.interactible = true
	local crabObj = scene:SpawnActor(crabObject)

	local crabOffset = Vector:New(2, -0.5, 1.2)

	local offset = Vector:New(2, 0, 0)

	local yaw = 0
	local rate = 720;
	local time = 0;
	local delay = 1/60;
	local duration = 2
	local holdDuration = 0.5

	local distance = 15

	local maxHeight = 5
	local forwardSpeed = 15

	local position = Vector:New(0, 0, 0)

	local height = 0

	duration = holdDuration + distance / forwardSpeed
	local upTime = (duration - holdDuration) / 2

	--actor:SetSnapToGround(false)

	repeat
		time = time + delay;
		scene:WaitTimer(delay)

		--height = height + 0.2 * time

		local timeSinceHold = time - holdDuration
		local up = true
		if(time - holdDuration >= upTime) then
			up = false
		end

		local parabMod = 2

		if(time > holdDuration) then
			yaw = rate * timeSinceHold

			crabOffset.y = timeSinceHold * forwardSpeed * 0.3

			position.x = timeSinceHold * forwardSpeed
			if(up) then
				position.z = math.sqrt(position.x) * parabMod
				--position.z = timeSinceHold * maxHeight
			else
				position.z = math.sqrt(math.max(distance - position.x, 0)) * parabMod
				--position.z = (duration - holdDuration - timeSinceHold) * maxHeight
			end
		end


		tableObj:SetTransform( Transform:New(position + offset + Vector:New(height, height, height), 0, yaw, 0 ) )
		crabObj:SetTransform( Transform:New(position + crabOffset + Vector:New(height, height, height), 0, yaw, 0) )
		--flameObject:SetTransform( Transform:New(Vector:New(0, 0, 0.3), yaw, 0, 0 ) )
	until ( time >= duration )

	tableObj:Fade(0,0.25);
	scene:WaitTimer(0.25);

	tableObj:Despawn();"
1051,Dread Wastes - Mantid Swarm Small - Init - Spawn Mantid -  ZTO,"--Scene Declarations
scene:SetRelativeCoords(true) -- set to relative worlld coords

--Spawn Mantid
mantidCreatureID = 66036
mantidSwarmPathIDs = { 4149, 4150, 4151, 4152, 4153 } 

mantids = { }

function MantidController(mantidID)

	while true do

		scene:WaitTimer(math.random(30, 50))

		local mantid = SpawnActor( mantidCreatureID, 0, 0, 0, 0, 0.75, false )
		mantids[mantidID] =
		{
			actor = mantid;
			id = mantidID
		}

		local speed = math.random(15,50)
		local pathID = mantidSwarmPathIDs[math.random(#mantidSwarmPathIDs)]

		--mantid:PlaySpellStateVisual(27277) -- wing visual
		while (mantids[mantidID]) do

			-- move on a looping path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			moveData.animKitID = 1395

			mantid:Move( moveData )

			mantid:WaitMovementComplete()

		end
	end

end"
1052,Kun Lai Summit - Reclaiming the Thunder God - Cho - JSB,"
Wait( 1 )

cho:PlaySoundKitStereo(33009, true)

cho:PlayLoopingAnimKit(2218)


Wait( 2 )

cho:PlaySpellStateVisual(24451)
FadeIn( cho, 0 )
cho:Fade(0.75, 0)

cho:PlayOneShotAnimKit(2884)
cho:BroadcastTextStereo(BroadcastType.Say, 65421)
Wait( 3.5 )
cho:BroadcastTextStereo(BroadcastType.Say, 65422)
Wait( 3.5 )
cho:BroadcastTextStereo(BroadcastType.Say, 65423)
Wait( 2.5 )
cho:BroadcastTextStereo(BroadcastType.Say, 65424)
Wait( 3.5 )
cho:BroadcastTextStereo(BroadcastType.Say, 65425)
Wait( 3.5 )
cho:BroadcastTextStereo(BroadcastType.Say, 65426)
"
1053,Turn Package - Basic Turn Template,"function Turn_Template ( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Turn_Template"");

		return;
	end

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local turnVisualID = turn.turnVisualID ;

	DefaultTurnPreEffectMovement(ROID, turn )
	DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride)

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 


	DefaultTurnCleanUp(ROID);

end"
1054,Magic - Nether Gate,"function Magic_NetherGate( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Magic_NetherGate"");

		return;
	end

	DefaultTurnPreEffectMovement(ROID, turn )

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local turnVisualID = turn.turnVisualID ;

	DefaultTurnVisualHandler(ROID, turn)

	local gate = NetherGate_Create( targetROID );

	gate:Fade(0,0);
	scene:WaitTimer(0);
	gate:Fade(1,2);
	gate:SetScale(0.5);
	scene:WaitTimer(2);

	
	DefaultDoEffectProcessing( ROID, ""effect"", turn.effects[1] ); 

	target.actor:SetSnapToGround(false)
	target.actor:Fade(0,2);
	local kit = target.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)
	target.actor:WaitMoveToRel( Vector:New(0,0,-3), 2 );
	kit:Stop();

	scene:WaitTimer(2);
	gate:Despawn();

	-- Handle all effects
	for index=2,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	target.actor:Fade(1,2);
	target.actor:SetSnapToGround(true)

	DefaultTurnCleanUp(ROID);

end

function NetherGate_Create(victimROID)
	local victim = ROIDTOUNIT( victimROID );
	local transform = Transform:New( victim.actor:GetPosition() );
	local gateCreateData = ActorCreateData:Default();
	local baseScale = 0.1;
	
	gateCreateData.name = ""Gate"";
	gateCreateData.modelFileID = fid(195116);
	gateCreateData.transform = transform;
	gateCreateData.scale = baseScale;
	gateCreateData.interactible = false;
	gateCreateData.groundSnap = false

	local gate = scene:SpawnActor(gateCreateData);

	return gate
end
--[[
function NetherGate_Success( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to NetherGate_Success."");
		return;
	end

	local victim = ROIDTOUNIT(victimROID);

	victim.actor:SetSnapToGround(false)
	victim.actor:WaitMoveToRel( Vector:New(0,0,-3), 2 );

	victim.actor:Fade(0,2);
end

function NetherGate_Failure( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to NetherGate_Success."");
		return;
	end
	
end
--]]"
1055,Magic - Sweep,"
function Dispatcher_Sweep( ROID, isTurn, turn )
	-- Only handle ""turn"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local attackPoint =  ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler( ROID, effect, turn.turnVisualID, Sweep_HugeKnockbackSuccess );
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	-- New Spline START
	local moveData = MoveData:Default(3)
	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.2*distToTarget, 0, 0) );
	moveData.points[3].speed = 7

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	DefaultTurnCleanUp(ROID);
end

function Sweep_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 10, 1 ); 	 

end"
1056,Aquatic - Tidal Wave,"function Aquatic_TidalWave( ROID, isTurn, turn )

	RemoveObjectWave( 28898, fid(166577), 2133, ROID, isTurn, turn )

end"
1059,Flying - Lift-Off & Attack,"function Flying_LiftOff( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_AlternateVisualOnMultiHit"");

		return; 
	end

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local sourcePosition, targetPosition = pet.actor:GetPosition(), Vector:New( 0,0,0 );
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	--Play the Pre-Flight Visual
	pet.actor:PlaySpellCastVisual(28888);

	pet.actor:SetSnapToGround(false)
	pet.actor:WaitMoveToAbs( LocalToWorldCoords( Vector:New(1, 0, 4) ), 1 );
	
	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	scene:WaitTimer(0.2);
end


function Flying_FlyingAttack( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = ResultToTargetROID(turn.effects[1].results[1])
	local target =  ROIDTOUNIT(targetROID);

	local missed = turn.effects[1].results[1].flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	
	-- New Spline START
	local moveData = MoveData:Default(6)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Tangent
	moveData.yawControl = MoveRotControl.Tangent


	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );

--[[
print( distToTarget );
print( player.home );
print( pet.actor:GetPosition() );
print( WorldToLocalCoords( player.home ) );
print( WorldToLocalCoords( LocalToWorldCoords( Vector:New(10,10,10) ) ) );
--]]


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, pet.actor:GetPosition().z ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0.2) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.3*distToTarget, dir, 2) );
	moveData.points[3].speed = 7
	moveData.points[4].pos = LocalToWorldCoords ( Vector:New(0.5*distToTarget, dir*-1, 3) );
	moveData.points[4].speed = 7
	moveData.points[5].pos = player.home + LocalToWorldCoords ( Vector:New(0.0*distToTarget, dir*-0.5, 1) );
	moveData.points[5].speed = 7
	moveData.points[6].pos = player.home
	moveData.points[6].speed = 2

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL ) 

	local "
1060,[1] Flying - Lift-Off & Attack,"stretch = false;
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	-- New Spline END

	pet.actor:SetSnapToGround(true)
	scene:WaitTimer(0.2);

	-- Always remember to clean up after yourself
	DefaultTurnCleanUp(ROID);
end"
1061,Brazie's PetBattle - Dispatcher - Visuals - Miss,"
-- Performs a miss when requested
--
function Dispatcher_PerformMiss( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	if ( victimActor and (victim.sessile == false) ) then
		victimActor:WaitMovementComplete()
	end

	if (feedbackActor) then
		local type = WorldText.Miss;
		local text = GetGlobalString( ""BATTLE_PET_MESSAGE_MISS"" ) or ""Miss""
		local useColor = false;
		local color = Color:New(255, 255, 0)

		feedbackActor:AddCustomWorldText( type, useColor, color, text ) 
		feedbackActor:PlaySoundKit(15928, true);
	end
end
"
1062,Brazie's PetBattle - Library - Pet Movement - Matrix Generation,"-- Returns functions to get a local coordinate transformation matrix from the source point to the target point

function GetStandardMatrixOps ( sourcePosition, targetPosition )
	local targetPosition = targetPosition or Vector:New(0,0,0);

	if ( sourcePosition:Dist( targetPosition ) < 0.1 ) then
		warning(""INVALID distances provided to GetStandardMatrixOps!"");

		targetPosition = Vector:New(0,0,0);

		--local dummy = function( v ) return v; end;
		--return dummy, dummy;
	end

--[[
	local delta = targetPosition - sourcePosition;
	local angleAroundZ = math.atan2( delta.y, delta.x );
	local angleAroundY = math.atan2( delta.z, delta.x );

	local T  = CreateTranslationMatrix(  sourcePosition.x,  sourcePosition.y,  sourcePosition.z )
	local T1 = CreateTranslationMatrix( -sourcePosition.x, -sourcePosition.y, -sourcePosition.z )

	print( ""angleZ: "", angleAroundZ );
	print( ""angleY: "", angleAroundY );

	local R = CreateRotationMatrixAroundZ ( angleAroundZ );
	local R1 = CreateRotationMatrixAroundZ ( -angleAroundZ );
]]
	--local M = MultiplyMatrixes( R, T1 );
	--local M1 = MultiplyMatrixes( T, R1 ); 

	local M = LocalToWorldMatrix ( targetPosition, sourcePosition );
	local M1 = WorldToLocalMatrix ( targetPosition, sourcePosition );


	-- To Convert from Local to World:
	-- 	Rotate, then Translate

	-- To Convert, from World to Local:
	--  Translate, then Rotate

	local LocalToWorldCoords  = function( v )
		return ApplyMatrixToVectorPoint( M, v );
	end
	local WorldToLocalCoords  = function( v )
		return ApplyMatrixToVectorPoint( M1, v );
	end

	return LocalToWorldCoords, WorldToLocalCoords
end"
1063,Turn Package - Knockback on Multi Hit,"function Dispatcher_KnockBackOnMultiHit( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_VanishAttackOnMultiHit"");

		return;
	end

	-- Behave normally on 1 effect
	if ( #turn.effects == 1 ) then 
		DefaultTurnBehaviour( ROID, isTurn, turn )

	else
		-- Get up close
		DefaultTurnPreEffectMovement( ROID, turn )

		DefaultTurnVisualHandler(ROID, turn, CounterAttack_HugeKnockbackSuccess, nil)
	
		-- Handle all effects
		for index=2,#turn.effects do 
			local effect = turn.effects[index];

			-- Default Visual 
			--DefaultEffectVisualHandler( ROID, effect, turnVisualID )
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end 

		-- Reset/reposition
		DefaultTurnCleanUp(ROID);
	end

end


function CounterAttack_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 3, 0.5 ); 	 

end
"
1064,Jade Forest - Temple Intro - Init - PRK,"-- player
--if (Scene.SetFadeRegion) then
--	scene:SetFadeRegion(10, true) -- (radius, fadeActivePlayer)
--end 

scene:SetFadeRegion(10, true)

player = SmoothPhaseSpawnActivePlayerCloneActor( 941.24, -2525.33, 181.321, 249.337, 1, true )

SendTrigger(""Smooth Phase Complete"")"
1065,Jade Forest - Temple Intro - Camera - PRK,"local genericFOV90 = 368
local genericFOV45 = 370
local genericFOV30 = 371

WaitForTrigger(""Smooth Phase Complete"")
SetCameraFollowPath( genericFOV90, 0, 4057, 4067, 15)
Wait(.5)
SendTrigger(""Shot01"")
Wait(2)


SetCameraFollowPath( genericFOV90, 8, 4068, 4058, 27)
Wait(29)

scene:SetCamera(0, 3, nil, nil)
--SetCameraFollowPath( genericFOV90, 3, 4069, 4070, 3)
scene:SetFadeRegion(0, false)
Wait(3)
"
1066,Jade Forest - Temple Intro - Player - PRK,"WaitForTrigger(""Shot01"")
Wait(1)
player:FollowPathAtSpeed(4059, 2.5)
player:WaitMovementComplete()
RunToLocation( player, 2, 917.928, -2595.7, 181.29, 253.8)"
1072,Dread Wastes - Klaxxi'vess Assault - Init -   ZTO,"--Spawn Bunnies
bunnyID = 62026

bunny1 = SpawnActorAtPoint( bunnyID, 4082, false )
bunny2 = SpawnActorAtPoint( bunnyID, 4083, false )
bunny4 = SpawnActorAtPoint( bunnyID, 4084, false )
bunny3 = SpawnActorAtPoint( bunnyID, 4085, false )
bunny5 = SpawnActorAtPoint( bunnyID, 4086, false )

FadeOut(bunny1, 0) 
FadeOut(bunny2, 0) 
FadeOut(bunny3, 0)
FadeOut(bunny4, 0)
FadeOut(bunny5, 0)

local sonicVisual = bunny1:PlaySpellStateVisual(27269) --Sonic Visual
local sonicVisual = bunny2:PlaySpellStateVisual(27269) --Sonic Visual
local sonicVisual = bunny3:PlaySpellStateVisual(27269) --Sonic Visual
local sonicVisual = bunny4:PlaySpellStateVisual(27269) --Sonic Visual
local sonicVisual = bunny5:PlaySpellStateVisual(27269) --Sonic Visual

target1 = SpawnActorsAtPoints (bunnyID, 4090, true)
target2 = SpawnActorsAtPoints (bunnyID, 4091, true)
target3 = SpawnActorsAtPoints (bunnyID, 4092, true)

--Spell Arsenal
mantidExplosionHeadID = 128992
mantidExplosionLegID = 128993
mantidExplosionPincerID = 128994
mantidExplosionBaseID = 128995
mantidExplosionBurstID = 46419 
sonicSpellID = 129008
sonicSpellVisualID = 27270
	
--Spell visuals
headID = 27264
legID = 27265
pincerID = 27266

--Spawn Mantid
mantidID = 66036"
1074,Jade Forest - Serpent Scene - Init - PRK,"--fade player
if (Scene.SetFadeRegion) then
	scene:SetFadeRegion(10, true) -- (radius, fadeActivePlayer)
end 

--door
local doorModel = ""WORLD\\DUNGEON\\EASTTEMPLE\\PA_EastTemple_DoorLarge.M2""
local doors = SpawnModelActorsAtPoints( doorModel, 4108, false )
door = doors[1]

--fei
fei = SpawnActor( 56784, 904.821, -2602.3, 185.12, 45, 1, false )
playerLoc = scene:GetPosition()
playerX = playerLoc.x
playerY = playerLoc.y
playerZ = playerLoc.z

--serpent
serpent = SpawnFadedActorAtPoint( 56779, 4109, false )

-- player
player = SpawnActivePlayerCloneActor( playerX, playerY, playerZ, 247, 1, false ) 
--player = SpawnActivePlayerCloneActor(  907.772, -2599.8, 185.126, 222.255 ) 
"
1075,Jade Forest - Serpent Scene - Camera - PRK,"local genericFOV90 = 368
local genericFOV45 = 370
local genericFOV30 = 371

SetCameraFollowPath( genericFOV90, 1, 4095, 4096, 5)
Wait(1)
SendTrigger(""DeployFei"")
Wait(1)
SendTrigger(""DeployPlayer"")
Wait(2)

SetCameraFollowPath( genericFOV90, 4, 4106, 4107, 14)
WaitForTrigger(""FeiTransform"")

SetCameraFollowPath( genericFOV45, 4, 4110, 4111, 1)
Wait(35)

SetCameraFollowPath( genericFOV45, 1, 4129, 4130, 3)
Wait(3)

scene:SetCamera(0, 2, nil, nil)
Wait(2)"
1076,Jade Forest - Serpent Scene - Player - PRK,"WaitForTrigger(""DeployPlayer"")
player:FollowPathAtSpeed(4102, 2)
player:WaitMovementComplete()
Wait(0.6)
player:SetFacing(252.669)

WaitForTrigger(""PlayerMounts"")
Wait(1)
player:PlayLoopingFullBodyAnim(Animations.Jump)
player:FollowPathAtSpeed(4126, 14)
player:WaitMovementComplete()
player:SetFacing(69)
player:PlayLoopingFullBodyAnim(Animations.Mount)
FadeOut(player, 0.5)"
1077,Dread Wastes - Klaxxi'vess Assault - Master -   ZTO,"--Randomly pick a mantid spawn spot
mantidKlaxx(4077, 4080, bunny3) 


--assaultPoint = 0 --math.random(0, 2)

--if assaultPoint == 0 then 
--	mantidKlaxx(4077, 4080, bunny3)
--	mantidKlaxx(4074, 4078, bunny1)
--elseif assaultPoint == 1 then
--	mantid2()
--	Wait(4)
--	mantid1()
--else 
--	mantid3()
--	Wait(2)
--	mantid2()
--end

--Wait(3)

--Wait(30)
--scene:EndScene()"
1080,Jade Forest - Serpent Scene - Fei - PRK,"local transformFX = 19974

WaitForTrigger(""DeployFei"")
fei:FollowPathAtSpeed(4101, 2.8)
fei:WaitMovementComplete()
fei:SetFacing(71)
Wait(1)
fei:PlayOneShotSplitBodyAnim(Animations.EmoteLaugh)
Wait(2)
SendTrigger(""FeiTransform"")
fei:PlayOneShotSplitBodyAnim(Animations.EmoteBow)
Wait(1)
fei:PlaySpellCastVisual(transformFX)
FadeOut(fei, 0.5)"
1081,Dread Wastes - Klaxxi'vess Assault - Init - mantid2   ZTO,"function mantid2()
	local path1 = 4075 
	local path2 = 4098
	local path3 = 4099
	local path4 = 4100
	local point = 4079 
	local tower = bunny2
	local target = target2
	local mantid1 = SpawnFadedActorAtPoint( mantidID, point, false ) 
	local mantid2 = SpawnFadedActorAtPoint( mantidID, point, false )
	local mantid3 = SpawnFadedActorAtPoint( mantidID, point, false )
	local mantid4 = SpawnFadedActorAtPoint( mantidID, point, false )
	local mantidWings = mantid1:PlaySpellStateVisual(27277) --Mantid Wings
	local mantidWings = mantid2:PlaySpellStateVisual(27277) --Mantid Wings
	local mantidWings = mantid3:PlaySpellStateVisual(27277) --Mantid Wings
	local mantidWings = mantid4:PlaySpellStateVisual(27277) --Mantid Wings
	mantid1:PlayLoopingAnimKit(1395)
	mantid2:PlayLoopingAnimKit(1395)
	mantid3:PlayLoopingAnimKit(1395)
	mantid4:PlayLoopingAnimKit(1395)
	FadeIn(mantid1, 2)
	FadeIn(mantid2, 2)
	FadeIn(mantid3, 2)
	FadeIn(mantid4, 2)
	local speed = math.random(15,25)
	mantid1:FollowPathAtSpeed(path1, speed)
	mantid2:FollowPathAtSpeed(path2, speed)
	mantid3:FollowPathAtSpeed(path3, speed)
	mantid4:FollowPathAtSpeed(path4, speed)
	FadeIn(tower, 10)	
	mantid1:WaitMovementComplete()
	mantid2:WaitMovementComplete()
	mantid3:WaitMovementComplete()
	mantid4:WaitMovementComplete()
	CastSpellAtActor( tower, mantid1, sonicSpellID, true )
	CastSpellAtActor( tower, mantid2, sonicSpellID, true )
	CastSpellAtActor( tower, mantid3, sonicSpellID, true )
	CastSpellAtActor( tower, mantid4, sonicSpellID, true )
	Wait(2)
	tower:WaitMissilesImpacted(10262)
	mantidExplode(tower, mantid1) -- Detonate Mantid on Impact
	mantidExplode(tower, mantid2) -- Detonate Mantid on Impact
	mantidExplode(tower, mantid3) -- Detonate Mantid on Impact
	mantidExplode(tower, mantid4) -- Detonate Mantid on Impact
	FadeOut(tower, 1)
	Wait(5)
	mantid1:WaitCastingComplete(checkAnims, mantidExplosionHeadID)
	mantid1:WaitCastingComplete(checkAnims, mantidExplosionLegID)
	mantid1:WaitCastingComplete(checkAnims, mantidExplosionPincerID)
end"
1083,Dread Wastes - Klaxxi'vess Assault - Init - mantid1   ZTO,"--Test Mantid
function mantid1()
	local path1 = 4074
	local path2 = 4103
	local path3 = 4104
	local point = 4078 
	local tower = bunny1
	local target = target1
	local mantid1 = SpawnFadedActorsAtPoints( mantidID, point, false )
	--local mantid2 = SpawnFadedActorAtPoint( mantidID, point, false )
	--local mantid3 = SpawnFadedActorAtPoint( mantidID, point, false )
	FadeIn(tower, 10)	
	for i=1, #mantid1 do
		local mantidWings = mantid1[i]:PlaySpellStateVisual(27277) --Mantid Wings
		mantid1[i]:PlayLoopingAnimKit(1395)
		FadeIn(mantid1[i], 2)
	end
	local speed = math.random(15,25)
	local rand = math.random(0, 2) 
	if rand == 0 then
		mantid1[1]:FollowPathAtSpeed(path1, speed)
	elseif rand == 1 then
		mantid1[2]:FollowPathAtSpeed(path2, speed)
	else
		mantid1[3]:FollowPathAtSpeed(path3, speed)
	end 
	mantid1[1]:WaitMovementComplete()
	CastSpellAtActor( tower, mantid1[1], sonicSpellID, true ) -- Tower shoots
	CastSpellAtActor( tower, mantid1[2], sonicSpellID, true ) -- Tower shoots
	CastSpellAtActor( tower, mantid1[3], sonicSpellID, true ) -- Tower shoots
	mantidExplode(tower, mantid1[1])
	mantidExplode(tower, mantid1[2])
	mantidExplode(tower, mantid1[3])
	FadeOut(tower, 1)
	Wait(8)
end"
1084,Dread Wastes - Klaxxi'vess Assault - Init - mantid3   ZTO,"function mantid3()
	local path = 4077
	local point = 4080 
	local tower = bunny3
	local target = target3
	local mantid1 = SpawnFadedActorAtPoint( mantidID, point, false )
	local mantidWings = mantid1:PlaySpellStateVisual(27277) --Mantid Wings
	mantid1:PlayLoopingAnimKit(1395)
	FadeIn(mantid1, 2)
	local speed = math.random(15,25)
	mantid1:FollowPathAtSpeed(path, speed)
	FadeIn(tower, 10)	
	mantid1:WaitMovementComplete()
	CastSpellAtActor( tower, mantid1, sonicSpellID, false )  
	Wait(1)
	tower:WaitMissilesImpacted(27270) 
	mantidExplode(tower, mantid1) -- Detonate Mantid on Impact
	FadeOut(tower, 1) 
	Wait(20)
	mantid1:WaitCastingComplete(checkAnims, mantidExplosionHeadID)
	mantid1:WaitCastingComplete(checkAnims, mantidExplosionLegID)
	mantid1:WaitCastingComplete(checkAnims, mantidExplosionPincerID)
end

"
1085,Brazie's PetBattle - Dispatcher - Result - Set Speed,"function set_speed_func(targetROID, result, ...)
end"
1086,Brazie's PetBattle - Dispatcher - Result - Set Power,"function set_power_func(targetROID, result, ...)
end"
1087,Brazie's PetBattle - Dispatcher - Result - Trigger Ability,"function trigger_ability_func(targetROID, result, ...)
end"
1088,Jade Forest - Serpent Scene - Door - PRK,"WaitForTrigger(""DeployFei"")
door:PlayOneShotAnimKit(1483)
door:PlaySoundKit(32830, true)"
1089,Kun Lai Summit - Reclaiming the Thunder God - Thunder King - JSB,"Wait( 5 )

thunderKing:PlayLoopingAnimKit(2908)
"
1090,Jade Forest - Serpent Scene - Serpent - PRK,"WaitForTrigger(""FeiTransform"")
Wait(1)
FadeIn(serpent, 0)
Wait(3) 
--serpent:PlayOneShotAnimKit(2914)
serpent:BroadcastText(BroadcastType.Say, 56129)
Wait(5)
--serpent:PlayOneShotAnimKit(2914)
serpent:BroadcastText(BroadcastType.Say, 56130)
Wait(6)
--serpent:PlayOneShotAnimKit(2914)
serpent:BroadcastText(BroadcastType.Say, 56131)
Wait(6)
--serpent:PlayOneShotAnimKit(2914)
serpent:BroadcastText(BroadcastType.Say, 56154)
Wait(6)

SendTrigger(""PlayerMounts"")
serpent:PlayLoopingFullBodyAnim(Animations.Stun)
Wait(3)
serpent:StopLoopingFullBodyAnim(Animations.Stun)
serpent:FollowPathAtSpeed( 4125, 24, true )"
1091,Dread Wastes - Klaxxi'vess Assault - Init - misc Functions ZTO,"function missilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, 10)
	local spot2 = math.random(-10, 10)
	local spot3 = math.random(-10, 10) 

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(spot1, spot2, spot3)
	return missilePos
end

function mantidExplode(tower, explodingMantid)
	local casterPos = explodingMantid:GetPosition()
	local missilePos1 = missilePosRand(casterPos) 
	local missilePos2 = missilePosRand(casterPos)
	local missilePos3 = missilePosRand(casterPos)
	local missilePos4 = missilePosRand(casterPos)
	local missilePos5 = missilePosRand(casterPos)
	local missilePos6 = missilePosRand(casterPos)
	local missilePos7 = missilePosRand(casterPos)
	local pointList1 = {missilePos1}
	local pointList2 = {missilePos2}
	local pointList3 = {missilePos3} 
	local pointList4 = {missilePos4}
	local pointList5 = {missilePos5} 
	local pointList6 = {missilePos6}   
	local pointList7 = {missilePos6}
	explodingMantid:PlaySpellCastVisualAtPoints(headID, 5, false, pointList1)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList2)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList3)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList4)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList5)
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList6) 
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList7)
	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBaseID, false )
	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBurstID, false )
	FadeOut(explodingMantid, 0)
end

--mantidKlaxx(4077, 4080, bunny3)
function mantidKlaxx(path, point, tower)
	local mantidFlyer = SpawnFadedActorAtPoint( mantidID, point, false )
	local mantidWings = mantidFlyer:PlaySpellStateVisual(27277) --Mantid Wings
	mantidFlyer:PlayLoopingAnimKit(1395)
	FadeIn(mantidFlyer, 2)
	local speed = math.random(15,25)
	mantidFlyer:FollowPathAtSpeed(path, speed)
	FadeIn(tower, 10)	
	mantidFlyer:WaitMovementComplete()
	CastSpellAtActor( tower, mantidFlyer, sonicSpellID, false )  
	Wait(1)
	tower:WaitMissilesImpacted(27270) 
	mantidExplode(tower, mantidFlyer) -- Detonate Mantid on Impact
	FadeOut(tower, 1) 
	Wait(5)
end

"
1092,Kun Lai Summit - Reclaiming the Thunder God - Clone - JSB,"


-- Wait( 3 )

-- FadeIn( clone, 0 )"
1094,Valley of the Four Winds - Stoneplow Finale - Player - PRK ,"Wait(1)
RunToLocation( player, 4, -406.314, 1920.66, 130.155, 337.365, true)

WaitForTrigger(""FarmersAssemble"")
Wait(1)
RunToLocation( player, 7, -396.397, 1930.91, 128.707, 277.466, true)
player:WaitMovementComplete()
player:SetFacing(277)

WaitForTrigger(""DeployShadoPan"")
Wait(1.8)
player:PlayOneShotSplitBodyAnim(Animations.EmoteSalute)
Wait(3)

RunToLocation( player, 7, -367.041, 1985.79, 126.329, 71.0917, true)
--player:StopLoopingSplitBodyAnim(Animations.ReadyUnarmed)"
1098,Kun Lai Summit - Reclaiming the Thunder God - Grunt 10 - JSB,"-- path 01
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(5)

trollGrunt10:FollowPath( 3049, 12 )

Wait(100)"
1099,Kun Lai Summit - Reclaiming the Thunder God - Grunt 11 - JSB,"-- path 02
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(6)

trollGrunt11:FollowPath( 3050, 12 )


Wait(100)"
1100,Kun Lai Summit - Reclaiming the Thunder God - Grunt 12 - JSB,"-- path 03
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(7)

trollGrunt12:FollowPath( 3051, 12 )


Wait(100)"
1101,Kun Lai Summit - Reclaiming the Thunder God - Grunt 13 - JSB,"-- path 04
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(8)

trollGrunt13:FollowPath( 3052, 12 )


Wait(100)"
1102,Kun Lai Summit - Reclaiming the Thunder God - Grunt 14 - JSB,"-- path 05
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(5)

trollGrunt14:FollowPath( 3058, 12 )


Wait(100)"
1103,Kun Lai Summit - Reclaiming the Thunder God - Grunt 15 - JSB,"-- path 06
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(8)

trollGrunt15:FollowPath( 3059, 12 )


Wait(100)"
1104,Kun Lai Summit - Reclaiming the Thunder God - Grunt 16 - JSB,"-- path 07
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(7)

trollGrunt16:FollowPath( 3060, 12 )


Wait(100)"
1105,Kun Lai Summit - Reclaiming the Thunder God - Grunt 17 - JSB,"-- path 08
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(6)

trollGrunt17:FollowPath( 3061, 12 )


Wait(100)"
1106,Kun Lai Summit - Reclaiming the Thunder God - Grunt 18 - JSB,"-- path 09
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(5)

trollGrunt18:FollowPath( 3062, 12 )


Wait(100)"
1107,Kun Lai Summit - Reclaiming the Thunder God - Grunt 19 - JSB,"-- path 01
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(10)

trollGrunt19:FollowPath( 3049, 12 )

Wait(100)"
1108,Kun Lai Summit - Reclaiming the Thunder God - Grunt 20 - JSB,"-- path 02
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(11)

trollGrunt20:FollowPath( 3050, 12 )


Wait(100)"
1109,Kun Lai Summit - Reclaiming the Thunder God - Grunt 21 - JSB,"-- path 03
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(12)

trollGrunt21:FollowPath( 3051, 12 )


Wait(100)"
1110,Kun Lai Summit - Reclaiming the Thunder God - Grunt 22 - JSB,"-- path 04
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(13)

trollGrunt22:FollowPath( 3052, 12 )


Wait(100)"
1111,Kun Lai Summit - Reclaiming the Thunder God - Grunt 23 - JSB,"-- path 05
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(10)

trollGrunt23:FollowPath( 3058, 12 )


Wait(100)"
1112,Kun Lai Summit - Reclaiming the Thunder God - Grunt 24 - JSB,"-- path 06
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(13)

trollGrunt24:FollowPath( 3059, 12 )


Wait(100)"
1113,Kun Lai Summit - Reclaiming the Thunder God - Grunt 25 - JSB,"-- path 07
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(12)

trollGrunt25:FollowPath( 3060, 12 )


Wait(100)"
1114,Kun Lai Summit - Reclaiming the Thunder God - Grunt 26 - JSB,"-- path 08
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(11)

trollGrunt26:FollowPath( 3061, 12 )


Wait(100)"
1115,Kun Lai Summit - Reclaiming the Thunder God - Grunt 27 - JSB,"-- path 09
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(10)

trollGrunt27:FollowPath( 3062, 12 )


Wait(100)"
1116,Kun Lai Summit - Reclaiming the Thunder God - Grunt 28 - JSB,"-- path 01
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(15)

trollGrunt28:FollowPath( 3049, 12 )

Wait(100)"
1117,Kun Lai Summit - Reclaiming the Thunder God - Grunt 29 - JSB,"-- path 02
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(16)

trollGrunt29:FollowPath( 3050, 12 )


Wait(100)"
1118,Kun Lai Summit - Reclaiming the Thunder God - Grunt 30 - JSB,"-- path 03
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(17)

trollGrunt30:FollowPath( 3051, 12 )


Wait(100)"
1119,Kun Lai Summit - Reclaiming the Thunder God - Grunt 31 - JSB,"-- path 04
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(18)

trollGrunt31:FollowPath( 3052, 12 )


Wait(100)"
1120,Kun Lai Summit - Reclaiming the Thunder God - Grunt 32 - JSB,"-- path 05
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(15)

trollGrunt32:FollowPath( 3058, 12 )


Wait(100)"
1121,Kun Lai Summit - Reclaiming the Thunder God - Grunt 33 - JSB,"-- path 06
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(18)

trollGrunt33:FollowPath( 3059, 12 )


Wait(100)"
1122,Kun Lai Summit - Reclaiming the Thunder God - Grunt 34 - JSB,"-- path 06
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(17)

trollGrunt34:FollowPath( 3060, 12 )


Wait(100)"
1123,Kun Lai Summit - Reclaiming the Thunder God - Grunt 35 - JSB,"-- path 08
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(16)

trollGrunt35:FollowPath( 3061, 12 )


Wait(100)"
1124,Kun Lai Summit - Reclaiming the Thunder God - Grunt 36 - JSB,"-- path 09
-- priest trigger
WaitForTrigger( ""priestTrigger"" )

Wait(15)

trollGrunt36:FollowPath( 3062, 12 )


Wait(100)"
1125,[1] Kun Lai Summit - Reclaiming the Thunder God - Init - Generic Actors 01 - JSB,"SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
"
1126,[1] Turn Package - Basic Useful Stuff,"pet.actor:PlaySpellStateVisual(6)

	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, targetROID )

	pet.actor:ClearSpellVisual( visKit)

	-- OLD SPLINE STUFF:

	-- Path
	--
	--	Reminder: 
	--		X = Percentage from Caster to Target
	--		Y = Left/Right Adjustment
	--		Z = Offset from Straight Path from Caster to Target
	--
	local path = {
		[1] = {
			basePoint = Vector:New(0.0, 0, 0);
		};
		[2] = {
			basePoint = Vector:New(1.0, 0, 0);
		};
		[3] = {
			leftArm   = Vector:New(1.8, 0, 0.1);
			basePoint = Vector:New(1.8, 0, 0.5);
			rightArm  = Vector:New(1.8, 0, 3.0);
		};
		[4] = {
			leftArm   = Vector:New(0.7, 0, 5);
			basePoint = Vector:New(0.5, 0, 5);
			rightArm  = Vector:New(0.0, 0, 5);
		};
		[5] = {
			leftArm   = Vector:New(0.0, 0, 2);
			basePoint = Vector:New(0.0, 0, 0);
		};
	}

	local isAbsolutePath = false;
	local splineDuration = 2;

	-- Ribbon
	local visKit = pet.actor:PlaySpellStateVisual(6)

	Spline_Attack( test, success, finish, path, isAbsolutePath, splineDuration, pet.actor, targetROID )

	pet.actor:ClearSpellVisual( visKit)

	
	--default is 5
	actor:SetFacingTurnRate(1)

	-- Spawning an actor
	local actor = scene:SpawnActor( createData )


	-- Standard Matrix Stuff
	-- This one is from target facing the caster
	local sourcePosition, targetPosition = target.actor:GetPosition(), caster.actor:GetPosition();

	if ( target and target.states and target.states[STATE_FLYING] and target.states[STATE_FLYING] > 0 ) then
		local targetPlayer = ROIDTOPLAYER( targetROID );

		sourcePosition = targetPlayer.home;
	end

	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )
	local attackPoint = LocalToWorldCoords( Vector:New( -1.5, 0, 0 ) );

end"
1127,Veiled Stair - Cave Saurok - Init - ZTO,"--Saurok types
broodlingID = 62425
throatripperID = 62902
soulbleederID = 62928
skulkerID = 63017
bruteID = 63473
megaBruteID = 64213

--Stalkers
targetID = 62026

--Spell Visuals
darkHatchID = 25547

--Spells
throwSpearID = 54431

--Ceiling paths
ceilingPaths = {4131, 4132, 4159}
cielingStarts = {4133, 4134}

--Spawn Big Saurok
brute = SpawnActorAtPoint(megaBruteID, 4135, false)

-- Spawn Saurok casters
caster1 = SpawnActorAtPoint(soulbleederID, 4133, false)
caster2 = SpawnActorAtPoint(soulbleederID, 4134, false)

-- Spawn Bunnies
targets = { }
targets = SpawnActorsAtPoints(targetID, 4161, false)

--Spawn Spearthrowers
sauroksSpear = { }
sauroksSpear = SpawnActorsAtPoints( skulkerID, 4160, true )

"
1128,Veiled Stair - Cave Saurok - Functions - ZTO,"--Function to spawn ceiling crawlers
sauroks = { }
sauroksSpear = { }

function CeilingCrawler(saurokID)

	while true do

		--scene:WaitTimer(math.random(5, 10))

		local saurok = SpawnActor( skulkerID, 0, 0, 0, 0, 1, false )
		sauroks[saurokID] =
		{
			actor = saurok;
			id = saurokID
		}

		local speed = math.random(5,10)
		local pathID = ceilingPaths[math.random(#ceilingPaths)]

		while (sauroks[saurokID]) do

			-- move on a looping path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			moveData.animKitID = 2932

			saurok:Move( moveData )

			saurok:WaitMovementComplete()

		end
	end

end

"
1129,Veiled Stair - Cave Saurok - Ceiling Crawler 1 - ZTO,"--cue Ceiling Crawlers

CeilingCrawler(1)"
1130,Dread Wastes - Mantid Swarm Linear - Mantid1 -  ZTO,"
MantidController(1)
"
1131,Dread Wastes - Mantid Swarm Linear - Init - ZTO,"--Scene Declarations
scene:SetRelativeCoords(true) -- set to relative worlld coords

--Spawn Mantid
mantidCreatureID = 66036
mantidSwarmPathIDs = { 4155, 4154, 4156, 4157 } 

mantids = { }

local fadeOutTime = 2
function MantidController(mantidID)

	while true do

		scene:WaitTimer(math.random(10, 20))

		local mantid = SpawnActor( mantidCreatureID, 0, 0, 0, 0, 1, false )
		FadeOut(mantid, 0)
		mantids[mantidID] =
		{
			actor = mantid;
			id = mantidID
		}

		local speed = math.random(30,50)
		local pathID = mantidSwarmPathIDs[math.random(#mantidSwarmPathIDs)]

		--mantid:PlaySpellStateVisual(27277) -- wing visual
		
		FadeIn(mantid, 2)
--		while (mantids[mantidID]) do

			-- move on a looping path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			moveData.animKitID = 1395

			mantid:Move( moveData )

			mantid:WaitMovementComplete()
			
--		end
		FadeOut(mantid, fadeOutTime)

		-- keep moving a little while fading
		mantid:MoveToRel(Vector:New(speed*fadeOutTime, 0, 0), fadeOutTime)

		Wait(fadeOutTime)


		mantid:Despawn()
		mantids[mantidID] = nil

		Wait(2)
	end

end"
1132,Dread Wastes - Mantid Swarm Linear - Mantid2 -  ZTO,"
MantidController(2)
"
1134,Dread Wastes - Klaxxi'vess Assault - Testi -   ZTO,"mantidKlaxx(4074, 4078, bunny1)"
1135,Dread Wastes - Klaxxi'Vess Assault v2 - Init - ZTO,"
scene:SetRelativeCoords(true)

bunnyCreatureID = 62026
mantidCreatureID = 66036
mantidSwarmPathIDs = { 4145, 4147, 4148, 4166, 4167, 4168 } 
mantidSafeSwarmPathIDs = { 4166, 4167, 4168 } 
mantidAttackPathIDs = { 4082, 4169, 4170, 4171 }

--Spell Arsenal
mantidExplosionHeadID = 128992
mantidExplosionLegID = 128993
mantidExplosionPincerID = 128994
mantidExplosionBaseID = 128995
mantidExplosionBurstID = 129263 
sonicSpellID = 129008
sonicSpellVisualID = 27270
	
--Spell visuals
headID = 27264
legID = 27265
pincerID = 27266

-- tower zap originates at scene origin
tower = SpawnActor( bunnyCreatureID, 0, 0, 0, 0, 1.0, false ) 

mantids = { }

function MantidController(mantidID)

	while true do

		scene:WaitTimer(math.random(5, 10))

		local mantid = SpawnActor( mantidCreatureID, 0, 0, 0, 0, 1, false )
		mantids[mantidID] =
		{
			actor = mantid;
			id = mantidID
		}

		local speed = math.random(15,50)
		local pathID = mantidSwarmPathIDs[math.random(#mantidSwarmPathIDs)]

		--mantid:PlaySpellStateVisual(27277) -- wing visual

		while (mantids[mantidID]) do

			-- move on a looping path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			moveData.animKitID = 1395

			mantid:Move( moveData )

			mantid:WaitMovementComplete()

		end
		
	end

end

function MantidControllerSafe(mantidID)

	while true do

		scene:WaitTimer(math.random(10, 15))

		local mantid = SpawnActor( mantidCreatureID, 0, 0, 0, 0, 1, false )
		local speed = math.random(15,50)
		local pathID = mantidSafeSwarmPathIDs[math.random(#mantidSafeSwarmPathIDs)]

		mantid:PlaySpellStateVisual(27277) -- wing visual

		while (mantid) do

			-- move on a looping path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			moveData.animKitID = 1395

			mantid:Move( moveData )

			mantid:WaitMovementComplete()

		end
		
	end

end"
1136,Dread Wastes - Klaxxi'Vess Assault v2 - Tower - ZTO,"
function MissilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, 10)
	local spot2 = math.random(-10, 10)
	local spot3 = math.random(-10, 10) 

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(spot1, spot2, spot3)
	return missilePos
end

function MantidExplode(explodingMantid)
	local casterPos = explodingMantid:GetPosition()
	local missilePos1 = MissilePosRand(casterPos) 
	local missilePos2 = MissilePosRand(casterPos)
	local missilePos3 = MissilePosRand(casterPos)
	local missilePos4 = MissilePosRand(casterPos)
	local missilePos5 = MissilePosRand(casterPos)
	local missilePos6 = MissilePosRand(casterPos)
	local missilePos7 = MissilePosRand(casterPos)
	local pointList1 = {missilePos1}
	local pointList2 = {missilePos2}
	local pointList3 = {missilePos3} 
	local pointList4 = {missilePos4}
	local pointList5 = {missilePos5} 
	local pointList6 = {missilePos6}   
	local pointList7 = {missilePos6}
	explodingMantid:PlaySpellCastVisualAtPoints(headID, 5, false, pointList1)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList2)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList3)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList4)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList5)
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList6) 
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList7)
	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBaseID, false )
	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBurstID, false )
	FadeOut(explodingMantid, 0.2)
end

-- tower waits random times to shoot at mantid
while true do

	Wait(math.random(2, 4))

	-- look for a random mantid
	local aliveMantid = { }
	for i,mantid in pairs(mantids) do
		if (mantid ~= nil) then
			table.insert(aliveMantid, mantid)
		end
	end

	local numAlive = #aliveMantid
	if (numAlive > 0) then

		local mantidDesc = aliveMantid[math.random(#aliveMantid)]
		local mantid = mantidDesc.actor

		local moveData2 = MoveData:Default()
		
		moveData2.pathID = mantidAttackPathIDs[math.random(#mantidAttackPathIDs)]
		moveData2.speed = math.random(40, 60)

		moveData2.posControl = MovePosControl.ConstantSpeed
		moveData2.yawControl = MoveRotControl.Tangent
		moveData2.pitchControl = MoveRotControl.Tangent
		moveData2.rollControl = MoveRotControl.Angle
		moveData2.isRelative = false
		--moveData2.teleportToFirstPoint = true
		moveData2.animKitID = 1395

		mantid:Move( moveData2 )

		
		mantid:WaitMovementComplete()  

		-- kill the mantid!
		CastSpellAtActor( tower, mantid, sonicSpellID, false )
		
		--Wait(1) This gives the spell time to visualy hit the target.
		MantidExplode(mantid)

		-- stop the mantid from moving (HACK by falling down quickly)
		mantid:MoveToRel(Vector:New(0,0,-2), 0.5)
		
		-- remove from list so it respawns
		mantids[mantidDesc.id] = nil
	end

end
"
1137,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid1 - ZTO,"
MantidController(1)
"
1138,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid2 - ZTO,"
MantidController(2)
"
1139,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid3 - ZTO,"
MantidController(3)
"
1140,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid4 - ZTO,"
MantidController(4)
"
1141,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid5 - ZTO,"
MantidController(5)
"
1147,Dread Wastes - Mantid Swarm Small - Mantid1 -  ZTO,"
MantidController(1)
"
1148,Dread Wastes - Mantid Swarm Small - Mantid3 -  ZTO,"
MantidController(3)
"
1149,Dread Wastes - Mantid Swarm Small - Mantid4 -  ZTO,"
MantidController(4)
"
1150,Dread Wastes - Mantid Swarm Small - Mantid5 -  ZTO,"
MantidController(5)
"
1151,Dread Wastes - Mantid Swarm Small - Mantid6 -  ZTO,"
MantidController(6)
"
1152,Dread Wastes - Mantid Swarm Small - Mantid7 -  ZTO,"
MantidController(7)
"
1153,Dread Wastes - Mantid Swarm Small - Mantid8 -  ZTO,"
MantidController(8)
"
1154,Dread Wastes - Mantid Swarm Small - Mantid9 -  ZTO,"
MantidController(9)
"
1155,Dread Wastes - Mantid Swarm Small - Mantid10 -  ZTO,"
MantidController(10)
"
1156,Dread Wastes - Mantid Swarm Linear - Mantid3 -  ZTO,"
MantidController(3)
"
1157,Dread Wastes - Mantid Swarm Linear - Mantid4 -  ZTO,"
MantidController(4)
"
1158,Dread Wastes - Mantid Swarm Linear - Mantid5 -  ZTO,"
MantidController(5)
"
1159,Dread Wastes - Mantid Swarm Linear - Mantid6 -  ZTO,"
MantidController(6)
"
1160,Dread Wastes - Mantid Swarm Linear - Mantid7 -  ZTO,"
MantidController(7)
"
1161,Dread Wastes - Mantid Swarm Linear - Mantid8 -  ZTO,"
MantidController(8)
"
1162,Dread Wastes - Mantid Swarm Linear - Mantid9 -  ZTO,"
MantidController(9)
"
1163,Dread Wastes - Mantid Swarm Linear -  Mantid10 -  ZTO,"
MantidController(10)
"
1164,Brazie's PetBattle - Turn - Obtain Attack Point,"--
--	Gets the locations which specifies where the attack should start
--
--		Returns: Vector
--
function ObtainAttackPoint(attackerROID, victimROID, range, miss)
	local attacker = ROIDTOUNIT( attackerROID );
	local victim = ROIDTOUNIT( victimROID );

	-- Confirm the victim exists
	if ( not victim or attackerROID == victimROID ) then
		return Vector:New(0,0,0);
	end

	local sourcePosition, targetPosition = victim.actor:GetPosition(), attacker.actor:GetPosition();
	local distance = sourcePosition:Dist( targetPosition );

	-- Handle the flying case
	if ( victim and victim.states )  and 
		( victim.states[STATE_FLYING] and victim.states[STATE_FLYING] > 0 ) then
		local victimPlayer = ROIDTOPLAYER( victimROID );

		sourcePosition = victimPlayer.home;
	end

	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local finalDestination = nil;

	-- Melee
	if ( range == PetBattleRange.Melee ) then 
		if ( miss ) then 
			if ( math.random(1,2) == 1 ) then 
				finalDestination = LocalToWorldCoords( Vector:New(1,1,0) );
			else
				finalDestination = LocalToWorldCoords( Vector:New(1,-1,0) );
			end
		else
			finalDestination = LocalToWorldCoords( Vector:New(1,0,0) );
		end

	-- Behind Melee
	elseif ( range == PetBattleRange.BehindMelee ) then 
		if ( miss ) then 
			if ( math.random(1,2) == 1 ) then 
				finalDestination = LocalToWorldCoords( Vector:New(-1,1,0) );
			else
				finalDestination = LocalToWorldCoords( Vector:New(-1,-1,0) );
			end
		else
			finalDestination = LocalToWorldCoords( Vector:New(-1,0,0) );
		end

	-- Ranged
	elseif ( range == PetBattleRange.Ranged ) then
		-- Max Range
		if ( distance > 4 ) then 
			finalDestination = LocalToWorldCoords( Vector:New(4,0,0) );
		-- Min Range
		elseif ( distance < 2 ) then 
			finalDestination = LocalToWorldCoords( Vector:New(2,0,0) );
		-- Don't Move
		else
			finalDestination = targetPosition;
		end
	-- Behind Ranged
	elseif ( range == PetBattleRange.BehindRanged ) then 
		finalDestination = LocalToWorldCoords( Vector:New(-3,0,0) );

	-- Stationary
	elseif (range == PetBattleRange.InPlace ) then 
		finalDestination = targetPosition;

	-- Stationary
	elseif (range == PetBattleRange.PointBlank ) then 
		finalDestination = sourcePosition;

	-- Do nothing
	else
		Print(""ERROR: ObtainAttackPoint - No movement range specified!"");
		finalDestination = Vector:New(0,0,0);
	end

	return finalDestination;
end"
1165,Brazie's PetBattle - Constant Overrides 2,"--
-- All of this should have been defined and provided elsewhere

STATE_FLYING = 33;
STATE_STEALTHED = 84;
STATE_UNDERGROUND = 30;
STATE_WATER_BUBBLED = 85;
STATE_INVISIBLE = 67;
STATE_FLY_TIER = 128;
STATE_FETISH_RANDOM_COLOR = 129;
STATE_BIGGLESWORTH = 144;

-- Grats Sen'jin Fetish is hard coded into the game!
FETISH_BASE_STATE = 11563;
FETISH_STATES = {11558, 11560, 11562 };

STATE_BLOCK_CHARGES = 74;
STATE_REDIRECT_AURA = 75;

STATE_CHARGING 	= 113;
STATE_RECOVERING= 114;
STATE_CLEANSE 	= 141;

STATE_CLONE_ACTIVE = 100;
STATE_CLONE_AURAID = 118;
STATE_CLONE_PBOID  = 101;
STATE_CLONE_HEALTH = 105;
STATE_CLONE_MAX_HP = 106;

PetBattleRange.PointBlank = 4;
PetBattleRange.BehindMelee = 5;
PetBattleRange.BehindRanged = 6;

PET_BATTLES_BIGGLESWORTH = 29438;
PET_BATTLES_SPRINT_TRAIL = 27365;
PET_BATTLES_WATER_BUBBLE = 27486;

PET_TRAP_LEVEL_1 = 427;
PET_TRAP_LEVEL_2 = 77;
PET_TRAP_LEVEL_3 = 135;


--[[
-- PROTOTYPE ATTACK DISPLAY!
PET_ABILITY_NAMES_BY_ID = {
	[113] = ""Burn"";
	[178] = ""Immolate"";
	[179] = ""Conflagrate"";
	[504] = ""Alpha Strike"";
	[116] = ""Zap"";
};

PET_ABILITY_TYPE_COLOR_BY_ID = {
	[113] = Color:New(255, 128, 0);
	[178] = Color:New(255, 128, 0);
	[179] = Color:New(255, 128, 0);
	[504] = Color:New(200, 200, 200);
};

function PreTurn_DisplayAbilityName( userROID, turn)

	if ( turn.abilityID ) then

		if ( PET_ABILITY_NAMES_BY_ID[turn.abilityID] ) then 
	
			local actingPet = ROIDTOPET( userROID );

			local type = WorldText.Damage; --WorldText.BuildingDamage;
			local useColor = true;
			local color = PET_ABILITY_TYPE_COLOR_BY_ID[turn.abilityID] or Color:New(255, 255, 255)

			text = PET_ABILITY_NAMES_BY_ID[turn.abilityID];
			actingPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		else
			print (""Turn Ability ID: "",turn.abilityID );
		end
	end
end

--]]"
1166,[1] Brazie's PetBattle - Library - Pet Movement - Spline Attack,"relativeSpline[i];
		local newNode = FastLocalFacingCoordinates ( actor:GetPosition(), opponent.actor:GetPosition(), relativeNode )

		table.insert( realSpline, newNode );
	end

	actor:SetSnapToGround( false )
	actor:MoveSplineAbs( realSpline, pathDuration )

	local ranSuccess = false;
	local dist = actor:GetPosition():Dist( opponent.actor:GetPosition() );

	repeat  
		local keepGoing, succeeded = testFunc()
		
		if ( succeeded ) then

			successFunc();
			ranSuccess = true;
		end

		scene:WaitTimer(0.0001);

	until ( keepGoing == false );

	actor:WaitMovementComplete()
	actor:SetSnapToGround(false)

	-- MY MOVEMENT END

	finishFunc ( ranSuccess );
end"
1168,Beast - Trample,"function Beast_Trample( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )


	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;


	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	
	local attackPoint = ObtainAttackPoint( ROID, targetROID, PetBattleRange.Melee, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, Trample_HugeKnockbackSuccess);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );

	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	-- New Spline START
	local moveData = MoveData:Default(5)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent

	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(-0.3*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 2
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(2*distToTarget, dir*0.5, 0) );
	moveData.points[3].speed = 7
	moveData.points[4].pos = LocalToWorldCoords ( Vector:New(0.9*distToTarget, dir*1, 0) );
	moveData.points[4].speed = 3
	moveData.points[5].pos = player.home
	moveData.points[5].speed = 3

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	DefaultTurnCleanUp(ROID);
end

function Trample_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 2, 0.5 ); 	 

end"
1170,Veiled Stair - Cave Saurok - Ceiling Crawler 2 - ZTO ,"--cue Ceiling Crawlers

CeilingCrawler(2)"
1171,Veiled Stair - Cave Saurok - Ceiling Crawler 3 - ZTO ,"--cue Ceiling Crawlers

CeilingCrawler(3)"
1172,Veiled Stair - Cave Saurok - Ceiling Crawler 4 - ZTO ,"--cue Ceiling Crawlers

CeilingCrawler(4)"
1173,Veiled Stair - Cave Saurok - Brute - ZTO,"--cue Ceiling Crawlers

brute:PlayLoopingAnimKit(2933)
brute:SetFacing(224.602)

--Wait until boat is near
WaitForTrigger(""Roar"")
brute:StopAnimKit(2933)
brute:PlayOneShotAnimKit(677)
PlayLoopingSplitBodyAnim( brute, Animations.ReadyUnarmed)

--Wait for dismissal
WaitForTrigger(""NoMore"")
 "
1174,Veiled Stair - Cave Saurok - Master - ZTO,"scene:WaitTimer(40)

SendTrigger(""Roar"")

scene:WaitTimer(10)

SendTrigger(""NoMore"")

scene:WaitTimer(20)

scene:EndScene()"
1175,Veiled Stair - Cave Saurok - Caster 1- ZTO,"local darkHatchSpell = caster1:PlaySpellStateVisual(darkHatchID) -- Channeling Visual

WaitForTrigger(""Roar"")
caster1:ClearSpellVisual( darkHatchSpell) -- Cancel Spell State Visual

PlayOneShotSplitBodyAnim( caster1, Animations.BattleRoar)

Wait(2)

PlayLoopingSplitBodyAnim( caster1, Animations.ReadySpellDirected)

WaitForTrigger(""NoMore"")
caster1:SetFacingToAbs(Vector:New(1494.04, 117.851, 471.519))
PlayOneShotSplitBodyAnim( caster1, Animations.MountSelfStart)
caster1:PlayLoopingAnimKit(2932)
RunToLocation(caster1, 5, 1494.04, 117.851, 471.519, 0, true) 
FadeOut(caster1, 2)"
1176,Veiled Stair - Cave Saurok - Caster 2- ZTO,"local darkHatchSpell = caster2:PlaySpellStateVisual(darkHatchID) -- Channeling Visual

WaitForTrigger(""Roar"")
caster2:ClearSpellVisual( darkHatchSpell) -- Cancel Spell State Visual

PlayOneShotSplitBodyAnim( caster2, Animations.BattleRoar)

Wait(2)

PlayLoopingSplitBodyAnim( caster2, Animations.ReadySpellDirected)

WaitForTrigger(""NoMore"")
caster2:SetFacingToAbs(Vector:New(1494.04, 117.851, 471.519))
PlayOneShotSplitBodyAnim( caster2, Animations.MountSelfStart)
caster2:PlayLoopingAnimKit(2932)
RunToLocation(caster2, 5, 1494.04, 117.851, 471.519, 0, true) 
FadeOut(caster2, 2)"
1177,Veiled Stair - Cave Saurok - Ceiling Crawler 5 - ZTO,"--cue Ceiling Crawlers

CeilingCrawler(5)"
1178,Veiled Stair - Cave Saurok - Ceiling Crawler 6 - ZTO ,"--cue Ceiling Crawlers

CeilingCrawler(6)"
1179,Veiled Stair - Cave Saurok - Ceiling Crawler 7 - ZTO ,"--cue Ceiling Crawlers

CeilingCrawler(7)"
1180,Veiled Stair - Cave Saurok - Ceiling Crawler 8 - ZTO,"--cue Ceiling Crawlers

CeilingCrawler(8)"
1181,Veiled Stair - Cave Saurok - Ceiling Crawler 9 - ZTO,"--cue Ceiling Crawlers

CeilingCrawler(9)"
1182,Veiled Stair - Cave Saurok - Spear Thrower randoms - ZTO,"--Function to have Spear Throwers periodically chuck a spear at a bunny
while true do

	Wait(math.random(5, 10))
	local thrower = sauroksSpear[math.random(#sauroksSpear)]
	local target = targets[math.random(#targets)]
	CastSpellAtActor( thrower, target, throwSpearID, true )
		
end
"
1183,Veiled Stair - Cave Saurok - Spear Thrower Idles - ZTO,"--Prep Spear Throwing Saurok
for i=1, #sauroksSpear do
	PlayLoopingSplitBodyAnim( sauroksSpear[i], Animations.ReadyThrown )
end"
1184,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid6 - ZTO,"
MantidController(6)
"
1185,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid7 - ZTO ,"
MantidController(7)
"
1186,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid8 - ZTO,"
MantidController(8)
"
1187,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid9 - ZTO,"
MantidController(9)
"
1188,Dread Wastes - Klaxxi'Vess Assault v2 - Mantid10 - ZTO,"
MantidController(10) 
"
1189,Beast - Burrow,"function Beast_Burrow( ROID, isTurn, turn )
	-- Only handle ""turn"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )
	SendEverybodyHome()

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end
	local player = ROIDTOPLAYER(ROID);

	local turnVisualID = turn.turnVisualID ;

	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn );  
	local target =  ROIDTOUNIT(targetROID);
	local targetPlayer =  ROIDTOUNIT(targetROID);

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	pet.actor:WaitMoveToAbs(attackPoint, attackPoint:Dist( pet.actor:GetPosition() ) / pet.moveSpeed);
	
	--local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- New Spline START
	local moveData = MoveData:Default(3)
	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = attackPoint, player.home;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	moveData.points[1].pos = LocalToWorldCoords ( Vector:New ( 1, 0, 3 ) );
	moveData.points[1].speed = 3
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New ( 1, 0, 2 ) );
	moveData.points[2].speed = 5
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New ( 1, 0, 0 ) );
	moveData.points[3].speed = 3

	local stretch = false;

	pet.actor:ClearFacing();

	-- Unstealth immediately
	for i=1, #turn.effects do
		local effect = turn.effects[i];
		local success = nil;
		if ( i == 1 ) then
			success = Burrow_HugeKnockbackSuccess;
		end
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, success );
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )

	pet.actor:SetSnapToGround(false)

	pet.actor:WaitMove( moveData );
	--Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:SetSnapToGround(true)
	pet.actor:ClearSpellVisual( visKit)

	DefaultTurnCleanUp(ROID);

end

function Burrow_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 3, 0.5 ); 	 

end"
1190,Brazie's PetBattle - Result Data,"function FindFirstPotentialFailingResult(effect)
	for r,effectResult in pairs(effect.results) do
		if (effectResult.resultType) then
			if ((effectResult.resultType == PetBattleEffect.SetHealth) or
				(effectResult.resultType == PetBattleEffect.AuraApply) or
				(effectResult.resultType == PetBattleEffect.PetSwap) or
                 (effectResult.resultType == PetBattleEffect.StatusChange))  then  --StatusChange = trap
				return effectResult
			end
		end
	end
	return nil
end

function DidItFail ( data )
	local result; 
	
	if ( data.class == ""turn"" ) then 
		-- Fix for Bug ID: 349879
		-- In the case where we are looking at the whole turn, find the
		-- first result that can miss
		for e,effect in pairs(data.effects) do
			if (not result) then
				result = FindFirstPotentialFailingResult(effect)
			end
		end

		if (not result) then
			-- fallback, pick the first result
			result = data.effects[1].results[1];
		end
	elseif ( data.class == ""effect"" ) then
		result = FindFirstPotentialFailingResult(data)
		if (not result) then
			-- fallback, pick the first result
			result = data.results[1];
		end
	elseif ( data.class == ""result"" ) then 
		result = data;
	end

	if ( result.flags ) then
		if ( result.flags.miss or result.flags.absorb or result.flags.parry or result.flags.immune or result.flags.dodge or result.flags.deflect or result.flags.blocked ) then 

			return true, result.flags;
		end
	end

	return false, result.flags;
end

function GetMoveToROIDForEffect( effect )
	local team = ROIDTOPLAYER ( effect.primaryTarget );

	if ( effect.redirectTarget ) then
		return effect.redirectTarget;
	end

	return effect.redirectTarget or effect.primaryTarget;
end

function GetMoveToROID( data ) 

	if ( data.class == ""turn"" ) then
		-- Fix for Bug ID: 349879
		-- In the case where we are looking at the whole turn, find the
		-- first result that can miss, it's effect should be the one that we target
		local moveToEffect
		for e,effect in pairs(data.effects) do
			if (not moveToEffect) then
				local result = FindFirstPotentialFailingResult(effect)
				if (result) then
--					print(""MoveToEffect "" .. e)
					moveToEffect = effect
				end
			end
		end
		
		if (not moveToEffect) then
			-- fallback, pick the first result
			moveToEffect = data.effects[1]
		end

		return GetMoveToROIDForEffect( moveToEffect )
	elseif ( data.class == ""effect"" ) then
		return GetMoveToROIDForEffect( data )
	elseif ( data.class == ""result"" ) then
		return ResultToTargetROID( data )
	else
		warning(""Undefined data class"")
	end
end"
1191,Critter - Powerball,"function Critter_Powerball( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;


	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	
	-- New Spline START
	local moveData = MoveData:Default(7)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.AngleAbs
	moveData.rollControl = MoveRotControl.None


	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);


	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
	local height = 1;
	local offset = 2;

	pet.actor:PlaySpellCastVisual(28350);

	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, math.cos(0/180*math.pi) * height + offset ) );
	moveData.points[1].speed = 7
	moveData.points[1].pitch = -1080
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, math.cos(90/180*math.pi) * height + offset) );
	moveData.points[2].speed = 10
	moveData.points[2].pitch = moveData.points[1].pitch-1080
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.5*distToTarget, dir*0.5, math.cos(180/180*math.pi) * height + offset ) );
	moveData.points[3].speed = 7
	moveData.points[3].pitch = moveData.points[2].pitch-1080
	moveData.points[4].pos = LocalToWorldCoords ( Vector:New(0.9*distToTarget, dir*1, math.cos(270/180*math.pi) * height + offset ) );
	moveData.points[4].speed = 7
	moveData.points[4].pitch = moveData.points[3].pitch-1080
	moveData.points[5].pos = LocalToWorldCoords ( Vector:New(0.25*distToTarget, dir*-0.5, math.cos(360/180*math.pi) * height + offset ) );
	moveData.points[5].speed = 7
	moveData.points[5].pitch = moveData.points[4].pitch-1080
	moveData.points[6].pos = player.home + LocalToWorldCoords ( Vector:New(0.0*distToTarget, dir*-0.25, math.cos(720/180*math.pi) * height + offset ) );
	moveData.points[6].speed = 7
	moveData.points[6].pitch = moveData.points[5].pitch-1080
	moveData.points[7].pos = player.home
	moveData.points[7].speed = 2
	moveData.points[7].pitch = moveData.points[6].pitch-1080

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local ROLL_SPRINT_TRAIL = 28700
	local petActor = pet.actor;
	local rollOffset = 0.16;
	local rollActor = LockToRollActor( pet.actor, rollOffset );

	local visKit = petActor:PlaySpellStateVisual( ROLL_SPRINT_TRAIL )
	scene:WaitTimer(0.05);
	local test, success, finish = "
1192,[1] Critter - Powerball,"Spline_Attack2_GetDefaultHandlers(turn, rollActor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, Surge_HugeKnockbackSuccess);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end



	Spline_Attack2( test, success, finish, moveData, stretch, rollActor, attackPoint )

	petActor:ClearSpellVisual( visKit)

	UnlockRollActor( pet.actor, rollActor, rollOffset ) 


	DefaultTurnCleanUp(ROID);
end

function Surge_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 2, 0.5 ); 	 

end"
1193,Legendary 5.0 - Chapter 01 - Tavern Intro - Ally - Main,"-- Wrathion's Actions
local wrathionSpellTarget={Vector:New(825.461, -169.286, 415.262)}

-- Set Up and Spawn in Wrathion (Alliance)
wrathionID = 64616
wrathion = SmoothPhaseSpawnActor( wrathionID, 821.63, -163.648, 415.192, 241.546, 1, false ) 
SendTrigger(""wrathionSpawn"")
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Spawn in Sitting
wrathion:PlaySoundKitStereo(33426, true) -- BEGIN MUSIC
Wait(2)
StopLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Stand Up
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 241.546, true ) --Feet on floor
Wait(2)

-- Here's Where He Begins Talking
wrathion:BroadcastText(BroadcastType.Say, 65088) -- ""Very Good. Let's talk.""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3)
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 281.371, true ) --Turn
Wait(.5)
wrathion:BroadcastText(BroadcastType.Say, 65089) -- ""Tong! Drinks please!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(4)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65090) -- ""My father, Deathwing...""
RunToLocation( wrathion, 1.3, 826.54, -169.823, 415.262, 148.002 ) --Walk to center of room
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 65091) -- ""He was misguided..""
Wait(2)
wrathion:PlayOneShotAnimKit(1629) -- Unsheathe Anim
Wait(1)
local holdDagger = wrathion:PlaySpellStateVisual(27499) -- Holding a Dagger
wrathion:PlayOneShotAnimKit(2983) -- Slices own hand! Eww!
Wait(5.2)
wrathion:PlaySpellCastVisualAtPoints(27502, 1.5, false, wrathionSpellTarget)
Wait(4)
wrathion:PlayOneShotAnimKit(1629) -- Sheathe Anim
Wait(1)
wrathion:ClearSpellVisual( holdDagger) --Put Away Dagger
Wait(1)
RunToLocation( wrathion, 1.3, 827.5, -170.416, 415.216, 148.002 ) -- Step Back
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65092) -- ""We are a point of light...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(4.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65093) -- ""Sometimes I think...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(4)
RunToLocation( wrathion, .8, 827.5, -170.416, 415.216, 233.823, true ) -- Turn to Tong
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
wrathion:BroadcastText(BroadcastType.Say, 65094) -- ""Ah, thank you Tong.""
Wait(3)
wrathion:PlaySpellCastVisual(27471) -- Have a Drink
Wait(2)
RunToLocation( wrathion, 1.3, 827.5, -170.416, 415.216, 148.002, true ) -- Face Globe
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65095) -- ""Now, to my point...""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(4.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65096) -- ""Believe me! What Garrosh did...""
Wait(2)
PlayLoopingSplitBodyAnim( wrathion, Animations.ReadySpellOmni  ) -- Channel Pose, like a Boss
Wait(11)
StopLoopingSplitBodyAnim( wrathion, Animations.ReadySpellOmni  ) -- Stop posing
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65097) -- ""But the War Deeply Troubles Me...""
Wait(3.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
wrathion:BroadcastText(BroadcastType.Say, 65098) -- ""A divided Azeroth...""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk "
1194,Humanoid - Body Slam,"function Humanoid_BodySlam( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
 
	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.Melee, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local overrideFailure, overrideEffectSuccess, overrideEffectFailure = nil, nil, nil;
		DefaultTurnVisualHandler( ROID, turn, BodySlam_HugeKnockbackSuccess, overrideFailure, overrideEffectSuccess, overrideEffectFailure )

		-- Handle all effects
		for index=1,#turn.effects do 
			local effect = turn.effects[index];

			-- Default Visual 
			--DefaultEffectVisualHandler( ROID, effect, turnVisualID)
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end 
	end
--[[
	-- New Spline START
	local moveData = MoveData:Default(3)
	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.2*distToTarget, 0, 0) );
	moveData.points[3].speed = 7

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

--]]

	pet.actor:WaitMoveToAbs(attackPoint, attackPoint:Dist( pet.actor:GetPosition() ) / pet.moveSpeed / 2 );
	success();

	DefaultTurnCleanUp(ROID);
end

function BodySlam_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 5, 0.5 ); 	 
	"
1195,[1] Humanoid - Body Slam,"Dispatcher_AddCommandToQueue(attackerROID, Dispatcher_PerformImpactHugeKnockback, victimROID, 2, 0.5 ); 	 
end"
1196,Brazie's PetBattle - Dispatcher - Result - Spell Locked,"function spell_lock_enable_func(targetROID, result, ...)

	-- 
	local target = ROIDTOPET ( targetROID );

	local type = WorldText.Damage;
	local useColor = false;
	local color = Color:New(0, 255, 0)

	local text = """" -- number of turns here

	local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_SPELL_LOCK"" )
	text = string.format( lockText or ""Spell Locked! (%1$s turns)"", text )
	target.actor:AddCustomWorldText( type, useColor, color, text ) 
end

function spell_lock_disable_func(targetROID, result, ...)
end

function spell_lock_modified_func(targetROID, result, ...)
end"
1197,Brazie's PetBattle - Dispatcher - Result - Cooldown Modified,"function cooldown_modified_func()
	local target = ROIDTOPET ( targetROID );

	local type = WorldText.Damage;
	local useColor = false;
	local color = Color:New(0, 255, 0)

	local text = """" -- number of turns here

	local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_UP"" )
	--local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_DOWN"" )
	--local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_RESET"" )
	text = string.format( lockText or ""Cooldown reduced!"", text )
	target.actor:AddCustomWorldText( type, useColor, color, text ) 
end"
1198,Beast - Horn Attack,"function Beast_HornAttack( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Strongly consider making an override version of Standard Turn rather than doing this.
	if (#turn.effects == 1 ) then
		-- Unit Wrangling
		local pet = ROIDTOPET(ROID);
		if ( not pet or (pet and pet.isPad) ) then
			return;
		end

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;	

		local finalDestination = ObtainAttackPoint( ROID, targetROID, PetBattleRange.Melee, missed)

		-- Derp Derp
		local distance = target.actor:GetPosition():Dist(finalDestination); 
		local moveTime = distance/battleScale/(pet.moveSpeed);
		pet.actor:WaitMoveToAbs(finalDestination, moveTime)

		local turnVisualID = turn.turnVisualID ;

		DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride)

		-- Handle all effects
		for index=1,#turn.effects do 
			local effect = turn.effects[index];

			-- Default Visual 
			DefaultEffectVisualHandler( ROID, effect, turnVisualID)
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end 

		DefaultTurnCleanUp(ROID);
		return;
	else

	end


	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )


	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;


	-- Use the first result from each effect
	local targetROID = ResultToTargetROID(turn.effects[1].results[1])
	local target =  ROIDTOUNIT(targetROID);

	local missed = turn.effects[1].results[1].flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, HornAttack_HugeKnockbackSuccess);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );

	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	-- New Spline START
	local moveData = MoveData:Default(5)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent

	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(-0.3*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 2
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(2*distToTarget, dir*0.5, 0) );
	moveData.points[3].speed = 7
	moveData.points[4].pos = LocalToWorldCoords ( "
1199,[1] Beast - Horn Attack,"Vector:New(0.9*distToTarget, dir*1, 0) );
	moveData.points[4].speed = 3
	moveData.points[5].pos = player.home
	moveData.points[5].speed = 3

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	DefaultTurnCleanUp(ROID);
end

function HornAttack_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 2, 0.5 ); 	 

end"
1200,Jade Forest - Horde Gunship Crash v2 - Init -  ZTO,"--Horde Gunship
gunshipID = ""World\\Expansion04\\Doodads\\Pandaren\\ND_HordeGunship_Doodad.mdx""
gunshipCannonID = ""World\\Expansion02\\Doodads\\Generic\\Horde_Gunship_DeckFlakGun.mdx""
bunnyID = 62026

--Paths
gunshipPathID = 4172

--Gunship Offsets and passengers
gunship = {
	mainBody = SpawnModelActor( gunshipID, 3156.27, -677.623, 299.845, 209.924, 1, false )
	cannon1 = SpawnModelActor( gunshipCannonID, 3156.27, -677.623, 299.845, 209.924, 1, false )
	cannon2 = SpawnModelActor( gunshipCannonID, 3163.66, -710.678, 307.261, 295.198, 1, false )
	cannon3 = SpawnModelActor( gunshipCannonID, 3175.59, -704.906, 307.851, 293.173, 1, false )
	engine = SpawnActor(bunnyID, 3203.35, -651.999, 319.109, 27.2225, 1, false)
	mainGun = SpawnActor(bunnyID, 3064.48, -725.365, 330.592, 210.822, 1, false)
	blaster1 = SpawnActor(bunnyID, 3110.52, -732.089, 314.767, 254.923, 1, false)
	blaster2 = SpawnActor(bunnyID, 3128.17, -723.275, 299.475, 272.923, 1, false)
	blaster3 = SpawnActor(bunnyID, 3193.5, -688.291, 299.655, 292.722, 1, false)
}

FadeOut(gunship, 0)"
1201,Mechanical - Smoke Cloud,"function Mechanical_SmokeCloud(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(512459);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0.5)
	
	local baseScale = 0.1;
	local bonusScalePerRoundRemaining = 0.05;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0) )

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1202,Jade Forest - Horde Gunship Crash v2 - Functions -  ZTO,"
function MoveData:Default(numPoints)
	local d =
	{
		isRelative = true;
		isGroundSnapping = false;
		teleportToFirstPoint = true;
		animKitID = 0;
		posControl = MovePosControl.TotalTime;
		yawControl = MoveRotControl.None;
		pitchControl = MoveRotControl.None;
		rollControl = MoveRotControl.None;
		time = 0.0;
		speed = 1.0;
		points = { };
		pathID = 4172;
	}
	if (numPoints and numPoints > 0) then
		for i = 1,numPoints do
			table.insert(d.points, MovePoint:Default())
		end
	end

	setmetatable(d, self.__meta)
	return d
end
"
1203,Jade Forest - Horde Gunship Crash v2 - gunship -  ZTO,"local moveGunship = MoveData:Default()

moveGunship.pathID = gunshipPathID
moveGunship.speed = 30
moveGunship.posControl = MovePosControl.ConstantSpeed
moveGunship.yawControl = MoveRotControl.Tangent
moveGunship.pitchControl = MoveRotControl.Tangent
moveGunship.rollControl = MoveRotControl.Angle
moveGunship.isRelative = false
moveGunship.teleportToFirstPoint = true

gunship:Move( moveGunship )


gunship:WaitMovementComplete()  

Wait(30)

gunship:Despawn()
Wait(30)
scene:EndScene()"
1204,Turn Package - Build Boombot / Countdown / Detonate,"function Dispatcher_BuildBoombot( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )


	DefaultTurnBehaviour( ROID, isTurn, turn )

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);
end

function CreateObject_Boombot(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);
--print(""Makin a turret "",auraAbilityID,  "", player "",aura.playerID);
	local groundModel = fid(368987);

--	local object, playerID, slot, transform = RegisterObject( EnemyOf ( aura.playerID ), auraAbilityID, auraInstanceID)
--	local enemyPlayer = ROIDTOPLAYER( GETROIDFROMPLAYERID( EnemyOf( aura.playerID ) ) ) 

	local object, playerID, slot, transform = RegisterObject( aura.playerID , auraAbilityID, auraInstanceID)
	local enemyPlayer = ROIDTOPLAYER( GETROIDFROMPLAYERID( aura.playerID  ) ) 

	local baseScale = 0.2;
	local bonusScalePerRoundRemaining = 0

	local boombotCreateData = ActorCreateData:Default()
	boombotCreateData.creatureID = 65758;
	boombotCreateData.transform = Transform:New( enemyPlayer.home, 0 ) -- transform;
	boombotCreateData.name = GetGlobalString( ""BATTLE_PET_ABILITY_TEXT_OBJECT_BOOMBOT"" ) or ""Boombot [ph]"";
	boombotCreateData.scale = baseScale / 2;
 
	local boombot = scene:SpawnActor( boombotCreateData )
	object.actor = boombot;

	boombot:SetSnapToGround(true);
	boombot:WaitMoveToAbs ( transform.position, 2 );
	boombot:SetScale(baseScale)
	boombot:SetFacingToAbs( Vector:New(0,0,0) );


	local TEXT_3 = 66267;
	local TEXT_2 = 66454;
	local TEXT_1 = 66266;

	local startingTurns = aura.turnsRemaining+1;

	while ( aura.running ) do 
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			boombot:SetScale(scale);
		--end

		scene:WaitTimer(0.1);

		if ( aura.turnsRemaining < startingTurns ) then 
			startingTurns = aura.turnsRemaining;

			if ( aura.turnsRemaining == 3 ) then 
				boombot:BroadcastTextStereo( BroadcastType.Say, TEXT_3 )
			elseif ( aura.turnsRemaining == 2 ) then 
				boombot:BroadcastTextStereo( BroadcastType.Say, TEXT_2 )
			elseif ( aura.turnsRemaining == 1 ) then 
				boombot:BroadcastTextStereo( BroadcastType.Say, TEXT_1 )
			end
		end

	end

	while ( object.detonating == true ) do 
		scene:WaitTimer(0.1);
	end

	boombot:Fade(0,0.1);
	--print(""Killed the turret! "",q);

	boombot:Despawn();

	UnregisterObject(object.playerID, object.slot);
	
end

function Dispatcher_DetonateBoombot( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return; 
	end
	local caster = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);

	local targetROID = ResultToTargetROID(turn.effects[1].results[1])
	local target = ROIDTOPET( targetROID )

	local turnVisualID = turn.turnVisualID ;

	local missed = turn.effects[1].results[1].flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

	if ( not object) then 
		warning(""WARNING: MISSING OBJECT ACTOR, BOOMBOT!"");
	end

	-- Lock the object
	object.detonating = true;

	local boombot = object.actor;

	boombot:WaitMoveToAbs( attackPoint, attackPoint:Dist(boombot:GetPosition()) / 2 );

	-- Explosion
	castInstanceID = boombot:PlaySpellCastVisualAtPoints(27090, 0, true, { boombot:GetPosition()+Vector:New(0,0,1) } )

	-- Handle all "
1206,Kun Lai Summit - Yaungol Boss Scene - Generic Actors 01 - JSB,"
-- spawn lao-chin
local laochinCreatureID = 65766
LaoChin = SpawnActor( laochinCreatureID, 3070.25, 2856.68, 457.271, 137.128 )
FadeOut(LaoChin, 0)


-- spawn suna silentstrike
local sunaCreatureID = 65781
Suna = SpawnActor( sunaCreatureID, 3075.48, 2859.56, 459.228, 143.891 )
FadeOut(Suna, 0)


-- spawn ban bearheart
local banCreatureID = 65782
Ban = SpawnActor( banCreatureID, 3059.78, 2852.87, 458.764, 133.991 )
FadeOut(Ban, 0)

-- spawn lin silentstrike
local linCreatureID = 65771
Lin = SpawnActor( linCreatureID, 3037.62, 2891.2, 438.446, 132.641 )

-- spawn gong da
local gongdaCreatureID = 65780
GongDa = SpawnActor( gongdaCreatureID, 2937.71, 2989.48, 499.846, 318.626 )


-- spawn yangol
local yaungolCreatureID = 65764
Yaungol01 = SpawnActor( yaungolCreatureID, 3044.42, 2914.4, 434.843, 147.275 )
Yaungol02 = SpawnActor( yaungolCreatureID, 3019.6, 2906.92, 429.89, 131.75 )
Yaungol03 = SpawnActor( yaungolCreatureID, 3002.33, 2888.21, 429.071, 112.85 )
Yaungol04 = SpawnActor( yaungolCreatureID, 2983.14, 2905.45, 423.532, 113.75 )
Yaungol05 = SpawnActor( yaungolCreatureID, 2998.81, 2916.54, 423.69, 137.375 )
Yaungol06 = SpawnActor( yaungolCreatureID, 3019.57, 2921.26, 427.138, 142.1 )
Yaungol07 = SpawnActor( yaungolCreatureID, 3023.52, 2954.67, 422.636, 156.5 )
Yaungol08 = SpawnActor( yaungolCreatureID, 2973.62, 2921.22, 419.012, 114.425 )
Yaungol09 = SpawnActor( yaungolCreatureID, 2975.99, 2936.5, 417.247, 131.525 )
Yaungol10 = SpawnActor( yaungolCreatureID, 2993.52, 2954.73, 417.953, 152 )
Yaungol11 = SpawnActor( yaungolCreatureID, 2969.42, 2953.43, 414.584, 146.15 )
Yaungol12 = SpawnActor( yaungolCreatureID, 2988.91, 2970.96, 416.148, 159.65 )



-- spawn spearthrowers
local spearlauncherCreatureID = 65763
spearlauncher01 = SpawnActor( spearlauncherCreatureID, 2973.73, 2905.7, 422.207, 268 )
spearlauncher02 = SpawnActor( spearlauncherCreatureID, 2952.9, 2956.01, 412.755, 315.472 )
spearlauncher03 = SpawnActor( spearlauncherCreatureID, 3031.33, 2956.79, 424.042, 337 )

spearlauncher01:PlayLoopingAnimKit(730)
spearlauncher02:PlayLoopingAnimKit(730)
spearlauncher03:PlayLoopingAnimKit(730)

-- spawn corpses
local corpseCreatureID = 65764
Corpse01 = SpawnActor( corpseCreatureID, 3013.5, 2897.59, 430.491, 302.816 )
Corpse02 = SpawnActor( corpseCreatureID, 3020.95, 2883.55, 439.591, 333.225 )
Corpse03 = SpawnActor( corpseCreatureID, 2981.26, 2913.27, 421.549, 105.525 )
Corpse04 = SpawnActor( corpseCreatureID, 3047.74, 2924.26, 436.966, 2.69886 )
Corpse05 = SpawnActor( corpseCreatureID, 3000.23, 2969.58, 417.741, 16.6492 )
Corpse06 = SpawnActor( corpseCreatureID, 3030.81, 2933.5, 427.392, 268.875 )
Corpse07 = SpawnActor( corpseCreatureID, 3023.05, 2917.57, 428.721, 288.45 )
Corpse08 = SpawnActor( corpseCreatureID, 2993.07, 2901.61, 424.828, 308.7 )
Corpse09 = SpawnActor( corpseCreatureID, 2986.78, 2881.27, 427.802, 348.3 )
Corpse10 = SpawnActor( corpseCreatureID, 3012.28, 2873.2, 441.222, 355.95 )
Corpse11 = SpawnActor( corpseCreatureID, 2968.55, 2933.06, 416.691, 315.675 )
Corpse12 = SpawnActor( corpseCreatureID, 3012.69, 2932.14, 423.758, 337.05 )
Corpse13 = SpawnActor( corpseCreatureID, 2980.77, 2927.56, 419.076, 251.55 )
Corpse14 = SpawnActor( corpseCreatureID, 2998.93, 2955.02, 418.788, 9.89 )
Corpse15 = SpawnActor( corpseCreatureID, 2997.94, 2913.78, 424.047, 348.975 )
Corpse16 = SpawnActor( corpseCreatureID, 3025.14, 2922.94, 428.184, 340.425 )
Corpse17 = SpawnActor( corpseCreatureID, 3036.55, 2912.48, 433.166, 313.875 )

Corpse01:PlayLoopingAnimKit(730)
Corpse02:PlayLoopingAnimKit(730)
Corpse03:PlayLoopingAnimKit(730)
Corpse04:PlayLoopingAnimKit(730)
Corpse05:PlayLoopingAnimKit(730)
Corpse06:PlayLoopingAnimKit(730)
Corpse07:PlayLoopingAnimKit(730)
Corpse08:PlayLoopingAnimKit(730)
Corpse09:PlayLoopingAnimKit(730)
"
1208,MoP - Dread Wastes - Klaxxi'Vess Finale - Init - ZTO,"--Basic Creature model declarations
bunnyCreatureID = 62026
mantidCreatureID = 66036 -- Evil Mantid
shaFearID = 62837
--mantidSwarmPathIDs = { 4145, 4147, 4148, 4166, 4167, 4168 } 
--mantidSafeSwarmPathIDs = { 4166, 4167, 4168 } 
--mantidAttackPathIDs = { 4082, 4169, 4170, 4171 }

--Cameras and Camera Paths
mainCamera = 4174

--Klaxxi Council models
kekCreatureID = 62517
setCreatureID = 62518
vorCreatureID = 62519
zanCreatureID = 62521 
ikCreatureID = 65395
korCreatureID = 65396
krikCreatureID = 65397
sraCreatureID = 65398
tikCreatureID = 62203
lorCreatureID = 65149
ikHeadlessID = 65767

--Spawn casting Council
kek = SmoothPhaseSpawnActor(kekCreatureID, 238.432, 3189.17, 214.483, 131.387, 1, true)
sra = SmoothPhaseSpawnActor(sraCreatureID, 238.575, 3232.91, 214.483, 220.032, 1, true)
vor = SmoothPhaseSpawnActor(vorCreatureID, 193.932, 3189.92, 214.486, 47.694, 1, true)
zan = SmoothPhaseSpawnActor(zanCreatureID, 194.731, 3232.81, 214.483, 320.004, 1, true)

--Spawn flying council
set = SmoothPhaseSpawnActor(setCreatureID, 216.816, 3168.72, 222.756, 90.0797, 1, false)
krik = SmoothPhaseSpawnActor(krikCreatureID, 256.922, 3211.06, 222.564, 173.602, 1, false)
kor = SmoothPhaseSpawnActor(korCreatureID, 216.696, 3252.35, 222.698, 269.338, 1, false)


--Spawn Council head
ik = SmoothPhaseSpawnActor(ikCreatureID, 176.701, 3211.31, 215.276, 5.7294, 1, true)
ikHeadless = SpawnActor(ikHeadlessID, 176.701, 3211.31, 215.276, 0, 1, true)
FadeOut(ikHeadless, 0)

--Spawn Sha of Fear
shaFear = SpawnActor(shaFearID, 288.848, 3212.08, 214.657, 180.544, 2, false)
FadeOut(shaFear, 0)


--Spawn Beam Bunnies
tower1 = SpawnActor( bunnyCreatureID, 215.607635, 3210.365479, 260.878448, 0, 1, false)
tower2 = SpawnActor( bunnyCreatureID, 215.767365, 3210.300293, 257.805145, 0, 1, false)
towerTop = SpawnActor( bunnyCreatureID, 215.767365, 3210.300293, 257.805145, 0, 1, false)
towerPopTop = SpawnActor( bunnyCreatureID, 215.767365, 3210.300293, 270.805145, 0, 1, false)
towerFoundation = SpawnActor( bunnyCreatureID, 215.767365, 3210.300293, 270.805145, 0, 1, false)
--towerFoundation = SpawnActor( bunnyCreatureID, 215.767365, 3210.300293, 205.947, 0, 1, false) --old locaiton
corruptedTower = SpawnActor( bunnyCreatureID, 214.211, 3210.27, 267.565, 0, 1, false)
towerTarget = SpawnActor( bunnyCreatureID, 214.211, 3210.27, 300, 0, 1, false)
towerBase = SpawnActor( bunnyCreatureID, 211.881943, 3210.747314, 226.787582, 0, 1, false)
sonicTarget = SpawnActor( bunnyCreatureID, 211.881943, 3210.747314, 226.787582, 0, 1, false)
headBunny = SpawnActor( bunnyCreatureID, 179.425, 3211.31, 226.403, 0, 1, false)
towerTarget1 = SpawnActor( bunnyCreatureID, 212.865, 3208.94, 267.756, 194.5059, 1, false)
towerTarget2 = SpawnActor( bunnyCreatureID, 215.426, 3225.2, 258.091, 272.125, 1, false)
towerTarget3 = SpawnActor( bunnyCreatureID, 215.767365, 3210.300293, 257.805145, 180, 1, false)
towerTarget4 = SpawnActor( bunnyCreatureID, 227.053, 3206.64, 251.106, 163.006, 1, false)
towerTarget5 = SpawnActor( bunnyCreatureID, 214.552, 3205.35, 240.469, 249.8559, 1, false)
empressPortal = SpawnActor( bunnyCreatureID, 288.848, 3212.08, 214.657, 180.544, 2, false)
empressPortal2 = SpawnActor( bunnyCreatureID, 288.848, 3212.08, 214.657, 180.544, 8, false)
empressUR = SpawnActor( bunnyCreatureID, 265.777, 3227.63, 214.657, 180.544, 1, false)
empressLR = SpawnActor( bunnyCreatureID, 308.769, 3228.13, 214.657, 180.544, 1, false)
empressUL = SpawnActor( bunnyCreatureID, 266.067, 3197.08, 214.657, 180.544, 1, false)
towerExploderBunny = SpawnActor( bunnyCreatureID, 215.049, 3199.12, 213.958, 358.802, 1, false)
towerImpactBunny = SpawnActor( bunnyCreatureID, 221.876, 3210.35, 228.388, 356.112, 1, false)

currentLoc = scene:GetPosition()
audioBunny = SpawnActor( bunnyCreatureID, currentLoc.x, currentLoc.y, currentLoc.z, 356.112, "
1209,MoP - Dread Wastes - Klaxxi'Vess Finale - Function - ZTO,"function MantidWings(klaxxi)
	--actor:PlayLoopingFullBodyAnim(Animations.FlyStand)
	klaxxi:PlayLoopingAnimKit(1380)
	Wait(5)
	klaxxi:StopLoopingAnimKit(1380)
	--actor:StopLoopingFullBodyAnim(Animations.FlyStand)
	PlayOneShotSplitBodyAnim(klaxxi, Animations.FlySpellCastOmni)
	Wait(1)
	PlayLoopingSplitBodyAnim(klaxxi, Animations.FlyChannelCastOmni)
end

function MantidChannel(klaxxi)
	--This function takes an existing Klaxxi and applies appropriate auras and channels
	actorBeam = 
	{
		actor = klaxxi;
		sonicBeam = ChannelSpellVisualAtActor( klaxxi, mindMeldVisualID, tower2);
		sonicChannel = klaxxi:PlaySpellStateVisual(mindMeldVisualID);
	}
	return actorBeam
end 

function KillMantidChannel(klaxxi)
	ClearChannelSpellVisual(klaxxi.sonicBeam) -- Clear channel
	klaxxi.actor:ClearSpellVisual( klaxxi.sonicChannel) --Clear casting state
	CastSpellAtActor( klaxxi.actor, klaxxi.actor, shaBlast2, false) -- Sha burst on target
	--klaxxi.actor:PlayLoopingAnimKit(3024) --Animate a knockdown
end

function MissilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, 10)
	local spot2 = math.random(-10, 10)
	local spot3 = math.random(-10, 10) 

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(spot1, spot2, spot3)
	return missilePos
end

function FlipMantid(klaxxi)
	CastSpellAtActor( klaxxi.actor, klaxxi.actor, shaBlast2, false)
	ClearChannelSpellVisual(klaxxi.sonicBeam)
	klaxxi.actor:ClearSpellVisual( klaxxi.sonicChannel)
	local moveData = MoveData:Default()

	moveData.pathID = 4206
	moveData.speed = math.random(40,50)

	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Angle
	moveData.isRelative = true
	moveData.teleportToFirstPoint = false
	moveData.animKitID = 1395
	
--	klaxxi.actor:Move( moveData )

--	klaxxi.actor:WaitMovementComplete()
	MantidExplode(klaxxi.actor)
end

function MissilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, 10)
	local spot2 = math.random(-10, 10)
	local spot3 = math.random(-10, 10) 

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(spot1, spot2, spot3)
	return missilePos
end

function MantidExplode(explodingMantid)
	local casterPos = explodingMantid:GetPosition()
	local missilePos1 = MissilePosRand(casterPos) 
	local missilePos2 = MissilePosRand(casterPos)
	local missilePos3 = MissilePosRand(casterPos)
	local missilePos4 = MissilePosRand(casterPos)
	local missilePos5 = MissilePosRand(casterPos)
	local missilePos6 = MissilePosRand(casterPos)
	local missilePos7 = MissilePosRand(casterPos)
	local pointList1 = {missilePos1}
	local pointList2 = {missilePos2}
	local pointList3 = {missilePos3} 
	local pointList4 = {missilePos4}
	local pointList5 = {missilePos5} 
	local pointList6 = {missilePos6}   
	local pointList7 = {missilePos6}
	explodingMantid:PlaySpellCastVisualAtPoints(headID, 5, false, pointList1)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList2)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList3)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList4)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList5)
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList6) 
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList7)
	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBaseID, false )
	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBurstID, false )
	FadeOut(explodingMantid, 0.2)
end"
1210,MoP - Dread Wastes - Klaxxi'Vess Finale - Klaxxi Flyer - set - ZTO,"WaitForTrigger(""phase ready"")
set:PlaySpellStateVisual(27277) -- wing visual
PlayLoopingSplitBodyAnim(set, Animations.Fly)

--Wait for power up command
WaitForTrigger(""BeaconPowerStart"")
StopLoopingSplitBodyAnim(set, Animations.Fly)
PlayOneShotSplitBodyAnim(set, Animations.FlySpellCastOmni)
Wait(1)
PlayLoopingSplitBodyAnim(set, Animations.FlyChannelCastOmni)

setBeam = MantidChannel(set) -- casts beams at crystal

--Wait for kill command
WaitForTrigger(""shoot set"")
--KillMantidChannel(setBeam)
FlipMantid(setBeam)
--local shaTaintState = set:PlaySpellStateVisual(shaTaintAura) --Sha smoke trail
--PlayOneShotSplitBodyAnim( set, Animations.CombatCritical)"
1211,MoP - Dread Wastes - Klaxxi'Vess Finale - Klaxxi Flyer - kor - ZTO,"WaitForTrigger(""phase ready"")
kor:PlaySpellStateVisual(27277) -- wing visual
PlayLoopingSplitBodyAnim(kor, Animations.Fly)

--Wait for power up command
WaitForTrigger(""BeaconPowerStart"")
StopLoopingSplitBodyAnim(kor, Animations.Fly)
PlayOneShotSplitBodyAnim(kor, Animations.FlySpellCastOmni)
Wait(1)
PlayLoopingSplitBodyAnim(kor, Animations.FlyChannelCastOmni)

korBeam = MantidChannel(kor) -- casts beams at crystal

--Wait for kill command
WaitForTrigger(""shoot kor"")
KillMantidChannel(korBeam)
--MantidExplode(kor)
local shaTaintState = kor:PlaySpellStateVisual(shaTaintAura) --Sha smoke trail
PlayOneShotSplitBodyAnim( kor, Animations.CombatCritical)"
1212,MoP - Dread Wastes - Klaxxi'Vess Finale - Klaxxi Flyer - krik - ZTO,"WaitForTrigger(""phase ready"")
krik:PlaySpellStateVisual(27277) -- wing visual
PlayLoopingSplitBodyAnim(krik, Animations.Fly)


--Wait for power up command
WaitForTrigger(""BeaconPowerStart"")
StopLoopingSplitBodyAnim(krik, Animations.Fly)
PlayOneShotSplitBodyAnim(krik, Animations.FlySpellCastOmni)
Wait(1)
PlayLoopingSplitBodyAnim(krik, Animations.FlyChannelCastOmni)

krikBeam = MantidChannel(krik) -- casts beams at crystal

--Wait for kill command
WaitForTrigger(""shoot krik"")
--KillMantidChannel(krikBeam)
FlipMantid(krikBeam)
--local shaTaintState = krik:PlaySpellStateVisual(shaTaintAura) --Sha smoke trail
--PlayOneShotSplitBodyAnim( krik, Animations.CombatCritical)"
1213,MoP - Dread Wastes - Klaxxi'Vess Finale - Klaxxi Channeler - kek - ZTO,"WaitForTrigger(""phase ready"")
kekBeam = MantidChannel(kek)

--Wait for kill command
WaitForTrigger(""shoot klaxxi"")
Wait(1)
KillMantidChannel(kekBeam) -- Stop Channels and auras
MantidExplode(kek)

"
1214,MoP - Dread Wastes - Klaxxi'Vess Finale - Klaxxi Channeler - sra - ZTO,"WaitForTrigger(""phase ready"")
sraBeam = MantidChannel(sra)

--Wait for kill command
WaitForTrigger(""shoot klaxxi"")
KillMantidChannel(sraBeam) -- Stop Channels and auras
PlayOneShotSplitBodyAnim( sra, Animations.CombatCritical)
sra:PlaySpellStateVisual(shaTaintAura) --Sha smoke trail
	
sra:WaitMovementComplete() 

WaitForTrigger(""done"")
FadeOut(sra, 2)"
1215,MoP - Dread Wastes - Klaxxi'Vess Finale - Klaxxi Channeler - vor - ZTO,"WaitForTrigger(""phase ready"")
vorBeam = MantidChannel(vor)

--Wait for kill command
WaitForTrigger(""shoot klaxxi"")
KillMantidChannel(vorBeam) -- Stop Channels and auras
PlayOneShotSplitBodyAnim( vor, Animations.CombatCritical)
vor:PlaySpellStateVisual(shaTaintAura) --Sha smoke trail
vor:WaitMovementComplete() 



WaitForTrigger(""done"")
FadeOut(vor, 2)"
1216,MoP - Dread Wastes - Klaxxi'Vess Finale - Klaxxi Channeler - zan - ZTO,"WaitForTrigger(""phase ready"")
zanBeam = MantidChannel(zan)

--Wait for kill command
WaitForTrigger(""shoot klaxxi"")
Wait(1)
KillMantidChannel(zanBeam) -- Stop Channels and auras
MantidExplode(zan)"
1217,MoP - Dread Wastes - Klaxxi'Vess Finale - Master - ZTO,"local genericFOV90 = 368

WaitForTrigger(""phase ready"")
scene:WaitTimer(2)
scene:SetCamera(0,0,nil,nil)
--scene:SetFadeRegion(100, true)

SetCameraFollowPath( genericFOV90, 5, 4205, 4211, 17 )
--scene:SetCamera(449,3,nil,nil)
scene:WaitTimer(3)
SendTrigger(""BeaconPowerStart"")

--scene:SetCamera(450,3,nil,nil)

scene:WaitTimer(12)

SendTrigger(""beam"")
SetCameraFollowPath( genericFOV90, 7.5, 4212, 4175, 10 ) -- Pan to Ik for head explosion
WaitForTrigger(""exploded"")
scene:WaitTimer(4)

--SetCameraFollowPath( genericFOV90, 3, 4253, 4250, 1 ) --Pan to Empress (angled)
SetCameraFollowPath( genericFOV90, 0, 4249, 4250, 3 ) --Pan to Empress
--scene:SetCamera(466,0,nil,nil)
scene:WaitTimer(2)

SendTrigger(""Empress Exit"") 

scene:WaitTimer(3)
WaitForTrigger(""done"")

--Wait(30)
--scene:WaitTimer(3)
scene:SetCamera(0,0,nil,nil)
scene:SetFadeRegion(0, false)
scene:WaitTimer(1)
scene:EndScene()"
1218,Kun Lai Summit - Yaungol Boss Scene - MASTER - JSB,"
Wait( 1 )

scene:SetCamera(455,0,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 0.5 )

SendTrigger( ""LinRoar"" )

scene:SetCamera(456,5,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 3.5 )

scene:SetCamera(447,0,nil,nil) -- (camera, transition time, primary target, secondary target)

scene:SetCamera(448,20,nil,nil) -- (camera, transition time, primary target, secondary target)


Wait( 10 )

scene:SetCamera(457,2,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 1.5 )

SendTrigger( ""YaungolBossJump"" )

SetCameraFollowPath( 368, 0.5, 4176, 4177, 2 )

Wait( 5 )

scene:SetCamera(458,3,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 2 )

SendTrigger( ""Attack"" )

Wait( 6 )

scene:EndScene()"
1219,MoP - Dread Wastes - Klaxxi'Vess Finale - Ik - ZTO,"WaitForTrigger(""phase ready"")
--Casting visuals
local mindMeld = ChannelSpellVisualAtActor( ik, ikMindMeldBeamID, sonicTarget)
local mindMeldCast = ik:PlaySpellStateVisual(ikMindMeldStateID) -- Sha Desaturate

WaitForTrigger(""beam"")
Wait(3)
ik:PlaySpellStateVisual(27432) -- Sha Desaturate


--Wait for reveal
WaitForTrigger(""ikPrep"")
ClearChannelSpellVisual(mindMeld)
ik:ClearSpellVisual( mindMeldCast)
--Wait(0.5)
SendTrigger(""explodeHead"")
ik:PlaySpellStateVisual(27427) -- Headless Ik aura
ik:PlaySoundKitStereo(33240, true) --Exploding sound
--Wait(0.5)
ik:PlayLoopingAnimKit(3029) --Death Scene
SendTrigger(""exploded"")  

"
1220,MoP - Dread Wastes - Klaxxi'Vess Finale - IkHeadless - ZTO,"WaitForTrigger(""phase ready"")
ikHeadless:PlaySpellStateVisual(25591) -- Sha Desaturate

--Wait for reveal
WaitForTrigger(""explodeHead2"")
FadeIn(ikHeadless, 0) -- Swap places with existing Ik
ikHeadless:PlaySpellStateVisual(27427) -- Headless Ik aura
Wait(0.5)
PlayOneShotSplitBodyAnim( ikHeadless, Animations.Death)
PlayLoopingSplitBodyAnim( ikHeadless, Animations.Dead)
SendTrigger(""exploded"")  "
1221,Critter - Swarm of Flies,"function Critter_SwarmOfFlies(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(166241);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0.5)
	
	local baseScale = 0.05;
	local bonusScalePerRoundRemaining = 0.01;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0) )

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1222,MoP - Dread Wastes - Klaxxi'Vess Finale - sonicTarget - ZTO,"WaitForTrigger(""phase ready"")

--WaitForTrigger
WaitForTrigger(""beam"")
FadeIn(sonicTarget, 1)
local shaburst = sonicTarget:PlaySpellStateVisual(beamBattleStateID)
local beam = ChannelSpellVisualAtActor( sonicTarget, shaChannelBeamID, towerBase )
--local beam = sonicTarget:PlaySpellStateVisual(shaChannelBeamID2)
RunToLocation(sonicTarget, 3, 188.014, 3210.66, 223.521, 180, false)
sonicTarget:WaitMovementComplete()
SendTrigger(""ikPrep"")
FadeOut(sonicTarget, 1)
ClearChannelSpellVisual(beam)
sonicTarget:ClearSpellVisual( shaburst)
sonicTarget:Despawn()"
1223,Flying - Wild Winds,"function Flying_WildWinds ( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )
	DefaultTurnBehaviour( ROID, isTurn, turn )

	-- Reset/reposition
	Dispatcher_PerformPostAttackCleanup( ROID );
end

function CreateObject_WildWinds(model, baseScale, bonusScalePerRoundRemaining, ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)
  
	local pad = ROIDTOPET(ROID);
--print(""Makin a turret "",auraAbilityID,  "", player "",aura.playerID);
	local groundModel = model;

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local enemyPlayer = ROIDTOPLAYER( GETROIDFROMPLAYERID( EnemyOf ( aura.playerID ) ) ) 

	--local baseScale = 0.25;
	--local bonusScalePerRoundRemaining = 0.05;

	local windCreateData = ActorCreateData:Default()
	windCreateData.modelFileID = groundModel;
	windCreateData.transform =  pad.actor:GetTransform(); --Transform:New( enemyPlayer.home, 0 ) -- transform;
	windCreateData.name = GetGlobalString( ""BATTLE_PET_ABILITY_TEXT_OBJECT_BOOMBOT"" ) or ""Wild Winds"";
	windCreateData.interactible = false;
	windCreateData.scale = baseScale / 4;
 
	local wind = scene:SpawnActor( windCreateData )
	object.actor = wind;

	wind:SetSnapToGround(true);

	local moveTime = 2
	wind:MoveToAbs(transform.position, moveTime)
	scene:WaitTimer(moveTime)

	wind:SetScale(baseScale / 2)
	wind:SetFacingToAbs( Vector:New(0,0,0) );

	local wanderRadius = 1.5;
	local q = 1;
 
	while ( aura.running and q < 1000 ) do 

		if ( object.attacking == true ) then
			q = q + 0.1
			scene:WaitTimer(0.1);
		else
			local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
			--if ( groundActor:GetScale() ~= scale ) then 
				wind:SetScale(scale / 2);
			--end

			q = q + 1;
			scene:WaitTimer(1);

			if( not wind:IsMoving() ) then 
				local angle = math.random(0,359)
				local windSpeed = 1;
				local newPosition = transform.position + Vector:New( math.sin(angle/180*math.pi)*wanderRadius, math.cos(angle/180*math.pi)*wanderRadius, 0 );

				wind:MoveToAbs( newPosition, newPosition:DistXY( wind:GetPosition() ) / windSpeed );
			end
		end
	end

	wind:Fade(0,0.1);
	--print(""Killed the turret! "",q);

	while ( object.attacking == true ) do 
		scene:WaitTimer(0.1);
	end

	wind:SetScale(0.01);

	scene:WaitTimer(2);

	wind:Despawn();

	UnregisterObject(playerID, slot);
	
end

function Flying_WildWindAttack( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return; 
	end
	local caster = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObjectByAbilityID( EnemyOf ( caster.playerID ), turn.abilityID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);

	local turnVisualID = turn.turnVisualID ;

	-- Lock the object to not despawn
	object.attacking = true;

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;


	local success = function( index )
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( objectROID, effect, turnVisualID, WildWinds_Success)
		DefaultDoEffectProcessing( objectROID, ""effect"", effect ); 
	end

	function WindRush(effectIndex) 
		local targetROID = GetMoveToROID( turn.effects[effectIndex] ); 
		local target =  ROIDTOUNIT( targetROID );

		if ( not object ) then
			return;
		end

		local sourcePosition, targetPosition = target.actor:GetPosition(), object.actor:GetPosition();

		if ( "
1224,Kun Lai Summit - Yaungol Boss Scene - Yaungol02 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol02, 10, 2987.91, 2937.41, 418.767, 134.225 )
RunToLocation( Yaungol02, 10, 2946.88, 2976.39, 412.064, 136.475 )
RunToLocation( Yaungol02, 10, 2884.93, 3023.59, 411.038, 146.375 )

Yaungol02: Despawn()"
1225,[1] Flying - Wild Winds,"target and target.states and target.states[STATE_FLYING] and target.states[STATE_FLYING] > 0 ) then
			local targetPlayer = ROIDTOPLAYER( targetROID );

			sourcePosition = targetPlayer.home;
		end

		local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )
		local attackPoint = LocalToWorldCoords( Vector:New( -1.5, 0, 0 ) );

		local windSpeed = 5;

		local wind = object.actor;

		wind:MoveToAbs( attackPoint, attackPoint:DistXY(wind:GetPosition()) / windSpeed );


		local hitAlready = false;

		repeat
			local dist = wind:GetPosition():DistXY( target.actor:GetPosition() )

			if ( dist < 0.5 ) then 
				success(effectIndex);
				hitAlready = true;
			end

			scene:WaitTimer(0.1);
		until ( wind:IsMoving() == false or hitAlready == true );

		wind:WaitMovementComplete();
	end

	-- Cleanup
	for i=1, #turn.effects do
		WindRush(i)
	end

	DefaultTurnCleanUp(ROID);

	-- Signal the object to be OK to despawn
	object.attacking = nil;
end


function WildWinds_Success( victimROID, attackerROID, visualID ) 

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactVerticalKnockback, attackerROID, 2, 0.75); 
end"
1226,Kun Lai Summit - Yaungol Boss Scene - Yaungol01 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol01, 10, 3005.53, 2938.43, 421.316, 148.4 )
RunToLocation( Yaungol01, 10, 2966.75, 2970.19, 412.839, 140.3 )
RunToLocation( Yaungol01, 10, 2888.31, 3039.25, 411.068, 136.25 )

Yaungol01: Despawn()"
1227,Kun Lai Summit - Yaungol Boss Scene - Yaungol03 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol03, 10, 2974.74, 2950.17, 415.585, 114.425 )
RunToLocation( Yaungol03, 10, 2945.92, 2969.56, 412.176, 143.9 )
RunToLocation( Yaungol03, 10, 2891.45, 3021.7, 411.063, 136.25 )

Yaungol03: Despawn()"
1228,Kun Lai Summit - Yaungol Boss Scene - Yaungol04 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol04, 10, 2945.75, 2956.26, 412.347, 126.35 )
RunToLocation( Yaungol04, 10, 2937.91, 2986.49, 411.475, 113.75 )
RunToLocation( Yaungol04, 10, 2886.5, 3028.18, 411.02, 141.65 )

Yaungol04: Despawn()"
1229,Kun Lai Summit - Yaungol Boss Scene - Yaungol05 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol05, 10, 2965.74, 2956.47, 413.819, 129.275 )
RunToLocation( Yaungol05, 10, 2945.13, 2970.53, 412.166, 145.7 )
RunToLocation( Yaungol05, 10, 2886.71, 3036.38, 410.931, 131.75 )

Yaungol05: Despawn()"
1230,Kun Lai Summit - Yaungol Boss Scene - Yaungol06 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol06, 10, 2965.89, 2968.71, 412.827, 139.625 )
RunToLocation( Yaungol06, 10, 2892.29, 3022.38, 411.035, 143.9 )
-- RunToLocation( Yaungol06, 8, 2886.71, 3036.38, 410.931, 131.75 )

Yaungol06: Despawn()"
1231,Kun Lai Summit - Yaungol Boss Scene - Yaungol07 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol07, 10, 2976.94, 2974.06, 414.101, 157.4 )
RunToLocation( Yaungol07, 10, 2947.26, 2989.25, 411.607, 152.675 )
RunToLocation( Yaungol07, 10, 2893.76, 3035.47, 411.154, 139.4 )

Yaungol07: Despawn()"
1232,Kun Lai Summit - Yaungol Boss Scene - Yaungol08 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol08, 10, 2945.79, 2956.08, 412.365, 128.6 )
RunToLocation( Yaungol08, 10, 2942.96, 2978.56, 412.071, 110.15 )
RunToLocation( Yaungol08, 10, 2882.33, 3027.88, 410.788, 139.175 )

Yaungol08: Despawn()"
1233,Kun Lai Summit - Yaungol Boss Scene - Yaungol09 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol09, 10, 2966.9, 2967.97, 412.985, 107.9 )
RunToLocation( Yaungol09, 10, 2893.29, 3028.47, 411.117, 139.85 )
-- RunToLocation( Yaungol09, 8, 2882.33, 3027.88, 410.788, 139.175 )

Yaungol09: Despawn()"
1234,Kun Lai Summit - Yaungol Boss Scene - Yaungol10 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol10, 10, 2937.62, 2990.58, 411.357, 146.825 )
RunToLocation( Yaungol10, 10, 2885.21, 3028.55, 410.925, 144.125 )
-- RunToLocation( Yaungol10, 8, 2882.33, 3027.88, 410.788, 139.175 )

Yaungol10: Despawn()"
1235,Kun Lai Summit - Yaungol Boss Scene - Yaungol12 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol12, 10, 2943.19, 2990.17, 411.434, 156.95 )
RunToLocation( Yaungol12, 10, 2914.92, 3011.8, 411.107, 142.1 )
RunToLocation( Yaungol12, 10, 2890.47, 3035.72, 411.099, 134.9 )

Yaungol12: Despawn()"
1236,Kun Lai Summit - Yaungol Boss Scene - Yaungol11 - JSB,"
Wait( 2.5 )

RunToLocation( Yaungol11, 10, 2947.31, 2968.26, 412.136, 146.15 )
RunToLocation( Yaungol11, 10, 2917, 3005.31, 411.266, 128.375 )
RunToLocation( Yaungol11, 10, 2885.34, 3035.62, 410.835, 138.95 )

Yaungol11: Despawn()"
1237,MoP - Dread Wastes - Klaxxi'Vess Finale - headBunny- ZTO,"WaitForTrigger(""phase ready"")
local casterPos = headBunny:GetPosition()
local missilePos1 = MissilePosRand(casterPos) 
local pointList1 = {missilePos1}

--Wait for Head Exploding Trigger
WaitForTrigger(""explodeHead"")
CastSpellAtActor(ik, ik, mantidHeadExplosion, false) --Explode Head
--CastSpellAtActor(ik, ik, mantidExplosionBurstID2, false) --Explode Head
headBunny:PlaySpellCastVisualAtPoints(headID, 5, false, pointList1)"
1238,Kun Lai Summit - Yaungol Boss Scene - Lin Silentstrike - JSB,"
WaitForTrigger ( ""LinRoar"" )

-- Lin EmoteRoar

PlayOneShotSplitBodyAnim( Lin, Animations.EmoteRoar )

Wait( 2.5 )

RunToLocation( Lin, 9, 2993.26, 2940.23, 419.237, 130.166 )
RunToLocation( Lin, 9, 2950.63, 2984.39, 411.829, 133.991 )
RunToLocation( Lin, 9, 2892.34, 3030.52, 411.145, 141.641 )

Lin: Despawn()"
1239,[1] Brazie's PetBattle - Dispatcher - Visuals - Knockbacks,"attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformHomeKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactSlide( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then  
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformSlide( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end

---

function PerformBump( victim, attacker, distance, time ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	local power = (distance or 3) * 10;

	local front = -math.random(power,power)*.025;
	local left = math.random(-power,power)*.025;
	local up = 0;

	DebugPrint(""slide"")		
	
	victim.actor:PlayOneShotSplitBodyAnim(Animations.CombatWound)

	PerformRelativeSlide( victim, attacker, front, left, up, time );

	victim.actor:WaitMovementComplete()
end


function PerformKnockback( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end
	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	--scene:WaitTimer(0.3)

	DebugPrint(""knock"")		
	--opponent.actor:AddDamageText(nil, damage, false, false)
	local opponentFinalPoint 	= CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;

	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveSplineAbs( 
			BuildKnockbackSpline( victim.actor:GetPosition(), opponentFinalPoint, time), time )
	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 

-- Performs a knockback from the victim's home point
function PerformHomeKnockback( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end
	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	--scene:WaitTimer(0.3)

--Print(""Home Based Knockback2"")		
	--opponent.actor:AddDamageText(nil, damage, false, false)
	local team = ROIDTOPLAYER(PETTOROID(victim));
	
	local opponentFinalPoint 	= CalculateLocationFacingRelativeOffset(victim, team.home, front, left, up);

--Print(""Home Based Knockback3"")		
	--CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;

--Print(""Home Based Knockback4"")		
--Print(""Por?""..time);
	victim.actor:SetSnapToGround(false)
	local "
1240,MoP - Dread Wastes - Klaxxi'Vess Finale - clone - ZTO,"--Wait(2)
--FadeIn(clone, 2)"
1241,Beast - Throw Barrel,"function Dispatcher_BuildBarrel( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )

	-- Skitter around building the object
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
		--Print(""ROCKET BUILD!!"");

		local numPoints = 6;
		local doEffectsOnPoint = 2;
		local visual = 156;

		local slot, transform = FindNextObjectSlot( caster.playerID ) 
		local location = transform.position;

		Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

		return;
	else
--Print(""Toss barrel"");
		local auraInstanceId = turn.firstEvent.auraInstanceID;

		--DEBUG_TABLE ( turn.effects[1].results );

		local object, playerID, slot, transform = FindObject( auraInstanceId )

		--Print(""ROCKET LAUNCH!!!"");

		if ( object ) then 
			--Print( ""I FOUND A ROCKET"");

			local visuals = true;

			-- Move into position
			--DefaultTurnPreEffectMovement(ROID, turn )

			local pet = ROIDTOPET(ROID);
			if ( not pet or (pet and pet.isPad) ) then
				return;
			end

			local targetROID = ResultToTargetROID(turn.effects[1].results[2])
			local target = ROIDTOPET( targetROID )

			--[[
			local finalPoint = frontVector * -1*battleScale;
			local finalAttackPoint = opponentLocation + finalPoint;
			--]] 

			local turnVisualID = turn.turnVisualID ;

			-- Approach the Barrel

			local sourcePosition, targetPosition = object.actor:GetPosition(), pet.actor:GetPosition()

			local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )
			local walkToPoint = LocalToWorldCoords( Vector:New( 1, 0, 0 ) );
--print(""Go to the barrel."") 
			pet.actor:WaitMoveToAbs( walkToPoint, walkToPoint:Dist(pet.actor:GetPosition()) / pet.moveSpeed );

			-- Pickup The Barrel
			local BARREL_LIFT_ANIM_KIT = 2951;
			local kit = pet.actor:PlayAnimKit( BARREL_LIFT_ANIM_KIT, false, Animations.Attack1H );

			 -- Move the Barrel
			object.actor:SetSnapToGround(false)
			object.actor:MoveToAbs(LocalToWorldCoords(Vector:New(1,0,1)), 0.6)

			scene:WaitTimer(0.6);

			pet.actor:SetFacingToTarget( target.actor, Vector:New() );
			scene:WaitTimer(0);

			-- Toss the Barrel
			kit:Stop();


		-- I'm too lazy to rewrite the whole event parser for this, so I'm just swapping the result order.

		turn.effects[1].results[1], turn.effects[1].results[2] = turn.effects[1].results[2], turn.effects[1].results[1];

		local missed = turn.effects[1].results[1].flags.miss;
		local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
		
		local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, object.actor, attackPoint, 1)

		-- When you pass the test the first time
		local success = function()
			local effect = turn.effects[1];
			DefaultEffectVisualHandler( ROID, effect, turn.turnVisualID, Barrel_Success );
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end

		-- Convert world space into local space to land back on your home spot
		local sourcePosition, targetPosition = object.actor:GetPosition() - Vector:New(0,0,object.actor:GetPosition().z), attackPoint;
		local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

		local player = ROIDTOPLAYER(ROID);
		local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

		-- Scale the spline by the distance target for the outgoing part
		local distToTarget = sourcePosition:Dist( targetPosition );

		-- New Spline START
		local moveData = MoveData:Default(4)
		moveData.isGroundSnapping = false;	
		moveData.posControl = MovePosControl.PointSpeed
		"
1242,[1] Beast - Throw Barrel,"moveData.pitchControl = MoveRotControl.None
		moveData.rollControl = MoveRotControl.None
		moveData.yawControl = MoveRotControl.Tangent

		moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0*distToTarget, 0, 0 ) );
		moveData.points[1].speed = 7
		moveData.points[2].pos = LocalToWorldCoords ( Vector:New(0.5*distToTarget, 0, distToTarget*0.25) );
		moveData.points[2].speed = 7
		moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
		moveData.points[3].speed = 7
		moveData.points[4].pos = LocalToWorldCoords ( Vector:New(1.2*distToTarget, 0, 0) );
		moveData.points[4].speed = 7

		local stretch = false;
		local splineDuration = 2;

		object.actor:ClearFacing();

		local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
		Spline_Attack2( test, success, finish, moveData, stretch, object.actor, attackPoint )

		object.actor:ClearSpellVisual( visKit)

			scene:WaitTimer(2);
		end

	end 

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end

function CreateObject_Barrel(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);

	local groundModel = ""WORLD\\GENERIC\\PASSIVEDOODADS\\BARREL\\BarrelLowPoly.M2"";

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = transform.position + Vector:New(0,0,-5)
	
	local baseScale = 0.5;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local barrel, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 0), 
			false )

	object.actor = barrel;

	barrel:WaitMoveToAbs ( transform.position, 2 );
	barrel:SetSnapToGround(true);

	local q = 1
 
	while ( aura.running and q < 1000 ) do 
		q = q + 1;
--[[
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end
]]--
		scene:WaitTimer(0.1);
	end

	barrel:Fade(0,0.1);
	--print(""Killed the rocket! "",q);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function Barrel_Success( victimROID, attackerROID, visualID ) 

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 5, 1); 
end
"
1243,MoP - Dread Wastes - Klaxxi'Vess Finale - tower - ZTO,"WaitForTrigger(""phase ready"")
local mantidGlow = towerTop:PlaySpellStateVisual(27269) --Sonic Visual

--Wait for power up
WaitForTrigger(""BeaconPowerStart"")
FadeIn(towerTop, 5)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
Wait(1)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
Wait(1)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
Wait(1)
SendTrigger(""BeaconFire"")
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
Wait(1)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
Wait(1)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
CastSpellAtActor( towerTop, towerTarget, ikMissile, false)
Wait(1)

--Wait for kill switch
WaitForTrigger(""BeaconCorrupt"")
FadeOut(towerTop, 1)"
1244,MoP - Dread Wastes - Klaxxi'Vess Finale - corruptedTower - ZTO,"WaitForTrigger(""phase ready"")
local shaGlow = corruptedTower:PlaySpellStateVisual(corruptedTowerVisualID) --Sonic Visual

--Wait for power up
WaitForTrigger(""BeaconCorrupt"")
FadeIn(corruptedTower, 5)
--Wait(8)
SendTrigger(""BeaconDone"")

--Wait for kill switch
WaitForTrigger(""CorruptLightFade"")
FadeOut(corruptedTower, 1)"
1245,Kun Lai Summit - Yaungol Boss Scene - Lao Chin - JSB,"
WaitForTrigger ( ""LinRoar"" )
Wait( 7 )

FadeIn(LaoChin, 0)
LaoChin:PlaySpellStateVisual(24332)

RunToLocation( LaoChin, 8, 3044.36, 2886.92, 441.53, 137.816 )
PlayOneShotSplitBodyAnim( LaoChin, Animations.EmotePointNoSheathe )

WaitForTrigger ( ""Attack"" )


LaoChin:BroadcastTextStereo(BroadcastType.Say, 61567)
LaoChin:PlayOneShotFullBodyAnim(Animations.EmotePoint)
Wait( 3 )

RunToLocation( LaoChin, 8, 3021.44, 2908.51, 430.031, 135.351 )"
1246,MoP - Dread Wastes - Klaxxi'Vess Finale - shaFear- ZTO,"WaitForTrigger(""phase ready"")
shaFear:PlaySpellStateVisual(empressVisual) --Sha visual
PlayLoopingSplitBodyAnim(shaFear, Animations.ReadySpellDirected)

-- Cue Sha of Fear
WaitForTrigger(""cueEmpress"")
FadeIn(shaFear, 2)
shaFear:Fade(0.75, 2)
Wait(2)
shaFear:BroadcastTextStereo(BroadcastType.Say, 67111) -- VO Line 1 (Introduction)
SendTrigger(""audioBunny - tempo change"")
--RunToLocation(shaFear, 6, 246.499, 3213.98, 214.674, 180, false)
Wait(2)
PlayLoopingSplitBodyAnim(shaFear, Animations.ChannelCastDirected)
local empressBeam = ChannelSpellVisualAtActor( shaFear, shaChannelBeamID, towerBase )
local empressBeamImpact = towerImpactBunny:PlaySpellStateVisual( shaBurstID )
SendTrigger(""shoot klaxxi"")

--CastSpellAtActor( shaFear, towerTop, shaBlast)
--Wait(2)
CastSpellAtActor( towerPopTop, towerPopTop, shaExplosion, false)
CastSpellAtActor( towerExploderBunny, towerExploderBunny, shaExplosion, false)
SendTrigger(""shoot krik"")
CastSpellAtActor( towerTop, towerTop, shaExplosion, false)
CastSpellAtActor( tower1, tower1, shaExplosion, false)
Wait(1)
CastSpellAtActor( towerTarget1, towerTarget1, shaExplosion, false)
tower1:PlaySpellStateVisual(shaBaseID1) --Tower Corruption
Wait(1) 
SendTrigger(""shoot set"")
SendTrigger(""BeaconCorrupt"")
CastSpellAtActor( towerTarget2, towerTarget2, shaExplosion, false)
towerBase:PlaySpellStateVisual(shaBaseID1) --Tower Corruption
Wait(1)
SendTrigger(""shoot kor"")
CastSpellAtActor( towerTarget3, towerTarget3, shaExplosion, false)
tower2:PlaySpellStateVisual(shaBaseID1) --Tower Corruption
Wait(1)

--Wait for ik to Explode
WaitForTrigger(""explodeHead"")
ClearChannelSpellVisual(empressBeam)
towerImpactBunny:ClearSpellVisual( empressBeamImpact) --Clear casting state
Wait(2)
shaFear:BroadcastTextStereo(BroadcastType.Say, 67347) -- VO Line 2 (Introduction)
shaFear:PlayLoopingAnimKit(3089)
--PlayLoopingSplitBodyAnim(shaFear, Animations.ReadySpellDirected)

--Wait for exit queue
WaitForTrigger(""Empress Exit"")
shaFear:PlayOneShotAnimKit(3090)
shaFear:PlaySoundKitStereo(33270, true) --Battleroar
Wait(3)
FadeOut(shaFear, 1)
SendTrigger(""ShaFade"")"
1247,[1] Kun Lai Summit - Yaungol Boss Scene - Generic Actors 01 - JSB,"Corpse10:PlayLoopingAnimKit(730)
Corpse11:PlayLoopingAnimKit(730)
Corpse12:PlayLoopingAnimKit(730)
Corpse13:PlayLoopingAnimKit(730)
Corpse14:PlayLoopingAnimKit(730)
Corpse15:PlayLoopingAnimKit(730)
Corpse16:PlayLoopingAnimKit(730)
Corpse17:PlayLoopingAnimKit(730)

"
1248,Kun Lai Summit - Yaungol Boss Scene - Ban Bearheart - JSB,"
WaitForTrigger ( ""LinRoar"" )
Wait( 7 )

FadeIn(Ban, 0)


RunToLocation( Ban, 8, 3041.07, 2883.53, 441.585, 135.791 )
PlayLoopingSplitBodyAnim( Ban, Animations.Ready1H )

WaitForTrigger ( ""Attack"" )

Wait( 4 )

RunToLocation( Ban, 8, 3006.95, 2903.76, 427.56, 120.502 )


"
1249,Kun Lai Summit - Yaungol Boss Scene - Suna Silentstrike - JSB (copy),"
WaitForTrigger ( ""LinRoar"" )
Wait( 7 )

FadeIn(Suna, 0)


RunToLocation( Suna, 8, 3048.72, 2889.63, 442.563, 203.302 )
PlayLoopingSplitBodyAnim( Suna, Animations.Ready1H )

WaitForTrigger ( ""Attack"" )

Wait( 4 )

RunToLocation( Suna, 8, 3028.07, 2914.42, 430.631, 148.852 )


"
1250,Kun Lai Summit - Yaungol Boss Scene - Gong Da - JSB,"
Wait( 2 )

GongDa:PlaySoundKitStereo(32827, true)

WaitForTrigger( ""YaungolBossJump"" )

GongDa:SetSnapToGround(false)

GongDa:PlayLoopingFullBodyAnim(Animations.Jump)

GongDa:FollowPath( 4178, 2.1 )
GongDa:SetSnapToGround(true)

Wait( 2 )
GongDa:StopLoopingFullBodyAnim()

CastSpellAtActor( GongDa, GongDa, 44468 )

local shakeOrigin01 = Vector:New(2977.66, 2953.32, 415.678)
shakeX = scene:AddCameraEffect( 32, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin01, nil, 1 )

GongDa:PlayOneShotAnimKit(2958)
Wait( 2 )

GongDa:PlayOneShotAnimKit(2959)

Wait( 6 )

RunToLocation( GongDa, 8, 3012.82, 2916.71, 426.389, 315.351 )
"
1251,MoP - Kun-Lai Summit - Zouchin Invasion - Init - ZTO,"--paths
vanguardPaths = { 4182, 4183, 4184 }
skirmisherPaths = { 4185 }

--Lorewalker Cho
choCreatureID = 61897
cho = SpawnActor(choCreatureID, 4406.11, 939.109, 116.087, 83.4027, 1, true)

--Trolls
trollBerserkerCreatureID = 62299
leader1 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
leader2 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
leader3 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher1 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher2 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher3 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher4 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher5 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher6 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher7 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher8 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher9 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher10 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
skirmisher11 = SpawnActor(trollBerserkerCreatureID, 4429.13, 787.701, 78.9935, 0, 1, true)
trollRunSpeed = 8

--Defenders
zouchinDefenderCreatureID = 62296
zouchinArcherCreatureID = 62247
defender1 = SpawnActor(zouchinDefenderCreatureID, 4340.83, 862.288, 108.065, 326.617, 1, true)
defender2 = SpawnActor(zouchinDefenderCreatureID, 4407.52, 872.566, 101.065, 257.541, 1, true)
defender3 = SpawnActor(zouchinDefenderCreatureID, 4329.35, 853.448, 118.098, 35.6908, 1, true)
defender4 = SpawnActor(zouchinDefenderCreatureID, 4390.27, 927.396, 105.755, 273.066, 1, true)
defendersStatic = SpawnActorsAtPoints(zouchinDefenderCreatureID, 4193, true)
archersStatic = SpawnActorsAtPoints(zouchinArcherCreatureID, 4194, true)

--Elders
elderChiCreatureID = 62970
elderHuoCreatureID = 62971

elderChi = SpawnActor(elderChiCreatureID, 4408.88, 942.8, 115.99, 228.367, 1, true)
elderHuo = SpawnActor(elderHuoCreatureID, 4410.98, 939.712, 115.988, 187.192, 1, true)

FadeOut(elderChi, 0)
FadeOut(elderHuo, 0)

SendTrigger(""cue Music"")
--SpawnPlayerClone
--playerLoc = scene:GetPosition()
--playerX = playerLoc.x
--playerY = playerLoc.y
--playerZ = playerLoc.z
--playerFacing = scene:GetFacing()
--player = SpawnActivePlayerCloneActor( playerX, playerY, playerZ, 180, 1, false ) 
--player:SetFacingToAbs(Vector:New(4406.11, 939.109, 116.087))"
1252,MoP - Kun-Lai Summit - Zouchin Invasion - Master - ZTO,"--Cameras
local genericFOV90 = 368 


--scene:WaitTimer(2)

scene:SetCamera(0,0,nil,nil)

scene:SetCamera(454,1,nil,nil)
Wait(1)
--scene:SetFadeRegion(100, true)

SetCameraFollowPath( genericFOV90, 3, 4179, 4180, 20 )

scene:WaitTimer(20)
SendTrigger(""elders"")
scene:WaitTimer(3)

scene:SetCamera(0,2,nil,nil)

--Wait(30)
scene:WaitTimer(2)
SendTrigger(""Music End"")
scene:WaitTimer(1)
--scene:SetFadeRegion(0, false)
scene:EndScene()"
1253,MoP - Kun-Lai Summit - Zouchin Invasion - elderChi - ZTO,"PlayLoopingSplitBodyAnim(elderChi, Animations.Cower)
Wait(10)
FadeIn(elderChi, 2) -- Wait until camera has moved on before revealing character

--Wait for trigger
WaitForTrigger(""elders"")
StopLoopingSplitBodyAnim(elderChi, Animations.Cower)
elderChi:FollowPathAtSpeed(4181, 6)
elderChi:WaitMovementComplete()
elderChi:Despawn()"
1254,MoP - Kun-Lai Summit - Zouchin Invasion - elderHuo - ZTO,"PlayLoopingSplitBodyAnim(elderHuo, Animations.Cower)
Wait(10)
FadeIn(elderHuo, 2) -- Wait until camera has moved on before revealing character

--Wait for trigger
WaitForTrigger(""elders"")
StopLoopingSplitBodyAnim(elderHuo, Animations.Cower)
elderHuo:FollowPathAtSpeed(4181, 6)
elderHuo:WaitMovementComplete()
elderHuo:Despawn()"
1255,MoP - Kun-Lai Summit - Zouchin Invasion - Cho - ZTO,"--Vanishing Cho
Wait(10) -- Wait for camera to look the other way
cho:SetFacing(206)
PlayLoopingSplitBodyAnim(cho, Animations.ReadyUnarmed)"
1256,MoP - Kun-Lai Summit - Zouchin Invasion - Functions - ZTO,"--Summon Skirmishers
skirmishers = {}

function SummonSkirmisher(skirmisherID, pathID)
	while true do

		scene:WaitTimer(math.random(5, 10))

		local skirmisher = SpawnActor( trollBerserkerCreatureID, 0, 0, 0, 0, 1, false )
		skirmishers[skirmisherID] =
		{
			actor = skirmisher;
			id = skirmisherID
		}

		local speed = math.random(8,12)
		local pathID = skirmisherPaths[math.random(#skirmisherPaths)]

		while (skirmishers[skirmisherID]) do

			-- move on a linear path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			
			skirmisher:Move( moveData )

			skirmisher:WaitMovementComplete()
			PlayLoopingSplitBodyAnim( skirmisher, Animations.ReadyUnarmed )

		end
		
	end

end"
1257,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher1 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher1:FollowPathAtSpeed(4185, trollRunSpeed)
skirmisher1:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher1, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher1, Animations.Attack1H) -- Assault a defender
PlayLoopingSplitBodyAnim( defender1, Animations.Parry2H) --Defender responds to attack"
1258,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher2 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher2:FollowPathAtSpeed(4186, trollRunSpeed)
skirmisher2:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher2, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher2, Animations.Attack1H) -- Assault a defender
PlayLoopingSplitBodyAnim( defender2, Animations.Parry2H) --Defender responds to attack"
1259,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher3 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher3:FollowPathAtSpeed(4187, trollRunSpeed)
skirmisher3:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher3, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher3, Animations.Attack1H) -- Assault a defender
PlayLoopingSplitBodyAnim( defender3, Animations.Parry2H) --Defender responds to attack"
1260,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher4 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher4:FollowPathAtSpeed(4188, trollRunSpeed)
skirmisher4:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher4, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher4, Animations.Attack1H) -- Assault a defender
PlayLoopingSplitBodyAnim( defender4, Animations.Parry2H) --Defender responds to attack"
1261,MoP - Kun-Lai Summit - Zouchin Invasion - defender1 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
RunToLocation(defender1, 7, 4362.69, 851.813, 105.748, 312.892, true)
defender1:WaitMovementComplete()
PlayOneShotSplitBodyAnim( defender1, Animations.Ready1H)"
1262,MoP - Kun-Lai Summit - Zouchin Invasion - defender2 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
RunToLocation(defender2, 7, 4400.8, 842.21, 98.8556, 279.142, true)
defender2:WaitMovementComplete()
PlayOneShotSplitBodyAnim( defender2, Animations.Ready1H)"
1263,MoP - Kun-Lai Summit - Zouchin Invasion - defender3 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
defender3:FollowPathAtSpeed(4198, 8)
defender3:WaitMovementComplete()
PlayOneShotSplitBodyAnim( defender3, Animations.Ready1H)"
1264,MoP - Kun-Lai Summit - Zouchin Invasion - defender4 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
RunToLocation(defender4, 7, 4390.47, 865.576, 102.643, 284.316, true)
defender4:WaitMovementComplete()
PlayOneShotSplitBodyAnim( defender4, Animations.Ready1H)"
1265,MoP - Kun-Lai Summit - Zouchin Invasion - leader1 - ZTO,"--Wait for Call
leader1:FollowPathAtSpeed(4182, 12)
Wait(3)
SendTrigger(""charge"")
leader1:WaitMovementComplete()
PlayOneShotSplitBodyAnim( leader1, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( leader1, Animations.Ready1H)
"
1266,MoP - Kun-Lai Summit - Zouchin Invasion - leader2 - ZTO,"--Wait for Call
leader2:FollowPathAtSpeed(4183, 12)
leader2:WaitMovementComplete()
PlayOneShotSplitBodyAnim( leader2, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( leader2, Animations.Ready1H)
"
1267,MoP - Kun-Lai Summit - Zouchin Invasion - leader3 - ZTO ,"--Wait for Call
leader3:FollowPathAtSpeed(4184, 12)
leader3:WaitMovementComplete()
PlayOneShotSplitBodyAnim( leader3, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( leader3, Animations.Ready1H)
"
1268,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher5 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher5:FollowPathAtSpeed(4189, trollRunSpeed)
skirmisher5:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher5, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher5, Animations.Ready1H) -- Assault a defender"
1269,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher6 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher6:FollowPathAtSpeed(4190, trollRunSpeed)
skirmisher6:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher6, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher6, Animations.Ready1H) -- Assault a defender"
1270,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher7 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher7:FollowPathAtSpeed(4191,trollRunSpeed)
skirmisher7:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher7, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher7, Animations.Ready1H) -- Assault a defender"
1271,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher8 - ZTO,"--Wait for Call
WaitForTrigger(""charge"")
skirmisher8:FollowPathAtSpeed(4192, trollRunSpeed)
skirmisher8:WaitMovementComplete()
PlayOneShotSplitBodyAnim( skirmisher8, Animations.BattleRoar)
Wait(2)
PlayLoopingSplitBodyAnim( skirmisher8, Animations.Ready1H) -- Assault a defender"
1272,MoP - Kun-Lai Summit - Zouchin Invasion - defendersStatic - ZTO,"--Defenders need to be ready for battle
for i=1, #defendersStatic do
	PlayLoopingSplitBodyAnim( defendersStatic[i], Animations.Ready2HL)
	defendersStatic[i]: SetFacingToAbs(Vector:New(4372.99, 873.273, 105.969))
end"
1273,MoP - Kun-Lai Summit - Zouchin Invasion - archersStatic - ZTO,"--Defenders need to be ready for battle
for i=1, #archersStatic do
	PlayLoopingSplitBodyAnim( archersStatic[i], Animations.Ready2HL)
	archersStatic[i]: SetFacingToAbs(Vector:New(4372.99, 873.273, 105.969))
end"
1274,Mechanical - Build Target Dummy,"function Mechanical_BuildTargetDummy( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )

	-- Skitter around building the object
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
		local numPoints = 3;
		local doEffectsOnPoint = 2;
		local visual = 236;

		local slot, transform = FindNextObjectSlot( caster.playerID ) 
		local location = transform.position;

		Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

		scene:WaitTimer(1);
		return;
	else
		DefaultTurnBehaviour( ROID, isTurn, turn )
	end 

	-- Reset/reposition
		DefaultTurnCleanUp(ROID);

end

function CreateObject_TargetDummy(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET( ROID );
--print(""Makin a turret "",auraAbilityID,  "", player "",aura.playerID);
	local groundModel = fid(126026);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = transform.position + Vector:New(0,0,-5)
	
	local baseScale = 1;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local lure, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 90), 
			false )

	object.actor = lure;
	object.moveSpeed = 0; -- This prevents knockbacks

	lure:WaitMoveToAbs ( transform.position, 2 );
	lure:SetSnapToGround(true);

	local q = 1
 
	while ( aura.running and q < 1000 ) do 
		q = q + 0.1;
--[[
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end
]]--
		scene:WaitTimer(0.1);
	end

	local kit = lure:PlayAnimKit(petBattleAnimKits.Stand, false, Animations.Death) 

	scene:WaitTimer(1);

	lure:Fade(0,0.5);
	--print(""Killed the dummy! "",q);
	scene:WaitTimer(0.5);
	lure:Despawn();

	UnregisterObject(object.playerID, object.slot);
	
end"
1275,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher9 - ZTO,"--Wait for Call
skirmisher9:FollowPathAtSpeed(4195, 10)
skirmisher9:WaitMovementComplete()
PlayLoopingSplitBodyAnim( skirmisher9, Animations.Ready1H)
"
1276,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher10 - ZTO,"--Wait for Call
skirmisher10:FollowPathAtSpeed(4196, 10)
skirmisher10:WaitMovementComplete()
PlayLoopingSplitBodyAnim( skirmisher10, Animations.Ready1H) -- Assault a defender"
1277,MoP - Kun-Lai Summit - Zouchin Invasion - skirmisher11 - ZTO,"--Wait for Call
--WaitForTrigger(""charge"")
skirmisher11:FollowPathAtSpeed(4197, 10)
skirmisher11:WaitMovementComplete()
PlayLoopingSplitBodyAnim( skirmisher11, Animations.Ready1H) -- Assault a defender"
1278,MoP - Dread Wastes - Klaxxi'Vess Finale - towerTargets - ZTO,"WaitForTrigger(""phase ready"")
--Wait for Beacon corrupt
WaitForTrigger(""BeaconCorrupt"")
local shaCorrupt1 = ChannelSpellVisualAtActor( towerTarget1, shaTowerChannelBeam, towerTarget2 )
CastSpellAtActor(towerTarget1, towerTarget1, shaBlast, false)
towerTarget1:PlaySpellStateVisual(shaBurstID)
CastSpellAtActor(towerTarget2, towerTarget2, shaBlast, false)
towerTarget2:PlaySpellStateVisual(shaBurstID)
Wait(1)
local shaCorrupt2 = ChannelSpellVisualAtActor( towerTarget2, shaTowerChannelBeam, towerTarget3 )
CastSpellAtActor(towerTarget3, towerTarget3, shaBlast, false)
towerTarget3:PlaySpellStateVisual(shaBurstID)
Wait(1)
local shaCorrupt3 = ChannelSpellVisualAtActor( towerTarget3, shaTowerChannelBeam, towerTarget4 )
CastSpellAtActor(towerTarget4, towerTarget4, shaBlast, false)
towerTarget4:PlaySpellStateVisual(shaBurstID)
Wait(1)
local shaCorrupt4 = ChannelSpellVisualAtActor( towerTarget4, shaTowerChannelBeam, towerTarget5 )
CastSpellAtActor(towerTarget5, towerTarget5, shaBlast, false)
towerTarget5:PlaySpellStateVisual(shaBurstID)
"
1279,MoP - Dread Wastes - Klaxxi'Vess Finale - towerFoundation - ZTO,"WaitForTrigger(""phase ready"")
towerFoundation:PlaySpellStateVisual(shaBaseID2) 

--Wait for tower corruption
WaitForTrigger(""BeaconCorrupt"")
FadeIn(towerFoundation, 5)
RunToLocation(towerFoundation, 3, 215.767365, 3210.300293, 205.947, 0, false)
"
1280,[1] MoP - Dread Wastes - Klaxxi'Vess Finale - Init - ZTO,"1, false)

FadeOut(empressPortal, 0)
FadeOut(towerTop, 0)
FadeOut(corruptedTower, 0) 
FadeOut(sonicTarget, 0)
FadeOut(towerFoundation, 0)
FadeOut(empressUR, 0)
FadeOut(empressLR, 0)
FadeOut(empressUL, 0)
FadeOut(empressPortal2, 0)

SendTrigger(""phase ready"")

--Spell Arsenal
mantidExplosionHeadID = 128992
mantidExplosionLegID = 128993
mantidExplosionPincerID = 128994
mantidExplosionBaseID = 128995
mantidExplosionBurstID = 129263 
sonicSpellID = 129008
sonicChannelMissile = 129217
sonicChannelBeam = 129204
ikMissile = 129230
ikBeam = 129231
shaBlast = 122034
shaBlast2 = 128017
shaExplosion = 129696
empressShout = 128790
mantidHeadExplosion = 130192
	
--Spell visuals
headID = 27748
legID = 27265
pincerID = 27266
mindMeldVisualID = 27512
mindMeldFlyerVisualID = 27517
sonicSpellVisualID = 27270
ikBeamVisualID = 27358
towerVisualID = 27269
corruptedTowerVisualID = 27431
shaChannelBeamID2 = 27184
shaChannelBeamID = 27129
shaTowerChannelBeam = 27184
shaBurstID = 27433
ikMindMeldBeamID = 27358
ikMindMeldStateID = 27513
shaBaseID1 = 23880
shaBaseID2 = 27516
shaBaseID3 = 27520
shaTaintAura = 27554
empressVisual = 27560
shaHose = 27567
stunID = 1404
empressVisual2 = 27726
beamBattleStateID = 27752

--Spawn Player Clone
clone = SpawnActivePlayerCloneActor( 169.877, 3199.79, 215.651, 19.0045, 1, true )
FadeOut(clone, 0)"
1281,Globe Script,"-- Here's what the Globe Does

--Bunny for Effects
bunnyCreatureID = 62026
groundFX = SpawnActor( bunnyCreatureID, 825.458, -169.151, 415.262, 241.546, 1, true )

-- Set Up and Spawn in Globe
globeID = 64814
globe = SpawnActor( globeID, 825.458, -169.151, 414.218, 241.546, 1, false ) 
PlayLoopingSplitBodyAnim( globe, Animations.Open  ) -- Spawn in Non-Flamey

-- Cool Ground Effect Kick Off
groundFX:PlaySpellStateVisual(27525) 

-- Globe Actions
Wait(1)
RunToLocation( globe, .5, 825.458, -169.151, 418.718, 241.546, true ) -- Float Up
Wait(20)
"
1282,Darren's Test Script Relative Motion,"print(""-- START: Darren's Test Script 3 --"")

local zeppelinModel = ""world\\expansion03\\doodads\\generic\\flying_horde_zeppelin.m2""
local zeppCreateData = ActorCreateData:Default()
zeppCreateData.model = zeppelinModel
zeppCreateData.facingOffset = 180
zeppCreateData.groundSnap = false
zeppCreateData.transform = Transform:New(Vector:New(50, 0, 20), 90)
local zepp = scene:SpawnActor(zeppCreateData)
zepp:SetFacingTurnRate(1)

local nazgrimCreatureID = 53828
local nazgrimCreateData = ActorCreateData:Default()
nazgrimCreateData.creatureID = nazgrimCreatureID
nazgrimCreateData.scale = 0.75
nazgrimCreateData.groundSnap = false
nazgrimCreateData.transform = Transform:New(Vector:New(38, 5, 2), 45)
local naz1 = scene:SpawnActor(nazgrimCreateData)

nazgrimCreateData.transform = Transform:New(Vector:New(42, -5, 2), -45)
local naz2 = scene:SpawnActor(nazgrimCreateData)

scene:WaitTimer(1)
naz1:SetRelativeTo(zepp)
naz2:SetRelativeTo(zepp)


scene:WaitTimer(2)

moveData = MoveData:Default(1)
--moveData.posControl = MovePosControl.TotalTime
moveData.posControl = MovePosControl.PointSpeed
moveData.yawControl = MoveRotControl.None
moveData.pitchControl = MoveRotControl.Angle
moveData.rollControl = MoveRotControl.Angle
moveData.teleportToFirstPoint = false
moveData.isGroundSnapping = false
moveData.isRelative = true
moveData.time = 10
moveData.speed = 4
moveData.animKitID = 2272 -- Steve's zeppelin propellor anim
moveData.pathID = 4044

zepp:Move(moveData)

ogreMoveData = MoveData:Default(2)
ogreMoveData.posControl = MovePosControl.TotalTime
ogreMoveData.yawControl = MoveRotControl.Tangent
ogreMoveData.isRelative = true
ogreMoveData.time = 10


ogreMoveData.points[1].pos = Vector:New(10,  5, 0)
ogreMoveData.points[2].pos = Vector:New(-5,  -4, 0)

scene:WaitTimer(5)
naz1:Move(ogreMoveData)
scene:WaitTimer(12)
naz1:SetRelativeTo(nil)

scene:WaitTimer(15)
naz2:Move(ogreMoveData)


while (1) do
	scene:WaitTimer(10)
end

print(""-- END: Darren's Test Script 3 --"")

"
1283,Darren's Test Screen Effect Script,"print(""-- START: Darren's Test Script 3 --"")

scene:WaitTimer(1)
scene:ApplyScreenEffect(949)
scene:WaitTimer(5)
scene:ApplyScreenEffect(950)
scene:WaitTimer(5)
scene:ClearScreenEffect(949)
scene:WaitTimer(5)
scene:ClearScreenEffect(950)
scene:WaitTimer(1)

print(""-- END: Darren's Test Script 3 --"")

"
1284,MoP - Dread Wastes - Klaxxi'Vess Finale - empressPortal - ZTO,"WaitForTrigger(""phase ready"")
local shaBaseUR = empressUR:PlaySpellStateVisual(shaBaseID3) --Sha Base
local shaBaseLR = empressLR:PlaySpellStateVisual(shaBaseID3) --Sha Base
local shaBaseUL = empressUL:PlaySpellStateVisual(shaBaseID3) --Sha Base
--local shaBaseLL = empressLL:PlaySpellStateVisual(shaBaseID3) --Sha Base
--empressPortal2:PlaySpellStateVisual(empressVisual2) --Sha Empress rolling in

-- Cue Sha of Fear
WaitForTrigger(""BeaconFire"")
Wait(2)

-- Camera Shake to signal arrival of empress
local shakeOrigin01 = Vector:New(288.848, 3212.08, 214.657)
shakeX = scene:AddCameraEffect( 35, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 36, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 37, shakeOrigin01, nil, 1 )


local shaHose1 = empressPortal:PlaySpellStateVisual(shaHose) --Sha Empress rolling in
shaFear:PlaySoundKitStereo(33242, true) --Empress Entrance
Wait(1)
--FadeIn(empressPortal2, 2)
Wait(2)
SendTrigger(""cueEmpress"")
empressPortal: ClearSpellVisual( shaHose1)

FadeIn(empressUR, 2)
FadeIn(empressLR, 2)
FadeIn(empressUL, 2)
--FadeIn(empressLL, 2)
local shaBaseUR2 = empressUR:PlaySpellStateVisual(shaBaseID1) --Sha Base
local shaBaseLR2 = empressLR:PlaySpellStateVisual(shaBaseID1) --Sha Base
local shaBaseUL2 = empressUL:PlaySpellStateVisual(shaBaseID1) --Sha Base
--local shaBaseLL2 = empressLL:PlaySpellStateVisual(shaBaseID1) --Sha Base

--FadeOut(empressPortal2, 2)

WaitForTrigger(""ShaFade"")
--FadeIn(empressPortal2, 2)
FadeOut(empressUR, 2)
FadeOut(empressLR, 2)
FadeOut(empressUL, 2)
--FadeOut(empressLL, 2)
local shaHose1 = empressPortal:PlaySpellStateVisual(shaHose) --Sha Empress rolling in
Wait(1)
--FadeOut(empressPortal2, 2)
--Wait(2)
empressPortal: ClearSpellVisual( shaHose1)
SendTrigger(""done"")
"
1285,PetBattle - 3. Post Processing,"function PostProcessAllTurns ( topLevelTurnGroups )

	if (debugOn == true) then
		print(""  "")
		print(""== Start Round Post-Processing =="")
	end 
	
	-- process top level turns in order
	for index, turn in pairs( topLevelTurnGroups ) do
		PostProcessTurn( turn )
	end

	if (debugOn == true) then
		print(""== End Round Post-Processing =="")
		print(""  "")
	end
end

-- The goal here is to analyze each turn
-- Determine useful information
function PostProcessTurn ( turn ) 

	-- Useful information to obtain
	--
	-- Turn:	Complete target list
	-- Effect: 	Primary Target, Secondary Targets
	--			Was It Redirected, Who was the redirect target
	--

	turn.targetList = {};
	turn.primaryTargetList = {};
	
	for effectIndex, effect in pairs( turn.effects ) do 

		effect.targetList = {};
		effect.firstPrimaryTarget = nil;
		effect.primaryTarget = nil;
		effect.redirectTarget = nil;

		for resultIndex, result in pairs ( effect.results ) do
			local roid = ResultToTargetROID(result)

			-- [ABrazie] 8/10/2012 - I added this to suppress errors.
			-- Generally, if this occurs its a sign of a server side
			-- Designer data issue, or an invalid target. 
			--if ( roid and roid > 0 ) then 
			effect.firstPrimaryTarget = effect.firstPrimaryTarget or roid;

			-- Fix for Bug ID: 349879: store the first primary target that
			-- will potentially have a 'meaningful' result
			if ((result.resultType == PetBattleEffect.SetHealth) or
				(result.resultType == PetBattleEffect.AuraApply) or
				(result.resultType == PetBattleEffect.PetSwap)) then
				effect.primaryTarget = effect.primaryTarget or roid;
			end

			table.insert( effect.targetList, roid );
			table.insert( turn.targetList, roid );
			--end
			if ( result.procGroup ) then 
				PostProcessTurn(result.procGroup)
			end

			if ( result.resultType == PetBattleEffect.SetState ) then
				if ( result.stateID == STATE_BLOCK_CHARGES ) then 
					local newValue = result.stateValue;

					local unit = ROIDTOUNIT ( roid ) 
--print(""Blocks Consumed: ""..ROIDTOSTRING( roid ) );
					-- If you blocked an attack
					if ( unit and unit.states[STATE_BLOCK_CHARGES] and unit.states[STATE_BLOCK_CHARGES] > newValue 
							  and unit.states[STATE_REDIRECT_AURA] and unit.states[STATE_REDIRECT_AURA] > 0) then 
						local auraID = unit.states[STATE_REDIRECT_AURA];
						local team = GetTeamByIndex( unit.playerID );

						local object, playerID, objectSlot, transform = FindObjectByAbilityID( unit.playerID, auraID )
						local redirectTargetROID = GETOBJECTROIDFROMPLAYERIDANDSLOT( playerID, objectSlot )
--print (""Redirect found: ""..ROIDTOSTRING(redirectTargetROID));
						--team.redirectTargetAuraID = nil;
						effect.redirectTarget = redirectTargetROID;
					end
				end
				if ( result.stateID == STATE_CLONE_ACTIVE ) then
					if ( result.stateID > 1 ) then 
						turn.cloned = true;
					end
				end
			elseif ( result.resultType == PetBattleEffect.PetSwap ) then
				turn.hasSwap = true;
			end
		end

		if (not effect.primaryTarget) then
			-- fallback
			effect.primaryTarget = effect.firstPrimaryTarget
		end

		table.insert( turn.primaryTargetList, effect.primaryTarget );
	end
end "
1286,Legendary 5.0 - Chapter 01 - Tavern Intro - Globe FX,"WaitForTrigger(""wrathionSpawn"")

-- Here's what the Globe Does

--Bunnies for Effects
bunnyCreatureID = 62026
groundFX = SpawnActor( bunnyCreatureID, 825.458, -169.151, 415.262, 241.546, 1, true )
meteor1 = SpawnActor( bunnyCreatureID, 832.348, -166.213, 420.41, 204.665, 1, false )
meteor2 = SpawnActor( bunnyCreatureID, 831.967, -181.129, 421.721, 113.315, 1, false )
meteor3 = SpawnActor( bunnyCreatureID, 819.996, -171.62, 425.9, 34.5641, 1, false )
meteor4 = SpawnActor( bunnyCreatureID, 812.101, -166.737, 422.587, 343.264, 1, false )
meteor5 = SpawnActor( bunnyCreatureID, 815.879, -156.95, 415.901, 296.689, 1, false )
meteor6 = SpawnActor( bunnyCreatureID, 819.056, -172.485, 415.239, 18.3636, 1, false )
meteor7 = SpawnActor( bunnyCreatureID, 833.747, -164.784, 420.271, 211.189, 1, false )
meteor8 = SpawnActor( bunnyCreatureID, 814.545, -162.317, 422.408, 317.837, 1, false )
meteor9 = SpawnActor( bunnyCreatureID, 818.867, -162.231, 425.982, 307.487, 1, false )
meteor0 = SpawnActor( bunnyCreatureID, 824.303, -162.986, 415.21, 286.562, 1, false )
meteorTarget = SpawnActor( bunnyCreatureID, 825.493, -169.271, 417.497, 9.13823, 1, false )


-- Set Up and Spawn in Globe
globeID = 64814
globe = SpawnActor( globeID, 825.458, -169.151, 414.218, 241.546, 1, false ) 
PlayLoopingSplitBodyAnim( globe, Animations.Open  ) -- Spawn in Non-Flamey



-- Wait until Wrathion is Ready...
Wait(27.5)

-- Cool Ground Effect Kick Off
local groundFXRed = groundFX:PlaySpellStateVisual(27525) 

-- Globe Actions
Wait(1)
RunToLocation( globe, .5, 825.458, -169.151, 419.418, 241.546 ) -- Float Up
Wait(24)


-- Here Come da Meteors! RUN FOR IT!
CastSpellAtActor( meteor1, meteorTarget, 126694, false )
Wait(.4)
CastSpellAtActor( meteor2, meteorTarget, 126694, false )
Wait(.3)
CastSpellAtActor( meteor8, meteorTarget, 126694, false )
CastSpellAtActor( meteor7, meteorTarget, 126694, false )
Wait(.6)
CastSpellAtActor( meteor3, meteorTarget, 126694, false )
Wait(.5)
CastSpellAtActor( meteor5, meteorTarget, 126694, false )
CastSpellAtActor( meteor6, meteorTarget, 126694, false )
Wait(.6)
CastSpellAtActor( meteor0, meteorTarget, 126694, false )
CastSpellAtActor( meteor9, meteorTarget, 126694, false )
Wait(.8)
CastSpellAtActor( meteor4, meteorTarget, 126694, false )
Wait(8)
PlayLoopingSplitBodyAnim( globe, Animations.Custom0  ) -- Globe Burns Up
Wait(8)
globe:PlaySpellCastVisual( 27573 ) -- Globe Pre-Explosion 
FadeOut( globe, .75 )
globe:PlaySpellCastVisual( 27570 ) -- Globe Explodes
Wait(2)

-- Clear Ground FX
groundFX:ClearSpellVisual( groundFXRed)
Wait(5)"
1287,Kun Lai Summit - Celestial Gate Scene - Init - JSB,"
-- spawn ox
local oxCreatureID = 65895
ox = SpawnActor( oxCreatureID, 1822.19, 1461.65, 479.256, 237.868, 0.5, true )

-- spawn crane
local craneCreatureID = 65898
crane = SpawnActor( craneCreatureID, 1881.21, 1286.54, 471.92, 151.468, 2.0, true )

-- spawn tiger
local tigerCreatureID = 65902
tiger = SpawnActor( tigerCreatureID, 1932.03, 1394.71, 464.52, 189.268, 1.0, true )

-- spawn serpent
local serpentCreatureID = 65904
serpent = SpawnActor( serpentCreatureID, 2089.56, 1258.51, 563.432, 149.443, 1.0, false )

-- Spawn Gate Door
gateDoorCreatureID = 65961
gateDoor = SpawnActor( gateDoorCreatureID, 1760.849, 1363.679, 468.475, 0, 0.68 ) -- Vale Gate

-- spawn clone
playerCloneCreatureID = 65247
clone = SpawnActivePlayerCloneActor( 1811.2, 1360.95, 468.855, 180.816, 1.0, false )
FadeOut(clone, 0)



-- EXTRAS

-- Spawn Leven Dawnblade
levenCreatureID = 66053
leven = SpawnActor( levenCreatureID, 1811.7, 1385.01, 468.937, 319.551, 1.0, true )

-- Spawn Kun Autumnlight
kunCreatureID = 66055
kun = SpawnActor( kunCreatureID, 1792.77, 1389.12, 468.937, 145.885, 1.0, true )

-- Spawn Anduin
anduinCreatureID = 66056
anduin = SpawnActor( anduinCreatureID, 1790.51, 1390.96, 468.937, 321.559, 1.0, true )

-- Spawn Rook Stonetoe
rookCreatureID = 66057
rook = SpawnActor( rookCreatureID, 1792.87, 1399.09, 468.964, 341.807, 1.0, true )

-- Spawn Zhi
zhiCreatureID = 66058
zhi = SpawnActor( zhiCreatureID, 1772.72, 1382.91, 468.937, 316.898, 1.0, true )

-- Spawn He Softfoot
heCreatureID = 66059
he = SpawnActor( heCreatureID, 1779.46, 1376.54, 468.937, 71.9, 1.0, true )

-- Spawn Anji Autumnlight
anjiCreatureID = 66061
anji = SpawnActor( anjiCreatureID, 1779.98, 1379.02, 468.937, 249.661, 1.0, true )

-- Spawn Bartender Tomro
tomroCreatureID = 66064
tomro = SpawnActor( tomroCreatureID, 1807.65, 1328.78, 468.854, 216.961, 1.0, true )

-- Spawn Cook Tope
topeCreatureID = 66065
tope = SpawnActor( topeCreatureID, 1789.92, 1327.12, 468.854, 276.586, 1.0, true )

-- Spawn Sunwalker Dezco
dezcoCreatureID = 66066
dezco = SpawnActor( dezcoCreatureID, 1797.8, 1323.47, 468.937, 0, 1.0, true )

-- Spawn Refugee01
refugeeCreatureID = 66072
refugee01 = SpawnActor( refugeeCreatureID, 1779.12, 1392.4, 469.037, 298.981, 1.0, true )

-- Spawn Refugee02
refugeeCreatureID = 66074
refugee02 = SpawnActor( refugeeCreatureID, 1778.81, 1388.71, 468.9, 86.8966, 1.0, true )

-- Spawn Refugee03
refugeeCreatureID = 66072
refugee03 = SpawnActor( refugeeCreatureID, 1802.03, 1390, 468.858, 244.304, 1.0, true )

-- Spawn Refugee04
refugeeCreatureID = 66072
refugee04 = SpawnActor( refugeeCreatureID, 1821.27, 1320.89, 468.853, 132.614, 1.0, true )

-- Spawn Refugee05
refugeeCreatureID = 66074
refugee05 = SpawnActor( refugeeCreatureID, 1821.82, 1328.04, 468.853, 240.389, 1.0, true )

-- Spawn Refugee06
refugeeCreatureID = 66074
refugee06 = SpawnActor( refugeeCreatureID, 1804.39, 1331.94, 468.855, 289.214, 1.0, true )

-- Spawn Refugee07
refugeeCreatureID = 66072
refugee07 = SpawnActor( refugeeCreatureID, 1792.43, 1317.48, 468.854, 96.3892, 1.0, true )

-- Spawn Refugee08
refugeeCreatureID = 66072
refugee08 = SpawnActor( refugeeCreatureID, 1778.7, 1318.28, 468.854, 92.3397, 1.0, true )

-- Spawn Refugee09
refugeeCreatureID = 66072
refugee09 = SpawnActor( refugeeCreatureID, 1775.77, 1321.27, 468.854, 345.687, 1.0, true )

-- Spawn Refugee10
refugeeCreatureID = 66074
refugee10 = SpawnActor( refugeeCreatureID, 1780.76, 1323.03, 469.037, 219.237, 1.0, true )
"
1288,Kun Lai Summit - Celestial Gate Scene - MASTER - JSB,"
scene:SetFadeRegion(300, true) -- (radius, fadeActivePlayer)


Wait( 1 )
scene:SetCamera(465,0,nil,nil) -- (camera, transition time, primary target, secondary target)

scene:SetCamera(459,6,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 5 ) -- was 7

SetCameraFollowPath( 368, 5, 4210, 4209, 13 ) -- was 18 time

Wait( 9 ) -- was 13

scene:SetCamera(460,7,nil,nil) -- (camera, transition time, primary target, secondary target)
Wait( 6 )
scene:SetCamera(461,55,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 30 )

scene:SetCamera(0,4,nil,nil) -- sets camera back to game-cam

-- Wait( 150 )"
1289,Kun Lai Summit - Celestial Gate Scene - Ox - JSB,"
Wait( 1 )

-- RunToLocation( ox, 8, 1811.52, 1462.39, 477.894, 251.593 )
RunToLocation( ox, 8, 1783.91, 1399.65, 468.856, 222.568 )
RunToLocation( ox, 8, 1772.49, 1392.01, 468.854, 7.01802 )

WaitForTrigger( ""oxSpeak"" )

ox:BroadcastTextStereo(BroadcastType.Say, 75776)

WaitForTrigger( ""lastLine"" )

RunToLocation( ox, 8, 1801.33, 1425.37, 473.948, 78.9005 )
RunToLocation( ox, 8, 1859.05, 1532.99, 478.923, 47.6255 )

FadeOut(ox, 1)"
1290,Kun Lai Summit - Celestial Gate Scene - Crane - JSB,"
RunToLocation( crane, 8, 1832.77, 1315.7, 469.317, 142.918 )
RunToLocation( crane, 8, 1807.76, 1334.6, 468.854, 165.869 )
RunToLocation( crane, 8, 1774.07, 1333.11, 468.854, 358.469 )

WaitForTrigger( ""craneSpeak"" )

crane:BroadcastTextStereo(BroadcastType.Say, 65972)

WaitForTrigger( ""lastLine"" )

RunToLocation( crane, 8, 1814.68, 1332.23, 468.854, 313.469 )
RunToLocation( crane, 8, 1857.26, 1273.93, 474.983, 263.744 )
RunToLocation( crane, 8, 1812.54, 1150.35, 482.895, 248.669 )

FadeOut(crane, 1)"
1291,Kun Lai Summit - Celestial Gate Scene - Tiger - JSB,"
RunToLocation( tiger, 10, 1878.52, 1388.54, 464.734, 186.568 )
RunToLocation( tiger, 8, 1827.66, 1361.53, 468.77, 179.368 )
RunToLocation( tiger, 8, 1797.46, 1363.52, 468.855, 178.136 )

WaitForTrigger( ""openGate"" )

RunToLocation( tiger, 5, 1783.87, 1363.26, 468.854, 181.168 )

Wait( 1 )

tiger:PlaySoundKitStereo( 28232, true)
tiger:PlayOneShotAnimKit(1679)

Wait( 1 )

local shakeOrigin01 = Vector:New(1760.849, 1363.679, 468.475)
shakeX = scene:AddCameraEffect( 32, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin01, nil, 1 )

Wait( 3 )

RunToLocation( tiger, 5, 1797.47, 1364.3, 468.854, 0 )

tiger:SetFacing(314)

WaitForTrigger( ""craneSpeak"" )

Wait( 5 )
tiger:BroadcastTextStereo(BroadcastType.Say, 65973)

Wait( 12 )

SendTrigger( ""lastLine"" )

Wait( 3 )

RunToLocation( tiger, 8, 1834.83, 1362.9, 467.856, 31.2747 )
RunToLocation( tiger, 8, 1902.42, 1393.03, 465.12, 354.6 )
RunToLocation( tiger, 8, 1999.58, 1380.79, 465.866, 351.675 )

FadeOut(tiger, 1)"
1292,Kun Lai Summit - Celestial Gate Scene - Serpent - JSB,"
Wait( 1 )
serpent:FollowPath( 4208, 15 ) -- was 21

Wait( 14 ) -- was 20

RunToLocation( serpent, 10, 1806.21, 1344.48, 481.421, 160.915 )

Wait( 2 )

serpent:BroadcastTextStereo(BroadcastType.Say, 65970)

Wait( 12 )

SendTrigger( ""openGate"" )

Wait( 13 )

-- serpent:BroadcastTextStereo(BroadcastType.Say, 65971)

SendTrigger( ""enterVale"" )

Wait( 16 ) -- was 7

serpent:BroadcastTextStereo(BroadcastType.Say, 65971) -- TEST SPOT

Wait( 11 ) -- new wait


SendTrigger( ""oxSpeak"" )

Wait( 10 )

SendTrigger( ""craneSpeak"" )




WaitForTrigger( ""lastLine"" )

serpent:FollowPath( 4248, 21 )

Wait( 21 )

FadeOut(serpent, 1)

Wait( 30 )

scene:EndScene()"
1294,Kun Lai Summit - Celestial Gate Scene - Door - JSB,"
WaitForTrigger( ""openGate"" )

Wait( 5 )

clone:PlaySoundKitStereo(32822, true)

gateDoor:PlayLoopingAnimKit(1483)

Wait( 25 )

FadeOut(gateDoor, 1)
"
1295,Kun Lai Summit - Resurrecting the Thunder God - Sound Bunnies,"local music = audioBunny:PlaySoundKitStereo(33015, true) 
--Wait(20)
--local drums = leftDrum:PlaySoundKitStereo(drumSoundsID2, false) 
--rightDrum:PlaySoundKitStereo(drumSoundsID2) 
--Wait(1)
--rightDrum:PlaySoundKit(drumSoundsID2, false) 
--Wait(30)
--audioBunny:PlaySoundKit(drumSoundsID2, true)

WaitForTrigger(""audioBunny - Final Line"")
audioBunny:PlaySoundKitStereo(33016, true) 

WaitForTrigger(""kill audio"")
audioBunny:StopSoundKit(33015)
audioBunny:StopSoundKit(33016)
audioBunny:PlaySoundKitStereo(10086, false) 
--leftDrum:StopSoundKit(drumSoundsID2)
--]]--"
1296,Legendary 5.0 - Chapter 01 - Tavern Intro - Alliance Flag,"-- The Alliance Flag Spawns in During Wrathion's Patriotic Speech.

-- Wait until Wrathion is Ready
WaitForTrigger(""plantFlag"")
Wait(3)

-- Set Up and Spawn in Flag
allyFlagID = 64818
allyFlag = SpawnActor( allyFlagID, 825.458, -169.151, 415.262, 149.085, 1, true ) 
Wait(1)
globe:PlaySpellCastVisual( 27580 )
Wait(13)
FadeOut( allyFlag, 2 )
"
1297,Kun Lai Summit - Resurrecting the Thunder God - garaJal,"PlayLoopingSplitBodyAnim( garaJal, Animations.ChannelCastDirected )
--local spiritTapChannel = ChannelSpellVisualAtActor( kharZul, spiritWorldTapChannelID, thunderKing, cauldron1, cauldron2, cauldron3, cauldron4 )
local spiritTapChannel = ChannelSpellVisualAtActor( garaJal, spiritWorldTapChannelID, thunderKing )
local spiritTapAura = garaJal:PlaySpellStateVisual( spiritWorldTapChannelID )


--Wait for summoning to Complete
WaitForTrigger(""summoning complete"")
Wait(5)
ClearChannelSpellVisual(spiritTapChannel)
garaJal:ClearSpellVisual( spiritTapAura)
StopLoopingSplitBodyAnim( garaJal, Animations.ChannelCastDirected )
PlayLoopingSplitBodyAnim( garaJal, Animations.Stand )
Wait(8)
PlayOneShotSplitBodyAnim( garaJal, Animations.EmoteCheer )"
1298,Kun Lai Summit - Resurrecting the Thunder God - crowPath2,--CrowFly(crowPath2)
1300,Kun Lai Summit - Resurrecting the Thunder God - crowPath1,--CrowFly(crowPath1)
1301,Kun Lai Summit - Resurrecting the Thunder God - crowPath3,--CrowFly(crowPath3)
1302,Kun Lai Summit - Resurrecting the Thunder God - crowPath4,--CrowFly(crowPath4)
1303,Kun Lai Summit - Resurrecting the Thunder God - crowPath5,--CrowFly(crowPath5)
1304,Kun Lai Summit - Resurrecting the Thunder God - moguWorshippers,"for i=1, #moguWorshippers do
	moguWorshippers[i]:SetFacingToAbs(Vector:New(5234.26, 57.6505, 33.6385))
	--PlayLoopingSplitBodyAnim(moguWorshippers[i], Animations.EmoteSalute)
end

WaitForTrigger(""worshippers kneel"")
for i=1, #moguWorshippers do
	PlayOneShotSplitBodyAnim(moguWorshippers[i], Animations.KneelStart)
	PlayLoopingSplitBodyAnim(moguWorshippers[i], Animations.KneelLoop)
end"
1305,Kun Lai Summit - Resurrecting the Thunder God - Thunderking,"local rezAura2 = thunderKing:PlaySpellStateVisual( resurrectionAuraID )
PlayLoopingSplitBodyAnim( thunderKing, Animations.CustomSpell01 )

--Wait for summoning to Complete
WaitForTrigger(""summoning complete"")
local rezAura = thunderKing:PlaySpellStateVisual( cracklingAuraID)
FadeIn(kingBunny, 2)

Wait(2)
StopLoopingSplitBodyAnim( thunderKing, Animations.CustomSpell01 )
--PlayOneShotSplitBodyAnim( thunderKing, Animations.SleepUp )
thunderKing:PlayLoopingAnimKit(3007)
thunderKing:FollowRelativePathAtSpeed(4224, 2, false)
Wait(3)
CastSpellAtActor( thunderKing, thunderKing, resurrectionSpellID )
CastSpellAtActor( audioBunny, audioBunny, resurrectionSpellID )
thunderKing:WaitCastingComplete(thunderKing, resurrectionSpellID)
thunderKing:WaitMovementComplete()
thunderKing:ClearSpellVisual( rezAura2) -- Drop crackling effect
thunderKing:ClearSpellVisual( rezAura) -- Drop crackling effect
Wait(2)
CastSpellAtActor( thunderKing, thunderKing, redemptionSpellID )
--thunderKing:SetFacing(158.85)
Wait(1)
--PlayOneShotSplitBodyAnim( thunderKing, Animations.BattleRoar )
--Wait(1.33)
SendTrigger(""worshippers kneel"")
FadeOut(kingBunny, 2)
SendTrigger(""done"")
"
1306,[1] Kun Lai Summit - Resurrecting the Thunder God - Init - Generic Actors 01 - JSB,"trollGuard01CreatureID, 5108.68, 87.6837, 4.78652, 197.1, 1, false ) -- dancer
moguPatroller01 = SpawnActor( trollGuard01CreatureID, 5107.41, 83.3792, 4.40063, 197.1, 1, false ) -- dancer


--Spawn Priest trolls
--trollPriests = SpawnActorsAtPoints( trollPriestCreatureID, 4227, false)

-- Spawn Mogu
moguGuard01 = SpawnActor( moguGuardCreatureID, 5153.18, 87.0011, 13.2936, 152.085, 1, false ) -- base of stairs 01
moguGuard02 = SpawnActor( moguGuardCreatureID, 5167.13, 104.879, 15.1742, 144.21, 1, false ) -- base of stairs 02
moguGuard03 = SpawnActor( moguGuardCreatureID, 4883.96, 46.1186, 6.17683, 168.735, 1, false )
moguGuard04 = SpawnActor( moguGuardCreatureID, 4856.31, 63.453, 5.6103, 216.21, 1, false )

--Spawn mogu worshipers
moguWorshipperID = 55279
moguWorshippers = SpawnActorsAtPoints( moguGuardCreatureID, 4215, false)

-- Spawn Troll Guards
trollGuard01 = SpawnActor( trollGuard01CreatureID, 4949.93, 50.9107, 1.9036, 187.411, 1, false ) -- first patroller

-- Spawn Early shot trolls
trolls = SpawnActorsAtPoints( trollGuard01CreatureID, 4246, false)

--Effect Bunnies
bunnyCreatureID = 62026
kingBunny = SpawnActor( bunnyCreatureID, 5234.26, 57.6505, 33.6385, 66.0716, 1, false)
--cauldron1 = SpawnActor( bunnyCreatureID, 5233.16, 63.8416, 33.4015, 332.162, 1, false)
--cauldron2 = SpawnActor( bunnyCreatureID, 5230.3, 56.7021, 33.3697, 332.162, 1, false)
--cauldron3 = SpawnActor( bunnyCreatureID, 5237.22, 54.4649, 33.3996, 69.8115, 1, false)
--cauldron4 = SpawnActor( bunnyCreatureID, 5239.8, 61.1934, 33.3877, 69.8115, 1, false)
FadeOut(kingBunny, 0)

--Stereo Bunnies
leftDrum = SpawnActor( bunnyCreatureID, 5217.91, 87.56, 41.8747, 285.1, 1, false)
rightDrum = SpawnActor( bunnyCreatureID, 5211.96, 54.7605, 41.8747, 259.676, 1, false)
audioBunny = SpawnActor( bunnyCreatureID, 4415.28, 929.384, 123.771, 141.768, 1, false)
FadeOut(audioBunny, 0) 

--Spell aura Visuals
drumSoundsAuraID = 9486
lightAuraID = 27630
resurrectionAuraID = 27649
cracklingAuraID = 25571
trollmaskAuraID = 20419
trollritualAuraID = 20254

--SpellChannelVisuals
spiritWorldTapChannelID = 27627

--Spells
redemptionSpellID = 130075
lightningSpellID = 52921
resurrectionSpellID = 129971
shrink = 29149

--Sound Entries
drumSoundsID = 24160
drumSoundsID2 = 23639


--Spawn Bonfires
bonfireModelID = ""world\\expansion02\\doodads\\generic\\bonfire\\bonfirenorthrend_01.m2""
bonfire1 = SpawnModelActor( bonfireModelID, 5224.81, 41.158, 31.9656, 259.676, 1, false)
bonfire2 = SpawnModelActor( bonfireModelID, 5240.25, 85.5278, 31.9763, 259.676, 1, false)



--Thunder King's urn
--urnModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\AncientMogu_Burial_Urn_01.M2""
--urn = SpawnModelActor(urnModelID, 5236.44, 63.0171, 33.6386, 247.417, 1, false)

--urnVortexModelID = ""WORLD\\EXPANSION02\\DOODADS\\ZULDRAK\\SKYVORTEX\\ZulDrak_SkyVortex.m2""
--urnVortex = SpawnModelActor(urnVortexModelID, 5236.44, 63.0171, 33.6386, 247.417, .05, false)
--urnVortex2 = SpawnModelActor(urnVortexModelID, 5236.44, 63.0171, 33.6386, 247.417, .05, false)
--FadeOut(urnVortex, 0)
--FadeOut(urnVortex2, 0)

-- Spawn Grunt 01
-- trollGruntCreatureID = 61074

-- trollGrunt01 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
-- trollGrunt02 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
-- trollGrunt03 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
-- trollGrunt04 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
-- trollGrunt05 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
-- trollGrunt06 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
-- trollGrunt07 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )
-- trollGrunt08 = SpawnActor( trollGruntCreatureID, 3611.88, "
1307,Kun Lai Summit - Resurrecting the Thunder God - crows,"for i=1, #crows do
	crows[i]:SetFacingToAbs(Vector:New(5234.26, 59.3507, 33.6381))
	CastSpellAtActor( crows[i], crows[i], shrink )
end"
1311,----- Initialization -----,
1312,[1] Brazie's PetBattle - Core - Default Turn,"petAbilityVisuals[effectVisualID]
	local turnVisual = petAbilityVisuals[turnVisualID]

	-- Stationary if undefined
	if ( not turnVisual and not effectVisual ) then 
		warning(""ERROR: Turn PreEffect Movement - No turn or effect ability visual!"",turn.abilityID)
		PerformMove( attackerROID, targetROID, PetBattleRange.InPlace, missed ); 

	-- Station if sessile
	else
		local attackerUnit = ROIDTOUNIT( attackerROID );
		if ( attackerUnit and attackerUnit.sessile ) then 
			warning(""WARNING: Sessile pet. (probably a construct). No movement."");
			return;

		-- Effect first
		elseif ( effectVisual ) then
			PerformMove( attackerROID, targetROID, effectVisual.range, missed ); 
		else
			PerformMove( attackerROID, targetROID, turnVisual.range, missed ); 
		end
	end

end

-- 
--  Resets the position after
-- 
function DefaultTurnCleanUp(ROID)
	local userPet = ROIDTOUNIT( ROID  );
	userPet.actor:WaitCastingComplete();

	--
	-- ABrazie: This was removed to allow pets to remain ""up front"" until both turns end
	--	 

	-- Reset/reposition
	--Dispatcher_PerformPostAttackCleanup(ROID);

	scene:WaitTimer(0.75);

end
"
1313,Critter - Apocalypse,"function Critter_Apocalypse(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(166822);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0.5)
	
	local baseScale = 8; 
	local bonusScalePerRoundRemaining = -0.5;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0) )

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1314,Critter - Apocalypse Impact,"function Critter_ApocalypseImpact( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");
	
		return;
	end

	local turnVisualID = turn.turnVisualID ;
	local caster = ROIDTOPET( ROID ); 

	local targetROID = GetMoveToROID( turn ); 
	local targetPlayer =  ROIDTOPLAYER( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	-- Center the impact on the Pad
	local impactOffset = Vector:New(0,0,5);
	local centerPosition = impactOffset;
	if (targetPlayer) then 
		centerPosition = targetPlayer.pets[ PetBattlePetID.Pad ].actor:GetPosition()+impactOffset;
	end

	local transform = Transform:New( centerPosition, 0 );
	
	-- Apocalypse
	local modelFileID = fid(437292);
	local animKitID = 3267;

	local create = ActorCreateData:NewModel(
		""Meteor"",
		modelFileID,
		transform,
		1);
	local meteor = scene:SpawnActor(create);
	meteor:PlayAnimKit(animKitID, false, Animations.None);

--	scene:WaitTimer(2);
	scene:WaitTimer(0.65); -- sync sounds a little better with meteor impact

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
	
		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 
--DefaultEffectVisualHandler( ROID, turn, turnVisualID)
--DefaultDoEffectProcessing( ROID, ""effect"", turn ); 

	scene:WaitTimer(1);

	meteor:Despawn();

end"
1315,Elemental - Flamethrower,"function Elemental_Flamethrower(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(165599);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0.5)
	
	local baseScale = 0.1; 
	local bonusScalePerRoundRemaining = 0.05;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0) )

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1316,Flying - Nevermore,"function Flying_Nevermore(ROID, isTurn, turn)
	if ( turn.class ~= ""turn"" ) then 
		print(""Error: Flying_Nevermore only supports turn objects"");
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Target!
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

	local NEVERMORE_BROADCAST_ID = 67227;
	pet.actor:BroadcastTextStereo( BroadcastType.Say, NEVERMORE_BROADCAST_ID )

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	-- Pause
	DefaultTurnCleanUp(ROID);
end"
1317,[1] PetBattle - Play Spell Effect,"0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellVisual(preCastInstance)

	local castInstanceID = 0
	if ( #pointList >= 1 ) then
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisualAtPoints(
			spellVisualID,
			abilityVisual.impactTime,
			true,
			pointList)
	else
		-- self targeted
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisual(spellVisualID)
	end

	-- wait for impact
	local waitMissiles = ( waitForMissiles == nil or waitForMissiles == true );
	local missilesExist = casterCastingPet.actor:HasPendingMissiles(castInstanceID)

	if (waitMissiles == true and missilesExist ) then
		casterCastingPet.actor:WaitMissilesImpacted(castInstanceID)
	else
		scene:WaitTimer(abilityVisual.impactTime)
	end

	return casterCastingPet, spellVisualID

end


function PerformSpellChannelVisualManyTargets(casterCastingPet, abilityVisualID, targetList)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellVisual(preCastInstance)

	-- loop through all the targets
	local targetActors = {casterCastingPet.actor};
	for k, v in pairs(targetList) do
		table.insert(targetActors, v.actor);
	end

	local instanceID;

	if ( #targetActors > 1 or casterCastingPet.actor ~= targetActors[1] ) then
		instanceID = casterCastingPet.actor:PlaySpellChannelVisualAtTargets(
			spellVisualID,
			targetActors)
	else
		-- self targeted
		instanceID = casterCastingPet.actor:PlaySpellChannelVisualAtTargets(spellVisualID, {})
	end

	return instanceID

end"
1318,Humanoid - Dreadful Breath,"function Humanoid_DreadfulBreath( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	-- Go home first
	SendEverybodyHome()

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;
	local abilityVisual = petAbilityVisuals[turnVisualID]
	if not abilityVisual then
		warning( ""No Turn Visual Found from"", turnVisualID );
		return 
	end
	local spellVisualID = abilityVisual.spellVisualID


	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

--ClearSpellChannelVisual(spellVisualID, instanceID)

	local targetList = {};
	for k,v in pairs( turn.targetList ) do
		local targetActor = ROIDTOUNIT(v).actor;

		table.insert( targetList, targetActor );
	end

	pet.actor:SetFacingToTarget( ROIDTOUNIT(turn.targetList[1]).actor, Vector:New() );

	--local instanceID = PerformSpellChannelVisualManyTargets ( pet, turnVisualID, targetList );
	local spellVisualInstanceID = pet.actor:PlaySpellStateVisual(spellVisualID)

	scene:WaitTimer(abilityVisual.impactTime);
	
	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultDoEffect( ROID, effect ); 

		scene:WaitTimer(abilityVisual.impactTime);
	end 

	--[[
	pet.actor:ClearSpellChannelVisual(spellVisualID, instanceID);
	for k,v in pairs ( targetList ) do
		v:ClearSpellChannelVisual(spellVisualID, instanceID)
	end
	--]]
	pet.actor:ClearSpellVisual( spellVisualInstanceID )

	DefaultTurnCleanUp(ROID);
end"
1319,MoP - Jade Forest - Serpent Rider Race - master -  ZTO,"raceCam = 462

scene:SetCamera(0,0,nil,nil)
scene:SetCamera(462, 5, nil, nil)

scene:WaitTimer(23) --Controls the duration of the scene
scene:SetCamera(0,2,nil,nil)
scene:WaitTimer(2)
scene:EndScene()"
1320,Kun Lai Summit - Celestial Gate Scene - Leven Dawnblade - JSB,"
Wait( 5 )

RunToLocation( leven, 3, 1809.95, 1372.31, 468.855, 209.207 )

Wait( 18 )

leven:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 4 )

leven:StopAnimKit(3015) -- to here

Wait( 5 )

leven:PlayOneShotAnimKit(2413)

Wait( 3.5 )

RunToLocation( leven, 3, 1789.97, 1376.54, 468.854, 172.482 )
RunToLocation( leven, 3, 1759.35, 1364.55, 468.882, 183.507 )
RunToLocation( leven, 3, 1707.4, 1364.04, 456.537, 180.132 )
RunToLocation( leven, 3, 1661.94, 1353.94, 453.606, 192.057 )
RunToLocation( leven, 3, 1620.92, 1345.18, 445.037, 192.057 )

FadeOut(leven, 1)"
1321,Kun Lai Summit - Celestial Gate Scene - Anduin - JSB,"
Wait( 5 )

RunToLocation( anduin, 3, 1814.3, 1374.71, 468.854, 270.182 )
RunToLocation( anduin, 3, 1810.11, 1366.91, 468.854, 184.361 )

Wait( 8 )


anduin:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 3 )

anduin:StopAnimKit(3015) -- to here

Wait( 3.5 )

anduin:PlayOneShotAnimKit(1431)

Wait( 4.5 )

RunToLocation( anduin, 3, 1793.69, 1374.57, 468.854, 198.602 )
RunToLocation( anduin, 3, 1765.43, 1365.91, 468.854, 181.727 )
RunToLocation( anduin, 3, 1707.3, 1367.63, 456.538, 177.227 )
RunToLocation( anduin, 3, 1662.58, 1377.06, 453.607, 172.727 )
RunToLocation( anduin, 3, 1606.38, 1385.26, 444.294, 171.377 )

FadeOut(anduin, 1)"
1322,Kun Lai Summit - Celestial Gate Scene - Kun Autumnlight - JSB,"
Wait( 5 )

RunToLocation( kun, 3, 1803.61, 1376.18, 468.855, 249.61 )

Wait( 15 )

kun:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 3.5 )

kun:StopAnimKit(3015) -- to here

Wait( 3.5 )

kun:PlayOneShotAnimKit(1431)

Wait( 4 )

RunToLocation( kun, 3, 1784.58, 1376.52, 468.854, 178.064 )
RunToLocation( kun, 3, 1764.78, 1363.68, 468.854, 179.864 )
RunToLocation( kun, 3, 1703.18, 1362.79, 455.815, 181.439 )
RunToLocation( kun, 3, 1671.94, 1371.56, 453.591, 165.914 )
RunToLocation( kun, 3, 1601.36, 1369.98, 445.515, 179.639 )

FadeOut(kun, 1)"
1323,Kun Lai Summit - Celestial Gate Scene - Rook Stonetoe - JSB,"
Wait( 5 )

RunToLocation( rook, 3, 1801.95, 1381.82, 468.854, 247.811 )

Wait( 15 )

rook:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 4 )

rook:StopAnimKit(3015) -- to here

Wait( 3.2 )

-- kun:PlayOneShotAnimKit(1431) -- salute

-- Wait( 4 )

RunToLocation( rook, 3, 1764.58, 1366.75, 468.855, 183.91 )
RunToLocation( rook, 3, 1705.89, 1367.88, 456.366, 177.835 )
RunToLocation( rook, 3, 1663.86, 1378.89, 453.591, 192.235 )
RunToLocation( rook, 3, 1614.72, 1393, 444.714, 164.785 )
-- RunToLocation( rook, 3, 1601.36, 1369.98, 445.515, 179.639 )

FadeOut(rook, 1)"
1324,Kun Lai Summit - Celestial Gate Scene - Zhi - JSB,"
Wait( 8 )

RunToLocation( zhi, 3, 1794.43, 1376.65, 468.854, 284.081 )

Wait( 12 )

zhi:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 2.4 )

zhi:StopAnimKit(3015) -- to here

Wait( 0.5 )

RunToLocation( zhi, 3, 1786.16, 1375.12, 468.854, 207.901 )
RunToLocation( zhi, 3, 1763.9, 1366.54, 468.854, 197.551 )
RunToLocation( zhi, 3, 1739.37, 1365.21, 467.059, 180.901 )
RunToLocation( zhi, 3, 1710.02, 1363.83, 456.941, 183.376 )
RunToLocation( zhi, 3, 1639.28, 1369.02, 445.257, 175.051 )

FadeOut(zhi, 1)"
1325,Kun Lai Summit - Celestial Gate Scene - Anji Autumnlight - JSB,"
Wait( 8 )

RunToLocation( anji, 3, 1805.11, 1380.78, 468.853, 325.931 )
RunToLocation( anji, 3, 1809.54, 1376.32, 468.853, 230.756 )

Wait( 5.5 )

anji:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 4 )

anji:StopAnimKit(3015) -- to here

Wait( 4 )

anji:PlayOneShotAnimKit(2413)

Wait( 3 )

RunToLocation( anji, 3, 1783.12, 1375.08, 468.854, 194.264 )
RunToLocation( anji, 3, 1761.36, 1365.65, 468.854, 184.814 )
RunToLocation( anji, 3, 1696.46, 1366.12, 454.363, 178.514 )
RunToLocation( anji, 3, 1660.87, 1373.92, 453.607, 167.489 )
RunToLocation( anji, 3, 1616.2, 1379.18, 445.257, 177.389 )

FadeOut(anji, 1)"
1326,Kun Lai Summit - Celestial Gate Scene - He Softfoot - JSB,"
Wait( 9 )

RunToLocation( he, 3, 1797.93, 1379.67, 468.853, 282.506 )

Wait( 8 )

he:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 2.1 )

he:StopAnimKit(3015) -- to here

Wait( 3.5 )

RunToLocation( he, 3, 1770.72, 1367.76, 468.854, 185.714 )
RunToLocation( he, 3, 1733.2, 1367.4, 465.445, 177.839 )
RunToLocation( he, 3, 1686.44, 1370.05, 453.591, 176.039 )
RunToLocation( he, 3, 1661.85, 1372.49, 453.607, 174.239 )
RunToLocation( he, 3, 1607.61, 1378.73, 445.209, 176.039 )

FadeOut(he, 1)"
1327,Kun Lai Summit - Celestial Gate Scene - Bartender Tomro - JSB,"
Wait( 9 )

RunToLocation( tomro, 3, 1802.73, 1348.13, 468.855, 108.155 )

Wait( 8 )

tomro:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 4 )

tomro:StopAnimKit(3015) -- to here

Wait( 3 )



RunToLocation( tomro, 3, 1762.14, 1361.02, 468.854, 180.537 )
RunToLocation( tomro, 3, 1708.69, 1360.68, 456.745, 180.312 )
RunToLocation( tomro, 3, 1662.05, 1349.61, 453.607, 193.362 )
RunToLocation( tomro, 3, 1613.5, 1338.07, 445.256, 193.362 )
-- RunToLocation( tomro, 3, 1601.36, 1369.98, 445.515, 179.639 )

FadeOut(tomro, 1)"
1328,Kun Lai Summit - Celestial Gate Scene - Dezco - JSB,"
Wait( 4 )

RunToLocation( dezco, 3, 1810.82, 1341.35, 468.855, 100.505 )
RunToLocation( dezco, 3, 1810.06, 1355.74, 468.855, 175.43 )

Wait( 8 )

dezco:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 4 )

dezco:StopAnimKit(3015) -- to here

Wait( 4 )

dezco:PlayOneShotAnimKit(1431)

Wait( 4 )

RunToLocation( dezco, 3, 1792.48, 1353.29, 468.853, 167.039 )
RunToLocation( dezco, 3, 1754.17, 1363.4, 468.958, 178.739 )
RunToLocation( dezco, 3, 1707, 1364.09, 456.478, 179.189 )
RunToLocation( dezco, 3, 1661.24, 1356.38, 453.607, 189.989 )
RunToLocation( dezco, 3, 1615.3, 1348.17, 444.21, 190.214 )

FadeOut(dezco, 1)"
1329,Kun Lai Summit - Celestial Gate Scene - Clone - JSB,"
Wait( 1 )

clone:PlaySoundKitStereo(32823, true)

Wait( 19 )

FadeIn (clone, 5)

Wait( 7 )

clone:PlayLoopingFullBodyAnim(Animations.EmoteKneel)
Wait( 1 )
clone:PlayLoopingFullBodyAnim(Animations.KneelLoop)

Wait( 20 )

FadeOut(clone, 0)

scene:SetFadeRegion(0, true) -- (radius, fadeActivePlayer)
"
1330,Kun Lai Summit - Celestial Gate Scene - Cook Tope - JSB,"
Wait( 8 )

RunToLocation( tope, 3, 1794.79, 1347.67, 468.855, 93.7586 )

Wait( 8 )

tope:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 1.6 )

tope:StopAnimKit(3015) -- to here

Wait( 2 )

tope:StopLoopingSplitBodyAnim()
Wait( 1.2 )

RunToLocation( tope, 3, 1771.52, 1360.15, 468.854, 174.689 )
RunToLocation( tope, 3, 1727.88, 1363.56, 463.76, 176.264 )
RunToLocation( tope, 3, 1692.4, 1358.95, 453.461, 195.839 )
RunToLocation( tope, 3, 1661.09, 1348.24, 453.607, 200.564 )
RunToLocation( tope, 3, 1613.7, 1334.95, 445.256, 195.389 )

FadeOut(tope, 1)"
1331,Kun Lai Summit - Celestial Gate Scene - Refugee01 - JSB,"
Wait( 9 )

RunToLocation( refugee01, 3, 1785.9, 1377.81, 468.854, 312.931 )

Wait( 8 )

refugee01:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 3 )

refugee01:StopAnimKit(3015) -- to here

Wait( 3.4 )


RunToLocation( refugee01, 3, 1770.88, 1365.63, 468.854, 190.846 )
RunToLocation( refugee01, 3, 1747.19, 1363.75, 468.459, 183.421 )
RunToLocation( refugee01, 3, 1705.69, 1363.32, 456.251, 180.271 )
RunToLocation( refugee01, 3, 1664.16, 1365.81, 453.591, 176.221 )
RunToLocation( refugee01, 3, 1616.62, 1371.4, 445.23, 175.546 )

FadeOut(refugee01, 1)"
1332,Kun Lai Summit - Celestial Gate Scene - Refugee02 - JSB,"
Wait( 9 )

RunToLocation( refugee02, 3, 1781.41, 1376.98, 468.854, 335.52 )

Wait( 8 )

refugee02:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 1.2 )

refugee02:StopAnimKit(3015) -- to here

Wait( 1.5 )


RunToLocation( refugee02, 3, 1769.78, 1369.57, 468.854, 197.595 )
RunToLocation( refugee02, 3, 1759.33, 1366.59, 468.869, 180.045 )
RunToLocation( refugee02, 3, 1705.28, 1368.94, 456.303, 177.345 )
RunToLocation( refugee02, 3, 1661.04, 1369.79, 453.607, 179.37 )
RunToLocation( refugee02, 3, 1601.2, 1370.43, 445.551, 179.145 )

FadeOut(refugee02, 1)"
1333,Kun Lai Summit - Celestial Gate Scene - Refugee03 - JSB,"
Wait( 12 )

RunToLocation( refugee03, 3, 1793.07, 1382.51, 468.854, 266.804 )

Wait( 5 )

refugee03:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 2.4 )

refugee03:StopAnimKit(3015) -- to here

Wait( 5 )

RunToLocation( refugee03, 3, 1779.86, 1370.57, 468.854, 197.504 )
RunToLocation( refugee03, 3, 1758.44, 1365.98, 468.885, 182.879 )
RunToLocation( refugee03, 3, 1709.47, 1365.53, 456.84, 179.729 )
RunToLocation( refugee03, 3, 1662.52, 1377.86, 453.607, 165.104 )
RunToLocation( refugee03, 3, 1623.66, 1391.11, 445.256, 159.479 )

FadeOut(refugee03, 1)"
1334,Kun Lai Summit - Celestial Gate Scene - Refugee04 - JSB,"
Wait( 12 )

RunToLocation( refugee04, 3, 1809.16, 1344.06, 468.853, 126.989 )

Wait( 5 )

refugee04:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 2 )

refugee04:StopAnimKit(3015) -- to here

Wait( 3 )

refugee04:PlayOneShotAnimKit(2413)

Wait( 3 )

RunToLocation( refugee04, 3, 1772.42, 1361.53, 468.855, 179.03 )
RunToLocation( refugee04, 3, 1710.11, 1363.91, 456.954, 177.905 )
RunToLocation( refugee04, 3, 1663.57, 1374.64, 453.591, 175.88 )
RunToLocation( refugee04, 3, 1603.39, 1380.13, 444.662, 174.755 )
-- RunToLocation( refugee04, 3, 1601.36, 1369.98, 445.515, 179.639 )

FadeOut(refugee04, 1)"
1335,Kun Lai Summit - Celestial Gate Scene - Refugee05 - JSB,"
Wait( 8 )

RunToLocation( refugee05, 3, 1807.75, 1350.79, 468.853, 134.414 )

Wait( 9 )

refugee05:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 2 )

refugee05:StopAnimKit(3015) -- to here

Wait( 5 )

refugee05:PlayOneShotAnimKit(1431)

Wait( 3.5 )

RunToLocation( refugee05, 3, 1782.07, 1352.15, 468.855, 176.582 )
RunToLocation( refugee05, 3, 1762.6, 1360.66, 468.855, 180.407 )
RunToLocation( refugee05, 3, 1709.44, 1359.56, 456.862, 181.307 )
RunToLocation( refugee05, 3, 1660.86, 1347.8, 453.607, 194.357 )
RunToLocation( refugee05, 3, 1613.25, 1331.28, 445.299, 199.307 )

FadeOut(refugee05, 1)"
1336,Kun Lai Summit - Celestial Gate Scene - Refugee06 - JSB,"
Wait( 4 )

RunToLocation( refugee06, 3, 1800.4, 1344.39, 468.855, 97.9638 )

Wait( 14 )

refugee06:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 3 )

refugee06:StopAnimKit(3015) -- to here

Wait( 3.2 )

RunToLocation( refugee06, 3, 1760.73, 1360.83, 468.854, 184.336 )
RunToLocation( refugee06, 3, 1704.65, 1358.75, 456.076, 182.086 )
RunToLocation( refugee06, 3, 1661.52, 1351.7, 453.607, 189.286 )
RunToLocation( refugee06, 3, 1619.18, 1343.79, 445.226, 192.661 )
--RunToLocation( refugee06, 3, 1618, 1350.66, 444.629, 186.389 )

FadeOut(refugee06, 1)"
1337,Kun Lai Summit - Celestial Gate Scene - Refugee07 - JSB,"
Wait( 10 )

RunToLocation( refugee07, 3, 1797.49, 1327.5, 468.854, 93.6892 )
RunToLocation( refugee07, 3, 1796.67, 1341.35, 468.854, 89.8642 )

Wait( 7 )

refugee07:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 1.8 )

refugee07:StopAnimKit(3015) -- to here

Wait( 3.5 )

RunToLocation( refugee07, 3, 1775.64, 1360.43, 468.854, 176.939 )
RunToLocation( refugee07, 3, 1732.14, 1362.91, 465.134, 176.714 )
RunToLocation( refugee07, 3, 1695.46, 1362.33, 454.173, 189.764 )
RunToLocation( refugee07, 3, 1662.77, 1356.06, 453.591, 186.614 )
RunToLocation( refugee07, 3, 1618, 1350.66, 444.629, 186.389 )

FadeOut(refugee07, 1)"
1338,Kun Lai Summit - Celestial Gate Scene - Refugee08 - JSB,"
Wait( 16 )

RunToLocation( refugee08, 3, 1790.58, 1341.99, 468.854, 72.08 )

Wait( 2 )

refugee08:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 2.6 )

refugee08:StopAnimKit(3015) -- to here
Wait( 4.3 )


RunToLocation( refugee08, 3, 1767.39, 1359.93, 468.854, 173.78 )
RunToLocation( refugee08, 3, 1754.06, 1361.41, 468.959, 183.68 )
RunToLocation( refugee08, 3, 1708.57, 1361.26, 456.726, 179.855 )
RunToLocation( refugee08, 3, 1664, 1355.95, 453.591, 186.83 )
RunToLocation( refugee08, 3, 1625.65, 1340.5, 445.257, 206.63 )

FadeOut(refugee08, 1)"
1339,Kun Lai Summit - Celestial Gate Scene - Refugee09 - JSB,"
Wait( 14 )

RunToLocation( refugee09, 3, 1779.9, 1328.78, 468.913, 43.5134 )
RunToLocation( refugee09, 3, 1785.89, 1346.27, 468.854, 70.9634 )

Wait( 1 )

refugee09:PlayOneShotAnimKit(3019)

Wait( 3 )

refugee09:PlayLoopingAnimKit(3015) -- from here

WaitForTrigger( ""enterVale"" )

Wait( 1.2 )

refugee09:StopAnimKit(3015) -- to here

Wait( 1 )


RunToLocation( refugee09, 3, 1768.96, 1360.62, 468.854, 174.913 )
RunToLocation( refugee09, 3, 1708.97, 1358.81, 456.79, 182.563 )
RunToLocation( refugee09, 3, 1661.74, 1356.11, 453.606, 183.688 )
RunToLocation( refugee09, 3, 1614.63, 1349.86, 444.147, 187.963 )
-- RunToLocation( refugee09, 3, 1635.11, 1345.43, 445.256, 198.829 )

FadeOut(refugee09, 1)"
1340,Kun Lai Summit - Celestial Gate Scene - Refugee10 - JSB,"
Wait( 15 )

RunToLocation( refugee10, 3, 1785.74, 1339.27, 468.854, 64.6619 )

Wait( 4 )

refugee10:PlayLoopingAnimKit(3015)

WaitForTrigger( ""enterVale"" )

refugee10:StopAnimKit(3015)

Wait( 3.5 )

RunToLocation( refugee10, 3, 1771.66, 1356.96, 468.854, 167.771 )
RunToLocation( refugee10, 3, 1753.84, 1362.68, 468.961, 179.929 )
RunToLocation( refugee10, 3, 1707.32, 1363.2, 456.525, 179.704 )
RunToLocation( refugee10, 3, 1660.58, 1352.86, 453.607, 191.404 )
RunToLocation( refugee10, 3, 1635.11, 1345.43, 445.256, 198.829 )

FadeOut(refugee10, 1)"
1342,Kun Lai Summit - Resurrecting the Thunder God - Functions - ZTO,"function TrollRitual(actor)
	local maskAura = actor:PlaySpellStateVisual( trollmaskAuraID )
	--local ritualAura = actor:PlaySpellStateVisual( trollritualAuraID )
end
"
1343,Kun Lai Summit - Resurrecting the Thunder God - Troll Dancers,"PlayLoopingSplitBodyAnim(trollUnderling12, Animations.EmoteDance)
PlayLoopingSplitBodyAnim(trollUnderling13, Animations.EmoteDance)"
1344,Kun Lai Summit - Resurrecting the Thunder God - Troll Cultists,"TrollRitual(trollUnderling14)
TrollRitual(trollUnderling15)
TrollRitual(trollUnderling16)
"
1345,Kun Lai Summit - Resurrecting the Thunder God - Patrol,"PlayLoopingSplitBodyAnim(moguPatroller01, Animations.Walk)
PlayLoopingSplitBodyAnim(trollPatroller01, Animations.Walk)
PlayLoopingSplitBodyAnim(trollPatroller02, Animations.Walk)
moguPatroller01:FollowRelativePathAtSpeed(4228, 2, true)
trollPatroller01:FollowRelativePathAtSpeed(4228, 2, true)
trollPatroller02:FollowRelativePathAtSpeed(4228, 2, true)
"
1346,Humanoid - Whirlwind,"function Humanoid_Whirlwind( manualSpin, ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return; 
	end
	local pet = ROIDTOUNIT( ROID )
	
	--local object, playerID, slot, transform = FindObjectByAbilityID( EnemyOf ( caster.playerID ), turn.abilityID )
	--local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);

	local turnVisualID = turn.turnVisualID ;


	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;


	local success = function( index )
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID, WildWinds_Success)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	function Whirlwind( effectIndex ) 
		local targetROID = GetMoveToROID( turn.effects[effectIndex] ); 
		local target =  ROIDTOUNIT( targetROID );
		local sourcePosition; 
		
		if(target) then
			sourcePosition, targetPosition = target.actor:GetPosition(), pet.actor:GetPosition();
		else
		    -- If we don't have a valid target, send the pet home
			sourcePosition, targetPosition = ROIDTOPLAYER( ROID ).home, pet.actor:GetPosition();
		end
		
		if ( target and target.states and target.states[STATE_FLYING] and target.states[STATE_FLYING] > 0 ) then
			local targetPlayer = ROIDTOPLAYER( targetROID );

			sourcePosition = targetPlayer.home;
		end

		local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )
		local attackPoint = LocalToWorldCoords( Vector:New( -1.5, 0, 0 ) );

		local windSpeed = 4;

		local wind = pet.actor;

		local distance = attackPoint:Dist(wind:GetPosition()) ;
		local travelTime = distance / windSpeed;

		wind:ClearFacing();


		if ( manualSpin == false ) then 
			wind:MoveToAbs( attackPoint, travelTime );
		else
			moveData = MoveData:Default(1)
			moveData.posControl = MovePosControl.TotalTime
			--moveData.posControl = MovePosControl.PointSpeed
			moveData.yawControl = MoveRotControl.AngleAbs
			moveData.pitchControl = MoveRotControl.None
			moveData.rollControl = MoveRotControl.None
			moveData.teleportToFirstPoint = false
			moveData.isGroundSnapping = true
			moveData.isRelative = false
			moveData.time = travelTime
			--moveData.speed = 4
			--moveData.animKitID = 2272 

			moveData.points[1].pos = attackPoint
			--moveData.points[1].time = 5
			--moveData.points[1].speed = 2 
			moveData.points[1].yaw = 1440--*travelTime
			moveData.points[1].pitch = 0
			moveData.points[1].roll = 0
			--moveData.points[1].lookAt = Vector:New(4,  -6, 5)

			wind:SetFacingTurnRate(1000)
			wind:Move( moveData );
		end

		local hitAlready = false;

		repeat
			local dist = wind:GetPosition():Dist( sourcePosition )

			if ( dist < 1 ) then 
				success(effectIndex);
				hitAlready = true;
			end

			scene:WaitTimer(0.1);
		until ( wind:IsMoving() == false or hitAlready == true );

		wind:WaitMovementComplete();
		
		if ( pet.turnRate ) then
			wind:SetFacingTurnRate( pet.turnRate )
		else
			wind:SetFacingTurnRate( DEFAULT_TURN_RATE )
		end
	end

	local turnVisualID = turn.turnVisualID ;
	local abilityVisual = petAbilityVisuals[turnVisualID]
	if not abilityVisual then
		warning( ""No Turn Visual Found from"", turnVisualID );
		return 
	end
	local spellVisualID = abilityVisual.spellVisualID

	local spellVisualInstanceID = pet.actor:PlaySpellStateVisual(spellVisualID)

	-- Cleanup
	for i=1, #turn.effects do
		Whirlwind(i)
	end

	pet.actor:ClearSpellVisual( spellVisualInstanceID )                    

	DefaultTurnCleanUp(ROID);

end


function WildWinds_Success( "
1347,Shared Package - Build Thing At Target Location,"function Mechanical_BuildThingOnAuraApplyTarget( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )

	-- Skitter around building the object
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
		local numPoints = 4;
		local doEffectsOnPoint = 2;
		local visual = turn.turnVisualID;

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;


		--local slot, transform = FindNextObjectSlot( caster.playerID ) 
		local location = target.actor:GetPosition();

		Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

		scene:WaitTimer(1);
		return;
	else
		DefaultTurnBehaviour( ROID, isTurn, turn )
	end 

	-- Reset/reposition
		DefaultTurnCleanUp(ROID);

end"
1348,Mechanical - Snap Trap,"function CreateObject_SnapTrap(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);
	local groundModel = fid(165666);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = pad.actor:GetPosition() + Vector:New(0,0,-5)
	
	local baseScale = 1;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local trap, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 0), 
			false )

	object.actor = trap;

	trap:WaitMoveToAbs ( pad.actor:GetPosition(), 2 );
	trap:SetSnapToGround(true);

	while ( aura.running ) do 
		scene:WaitTimer(0.1);
	end

	-- Snap trap needs to linger a bit longer

	while ( not object.done ) do 
		scene:WaitTimer(0.1);
	end

	trap:Fade(0,0.1);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function Dispatcher_TriggerSnapTrap( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
	local pet = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot); 
	if ( not object ) then
		warning(""WARNING: Object missing for ability: ""..turn.abilityID);
		return;
	end

	SendEverybodyHome();

	-- Make it sessile
	object.moveSpeed = 0;

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local turnVisualID = turn.turnVisualID ;

	local kit = object.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Custom0 );

	--DefaultTurnPreEffectMovement(ROID, turn )
	DefaultTurnVisualHandler(objectROID, turn, successOverride, failureOverride)

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( objectROID, effect, turnVisualID)
		DefaultDoEffectProcessing( objectROID, ""effect"", effect ); 
	end 

	--DefaultTurnCleanUp(ROID);

	scene:WaitTimer(1);

	-- Signal the Object to Despawn
	object.done = true;
end"
1350,Elemental - Spore Shroom,"function Elemental_SporeShroom(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);
	local groundModel = fid(201124);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = transform.position + Vector:New(0,0,-5)
	
	local baseScale = 0.5;
	local bonusScalePerRoundRemaining = -0.15;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local shroom, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 0), 
			false )

	object.actor = shroom;

	shroom:WaitMoveToAbs ( transform.position, 2 );
	shroom:SetSnapToGround(true);

	while ( aura.running ) do 

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			shroom:SetScale(scale);
		--end


		scene:WaitTimer(0.1);
	end

	-- Snap trap needs to linger a bit longer
	while ( object.busy ) do
		scene:WaitTimer(0.1);
	end

	shroom:SetScale(0.01);
	scene:WaitTimer(2);

	shroom:Fade(0,1);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function Elemental_SporeBurst( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local pet = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot); 
	if ( not object.actor ) then
		warning(""WARNING: Object missing for ability: ""..turn.abilityID);

		return;
	end

	-- Make it sessile
	object.moveSpeed = 0;
	object.busy = true;

	SendEverybodyHome();

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local turnVisualID = turn.turnVisualID ;

	local kit = object.actor:PlayAnimKit(AnimKits.OneShotFullBody, true, Animations.Custom0 );

	--DefaultTurnPreEffectMovement(ROID, turn )
	DefaultTurnVisualHandler(objectROID, turn, successOverride, failureOverride)

	scene:WaitTimer(1);

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( objectROID, effect, turnVisualID)
		DefaultDoEffectProcessing( objectROID, ""effect"", effect ); 
	end 

	--DefaultTurnCleanUp(ROID);

	scene:WaitTimer(1);

	-- Signal the object to despawn
	object.busy = false;
end"
1351,Turn Package - Cast Visual At Next Object Location,"function Generic_CastVisualAtNextObjectLocation( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local slot, transform = FindNextObjectSlot( target.playerID ) 
	local location = transform.position;


	local failed, reason = DidItFail(turn);

	-- Movement Phase
	DefaultTurnPreEffectMovement(ROID, turn )

	-- Visual Phase 

	--DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride) 

	local turnVisualID = turn.turnVisualID ;

	if ( failed ) then 
		local failureOffset = Vector:New( 1+math.random(0,1)*-2 ,0,0);
		PerformSpellVisualManyPoints(pet, turnVisualID, { location + failureOffset } );
	else
		PerformSpellVisualManyPoints(pet, turnVisualID, { location } );
	end


	-- Result Processing Phase

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 


	DefaultTurnCleanUp(ROID);

end"
1354,Humanoid - Omnislash,"function Humanoid_Omnislash( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_VanishAttackOnMultiHit"");

		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- ## Unique Stuff Start 
	local Omnislash = function ( targetROID ) 
		local pet = ROIDTOUNIT(ROID);
		local target =  ROIDTOUNIT( targetROID );
		
		local alpha = 0;
		local delay = 0.2; -- sec

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		local opponentLocation =  ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
		local attackSpot = FastLocalFacingCoordinates(opponentLocation, pet.actor:GetPosition() , Vector:New(0.5,0,0) );

		local distance = opponentLocation:Dist( attackSpot )

		pet.actor:PlaySpellCastVisualAtPoints(27761,  0.2, true, {attackSpot} );
		pet.actor:PlaySpellImpactVisual(27761)
		pet.actor:Fade(alpha, delay)
		scene:WaitTimer(delay)
		pet.actor:SetFacingToTarget(target.actor, Vector:New())

		pet.actor:WaitMoveToAbs(attackSpot,0); --driftDistance/pet.moveSpeed 

		pet.actor:PlaySpellCastVisual(27757);
		pet.actor:Fade( GetNaturalAlpha(ROID) , delay)
		scene:WaitTimer(delay)
	end
	-- ## Unique Stuff End


	local HandleEffect = function ( effectIndex ) 
		local effect = turn.effects[effectIndex];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	local targetROID = GetMoveToROID( turn.effects[1] ); 

	Omnislash( targetROID );

	-- Behave normally on 1 effect, do this on multiple effects
	if ( #turn.effects > 1 ) then 
		for i=2, #turn.effects do
			local nextTargetROID = GetMoveToROID( turn.effects[i] ); 

			if ( targetROID ~= nextTargetROID ) then 
				HandleEffect ( i-1 );
				Omnislash( nextTargetROID );
				targetROID = nextTargetROID;
			end
		end
	end

	HandleEffect ( #turn.effects );

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);
end
"
1355,Turn Package - Huge Knockback on Hit,"function Dispatcher_HugeKnockbackOnHit( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_HugeKnockbackOnMultiHit"");

		return;
	end

	DefaultTurnBehaviour( ROID, isTurn, turn, Knockback_Success)

end


function Knockback_Success( victimROID, attackerROID, visualID ) 

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 5, 1); 
end"
1356,Dread Wastes - Bind The Glamour - Functions - PRK,"local minSpeed = 7
local speedBonus = 5

function RunToLocationNoWait( actor, speed, x, y, z, facing )

	local destPos = Vector:New(x, y, z)
	
	local currPos = actor:GetPosition()
	local offset = currPos - destPos
	local distance = offset:Magnitude()

	local travelTime = distance / speed
	
	actor:MoveToAbs( destPos, travelTime )

	if facing then
		actor:SetFacing( facing )
	end

end

function Actor:SpritePathA()
	local splineNum = math.random(1,3)
	if splineNum == 1 then
		Actor.spline = 4259
	elseif splineNum == 2 then
		Actor.spline = 4260
	elseif splineNum == 3 then
		Actor.spline = 4261
	end
	Actor.speed = minSpeed + math.random(0,speedBonus)
	self:FollowPathAtSpeed(Actor.spline, Actor.speed)
end

function Actor:SpritePathB()
	local splineNum = math.random(1,3)
	if splineNum == 1 then
		Actor.spline = 4262
	elseif splineNum == 2 then
		Actor.spline = 4263
	elseif splineNum == 3 then
		Actor.spline = 4264
	end
	Actor.speed = minSpeed + math.random(0,speedBonus)
	self:FollowPathAtSpeed(Actor.spline, Actor.speed)
end

function Actor:SpritePathC()
	local splineNum = math.random(1,3)
	if splineNum == 1 then
		Actor.spline = 4265
	elseif splineNum == 2 then
		Actor.spline = 4266
	elseif splineNum == 3 then
		Actor.spline = 4267
	end
	Actor.speed = minSpeed + math.random(0,speedBonus)
	self:FollowPathAtSpeed(Actor.spline, Actor.speed)
end

function Actor:SpritePathD()
	local splineNum = math.random(1,3)
	if splineNum == 1 then
		Actor.spline = 4268
	elseif splineNum == 2 then
		Actor.spline = 4269
	elseif splineNum == 3 then
		Actor.spline = 4270
	end
	Actor.speed = minSpeed + math.random(0,speedBonus)
	self:FollowPathAtSpeed(Actor.spline, Actor.speed)
end

function Actor:SetAnim()
	local animNum = math.random(1,3)
	if animNum == 1 then
		Actor.anim = Animations.ReadySpellOmni
	elseif animNum == 2 then
		Actor.anim = Animations.ChannelCastDirected
	elseif animNum == 3 then
		Actor.anim = Animations.ChannelCastOmni
	end
end
"
1357,Kun Lai Summit - Resurrecting the Thunder God - kharZul,"PlayLoopingSplitBodyAnim( kharZul, Animations.ChannelCastDirected )
--local spiritTapChannel = ChannelSpellVisualAtActor( kharZul, spiritWorldTapChannelID, thunderKing, cauldron1, cauldron2, cauldron3, cauldron4 )
local spiritTapChannel = ChannelSpellVisualAtActor( kharZul, spiritWorldTapChannelID, thunderKing )
local spiritTapAura = kharZul:PlaySpellStateVisual( spiritWorldTapChannelID )


--Wait for summoning to Complete
WaitForTrigger(""summoning complete"")
Wait(5)
ClearChannelSpellVisual(spiritTapChannel)
kharZul:ClearSpellVisual( spiritTapAura)
StopLoopingSplitBodyAnim( kharZul, Animations.ChannelCastDirected )
PlayLoopingSplitBodyAnim( kharZul, Animations.Stand )
Wait(8)
PlayOneShotSplitBodyAnim( kharZul, Animations.EmoteCheer )"
1358,Kun Lai Summit - Resurrecting the Thunder God - trollPope,"PlayLoopingSplitBodyAnim( trollPope, Animations.ChannelCastDirected )
--local spiritTapChannel = ChannelSpellVisualAtActor( trollPope, spiritWorldTapChannelID, thunderKing, cauldron1, cauldron2, cauldron3, cauldron4 )
local spiritTapChannel = ChannelSpellVisualAtActor( trollPope, spiritWorldTapChannelID, thunderKing )
local spiritTapAura = trollPope:PlaySpellStateVisual( spiritWorldTapChannelID )


--Wait for summoning to Complete
WaitForTrigger(""summoning complete"")
Wait(5)
ClearChannelSpellVisual(spiritTapChannel)
trollPope:ClearSpellVisual( spiritTapAura)
StopLoopingSplitBodyAnim( trollPope, Animations.ChannelCastDirected )
PlayLoopingSplitBodyAnim( trollPope, Animations.Stand )
Wait(8)
PlayOneShotSplitBodyAnim( trollPope, Animations.EmoteCheer )"
1359,Dread Wastes - Bind The Glamour - Init - PRK,"sprites = SpawnFadedActorsAtPoints( 62770, 4258, true )
spritesB = SpawnFadedActorsAtPoints( 62770, 4258, true )
--spritesC = SpawnFadedActorsAtPoints( 62770, 4258, true )
--spritesD = SpawnFadedActorsAtPoints( 62770, 4258, true )
--spritesE = SpawnFadedActorsAtPoints( 62770, 4258, true )
--spritesF = SpawnFadedActorsAtPoints( 62770, 4258, true )
--spritesG = SpawnFadedActorsAtPoints( 62770, 4258, true )
--spritesH = SpawnFadedActorsAtPoints( 62770, 4258, true )
"
1360,Dread Wastes - Bind The Glamour - Action - PRK,"waitTime = --[[0.25]] 0.5
limit_a = 5
limit_b = 17
limit_c = 30


for i=1, limit_a do
	FadeIn(sprites[i], 1)
	sprites[i]:SpritePathA()
	if (i>=4) then
		FadeIn(spritesB[i-1], 1)
		--FadeIn(spritesC[i-2], 1)
		--FadeIn(spritesD[i-3], 1)
		spritesB[i-1]:SpritePathA()
		--spritesC[i-2]:SpritePathA()
		--spritesD[i-3]:SpritePathA()
	end
	Wait(waitTime)
--[[	FadeIn(spritesE[i], 1)
	spritesE[i]:SpritePathA()
	if (i>=4) then
		FadeIn(spritesF[i-1], 1)
		FadeIn(spritesG[i-2], 1)
		FadeIn(spritesH[i-3], 1)
		spritesF[i-1]:SpritePathA()
		spritesG[i-2]:SpritePathA()
		spritesH[i-3]:SpritePathA()
	end
	Wait(waitTime)]]
end

for i=limit_a+1, limit_b do
	FadeIn(sprites[i], 1)
	FadeIn(spritesB[i-1], 1)
	--FadeIn(spritesC[i-2], 1)
	--FadeIn(spritesD[i-3], 1)
	sprites[i]:SpritePathB()
	spritesB[i-1]:SpritePathB()
	--spritesC[i-2]:SpritePathB()
	--spritesD[i-3]:SpritePathB()
	Wait(waitTime)
--[[	FadeIn(spritesE[i], 1)
	FadeIn(spritesF[i-1], 1)
	FadeIn(spritesG[i-2], 1)
	FadeIn(spritesH[i-3], 1)
	spritesE[i]:SpritePathB()
	spritesF[i-1]:SpritePathB()
	spritesG[i-2]:SpritePathB()
	spritesH[i-3]:SpritePathB()
	Wait(waitTime)]]
end

for i=limit_b+1, limit_c do
	FadeIn(sprites[i], 1)
	FadeIn(spritesB[i-1], 1)
	--FadeIn(spritesC[i-2], 1)
	--FadeIn(spritesD[i-3], 1)
	sprites[i]:SpritePathC()
	spritesB[i-1]:SpritePathC()
	--spritesC[i-2]:SpritePathC()
	--spritesD[i-3]:SpritePathC()
	Wait(waitTime)
--[[	FadeIn(spritesE[i], 1)
	FadeIn(spritesF[i-1], 1)
	FadeIn(spritesG[i-2], 1)
	FadeIn(spritesH[i-3], 1)
	spritesE[i]:SpritePathC()
	spritesF[i-1]:SpritePathC()
	spritesG[i-2]:SpritePathC()
	spritesH[i-3]:SpritePathC()
	Wait(waitTime)]]
end

for i=limit_c+1, #sprites do
	FadeIn(sprites[i], 1)
	FadeIn(spritesB[i-1], 1)
	--FadeIn(spritesC[i-2], 1)
	--FadeIn(spritesD[i-3], 1)
	sprites[i]:SpritePathD()
	spritesB[i-1]:SpritePathD()
	--spritesC[i-2]:SpritePathD()
	--spritesD[i-3]:SpritePathD()
	Wait(waitTime)
--[[	FadeIn(spritesE[i], 1)
	FadeIn(spritesF[i-1], 1)
	FadeIn(spritesG[i-2], 1)
	FadeIn(spritesH[i-3], 1)
	spritesE[i]:SpritePathD()
	spritesF[i-1]:SpritePathD()
	spritesG[i-2]:SpritePathD()
	spritesH[i-3]:SpritePathD()
	Wait(waitTime)]]
end

Wait(3)

for i=1, #sprites do
	sprites[i]:SetAnim()
	spritesB[i]:SetAnim()
	--spritesC[i]:SetAnim()
	--spritesD[i]:SetAnim()
--	spritesE[i]:SetAnim()
--	spritesF[i]:SetAnim()
--	spritesG[i]:SetAnim()
--	spritesH[i]:SetAnim()

	RunToLocationNoWait(sprites[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)
	RunToLocationNoWait(spritesB[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)
	--RunToLocationNoWait(spritesC[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)
	--RunToLocationNoWait(spritesD[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)
--	RunToLocationNoWait(spritesE[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)
--	RunToLocationNoWait(spritesF[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)
--	RunToLocationNoWait(spritesG[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)
--	RunToLocationNoWait(spritesH[i], 7, 605.446+(math.random(-12000,12000)/1000), 4050.9+(math.random(-12000,12000)/1000), 205.886, 234, true)

	sprites[i]:PlayLoopingSplitBodyAnim(sprites[i].anim)
	spritesB[i]:PlayLoopingSplitBodyAnim(spritesB[i].anim)
	--spritesC[i]:PlayLoopingSplitBodyAnim(spritesC[i].anim)
	--spritesD[i]:PlayLoopingSplitBodyAnim(spritesD[i].anim)
--	"
1361,[1] Dread Wastes - Bind The Glamour - Action - PRK,"spritesE[i]:PlayLoopingSplitBodyAnim(spritesE[i].anim)
--	spritesF[i]:PlayLoopingSplitBodyAnim(spritesF[i].anim)
--	spritesG[i]:PlayLoopingSplitBodyAnim(spritesG[i].anim)
--	spritesH[i]:PlayLoopingSplitBodyAnim(spritesH[i].anim)
end

Wait(100)"
1362,Elemental - Volcano,"function Elemental_CreateVolcano(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);
	local groundModel = fid(523713);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)
	
	local zOffset = -1;
	local baseScale = 0.2;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local volcano, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( transform.position, 0), 
			true )

	local finalPosition = volcano:GetPosition() + Vector:New(0,0,zOffset)
	local startPosition = finalPosition + Vector:New(0,0,-2 + zOffset)
	volcano:SetHoverHeight(zOffset);
	volcano:SetSnapToGround(false);

	object.actor = volcano;
	object.sessile = true;
	object.moveSpeed = 0;

	volcano:SetTransform( Transform:New( startPosition, 0 ) )
	volcano:WaitMoveToAbs ( finalPosition, 4 );
	volcano:SetSnapToGround(true);

	local smoke

	local SMOKE_VISUAL_KIT = 27794;

	while ( aura.running ) do 
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( volcano::GetScale() ~= scale ) then
			volcano:SetScale(scale);
		--end

		if ( aura.turnsRemaining <= 2 and smoke == nil ) then
			smoke = volcano:PlaySpellStateVisual(SMOKE_VISUAL_KIT)
		end

		scene:WaitTimer(0.1);
	end

	-- Snap trap needs to linger a bit longer
	while ( object.processing == true ) do
		scene:WaitTimer(0.1);
	end

	volcano:SetScale(0.01);
	scene:WaitTimer(2);

	if ( smoke ) then 
		volcano:ClearSpellVisual( smoke )                       
	end
	volcano:Fade(0,1);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function Elemental_Volcano_Erupt( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local pet = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Volcano Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot); 
	if ( not object ) then 
		warning(""WARNING: Object missing for ability: ""..turn.abilityID);

		return;
	end
--print(""volcano"");

	-- Make it sessile
	object.moveSpeed = 0;
	object.processing = true;

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local turnVisualID = turn.turnVisualID ;

	local kit = object.actor:PlayAnimKit(AnimKits.OneShotFullBody, true, Animations.Custom0 );

	local offsets = {};
	local radius = 5.5;

	local base = object.actor:GetPosition();
	local count = 3;
	for i=1,count do 
		angle = math.pi *  2 * i / count + math.random(-math.pi/count/2,math.pi/count/2);
		local r = radius * math.random(50,150) / 100;

		table.insert( offsets, base+Vector:New( math.sin(angle)*r, math.cos(angle)*r, 0 ) );
	end

	local waitForMissiles = false;
	PerformSpellVisualManyPoints( object, turnVisualID, offsets, waitForMissiles );

	--DefaultTurnPreEffectMovement(ROID, turn )
	DefaultTurnVisualHandler(objectROID, turn, successOverride, failureOverride)

	scene:WaitTimer(1);

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultDoEffect( objectROID, effect)
	end 

	--DefaultTurnCleanUp(ROID);

	scene:WaitTimer(1);

	-- Signal the object to despawn
	object.processing = nil;
end"
1363,Lorewalker Story - S2: Saurok - Functions - ZTO,"function SaurokPath(actor, pathID)
	--Controls saurok that will mountself and run across a point.
	local moveData = MoveData:Default()

	moveData.pathID = pathID
	moveData.speed = math.random(10, 12)

	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Angle 
	moveData.isRelative = false
	moveData.teleportToFirstPoint = true
	moveData.animKitID = 2932

	FadeIn(actor, 2)
	actor:Move( moveData )

	actor:WaitMovementComplete()
end

function Kill(actor)
	CastSpellAtActor( actor, actor, squibID )
	--actor: PlayOneShotFullBodyAnim( Animations.Death ) --Begin Dying
	--actor: PlayLoopingFullBodyAnim( Animations.Dead ) --Stay Dead
	actor:PlayLoopingAnimKit(3284) -- Die and stay dead
end"
1364,Lorewalker Story - S2: Saurok - Scene 5 - saurok_waller01 - ZTO,"--Wait For Scene 8
WaitForTrigger(""Scene8"")
SaurokPath(saurok_waller01, 4272)
saurok_waller01:WaitMovementComplete()
PlayLoopingSplitBodyAnim( saurok_waller01, Animations.StealthStand )

--WAit for Scene 9
WaitForTrigger(""Scene9"")
Kill(saurok_waller01)

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_waller01, 1)
saurok_waller01: Despawn()"
1365,Lorewalker Story - S2: Saurok - Scene 5 - saurok_waller02 - ZTO,"--Wait For Scene 8
WaitForTrigger(""Scene8"")
SaurokPath(saurok_waller02, 4273)
saurok_waller02:WaitMovementComplete()
PlayLoopingSplitBodyAnim( saurok_waller02, Animations.ReadyUnarmed )

--WAit for Scene 9
WaitForTrigger(""Scene9"")
Kill(saurok_waller02)

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_waller02, 1)
saurok_waller02: Despawn()"
1366,Lorewalker Story - S2: Saurok - Scene 5 - saurok_waller03 - ZTO,"--Wait For Scene 8
WaitForTrigger(""Scene8"")
SaurokPath(saurok_waller03, 4274)

--WAit for Scene 9
WaitForTrigger(""Scene9"")
Kill(saurok_waller03)

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_waller03, 1)
saurok_waller03: Despawn()"
1367,Lorewalker Story - S2: Saurok - Scene 5 - saurok_waller04 - ZTO ,"--Wait For Scene 8
WaitForTrigger(""Scene8"")
SaurokPath(saurok_waller04, 4275)
saurok_waller04:WaitMovementComplete()
PlayLoopingSplitBodyAnim( saurok_waller04, Animations.ReadyBow )

--WAit for Scene 9
WaitForTrigger(""Scene9"")
Kill(saurok_waller04)

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_waller04, 1)
saurok_waller04: Despawn()"
1368,Lorewalker Story - Lorewalker Functions - ZTO,"function LorewalkerActor(actor)
	--Sets actor to appropriate desaturate
	actor:PlaySpellStateVisual(24803) --Cast Actor Visual
end"
1369,Lorewalker Story - S5: Mogu - quilen - ZTO,"WaitForTrigger(""smoothPhaseComplete"")
local actorAuraVisual = quilen:PlaySpellStateVisual(24803) --Cast Actor Visual
PlayLoopingSplitBodyAnim( quilen, Animations.ReadyUnarmed )

-- Wait for Scene 5
WaitForTrigger(""Scene5"")
Wait(5)
quilen:Fade(.75, 2)

--Wait for Scene 6
WaitForTrigger(""Scene6"")
Wait(2)
FadeOut(quilen, 2)

--Wait for EndScene
WaitForTrigger(""endScene"")
quilen:Despawn()"
1370,[1] Lorewalker Story - S6: Mantid - Lorewalker Cho - ZTO,"lorewalker:StopAnimKit(3229)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteTalk)
Wait(5)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteNo)
Wait(2)
lorewalker:StopAnimKit(3044)
lorewalker:StopAnimKit(3229)
lorewalker:PlayOneShotAnimKit(3306)
Wait(2)
lorewalker: ClearSpellVisual( torchVisual) --Clear Actor Visual
SendTrigger( ""fadeOutAll"" ) --Cue gravestones
Wait(1)

--Final
lorewalker:BroadcastText(BroadcastType.Say, 63717) -- VO Line 10 (Close it out)
PlayOneShotSplitBodyAnim(lorewalker, Animations.EmoteTalk)
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.305, 93.5645)
Wait(2)
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
1371,[1] Lorewalker Story - S10: Yaungol - Lorewalker Cho - ZTO,"Wait(1)
local actorAuraVisual = lorewalker:PlaySpellStateVisual(26672) --Hand Fire
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.305, 93.5645) -- Return to spawnpoint
--Wait (1)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

lorewalker:BroadcastText(BroadcastType.Say, 63732) -- VO Line 8 (Fire vanishes from Cho's hand)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
lorewalker: ClearSpellVisual( actorAuraVisual) -- Clear handfire
Wait (5)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips

--Wrap up
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
1372,Jade Forest - Twinspire Keep - Bomb 01 (Imps) - Action - PRK,"local spawnPoint = 4277
local spline = 4278
local startSpeed = 19
local waitTime = 4.5
local radius = 4
local targetDest = Vector:New(-132.014, -1565.36, 72.8402)
local missileSpeed = 8

-- Spawn planes and imps
planes = SpawnFadedActorsAtPoints( 65843, spawnPoint, false)
imps = SpawnFadedActorsAtPoints( 66278, 4287, false)


-- Send planes
for i=1, #planes do
	FadeIn(planes[i], 1)
	planes[i]:PlayLoopingFullBodyAnim(Animations.Fly)
	planes[i]:FollowRelativePathAtSpeed(spline, startSpeed+i, true)
end

Wait(1)
planes[1]:BroadcastTextStereo(BroadcastType.Say, 67691)

-- Send rockets

Wait(waitTime)
for i=#planes, 1, -1 do
	local randDist = math.random(0, 1000*radius)
	local randAngle = math.random(0, 360)
	local randPos = Vector:New(randDist*math.sin(randAngle)/1000, randDist*math.cos(randAngle)/1000, 0)
	local missilePos = targetDest + randPos
	planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, {missilePos})
	Wait(waitTime/startSpeed)
end



-- Prepare imp splines and spins
ImpSetup(#imps)

for  i=1, #imps do
	FadeIn(imps[i], .25)
end

local impPath = scene:LoadPath( 4287 )

-- Send imps on their merry way
repeat
	time = time + delay;
	Wait(delay)
	ImpStep(#imps)
	for i=1, #imps do
		local pos = impPath.nodes[i].pos
		imps[i]:SetTransform( Transform:New(pos + Vector:New(impValues[i][""x""], impValues[i][""y""], impValues[i][""z""]), impValues[i][""yaw""], impValues[i][""pitch""], impValues[i][""roll""] ) )
		if math.random(0,500)<1 then
			imps[i]:PlaySoundKit(31153, true)
		elseif math.random(0,500)<2 then
			imps[i]:PlaySoundKit(31152, true)
		end
	end

until ( time >= duration )

for i=1, #imps do
	FadeOut(imps[i], 1)
end



--Wait until planes stop
planes[#planes]:WaitMovementComplete()
scene:EndScene()"
1374,Jade Forest - Twinspire Keep - Bomb 02 (Beholder) - Action - PRK,"local spawnPoint = 4281
local spline = 4282
local startSpeed = 19
local waitTime = 4
local radius = 4
local targetDest = Vector:New(-145.791, -1348.14, 79.1)
local missileSpeed = 8

planes = SpawnFadedActorsAtPoints( 65843, spawnPoint, false)

for i=1, #planes do
	FadeIn(planes[i], 1)
	planes[i]:PlayLoopingFullBodyAnim(Animations.Fly)
	planes[i]:FollowRelativePathAtSpeed(spline, startSpeed+i, true)
end

Wait(1)
planes[1]:BroadcastTextStereo(BroadcastType.Say, 67688)

Wait(waitTime)
for i=#planes, 1, -1 do
	local randDist = math.random(0, 1000*radius)
	local randAngle = math.random(0, 360)
	local randPos = Vector:New(randDist*math.sin(randAngle)/1000, randDist*math.cos(randAngle)/1000, 0)
	local missilePos = targetDest + randPos
	planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, {missilePos})
	Wait(waitTime/startSpeed)
	--Broadcast(""sending missile ""..i)
end

planes[#planes]:WaitMovementComplete()
scene:EndScene()"
1375,Jade Forest - Twinspire Keep - Bomb 03 (Munitions) - Action - PRK,"local spawnPoint = 4283
local spline = 4284
local startSpeed = 19
local waitTime = 4
local radius = 4
local targetDest = Vector:New(-184.932, -1403.29, 73.4859)
local missileSpeed = 8
local explosions = 15
local explosionBunnies = {}
local bunnyPath = scene:LoadPath( 4290 )
local pos = bunnyPath.nodes[1].pos

planes = SpawnFadedActorsAtPoints( 65843, spawnPoint, false)

for i=1, explosions do
	explosionBunnies[i] = SpawnFadedActorAtPoint( 65843, 4290, false)
	local yaw = 0
	local pitch = math.random(-30,70)
	local roll = math.random(-70,70)
	local x, y = math.random(-5,5)
	local z = math.random(-10,0)
	explosionBunnies[i]:SetTransform( Transform:New(pos + Vector:New(x, y, z), 0, pitch, roll ) )
end

for i=1, #planes do
	FadeIn(planes[i], 1)
	planes[i]:PlayLoopingFullBodyAnim(Animations.Fly)
	planes[i]:FollowRelativePathAtSpeed(spline, startSpeed+i, true)
end

Wait(1)
planes[1]:BroadcastTextStereo(BroadcastType.Say, 67694)

Wait(waitTime)
planes[1]:BroadcastTextStereo(BroadcastType.Say, 67690)
for i=#planes, 1, -1 do
	local randDist = math.random(	0, 1000*radius)
	local randAngle = math.random(0, 360)
	local randPos = Vector:New(randDist*math.sin(randAngle)/1000, randDist*math.cos(randAngle)/1000, 0)
	local missilePos = targetDest + randPos
	planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, {missilePos})
	Wait(waitTime/startSpeed)
	--Broadcast(""sending missile ""..i)
end


for i=1, explosions do
	explosionBunnies[i]:PlaySpellCastVisual(math.random(27859, 27865))
	explosionBunnies[i]:PlaySoundKit(33305, true) --Explosion sounds (zto)
	Wait(math.random(100,200)/1000)
end

--[[
explosionBunny:PlaySpellCastVisual(27859)
explosionBunny:PlaySpellCastVisual(27860)
explosionBunny:PlaySpellCastVisual(27861)
explosionBunny:PlaySpellCastVisual(27862)
explosionBunny:PlaySpellCastVisual(27863)
explosionBunny:PlaySpellCastVisual(27864)
explosionBunny:PlaySpellCastVisual(27865)
--]]
planes[#planes]:WaitMovementComplete()
scene:EndScene()"
1376,Jade Forest - Twinspire Keep - Bomb 04 (Demolishers) - Action - PRK,"local spawnPoint = 4285
local spline = 4286
local startSpeed = 19
local waitTime = 5
local radius = 1
local targetDestA = {Vector:New(-144.386, -1465.83, 83.3739)}
local targetDestB = {Vector:New(-144.793, -1451.82, 83.3739)}
local targetDestC = {Vector:New(-144.989, -1438.81, 83.3739)}
local targetDestD = {Vector:New(-143.881, -1423.36, 83.3739)}
local missileSpeed = 8

planes = SpawnFadedActorsAtPoints( 65843, spawnPoint, false)

for i=1, #planes do
	FadeIn(planes[i], 1)
	planes[i]:PlayLoopingFullBodyAnim(Animations.Fly)
	planes[i]:FollowRelativePathAtSpeed(spline, startSpeed+i, true)
end

Wait(1)
planes[1]:BroadcastTextStereo(BroadcastType.Say, 67693)
 
Wait(waitTime)
for i=#planes, 1, -1 do
	if i<=2 then
		planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, targetDestA)
	elseif i<=4 then
		planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, targetDestB)
	elseif i<=6 then
		planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, targetDestC)
	else
		planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, targetDestD)
	end
	--local missilePos = targetDest + randPos
	Wait(waitTime/startSpeed)
	--Broadcast(""sending missile ""..i)
end

planes[#planes]:WaitMovementComplete()
scene:EndScene()"
1377,Brazie's PetBattle - Post Turn - Clean Up 2.0,"function GetROIDHome( roid ) 
	local player1 = GetTeamByIndex(1);
	local player2 = GetTeamByIndex(2);

	local unit = ROIDTOUNIT( roid )

	if ( ROIDISAOBJECT ( roid ) ) then
		return OBJECT_LOCATIONS[unit.playerID][unit.slot]
	elseif ( unit.playerID == player1.playerID and unit.slot == player1.activePet ) then
		return HOME_LIST[1];
	elseif ( unit.playerID == player2.playerID and unit.slot == player2.activePet ) then
		return HOME_LIST[2];
	elseif ( ROIDISAPET ( roid ) ) then
		return BACKROW_PET_OFFSETS[unit.playerID][unit.backlineIndex];
	end
end 

function SendEverybodyHome()
	
	local roidList = {};
	local homeList = {};

	local player1 = GetTeamByIndex(1);
	local player2 = GetTeamByIndex(2);

	-- Always insert the current front pets
	table.insert( roidList, PETTOROID(GetActivePetByIndex(1)) );
	table.insert( homeList, GetROIDHome( PETTOROID(GetActivePetByIndex(1)) ) );

	table.insert( roidList, PETTOROID(GetActivePetByIndex(2)) );
	table.insert( homeList, GetROIDHome( PETTOROID(GetActivePetByIndex(2)) ) );

	-- Always insert the backline pets
	for playerId = 1,2 do 
		for i=1,2 do
			local player = GetTeamByIndex(playerId);
			local nextSlot = math.fmod(player.activePet+i-1,3)+1;
			local roid = GETROIDFROMPLAYERIDANDSLOT( playerId, nextSlot );
			local unit = ROIDTOUNIT( roid );
			
			if ( unit ) then 
				local homeSpot = GetROIDHome( roid ) 

				if ( homeSpot ) then 
					table.insert( roidList, roid );
					table.insert( homeList, homeSpot );
				end
			end
		end
	end

	-- Cycle through all of the objects too
	local objList = GetAllObjects()

	for team, teamObjects in pairs ( objList ) do
		for slot, objData in pairs ( teamObjects ) do
			-- Only move non-stationary objects
			if ( objData.moveSpeed and objData.moveSpeed > 0 ) then 
				local objRoid = GETOBJECTROIDFROMPLAYERIDANDSLOT( team, slot );
				table.insert( roidList, objRoid );
				table.insert( homeList, GetROIDHome( objRoid )  );
			end
		end
	end

	for i=1, #roidList do 
		local roid = roidList[i];
		local homeTransform = homeList[i];
			
		DoHomeLeash( roid, homeTransform );
	end

	for i=1, #roidList do 
		local roid = roidList[i];

		DoHomeWait( roid );
	end

	for i=1, #roidList do 
		local roid = roidList[i];

		DoFacingCleanUp( roid );
	end

end

local homeLeashMoveData = MoveData:Default(2)
homeLeashMoveData.isGroundSnapping = true
homeLeashMoveData.forceGroundSnapPositionZ = true
homeLeashMoveData.yawControl = MoveRotControl.Tangent

function DoHomeLeash( roid, homeTransform )
	local unit = ROIDTOUNIT( roid );

	if ( not unit ) then 
		return;
	end

	if ( unit.states and unit.states[STATE_FLYING] and unit.states[STATE_FLYING] > 0 ) then
		return;
	end

	if ( unit.isPad or unit.dead or unit.moveSpeed <= 0 or unit.deathAnimKit ) then
		return;
	end

	local actor = unit.actor;
	actor:ClearFacing();

	local homeLoc = homeTransform.position;
	local dist = homeLoc:DistXY( actor:GetPosition() );

	if ( dist > 1.75 ) then 

		local travelTime = dist / ( unit.moveSpeed*backwardSpeedMulti);

		if ( travelTime > 2 ) then
			travelTime = 2;
		end

--[[
		-- LAST MINUTE HACK: DWilliams. MoveToAbs is not rejecting distance if already at the home
		-- loc due to a zOffset when on slopes
		local actorPos = actor:GetPosition()
		local flatHomeLoc = Vector:New(homeLoc.x, homeLoc.y, actorPos.z)
		actor:MoveToAbs ( flatHomeLoc, travelTime );
]]

		-- Fox fpr Bug ID: 351080 (above code is the old way)
		-- Add an extra point to the move path to hopefully get a succesful ground snap
		local actorPos = actor:GetPosition()
		homeLeashMoveData.points[1].pos = (actorPos + homeLoc)*0.5
		homeLeashMoveData.points[2].pos = homeLoc
		homeLeashMoveData.time = travelTime
		actor:Move(homeLeashMoveData)

	end
end

function DoHomeWait( roid )
	"
1378,Jade Forest - Twinspire Keep - Bomb 01 (Imps) - Functions - PRK,"time = 0;
delay = 1/60;
duration = 2

function ImpSetup( maxImps )
	impValues = {}
	for i = 1, maxImps do
		impValues[i] = {}
		impValues[i][""yaw""] 	 = 0
		impValues[i][""yawRate""]	 = math.random(-720,720);
		impValues[i][""pitch""] 	 = 0
		impValues[i][""pitchRate""]= math.random(-720,720);
		impValues[i][""roll""] 	 = 0
		impValues[i][""rollRate""] = math.random(-720,720);
		impValues[i][""xSpeed""]   = math.random(-15,15)
		impValues[i][""ySpeed""]   = math.random(-15,15)
		impValues[i][""zSpeed""]   = math.random(5,25)
	end
end


function ImpStep( maxImps )
	for i = 1, maxImps do
		impValues[i][""yaw""] = impValues[i][""yawRate""] * time
		impValues[i][""pitch""] = impValues[i][""pitchRate""] * time
		impValues[i][""roll""] = impValues[i][""rollRate""] * time
		impValues[i][""x""] = impValues[i][""xSpeed""] * time
		impValues[i][""y""] = impValues[i][""ySpeed""] * time
		impValues[i][""z""] = impValues[i][""zSpeed""] * time
	end
end
"
1381,Jade Forest - Horde Intro Scene - Init - REVISED  - JSB,"
-- spawn zeppelin
local zeppelinModel = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\ND_HordeGunship_Doodad.M2""
--local zeppelinModel = ""world\\expansion03\\doodads\\generic\\flying_horde_zeppelin.m2""
--zeppelin = SpawnModelActor( zeppelinModel, 3444.23, -278.363, 284.752, 249.2335, 1.0, false )
local zeppelins = SpawnModelActorsAtPoints( zeppelinModel, 4289, false )
zeppelin = zeppelins[1]

-- local allianceShipModel = ""world\\expansion03\\doodads\\generic\\alliance_ship01.m2""

local allianceShipModel = ""world\\expansion04\\doodads\\alliance\\boat\\Transport_Alliance_Battleship.m2""
allianceShip = SpawnModelActor( allianceShipModel, 3457.83, -923.965, 5, 257.2773, 1.0, false )

-- spawn nazgrim
local nazgrimCreatureID = 61682
nazgrim = SpawnActor( nazgrimCreatureID, 3472.03, -292.686, 267.85, 309, 1.0, false )


-- spawn gorrok
local gorrokCreatureID = 61846
gorrok = SpawnActor( gorrokCreatureID, 3436.13, -297.156, 266.117, 237.587, 1.0, false )

-- spawn clone
local cloneCreatureID = 61833
clone = SpawnActivePlayerCloneActor( 3442.52, -285.363, 266.4, 3.10204, 1.0, false )
-- end

-- spawn rivett
local rivettCreatureID = 61844
rivett = SpawnActor( rivettCreatureID, 3446.67, -276.436, 266.59, 107.266, 1.0, false )

-- spawn shokia
local shokiaCreatureID = 61866
shokia = SpawnActor( shokiaCreatureID, 3429.44, -306.501, 257.478, 20.364, 1.0, false )

-- spawn kiryn
local kirynCreatureID = 61867
kiryn = SpawnActor( kirynCreatureID, 3430.22, -308.585, 257.478, 21.714, 1.0, false )
-- kiryn:PlayLoopingFullBodyAnim(Animations.SitChairMed)

-- spawn zin'jun
local zinjunCreatureID = 61868
zinjun = SpawnActor( zinjunCreatureID, 3433.08, -253.139, 266.58, 136.81, 1.0, false )
-- zinjun:PlayLoopingFullBodyAnim(Animations.SitChairMed)

-- spawn snuff
local snuffCreatureID = 61869
snuff = SpawnActor( snuffCreatureID, 3431.48, -254.686, 266.5, 132.985, 0.7, false )
-- snuff:PlayLoopingFullBodyAnim(Animations.Sleep)

-- spawn Vanguard01
local vanguard01CreatureID = 61845
vanguard01 = SpawnActor( vanguard01CreatureID, 3398.65, -308.455, 266.7, 227.935, 1.0, false )

-- spawn Vanguard02
local vanguard02CreatureID = 61845
vanguard02 = SpawnActor( vanguard02CreatureID, 3448.81, -304.296, 266.5, 287.214, 1.0, false )

-- spawn Vanguard03
local vanguard03CreatureID = 61845
vanguard03 = SpawnActor( vanguard03CreatureID, 3423.56, -300.304, 266.9, 280.913, 1.0, false )

-- spawn Vanguard04
-- local vanguard04CreatureID = 61845
-- vanguard04 = SpawnActor( vanguard04CreatureID, 3449.31, -278.87, 266.9, 209.976, 1.0, false )

-- spawn Alliance Captain
local allianceCaptainCreatureID = 62635
allianceCaptain = SpawnActor( allianceCaptainCreatureID, 3437.88, -953.701, 16.9674, 63, 1.0, false )

-- spawn Zeppelin Cannon Bunnies
local zeppelinCannonBunnyCreatureID = 61997
-- zeppelinCannon01 = SpawnActor( zeppelinCannonBunnyCreatureID, 3454.88, -291.905, 263.772, 307.796, 1.0, false )
zeppelinCannon01 = SpawnActor( zeppelinCannonBunnyCreatureID, 3489.2, -293.387, 234.652, 303.071, 1.0, false )

-- zeppelinCannon02 = SpawnActor( zeppelinCannonBunnyCreatureID, 3448.31, -294.369, 263.772, 296.321, 1.0, false )
zeppelinCannon02 = SpawnActor( zeppelinCannonBunnyCreatureID, 3419.96, -316.706, 234.248, 272.066, 1.0, false )

zeppelinCannon03 = SpawnActor( zeppelinCannonBunnyCreatureID, 3442.37, -295.521, 263.957, 279.446, 1.0, false )
-- zeppelinCannon04 = SpawnActor( zeppelinCannonBunnyCreatureID, 3437.49, -295.544, 264.3, 280.5711, 1.0, false )
zeppelinCannon04 = SpawnActor( zeppelinCannonBunnyCreatureID, 3400.94, -322.551, 250.179, 240.341, 1.0, false )

local catapultCreatureID = 55276
catapult01 = SpawnActor( catapultCreatureID, 3419.56, -308.057, 266.293, 197.807, 1.0, false )



-- spawn fogs
-- in front
local cloudModel = "
1382,Jade Forest - Horde Intro Scene - Init 02 - REVISED - JSB,"-- spawn Zeppelin Cannon Targets
local zeppelinTargetBunnyCreatureID = 61997
zeppelinTarget01 = SpawnActor( zeppelinTargetBunnyCreatureID, 3711.8, -615.821, 0, 119.85, 1.0, false )
zeppelinTarget02 = SpawnActor( zeppelinTargetBunnyCreatureID, 3680.78, -655.993, 0, 111.088, 1.0, false )
zeppelinTarget03 = SpawnActor( zeppelinTargetBunnyCreatureID, 3593.46, -636.814, 0, 303.071, 1.0, false )
zeppelinTarget04 = SpawnActor( zeppelinTargetBunnyCreatureID, 3633.02, -648.158, 16.8191, 333.671, 1.0, false )

-- spawn Ship Cannon Targets
local shipTargetBunnyCreatureID = 61997
shipTarget01 = SpawnActor( shipTargetBunnyCreatureID, 3420.3, -182.878, 287.249, 291.9, 1.0, false )
shipTarget02 = SpawnActor( shipTargetBunnyCreatureID, 3405.47, -175.282, 288.542, 283.825, 1.0, false )
shipTarget03 = SpawnActor( shipTargetBunnyCreatureID, 3433.14, -286.017, 274.849, 288.775, 1.0, false )
-- shipTarget04 = SpawnActor( shipTargetBunnyCreatureID, 3336.59, -178.342, 300.145, 289.45, 1.0, false )

shipTarget04 = SpawnActor( shipTargetBunnyCreatureID,  3219.56, -268.576, 295.145, 289.45, 1.0, false )


-- Spawn Zeppelin Fire Bunnies
local ZeppelinFireBunnyCreatureID = 61997
zepFire01 = SpawnActor( shipTargetBunnyCreatureID, 3430.05, -293.369, 282.558, 248.543, 1.0, false )
zepFire02 = SpawnActor( shipTargetBunnyCreatureID, 3424.01, -275.033, 282.181, 141.443, 1.0, false )


-- spawn Ship Fire Bunnies
shipFire01 = SpawnActor( shipTargetBunnyCreatureID, 3645.32, -629.195, 12.1322, 139.734, 1.0, false )
shipFire02 = SpawnActor( shipTargetBunnyCreatureID, 3653.98, -615.715, 8.04192, 146.709, 1.0, false )
shipFire03 = SpawnActor( shipTargetBunnyCreatureID, 3658.26, -610.236, 18.7299, 141.309, 1.0, false )

-- spawn Cannons
local cannonModel = ""CREATURE\\ALLIANCEBRASSCANNON\\AllianceBrassCannon.M2""
cannon01 = SpawnModelActor( cannonModel, 3453.15, -912.879, 5.31411, 148.077, 1, false ) -- ( modelFileName, x, y, z, facing, scale, snapToGround )
cannon02 = SpawnModelActor( cannonModel, 3449.91, -918.046, 5.31411, 147.852, 1, false )
cannon03 = SpawnModelActor( cannonModel, 3446.98, -922.787, 5.31411, 146.502, 1, false )
cannon04 = SpawnModelActor( cannonModel, 3443.59, -927.911, 5.31411, 146.502, 1, false )

-- spawn zeppelin fire
local zeppelinFireCreatureID = 61997
zeppelinFire = SpawnActor( zeppelinFireCreatureID, 3310.88, -336.348, 279, 143, 5, false )

-- spawn zeppelin fire 01
local zeppelinFireCreatureID = 61997
zeppelinFire01 = SpawnActor( zeppelinFireCreatureID, 3302.44, -334.681, 278.071, 325.581, 1, false )

-- spawn zeppelin fire 02
local zeppelinFireCreatureID = 61997
zeppelinFire02 = SpawnActor( zeppelinFireCreatureID, 3308.47, -332.332, 273.305, 313.882, 1, false )

-- spawn zeppelin fire 03
local zeppelinFireCreatureID = 61997
zeppelinFire03 = SpawnActor( zeppelinFireCreatureID, 3292.96, -344.628, 282.832, 27.9496, 1, false )

-- spawn Alliance Crewman 01
local allianceCrewmanCreatureID = 62634
allianceCrewman01 = SpawnActor( allianceCrewmanCreatureID, 3449.95, -929.539, 10.166, 133.384, 1.0, false )

-- spawn Alliance Crewman 02
local allianceCrewmanCreatureID = 62634
allianceCrewman02 = SpawnActor( allianceCrewmanCreatureID, 3456.89, -933.5, 10.1617, 133.519, 1.0, false )

-- spawn Alliance Crewman 03
local allianceCrewmanCreatureID = 62634
allianceCrewman03 = SpawnActor( allianceCrewmanCreatureID, 3461.14, -928.944, 10.1617, 138.919, 1.0, false )

-- spawn Alliance Crewman 04
local allianceCrewmanCreatureID = 62634
allianceCrewman04 = SpawnActor( allianceCrewmanCreatureID, 3462.34, -917.888, 10.34, 155.119, 1.0, false )

-- spawn Alliance Crewman 05
local allianceCrewmanCreatureID = 62634
allianceCrewman05 = SpawnActor( allianceCrewmanCreatureID, 3453.03, -918.13, 10.2, 171.229, 1.0, false )

-- spawn fire bunnies
local firebunnyCreatureID = 61997
fireBunny01 = "
1383,Jade Forest - Horde Intro Scene - MASTER - REVISED - JSB,"
local sceneOrigin = scene:GetPosition()
scene:SetCamera(0, 0.0, nil, nil)
scene:SetCamera(473, 0.0, nil, nil)	-- camera to get us in letterbox initially

local initialFadeID = 958
scene:ApplyScreenEffect(initialFadeID)

Wait(1.0)

-- initial pan

SetCameraFollowPath( 370, 0.0, 4291, 4292, 15 )

scene:ClearScreenEffect(initialFadeID)

local shakeY
local shakeZ
if Scene.AddCameraShake then
	shakeY = scene:AddCameraEffect(30, sceneOrigin, nil, 1)
	shakeZ = scene:AddCameraEffect(31, sceneOrigin, nil, 1)
end

Wait(4)
SendTrigger( ""gorrokMove"" )
Wait(4)

-- cut to Nazgrim

scene:SetCamera(473, 10, nil, nil)
Wait(5)
scene:SetCamera(470, 20, nil, nil)
Wait(18)
scene:SetCamera(471, 20, nil, nil) -- rivett intial shot

Wait(4)

SendTrigger( ""rivettTalk"" )
Wait(0.5)
scene:SetCamera(472, 0.25, nil, nil) -- rivett close shot
Wait(4)



if Scene.ClearCameraShake and shakeY and shakeZ then
	scene:RemoveCameraEffect(shakeY)
	scene:RemoveCameraEffect(shakeZ)
end


-- Cliff cam

-- SetCameraFollowPath( 476, 0, nil, 4295, 15 ) -- time was 20
SetCameraFollowPath( 476, 0, nil, 4295, 15 ) -- time was 15

Wait(7) -- WAS 7
SendTrigger( ""allianceShip"" )

Wait(5) -- WAS 7
-- look down at alliance ship
scene:SetCamera(477, 1, nil, nil)
SendTrigger( ""shipSpotted"" )
Wait(3) 


scene:SetCamera(478, 1, nil, nil)

scene:SetCamera(479, 20, nil, nil) -- panning nazgrim
Wait(6.5) -- Was 5.5

scene:SetCamera(480, 0, nil, nil) -- ship to zepp

scene:SetCamera(481, 30, nil, nil)

Wait( 0.1 )
SendTrigger( ""zeppelinMove"" )
Wait(13)

SendTrigger( ""shipMove"" )

-- NEWNESS

SetCameraFollowPath( 482, 0, nil, 4309, 5 ) 

Wait( 4 )

SetCameraFollowPath( 483, 3, 4312, nil, 15 ) 

Wait( 13 )

scene:ApplyScreenEffect( 827 )


Wait( 3 )


scene:EndScene()



-- OLDNESS

--SetCameraFollowPath( 383, 0.0, 4308, 4309, 14 )

--Wait(10)


--SetCameraFollowPath( 385, 4.0, 3116, 3117, 16 )

--Wait(12)
--SendTrigger( ""crashMove"" )
--scene:SetCamera(384, 0, nil, nil)

--Wait( 10 )
--SendTrigger( ""zeppelinCrash"" )"
1384,Jade Forest - Horde Intro Scene - Celebration - REVISED - JSB,"
WaitForTrigger( ""shipMove"" )

Wait( 4 )
nazgrim:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)
Wait( 2.5 )
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteRoar)

shokia:StopLoopingFullBodyAnim()
shokia:PlayLoopingFullBodyAnim(Animations.Stand)

Wait( 0.5 )

shokia:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
clone:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
rivett:StopLoopingFullBodyAnim()
vanguard01:StopLoopingFullBodyAnim()
gorrok:StopLoopingFullBodyAnim()

Wait( 0.5 )

rivett:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
vanguard01:PlayOneShotFullBodyAnim(Animations.EmoteApplaud)
gorrok:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
snuff:PlayOneShotFullBodyAnim(Animations.EmoteDance)
vanguard02:StopLoopingFullBodyAnim()
vanguard03:StopLoopingFullBodyAnim()
kiryn:StopLoopingFullBodyAnim()
zinjun:StopLoopingFullBodyAnim()

Wait( 0.25 )
kiryn:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
zinjun:PlayOneShotFullBodyAnim(Animations.EmotePoint)


-- more cheers

WaitForTrigger( ""crashMove"" )
kiryn:Despawn()
zinjun:Despawn()
vanguard01:Despawn()
vanguard02:Despawn()
vanguard03:Despawn()
snuff:Despawn()
gorrok:Despawn()
rivett:Despawn()
nazgrim:Despawn()
shokia:Despawn()

"
1385,Jade Forest - Horde Intro Scene - Zeppelin - REVISED - JSB,"
-- PlayLoopingSplitBodyAnim( zeppelin, Animations.ShipMoving )

zeppelin:PlayLoopingAnimKit(2272)


zeppelinDest = Vector:New(3292.78, -337.059, 266.204)
zeppelinMoveSpeed = 6
zeppelinSrc = zeppelin:GetPosition()
zeppelinMoveOffset = zeppelinDest - zeppelinSrc

-- force the ship to face a direction
zeppelin:SetFacingToAbs(Vector:New(3969.94, -99.27, 259.995))

WaitForTrigger( ""zeppelinMove"" )

RunToLocation(zeppelin, zeppelinMoveSpeed, zeppelinDest.x, zeppelinDest.y, zeppelinDest.z)

--[[
--
-- COPY THIS INTO ZEPP PASSENGER SCRIPT
-- COPY STARTS HERE
--
local relativeMover = allianceCaptain -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY THIS INTO ZEPP PASSENGER SCRIPT
-- COPY ENDS HERE
--
]]

-- WaitForTrigger( ""crashMove"" )

-- zeppelin:FollowPath( 3118, 10 )

-- Wait( 10.2 )

-- FadeOut( zeppelin, 0 )
-- zeppelinFire:Despawn()
-- zeppelinFire01:Despawn()
-- zeppelinFire02:Despawn()
-- zeppelinFire03:Despawn()
-- Wait( 2.5 )
-- zeppelin:Despawn()"
1386,Jade Forest - Horde Intro Scene - Alliance Ship - REVISED - JSB,"

allianceShipDest = Vector:New(3650.85, -622.323, 5)
allianceShipMoveTime = 25


allianceShipSrc = allianceShip:GetPosition()
allianceShipMoveOffset = allianceShipDest - allianceShipSrc

-- force the ship to face a direction
allianceShip:SetFacingToAbs(Vector:New(3416.34, -985.503, 0))

WaitForTrigger( ""allianceShip"" )

RunToLocation(allianceShip, allianceShipMoveTime, allianceShipDest.x, allianceShipDest.y, allianceShipDest.z)

-- WaitForTrigger( ""shipMove"" )

-- RunToLocation(allianceShip, 10, 4113.9, -581.805, 0)


WaitForTrigger( ""zeppelinMove"" )
Wait( 13.5 )

-- allianceShipDest = Vector:New(3603.17, -571.637, 0)
RunToLocation(allianceShip, 500, 3845.42, -645.091, 0)
RunToLocation(shipFire03, 500, 3859.47, -636.061, 18.5503)
RunToLocation(shipFire02, 500, 3851.24, -641.253, 6.3)
RunToLocation(shipFire01, 500, 3835.78, -653.77, 12.9994)
RunToLocation(zeppelinTarget04, 500, 3822.34, -663.603, 17.7212)

local instance = shipFire01:PlaySpellStateVisual(19388)
local instance = shipFire02:PlaySpellStateVisual(19388)
local instance = shipFire03:PlaySpellStateVisual(19388)
local instance = zeppelinTarget04:PlaySpellStateVisual(19388)
"
1387,Jade Forest - Horde Intro Scene - Alliance Captain - REVISED - JSB,"allianceCaptain:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCaptain -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 2 )

allianceCaptain:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)

Wait( 8.1 )

local shakeOrigin = Vector:New(3723.47, -639.766, 14.877)
shakeX = scene:AddCameraEffect( 32, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin, nil, 1 )
allianceCaptain:PlaySoundKitStereo( 26826, true )

allianceCaptain:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCaptain:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCaptain:PlaySoundKitStereo( 14992, true )
 

allianceCaptain:FollowPath( 3231, 4 )

Wait( 3 )

allianceCaptain:Despawn()

"
1388,Jade Forest - Horde Intro Scene - Alliance Crewman01 - REVISED - JSB,"allianceCrewman01:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 3.9 )

allianceCrewman01:PlayOneShotFullBodyAnim(Animations.EmoteKneel)

Wait( 6.2 )

allianceCrewman01:SetFacingToAbs ( Vector:New (3821.13 -738.368 -117.581) )
allianceCrewman01:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCrewman01:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCrewman01:PlaySoundKitStereo( 14993, true )

allianceCrewman01:FollowPath( 3233, 3.5 )

Wait( 3 )

allianceCrewman01:Despawn()
"
1389,Jade Forest - Horde Intro Scene - Alliance Crewman02 - REVISED - JSB,"allianceCrewman02:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 4.1 )

allianceCrewman02:PlayOneShotFullBodyAnim(Animations.EmoteKneel)

Wait( 6 )

allianceCrewman02:SetFacingToAbs ( Vector:New (3673.09 -743.304 -108.07) )
allianceCrewman02:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCrewman02:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCrewman02:PlaySoundKitStereo( 14994, true )

allianceCrewman02:FollowPath( 3234, 4 )


Wait( 3 )

allianceCrewman02:Despawn()
"
1390,Jade Forest - Horde Intro Scene - Alliance Crewman03 - REVISED - JSB,"allianceCrewman03:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 4.3 )

allianceCrewman03:PlayOneShotFullBodyAnim(Animations.EmoteKneel)

Wait( 5.8 )

allianceCrewman03:SetFacingToAbs ( Vector:New (3802.41 -751.219 -112.927) )
allianceCrewman03:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = allianceCrewman02:PlaySpellStateVisual(9628) --Cast Actor Visual

allianceCrewman03:FollowPath( 3232, 3.5 )

Wait( 3 )

allianceCrewman03:Despawn()"
1391,Jade Forest - Horde Intro Scene - Alliance Crewman04 - REVISED - JSB,"allianceCrewman04:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 3 )

allianceCrewman04:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)

Wait( 7.1 )

allianceCrewman04:PlayOneShotFullBodyAnim(Animations.Knockdown)


Wait( 5 )

allianceCrewman04:Despawn()"
1392,Jade Forest - Horde Intro Scene - Alliance Crewman05 - REVISED - JSB,"allianceCrewman05:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = allianceCrewman05 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 2 )
allianceCrewman05:SetFacingToAbs ( Vector:New (3457.83, -923.965, 0) )
Wait( 1 )

allianceCrewman05:PlayOneShotFullBodyAnim(Animations.EmoteShout)

Wait( 7.1 )
allianceCrewman05:PlayOneShotFullBodyAnim(Animations.Knockdown)

Wait( 5 )

allianceCrewman05:Despawn()"
1393,Jade Forest - Horde Intro Scene - Cannon01 - REVISED - JSB,"cannon01:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 15 )


cannon01:Despawn()"
1394,Jade Forest - Horde Intro Scene - Cannon02 - REVISED - JSB,"cannon02:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )

Wait( 15 )


cannon02:Despawn()"
1395,Jade Forest - Horde Intro Scene - Cannon03 - REVISED - JSB,"cannon03:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do


WaitForTrigger( ""zeppelinMove"" )
Wait( 15 )


cannon03:Despawn()"
1396,Jade Forest - Horde Intro Scene - Cannon04 - REVISED - JSB,"cannon04:SetFacingToAbs ( Vector:New (3362.29, -338.691, 257.81) )
--
-- COPY STARTS HERE
--
local relativeMover = cannon04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + allianceShipMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""allianceShip"" )
RunToLocation( relativeMover, allianceShipMoveTime, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

-- Tell allianceCaptain what to do

WaitForTrigger( ""zeppelinMove"" )
Wait( 15 )


cannon04:Despawn()"
1397,Jade Forest - Horde Intro Scene - Cannons Fire - REVISED - JSB,"
WaitForTrigger( ""zeppelinMove"" )
Wait( 1.5 ) 
CastSpellAtActor( zeppelinCannon01, zeppelinTarget01,120673 )
Wait( 1.6 ) 
CastSpellAtActor( zeppelinCannon02, zeppelinTarget02,120673 )
Wait( 0.8 ) 
-- CastSpellAtActor( zeppelinCannon03, zeppelinTarget03,120673 )
Wait( 0.5 ) 
CastSpellAtActor( zeppelinCannon04, zeppelinTarget04,120682 )

Wait( 1.26 )

cannon01:PlaySoundKitStereo( 31894, true )

local shakeOrigin = Vector:New(3753.73, -688.424, 3, 134.71)
shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( cannon01, shipTarget01,120705 )
CastSpellAtActor( cannon01, shipTarget01,122262 )
Wait( 0.3 ) 

cannon02:PlaySoundKitStereo( 31894, true )

shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( cannon02, shipTarget02,120705 )
CastSpellAtActor( cannon02, shipTarget02,122262 )
Wait( 0.3 ) 

cannon03:PlaySoundKitStereo( 31894, true )

shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( cannon03, shipTarget03,130641 )
CastSpellAtActor( cannon03, shipTarget03,130717 )
Wait( 0.3 ) 

cannon04:PlaySoundKitStereo( 31894, true )

shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( cannon04, shipTarget04,120705 )
CastSpellAtActor( cannon04, shipTarget04,122262 )

-- Zeppelin HIT

Wait( 8.6 )
SendTrigger( ""zeppelinHit"" )

clone:SetFacing(183)
clone:PlayLoopingAnimKit(1092)
rivett:PlayLoopingAnimKit(1092)

local shakeOrigin = Vector:New(3231.69, -402.53, 316.233)
shakeX = scene:AddCameraEffect( 32, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin, nil, 1 )

local actorAuraVisual = zepFire01:PlaySpellStateVisual(22920) --Cast Actor Visual
local actorAuraVisual = zepFire02:PlaySpellStateVisual(22920) --Cast Actor Visual
-- local actorAuraVisual = shipTarget03:PlaySpellStateVisual(19388) --Cast Actor Visual

zepFire01:PlaySoundKitStereo( 17480, true )

-- Orc Fly 01
vanguard02:SetFacingToAbs ( Vector:New (3821.13 -738.368 -117.581) )
vanguard02:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = vanguard02:PlaySpellStateVisual(9628) --Cast Actor Visual

-- vanguard02:PlaySoundKitStereo( 1343, true )

vanguard02:FollowPath( 4310, 4.5 )




-- Orc Fly 02

-- local actorAuraVisual = shipTarget03:PlaySpellStateVisual(19388) --Cast Actor Visual

vanguard03:SetFacingToAbs ( Vector:New (3821.13 -738.368 -117.581) )
vanguard03:PlayLoopingFullBodyAnim(Animations.FlyFall)
local actorAuraVisual = vanguard03:PlaySpellStateVisual(9628) --Cast Actor Visual

-- vanguard03:PlaySoundKitStereo( 1343, true )

vanguard03:FollowPath( 4311, 5 )




"
1398,Jade Forest - Horde Intro Scene - Cannons Target 01 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1399,Jade Forest - Horde Intro Scene - Cannons Target 02 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1400,Jade Forest - Horde Intro Scene - Cannons Target 03 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1401,Jade Forest - Horde Intro Scene - Cannons Target 04 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = shipTarget04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1402,Jade Forest - Horde Intro Scene - Ship Cannon Target - REVISED - JSB,"
WaitForTrigger( ""zeppelinMove"" )

Wait( 11 )

-- local instance = zeppelinTarget04:PlaySpellStateVisual(19388)
local instance = zeppelinTarget04:PlaySpellStateVisual(25187)

Wait( 4 )

local instance = shipFire01:PlaySpellStateVisual(25187)
local instance = shipFire02:PlaySpellStateVisual(25187)
local instance = shipFire03:PlaySpellStateVisual(25187)
"
1403,Jade Forest - Horde Intro Scene - Zeppelin Cannon01 - REVISED - JSB,"zeppelinCannon01:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship

WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )


--
-- COPY STOPS HERE
--

"
1404,Jade Forest - Horde Intro Scene - Zeppelin Cannon02 - REVISED - JSB,"zeppelinCannon02:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

"
1405,Jade Forest - Horde Intro Scene - Zeppelin Cannon03 - REVISED - JSB,"zeppelinCannon03:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--

"
1406,Jade Forest - Horde Intro Scene - Zeppelin Cannon04 - REVISED - JSB,"zeppelinCannon04:SetFacingToAbs ( Vector:New (3557.96, -447.832, 148.442) )
--
-- COPY STARTS HERE
--
local relativeMover = zeppelinCannon04 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

--
-- COPY STOPS HERE
--
"
1407,Jade Forest - Horde Intro Scene - Vangard01 - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = vanguard01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

vanguard01:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- vanguard01:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1408,Jade Forest - Horde Intro Scene - Vangard02 - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = vanguard02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

vanguard02:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- vanguard02:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1409,Jade Forest - Horde Intro Scene - Vangard03 - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = vanguard03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

vanguard03:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- vanguard03:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1410,Jade Forest - Horde Intro Scene - Shokia - REVISED - JSB,"Wait(4)

RunToLocation( shokia, 2.5, 3444.71, -302.435, 266.258, 25.7635 )
RunToLocation( shokia, 2.5, 3442.3, -264.639, 266.258, 66.2635 )
RunToLocation( shokia, 2.5, 3455.6, -252.725, 267.804, 40.681 )


-- COPY STARTS HERE
--
local relativeMover = shokia -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

shokia:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
shokia:PlayLoopingFullBodyAnim(Animations.KneelLoop)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()
"
1411,Jade Forest - Horde Intro Scene - Clone - REVISED - JSB,"
Wait( 1 )
clone:PlaySoundKitStereo(32824, true)


WaitForTrigger( ""rivettTalk"" )

clone:PlaySoundKitStereo(32825, true)

Wait(2)

clone:SetFacing(320)

Wait(1)

clone:PlayOneShotFullBodyAnim(Animations.EmoteCheer)


-- RunToLocation( clone, 1, 3449.42, -286.845, 266.9, 276.345 )


-- COPY STARTS HERE
--
local relativeMover = clone -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

clone:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

WaitForTrigger( ""zeppelinCrash"" )

RunToLocation( clone, 400, 3168.19, -429.932, 246.441, 213 )
clone:PlayLoopingFullBodyAnim(Animations.FlyFall)
clone:FollowPath( 3246, 3 )

Wait( 2.5 )

scene:SetCamera(402, 0, nil, nil)

Wait( 0.5 )

scene:SetCamera(0, 0, nil, nil)"
1412,Jade Forest - Horde Intro Scene - Nazgrim - REVISED - JSB,"
WaitForTrigger( ""gorrokMove"" )
Wait( 12 )
nazgrim:SetFacing(183)

WaitForTrigger( ""nazgrimTalk"" )

nazgrim:PlayOneShotAnimKit(2332)
-- Wait(2)
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalkNoSheathe)
nazgrim:BroadcastTextStereo(BroadcastType.Say, 65983) -- Nazgrim VO line 1 
Wait(3.5)
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalkNoSheathe)

WaitForTrigger( ""rivettTalk"" )

Wait( 3 )

RunToLocation( nazgrim, 4, 3468.14, -302.457, 268.35, 294 )

WaitForTrigger( ""shipSpotted"" )
Wait( 1 )

nazgrim:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)
nazgrim:BroadcastTextStereo(BroadcastType.Say, 65984) -- Nazgrim VO line 2
Wait( 2 )

nazgrim:SetFacing(120)
Wait( 1 )

nazgrim:PlayOneShotAnimKit(2329)
Wait( 1 )
nazgrim:BroadcastTextStereo(BroadcastType.Say, 65985) -- Nazgrim VO line 3
Wait( 3 )



-- COPY STARTS HERE
--
local relativeMover = nazgrim -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
nazgrim:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()

"
1413,Jade Forest - Horde Intro Scene - Gorrok - REVISED - JSB,"
WaitForTrigger( ""gorrokMove"" )
RunToLocation( gorrok, 2.5, 3466.99, -293.411, 267.55, 6.28638 )
Wait(1)

gorrok:PlayLoopingFullBodyAnim(Animations.EmoteTalk)
gorrok:BroadcastTextStereo(BroadcastType.Say, 65982) -- Gorrok VO line 

Wait(5.3)
gorrok:StopLoopingFullBodyAnim()

Wait(1.3)

SendTrigger( ""nazgrimTalk"" )
Wait(8)
gorrok:PlayOneShotFullBodyAnim(Animations.EmoteSalute)
Wait(2.3)

gorrok:SetFacing(183)

-- RunToLocation( gorrok, 2, 3434.29, -289.758, 268.19, 203.226 )

-- SendTrigger( ""rivettTalk"" )


-- WaitForTrigger( ""shipSpotted"" )
-- Wait(1.5)
-- RunToLocation( gorrok, 2, 3439.87, -293.908, 267.8, 293.237 )



-- COPY STARTS HERE
--
local relativeMover = gorrok -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

gorrok:SetFacingToAbs(Vector:New(3671.88, -532.339, 88.999))
-- gorrok:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1414,Jade Forest - Horde Intro Scene - Rivett - REVISED - JSB,"
-- WaitForTrigger( ""gorrokMove"" )
Wait(5)
RunToLocation( rivett, 2, 3436.77, -257.918, 266.844, 119.866 )
--Wait(6)
--rivett:SetFacing(157)
Wait(2)
RunToLocation( rivett, 2, 3449.59, -291.564, 266.7, 280.291 )

WaitForTrigger( ""rivettTalk"" )
Wait(0.25)
rivett:PlayOneShotFullBodyAnim(Animations.EmoteShout)
rivett:BroadcastTextStereo(BroadcastType.Say, 65990) -- Rivett VO line 1 
Wait(2)
rivett:PlayOneShotFullBodyAnim(Animations.EmotePoint)

WaitForTrigger( ""shipSpotted"" )
-- Wait(2)
-- RunToLocation( rivett, 2, 3456.49, -282.811, 268.1, 275 )


-- COPY STARTS HERE
--
local relativeMover = rivett -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

rivett:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1415,Jade Forest - Horde Intro Scene - Zin'jun - REVISED - JSB,"
-- COPY STARTS HERE
--
local relativeMover = zinjun -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

zinjun:PlayLoopingFullBodyAnim(Animations.Cower)

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()

"
1416,Jade Forest - Horde Intro Scene - Kiryn - REVISED - JSB,"Wait(4)

RunToLocation( kiryn, 2.5, 3445.5, -304.147, 266.458, 25.7635 )
RunToLocation( kiryn, 2.5, 3443.9, -265.341, 266.458, 66.2635 )
RunToLocation( kiryn, 2.5, 3456.9, -254.238, 267.804, 40.681 )


-- COPY STARTS HERE
--
local relativeMover = kiryn -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
--relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
kiryn:PlayLoopingFullBodyAnim(Animations.Cower)
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
--relativeMover:StopLoopingFullBodyAnim()

"
1417,Jade Forest - Horde Intro Scene - Snuff - REVISED - JSB,"

-- COPY STARTS HERE
--
local relativeMover = snuff -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )

snuff:SetFacingToAbs(Vector:New(3508.48, -631.563, 122.261))

RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
relativeMover:StopLoopingFullBodyAnim()"
1418,Jade Forest - Horde Intro Scene - Special Fog - REVISED - JSB,"
WaitForTrigger( ""rivettTalk"" )
FadeIn( mist, 0 )

Wait(8)
FadeOut( mist, 6 )
"
1419,Jade Forest - Horde Intro Scene - Mists - REVISED - JSB,"
Wait( 6 )

FadeIn(mist03,5)
FadeIn(mist04,5)

WaitForTrigger( ""shipSpotted"" )

Wait( 3 )
for index, mist in pairs(mists) do
	mist:Fade( 0, 3 )
end

Wait( 3 )

-- despawn all the mists
for index, mist in pairs(mists) do
	mist:Despawn()
end

mist02:Fade( 0, 3 )
FadeOut(mist03,3)
FadeOut(mist04,3)
"
1420,Jade Forest - Horde Intro Scene - Zeppelin Fires - REVISED - JSB,"zeppelinFire:SetFacingToAbs(Vector:New(2972.01, -45.2662, 337.945))
zeppelinFire01:SetFacingToAbs(Vector:New(2972.01, -45.2662, 337.945))
zeppelinFire02:SetFacingToAbs(Vector:New(2972.01, -45.2662, 337.945))

WaitForTrigger( ""zeppelinMove"" )

Wait( 25 )


local instance = zeppelinFire:PlaySpellStateVisual(25195)
local instance = zeppelinFire01:PlaySpellStateVisual(25196)
local instance = zeppelinFire02:PlaySpellStateVisual(25196)

Wait( 6 )

local instance = zeppelinFire01:PlaySpellStateVisual(25195)

Wait( 2 )

local instance = zeppelinFire02:PlaySpellStateVisual(25195)


-- Wait( 5 )



WaitForTrigger( ""crashMove"" )
local instance = zeppelinFire:PlaySpellStateVisual(19335)
local instance = zeppelinFire03:PlaySpellStateVisual(9520)
local instance = zeppelinFire03:PlaySpellStateVisual(19335)

zeppelinFire:FollowPath( 3120, 10 )
zeppelinFire03:FollowPath( 3245, 10 )
"
1421,Jade Forest - Horde Intro Scene - CRASH - REVISED - JSB,"
WaitForTrigger( ""zeppelinCrash"" )

local instance = crashBunny:PlaySpellStateVisual(25201)

local shakeOrigin01 = Vector:New(3168.19, -429.932, 246.441)
shakeX = scene:AddCameraEffect( 35, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 36, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 37, shakeOrigin01, nil, 1 )
"
1423,Jade Forest - Garroshar Point - Strafing Runs - Init - ZTO,"--Constants
spawnPoint = 4294  
bombspline = { 4293, 4296, 4297 } --These are patrolling splines
local startSpeed = 25 
local waitTime = 6
local radius = 1 
bombers = { }

--Bombers
bomberCreatureID = 65843
pilotCreatureID = 66931

--SpellAuraVisuals
pilotAuraVisualID = 28072
 
"
1424,Jade Forest - Garroshar Point - Strafing Runs - Functions - ZTO,"function Strafer(bomberID) 

	while true do

		scene:WaitTimer(math.random(5, 10))
		local bomber = SpawnActor( bomberCreatureID, -661.467, -1376.7, 125.032, 261.451, 1, false )
		local pilot = SpawnActor( pilotCreatureID, -661.467, -1376.7, 125.032, 261.451, 1, false )
		RideVehicleActor( pilot, bomber )
		PlayLoopingSplitBodyAnim( pilot, Animations.ReclinedMount)

		FadeOut(bomber, 0)
		FadeOut(pilot, 0)
		local squad = SpawnFadedActorsAtPoints( bomberCreatureID, spawnPoint, false ) 
		local pilots = SpawnFadedActorsAtPoints( pilotCreatureID, spawnPoint, false ) 
		for i=1, #squad do
			squad[i]:SetFacing(261.451)
			squad[i]:SetRelativeTo(bomber)
			PlayLoopingSplitBodyAnim( squad[i], Animations.Fly)
			RideVehicleActor( pilots[i], squad[i] )
			PlayLoopingSplitBodyAnim( pilots[i], Animations.ReclinedMount)
		end
		bombers[bomberID] =
		{
			actor = bomber[i];
			id = bomberID; 
		}

		local speed = 19
		local pathID = bombspline[math.random(#bombspline)]
		Wait(2)
		for i=1, #squad do
			FadeIn(squad[i], 2)
			FadeIn(pilots[i], 2)
			squad[i]:PlaySoundKit(33308, false) -- Looping gyrocopter sound
		end
		while (bombers[bomberID]) do

			-- move on a looping path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			moveData.animKitID = 697

			bomber:Move( moveData )
			--Wait(2)
			FadeIn(bomber, 2)
			FadeIn(pilot, 2)
			bomber:PlaySoundKit(33308, false) -- Looping gyrocopter sound
 
			bomber:WaitMovementComplete()

		end
		
	end

end"
1425,Jade Forest - Garroshar Point - Strafing Runs - strafer wave 1 - ZTO,Strafer(1)
1430,Jade Forest - Garroshar Point - Strafing Runs - strafer wave 2 - ZTO,"Wait(5)
Strafer(2)"
1431,Jade Forest - Garroshar Point - Strafing Runs - strafer wave 3 - ZTO ,"Wait(10)
Strafer(3)"
1432,Jade Forest - Garroshar Point - Strafing Runs - strafer wave 4 - ZTO ,"Wait(20)
Strafer(4)"
1437,Jade Forest - Garroshar Point - Strafing Runs - strafer wave 5 - ZTO,"Wait(25)
Strafer(5)"
1438,Jade Forest - Garroshar Point - Strafing Runs - strafer wave 6 - ZTO,"Wait(30)
Strafer(6)"
1439,Jade Forest - Garroshar Point - Strafing Runs - strafer wave 7 - ZTO  ,"Wait(35)
Strafer(7)"
1450,[1] Jade Forest - Horde Intro Scene - Init - REVISED  - JSB,"""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mists = SpawnModelActorsAtPoints( cloudModel, 3094, false )

mist02 = SpawnModelActor( cloudModel, 3269.19, -354.343, 281.249, 24.4204, 20.0, false )
mist03 = SpawnModelActor( cloudModel, 3393.15, -322.946, 221.9, 10.6935, 20.0, false )
mist04 = SpawnModelActor( cloudModel, 3393.15, -322.946, 221.9, 10.6935, 15.0, false )

FadeOut(mist03,0)
FadeOut(mist04,0)


-- special fog
local mistModel = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mist = SpawnModelActor( mistModel, 3471.27, -310.149, 268, 128.282, 4.0, false )
FadeOut( mist, 0 )

"
1459,Jade Forest - Horde Intro Scene - Zeppelin Fire 01 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = zepFire01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1460,Jade Forest - Horde Intro Scene - Zeppelin Fire 02 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = zepFire02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1461,Jade Forest - Horde Intro Scene - Zeppelin Engine Bunny - Zeppelin - REVISED - JSB,"
WaitForTrigger( ""zeppelinHit"" )

local instance = shipTarget03:PlaySpellStateVisual(28016)

Wait( 4 )

local shakeOrigin = Vector:New(3231.69, -402.53, 316.233)
shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( shipTarget03, shipTarget03,130642 )
shipTarget03:PlaySoundKitStereo( 12243, true )

Wait( 3 )

local shakeOrigin = Vector:New(3231.69, -402.53, 316.233)
shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( shipTarget03, shipTarget03,130642 )
shipTarget03:PlaySoundKitStereo( 12243, true )

Wait( 2.5 )

local shakeOrigin = Vector:New(3231.69, -402.53, 316.233)
shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( shipTarget03, shipTarget03,130642 )
shipTarget03:PlaySoundKitStereo( 12243, true )

Wait( 3 )

local shakeOrigin = Vector:New(3231.69, -402.53, 316.233)
shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( shipTarget03, shipTarget03,130642 )
shipTarget03:PlaySoundKitStereo( 12243, true )

Wait( 2.5 )

local shakeOrigin = Vector:New(3231.69, -402.53, 316.233)
shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )

CastSpellAtActor( shipTarget03, shipTarget03,130642 )
shipTarget03:PlaySoundKitStereo( 12243, true )"
1462,Legendary 5.0 - Chapter 01 - Tavern Intro - Horde Flag,"-- The Horde Flag Spawns in During Wrathion's Patriotic Speech.

-- Wait until Wrathion is Ready
WaitForTrigger(""plantFlag"")
Wait(3)

-- Set Up and Spawn in Flag
allyFlagID = 64819
allyFlag = SpawnActor( allyFlagID, 825.458, -169.151, 415.262, 149.085, 1, true ) 
Wait(1)
globe:PlaySpellCastVisual( 27991 )
Wait(13)
FadeOut( allyFlag, 2 )
"
1463,Legendary 5.0 - Chapter 01 - Tavern Intro - Horde - Main,"-- Wrathion's Actions
local wrathionSpellTarget={Vector:New(825.461, -169.286, 415.262)}

-- Set Up and Spawn in Wrathion (Horde)
wrathionID = 64616
wrathion = SmoothPhaseSpawnActor( wrathionID, 821.63, -163.648, 415.192, 241.546, 1, false ) 
SendTrigger(""wrathionSpawn"")
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Spawn in Sitting
wrathion:PlaySoundKitStereo(33426, true) -- BEGIN MUSIC
Wait(2)
StopLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Stand Up
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 241.546, true ) --Feet on floor
Wait(2)

-- Here's Where He Begins Talking
wrathion:BroadcastText(BroadcastType.Say, 65088) -- ""Very Good. Let's talk.""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3)
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 281.371, true ) --Turn
Wait(.5)
wrathion:BroadcastText(BroadcastType.Say, 65089) -- ""Tong! Drinks please!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(4)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65090) -- ""My father, Deathwing...""
RunToLocation( wrathion, 1.3, 826.54, -169.823, 415.262, 148.002 ) --Walk to center of room
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 65091) -- ""He was misguided..""
Wait(2)
wrathion:PlayOneShotAnimKit(1629) -- Unsheathe Anim
Wait(1)
local holdDagger = wrathion:PlaySpellStateVisual(27499) -- Holding a Dagger
wrathion:PlayOneShotAnimKit(2983) -- Slices own hand! Eww!
Wait(5.2)
wrathion:PlaySpellCastVisualAtPoints(27502, 1.5, false, wrathionSpellTarget)
Wait(4)
wrathion:PlayOneShotAnimKit(1629) -- Sheathe Anim
Wait(1)
wrathion:ClearSpellVisual( holdDagger) --Put Away Dagger
Wait(1)
RunToLocation( wrathion, 1.3, 827.5, -170.416, 415.216, 148.002 ) -- Step Back
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65092) -- ""We are a point of light...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(4.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65093) -- ""Sometimes I think...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(4)
RunToLocation( wrathion, .8, 827.5, -170.416, 415.216, 233.823, true ) -- Turn to Tong
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
wrathion:BroadcastText(BroadcastType.Say, 65094) -- ""Ah, thank you Tong.""
Wait(3)
wrathion:PlaySpellCastVisual(27471) -- Have a Drink
Wait(2)
RunToLocation( wrathion, 1.3, 827.5, -170.416, 415.216, 148.002, true ) -- Face Globe
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65095) -- ""Now, to my point...""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(4.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65096) -- ""Believe me! What Garrosh did...""
Wait(2)
PlayLoopingSplitBodyAnim( wrathion, Animations.ReadySpellOmni  ) -- Channel Pose, like a Boss
Wait(11)
StopLoopingSplitBodyAnim( wrathion, Animations.ReadySpellOmni  ) -- Stop posing
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65097) -- ""But the War Deeply Troubles Me...""
Wait(3.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
wrathion:BroadcastText(BroadcastType.Say, 65098) -- ""A divided Azeroth...""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
"
1464,[1] Legendary 5.0 - Chapter 01 - Tavern Intro - Horde - Main,"Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 65099) -- ""This war has to end!...""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.7)

-- WRATHION SUPPORTS THE HORDE! (If you play as Horde...)
SendTrigger(""plantFlag"")
wrathion:BroadcastText(BroadcastType.Say, 65101) -- ""Yay, Horde!""
RunToLocation( wrathion, 1, 823.287, -168.086, 415.262, 147.139 ) -- Move forward to center of room
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes )
Wait(3)

-- The Normal Script Resumes Here
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 65102) -- ""How do we bring a swift end...?""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(4)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65103) -- ""We must ensure...""
Wait(1)
RunToLocation( wrathion, 1, 821.63, -163.648, 415.192, 241.546, false ) -- Walk back to seat
Wait(1)
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Sit back down
Wait(2)
"
1466,[1] Jade Forest - Horde Intro Scene - Init 02 - REVISED - JSB,"SpawnActor( firebunnyCreatureID, 3444.1, -293.4, 265.828, 93.7105, 1, false )

local firebunnyCreatureID = 61997
fireBunny02 = SpawnActor( firebunnyCreatureID, 3443.51, -280.915, 266.062, 211.611, 1, false )

local firebunnyCreatureID = 61997
fireBunny03 = SpawnActor( firebunnyCreatureID, 3454.56, -280.246, 266.53, 206.661, 1, false )

local firebunnyCreatureID = 61997
fireBunny04 = SpawnActor( firebunnyCreatureID, 3439.13, -265.062, 266.192, 223.761, 1, false )




"
1467,Jade Forest - Horde Intro Scene - Zeppelin Fire Bunnies - Zeppelin - REVISED - JSB,"
WaitForTrigger( ""zeppelinHit"" )

Wait( 2 )

local instance = fireBunny01:PlaySpellStateVisual(28017)

Wait( 1 )

local instance = fireBunny02:PlaySpellStateVisual(28017)

Wait( 1 )

local instance = fireBunny03:PlaySpellStateVisual(28017)

local instance = fireBunny04:PlaySpellStateVisual(28017)

"
1468,Jade Forest - Horde Intro Scene - Zeppelin Fire Bunny 01 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = fireBunny01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1469,Jade Forest - Horde Intro Scene - Zeppelin Fire Bunny 02 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = fireBunny02 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1470,Jade Forest - Horde Intro Scene - Zeppelin Fire Bunny 03 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = fireBunny03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1471,Jade Forest - Horde Intro Scene - Zeppelin Fire Bunny 04 - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = fireBunny03 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1475,Jade Forest - Garroshar Point - Strafing Runs - bomber - ZTO,"--------------------
--Helper Functions--
--------------------
function MissilePosRand(casterPos) --Random Coordinates
	local xOffset = math.random(-10, 10)
	local yOffset = math.random(-10, 10)
	local zOffset = math.random(10, 30)  

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(xOffset, yOffset, zOffset)
	return missilePos
end
 
local targetTrigger = ""targetImpact""

function TargetImpact(targetNum)
	if not targets then
		return
	end

	local target = targets[targetNum]
	if not target then
		return
	end

	WaitForTrigger(targetTrigger)

	local explodingTargetData = MoveData:Default()
	explodingTargetData.pathID = explosionSpline[(math.random(#explosionSpline))]
	explodingTargetData.speed = math.random(30, 45)
	explodingTargetData.posControl = MovePosControl.ConstantSpeed
	explodingTargetData.yawControl = MoveRotControl.Tangent
	explodingTargetData.pitchControl = MoveRotControl.Tangent
	explodingTargetData.rollControl = MoveRotControl.Angle
	explodingTargetData.isRelative = true
	explodingTargetData.teleportToFirstPoint = false

	CastSpellAtActor(target, target, kegExplosion)
	local firetrail = target:PlaySpellStateVisual(fireballAuraVisualID) --Casts Flaming aura
	target:Move( explodingTargetData )
	FadeOut(target, 1)
	target:WaitMovementComplete()
	FadeOut(target, 0)
	CastSpellAtActor(target, target, kegExplosion)
	FadeOut(target, 0)
	target:ClearSpellVisual( firetrail)
	FadeOut(target, 0)
	Wait(0.5)
	target:Despawn()
	targets[targetNum] = nil
end

-----------------------
--Inits and constants--
-----------------------

scene:SetRelativeCoords(true)

--SpellAuraVisuals
fireballAuraVisualID = 27972
pilotAuraVisualID = 28072

--Spells
kegExplosion = 130502
bigExplosion = 130533

--Spell Visuals
missileVisualID = 27822 

--Paths init
bomberStrafePath = 4314
bomberRetreatPath = 4315
explosionSpline = { 4300 }

--Creature IDs
targetCreatureID = ""WORLD\\GENERIC\\ORC\\PASSIVE DOODADS\\BARRELSANDCRATES\\OrcBarrel04.M2""
bomberCreatureID = 65843
--pilotCreatureID = 66460
 
--Spawn Faded Actors
targets = SpawnModelActorsAtPoints(targetCreatureID, 4303, false) 
bomber = SpawnFadedActorAtPoint(bomberCreatureID, 4316, false)
--bomber = bombers[1]
--pilots = SpawnFadedActorsAtPoints(pilotCreatureID, 4316, false)
--pilot = pilots[1]
--pilot:MoveToRel(Vector:New(.5,0,1), 5)
--PlayLoopingSplitBodyAnim(pilot, Animations.Mount)
--pilot:SetRelativeTo(bomber)
bomber:PlaySpellStateVisual(pilotAuraVisualID) 

--Constants
local currentLoc = {targets[(math.random(#targets))]:GetPosition();} 
local startSpeed = 25
local waitTime = 7
local radius = 1 
local missileSpeed = 8
 
--Define moveDatas
attackData = MoveData:Default()
attackData.pathID = bomberStrafePath
attackData.speed = 19
attackData.posControl = MovePosControl.ConstantSpeed
attackData.yawControl = MoveRotControl.Tangent
attackData.pitchControl = MoveRotControl.Tangent
attackData.rollControl = MoveRotControl.Angle
attackData.isRelative = false
attackData.teleportToFirstPoint = true
attackData.animKitID = 697 

retreatData = MoveData:Default()
retreatData.pathID = bomberRetreatPath
retreatData.speed = 19
retreatData.posControl = MovePosControl.ConstantSpeed
retreatData.yawControl = MoveRotControl.Tangent
retreatData.pitchControl = MoveRotControl.Tangent
retreatData.rollControl = MoveRotControl.Angle
retreatData.isRelative = false
retreatData.teleportToFirstPoint = false
retreatData.animKitID = 697
 
--------------
--Cue Action--
--------------
--Wait(math.random(10, 15)) --Respawn Time
--FadeIn(targets, 2)
Wait(math.random(10, 20)) --Target up but not destroyed
PlayLoopingSplitBodyAnim( bomber, Animations.Fly)
--SendTrigger(""fade in"")
FadeIn(bomber, 2)
bomber:PlaySoundKit(33308, "
1476,Jade Forest - Horde Intro Scene - Catapult - Zeppelin - REVISED - JSB,"-- COPY STARTS HERE
--
local relativeMover = catapult01 -- CHANGE allianceCaptain to the appropriate NPC

-- calculate a move to position to keep the same position relative to the ship
local worldPosSrc = relativeMover:GetPosition()
local worldPosDest = worldPosSrc + zeppelinMoveOffset

-- move to keep same offset on the ship
-- relativeMover:PlayLoopingFullBodyAnim(Animations.Stand)
WaitForTrigger( ""zeppelinMove"" )
RunToLocation( relativeMover, zeppelinMoveSpeed, worldPosDest.x, worldPosDest.y, worldPosDest.z )
-- relativeMover:StopLoopingFullBodyAnim()
"
1478,Beast - Feign Death,"function Beast_FeignDeath(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	local pet = ROIDTOPET(ROID);

--	scene:WaitTimer(1.5);

	local kit
	while ( aura.running ) do 
		if ( not kit ) then 
			kit = pet.actor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None );
		end
		scene:WaitTimer(0.5);
	end

	if (kit) then 
		kit:Stop();
	end
	
end"
1479,Test - Darren's Test Missiles,"local actorCreateData = ActorCreateData:Default()

actorCreateData.transform = Transform:New(Vector:New(-5, 0, 0), 0)
actorCreateData.creatureID = 36911
local a1 = scene:SpawnActor(actorCreateData)

actorCreateData.transform = Transform:New(Vector:New(5, 0, 0), 180)
actorCreateData.creatureID = 36979
local a2 = scene:SpawnActor(actorCreateData)

local visualID = 13
local missileSpeed = 10


while 1 do

	scene:WaitTimer(0.25)

	local s1 = a1:PlaySpellCastVisualAtTargets(visualID, missileSpeed, false, {a2})
	a1:WaitMissilesImpacted(s1)

	scene:WaitTimer(0.25)

	local s2 = a2:PlaySpellCastVisualAtTargets(visualID, missileSpeed, false, {a1})
	a2:WaitMissilesImpacted(s2)

end

scene:WaitTimer(20)"
1480,Brazie's PetBattle - Dispatcher - Result - NPC Emote,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function npc_emote(targetROID, result)
	if (not result) then
		return
	end

	local player = ROIDTOPLAYER( targetROID );

	if ( player and player.playerDisplay ) then 
		player.playerDisplay:BroadcastText(BroadcastType.Say, result.value )
	end
end
"
1481,Jade Forest - Garroshar Point - Crashing Planes - ZTO ,"--------------------
--Helper Functions--
--------------------
function SpawnPassenger(passengerCreatureID, offsetX, offsetY, offsetZ, scale, vehicle )

	if not scale then
		scale = 1
	end
	
	local vehiclePos = vehicle:GetPosition()
	offsetX = offsetX + vehiclePos.x
	offsetY = offsetY + vehiclePos.y
	offsetZ = offsetZ + vehiclePos.z 
	local actor = SpawnActor(passengerCreatureID, offsetX, offsetY, offsetZ, scale, false)
	actor:SetRelativeTo(vehicle)
	return actor
end

function MissilePosRand(casterPos) --Random Coordinates
	local xOffset = math.random(-10, 10)
	local yOffset = math.random(-10, 10)
	local zOffset = math.random(10, 30)  

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(xOffset, yOffset, zOffset)
	return missilePos
end

function Explode(actor)
	explosionID = math.random(0, 1)
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		actor:PlaySpellStateVisual(burningAuraVisualID) 
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		actor:PlaySpellStateVisual(burningAuraVisualID) 
	end
end 

-----------------------
--Inits and constants--
-----------------------

scene:SetRelativeCoords(true) 

--SpellAuraVisuals
burningAuraVisualID = 27878
pilotAuraVisualID = 28072

--Spells
smallExplosion = 88309 
bigExplosion = 46419
crashExplosion = 130533

--Paths init
crashPath = 4320

--Creature IDs
bomberCreatureID = 65843
bunnyCreatureID = 62026

--Spawn Faded Actors
--crasher = SpawnFadedActorAtPoint(bomberCreatureID, 4321, false)  
crasher = SpawnActor(bomberCreatureID, 0, 0, 0, 0, 1, false)
burningBunny = SpawnActor(bunnyCreatureID, 0, 0, 0, 0, 1, false)
FadeOut(crasher, 0)
burningBunny:SetRelativeTo(crasher)
crasher:PlaySpellStateVisual(pilotAuraVisualID) 

--Spawn Bunnies
rightWing = SpawnPassenger(bunnyCreatureID, 2, 0, 1, 1, crasher);
leftWing = SpawnPassenger(bunnyCreatureID, -2, 0, 1, 1, crasher);
nose = SpawnPassenger(bunnyCreatureID, 0, 2, 1, 1, crasher);
tail = SpawnPassenger(bunnyCreatureID, 0, -3, 1, 1, crasher);
propeller = SpawnPassenger(bunnyCreatureID, 0, 0, 4, 1, crasher);

--rightWing:SetRelativeTo(crasher)
--leftWing:SetRelativeTo(crasher)
--nose:SetRelativeTo(crasher)
--tail:SetRelativeTo(crasher)
--propeller:SetRelativeTo(crasher)

crasherBindPoints = {rightWing, leftWing, nose, tail, propeller }

--Define moveDatas
crashData = MoveData:Default()
crashData.pathID = 4320
crashData.speed = 19
crashData.posControl = MovePosControl.ConstantSpeed
crashData.yawControl = MoveRotControl.Tangent
crashData.pitchControl = MoveRotControl.Tangent
crashData.rollControl = MoveRotControl.Angle
crashData.isRelative = false -- true
crashData.teleportToFirstPoint = true -- false
crashData.animKitID = 697 
crashData.isGroundSnapping = false

--------------
--Cue Action--
--------------
crasher:Move( crashData )
SendTrigger(""Cue Explosions"")
FadeIn(crasher, 2)
crasher:PlaySoundKit(33308, false) -- Looping gyrocopter sound

Wait(1)
crasher:PlaySpellStateVisual(burningAuraVisualID) 

--Explode
--bomber:PlaySpellCastVisualAtPoints(missileVisualID, missileSpeed, false, currentLoc)

crasher:WaitMovementComplete()
burningBunny:PlaySpellStateVisual(burningAuraVisualID) 
FadeOut(crasher, 0)
--Wait(1)
CastSpellAtActor(crasher, crasher, crashExplosion)
SendTrigger(""Fires Subdue"")
--FadeOut(crasher, 0)
Wait(7)
FadeOut(burningBunny, 2)
Wait(3)
scene:EndScene()"
1482,Jade Forest - Garroshar Point - Crashing Bunnies - ZTO,"--Wait(1)

WaitForTrigger(""Cue Explosions"")
for i=1, #crasherBindPoints do
	Wait(0.3)
	Explode(crasherBindPoints[i])
end

WaitForTrigger(""Fires Subdue"")
for i=1, #crasherBindPoints do
	FadeOut(crasherBindPoints[math.random(#crasherBindPoints)], 1)
end
"
1483,Jade Forest - Garroshar Point - Crasher - ZTO,"--WaitForTrigger(""Cue Explosions"")
--Wait(1)
--FadeIn(crasher, 2)
"
1484,[1] Jade Forest - Garroshar Point - Strafing Runs - bomber - ZTO,"false) -- Looping gyrocopter sound
bomber:Move( attackData )
bomber:WaitMovementComplete()  

--Fire the missiles 
bomber:PlaySpellCastVisualAtPoints(missileVisualID, missileSpeed, false, currentLoc)
Wait(waitTime/startSpeed)

CastSpellAtActor(targets[(math.random(#targets))], targets[(math.random(#targets))], bigExplosion)

--Impact
Wait(1.25)
SendTrigger(targetTrigger)

bomber:Move( retreatData )
bomber:WaitMovementComplete()  
--SendTrigger(""fade out"")
FadeOut(bomber, 2)
Wait(5)
scene:EndScene()"
1485,Jade Forest - Garroshar Point - Strafing Runs - pilot - ZTO,"--WaitForTrigger(""fade in"")
--FadeIn(pilot, 2)

--WaitForTrigger(""fade out"") 
--FadeOut(pilot, 2)"
1486,Undead - Death Grip - Leap to Pad,"function Undead_DeathGrip( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_LeapIntoMeleeOnlyPlayN"");

		return;
	end

	if (DidItFail(turn)) then
		DefaultTurnVisualHandler(ROID, turn)
		for index=1,#turn.effects do 
			local effect = turn.effects[index];
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end
		DefaultTurnCleanUp(ROID);
		return
	end

	local pet = ROIDTOUNIT(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID
	local turnVisual = petAbilityVisuals[turnVisualID]
	local turnVisualSpellID = turnVisual.spellVisualID


	local targetROID = GetMoveToROID( turn.effects[2] ); 
	local target = ROIDTOPET( targetROID )
	local targetPlayer = ROIDTOPLAYER( targetROID )


	local visKit = pet.actor:PlaySpellStateVisual(6)

	DefaultTurnVisualHandler(ROID, turn)

	if (target) then
		PerformJump( target, targetPlayer.home, 0.5, Animations.Jump )
	end

	pet.actor:ClearSpellVisual( visKit)


	pet.preSwapped = true;
	if (target) then
		target.preSwapped = true;
	end

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	-- Send Everybody Home
	SendEverybodyHome()

	pet.preSwapped = nil;
	if (target) then
		target.preSwapped = nil;
	end

	-- Default CleanUp
	DefaultTurnCleanUp(ROID);

--
-- Prefix for Bug ID: 348835 below
--

--[[
	-- MY MOVEMENT START
	local pet = ROIDTOUNIT(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	print(""A"")

	DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride)

	local turnVisualPlayed

	local turnVisualID = turn.turnVisualID
	local turnVisual = petAbilityVisuals[turnVisualID]
	local turnVisualSpellID = turnVisual.spellVisualID


	local targetROID = GetMoveToROID( turn.effects[2] ); 
	local target = ROIDTOPET( targetROID )
	local targetPlayer = ROIDTOPLAYER( targetROID )

	if ( not target ) then 
		return
	end

	print(""B"")

	local visKit = pet.actor:PlaySpellStateVisual(6)

	PerformJump( target, targetPlayer.home, 0.5, Animations.Jump )

	pet.actor:ClearSpellVisual( visKit)

	turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn)

	pet.preSwapped = true;
	target.preSwapped = true;

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultDoEffect( ROID, effect ); 
		--DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	-- Send Everybody Home
	SendEverybodyHome()

	pet.preSwapped = nil;
	target.preSwapped = nil;

	-- Default CleanUp
	DefaultTurnCleanUp(ROID);
]]

end"
1487,Stormwind - The Skyfire: zto - Bomber Patrols,"-----------------------
--Constants and Inits--
-----------------------

--CreatureIDs
bomberCreatureID = 65843
pilotCreatureID = 66931

--PathIDs
pathID = 4324

--SpellAuraVisuals
pilotAuraVisualID = 28072


-------------
--Movements--
-------------
moveData = MoveData:Default()
moveData.pathID = pathID
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false 
moveData.teleportToFirstPoint = false 
moveData.animKitID = 4061
moveData.isGroundSnapping = false
 
----------------
--Spawn Actors--
----------------
squadLeader = SpawnActor(bomberCreatureID, -7941.13, 1337.98, 327.732, 180, 1.5, false)
squad1 = SpawnActor(bomberCreatureID, -7923.03, 1328.38, 329.722, 180, 1.5, false)
squad2 = SpawnActor(bomberCreatureID, -7928.79, 1357.78, 329.077, 180, 1.5, false)
pilot01 = SpawnActor(pilotCreatureID, -7941.13, 1337.98, 327.732, 180, 1, false)
pilot02 = SpawnActor(pilotCreatureID, -7923.03, 1328.38, 329.722, 180, 1, false)
pilot03 = SpawnActor(pilotCreatureID, -7928.79, 1357.78, 329.077, 180, 1, false)
RideVehicleActor( pilot01, squadLeader )
RideVehicleActor( pilot02, squad1 )
RideVehicleActor( pilot03, squad2 )
pilot01:PlayLoopingAnimKit(3211)
pilot02:PlayLoopingAnimKit(3211)
pilot03:PlayLoopingAnimKit(3211)
squadLeader:PlayLoopingAnimKit(4061)
squad1:PlayLoopingAnimKit(4061)
squad2:PlayLoopingAnimKit(4061)

squad1:SetRelativeTo(squadLeader)
squad2:SetRelativeTo(squadLeader)
FadeOut(pilot01, 0)
FadeOut(pilot02, 0)
FadeOut(pilot03, 0)
FadeOut(squadLeader, 0)
FadeOut(squad1, 0)
FadeOut(squad2, 0)
--squadLeader:PlaySpellStateVisual(pilotAuraVisualID)
--squad1:PlaySpellStateVisual(pilotAuraVisualID)
--squad2:PlaySpellStateVisual(pilotAuraVisualID)
squad1:PlayLoopingAnimKit(697)
squad2:PlayLoopingAnimKit(697)

Wait(5)

---------------
--Begin Scene--
---------------
while true do
	squadLeader:Move( moveData )
	FadeIn(squadLeader, 2)
	FadeIn(squad1, 2)
	FadeIn(squad2, 2)
	FadeIn(pilot01, 2)
	FadeIn(pilot02, 2)
	FadeIn(pilot03, 2)
	squadLeader:PlaySoundKit(33308, false) -- Looping gyrocopter sound
	squad1:PlaySoundKit(33308, false) -- Looping gyrocopter sound
	squad2:PlaySoundKit(33308, false) -- Looping gyrocopter sound
	squadLeader:WaitMovementComplete()
end"
1488,Elemental - Plant,"function Elemental_Plant( secondaryVisualID, ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )
	-- Plant instead
	if ( turn.firstEvent.resultType ~= PetBattleEffect.AuraApply ) then

		turn.turnVisualID = secondaryVisualID;
	end

	DefaultTurnBehaviour( ROID, isTurn, turn )
end
"
1493,Jade Forest - Naval Finale - Init - ZTO,"--Fire everything!
function OpenFire(actor)
	local randomTime = math.random(0.1, 0.5)
	local orcsDesc = orcs[math.random(#orcs)]
	local swimmer = orcsDesc.actor
	local shooter = actor
	local blood = orcsDesc.blood
	Wait(randomTime)
	CastSpellAtActor(shooter, swimmer, shootSpellID, true)
	Wait(.1)
	swimmer:PlayLoopingAnimKit(1061)
	FadeIn(blood, 2)
	blood:PlaySpellStateVisual(bloodyWaterAuraID)
	--swimmer:MoveToRel(Vector:New(0,0,-2), 3)
	orcsDesc.id = nil
	swimmer:WaitMovementComplete()
	FadeOut(swimmer, 2)
end

--[[
function OpenFire(actor)
	CastSpellAtActor(actor, orcs[(math.random(#orcs))].actor, shootSpellID, true)
	Wait(.2)
	CastSpellAtActor(actor, orcs[(math.random(#orcs))].actor, shootSpellID, true)
	Wait(.2)
	CastSpellAtActor(actor, orcs[(math.random(#orcs))].actor, shootSpellID, true)
end
]]--

--Constants
currentLoc = scene:GetPosition()
marineRunSpeed = 7

--Cameras
genericFOV90 = 368
cameraLoc1 = 4358
cameraTarget1 = 4359
--cameraLoc1 = 4337
--cameraTarget1 = 4335
cameraLoc2 = 4342
cameraTarget2 = 4341
cameraLoc3 = 4338
cameraTarget3 = 4339
cameraLoc4 = 4348
cameraTarget4 = 4349
cameraLoc5 = 4343
cameraTarget5 = 4344
cameraLoc6 = 4346
cameraTarget6 = 4347
cameraTaranZhuEntranceCam = 4364
cameraTaranZhuEntranceTarget = 4365


--Paths and points
orcSwimPathID = 4326
orcSpawnPointsID = 4366
orcSpawnPointsPassiveID = 4325
marineSpawnPointsID = 4360

--AnimKits
jumpAnimID = 3139
 
--Spells
shootSpellID = 130809

--Taran Zhu Spells
expelHarmSpellID = 115129
shavasplosionSpellID = 131506
shaMissileID = 28446

--Sha Transform Spells
shaTransformFXBaseID = 130458 --Reference, Not used
shaGrowID = 31698
shaRightArmTransformID = 130459
shaLeftArmTransformID = 130460

--Spell Aura Visual IDs
commsAuraID = 28546
bloodyWaterAuraID = 28174
kneelshootAuraID = 14643
rellDesaturateAuraID = 28188
shaGroundVisualAuraID = 28189
shaTransformFXBaseAuraID = 28222
shaRightArmAuraID = 28463
--shaLeftArmAuraID = 27872
shaBubblesAuraID = 27648
shaExorcismAuraID = 28297

shaBurstAuraID = 27433
shaExtractionAuraID = 28491

--Channels/beams
shaExtractChannelID = 28444

--Creature IDs
rellCreatureID = 66697 
skyfireMarineCreatureID = 66641
orcCreatureID = 67011
taranzhuCreatureID = 66583
shaHauntCreatureID = 66942
bunnyCreatureID = 62026
gyrocopterCreatureID = 66370
rogersCreatureID = 66292
bloodyPoolCreatureID = 66747

--Spawn Player Clone
playerClone = SpawnActivePlayerCloneActor ( -838.129, -1784.57, 6.31926, 184.215, 1, true)
FadeOut(playerClone, 0)

--Spawn actors
rell = SmoothPhaseSpawnActor(rellCreatureID, -829.823, -1793.19, 5.22982, 175.186, 1, false)
rellBunny = SpawnActor(bunnyCreatureID, -835.612, -1792.7, 5.33783, 175.186, 1, false)
rellBunny2 = SpawnActor(bunnyCreatureID, -835.612, -1792.7, 5.33783, 175.186, 1, false)
admiralRogers = SpawnActor(rogersCreatureID, -664.906, -1483.25, 130.2, 169.093, 1, 1, false)
admiralRogers:Fade( 0, 0 )
--rogersCopter = SpawnActor(gyrocopterCreatureID, -719.173, -1814.36, 31.8621, 168.299, 1, false)
taranzhu = SmoothPhaseSpawnActor(taranzhuCreatureID, -834.064, -1772.82, 7.57897, 274.001, 1, true)
--shaHaunt = SpawnActor(shaHauntCreatureID, -835.612, -1792.7, 7.33783, 175.186, 0.5, false)
marines2a = SmoothPhaseSpawnActor(skyfireMarineCreatureID, -836.144, -1767, 8.23608, 184.616, 1, false)
marines2b = SmoothPhaseSpawnActor(skyfireMarineCreatureID, -835.461, -1758.92, 8.69708, 180.341, 1, false)

SendTrigger(""smoothPhaseComplete"")

orc1 = SpawnActor( orcCreatureID, -876.631, -1754.3, -1.4, 0, 1, false)
blood1 = SpawnActor( orcCreatureID, -876.631, -1754.3, -1.4, 0, 1, false)

FadeOut(orc1, 0)
FadeOut(blood1, 0)

orc2 = SpawnActor( orcCreatureID, -879.855, -1759.17, -1.4, 0, 1, false)
blood2 = SpawnActor( orcCreatureID, -879.855, -1759.17, -1.4, 0, 1, false)
FadeOut(orc2, "
1494,Jade Forest - Naval Finale - MASTER - ZTO ,"WaitForTrigger(""smoothPhaseComplete"")

--Blah blah blah 
scene:SetCamera(0, 0, nil, nil)
SendTrigger(""Master Fade In"")
SetCameraFollowPath( genericFOV90, 4, cameraLoc1, cameraTarget1, 8 )--Camera 1
SendTrigger(""Rogers - Fly By"")
admiralRogers:BroadcastTextStereo(BroadcastType.Say, 67728) -- VO Line 1
Wait(2)
scene:SetFadeRegion(100, true)
SendTrigger(""Marines - Marching"")
Wait(2)
SendTrigger(""Rell - Cross"")
rell:BroadcastTextStereo(BroadcastType.Say, 67733) -- VO Line 2
PlayOneShotSplitBodyAnim( rell, Animations.EmoteTalk )
Wait(4)
SendTrigger(""orcs - Swim"")
admiralRogers:BroadcastTextStereo(BroadcastType.Say, 67729) -- VO Line 3
Wait(2)
SetCameraFollowPath( genericFOV90, 0, cameraLoc2, cameraTarget2, 15 )--Camera 2
Wait(3)
rell:BroadcastTextStereo(BroadcastType.Say, 67734) -- VO Line 4
PlayOneShotSplitBodyAnim( rell, Animations.EmoteTalkExclamation )
Wait(5)
admiralRogers:BroadcastTextStereo(BroadcastType.Say, 67730) -- VO Line 5
Wait(1)
--SetCameraFollowPath( genericFOV90, 5, cameraLoc3, cameraTarget3, 10 ) --Camera 3
Wait(3)
SendTrigger(""marines - Shoot Survivors"")
Wait(1) 
SetCameraFollowPath( genericFOV90, 3, cameraLoc3, cameraTarget3, 10 ) --Camera 3
Wait(2)
SendTrigger(""Rell - Sha"")
rell:BroadcastTextStereo(BroadcastType.Say, 67735) -- VO Line 6
rell:PlayLoopingAnimKit(3183) -- Talking
Wait(8)
rell:StopAnimKit(3183) -- Talking
SendTrigger(""ShaEffects 3"")
Wait(2)
rell:BroadcastTextStereo(BroadcastType.Say, 67736) -- VO Line 7
rell:PlayLoopingAnimKit(3183) -- Talking
Wait(2)
SetCameraFollowPath( genericFOV90, 0, cameraTaranZhuEntranceCam, cameraTaranZhuEntranceTarget, 3 ) --Camera 6
rell:StopAnimKit(3183) -- Talking
--SetCameraFollowPath( genericFOV90, 4, cameraLoc4, cameraTarget4, 10 ) --Camera 4
--Wait(2)
SendTrigger(""Taranzhu - Arrive"")
Wait(2)
taranzhu:BroadcastTextStereo(BroadcastType.Say, 67739) -- VO Line 8
SendTrigger(""Face Me"")
Wait(2)
SendTrigger(""Marines - Gunpoint"")
--PlayOneShotSplitBodyAnim( taranzhu, Animations.EmoteTalkExclamation)
--Wait(1)
--WaitForTrigger(""camera - Kick"")
--Wait(1)
--SetCameraFollowPath( genericFOV90, 1, cameraLoc5, cameraTarget5, 3 ) --Camera 5
--rell:BroadcastTextStereo(BroadcastType.Say, 67740) -- VO Line 9
--PlayOneShotSplitBodyAnim( rell, Animations.EmoteTalk )
--SendTrigger(""Marines - Stand Down"")
--Wait(3)
WaitForTrigger(""Rell - Cure"")
Wait(8) 
SetCameraFollowPath( genericFOV90, 0, cameraLoc6, cameraTarget6, 40 ) --Camera 6
rell:BroadcastTextStereo(BroadcastType.Say, 67740) -- VO Line 9
PlayOneShotSplitBodyAnim( rell, Animations.EmoteTalkExclamation)
SendTrigger(""Marines - Stand Down"")
--Wait(2)
Wait(5)
--[[
rell:BroadcastTextStereo(BroadcastType.Say, 67741) -- VO Line 10 GT 1
PlayOneShotSplitBodyAnim( rell, Animations.EmoteTalk )
Wait(6)
taranzhu:BroadcastTextStereo(BroadcastType.Say, 67742) -- VO Line 11 -  GT 2
SendTrigger(""Taranzhu - Explain"")
PlayOneShotSplitBodyAnim( taranzhu, Animations.EmoteTalkExclamation)
Wait(10)
rell:BroadcastTextStereo(BroadcastType.Say, 67743) -- VO Line 12 -  GT 3
PlayOneShotSplitBodyAnim( rell, Animations.EmoteTalk )
Wait(5)
taranzhu:BroadcastTextStereo(BroadcastType.Say, 67744) -- VO Line 13 -  GT 4
PlayOneShotSplitBodyAnim( taranzhu, Animations.EmoteTalkExclamation)
Wait(14)
SendTrigger(""taranZhu - Exit"")
Wait(1)
]]--
SendTrigger(""playerClone - FinalPosition"")
scene:SetCamera(0, 5, nil, nil)
Wait(4)
SendTrigger(""playerClone - Finish"")
scene:SetFadeRegion(100, true)
scene:EndScene()"
1495,Jade Forest - Naval Finale - Rell - ZTO ,"WaitForTrigger(""smoothPhaseComplete"")
--Wait for scene to crossfade
WaitForTrigger(""Master Fade In"")
FadeIn(rell, 2)
 
WaitForTrigger(""Rogers - Fly By"")
local commAura = rell:PlaySpellStateVisual(commsAuraID)

--Cross stage left
WaitForTrigger(""Rell - Cross"") 
Wait(1)
--RunToLocation(rell, 2, -835.612, -1792.7, 5.33783, 175.186, false)
RunToLocation(rell, 2, -835.3, -1792.73, 5.32833, 175.186, false)

---blah blah blah 
WaitForTrigger(""Rell - Sha"")
rell:ClearSpellVisual( commAura) 
--PlayLoopingSplitBodyAnim( rell, Animations.Cower )
local desaturateAura = rell:PlaySpellStateVisual(rellDesaturateAuraID)
rell:PlayOneShotAnimKit(3133)
Wait(1)
SendTrigger(""ShaEffects 1"")
Wait(3) 
SendTrigger(""ShaEffects 2"")

WaitForTrigger(""ShaEffects 3"")
CastSpellAtActor(rell, rell, shaRightArmTransformID)
local shaRightArm = rell:PlaySpellStateVisual(shaRightArmAuraID)

--Wait for Taran Zhu
WaitForTrigger(""Face Me"")
rell:SetFacingToAbs(Vector:New(-837.319, -1784.04, 6.36249))

--Wait for Tarran to cure
WaitForTrigger(""Rell - Cure"")
local shaExtractionAura = rell:PlaySpellStateVisual(shaExtractionAuraID)
rell:PlayOneShotAnimKit(3133)
Wait(5)
rell:ClearSpellVisual( desaturateAura)
rell:ClearSpellVisual( shaRightArm)
rell:ClearSpellVisual( shaExtractionAura)
SendTrigger(""shaTarget - Fade In"")
for i=1, #shaTarget do
	CastSpellAtActor(rell, shaTarget[i], shavasplosionSpellID)
end

--[[
rell:ClearSpellVisual( desaturateAura)
rell:ClearSpellVisual( shaRightArm)
PlayOneShotSplitBodyAnim( rell, Animations.Knockdown )
--rell:PlayOneShotAnimKit(3167)
Wait(2)
--rell:SetFacingToAbs(Vector:New(-837.319, -1784.04, 6.36249))
PlayOneShotSplitBodyAnim( rell, Animations.Ready1H )
Wait(2)
PlayOneShotSplitBodyAnim( rell, Animations.EmoteNo )
]]--

--[[Return to spawn point
WaitForTrigger(""playerClone - FinalPosition"")
RunToLocation(rell, 2, -829.823, -1793.19, 5.22982, 175.186, true)]]--
"
1496,Jade Forest - Naval Finale - orcs - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

--Wait(2)
for i=1, #orcs do
	orcs[i].actor:PlayLoopingAnimKit( 2525 )
	orcs[i].blood:PlayLoopingAnimKit( 1092 )
	FadeIn( orcs[i].actor, 2)
end

--Wait for Orc Trigger
WaitForTrigger(""orcs - Swim"")
for i=1, #orcs do
	--orcs[i].actor:PlayLoopingAnimKit( 2525 )
	--orcs[i].blood:PlayLoopingAnimKit( 1092 )
	--FadeIn( orcs[i].actor, 2)
	orcs[i].blood:MoveToRel(Vector:New(10,0,1.5), 20)
	orcs[i].actor:MoveToRel(Vector:New(10,0,0), 20) 
end

for i=1, #orcPassive do
	orcPassive[i]:PlayLoopingAnimKit( 2525 )
	FadeIn( orcPassive[i], 2)
	orcPassive[i]:MoveToRel(Vector:New(20,0,0), 20)
end"
1497,Elemental - Sons of Ragnaros,"function CreateObject_SonsOfRagnaros(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local data = { }

	data.ROID = ROID
	data.isAura = isAura
	data.aura = aura
	data.auraInstanceID = auraInstanceID
	data.turnsRemaining = turnsRemaining
	data.auraAbilityID = auraAbilityID

	data.name = ""Son of the Flame""
	data.creatureID = 66601
	data.scale = 1.35
	
	SubmergeWithAddsCreate(data)

end
"
1499,Turn Package - Go Home then Run Standard Turn,"function Dispatcher_GoHomeFirst( ROID, isTurn, turn, ... )

	local unit = ROIDTOUNIT ( ROID );
	local home = GetROIDHome( ROID );

	if ( unit.moveSpeed > 0 and not unit.sessile ) then
		local time = home.position:Dist( unit.actor:GetPosition() ) / unit.moveSpeed;
		unit.actor:WaitMoveToAbs( home.position, time );
		DoFacingCleanUp( ROID );
	end

	DefaultTurnBehaviour( ROID, isTurn, turn, ... ) 

	DefaultTurnCleanUp(ROID);
end"
1500,Jade Forest - Naval Finale - taranzhu - ZTO,"--[[
local jumpData = MoveData:Default()
jumpData.animKitID = jumpAnimID;
jumpData.teleportToFirstPoint = true;
--posControl = MovePosControl.TotalTime;
--yawControl = MoveRotControl.None;
--pitchControl = MoveRotControl.None;
--rollControl = MoveRotControl.None;
jumpData.speed = 7;
jumpData.pathID = 4363;
]]--

--Preload
WaitForTrigger(""ShaEffects 3"") 
taranzhu:Fade(1, 2)

--Wait to be called
WaitForTrigger(""Taranzhu - Arrive"") 
--Wait(2)
--PlayLoopingSplitBodyAnim( taranzhu, Animations.StealthRun)
--taranzhu:Move(jumpData)
--taranzhu:WaitMovementComplete()
RunToLocation(taranzhu, 10, -835.386, -1790.02, 5.6409, 277.336, true)
--PlayLoopingSplitBodyAnim( taranzhu, Animations.StealthStand)
--Wait(1)
--taranzhu:Fade(1, 2)
--PlayLoopingSplitBodyAnim( taranzhu, Animations.StealthStand)
--[[Wait(0.1)
taranzhu:PlayOneShotFullBodyAnim( Animations.MonkDefenseAttackUnarmedOff )
--PlayOneShotFullBodyAnim( taranzhu, Animations.Kick)
Wait(0.3)
SendTrigger(""Face Me"")
Wait(0.8)]]--

--[[
CastSpellAtActor(taranzhu, rell, expelHarmSpellID )
PlayOneShotSplitBodyAnim( taranzhu, Animations.SpecialFist1H )
Wait(1)
local shaFistAura = taranzhu:PlaySpellStateVisual(shaExorcismAuraID)
SendTrigger(""Rell - Cure"")
PlayLoopingSplitBodyAnim( taranzhu, Animations.ReadyBow )
Wait(2)
StopLoopingSplitBodyAnim( taranzhu, Animations.ReadyBow )
SendTrigger(""camera - Kick"")
--Wait(1)
PlayOneShotSplitBodyAnim( taranzhu, Animations.MonkDefenseSpecialUnarmed )
Wait(0.8)
SendTrigger(""shaHaunt - Kick"")
taranzhu:ClearSpellVisual( shaFistAura)
]]--

--Begin Exorcise Sha
SendTrigger(""Face Me"")
PlayLoopingSplitBodyAnim( taranzhu, Animations.ChannelCastDirected )
local shaFistAura = taranzhu:PlaySpellStateVisual(shaExtractChannelID)
SendTrigger(""Rell - Cure"")
Wait(8)
StopLoopingSplitBodyAnim( taranzhu, Animations.ChannelCastDirected )
taranzhu:ClearSpellVisual( shaFistAura)
--End Exorcise Sha

--StopLoopingSplitBodyAnim( taranzhu, Animations.StealthStand)
PlayLoopingSplitBodyAnim( taranzhu, Animations.ReadyBow)
--Wait for Rell to be done getting his ass kicked
WaitForTrigger(""Taranzhu - Explain"")
--StopLoopingSplitBodyAnim( taranzhu, Animations.ReadyBow)

--Wait for exit cue
WaitForTrigger(""taranZhu - Exit"")
taranzhu:SetFacing(88.038)
StopLoopingSplitBodyAnim( taranzhu, Animations.ReadyBow)
PlayLoopingSplitBodyAnim( taranzhu, Animations.EmoteNo)
Wait(2)
RunToLocation( taranzhu, 4, -829.036, -1759.38, 8.53725, 88.038, true)
FadeOut(taranzhu, 2)"
1501,Jade Forest - Naval Finale - Rell - Bunny1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

rellBunny:PlaySpellStateVisual(shaGroundVisualAuraID)

--Wait for Rell to go Full Sha
WaitForTrigger(""ShaEffects 1"")
FadeIn(rellBunny, 6)

--Wait for Taran Zhu to slap the sha out of Rell
WaitForTrigger(""Rell - Cure"")
FadeOut(rellBunny, 2)"
1502,Elemental - Magma Trap,"function CreateObject_MagmaTrap(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);
	local groundModel = fid(124639);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = pad.actor:GetPosition() + Vector:New(0,0,0)
	
	local baseScale = 1;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local trap, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 0), 
			false )
	object.actor = trap;

	local MAGMA_TRAP_STATE = 28192;

	local visKit = trap:PlaySpellStateVisual( MAGMA_TRAP_STATE ) 

	trap:WaitMoveToAbs ( pad.actor:GetPosition(), 2 );
	trap:SetSnapToGround(true);

	local q = 1
 
	while ( aura.running and q < 1000 ) do 
		q = q + 1;
		scene:WaitTimer(0.1);
	end

	-- Snap trap needs to linger a bit longer

	while ( not object.done ) do 
		scene:WaitTimer(0.1);
	end

	trap:Fade(0,0.1);
	trap:ClearSpellVisual( visKit)                       

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function Dispatcher_TriggerMagmaTrap( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
	local pet = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot); 

	SendEverybodyHome();

	-- Make it sessile
	object.moveSpeed = 0;

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local turnVisualID = turn.turnVisualID ;

	local kit = object.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Custom0 );

	--DefaultTurnPreEffectMovement(ROID, turn )
	DefaultTurnVisualHandler(objectROID, turn, MagmaTrap_Success, failureOverride)

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( objectROID, effect, turnVisualID)
		DefaultDoEffectProcessing( objectROID, ""effect"", effect ); 
	end 

	--DefaultTurnCleanUp(ROID);

	scene:WaitTimer(1);

	-- Signal the object to despawn
	object.done = true;
end


function MagmaTrap_Success( victimROID, attackerROID, visualID ) 

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactVerticalKnockback, attackerROID, 2, 0.75); 
end"
1504,Aquatic - Belly Slide,"function Aquatic_BellySlide( animKitId, ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;


	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;
	
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID, BellySlide_HugeKnockbackSuccess);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end


	-- New Spline START
	local moveData = MoveData:Default(7)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent
	moveData.animKitID = animKitId;

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(2*distToTarget, dir*0.5, 0) );
	moveData.points[3].speed = 7
	moveData.points[4].pos = LocalToWorldCoords ( Vector:New(0.9*distToTarget, dir*1, 0) );
	moveData.points[4].speed = 7
	moveData.points[5].pos = LocalToWorldCoords ( Vector:New(0.25*distToTarget, dir*-0.5, 0) );
	moveData.points[5].speed = 7
	moveData.points[6].pos = player.home + LocalToWorldCoords ( Vector:New(0.0*distToTarget, dir*-0.25, 0) );
	moveData.points[6].speed = 7
	moveData.points[7].pos = player.home
	moveData.points[7].speed = 2

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	-- Play the Cast Visual
	pet.actor:PlaySpellCastVisual(28896)

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	DefaultTurnCleanUp(ROID);
end

function BellySlide_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, "
1505,[1] Aquatic - Belly Slide,"Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 2, 0.5 ); 	 

end"
1506,Weather - Darkness,"function Weather_Darkness(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	if (isObserved ~= true) then
		return
	end

-- Test hotfix comment July 27

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(130629)

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,0)
	
	local baseScale = 0.5;
	local bonusScalePerRoundRemaining = 0.0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0,0,0) )

	local q = 1

--	groundActor:Fade(0.5,0);

	while ( aura.running and q < 100000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		groundActor:SetFacingTurnRate(2);

		groundActor:SetFacing(q*1);

		scene:WaitTimer(0.1);
	end

	killFunction();
end"
1507,Flying - Meteor - Lift-Off & Attack,"function Flying_MeteorLiftOff( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_AlternateVisualOnMultiHit"");

		return; 
	end

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local sourcePosition, targetPosition = pet.actor:GetPosition(), Vector:New( 0,0,0 );
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )
	
	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 
	
	pet.actor:SetScale(0.5);
	pet.actor:SetSnapToGround(false)
	pet.actor:WaitMoveToAbs( LocalToWorldCoords( Vector:New(1, 0, 5) ), 2 );

	scene:WaitTimer(0.2);
end


function Flying_FlyingMeteorAttack( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = ResultToTargetROID(turn.effects[1].results[1])
	local target =  ROIDTOUNIT(targetROID);

	local missed = turn.effects[1].results[1].flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

	
	-- New Spline START
	local moveData = MoveData:Default(2)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Tangent
	moveData.yawControl = MoveRotControl.Tangent
	moveData.animKit = 1478

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );

	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, pet.actor:GetPosition().z ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0.2) );
	moveData.points[2].speed = 10

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL ) 

	local stretch = false;
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	local success = function()
		local effect = turn.effects[1];
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:SetScale(1);

--	local turnVisualID = turn.turnVisualID ;
--	Dispatcher_AddCommandToQueue(ROID, Dispatcher_PerformResultImpactVisual, targetROID, turnVisualID ); 	 	

	pet.actor:ClearSpellVisual( visKit)

	-- New Spline END

	"
1509,Valley of the Four Winds - Stoneplow Finale - Mantid (Final) - PRK,"WaitForTrigger(""FinalWave"")
for i = 1, (#mantidFinalGround) do
	FadeIn(mantidFinalGround[i])
	mantidFinalGround[i]:FollowPathAtSpeed(4330, 5+math.random(0,2))
end

for i = 1, (#mantidFinalSky) do
	FadeIn(mantidFinalSky[i])
	mantidFinalSky[i]:PlayLoopingAnimKit(1395)
	mantidFinalSky[i]:FollowPathAtSpeed(4330, 6+math.random(0,3))
end
"
1511,Jade Forest - Naval Finale - Rell - Bunny2 - ZTO,"--rellBunny2:PlaySpellStateVisual(shaTransformFXBaseAuraID)

--Wait for Rell to go Full Sha
WaitForTrigger(""ShaEffects 2"")
FadeIn(rellBunny2, 6)

--Wait for Taran Zhu to slap the sha out of Rell
WaitForTrigger(""Rell - Cure"")
FadeOut(rellBunny2, 2)"
1512,Jade Forest - Naval Finale - marines2 - ZTO,"--On Cue surround Tarran Zhu with rifles
WaitForTrigger(""Marines - Gunpoint"")
PlayLoopingSplitBodyAnim( marines2a, Animations.ReadyRifle)
PlayLoopingSplitBodyAnim( marines2b, Animations.ReadyRifle)
RunToLocation(marines2a, 10, -833.034, -1787.18, 5.91679, 253.261, true)
RunToLocation(marines2b, 10, -837.174, -1787.19, 6.0005, 297.136, true)
marines2a:SetFacingToAbs(Vector:New(-835.386, -1790.02, 5.6409))
marines2b:SetFacingToAbs(Vector:New(-835.386, -1790.02, 5.6409))

WaitForTrigger(""Marines - Stand Down"")
Wait(3)
StopLoopingSplitBodyAnim( marines2a, Animations.ReadyRifle)
StopLoopingSplitBodyAnim( marines2b, Animations.ReadyRifle)
"
1513,Jade Forest - Naval Finale - playerClone - ZTO,"WaitForTrigger(""Rogers - Fly By"")
FadeIn(playerClone, 2)

WaitForTrigger(""Marines - Gunpoint"")
RunToLocation(playerClone, 10, -837.87, -1788.3, 5.88688, 329.561, true)
PlayLoopingSplitBodyAnim( playerClone, Animations.Ready1H)

WaitForTrigger(""Marines - Stand Down"")
StopLoopingSplitBodyAnim( playerClone, Animations.Ready1H)
--RunToLocation(playerClone, 2, -834.579, -1786.27, 6.05364, 337.563, true)

WaitForTrigger(""playerClone - FinalPosition"")
RunToLocation(playerClone, 2, currentLoc.x, currentLoc.y, currentLoc.z, 0, true)

WaitForTrigger(""playerClone - Finish"")
FadeOut(playerClone, 2)"
1518,MoP - KS - Tiger Temple - 10' Pole - Init - ZTO,"--Scene loc
currentLoc = scene:GetPosition()

-- Spawn Monks
monkID = 64781
monkPoints = 4350

monks = SpawnFadedActorsAtPoints(monkID, 4350, false)

for i=1, #monks do
	monks[i]:SetFacingToAbs(currentLoc)
	PlayLoopingSplitBodyAnim( monks[i], Animations.KneelLoop)
	FadeIn(monks[i], 2)
end

Wait(300)

scene:EndScene()"
1519,Legendary 5.0 - Chapter 04 - Finale Spell Effects Master Script - DGK,"-- A bunch of stuff will zoop at some stuff
-- And then some stuff will happen.
-- Wrathion will be like, ""aw yah.""

-- Main Spell Effect and Wrathion's Location
bunnyCreatureID = 62026
spellEffect = SpawnActor( bunnyCreatureID, 781.115, -543.034, 455.409, 126.312, 1, false )
wrathion = SpawnActor( bunnyCreatureID, 777.706, -538.213, 454.064, 305.412, 1, false )

-- Bunnies for Power
power1 = SpawnActor( bunnyCreatureID, 773.588, -541.168, 458.058, 333.537, 1, false )
power2 = SpawnActor( bunnyCreatureID, 798.716, -540.609, 455.994, 196.512, 1, false )
power3 = SpawnActor( bunnyCreatureID, 780.049, -557.062, 451.352, 107.637, 1, false )
power4 = SpawnActor( bunnyCreatureID, 789.629, -554.165, 468.027, 109.437, 1, false )
power5 = SpawnActor( bunnyCreatureID, 776.923, -555.27, 462.1, 95.487, 1, false )
power6 = SpawnActor( bunnyCreatureID, 781.977, -533.317, 458.918, 321.837, 1, false )
power7 = SpawnActor( bunnyCreatureID, 791.807, -546.094, 461.55, 151.287, 1, false )
power8 = SpawnActor( bunnyCreatureID, 766.271, -537.589, 465.48, 277.287, 1, false )

-- Bunnies for Wisdom
wisdom1 = SpawnActor( bunnyCreatureID, 766.351, -535.464, 454.695, 342.671, 1, false )
wisdom2 = SpawnActor( bunnyCreatureID, 774.514, -519.488, 463.925, 280.796, 1, false )
wisdom3 = SpawnActor( bunnyCreatureID, 797.189, -533.449, 453.282, 213.522, 1, false )
wisdom4 = SpawnActor( bunnyCreatureID, 810.832, -542.705, 465.299, 173.247, 1, false )
wisdom5 = SpawnActor( bunnyCreatureID, 792.479, -554.557, 471.554, 133.197, 1, false )
wisdom6 = SpawnActor( bunnyCreatureID, 779.874, -562.857, 455.13, 96.5217, 1, false )
wisdom7 = SpawnActor( bunnyCreatureID, 768.561, -553.948, 464.351, 64.5717, 1, false )
wisdom8 = SpawnActor( bunnyCreatureID, 765.186, -549.6, 478.845, 1.34667, 1, false )

-- Wait a Moment until Wrathion is ready
Wait(4)

-- ""Behold! The Power of the Foes You've Vanquished!""
power1:PlaySpellCastVisual( 28243 )
power2:PlaySpellCastVisual( 28243 )
power3:PlaySpellCastVisual( 28243 )
power4:PlaySpellCastVisual( 28243 )
power5:PlaySpellCastVisual( 28243 )
power6:PlaySpellCastVisual( 28243 )
power7:PlaySpellCastVisual( 28243 )
power8:PlaySpellCastVisual( 28243 )
CastSpellAtActor( power1, spellEffect, 126718, false )
CastSpellAtActor( power2, spellEffect, 126718, false )
CastSpellAtActor( power3, spellEffect, 126718, false )
CastSpellAtActor( power4, spellEffect, 126718, false )
CastSpellAtActor( power5, spellEffect, 126718, false )
CastSpellAtActor( power6, spellEffect, 126718, false )
CastSpellAtActor( power7, spellEffect, 126718, false )
CastSpellAtActor( power8, spellEffect, 126718, false )
Wait(1.5)
local redAura = spellEffect:PlaySpellStateVisual(28245) 
Wait(5)

-- ""...And the wisdom of those you've outsmarted...""
wisdom1:PlaySpellCastVisual( 28247 )
wisdom2:PlaySpellCastVisual( 28247 )
wisdom3:PlaySpellCastVisual( 28247 )
wisdom4:PlaySpellCastVisual( 28247 )
wisdom5:PlaySpellCastVisual( 28247 )
wisdom6:PlaySpellCastVisual( 28247 )
wisdom7:PlaySpellCastVisual( 28247 )
wisdom8:PlaySpellCastVisual( 28247 )
CastSpellAtActor( wisdom1, spellEffect, 126719, false )
CastSpellAtActor( wisdom2, spellEffect, 126719, false )
CastSpellAtActor( wisdom3, spellEffect, 126719, false )
CastSpellAtActor( wisdom4, spellEffect, 126719, false )
CastSpellAtActor( wisdom5, spellEffect, 126719, false )
CastSpellAtActor( wisdom6, spellEffect, 126719, false )
CastSpellAtActor( wisdom7, spellEffect, 126719, false )
CastSpellAtActor( wisdom8, spellEffect, 126719, false )
Wait(1.5)
local goldAura = spellEffect:PlaySpellStateVisual(28248) 
Wait(6)

-- ""Here! The embodiment of the FEAR that you have conquered!""
local shaBaseAura = wrathion:PlaySpellStateVisual(27230) 
Wait(2)
wisdom1:PlaySpellCastVisual( 26621 )
wisdom2:PlaySpellCastVisual( 26621 )
wisdom3:PlaySpellCastVisual( 26621 )
"
1520,[1] Legendary 5.0 - Chapter 04 - Finale Spell Effects Master Script - DGK,"wisdom4:PlaySpellCastVisual( 26621 )
wisdom5:PlaySpellCastVisual( 26621 )
wisdom6:PlaySpellCastVisual( 26621 )
wisdom7:PlaySpellCastVisual( 26621 )
wisdom8:PlaySpellCastVisual( 26621 )
power1:PlaySpellCastVisual( 26621 )
power2:PlaySpellCastVisual( 26621 )
power3:PlaySpellCastVisual( 26621 )
power4:PlaySpellCastVisual( 26621 )
power5:PlaySpellCastVisual( 26621 )
power6:PlaySpellCastVisual( 26621 )
power7:PlaySpellCastVisual( 26621 )
power8:PlaySpellCastVisual( 26621 )
Wait(1)
CastSpellAtActor( wisdom1, spellEffect, 126720, false )
CastSpellAtActor( power1, spellEffect, 126720, false )
CastSpellAtActor( wisdom2, spellEffect, 126720, false )
CastSpellAtActor( power2, spellEffect, 126720, false )
CastSpellAtActor( wisdom3, spellEffect, 126720, false )
CastSpellAtActor( power3, spellEffect, 126720, false )
CastSpellAtActor( wisdom4, spellEffect, 126720, false )
CastSpellAtActor( power4, spellEffect, 126720, false )
CastSpellAtActor( wisdom5, spellEffect, 126720, false )
CastSpellAtActor( power5, spellEffect, 126720, false )
CastSpellAtActor( wisdom6, spellEffect, 126720, false )
CastSpellAtActor( power6, spellEffect, 126720, false )
CastSpellAtActor( wisdom7, spellEffect, 126720, false )
CastSpellAtActor( power7, spellEffect, 126720, false )
CastSpellAtActor( wisdom8, spellEffect, 126720, false )
CastSpellAtActor( power8, spellEffect, 126720, false )
Wait(3.5)
spellEffect:ClearSpellVisual( redAura)
local magmaBall = spellEffect:PlaySpellStateVisual(28250)
Wait(2)
wrathion:ClearSpellVisual( shaBaseAura)
RunToLocation( spellEffect, .8, 781.115, -543.034, 454.009, 126.312, false )  
Wait(5)

-- ""And Finally, a gift from me...""
spellEffect:PlaySpellCastVisual( 21508 )
spellEffect:ClearSpellVisual( goldAura)
Wait(4)
spellEffect:ClearSpellVisual( magmaBall)
local magmaBallSmall = spellEffect:PlaySpellStateVisual(28251)
Wait(2)

-- The Completed artifact whooshes into Wrathion's hand.
RunToLocation( spellEffect, 1.5, 777.998, -538.77, 452.909, 311.846, false ) 
spellEffect:PlaySpellCastVisual( 28252 )
spellEffect:ClearSpellVisual( magmaBallSmall)
Wait(1)
FadeOut( spellEffect, 1 )




"
1521,Darren's Test Local,"print(""-- START: Darren's Test Script 3 --"")

print(""A="" .. tostring(a) .. "", B="" .. tostring(b) .. "", C="" .. tostring(c))

function test()
	local a, b, c = 1, 2, 3
	print(""A="" .. tostring(a) .. "", B="" .. tostring(b) .. "", C="" .. tostring(c))
end

print(""A="" .. tostring(a) .. "", B="" .. tostring(b) .. "", C="" .. tostring(c))

test();

print(""A="" .. tostring(a) .. "", B="" .. tostring(b) .. "", C="" .. tostring(c))

print(""-- END: Darren's Test Script 3 --"")
"
1522,Elemental - Sons of the Root,"function CreateObject_SonsOfRoot(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local data = { }

	data.ROID = ROID
	data.isAura = isAura
	data.aura = aura
	data.auraInstanceID = auraInstanceID
	data.turnsRemaining = turnsRemaining
	data.auraAbilityID = auraAbilityID

	data.name = ""Son of the Living Root"";
	data.creatureID = 63365;
	data.scale = 0.85;
	
	SubmergeWithAddsCreate(data)

end
"
1523,Jade Forest - Alliance Intro Scene - Init - JSB,"
-- spawn gunship
local gunshipModel = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\ND_AllianceGunship_Doodad.M2""
-- local zeppelins = SpawnModelActorsAtPoints( zeppelinModel, 4289, false )
gunship = SpawnModelActor( gunshipModel, 259.087, -4148.48, 188.814, 0, 1.0, false )



-- spawn rell
local rellCreatureID = 66855
rell = SpawnActor( rellCreatureID, 297.054, -4136.62, 229.2, 90, 1.3, false )

-- spawn admiral rogers
local rogersCreatureID = 66856
rogers = SpawnActor( rogersCreatureID, 300.688, -4148.34, 228.89, 178.671, 1.3, false )
rogers:SetRelativeTo(gunship) -- attaches

-- spawn sully
local sullyCreatureID = 66919
sully = SpawnActor( sullyCreatureID, 296.5, -4156.25, 228.89, 41, 1.3, false )

-- spawn mishka
local mishkaCreatureID = 66921
mishka = SpawnActor( mishkaCreatureID, 309.454, -4153.9, 228.89, 47, 1.3, false )

-- spawn amber
local amberCreatureID = 66922
amber = SpawnActor( amberCreatureID, 311.671, -4151.67, 228.89, 230, 1.3, false )

-- spawn nimm
local nimmCreatureID = 66924
nimm = SpawnActor( nimmCreatureID, 299.234, -4153.96, 228.89, 220, 1.3, false )

-- spawn nodd
local noddCreatureID = 66927
nodd = SpawnActor( noddCreatureID, 310.103, -4149.02, 228.89, 108, 1.3, false )


-- spawn clone
local cloneCreatureID = 61833
clone = SpawnActivePlayerCloneActor( 291.739, -4148.03, 228.89, 42, 1.3, false )
-- end

-- spawn pilots
local pilotCreatureID = 66931
pilot01 = SpawnActor( pilotCreatureID, 232.413, -4134.88, 211.2, 180, 1.3, false )
pilot02 = SpawnActor( pilotCreatureID, 246.6, -4134.97, 211.2, 180, 1.3, false )
pilot03 = SpawnActor( pilotCreatureID, 256.765, -4135.01, 211.2, 180, 1.3, false )
pilot04 = SpawnActor( pilotCreatureID, 268.547, -4134.95, 211.2, 180, 1.3, false )
pilot05 = SpawnActor( pilotCreatureID, 268.022, -4162, 211.2, 180, 1.3, false )
pilot06 = SpawnActor( pilotCreatureID, 256.654, -4161.95, 211.2, 180, 1.3, false )
pilot07 = SpawnActor( pilotCreatureID, 247.113, -4161.95, 211.2, 180, 1.3, false )
pilot08 = SpawnActor( pilotCreatureID, 232.929, -4161.99, 211.2, 180, 1.3, false )


pilot01:PlayLoopingAnimKit(3211)
pilot02:PlayLoopingAnimKit(3211)
pilot03:PlayLoopingAnimKit(3211)
pilot04:PlayLoopingAnimKit(3211)
pilot05:PlayLoopingAnimKit(3211)
pilot06:PlayLoopingAnimKit(3211)
pilot07:PlayLoopingAnimKit(3211)
pilot08:PlayLoopingAnimKit(3211)

-- guards

-- spawn static
local guardCreatureID = 66300
staticGuard01 = SpawnActor( guardCreatureID, 292.116, -4155.63, 228.89, 90, 1.3, false )
staticGuard02 = SpawnActor( guardCreatureID, 312.769, -4156.35, 228.89, 90, 1.3, false )
staticGuard03 = SpawnActor( guardCreatureID, 292.116, -4141.18, 228.89, 270, 1.3, false )
staticGuard04 = SpawnActor( guardCreatureID, 312.769, -4141.18, 228.89, 270, 1.3, false )
staticGuard05 = SpawnActor( guardCreatureID, 190.959, -4148.48, 212.3, 0, 1.3, false )

-- spawn patrollers
local guardCreatureID = 66300
patrolGuard01 = SpawnActor( guardCreatureID, 206.473, -4155.08, 212.2, 90, 1.3, false )
patrolGuard02 = SpawnActor( guardCreatureID, 216.729, -4149.01, 209.3, 0, 1.3, false )
patrolGuard03 = SpawnActor( guardCreatureID, 269.491, -4143.82, 209.3, 180, 1.3, false )
patrolGuard04 = SpawnActor( guardCreatureID, 267.922, -4153.74, 209.3, 180, 1.3, false )



-- rogers:SetRelativeTo(nil) -- detaches

-- Horde Ships
local hordeShipModel = ""WORLD\\EXPANSION03\\DOODADS\\GENERIC\\Horde_ship01.m2""
hordeShip01 = SpawnModelActor( hordeShipModel, 175.689, -3746.38, 0, 298, 0.5, false )
hordeShip02 = SpawnModelActor( hordeShipModel, 93.06, -3833.91, 0, 252, 0.5, false )
hordeShip03 = SpawnModelActor( hordeShipModel, 29.7692, -3622.61, 0, 245.189, 0.5, false )
hordeShip04 = SpawnModelActor( hordeShipModel, 276.962, -3838.04, 0, 275, 0.5, false )
hordeShip05 = SpawnModelActor( hordeShipModel, 220.819, -3491.7, 0, 183, 0.5, false )

-- "
1525,Jade Forest - Alliance Intro Scene - MASTER - JSB,"
local sceneOrigin = scene:GetPosition()
scene:SetCamera(0, 0.0, nil, nil)
scene:SetCamera(473, 0.0, nil, nil)	-- camera to get us in letterbox initially

local initialFadeID = 958
scene:ApplyScreenEffect(initialFadeID)

Wait(1.0)

scene:ClearScreenEffect(initialFadeID)

-- initial pan

SetCameraFollowPath( 370, 0.0, 4356, 4357, 8 )

Wait( 3 )

SetCameraFollowPath( 370, 20, 4354, 4355, 10 )



local shakeY
local shakeZ
if Scene.AddCameraShake then
	shakeY = scene:AddCameraEffect(30, sceneOrigin, nil, 1)
	shakeZ = scene:AddCameraEffect(31, sceneOrigin, nil, 1)
end


Wait(2)
SendTrigger( ""rogersMove"" )
Wait(1)

-- FadeIn( mist, 0 )

scene:SetCamera(484, 10, nil, nil)

Wait(11)

FadeIn( mistSpecial01, 0 )
FadeIn( mistSpecial02, 0 )
FadeIn( mistSpecial03, 0 )
FadeIn( mistSpecial04, 0 )

-- Cliff cam

SetCameraFollowPath( 488, 0, nil, 4393, 8 ) -- time was 20


SendTrigger( ""mistFade"" )

Wait(5) -- WAS 6

scene:SetCamera(489, 1, nil, nil)

Wait(3)

scene:SetCamera(484, 0, nil, nil)

SendTrigger( ""rogersSpeak"" )


Wait(3)

SetCameraFollowPath( 370, 20, 4394, 4395, 30 )

Wait(13)

-- Wait( 3000 )

scene:ApplyScreenEffect( 827 )


Wait( 3 )


scene:EndScene()




"
1527,Great Wall - Mantid Army - Master,"-- wait 'forever' seconds
mantid = { }

Wait(2*60*60)"
1528,Jade Forest - Naval Finale - gunner1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local marine = marines[1]
--Wait for marching orders
WaitForTrigger(""Marines - Marching"")
RunToLocation(marine, marineRunSpeed, -835.125, -1756.03, 8.86035, 266.78, false)
RunToLocation(marine, marineRunSpeed, -838.32, -1752.1, 9.15904, 180, false)
marine:SetFacing(180)
marine:PlayLoopingAnimKit(3050)

--Wait for shoot order
WaitForTrigger(""marines - Shoot Survivors"")
OpenFire(marine)
OpenFire(marine)
OpenFire(marine)
"
1529,Jade Forest - Naval Finale - gunner2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local marine = marines[2]
--Wait for marching orders
WaitForTrigger(""Marines - Marching"")
RunToLocation(marine, marineRunSpeed, -835.125, -1756.03, 8.86035, 266.78, false)
RunToLocation(marine, marineRunSpeed, -838.706, -1759.81, 8.71287, 183.375, false)
marine:SetFacing(180)
marine:PlayLoopingAnimKit(3050)

--Wait for shoot order
WaitForTrigger(""marines - Shoot Survivors"")
OpenFire(marine)
OpenFire(marine)
OpenFire(marine)
"
1530,Jade Forest - Naval Finale - gunner3 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local marine = marines[3]
--Wait for marching orders
WaitForTrigger(""Marines - Marching"")
RunToLocation(marine, marineRunSpeed, -835.125, -1756.03, 8.86035, 266.78, false)
RunToLocation(marine, marineRunSpeed, -838.901, -1769.42, 8.06386, 180, false)
marine:SetFacing(180)
marine:PlayLoopingAnimKit(3050)

--Wait for shoot order
WaitForTrigger(""marines - Shoot Survivors"")
OpenFire(marine)
OpenFire(marine)
OpenFire(marine)
"
1531,Jade Forest - Naval Finale - gunner4 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local marine = marines[4]
--Wait for marching orders
WaitForTrigger(""Marines - Marching"")
RunToLocation(marine, marineRunSpeed, -831.533, -1761.74, 8.45072, 268.65, false)
RunToLocation(marine, marineRunSpeed, -840.394, -1777.23, 7.20161, 180, false)
marine:SetFacing(180)
marine:PlayLoopingAnimKit(3050)

--Wait for shoot order
WaitForTrigger(""marines - Shoot Survivors"")
OpenFire(marine)
OpenFire(marine)
OpenFire(marine)
"
1532,Jade Forest - Naval Finale - gunner5 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local marine = marines[5]
--Wait for marching orders
WaitForTrigger(""Marines - Marching"")
RunToLocation(marine, marineRunSpeed, -831.533, -1761.74, 8.45072, 268.65, false)
RunToLocation(marine, marineRunSpeed, -839.869, -1780.82, 6.78264, 180, false)
marine:SetFacing(180)
marine:PlayLoopingAnimKit(3050)

--Wait for shoot order
WaitForTrigger(""marines - Shoot Survivors"")
OpenFire(marine)
OpenFire(marine)
OpenFire(marine)
"
1533,Jade Forest - Naval Finale - gunner6 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local marine = marines[6]
--Wait for marching orders
WaitForTrigger(""Marines - Marching"")
RunToLocation(marine, marineRunSpeed, -831.533, -1761.74, 8.45072, 268.65, false)
RunToLocation(marine, marineRunSpeed, -837.95, -1796.97, 4.8986, 180, false)
marine:SetFacing(180)
marine:PlayLoopingAnimKit(3050)

--Wait for shoot order
WaitForTrigger(""marines - Shoot Survivors"")
OpenFire(marine)
OpenFire(marine)
OpenFire(marine)

--On Cue surround Tarran Zhu with rifles
WaitForTrigger(""Marines - Gunpoint"")
marine:StopAnimKit(3050)
PlayLoopingSplitBodyAnim( marine, Animations.ReadyRifle)
RunToLocation(marine, 4, -837.89, -1794.57, 5.17262, 54.1657, true)
marine:SetFacingToAbs(Vector:New(-835.386, -1790.02, 5.6409))

--On cue stand down
WaitForTrigger(""Marines - Stand Down"")
Wait(3)
StopLoopingSplitBodyAnim( marine, Animations.ReadyRifle)
"
1534,Darren's Test Vertex Effects,"

mantidCreatureID = 63561
local nazgrimCreateData = ActorCreateData:Default()
nazgrimCreateData.creatureID = mantidCreatureID
nazgrimCreateData.scale = 0.25
nazgrimCreateData.facingOffset = 180
nazgrimCreateData.groundSnap = true
nazgrimCreateData.hoverHeight = 0.0
nazgrimCreateData.transform = Transform:New(Vector:New(3, 5, 0), 90)
nazgrim = scene:SpawnActor(nazgrimCreateData)
nazgrim:SetFacingTurnRate(1)


nazgrimCreateData.transform = Transform:New(Vector:New(10, 5, 0), 90)
nazgrim2 = scene:SpawnActor(nazgrimCreateData)

scene:WaitTimer(5)

local spellVisualID = 21681
local instanceID = nazgrim:PlaySpellStateVisual(spellVisualID)

scene:WaitTimer(5)
nazgrim:ClearSpellVisual( instanceID)

scene:WaitTimer(10)
"
1535,[1] Jade Forest - Naval Finale - Init - ZTO,"0)
FadeOut(blood2, 0)

orc3 = SpawnActor( orcCreatureID, -835.125, -1756.03, -1.4, 0, 1, false)
blood3 = SpawnActor( orcCreatureID, -835.125, -1756.03, -1.4, 0, 1, false)
FadeOut(orc3, 0)
FadeOut(blood3, 0)

orc4 = SpawnActor( orcCreatureID, -831.533, -1761.74, -1.4, 0, 1, false)
blood4 = SpawnActor( orcCreatureID, -831.533, -1761.74, -1.4, 0, 1, false)
FadeOut(orc4, 0)
FadeOut(blood4, 0)

orc5 = SpawnActor( orcCreatureID, -831.533, -1761.74, -1.4, 0, 1, false)
blood5 = SpawnActor( orcCreatureID, -831.533, -1761.74, -1.4, 0, 1, false)
FadeOut(orc5, 0)
FadeOut(blood5, 0)

orc6 = SpawnActor( orcCreatureID, -837.95, -1796.97, -1.4, 0, 1, false)
blood6 = SpawnActor( orcCreatureID, -837.95, -1796.97, -1.4, 0, 1, false)
FadeOut(orc6, 0)
FadeOut(blood6, 0)



--Spawn Sha
shaTarget = SpawnFadedActorsAtPoints(shaHauntCreatureID, 4414, false) 
shaTargetBunny = SpawnActor(bunnyCreatureID, 3157.52, -950.861, 324.695, 269.013, 1, false)
--FadeOut(shaTarget, 0)
FadeOut(shaTargetBunny, 0) 

--FadeOut(rell, 0)
FadeOut(taranzhu, 0)
--FadeOut(rell, 0)
FadeOut(rellBunny, 0)
FadeOut(rellBunny2, 0)
--FadeOut(shaHaunt, 0)
FadeOut(admiralRogers, 0)
admiralRogers:SetRelativeTo(rogersCopter)

--Spawn marines
marines = SpawnActorsAtPoints(skyfireMarineCreatureID, marineSpawnPointsID, false)

--Spawn Orc Swimmers
orc = SpawnFadedActorsAtPoints(orcCreatureID, orcSpawnPointsID, false)
orcPassive = SpawnFadedActorsAtPoints(orcCreatureID, orcSpawnPointsPassiveID, false)
bloodyPool = SpawnFadedActorsAtPoints(bloodyPoolCreatureID, orcSpawnPointsID, false)
orcs = { }
for i=1, #orc do
	orcs[i] =
	{
		actor = orc[i];
		blood = bloodyPool[i];
		id = i;
	}
end
--bloodyPools = { }"
1538,Jade Forest - Thunder Hold - 1 - Init - ZTO ,"--------------------
--Helper Functions--
--------------------

function MissilePosRand(casterPos) --Random Coordinates
	local xOffset = math.random(-3, 3)
	local yOffset = math.random(-3, 3)
	local zOffset = math.random(3, 3)  

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(xOffset, yOffset, zOffset)
	return missilePos
end

--[[
function RandomExplosion()
	local rand = math.random (0, 4)
	local randExplosion
	if rand == 0 then
		randExplosion = smallExplosion
	kegExplosion
	bigExplosion
	crashExplosion
end
]]--

function Fire(caster)
	local startSpeed = 25
	local waitTime = 7
	local radius = 1 
	local missileSpeed = 8
	local target = shipBunnies[(math.random(#shipBunnies))]
	local targetPos = { target:GetPosition() }
	local explosion = randExplosion[(math.random(#randExplosion))]
	caster:PlaySpellCastVisualAtPoints(missileVisualID, missileSpeed, false, targetPos)
	Wait(waitTime/startSpeed)
	CastSpellAtActor(target, target, explosion)
	FadeIn(target, 1)
end

function GyroIdle(actor, path)
	local moveData = MoveData:Default()
	moveData.pathID = path 
	moveData.speed = 5
	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Angle
	moveData.isRelative = false
	moveData.teleportToFirstPoint = false
	moveData.animKitID = 697 
	moveData.isGroundSnapping = false
	actor:SetFacingToAbs(Vector:New(3258.36, 147.284, 336.465))
	actor:Move( moveData )
end

-----------------------
--Inits and constants--
-----------------------

--Actor Models
gyrocopterCreatureID = 65843
bunnyCreatureID = 62026
orcCreatureID = 66398
nazgrimCreatureID = 66656
gunshipCreatureID = 66674
korKronCreatureID = 64868
nazgrimAxeModelID = ""world\\expansion03\\doodads\\generic\\Axe_2H_War_C_01_quest.mdx""

--Spells
smallExplosion = 88309
kegExplosion = 130502
bigExplosion = 130533
crashExplosion = 130533
superExplosion = 131189
randExplosion = { smallExplosion, kegExplosion, bigExplosion, crashExplosion, superExplosion }
nukeExplosion = 103119
shaRightArmTransformID = 130459
throwAxeSpellID = 131579
dustExplosion = 88310
throwAxeSpellID = 131579

--Spell Visuals
missileVisualID = 27822 


--SpellAuraVisuals
pilotAuraVisualID = 28072
burningAuraVisualID = { 28332, 28339 }
burningVerticalAuraVisualID = 27883
nazgrimDesaturateAuraID = 28188
shaGroundVisualAuraID = 28189
shaRightArmAuraID = 27871
nazgrimAxeHandID = 28493

--Paths
exitPathsID = { 4371, 4372, 4373 }

--Spawn Actors
gunshipTurret1 = SpawnActor(gunshipCreatureID, 3139.81, -749.767, 301.576, 297.862, 1, false)
gunshipTurret2 = SpawnActor(gunshipCreatureID, 3152.18, -745.01, 301, 288.464, 1, false)
gunshipTurret3 = SpawnActor(gunshipCreatureID, 3164.6, -740.267, 301.586, 283.952, 1, false)

nazgrim = SpawnActor(nazgrimCreatureID, 3135.4, -918.805, 324.696, 52.6043, 1, true)  
korkron2 = SpawnActor( korKronCreatureID, 3145.18, -951.583, 324.695, 73.8335, 1, true)
korkron1 = SpawnActor( korKronCreatureID, 3166.09, -951.591, 324.695, 105.784, 1, true)
shipBunnies = SpawnFadedActorsAtPoints(bunnyCreatureID, 4367, false)
nukeBunny = SpawnActor( bunnyCreatureID, 3127.83, -729.473, 324.996, 280.476, 1, false)
nukeBunny2 = SpawnActor( bunnyCreatureID, 3140.14, -708.4, 375.643, 287.451, 1, false)
nazgrimBunny = SpawnActor( bunnyCreatureID, 3158.16, -898.143, 324.695, 87.2954, 1, false)
FadeOut(nazgrimBunny, 0)
nazgrimAxe = SpawnModelActor( nazgrimAxeModelID, 3155.18, -884.691, 328.603, 49, false)
FadeOut(nazgrimAxe, 0)
nazgrimAxeBunny = SpawnActor( bunnyCreatureID, 3155.18, -884.691, 328.603, 49, false)

gyro1 = SpawnActor( gyrocopterCreatureID, 2914.14, -804.093, 322.657, 351.216, 1, false)
gyro2 = SpawnActor( "
1539,Jade Forest - Thunder Hold - 2 - Init - ZTO (OLD),"-----------------------
--Inits and constants--
-----------------------

--Constants
currentLoc = scene:GetPosition()
locX = currentLoc.x
locY = currentLoc.y
locZ = currentLoc.z

--Cameras
genericFOV90 = 368
cam1Wreckage = 485
cam2TempleSetup = 486
cam3Nazgrim = 4379
cam3NazgrimPath = 4380
cam4Sha = 4383
cam4ShaTarget = 4384
cam5Cure = 4385
cam5CureTarget = 4386
cam6Punt = 4388
cam6PuntTarget = 4387
cam7Taran = 4390
cam7TaranTarget = 4389
cam8Talking = 4391
cam8TalkingTarget = 4392


--Actor Models
gyrocopterCreatureID = 65843
bunnyCreatureID = 62026
orcCreatureID = 66398
nazgrimCreatureID = 61682
taranzhuCreatureID = 66583
shaHauntCreatureID = 66423

--SpellAuraVisuals
pilotAuraVisualID = 28072
nazgrimDesaturateAuraID = 28188
shaGroundVisualAuraID = 28189
shaTransformFXBaseAuraID = 28222
shaRightArmAuraID = 27871
shaLeftArmAuraID = 27872
shaBubblesAuraID = 27648
shaExorcismAuraID = 28297 
shaGroundAuraID = 28388
--shaGroundAura2ID = 28414
--shaGroundBubblesAuraID = 
groundAurasID = { shaGroundAuraID, shaGroundVisualAuraID }

--Spells
nukeExplosion = 103119

--Sha Transform Spells
shaTransformFXBaseID = 130458 --Reference, Not used
shaGrowID = 31698
shaRightArmTransformID = 130459
shaLeftArmTransformID = 130460

--Taran Zhu Spells
expelHarmSpellID = 115129

--Spawn Player Clone
--playerClone = SpawnActivePlayerCloneActor ( 3154.82, -894.911, 324.695, 285.53, 1, true)
playerClone = SpawnActivePlayerCloneActor ( locX, locY, locZ, 0, 1, true)
--playerClone:SetFacingToAbs(Vector:New(3158.17, -898.128, 324.779)) --Face Nazgrim
FadeOut(playerClone, 0)

--Spawn Effect Bunnies
nukeBunnies = SpawnActorsAtPoints( bunnyCreatureID, 4378, false)
nazgrimBunny = SpawnActor(bunnyCreatureID, 3158.17, -898.128, 324.779, 88.6133, 1, false)

--Spawn Actors
nazgrim = SpawnActor(nazgrimCreatureID, 3158.17, -898.128, 324.779, 88.6133, 1, true)
taranzhu = SpawnActor(taranzhuCreatureID, 3155.71, -993.342, 307.363, 82.4531, 1, true)

--Spawn Sha
shaTarget = SpawnActor(shaHauntCreatureID, 3157.52, -950.861, 324.695, 269.013, 1, false)
shaTargetBunny = SpawnActor(bunnyCreatureID, 3157.52, -950.861, 324.695, 269.013, 1, false)
FadeOut(shaTarget, 0)
FadeOut(shaTargetBunny, 0)

shaNazgrim = SpawnActor(shaHauntCreatureID, 3157.16, -903.146, 326.696, 88.6133, 0.5, false)
FadeOut(shaNazgrim, 0)

shaHaunts = SpawnFadedActorsAtPoints (shaHauntCreatureID, 4382, false)
shaHauntBunnies = SpawnFadedActorsAtPoints (bunnyCreatureID, 4382, false)

--[[
local startSpeed = 25
local waitTime = 7
local radius = 1 
local missileSpeed = 8
]]--

--[[
attackData = MoveData:Default()
attackData.pathID = bomberStrafePath
attackData.speed = 19
attackData.posControl = MovePosControl.ConstantSpeed
attackData.yawControl = MoveRotControl.Tangent
attackData.pitchControl = MoveRotControl.Tangent
attackData.rollControl = MoveRotControl.Angle
attackData.isRelative = false
attackData.teleportToFirstPoint = true
attackData.animKitID = 697 
]]--
"
1540,Jade Forest - Thunder Hold - 2 - MASTER - ZTO (OLD),"--Begin Scene
scene:SetCamera(0, 0, nil, nil)
--scene:SetCamera(cam1Wreckage, 0, nil, nil)
--Wait(5)
--scene:SetCamera(cam2TempleSetup, 6, nil, nil)
--[[
SetCameraFollowPath( genericFOV90, 4, cam3Nazgrim, cam3NazgrimPath, 8 )--Camera 1
SendTrigger(""Nazgrim - Sha"")
Wait(1)
scene:SetFadeRegion(100, true)
SendTrigger(""Master Fade In"")
Wait(4)
nazgrim:BroadcastTextStereo(BroadcastType.Say, 67872) -- VO Line 2
--SetCameraFollowPath( genericFOV90, 4, cam3Nazgrim, cam3NazgrimPath, 8 )--Camera 1
Wait(3)
SendTrigger(""ShaEffects 3"")
Wait(3)
]]--
scene:SetFadeRegion(100, true)
SetCameraFollowPath( genericFOV90, 0, cam4Sha, cam4ShaTarget, 10 )--Camera 2
SendTrigger(""Sha - Spawn Full"")
--Wait(2)
SendTrigger(""TaranZhu - Enter"")
--[[ Possible extra lines
nazgrim:BroadcastTextStereo(BroadcastType.Say, 67871) -- VO Line 1
Wait(10)
Wait(10) 
--]]
Wait(8)
SetCameraFollowPath( genericFOV90, 0, cam5Cure, cam5CureTarget, 2 )--Camera 3
WaitForTrigger(""camera - Kick"")
SetCameraFollowPath( genericFOV90, 1, cam6Punt, cam6PuntTarget, 3 )--Camera 4
Wait(4)
scene:SetCamera(487, 0, nil, nil)
--SetCameraFollowPath( genericFOV90, 0, cam7Taran, cam7TaranTarget, 3 )--Camera 5
nazgrim:BroadcastTextStereo(BroadcastType.Say, 67873) -- VO Line 3
nazgrim:PlayLoopingAnimKit(3183)
Wait(8)
nazgrim:StopAnimKit(3183)
taranzhu:BroadcastTextStereo(BroadcastType.Say, 67875) -- VO Line 4
SendTrigger(""Taran - Face Nazgrim"")
Wait(1) 
-- 3158.25, -894.793, 324.697
SetCameraFollowPath( genericFOV90, 0, cam8Talking, cam8TalkingTarget, 15 )--Camera 5
PlayLoopingSplitBodyAnim(taranzhu, Animations.EmoteTalkExclamation)
Wait(15)
StopLoopingSplitBodyAnim(taranzhu, Animations.EmoteTalkExclamation)
nazgrim:BroadcastTextStereo(BroadcastType.Say, 67874) -- VO Line 5
scene:SetCamera(487, 0, nil, nil)
nazgrim:PlayLoopingAnimKit(3183)
StopLoopingSplitBodyAnim(nazgrim, Animations.KneelLoop)
PlayOneShotSplitBodyAnim(nazgrim, Animations.KneelEnd)
Wait(4)
nazgrim:StopAnimKit(3183)
PlayLoopingSplitBodyAnim(nazgrim, Animations.EmoteTalk)
Wait(2)
PlayOneShotSplitBodyAnim(nazgrim, Animations.EmotePoint)
Wait(4)
StopLoopingSplitBodyAnim(nazgrim, Animations.EmoteTalk)
--nazgrim:StopAnimKit(3183)
SetCameraFollowPath( genericFOV90, 0, cam8Talking, cam8TalkingTarget, 15 )--Camera 5
taranzhu:BroadcastTextStereo(BroadcastType.Say, 67876) -- VO Line 6
PlayLoopingSplitBodyAnim(taranzhu, Animations.EmoteTalkExclamation)
Wait(8)
SendTrigger(""Player - Return"")
Wait(2)
StopLoopingSplitBodyAnim(taranzhu, Animations.EmoteTalkExclamation)
scene:SetCamera(0, 3, nil, nil)
Wait(3)
scene:EndScene()"
1541,Jade Forest - Thunder Hold - 1 - gyro1 - ZTO ,"--Define moveDatas
gyro1:PlayLoopingAnimKit(697)
local moveData = MoveData:Default()
moveData.pathID = 4368 
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false
gyro1:PlaySpellStateVisual(pilotAuraVisualID) 


local exitData = MoveData:Default()
exitData.pathID = exitPathsID[(math.random(#exitPathsID))]
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false
exitData.teleportToFirstPoint = false
exitData.animKitID = 697 
exitData.isGroundSnapping = false

gyro1:PlaySoundKit(33308, false) -- Looping gyrocopter sound

--WaitFor Cue
WaitForTrigger(""Gyro1"") 
gyro1:Move( moveData )
--Wait(23)
gyro1:WaitMovementComplete()

GyroIdle(gyro1, 4416)
SendTrigger(""Open Fire"")
--WaitForTrigger(""Open Fire"")
Fire(gyro1)
--[[
Wait(2)
Fire(gyro1)
Wait(2)
Fire(gyro1)
]]--
--gyro1:WaitMovementComplete()
Wait(2)
--Wait for Exit cue
--WaitForTrigger(""Gyros - Exit"")
SendTrigger(""Gyros - Exit"")
--gyro1:Move( exitData )
--[[
scene:ApplyScreenEffect( 827 )
Wait( 3 )
]]--
Wait(1)
scene:EndScene()
--gyro1:WaitMovementComplete()
"
1542,Jade Forest - Thunder Hold - 1 - gyro2 - ZTO ,"--Define moveDatas
gyro2:PlayLoopingAnimKit(697)
local moveData = MoveData:Default()
moveData.pathID = 4369
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false
gyro2:PlaySpellStateVisual(pilotAuraVisualID) 

local exitData = MoveData:Default()
exitData.pathID = exitPathsID[(math.random(#exitPathsID))]
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false
exitData.teleportToFirstPoint = false
exitData.animKitID = 697 
exitData.isGroundSnapping = false

gyro2:PlaySoundKit(33308, false) -- Looping gyrocopter sound

--WaitFor Cue
WaitForTrigger(""Gyro2"") 
gyro2:Move( moveData )
--Wait(23)
gyro2:WaitMovementComplete()
GyroIdle(gyro2, 4415)

WaitForTrigger(""Open Fire"")
Wait(1)
Fire(gyro2)
Wait(2)
Fire(gyro2)
--gyro2:WaitMovementComplete()

--Wait for Exit cue
WaitForTrigger(""Gyros - Exit"")
gyro2:Move( exitData )
FadeOut(gyro2, 1)
gyro2:WaitMovementComplete()
"
1543,Jade Forest - Thunder Hold - 1 - gyro3 - ZTO ,"--Define moveDatas
gyro3:PlayLoopingAnimKit(697)
local moveData = MoveData:Default()
moveData.pathID = 4370
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false
gyro3:PlaySpellStateVisual(pilotAuraVisualID) 

local exitData = MoveData:Default()
exitData.pathID = exitPathsID[(math.random(#exitPathsID))]
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false
exitData.teleportToFirstPoint = false
exitData.animKitID = 697 
exitData.isGroundSnapping = false

gyro3:PlaySoundKit(33308, false) -- Looping gyrocopter sound

--WaitFor Cue
WaitForTrigger(""Gyro3"") 
gyro3:Move( moveData )
--Wait(23)
gyro3:WaitMovementComplete()
GyroIdle(gyro3, 4417)

WaitForTrigger(""Open Fire"")
Wait(0.5)
Fire(gyro3)
Wait(1)
Fire(gyro3)
Wait(1)
Fire(gyro3)
--gyro3:WaitMovementComplete()

--Wait for Exit cue
WaitForTrigger(""Gyros - Exit"")
FadeOut(gyro3, 1)
gyro3:Move( exitData )
gyro3:WaitMovementComplete()
"
1544,Jade Forest - Thunder Hold - 1 - shipBunnies - ZTO ,"for i=1, #shipBunnies do
	local rand = math.random(#burningAuraVisualID)
	shipBunnies[i]:PlaySpellStateVisual(burningAuraVisualID[rand]) 
end

WaitForTrigger(""Open Fire"")
Wait(5)
while true do
	local waitTime = math.random(0.3, 1)
	Wait(waitTime)
	local explosion = randExplosion[(math.random(#randExplosion))]
	local target = shipBunnies[(math.random(#shipBunnies))]
	CastSpellAtActor(target, target, explosion)
end"
1545,Jade Forest - Thunder Hold - 1 - gyro4 - ZTO ,"--Define moveDatas
gyro4:PlayLoopingAnimKit(697)
local moveData = MoveData:Default()
moveData.pathID = 4374
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false
gyro4:PlaySpellStateVisual(pilotAuraVisualID) 

local exitData = MoveData:Default()
exitData.pathID = exitPathsID[(math.random(#exitPathsID))]
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false
exitData.teleportToFirstPoint = false
exitData.animKitID = 697 
exitData.isGroundSnapping = false

gyro4:PlaySoundKit(33308, false) -- Looping gyrocopter sound

--WaitFor Cue
WaitForTrigger(""GyroClose"") 
gyro4:Move( moveData )
--Wait(23)
gyro4:WaitMovementComplete()
--GyroIdle(gyro4)

WaitForTrigger(""Open Fire"")
Fire(gyro4)
Wait(2.5)
Fire(gyro4)
Wait(2)
Fire(gyro4)

--gyro3:WaitMovementComplete()

--Wait for Exit cue
WaitForTrigger(""Gyros - Exit"")
gyro4:Move( exitData )
FadeOut(gyro4, 1)
gyro4:WaitMovementComplete()
"
1546,Jade Forest - Thunder Hold - 1 - gyro5 - ZTO  ,"--Define moveDatas
gyro5:PlayLoopingAnimKit(697)
local moveData = MoveData:Default()
moveData.pathID = 4375
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false
gyro5:PlaySpellStateVisual(pilotAuraVisualID) 

local exitData = MoveData:Default()
exitData.pathID = exitPathsID[(math.random(#exitPathsID))]
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false
exitData.teleportToFirstPoint = false
exitData.animKitID = 697 
exitData.isGroundSnapping = false

gyro5:PlaySoundKit(33308, false) -- Looping gyrocopter sound

--WaitFor Cue
WaitForTrigger(""GyroClose"") 
gyro5:Move( moveData )
--Wait(23)
gyro5:WaitMovementComplete()
--GyroIdle(gyro5)

WaitForTrigger(""Open Fire"")
Fire(gyro5)
Wait(2)
Fire(gyro5)
Wait(1)
Fire(gyro5)
--gyro3:WaitMovementComplete()

--Wait for Exit cue
WaitForTrigger(""Gyros - Exit"")
gyro5:Move( exitData )
FadeOut(gyro5, 1)
gyro5:WaitMovementComplete()
"
1547,Jade Forest - Thunder Hold - 1 - gyro6 - ZTO ,"--Define moveDatas
gyro6:PlayLoopingAnimKit(697)
local moveData = MoveData:Default()
moveData.pathID = 4376
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false
gyro6:PlaySpellStateVisual(pilotAuraVisualID) 

local exitData = MoveData:Default()
exitData.pathID = exitPathsID[(math.random(#exitPathsID))]
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false
exitData.teleportToFirstPoint = false
exitData.animKitID = 697 
exitData.isGroundSnapping = false

gyro6:PlaySoundKit(33308, false) -- Looping gyrocopter sound

--WaitFor Cue
WaitForTrigger(""GyroClose"") 
gyro6:Move( moveData )
--Wait(23)
gyro6:WaitMovementComplete()
--GyroIdle(gyro6)

WaitForTrigger(""Open Fire"")
Fire(gyro6)
Wait(2)
Fire(gyro6)
Wait(1)
Fire(gyro6)
--gyro3:WaitMovementComplete()

--Wait for Exit cue
WaitForTrigger(""Gyros - Exit"")
gyro6:Move( exitData )
FadeOut(gyro6, 1)
gyro6:WaitMovementComplete()
"
1548,Jade Forest - Thunder Hold - 1 - gyro7 - ZTO ,"--Define moveDatas
gyro7:PlayLoopingAnimKit(697)
local moveData = MoveData:Default()
moveData.pathID = 4377
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false
gyro7:PlaySpellStateVisual(pilotAuraVisualID) 

local exitData = MoveData:Default()
exitData.pathID = exitPathsID[(math.random(#exitPathsID))]
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false
exitData.teleportToFirstPoint = false
exitData.animKitID = 697 
exitData.isGroundSnapping = false

gyro7:PlaySoundKit(33308, false) -- Looping gyrocopter sound

--WaitFor Cue
WaitForTrigger(""GyroClose"") 
gyro7:Move( moveData )
--Wait(23)
gyro7:WaitMovementComplete()
--GyroIdle(gyro7)


WaitForTrigger(""Open Fire"")
Fire(gyro7)
Wait(2)
Fire(gyro7)
Wait(1)
Fire(gyro7)
--gyro3:WaitMovementComplete()

--Wait for Exit cue
WaitForTrigger(""Gyros - Exit"")
gyro7:Move( exitData )
FadeOut(gyro7, 1)
gyro7:WaitMovementComplete()
"
1549,Jade Forest - Thunder Hold - 1 - shipBunniesExplosions 1 - ZTO ,"WaitForTrigger(""Open Fire"")
Wait(5)
while true do
	local waitTime = math.random(0.3, 1)
	Wait(waitTime)
	local explosion = randExplosion[(math.random(#randExplosion))]
	local target = shipBunnies[(math.random(#shipBunnies))]
	CastSpellAtActor(target, target, explosion)
end"
1550,Jade Forest - Thunder Hold - 1 - shipBunniesExplosions 2 - ZTO ,"WaitForTrigger(""Open Fire"")
Wait(5)
while true do
	local waitTime = math.random(0.3, 1)
	Wait(waitTime)
	local explosion = randExplosion[(math.random(#randExplosion))]
	local target = shipBunnies[(math.random(#shipBunnies))]
	CastSpellAtActor(target, target, explosion)
	FadeIn(target, 1)
end"
1551,Jade Forest - Thunder Hold - 1 - nukeBunny - ZTO ,"--Wait for shots to finish
WaitForTrigger(""Gyros - Exit"")
--Wait(7)
CastSpellAtActor(nukeBunny, nukeBunny, nukeExplosion, false)
Wait(0.5)
CastSpellAtActor(nukeBunny2, nukeBunny2, nukeExplosion, false)"
1552,Turn Package - Build Dragon Eggs/Hatch Dragon Eggs,"function Dispatcher_BuildEggs( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local caster = ROIDTOUNIT( ROID )

	-- Skitter around building the object
	if ( turn.firstEvent.resultType == PetBattleEffect.AuraApply ) then
		local numPoints = 4;
		local doEffectsOnPoint = 2;
		local visual = 156;

		local slot, transform = FindNextObjectSlot( caster.playerID ) 
		local location = transform.position;

		Dispatcher_BuildThingAtLocation( location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn )

		scene:WaitTimer(1);
		return;
	else
		DefaultTurnBehaviour( ROID, isTurn, turn )
	end 

	-- Reset/reposition
		DefaultTurnCleanUp(ROID);

end

function CreateObject_Eggs(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local pad = ROIDTOPET(ROID);
--print(""Makin a turret "",auraAbilityID,  "", player "",aura.playerID);
	local groundModel = fid(451108);


	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	local centerPosition = transform.position + Vector:New(0,0,-5)
	
	local baseScale = 0.2;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local rocket, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New( centerPosition, 0), 
			false )

	object.actor = rocket;

	rocket:WaitMoveToAbs ( transform.position, 2 );
	rocket:SetSnapToGround(true);

	while ( aura.running ) do 
--[[
		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end
]]--
		scene:WaitTimer(0.1);
	end

	rocket:Fade(0,0.1);
	--print(""Killed the turret! "",q);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
	
end

function Dispatcher_HatchEggs( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
	local caster = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID )
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);

	-- Make it sessile
	object.moveSpeed = 0;

	Dispatcher_OnlyTurnAnimateTheEffects1toN( 3, objectROID, isTurn, turn )

end"
1553,Jade Forest - Thunder Hold - 2 - nukebunnies - ZTO (OLD),"Wait(2)
for i=1, #nukeBunnies do
	CastSpellAtActor(nukeBunnies[i], nukeBunnies[i], nukeExplosion, false)
	Wait(.3)
end"
1554,Jade Forest - Thunder Hold - 2 - nazgrim- ZTO (OLD),"---blah blah blah
--WaitForTrigger(""Nazgrim - Sha"")
--PlayLoopingSplitBodyAnim( rell, Animations.Cower )
local desaturateAura = nazgrim:PlaySpellStateVisual(nazgrimDesaturateAuraID)
--nazgrim:PlayOneShotAnimKit(3133)
Wait(1)
SendTrigger(""ShaEffects 1"")
Wait(3)
SendTrigger(""ShaEffects 2"")

--WaitForTrigger(""ShaEffects 3"")
CastSpellAtActor(nazgrim, nazgrim, shaRightArmTransformID)
local shaRightArm = nazgrim:PlaySpellStateVisual(shaRightArmAuraID)

--Wait for Taran Zhu
WaitForTrigger(""Face Me"")
nazgrim:SetFacingToAbs(Vector:New(3156.88, -904.36, 324.696))

--Wait for Tarran to cure
WaitForTrigger(""Nazgrim - Cure"")
nazgrim:ClearSpellVisual( desaturateAura)
nazgrim:ClearSpellVisual( shaRightArm)
PlayOneShotSplitBodyAnim( nazgrim, Animations.Knockdown )
--nazgrim:PlayOneShotAnimKit(3167)
Wait(2)
--nazgrim:SetFacingToAbs(Vector:New(-837.319, -1784.04, 6.36249))
PlayLoopingSplitBodyAnim( nazgrim, Animations.KneelLoop )
--Wait(2)
--PlayOneShotSplitBodyAnim( nazgrim, Animations.EmoteNo )"
1555,Jade Forest - Thunder Hold - 2 - nazgrimBunny - ZTO (OLD),"nazgrimBunny:PlaySpellStateVisual(shaGroundVisualAuraID)

--Wait for Rell to go Full Sha
WaitForTrigger(""ShaEffects 1"")
FadeIn(nazgrimBunny, 6)

--Wait for Taran Zhu to slap the sha out of Rell
WaitForTrigger(""Nazgrim - Cure"")
FadeOut(nazgrimBunny, 2)"
1556,Jade Forest - Thunder Hold - 1 - nazgrim - ZTO ,"local nazgrimWithAxe = nazgrim:PlaySpellStateVisual(nazgrimAxeHandID)
Wait(1)
RunToLocation(nazgrim, 7, 3158.22, -893.301, 324.696, 82.7542, true)
nazgrim:BroadcastTextStereo(BroadcastType.Yell, 67926) -- VO Line
PlayOneShotSplitBodyAnim(nazgrim, Animations.Attack2HL )
--[[
CastSpellAtActor( nazgrim, nazgrimAxe, throwAxeSpellID )
nazgrim:ClearSpellVisual( nazgrimWithAxe)
Wait(1)
SendTrigger(""Nazgrim's Axe"")
]]--
--[[  
WaitForTrigger(""Nazgrim - Panic"")
nazgrim:SetFacingToAbs(Vector:New(3158.28, -892.815, 324.696))
nazgrim:BroadcastTextStereo(BroadcastType.Yell, 67871) -- VO Line 2
RunToLocation(nazgrim, 2, 3158.16, -898.143, 324.695, 87.2954, true)
Wait(5) 
StopLoopingSplitBodyAnim(nazgrim, Animations.EmoteTalkExclamation)
]]--
--[[
nazgrim:PlaySpellStateVisual(nazgrimDesaturateAuraID)
nazgrim:PlayOneShotAnimKit(3133)
Wait(4)
CastSpellAtActor(nazgrim, nazgrim, shaRightArmTransformID)
local shaRightArm = nazgrim:PlaySpellStateVisual(shaRightArmAuraID)
]]--"
1557,Jade Forest - Thunder Hold - 2 - taranzhu - ZTO (OLD),"--Wait for Entrance
WaitForTrigger(""TaranZhu - Enter"")
RunToLocation(taranzhu, 12, 3157.54, -953.542, 324.695, 90.5526, true)
PlayOneShotSplitBodyAnim( taranzhu, Animations.RoundHouseKick )
Wait(0.4)
SendTrigger(""Sha - Punt"")
Wait(0.77)

RunToLocation(taranzhu, 12, 3158.26, -902.118, 324.696, 87.4027, true)
SendTrigger(""Face Me"")
CastSpellAtActor(taranzhu, nazgrim, expelHarmSpellID )
PlayOneShotSplitBodyAnim( taranzhu, Animations.SpecialFist1H )
Wait(1.10)
local shaFistAura = taranzhu:PlaySpellStateVisual(shaExorcismAuraID)
SendTrigger(""Nazgrim - Cure"")
Wait(0.63)
PlayLoopingSplitBodyAnim( taranzhu, Animations.ReadyBow )
Wait(2)
StopLoopingSplitBodyAnim( taranzhu, Animations.ReadyBow )
taranzhu:SetFacingToAbs(Vector:New(3153.21, -906.078, 324.696))
Wait(1)
SendTrigger(""camera - Kick"")
--Wait(1)
PlayOneShotSplitBodyAnim( taranzhu, Animations.MonkDefenseSpecialUnarmed )
Wait(0.8)
SendTrigger(""shaHaunt - Kick"")
taranzhu:ClearSpellVisual( shaFistAura)

WaitForTrigger(""Taran - Face Nazgrim"")
taranzhu:SetFacingToAbs(Vector:New(3158.17, -898.128, 324.779))
--Wait(14)
--RunToLocation( taranzhu, 2, 3170.53, -906.101, 324.779, 79.4929, true)"
1559,Object - Build Dam,"function CreateObject_Dam(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)
	
	local wallParams = {
		damModel = fid(203781);
		baseScale = 0.04;
		extraYaw = 90;
		yOffset = 0;
		xOffset = 0;
		startZ = -1.5;
		destZ = 0.0;
		upAnimTime = 2.0;
		downAnimTime = 1.0;
	};
	CreateObject_WallShared(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID, wallParams);
end"
1560,Jade Forest - Thunder Hold - 2 - shaHaunts - ZTO (OLD),"--[[
for i=1, #shaHaunts do
	--FadeIn(shaHaunts[i])
	--PlayOneShotSplitBodyAnim(shaHaunts[i], Animations.Birth)
	shaHaunts[i]:MoveToRel(Vector:New(0,0,-2), 8)
end]]--

--Wait to be called
WaitForTrigger(""Sha - Spawn Full"")
Wait(2)
for i=1, #shaHaunts do
	FadeIn(shaHaunts[i])
	shaHaunts[i]:PlayOneShotAnimKit(1254) --Birth Anim
	Wait(.3)
	--shaHaunts[i]:MoveToRel(Vector:New(0,0,3), 12)
end"
1561,Jade Forest - Thunder Hold - 2 - shaHauntBunnies - ZTO (OLD),"for i=1, #shaHaunts do
	shaHauntBunnies[i]:PlaySpellStateVisual(shaGroundAuraID)
end

--Wait to be called
WaitForTrigger(""Sha - Spawn Full"")
for i=1, #shaHauntBunnies do
	FadeIn(shaHauntBunnies[i])
	PlayOneShotSplitBodyAnim(shaHauntBunnies[i], Animations.Birth)
	Wait(.3)
end"
1562,Object - Build Ice Wall,"function CreateObject_IceWall(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local wallParams = {
		damModel = fid(613604);
		baseScale = 0.2;
		extraYaw = 0;
		yOffset = 0;
		xOffset = 0;
		startZ = -2.0;
		destZ = 0.0;
		downAnimTime = 4.0;
	};
	CreateObject_WallShared(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID, wallParams);
end"
1563,Object - Build Jade Barrier,"function CreateObject_JBarrier(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local wallParams = {
		damModel = fid(202750);
		baseScale = 1.2;
		extraYaw = 0;
		yOffset = 0;
		xOffset = 0;
		startZ = -4.0;
		destZ = 0.0;
	};
	CreateObject_WallShared(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID, wallParams);
end"
1564,Jade Forest - Thunder Hold - 2 - playerClone - ZTO (OLD),"--Wait for fade in
--[[
WaitForTrigger(""Master Fade In"")
FadeIn(playerClone, 1)
RunToLocation( playerClone, 2, 3154.82, -894.911, 324.695, 285.53, true)
]]--

WaitForTrigger(""TaranZhu - Enter"")
PlayLoopingSplitBodyAnim( playerClone, Animations.Ready1H )
FadeIn(playerClone, 1)
RunToLocation( playerClone, 2, 3154.55, -892.753, 324.696, 295.63, true)

WaitForTrigger(""Player - Return"")
StopLoopingSplitBodyAnim( playerClone, Animations.Ready1H )
RunToLocation( playerClone,2, locX, locY, locZ, 218.099, true)"
1565,Object - Build Prismatic Barrier,"function CreateObject_PBarrier(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local wallParams = {
		damModel = fid(622803);
		baseScale = 0.1;
		extraYaw = 90;
		yOffset = 2;
		xOffset = -0.5;
		startZ = -1.0;
		destZ = 0.0;
	};
	CreateObject_WallShared(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID, wallParams);
end"
1566,Jade Forest - Thunder Hold - 2 - shaTarget - ZTO (OLD),"shaTargetBunny:PlaySpellStateVisual(shaGroundAuraID)

--Wait to be called
WaitForTrigger(""Sha - Spawn Full"")
FadeIn(shaTargetBunny, 2)
Wait(2)
FadeIn(shaTarget, 1)
PlayOneShotSplitBodyAnim(shaTarget, Animations.Birth)
PlayLoopingSplitBodyAnim(shaTarget, Animations.ReadyUnarmed)

--Wait to be kicked
WaitForTrigger(""Sha - Punt"")
StopLoopingSplitBodyAnim(shaTarget, Animations.ReadyUnarmed)
PlayLoopingSplitBodyAnim( shaTarget, Animations.Cower )
shaTarget:MoveToRel(Vector:New(-8, 3, 0), 1)
shaTarget:WaitMovementComplete()
 
StopLoopingSplitBodyAnim( shaTarget, Animations.Cower )
PlayOneShotSplitBodyAnim( shaTarget, Animations.Death )
PlayLoopingSplitBodyAnim( shaTarget, Animations.Dead )"
1567,Jade Forest - Thunder Hold - 2 - shaNazgrim - ZTO (OLD),"shaNazgrim:PlaySpellStateVisual(shaGroundVisualAuraID)
local moveData = MoveData:Default()
moveData.animKitID = 1260;
moveData.teleportToFirstPoint = true;
moveData.posControl = MovePosControl.TotalTime;
moveData.yawControl = MoveRotControl.None;
moveData.pitchControl = MoveRotControl.None;
moveData.rollControl = MoveRotControl.None;
moveData.pathID = 4387;
moveData.time = 1;

--Wait to be kicked
WaitForTrigger(""shaHaunt - Kick"")
FadeIn(shaNazgrim, 1)
shaNazgrim:Move(moveData)
shaNazgrim:WaitMovementComplete() 
 
PlayOneShotSplitBodyAnim( shaNazgrim, Animations.Death )
PlayLoopingSplitBodyAnim( shaNazgrim, Animations.Dead )"
1568,Object - Build Onyx Wall,"function CreateObject_OnyxWall(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local wallParams = {
		damModel = fid(419193);
		baseScale = 0.1;
		extraYaw = 0;
		yOffset = 0;
		xOffset = -0.5;
		startZ = -3.0;
		destZ = 0.0;
	};
	CreateObject_WallShared(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID, wallParams);
end"
1569,Darren's Test Roll,"
-- Roll test:
--  The procupine actor is made relative to a stalker that is rolling, and
--  the stalkers movement path is offset by the pivot point of the roll

local stalkerModel = ""creature\\invisiblestalker\\invisiblestalker.m2""
--local stalkerModel = ""spells\\axistestobject.m2""

local stalkerCreateData = ActorCreateData:Default()
stalkerCreateData.model = stalkerModel
stalkerCreateData.groundSnap = true
local stalker = scene:SpawnActor(stalkerCreateData)

function RollTo(actor, rollOffset, pos)

	-- move the stalker to the correct initial position, and make
	-- the actor relative to it
	stalker:SetHoverHeight(rollOffset)
	local transform = actor:GetTransform()
	transform.position.z = transform.position.z + rollOffset
	stalker:SetTransform(transform)
	stalker:SetFacingTurnRate(actor:GetFacingTurnRate())
	actor:SetSnapToGround(false)
	actor:SetRelativeTo(stalker)

	local moveData = MoveData:Default(1)
	moveData.posControl = MovePosControl.TotalTime
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.AngleAbs
	moveData.rollControl = MoveRotControl.None
	moveData.teleportToFirstPoint = false
	moveData.isGroundSnapping = true
	moveData.isRelative = false
	moveData.time = 2.5

	moveData.points[1].pos = pos
	moveData.points[1].pitch = -1080
	moveData.points[1].roll = 0

	stalker:Move(moveData)
	stalker:WaitMovementComplete()
	
	-- restore the actors position and groun snapping
	actor:SetRelativeTo(nil)
	actor:SetSnapToGround(true)
	local transform = stalker:GetTransform()
	transform.position.z = transform.position.z - rollOffset
	actor:SetTransform(transform)

end

local porcupineID = 64804
local porcCreateData = ActorCreateData:Default()
porcCreateData.creatureID = porcupineID
porcCreateData.scale = 2.5
porcCreateData.groundSnap = true
porcCreateData.transform = Transform:New(Vector:New(5, 5, 0), -90)
local porc = scene:SpawnActor(porcCreateData)

local rollOffset = 0.6
while true do
	scene:WaitTimer(5)
	RollTo(porc, rollOffset, Vector:New(5, -5, 0))
	scene:WaitTimer(0.5)
	RollTo(porc, rollOffset, Vector:New(-5, -5, 0))
	scene:WaitTimer(0.5)
	RollTo(porc, rollOffset, Vector:New(-5, 5, 0))
	scene:WaitTimer(0.5)
	RollTo(porc, rollOffset, Vector:New(5, 5, 0))
	scene:WaitTimer(0.5)
end
"
1570,Jade Forest - Thunder Hold - 1 - nazgrimBunny - ZTO ,"nazgrimBunny:PlaySpellStateVisual(shaGroundVisualAuraID)
--[[
--Wait for Nazgrim to go Full Sha
WaitForTrigger(""ShaEffects 1"")
FadeIn(nazgrimBunny, 6)
]]--
"
1571,Jade Forest - Alliance Intro Scene - Admiral Rogers - JSB,"
WaitForTrigger( ""rogersMove"" )

Wait( 4 )

RunToLocation( rogers, 2.5, 299.88, -4139.47, 228.991, 103.795)

rogers:SetFacing(131)

rogers:PlayOneShotFullBodyAnim(Animations.EmoteTalkNoSheathe)
rogers:BroadcastTextStereo(BroadcastType.Say, 68022) -- Rogers VO line 1 

Wait( 5 )

SendTrigger( ""rellSpeak"" )

Wait( 4 )

rogers:SetFacing(90)

WaitForTrigger( ""rogersSpeak"" )

-- Wait( 1 )

rogers:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)
rogers:BroadcastTextStereo(BroadcastType.Say, 68123) -- Rogers VO line 2

Wait( 2 )

rogers:PlayOneShotFullBodyAnim(Animations.EmoteTalkNoSheathe)
Wait( 3 )

rogers:SetFacing(200)
rogers:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)"
1572,Jade Forest - Alliance Intro Scene - Rell Nightwind - JSB,"
WaitForTrigger( ""rellSpeak"" )

rell:PlayOneShotFullBodyAnim(Animations.EmoteTalkNoSheathe)
rell:BroadcastTextStereo(BroadcastType.Say, 68023) -- Rell VO line 1 

Wait( 3 )

rell:PlayOneShotFullBodyAnim(Animations.EmotePointNoSheathe)

WaitForTrigger( ""rogersSpeak"" )

Wait( 8 )

RunToLocation( rell, 7, 302.323, -4134.92, 229.071, 79.5182)

RunToLocation( rell, 7, 301.964, -4135.67, 229.2, 47)

RunToLocation( rell, 7, 301.981, -4114.57, 213.657, 95.101)

RunToLocation( rell, 7, 299.52, -4107.33, 214.048, 132.226)

rell:SetFacing(245)

RunToLocation( rell, 7, 291.394, -4122.59, 213.615, 248.776)"
1573,Jade Forest - Thunder Hold - 2 - Init - ZTO    ,"--------------------
--Helper Functions--
--------------------
function MissilePosRand(casterPos) --Random Coordinates
	local xOffset = math.random(-5, 5)
	local yOffset = math.random(-5, 5)
	--local zOffset = math.random(10, 10)  

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(xOffset, yOffset, 0)
	return missilePos
end
 
function ShaMissile(caster)
	local targetPos = MissilePosRand(caster:GetPosition())
	caster:PlaySpellCastVisualAtPoints(shaMissileID, 2, true, targetPos)
end

-----------------------
--Inits and constants--
-----------------------

--Constants
currentLoc = scene:GetPosition()
locX = currentLoc.x
locY = currentLoc.y
locZ = currentLoc.z

--Cameras
genericFOV90 = 368
cam1Wreckage = 485
cam2TempleSetup = 486
cam3Nazgrim = 4379
cam3NazgrimPath = 4380
cam4Sha = 4383
cam4ShaTarget = 4384
cam5Cure = 4385
cam5CureTarget = 4386
cam6Punt = 4388
cam6PuntTarget = 4387
cam7Taran = 4390
cam7TaranTarget = 4389
cam8Talking = 4391
cam8TalkingTarget = 4392


--Actor Models
bunnyCreatureID = 62026
orcCreatureID = 66398
nazgrimCreatureID = 66656
taranzhuCreatureID = 66583
shaHauntCreatureID = 66942
korKronCreatureID = 64868
serpentCreatureID = 64977

--SpellAuraVisuals
nazgrimDesaturateAuraID = 28519
shaGroundVisualAuraID = 28189
shaTransformFXBaseAuraID = 28222
shaRightArmAuraID = 27871 --Bug  325914 - Will not clear with ClearSpellVisual()
--shaLeftArmAuraID = 27872 --Bug  325914 - Will not clear with ClearSpellVisual()
shaLeftArmAuraID = 28463 --Correct Client-side Version
shaBubblesAuraID = 27648
shaExorcismAuraID = 28297 
shaGroundAuraID = 28388
groundAurasID = { shaGroundAuraID, shaGroundVisualAuraID }
shaBurstAuraID = 27433
shaExtractionAuraID = 28491
nazgrimAxeOnBack = 28515

--Spell Missile Visuals
shaMissileID = 28446

--Spells
nukeExplosion = 103119
shavasplosionSpellID = 131506

--Sha Transform Spells
shaTransformFXBaseID = 130458 --Reference, Not used
shaGrowID = 31698
shaRightArmTransformID = 130459
shaLeftArmTransformID = 130460

--Taran Zhu Spells
expelHarmSpellID = 115129

--Channels/beams
shaExtractChannelID = 28444
 
--Spawn Effect Bunnies
nazgrimBunny = SpawnActor(bunnyCreatureID, 3158.17, -898.128, 324.779, 88.6133, 1, false)

--Spawn Actors
nazgrim = SmoothPhaseSpawnActor(nazgrimCreatureID, 3158.16, -898.143, 324.695, 269.383, 1, true)
taranzhu = SmoothPhaseSpawnActor(taranzhuCreatureID, 3190.96, -949.028, 361.831, 81.8009, 1, false)
korkron1 = SmoothPhaseSpawnActor(korKronCreatureID, 3161.82, -908.559, 324.779, 111.246, 1, true)
korkron2 = SmoothPhaseSpawnActor(korKronCreatureID, 3154.54, -909.12, 324.779, 59.3866, 1, true)

SendTrigger(""smoothPhaseComplete"")

serpent = SpawnActor(serpentCreatureID, 3190.96, -949.028, 359.331, 81.8009, 1, false)
taranzhu:SetRelativeTo( serpent )

--Spawn Sha
shaTarget = SpawnFadedActorsAtPoints(shaHauntCreatureID, 4396, false) 
shaTargetBunny = SpawnActor(bunnyCreatureID, 3157.52, -950.861, 324.695, 269.013, 1, false)
--FadeOut(shaTarget, 0)
FadeOut(shaTargetBunny, 0) 

shaNazgrim = SpawnActor(shaHauntCreatureID, 3158.19, -903.687, 326.195, 88.4027, 0.5, false)
shaNazgrimBunny = SpawnActor(bunnyCreatureID, 3158.19, -903.687, 326.195, 88.4027, 0.5, false)
FadeOut(shaNazgrim, 0)

shaHaunts = SpawnFadedActorsAtPoints (shaHauntCreatureID, 4382, false)
shaHauntBunnies = SpawnFadedActorsAtPoints (bunnyCreatureID, 4382, false)

"
1574,Jade Forest - Thunder Hold - 2 - nazgrim - ZTO   ,"WaitForTrigger(""smoothPhaseComplete"")

nazgrim:PlaySpellStateVisual(nazgrimAxeOnBack)
local desaturateAura = nazgrim:PlaySpellStateVisual(nazgrimDesaturateAuraID)

-- Call to Nazgrim
Wait(2)
nazgrim:PlayOneShotAnimKit(3206)
Wait(1)
SendTrigger(""ShaEffects 1"")
Wait(3)
SendTrigger(""ShaEffects 2"") 

WaitForTrigger(""ShaEffects 3"")
CastSpellAtActor(nazgrim, nazgrim, shaLeftArmTransformID)
local shaLeftArm = nazgrim:PlaySpellStateVisual(shaLeftArmAuraID)

--Wait for Taran Zhu
WaitForTrigger(""Face Me"")
nazgrim:SetFacingToAbs(Vector:New(3156.88, -904.36, 324.696))

--Wait for Tarran to cure
WaitForTrigger(""Nazgrim - Cure"")
local shaExtractionAura = nazgrim:PlaySpellStateVisual(shaExtractionAuraID)
nazgrim:PlayOneShotAnimKit(3133)
Wait(5)
nazgrim:ClearSpellVisual( desaturateAura)
nazgrim:ClearSpellVisual( shaLeftArm)
nazgrim:ClearSpellVisual( shaExtractionAura)
SendTrigger(""shaTarget - Fade In"")
for i=1, #shaTarget do
	CastSpellAtActor(nazgrim, shaTarget[i], shavasplosionSpellID)
	--FadeIn(shaTarget[i], 1) 
end
"
1575,Jade Forest - Thunder Hold - 2 - nazgrimBunny - ZTO    ,"WaitForTrigger(""smoothPhaseComplete"")

nazgrimBunny:PlaySpellStateVisual(shaGroundVisualAuraID)

--Wait for Rell to go Full Sha
WaitForTrigger(""ShaEffects 1"")
FadeIn(nazgrimBunny, 6)

--Wait for Taran Zhu to slap the sha out of Rell
WaitForTrigger(""Nazgrim - Cure"")
FadeOut(nazgrimBunny, 2)"
1576,Jade Forest - Thunder Hold - 2 - shaNazgrim - ZTO    ,"WaitForTrigger(""smoothPhaseComplete"")

--[[
shaNazgrim:PlaySpellStateVisual(shaGroundVisualAuraID)

shaNazgrim:PlayLoopingAnimKit(2025)
 
WaitForTrigger(""Nazgrim - Cure"")
local shaExtractionChannel = ChannelSpellVisualAtActor( shaNazgrimBunny, shaExtractChannelID, nazgrim )
local shaConjure = shaNazgrimBunny:PlaySpellStateVisual(shaBurstAuraID)

Wait(5)
CastSpellAtActor(shaNazgrimBunny, shaNazgrimBunny, shaRightArmTransformID)
Wait(1)
FadeIn(shaNazgrim, 1)
ClearChannelSpellVisual(shaExtractionChannel)
FadeOut(shaNazgrimBunny, 2)
shaNazgrimBunny:ClearSpellVisual( shaConjure)
SendTrigger(""Taran - kick"")

--Wait to be kicked
WaitForTrigger(""shaHaunt - Kick"")
CastSpellAtActor(shaNazgrim, shaNazgrim, shaRightArmTransformID)
shaNazgrim:MoveToRel(Vector:New(7, 3, -1.5), 0.25)
shaNazgrim:WaitMovementComplete() 

shaNazgrim:StopAnimKit(2025) 
PlayOneShotSplitBodyAnim( shaNazgrim, Animations.Death )
PlayLoopingSplitBodyAnim( shaNazgrim, Animations.Dead )
]]--"
1577,Jade Forest - Thunder Hold - 2 - taranzhu - ZTO   ,"WaitForTrigger(""smoothPhaseComplete"")

--[[
local moveData = MoveData:Default()
moveData.pathID = 4410
moveData.speed = 15
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true
]]--
--Wait for Entrance
PlayLoopingSplitBodyAnim( taranzhu, Animations.Mount)
WaitForTrigger(""TaranZhu - Enter"")
StopLoopingSplitBodyAnim( taranzhu, Animations.Mount)

--RunToLocation(taranzhu, 12, 3158.05, -906.762, 324.696, 87.4027, true)
Wait(3.6) --Time to wait before dropping from the serpent
taranzhu:SetRelativeTo( nil )
taranzhu:PlayLoopingAnimKit(3132)
taranzhu:SetFacingToAbs(Vector:New(3158.17, -898.128, 324.779))
taranzhu:MoveToRel(Vector:New(0,0,-8.5), 0.5)
Wait(0.5) --Falling
taranzhu:StopAnimKit(3132)
PlayOneShotSplitBodyAnim(taranzhu, Animations.JumpEnd )
SendTrigger(""Korkron - Knockdown"")
Wait(1.63)
RunToLocation(taranzhu, 7, 3158.26, -902.118, 324.696, 87.4027, true)
--Wait(1)

--Begin Exorcise Sha
SendTrigger(""Face Me"")
PlayLoopingSplitBodyAnim( taranzhu, Animations.ChannelCastDirected )
local shaFistAura = taranzhu:PlaySpellStateVisual(shaExtractChannelID)
SendTrigger(""Nazgrim - Cure"")
Wait(8)
--WaitForTrigger(""Taran - kick"")
StopLoopingSplitBodyAnim( taranzhu, Animations.ChannelCastDirected )
taranzhu:ClearSpellVisual( shaFistAura)


--[[
PlayOneShotSplitBodyAnim( taranzhu, Animations.RoundHouseKick )
Wait(0.4)
SendTrigger(""shaHaunt - Kick"")
Wait(0.77)
taranzhu:SetFacingToAbs(Vector:New(3167.48, -897.352, 324.695))
]]--
--WaitForTrigger(""Taran - Face Nazgrim"")
--taranzhu:SetFacingToAbs(Vector:New(3158.17, -898.128, 324.779))
--RunToLocation(taranzhu, 2, 3158.26, -902.118, 324.696, 87.4027, true)
"
1578,Jade Forest - Thunder Hold - 2 - MASTER - ZTO    ,"WaitForTrigger(""smoothPhaseComplete"")

--Begin Scene
Wait(3)
Wait(2)
nazgrim:BroadcastTextStereo(BroadcastType.Say, 67872) -- VO Line 2
SendTrigger(""ShaEffects 3"")
SendTrigger(""TaranZhu - Enter"")
--Wait(12)
WaitForTrigger(""Nazgrim - Cure"")
Wait(8)
nazgrim:BroadcastTextStereo(BroadcastType.Say, 67873) -- VO Line 3
nazgrim:PlayLoopingAnimKit(3183)
Wait(3)
SendTrigger(""Taran - Face Nazgrim"")
Wait(5)
nazgrim:StopAnimKit(3183)
Wait(1)
scene:EndScene()"
1579,Jade Forest - Thunder Hold - 2 - shaTarget - ZTO    ,"WaitForTrigger(""smoothPhaseComplete"")

for i=1, #shaTarget do
	--PlayLoopingSplitBodyAnim(shaTarget[i], Animations.Dead )
	shaTarget[i]:PlaySpellStateVisual(shaGroundVisualAuraID)
end

WaitForTrigger(""shaTarget - Fade In"")
Wait(2)
for i=1, #shaTarget do
	PlayOneShotSplitBodyAnim( shaTarget[i], Animations.Birth )
	FadeIn(shaTarget[i], 1) 
	--PlayOneShotSplitBodyAnim( shaTarget[i], Animations.Death )
	--Wait(1.5)
	--PlayLoopingSplitBodyAnim( shaTarget[i], Animations.Dead )
end

Wait(3)
for i=1, #shaTarget do
	FadeOut(shaTarget[i], 1) 
end"
1580,Jade Forest - Alliance Intro Scene - Gyrocopter04- JSB,"
Wait( 1 )

gyroCopter04:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 12 )


local moveData04 = MoveData:Default()
moveData04.animKitID = 3144;
moveData04.teleportToFirstPoint = true;
moveData04.posControl = MovePosControl.ConstantSpeed
moveData04.yawControl = MoveRotControl.Tangent
moveData04.pitchControl = MoveRotControl.Tangent
moveData04.rollControl = MoveRotControl.Angle
moveData04.pathID = 4404;
moveData04.speed = 18;


gyroCopter04:Move( moveData04 )"
1581,Jade Forest - Alliance Intro Scene - Gyrocopter01- JSB,"
Wait( 1 )

gyroCopter01:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 10 )


local moveData01 = MoveData:Default()
moveData01.animKitID = 3144;
moveData01.teleportToFirstPoint = true;
moveData01.posControl = MovePosControl.ConstantSpeed
moveData01.yawControl = MoveRotControl.Tangent
moveData01.pitchControl = MoveRotControl.Tangent
moveData01.rollControl = MoveRotControl.Angle
moveData01.pathID = 4401;
moveData01.speed = 18;


gyroCopter01:Move( moveData01 )"
1582,Jade Forest - Alliance Intro Scene - Gyrocopter02- JSB,"
Wait( 1 )

gyroCopter02:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 13 )


local moveData02 = MoveData:Default()
moveData02.animKitID = 3144;
moveData02.teleportToFirstPoint = true;
moveData02.posControl = MovePosControl.ConstantSpeed
moveData02.yawControl = MoveRotControl.Tangent
moveData02.pitchControl = MoveRotControl.Tangent
moveData02.rollControl = MoveRotControl.Angle
moveData02.pathID = 4402;
moveData02.speed = 18;


gyroCopter02:Move( moveData02 )"
1583,Jade Forest - Alliance Intro Scene - Gyrocopter03- JSB,"
Wait( 1 )

gyroCopter03:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 9 )


local moveData03 = MoveData:Default()
moveData03.animKitID = 3144;
moveData03.teleportToFirstPoint = true;
moveData03.posControl = MovePosControl.ConstantSpeed
moveData03.yawControl = MoveRotControl.Tangent
moveData03.pitchControl = MoveRotControl.Tangent
moveData03.rollControl = MoveRotControl.Angle
moveData03.pathID = 4403;
moveData03.speed = 18;


gyroCopter03:Move( moveData03 )"
1584,Jade Forest - Alliance Intro Scene - Gyrocopter05- JSB,"
Wait( 1 )

gyroCopter05:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 10 )


local moveData05 = MoveData:Default()
moveData05.animKitID = 3144;
moveData05.teleportToFirstPoint = true;
moveData05.posControl = MovePosControl.ConstantSpeed
moveData05.yawControl = MoveRotControl.Tangent
moveData05.pitchControl = MoveRotControl.Tangent
moveData05.rollControl = MoveRotControl.Angle
moveData05.pathID = 4405;
moveData05.speed = 18;


gyroCopter05:Move( moveData05 )"
1585,Jade Forest - Alliance Intro Scene - Gyrocopter06- JSB,"
Wait( 1 )

gyroCopter06:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 7 )


local moveData06 = MoveData:Default()
moveData06.animKitID = 3144;
moveData06.teleportToFirstPoint = true;
moveData06.posControl = MovePosControl.ConstantSpeed
moveData06.yawControl = MoveRotControl.Tangent
moveData06.pitchControl = MoveRotControl.Tangent
moveData06.rollControl = MoveRotControl.Angle
moveData06.pathID = 4406;
moveData06.speed = 18;


gyroCopter06:Move( moveData06 )"
1586,Jade Forest - Alliance Intro Scene - Gyrocopter07- JSB,"
Wait( 1 )

gyroCopter07:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 8 )


local moveData07 = MoveData:Default()
moveData07.animKitID = 3144;
moveData07.teleportToFirstPoint = true;
moveData07.posControl = MovePosControl.ConstantSpeed
moveData07.yawControl = MoveRotControl.Tangent
moveData07.pitchControl = MoveRotControl.Tangent
moveData07.rollControl = MoveRotControl.Angle
moveData07.pathID = 4407;
moveData07.speed = 18;


gyroCopter07:Move( moveData07 )"
1587,Jade Forest - Alliance Intro Scene - Gyrocopter08- JSB,"
Wait( 1 )

gyroCopter08:PlayLoopingAnimKit(3063)

WaitForTrigger( ""rogersSpeak"" )

Wait( 9 )


local moveData08 = MoveData:Default()
moveData08.animKitID = 3144;
moveData08.teleportToFirstPoint = true;
moveData08.posControl = MovePosControl.ConstantSpeed
moveData08.yawControl = MoveRotControl.Tangent
moveData08.pitchControl = MoveRotControl.Tangent
moveData08.rollControl = MoveRotControl.Angle
moveData08.pathID = 4408;
moveData08.speed = 18;


gyroCopter08:Move( moveData08 )"
1588,Jade Forest - Alliance Intro Scene - Mists - JSB,"
WaitForTrigger( ""mistFade"" )

FadeOut( mist01, 25 )
FadeOut( mist02, 25 )
FadeOut( mist03, 25 )
FadeOut( mist04, 25 )
FadeOut( mist06, 25 )

Wait( 2 )

FadeOut( mistSpecial01, 2 )
FadeOut( mistSpecial02, 2 )
FadeOut( mistSpecial03, 2 )
FadeOut( mistSpecial04, 2.5 )
"
1589,[1] Jade Forest - Alliance Intro Scene - Init - JSB,"Cannons

local cannonModel = ""WORLD\\GENERIC\\ORC\\PASSIVE DOODADS\\CANNONS\\Orc_Cannon_01.M2""
cannon01 = SpawnModelActor( cannonModel, 166.886, -3752.92, 5.93269, 299.413, 1.0, false )
cannon02 = SpawnModelActor( cannonModel, 81.0561, -3832.83, 5.7175, 300.374, 1.0, false )
cannon03 = SpawnModelActor( cannonModel, 17.6092, -3617.29, 6.14819, 280.738, 1.0, false )
cannon04 = SpawnModelActor( cannonModel, 266.611, -3840.01, 5.56659, 263.698, 1.0, false )
cannon05 = SpawnModelActor( cannonModel, 214.541, -3479.56, 5.3142, 124.95, 1.0, false )


-- spawn Cannon Targets
local TargetBunnyCreatureID = 61997
cannonTarget01 = SpawnActor( TargetBunnyCreatureID, 316.725, -4442.64, 437.421, 110.909, 1.0, false ) -- miss
cannonTarget02 = SpawnActor( TargetBunnyCreatureID, 212.295, -4322.61, 370.833, 98.174, 1.0, false ) -- miss
cannonTarget03 = SpawnActor( TargetBunnyCreatureID, 290.206, -4296.84, 188.035, 104.474, 1.0, false ) -- miss
cannonTarget04 = SpawnActor( TargetBunnyCreatureID, 242.895, -4115.25, 189.177, 259.949, 1.0, false ) -- hit
cannonTarget05 = SpawnActor( TargetBunnyCreatureID, 308.07, -4124.22, 201.562, 215.624, 1.0, false ) -- hit
cannonTarget06 = SpawnActor( TargetBunnyCreatureID, 199.532, -4124.75, 214.404, 236.324, 1.0, false ) -- hit
cannonTarget07 = SpawnActor( TargetBunnyCreatureID, 211.063, -4119.21, 173.747, 291.674, 1.0, false ) -- hit

cannonTarget11 = SpawnActor( TargetBunnyCreatureID, 316.725, -4442.64, 150, 110.909, 1.0, false ) -- miss
cannonTarget12 = SpawnActor( TargetBunnyCreatureID, 293.002, -4309.17, 150, 99.524, 1.0, false ) -- miss
cannonTarget13 = SpawnActor( TargetBunnyCreatureID, 290.206, -4296.84, 150, 104.474, 1.0, false ) -- miss

-- spawn gyrocopters

local gyroCreatureID = 65843
gyroCopter01 = SpawnActor( gyroCreatureID, 232.173, -4134.95, 209.5, 180, 1.5, false )
gyroCopter02 = SpawnActor( gyroCreatureID, 246.655, -4134.95, 209.5, 180, 1.5, false )
gyroCopter03 = SpawnActor( gyroCreatureID, 256.728, -4134.95, 209.5, 180, 1.5, false )
gyroCopter04 = SpawnActor( gyroCreatureID, 268.374, -4134.95, 209.5, 180, 1.5, false )

gyroCopter05 = SpawnActor( gyroCreatureID, 267.917, -4161.96, 209.5, 180, 1.5, false )
gyroCopter06 = SpawnActor( gyroCreatureID, 256.426, -4161.96, 209.5, 180, 1.5, false )
gyroCopter07 = SpawnActor( gyroCreatureID, 246.794, -4161.96, 209.5, 180, 1.5, false )
gyroCopter08 = SpawnActor( gyroCreatureID, 232.827, -4161.96, 209.5, 180, 1.5, false )




-- spawn fogs
-- in front
local cloudModel = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mist01 = SpawnModelActor( cloudModel, 119.741, -4110.55, 232.412, 349.71, 30.0, false )
mist02 = SpawnModelActor( cloudModel, 337.114, -4152.25, 123.508, 185.461, 30.0, false )
mist03 = SpawnModelActor( cloudModel, 284.65, -4060.28, 216.151, 259.486, 30.0, false )
mist04 = SpawnModelActor( cloudModel, 362.586, -4157.9, 248.407, 171.961, 30.0, false )
-- mist05 = SpawnModelActor( cloudModel, 278.482, -4195.54, 214.083, 108.061, 30.0, false )
mist06 = SpawnModelActor( cloudModel, 226.321, -4226.46, 227.327, 72.5107, 50.0, false )



-- special fog
local mistModel = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""
mistSpecial01 = SpawnModelActor( mistModel, 277, -4100, 220, 269.485, 4.0, false )
mistSpecial02 = SpawnModelActor( mistModel, 273, -4100, 220, 4.0, false )
mistSpecial03 = SpawnModelActor( mistModel, 279, -4100, 219.485, 4.0, false )
mistSpecial04 = SpawnModelActor( mistModel, 277, -4100, 220, 269.485, 8.0, false )
FadeOut( mistSpecial01, 0 )
FadeOut( mistSpecial02, 0 )
FadeOut( mistSpecial03, 0 )
FadeOut( mistSpecial04, 0 )


-- sirens
local sirenModel = ""world\\GENERIC\\GNOME\\PASSIVE DOODADS\\HAZARDLIGHTS\\GnomeHazardLightRed_02.M2""
siren01 = SpawnModelActor( sirenModel, 285.147, "
1590,Jade Forest - Alliance Intro Scene - Patroller01 - JSB,"
Wait( 1 )

RunToLocation( patrolGuard01, 2.5, 206.127, -4141.43, 212.2, 90)

Wait( 1 )

patrolGuard01:SetFacing(270)

Wait( 1 )

RunToLocation( patrolGuard01, 2.5, 206.473, -4155.08, 212.2, 270)

Wait( 1 )

patrolGuard01:SetFacing(90)

Wait( 1 )

RunToLocation( patrolGuard01, 2.5, 206.127, -4141.43, 212.2, 90)

Wait( 1 )

patrolGuard01:SetFacing(270)

Wait( 1 )

RunToLocation( patrolGuard01, 2.5, 206.473, -4155.08, 212.2, 270)"
1591,Jade Forest - Alliance Intro Scene - Patroller03 - JSB,"
Wait( 5 )

RunToLocation( patrolGuard03, 2.5, 216, -4143.82, 209.3, 180)

Wait( 1 )

patrolGuard03:SetFacing(0)

Wait( 1 )

RunToLocation( patrolGuard03, 2.5, 269.491, -4143.82, 209.3, 0)

Wait( 1 )

patrolGuard03:SetFacing(180)

Wait( 1 )

RunToLocation( patrolGuard03, 2.5, 216, -4143.82, 209.3, 180)

Wait( 1 )

patrolGuard03:SetFacing(0)

Wait( 1 )

RunToLocation( patrolGuard03, 2.5, 269.491, -4143.82, 209.3, 0)

Wait( 1 )

patrolGuard03:SetFacing(180)"
1592,Jade Forest - Thunder Hold - 1 - korkron1 - ZTO ,"Wait(1)
RunToLocation(korkron1, 7, 3163.18, -901.143, 324.695, 101.059, true)
PlayLoopingSplitBodyAnim( korkron1, Animations.Ready2H )"
1593,Jade Forest - Thunder Hold - 1 - korkron2 - ZTO ,"Wait(1)
RunToLocation(korkron2, 7, 3150.86, -901.714, 324.695, 66.1839, true)
PlayLoopingSplitBodyAnim( korkron2, Animations.Ready2H )"
1594,Jade Forest - Alliance Intro Scene - Patroller04 - JSB,"
Wait( 1 )

RunToLocation( patrolGuard04, 2.5, 216, -4153.74, 209.3, 180)

Wait( 1 )

patrolGuard04:SetFacing(0)

Wait( 1 )

RunToLocation( patrolGuard04, 2.5, 267.922, -4153.74, 209.3, 0)

Wait( 1 )

patrolGuard04:SetFacing(180)

Wait( 1 )

RunToLocation( patrolGuard04, 2.5, 216, -4153.74, 209.3, 180)

Wait( 1 )

patrolGuard04:SetFacing(0)

Wait( 1 )

RunToLocation( patrolGuard04, 2.5, 267.922, -4153.74, 209.3, 0)

Wait( 1 )

patrolGuard04:SetFacing(180)"
1595,Jade Forest - Alliance Intro Scene - Patroller02 - JSB,"
Wait( 1 )

RunToLocation( patrolGuard02, 2.5, 269, -4149.01, 209.3, 0)

Wait( 1 )

patrolGuard02:SetFacing(180)

Wait( 1 )

RunToLocation( patrolGuard02, 2.5, 216.729, -4149.01, 209.3, 180)

Wait( 1 )

patrolGuard02:SetFacing(0)

Wait( 1 )

RunToLocation( patrolGuard02, 2.5, 269, -4149.01, 209.3, 0)

Wait( 1 )

patrolGuard02:SetFacing(180)

Wait( 1 )

RunToLocation( patrolGuard02, 2.5, 216.729, -4149.01, 209.3, 180)

Wait( 1 )

patrolGuard02:SetFacing(0)"
1596,Jade Forest - Thunder Hold:zto - Flight Spline Test,"gyrocopterCreatureID = 65843
gyro1 = SpawnActor(gyrocopterCreatureID, 3157.5, -909.793, 324.696, 91.6217, 1, false)

local moveData = MoveData:Default()
moveData.pathID = 4368
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false
moveData.animKitID = 697 
moveData.isGroundSnapping = false

while true do
	gyro1:Move(moveData)
	gyro1:WaitMovementComplete()
end"
1597,Jade Forest - Alliance Intro Scene - Nodd - JSB,"
WaitForTrigger( ""rogersMove"" )

Wait( 3 )

CastSpellAtActor( nodd, nodd, 41995 )

Wait( 10 )

nodd:PlayLoopingFullBodyAnim(Animations.Dead)"
1598,Jade Forest - Alliance Intro Scene - Mishka - JSB,"
WaitForTrigger( ""rogersMove"" )

Wait( 5.5 )

mishka:SetFacing(71)

Wait( 1.5 )

RunToLocation( mishka, 4, 307.669, -4148.8, 228.991, 110)

mishka:SetFacing(353)

Wait( 1 )

mishka:PlayLoopingFullBodyAnim(Animations.KneelLoop)

WaitForTrigger( ""rogersSpeak"" )

Wait( 2 )

mishka:StopLoopingFullBodyAnim()

mishka:SetFacing(104)

Wait( 2 )

RunToLocation( mishka, 7, 302.323, -4134.92, 229.071, 79.5182)

RunToLocation( mishka, 7, 302.406, -4132.59, 228.404, 89.6321)

RunToLocation( mishka, 7, 301.981, -4114.57, 213.657, 95.101)

RunToLocation( mishka, 7, 299.52, -4107.33, 214.048, 132.226)

mishka:SetFacing(245)

RunToLocation( mishka, 7, 291.394, -4122.59, 213.615, 248.776)"
1599,Jade Forest - Alliance Intro Scene - Amber - JSB,"
WaitForTrigger( ""rogersMove"" )

Wait( 4 )

amber:PlayOneShotFullBodyAnim(Animations.EmoteTalkQuestion)

Wait( 3 )

amber:SetFacing(116)

Wait( 3 )

amber:PlayOneShotFullBodyAnim(Animations.EmoteNo)

WaitForTrigger( ""rogersSpeak"" )

Wait( 5 )

RunToLocation( amber, 7, 302.323, -4134.92, 229.071, 79.5182)

RunToLocation( amber, 7, 302.406, -4132.59, 228.404, 89.6321)

RunToLocation( amber, 7, 301.981, -4114.57, 213.657, 95.101)

RunToLocation( amber, 7, 299.52, -4107.33, 214.048, 132.226)

amber:SetFacing(245)

RunToLocation( amber, 7, 291.394, -4122.59, 213.615, 248.776)"
1600,Jade Forest - Alliance Intro Scene - Nimm - JSB,"
WaitForTrigger( ""rogersMove"" )

Wait( 8 )

nimm:SetFacing(29)

Wait( 1 )

nimm:PlayOneShotFullBodyAnim(Animations.EmoteLaugh)

WaitForTrigger( ""rogersSpeak"" )

Wait( 4 )

RunToLocation( nimm, 7, 302.388, -4163.7, 229, 266.532)

RunToLocation( nimm, 7, 302.146, -4183.18, 213.467, 270.582)

RunToLocation( nimm, 7, 297.666, -4188.93, 213.576, 225.808)

nimm:SetFacing(105)

RunToLocation( nimm, 7, 292.381, -4176.57, 213.639, 128.608)

FadeOut( nimm, 0 )"
1601,Jade Forest - Alliance Intro Scene - Sully - JSB,"
WaitForTrigger( ""rogersMove"" )

Wait( 8 )

sully:PlayOneShotFullBodyAnim(Animations.EmotePoint)

WaitForTrigger( ""rogersSpeak"" )

Wait( 5 )

RunToLocation( sully, 7, 301.799, -4156.88, 228.451, 342.838)

RunToLocation( sully, 7, 302.388, -4163.7, 229, 266.532)

RunToLocation( sully, 7, 302.146, -4183.18, 213.467, 270.582)

RunToLocation( sully, 7, 297.666, -4188.93, 213.576, 225.808)

sully:SetFacing(105)

RunToLocation( sully, 7, 292.381, -4176.57, 213.639, 128.608)

FadeOut( sully, 0 )"
1602,Jade Forest - Alliance Intro Scene - Guard01- JSB,"
WaitForTrigger( ""rogersSpeak"" )

Wait( 9 )

RunToLocation( staticGuard01, 7, 301.799, -4156.88, 228.451, 342.838)

RunToLocation( staticGuard01, 7, 302.388, -4163.7, 229, 266.532)

RunToLocation( staticGuard01, 7, 302.146, -4183.18, 213.467, 270.582)

RunToLocation( staticGuard01, 7, 297.666, -4188.93, 213.576, 225.808)

staticGuard01:SetFacing(105)

RunToLocation( staticGuard01, 7, 292.381, -4176.57, 213.639, 128.608)

FadeOut( staticGuard01, 0 )"
1603,Jade Forest - Alliance Intro Scene - Guard02- JSB,"
WaitForTrigger( ""rogersSpeak"" )

Wait( 11 )

RunToLocation( staticGuard02, 7, 301.799, -4156.88, 228.451, 342.838)

RunToLocation( staticGuard02, 7, 302.388, -4163.7, 229, 266.532)

RunToLocation( staticGuard02, 7, 302.146, -4183.18, 213.467, 270.582)

RunToLocation( staticGuard02, 7, 297.666, -4188.93, 213.576, 225.808)

staticGuard01:SetFacing(105)

RunToLocation( staticGuard02, 7, 292.381, -4176.57, 213.639, 128.608)

FadeOut( staticGuard02, 0 )"
1604,Jade Forest - Alliance Intro Scene - Guard03- JSB,"
WaitForTrigger( ""rogersSpeak"" )

Wait( 8 )

RunToLocation( staticGuard03, 7, 302.323, -4134.92, 229.071, 79.5182)

RunToLocation( staticGuard03, 7, 301.964, -4135.67, 229.2, 47)

RunToLocation( staticGuard03, 7, 301.981, -4114.57, 213.657, 95.101)

RunToLocation( staticGuard03, 7, 299.52, -4107.33, 214.048, 132.226)

staticGuard03:SetFacing(245)

RunToLocation( staticGuard03, 7, 291.394, -4122.59, 213.615, 248.776)"
1605,Jade Forest - Alliance Intro Scene - Guard04- JSB,"
WaitForTrigger( ""rogersSpeak"" )

Wait( 9 )

RunToLocation( staticGuard04, 7, 302.323, -4134.92, 229.071, 79.5182)

RunToLocation( staticGuard04, 7, 301.964, -4135.67, 229.2, 47)

RunToLocation( staticGuard04, 7, 301.981, -4114.57, 213.657, 95.101)

RunToLocation( staticGuard04, 7, 299.52, -4107.33, 214.048, 132.226)

staticGuard04:SetFacing(245)

RunToLocation( staticGuard04, 7, 291.394, -4122.59, 213.615, 248.776)"
1606,MoP - Fade to Black Test - ZTO,"scene:SetCamera(0, 0, nil, nil)
scene:SetCamera(368, 0, nil, nil)
scene:ApplyScreenEffect( 827 )
Wait(23)
scene:EndScene()"
1607,Jade Forest - Alliance Intro Scene - Pilots - JSB,"Wait( 1 )

pilot01:SetRelativeTo(gyroCopter01) -- attaches
pilot02:SetRelativeTo(gyroCopter02)
pilot03:SetRelativeTo(gyroCopter03)
pilot04:SetRelativeTo(gyroCopter04)
pilot05:SetRelativeTo(gyroCopter05)
pilot06:SetRelativeTo(gyroCopter06)
pilot07:SetRelativeTo(gyroCopter07)
pilot08:SetRelativeTo(gyroCopter08)

FadeOut( pilot01, 0 )
FadeOut( pilot02, 0 )
FadeOut( pilot03, 0 )
FadeOut( pilot04, 0 )
FadeOut( pilot05, 0 )
FadeOut( pilot06, 0 )
FadeOut( pilot07, 0 )
FadeOut( pilot08, 0 )

WaitForTrigger( ""rogersSpeak"" )

Wait( 5 )

FadeIn( pilot01, 0 )
FadeIn( pilot02, 0 )
FadeIn( pilot03, 0 )
FadeIn( pilot04, 0 )
FadeIn( pilot05, 0 )
FadeIn( pilot06, 0 )
FadeIn( pilot07, 0 )
FadeIn( pilot08, 0 )
"
1608,Jade Forest - Alliance Intro Scene - Horde Ship 01- JSB,"
Wait( 4 )

hordeShip01:SetFacingToAbs(Vector:New(573.636, -4428.92, 0))

WaitForTrigger( ""mistFade"" )

RunToLocation( hordeShip01, 2.5, 94.7052, -3786.35, 0, 204.175)"
1609,Jade Forest - Alliance Intro Scene - Horde Ship 02- JSB,"
Wait( 4 )

hordeShip02:SetFacingToAbs(Vector:New(-30.1014, -4416.52, 0))

WaitForTrigger( ""mistFade"" )

RunToLocation( hordeShip02, 2.5, -75.5293, -3804.89, 0, 204.175)"
1610,Jade Forest - Alliance Intro Scene - Horde Ship 03 - JSB,"
Wait( 4 )

hordeShip03:SetFacingToAbs(Vector:New(-158.376, -4079.68, 0))

WaitForTrigger( ""mistFade"" )

RunToLocation( hordeShip03, 2.5, -165.462, -3534.16, 0, 204.175)"
1611,Jade Forest - Alliance Intro Scene - Horde Ship 04 - JSB,"
Wait( 4 )

hordeShip04:SetFacingToAbs(Vector:New(315.853, -4237.07, 0))

WaitForTrigger( ""mistFade"" )

RunToLocation( hordeShip04, 2.5, 72.1548, -3855.39, 0, 204.175)"
1612,Jade Forest - Thunder Hold - 2 - Korkron1 - ZTO    ,"WaitForTrigger(""Korkron - Knockdown"")
PlayOneShotSplitBodyAnim( korkron1, Animations.Knockdown )
Wait(2)
PlayLoopingSplitBodyAnim( korkron1, Animations.Ready2H )

WaitForTrigger(""Korkron - Stand Down"")
StopLoopingSplitBodyAnim( korkron1, Animations.Ready2H )
"
1613,Jade Forest - Thunder Hold - 2 - Korkron2 - ZTO    ,"WaitForTrigger(""Korkron - Knockdown"")
PlayOneShotSplitBodyAnim( korkron2, Animations.Knockdown )
Wait(2)
PlayLoopingSplitBodyAnim( korkron2, Animations.Ready2H )

WaitForTrigger(""Korkron - Stand Down"")
StopLoopingSplitBodyAnim( korkron2, Animations.Ready2H )
"
1614,Jade Forest - Alliance Intro Scene - Horde Ship 05 - JSB,"
Wait( 4 )

hordeShip05:SetFacingToAbs(Vector:New(-173.378, -3650.78, 0))

WaitForTrigger( ""mistFade"" )

RunToLocation( hordeShip05, 2.5, 136.581, -3319.38, 0, 204.175)"
1615,Jade Forest - Thunder Hold - 2 - serpent - ZTO    ,"local moveData2 = MoveData:Default()
moveData2.pathID = 4411
moveData2.speed = 19
moveData2.posControl = MovePosControl.ConstantSpeed
moveData2.yawControl = MoveRotControl.Tangent
moveData2.pitchControl = MoveRotControl.Tangent
moveData2.rollControl = MoveRotControl.Angle
moveData2.isRelative = false
moveData2.teleportToFirstPoint = true

local moveData3 = MoveData:Default()
moveData3.pathID = 4418
moveData3.speed = 19
moveData3.posControl = MovePosControl.ConstantSpeed
moveData3.yawControl = MoveRotControl.Tangent
moveData3.pitchControl = MoveRotControl.Tangent
moveData3.rollControl = MoveRotControl.Angle
moveData3.isRelative = false
moveData3.teleportToFirstPoint = false

--Wait to be called
WaitForTrigger(""TaranZhu - Enter"")
serpent: Move( moveData2 )
serpent:WaitMovementComplete()
Wait(5)
serpent: Move( moveData3 )
FadeOut(serpent, 2)"
1616,Jade Forest - Alliance Intro Scene - Clone - JSB,"
Wait( 1 )
clone:PlaySoundKitStereo(33217, true)


WaitForTrigger( ""rogersSpeak"" )
clone:PlaySoundKitStereo(33218, true)
Wait( 6 )

RunToLocation( clone, 7, 301.799, -4156.88, 228.451, 342.838)

RunToLocation( clone, 7, 302.388, -4163.7, 229, 266.532)

RunToLocation( clone, 7, 302.146, -4183.18, 213.467, 270.582)

RunToLocation( clone, 7, 297.666, -4188.93, 213.576, 225.808)

sully:SetFacing(105)

RunToLocation( clone, 7, 292.381, -4176.57, 213.639, 128.608)

FadeOut( sully, 0 )"
1617,Jade Forest - Thunder Hold - 2 - shaTarget 2 - ZTO   ,"WaitForTrigger(""shaTarget - Fade In"")
Wait(3)
for i=1, #shaTarget do
	--PlayOneShotSplitBodyAnim( shaTarget[i], Animations.Birth )
	--FadeIn(shaTarget[i], 1) 
	PlayOneShotSplitBodyAnim( shaTarget[i], Animations.Death )
	--Wait(1.5)
	--PlayLoopingSplitBodyAnim( shaTarget[i], Animations.Dead )
end"
1618,Jade Forest - Thunder Hold - 2 - shaTarget 3 - ZTO    ,"WaitForTrigger(""shaTarget - Fade In"")
Wait(4.5)
for i=1, #shaTarget do
	PlayLoopingSplitBodyAnim( shaTarget[i], Animations.Dead )
end
"
1619,Jade Forest - Thunder Hold - 1 - nazgrimAxe - ZTO ,"--[[
local moveData = MoveData:Default()
moveData.pathID = 4413 
moveData.speed = 10
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true -- false



WaitForTrigger(""Nazgrim's Axe"")
nazgrimAxe:Move( moveData )
FadeIn( nazgrimAxe, 1 )
nazgrimAxe:WaitMovementComplete()
CastSpellAtActor( nazgrimAxeBunny, nazgrimAxeBunny, dustExplosion )

]]--"
1620,[1] Jade Forest - Thunder Hold - 1 - Init - ZTO ,"gyrocopterCreatureID, 2914.14, -804.093, 322.657, 351.216, 1, false)
gyro3 = SpawnActor( gyrocopterCreatureID, 2914.14, -804.093, 322.657, 351.216, 1, false)
gyro4 = SpawnActor( gyrocopterCreatureID, 2914.14, -804.093, 322.657, 351.216, 1, false)
gyro5 = SpawnActor( gyrocopterCreatureID, 2914.14, -804.093, 322.657, 351.216, 1, false)
gyro6 = SpawnActor( gyrocopterCreatureID, 2914.14, -804.093, 322.657, 351.216, 1, false)
gyro7 = SpawnActor( gyrocopterCreatureID, 2914.14, -804.093, 322.657, 351.216, 1, false)

----------
--Action--
----------
--Wait(3)
SendTrigger(""Gyro1"")
SendTrigger(""Gyro2"")
--Wait(10)
SendTrigger(""Gyro3"")
--Wait(1)
SendTrigger(""GyroClose"")
Wait(2)
SendTrigger(""Nazgrim - Panic"")

"
1621,Dustwallow Marsh - Theramore Explosion Scene - Chains Effect - JSB,"
Wait( 3 )

chainBunnyA01:SetRelativeTo(zeppelin)
chainBunnyA02:SetRelativeTo(zeppelin)
chainBunnyB01:SetRelativeTo(zeppelin)
chainBunnyB02:SetRelativeTo(zeppelin)

local chain01 = ChannelSpellVisualAtActor( chainBunnyA01, 28523, chainBunnyA02, nil, nil )

local chain02 = ChannelSpellVisualAtActor( chainBunnyB01, 28523, chainBunnyB02, nil, nil )



"
1622,Jade Forest - Naval Finale - shaTarget - ZTO   ,"WaitForTrigger(""smoothPhaseComplete"")

for i=1, #shaTarget do
	shaTarget[i]:PlaySpellStateVisual(shaGroundVisualAuraID)
end

WaitForTrigger(""shaTarget - Fade In"")
Wait(2)
for i=1, #shaTarget do
	PlayOneShotSplitBodyAnim( shaTarget[i], Animations.Birth )
	FadeIn(shaTarget[i], 1) 
end

Wait(3)
for i=1, #shaTarget do
	FadeOut(shaTarget[i], 1) 
end"
1623,Jade Forest - Naval Finale - shaTarget(2) - ZTO,"WaitForTrigger(""shaTarget - Fade In"")
Wait(3)
for i=1, #shaTarget do
	PlayOneShotSplitBodyAnim( shaTarget[i], Animations.Death )
end"
1624,Jade Forest - Naval Finale - shaTarget(3) - ZTO,"WaitForTrigger(""shaTarget - Fade In"")
Wait(4.5)
for i=1, #shaTarget do
	PlayLoopingSplitBodyAnim( shaTarget[i], Animations.Dead )
end
"
1625,Dustwallow Marsh - Theramore Explosion Scene - Chain A Move - JSB,"
WaitForTrigger( ""dropBomb"" )

RunToLocation(chainBunnyA02, 80, -4043.85, -4050.96, 271.634, 129.375)"
1626,Dustwallow Marsh - Theramore Explosion Scene - Chain B Move - JSB,"
WaitForTrigger( ""dropBomb"" )

RunToLocation(chainBunnyB02, 80, -4061.67, -4023.45, 270.177, 209.249)"
1627,Dustwallow Marsh - Theramore Explosion Scene - Bomb Ground - JSB,"
WaitForTrigger( ""dropBomb"" )

Wait( 6 )

FadeIn( bombGround, 0 )

CastSpellAtActor( bombTarget, bombTarget, 131721 )

bombTarget:PlaySoundKitStereo(33360, true)
bombTarget:PlaySoundKitStereo(33424, true)

local shakeOrigin01 = Vector:New(-3729.65, -4424.11, 36)
shakeX = scene:AddCameraEffect( 35, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 36, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 37, shakeOrigin01, nil, 1 )
"
1628,Jade Forest - Alliance - Dream Brew - nukeBunny - ZTO,"WaitForTrigger(""Scene4"")
CastSpellAtActor( nukeBunny, nukeBunny, nukeExplosion )"
1629,Jade Forest - Naval Finale - orc1 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local shooter = marines[1]
local randomTime = math.random(0.1, 0.5)
local swimmer = orc1
local blood = blood1

swimmer:PlayLoopingAnimKit( 2525 )
blood:PlayLoopingAnimKit( 1092 )
FadeIn( swimmer, 2)

--Wait for Orc Trigger
WaitForTrigger(""orcs - Swim"")
swimmer:MoveToRel(Vector:New(10,0,0), 20) 
blood:MoveToRel(Vector:New(10,0,1.5), 20)

WaitForTrigger(""marines - Shoot Survivors"")
--Wait(randomTime)
CastSpellAtActor(shooter, swimmer, shootSpellID, true)
Wait(.1)
swimmer:PlayLoopingAnimKit(1061)
FadeIn(blood, 2)
blood:PlaySpellStateVisual(bloodyWaterAuraID)
--swimmer:MoveToRel(Vector:New(0,0,-2), 3)
--orcsDesc.id = nil
swimmer:WaitMovementComplete()
FadeOut(swimmer, 2)"
1630,Jade Forest - Naval Finale - orc2 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local shooter = marines[2]
local randomTime = math.random(0.1, 0.5)
local swimmer = orc2
local blood = blood2

swimmer:PlayLoopingAnimKit( 2525 )
blood:PlayLoopingAnimKit( 1092 )
FadeIn( swimmer, 2)

--Wait for Orc Trigger
WaitForTrigger(""orcs - Swim"")
swimmer:MoveToRel(Vector:New(10,0,0), 20) 
blood:MoveToRel(Vector:New(10,0,1.5), 20)

WaitForTrigger(""marines - Shoot Survivors"")
--Wait(randomTime)
CastSpellAtActor(shooter, swimmer, shootSpellID, true)
Wait(.1)
swimmer:PlayLoopingAnimKit(1061)
FadeIn(blood, 2)
blood:PlaySpellStateVisual(bloodyWaterAuraID)
--swimmer:MoveToRel(Vector:New(0,0,-2), 3)
--orcsDesc.id = nil
swimmer:WaitMovementComplete()
FadeOut(swimmer, 2)"
1631,Jade Forest - Naval Finale - orc3 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local shooter = marines[3]
local randomTime = math.random(0.1, 0.5)
local swimmer = orc3
local blood = blood3

swimmer:PlayLoopingAnimKit( 2525 )
blood:PlayLoopingAnimKit( 1092 )
FadeIn( swimmer, 2)

--Wait for Orc Trigger
WaitForTrigger(""orcs - Swim"")
swimmer:MoveToRel(Vector:New(10,0,0), 20) 
blood:MoveToRel(Vector:New(10,0,1.5), 20)

WaitForTrigger(""marines - Shoot Survivors"")
--Wait(randomTime)
CastSpellAtActor(shooter, swimmer, shootSpellID, true)
Wait(.1)
swimmer:PlayLoopingAnimKit(1061)
FadeIn(blood, 2)
blood:PlaySpellStateVisual(bloodyWaterAuraID)
--swimmer:MoveToRel(Vector:New(0,0,-2), 3)
--orcsDesc.id = nil
swimmer:WaitMovementComplete()
FadeOut(swimmer, 2)"
1632,Jade Forest - Naval Finale - orc4 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local shooter = marines[4]
local randomTime = math.random(0.1, 0.5)
local swimmer = orc4
local blood = blood4

swimmer:PlayLoopingAnimKit( 2525 )
blood:PlayLoopingAnimKit( 1092 )
FadeIn( swimmer, 2)

--Wait for Orc Trigger
WaitForTrigger(""orcs - Swim"")
swimmer:MoveToRel(Vector:New(10,0,0), 20) 
blood:MoveToRel(Vector:New(10,0,1.5), 20)

WaitForTrigger(""marines - Shoot Survivors"")
--Wait(randomTime)
CastSpellAtActor(shooter, swimmer, shootSpellID, true)
Wait(.1)
swimmer:PlayLoopingAnimKit(1061)
FadeIn(blood, 2)
blood:PlaySpellStateVisual(bloodyWaterAuraID)
--swimmer:MoveToRel(Vector:New(0,0,-2), 3)
--orcsDesc.id = nil
swimmer:WaitMovementComplete()
FadeOut(swimmer, 2)"
1633,Jade Forest - Naval Finale - orc5 - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local shooter = marines[5]
local randomTime = math.random(0.1, 0.5)
local swimmer = orc5
local blood = blood5

swimmer:PlayLoopingAnimKit( 2525 )
blood:PlayLoopingAnimKit( 1092 )
FadeIn( swimmer, 2)

--Wait for Orc Trigger
WaitForTrigger(""orcs - Swim"")
swimmer:MoveToRel(Vector:New(10,0,0), 20) 
blood:MoveToRel(Vector:New(10,0,1.5), 20)

WaitForTrigger(""marines - Shoot Survivors"")
--Wait(randomTime)
CastSpellAtActor(shooter, swimmer, shootSpellID, true)
Wait(.1)
swimmer:PlayLoopingAnimKit(1061)
FadeIn(blood, 2)
blood:PlaySpellStateVisual(bloodyWaterAuraID)
--swimmer:MoveToRel(Vector:New(0,0,-2), 3)
--orcsDesc.id = nil
swimmer:WaitMovementComplete()
FadeOut(swimmer, 2)"
1634,Jade Forest - Naval Finale - orc6 - ZTO ,"WaitForTrigger(""smoothPhaseComplete"")

local shooter = marines[6]
local randomTime = math.random(0.1, 0.5)
local swimmer = orc6
local blood = blood6

swimmer:PlayLoopingAnimKit( 2525 )
blood:PlayLoopingAnimKit( 1092 )
FadeIn( swimmer, 2)

--Wait for Orc Trigger
WaitForTrigger(""orcs - Swim"")
swimmer:MoveToRel(Vector:New(10,0,0), 20) 
blood:MoveToRel(Vector:New(10,0,1.5), 20)

WaitForTrigger(""marines - Shoot Survivors"")
--Wait(randomTime)
CastSpellAtActor(shooter, swimmer, shootSpellID, true)
Wait(.1)
swimmer:PlayLoopingAnimKit(1061)
FadeIn(blood, 2)
blood:PlaySpellStateVisual(bloodyWaterAuraID)
--swimmer:MoveToRel(Vector:New(0,0,-2), 3)
--orcsDesc.id = nil
swimmer:WaitMovementComplete()
FadeOut(swimmer, 2)"
1636,[1] Lorewalker Story - S13: Ballad of Liu Lang - Init - Liu Lang and Pandaren - ZTO,"SpawnActor( bunnyID, 1454.9, 358.54, 553.19, 133.796, 1, false)
FadeOut(belf1, 0)
FadeOut(belf2, 0)
FadeOut(bunny4, 0)"
1637,Lorewalker Story - S10: Yaungol - totem1 - ZTO,"--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(totem1, 5)

WaitForTrigger (""Scene5"")
RunToLocation(totem1, 2, 1459.99, 377.463, 550.221, 222.913, false)"
1638,Lorewalker Story - S10: Yaungol - totem3 - ZTO,"--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(totem3, 5)

WaitForTrigger (""Scene5"")
RunToLocation(totem3, 2, 1460.05, 363.291, 550.222, 128.798, false)"
1639,Lorewalker Story - S10: Yaungol - totem2 - ZTO,"--Wait for Scene 2
WaitForTrigger (""Scene4"")
FadeIn(totem2, 5)

WaitForTrigger (""Scene5"")
RunToLocation(totem2, 2, 1445.73, 364.82, 550.221, 44.0378, false)"
1641,[1] Lorewalker Story - S3: Hozen - Lorewalker Cho - ZTO,"SendTrigger( ""Scene7"" ) -- Clean all
FadeOut(light_dc, 2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.305, 93.5645)
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
--Wait(1)

lorewalker:BroadcastText(BroadcastType.Say, 63747) -- VO Line 8 ()
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
Wait(5)

--Final
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
1642,[1] Valley of the Four Winds - Stoneplow Finale - Init Friends - PRK ,"
pang = SpawnFadedActorAtPoint( 63391, 3383, true )

-- Jiggle function, to snap to terrain
function Jiggle()
	local jiggleVector = Vector:New(0.1, 0, 0)
	kidA:MoveToRel( jiggleVector, .1 )
	kidB:MoveToRel( jiggleVector, .1 )
	kidC:MoveToRel( jiggleVector, .1 )
	kidD:MoveToRel( jiggleVector, .1 )
	kidE:MoveToRel( jiggleVector, .1 )
	fosho:MoveToRel( jiggleVector, .1 )
	koyan:MoveToRel( jiggleVector, .1 )
	jooru:MoveToRel( jiggleVector, .1 )
	farmerA:MoveToRel( jiggleVector, .1 )
	farmerB:MoveToRel( jiggleVector, .1 )
	farmerC:MoveToRel( jiggleVector, .1 )
	player:MoveToRel( jiggleVector, .1 )
end"
1643,Jade Forest - Alliance Intro Scene - Cannons - JSB,"
Wait( 4.1 )

cannon01:SetRelativeTo(hordeShip01)
cannon02:SetRelativeTo(hordeShip02)
cannon03:SetRelativeTo(hordeShip03)
cannon04:SetRelativeTo(hordeShip04)
cannon05:SetRelativeTo(hordeShip05)"
1644,Jade Forest - Alliance Intro Scene - Cannons Fire - JSB,"
WaitForTrigger( ""mistFade"" )

Wait( 6 )
CastSpellAtActor( cannon01, cannonTarget11,131945 )

Wait( 0.75 )
CastSpellAtActor( cannon02, cannonTarget12,131945 )

Wait( 0.5 )
CastSpellAtActor( cannon03, cannonTarget13,131945 )
CastSpellAtActor( cannon04, cannonTarget03,131945 ) -- near miss (offscreen at first

Wait( 2 )
CastSpellAtActor( cannon01, cannonTarget01,131945 )

Wait( 0.75 )
CastSpellAtActor( cannon02, cannonTarget02,131945 )

Wait( 0.5 )
CastSpellAtActor( cannon03, cannonTarget03,131945 )


Wait( 1 )
CastSpellAtActor( cannon01, cannonTarget01,131945 )
CastSpellAtActor( cannon04, cannonTarget04,131945 ) -- hit
Wait( 1 )
CastSpellAtActor( cannon02, cannonTarget02,131945 )
CastSpellAtActor( cannon05, cannonTarget05,131945 ) -- hit

Wait( 0.5 )
CastSpellAtActor( cannon01, cannonTarget03,131945 ) -- hit
Wait( 1 )
CastSpellAtActor( cannon02, cannonTarget07,131945 ) -- hit


Wait( 1 )
CastSpellAtActor( cannon01, cannonTarget01,131945 )
CastSpellAtActor( cannon04, cannonTarget04,131945 ) -- hit on side
Wait( 1 )
CastSpellAtActor( cannon02, cannonTarget02,131945 )
CastSpellAtActor( cannon05, cannonTarget07,131945 )

Wait( 0.5 )
CastSpellAtActor( cannon01, cannonTarget04,131945 )
Wait( 1 )
CastSpellAtActor( cannon02, cannonTarget06,131945 )"
1645,Aquatic - Polymorphed,"function Aquatic_Polymorphed ( ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)

	local target = ROIDTOUNIT( ROID );

	--local slot, transform = FindNextObjectSlot( caster.playerID ) 
	--local location = transform.position;

	local baseModel = fid(201156)

	local frogLoc = target.actor:GetTransform();
	local frogCreateData = ActorCreateData:Default();
	
	frogCreateData.name = ""Frog"";
	--mineCreateData.modelFileID = baseModel;
	frogCreateData.transform = frogLoc;
	frogCreateData.scale = 2;
	frogCreateData.groundSnap = true;
	frogCreateData.interactible = false;
	frogCreateData.creatureID = cid(62370);

	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)

	--local frog = scene:SpawnActor(frogCreateData);
	--object.actor = target.actor;
	--target.actor = frog;
	--target.realActor = object.actor;

	local POOF = 28627;

	target.actor:PlaySpellImpactVisual(POOF);
	target.actor:SetModel( frogCreateData );

	local forced = true;
	DeathAndRespawnCheck(target, forced)

	local q = 0.1;
	-- Loop of the near infinite
	while ( aura.running and q < 10000 ) do 
		q = q + 0.1;
		scene:WaitTimer(0.1);
	end

	scene:WaitTimer(2);

	target.actor:PlaySpellImpactVisual(POOF);
	target.actor:ClearSpellVisual( aura.spellVisualInstanceID)                        

	print(""------"")
	print(target.createData)
	print(""-------END"")

	target.actor:SetModel( target.createData );
	--target.actor:MoveToAbs( frog:GetPosition(), 0);

	UnregisterObject(playerID, slot)
end"
1646,Jade Forest - Alliance Intro Scene - Camera Shakes - JSB,"
local shakeOrigin = Vector:New(211.063, -4119.21, 173.747)
WaitForTrigger( ""mistFade"" )

Wait( 18.8 )

shakeX = scene:AddCameraEffect( 32, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin, nil, 1 )
cannonTarget07:PlaySoundKitStereo( 17480, true )

Wait( 3.2 )

shakeX = scene:AddCameraEffect( 32, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin, nil, 1 )
cannonTarget07:PlaySoundKitStereo( 17480, true )

Wait( 0.75 )

shakeX = scene:AddCameraEffect( 32, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 33, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 34, shakeOrigin, nil, 1 )
cannonTarget07:PlaySoundKitStereo( 17480, true )"
1647,[2] Kun Lai Summit - Resurrecting the Thunder God - Init - Generic Actors 01 - JSB,"1560.07, 757.963, 186.491 )
-- trollGrunt09 = SpawnActor( trollGruntCreatureID, 3611.88, 1560.07, 757.963, 186.491 )

"
1648,Kun Lai Summit - Resurrecting the Thunder God - zandalariPrisoner,"Wait(2)
zandalariPrisoner:BroadcastTextStereo(BroadcastType.Say, 65404) -- VO Line 1
Wait(6)
zandalariPrisoner:BroadcastTextStereo(BroadcastType.Say, 65405) -- VO Line 2
Wait(5)
zandalariPrisoner:BroadcastTextStereo(BroadcastType.Say, 65406) -- VO Line 3
Wait(4)
zandalariPrisoner:BroadcastTextStereo(BroadcastType.Say, 65407) -- VO Line 4
Wait(12)
zandalariPrisoner:BroadcastTextStereo(BroadcastType.Say, 65409) -- VO Line 5
SendTrigger(""audioBunny - Final Line"")"
1649,[2] Jade Forest - Alliance Intro Scene - Init - JSB,"-4146.03, 232.95, 0, 1.0, false )
siren02 = SpawnModelActor( sirenModel, 284.879, -4151.01, 232.95, 0, 1.0, false )

siren03 = SpawnModelActor( sirenModel, 316.833, -4134.8, 230.3, 0, 1.0, false )
siren04 = SpawnModelActor( sirenModel, 316.833, -4162.0, 230.3, 0, 1.0, false )

siren05 = SpawnModelActor( sirenModel, 200.682, -4133.8, 220.3, 0, 4.0, false )
siren06 = SpawnModelActor( sirenModel, 200.878, -4163.3, 220.3, 0, 4.0, false )

FadeOut( siren01, 0 )
FadeOut( siren02, 0 )
FadeOut( siren03, 0 )
FadeOut( siren04, 0 )
FadeOut( siren05, 0 )
FadeOut( siren06, 0 )"
1650,Jade Forest - Alliance Intro Scene - Sirens - JSB,"
WaitForTrigger( ""mistFade"" )

FadeIn( siren01, 0 )
FadeIn( siren02, 0 )
FadeIn( siren03, 0 )
FadeIn( siren04, 0 )
FadeIn( siren05, 0 )
FadeIn( siren06, 0 )"
1651,[1] Cinematic Framework - Spawning,"token
--
function SpawnPlayerCloneActorByToken( token, x, y, z, facing, scale, snapToGround )

	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )

	local createData = ActorCreateData:New( 0, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actor = nil

	actor = scene:SpawnPlayerCloneActorByToken( token, createData, false )
	if actor then
		actor:SetInteractible( false )
	end
	return actor
end

function SpawnPlayerGroupAtPoints( pointsPathID, scale, snapToGround )
	local path = scene:LoadPath(pointsPathID).nodes
	
	local spawnTransform = Transform:New( path[1].pos, path[1].z, path[1].y, path[1].x )
	local createData = ActorCreateData:New( 0, spawnTransform, scale)
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false
	
	local returnTable = {}
	local inARaid = false
	for i = 1, math.min(#path,40) do
		local raidSpawnTransform = Transform:New( path[i].pos, path[i].z, path[i].y, path[i].x )
		local raidCreateData = ActorCreateData:New( 0, raidSpawnTransform, scale)
		raidCreateData.groundSnap = (snapToGround ~= false)
		raidCreateData.interactible = false
		
		local newRaidMember = scene:SpawnPlayerCloneActorByToken( ""raid""..i, raidCreateData, false )
		if newRaidMember then
			inARaid = true
			table.insert(returnTable, newRaidMember)
		end
	end

	if (inARaid == false) then
		table.insert(returnTable, scene:SpawnActivePlayerCloneActor(createData, false))
		for i = 1, math.min(#path,4) do
			local partySpawnTransform = Transform:New( path[i+1].pos, path[i+1].z, path[i+1].y, path[i+1].x )
			local partyCreateData = ActorCreateData:New( 0, partySpawnTransform, scale)
			partyCreateData.groundSnap = (snapToGround ~= false)
			partyCreateData.interactible = false
			
			local newPartyMember = scene:SpawnPlayerCloneActorByToken( ""party""..i, partyCreateData, false )
			if newPartyMember then
				table.insert(returnTable, newPartyMember)
			end
		end
	end

	return returnTable
end

-- SmoothPhaseSpawnActivePlayerCloneActor( x, y, z, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor cloned from the active player adapted for smooth phasing
--
function SmoothPhaseSpawnActivePlayerCloneActor( x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )

	local clonesAvailable = true
	local creatureID = 0
	if (not Scene.SpawnActivePlayerCloneActor) then
		clonesAvailable = false
		creatureID = 65247 -- backup clone creature
	end

	local createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false
	createData.smoothPhase = true

	local actor = nil
	if (clonesAvailable == true ) then
		actor = scene:SpawnActivePlayerCloneActor( createData, false )
	end

	if (not actor) then
		actor = scene:SpawnActor( createData )
	end

	actor:SetInteractible( false )
	WaitForSmoothPhase( createData )

	return actor

end


--
-- SpawnModelActor( modelFileName, x, y, z, facing [default 0], scale [default 1] )
--   Spawn an uninteractible actor
--
function SpawnModelActor( modelFileName, x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local pos = Vector:New( x, y, z )
	local transform = Transform:New( pos, facing )
	local createData = ActorCreateData:NewModel( ""dummy"", modelFileName, transform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local "
1652,Brazie's PetBattle - Library - Pet Movement - GetRoll,"
function LockToRollActor( petActor, rollOffset )

	-- Roll test:
	--  The procupine actor is made relative to a stalker that is rolling, and
	--  the stalkers movement path is offset by the pivot point of the roll

	local stalkerModel = fid(124640)
	--local stalkerModel = ""spells\\axistestobject.m2""

	local stalkerCreateData = ActorCreateData:Default()
	stalkerCreateData.modelFileID = stalkerModel
	stalkerCreateData.groundSnap = true
	local stalker = scene:SpawnActor(stalkerCreateData)


	-- move the stalker to the correct initial position, and make
	-- the actor relative to it
	stalker:SetHoverHeight(rollOffset)
	local transform = petActor:GetTransform()
	transform.position.z = transform.position.z + rollOffset
	stalker:SetTransform(transform)
	stalker:SetFacingTurnRate(petActor:GetFacingTurnRate())
	petActor:SetSnapToGround(false)
	petActor:SetRelativeTo(stalker)

	return stalker;
end

function UnlockRollActor( petActor, stalker, rollOffset ) 
	-- restore the actors position and groun snapping
	petActor:SetRelativeTo(nil)
	petActor:SetSnapToGround(true)
	local transform = stalker:GetTransform()
	transform.position.z = transform.position.z - rollOffset
	transform.roll = 0;
	petActor:SetTransform(transform)

end"
1655,Humanoid - Heroic Leap,"function Humanoid_HeroicLeap_LiftOff( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_AlternateVisualOnMultiHit"");

		return; 
	end

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local sourcePosition, targetPosition = pet.actor:GetPosition(), Vector:New( 0,0,0 );
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	-- Play the Cast Visual ==

	pet.actor:PlaySpellCastVisual(28903)

	pet.actor:SetSnapToGround(false)
	pet.actor:WaitMoveToAbs( LocalToWorldCoords( Vector:New(1, 0, 15) ), 2 );


	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	scene:WaitTimer(0.2);
end


function Humanoid_HeroicLeap_Attack( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = ResultToTargetROID(turn.effects[1].results[1])
	local target =  ROIDTOUNIT(targetROID);

	local missed = turn.effects[1].results[1].flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

	
	-- New Spline START
	local moveData = MoveData:Default(2);
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Tangent
	moveData.yawControl = MoveRotControl.Tangent


	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );

--[[
print( distToTarget );
print( player.home );
print( pet.actor:GetPosition() );
print( WorldToLocalCoords( player.home ) );
print( WorldToLocalCoords( LocalToWorldCoords( Vector:New(10,10,10) ) ) );
--]]


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, pet.actor:GetPosition().z ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0.2) );
	moveData.points[2].speed = 20
	--[[
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, dir, 2) );
	moveData.points[3].speed = 7
	moveData.points[4].pos = LocalToWorldCoords ( Vector:New(0.5*distToTarget, dir*-1, 3) );
	moveData.points[4].speed = 7
	moveData.points[5].pos = player.home + LocalToWorldCoords ( Vector:New(0.0*distToTarget, dir*-0.5, 1) );
	moveData.points[5].speed = 7
	moveData.points[6].pos = player.home
	moveData.points[6].speed = 2
	--]]

	local visKit = pet.actor:PlaySpellStateVisual( "
1656,[1] Humanoid - Heroic Leap,"PET_BATTLES_SPRINT_TRAIL ) 

	local stretch = false;
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)


	-- When you pass the test the first time
	local success = function()
		for i=1, #turn.effects do 
			local effect = turn.effects[i];
			local effectVisualID = turn.turnVisualID;

			-- Start the effect animation
			if ( effectVisualID and effectVisualID > 0 and i == 1 ) then 
				DefaultEffectVisualHandler( ROID, effect, effectVisualID, HeroicLeap_HugeKnockbackSuccess, overrideFailure );
			end

			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end
	end

--  Fix for Bug ID: 344351 - the finish func was signaling a turn already processed in the loop above
--	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	local dummyFinish = function(...)
	end
	Spline_Attack2( test, success, dummyFinish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	-- New Spline END

	pet.actor:SetSnapToGround(true)
	scene:WaitTimer(0.2);

	-- Always remember to clean up after yourself
	DefaultTurnCleanUp(ROID);
end

function HeroicLeap_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHomeKnockback, attackerROID, 2, 0.7 ); 	 

	scene:WaitTimer(0.5);
end"
1657,[2] Brazie's PetBattle - Dispatcher - Visuals - Knockbacks,"kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	local startPosition = victim.actor:GetPosition();

--Print ( startPosition );
--Print ( opponentFinalPoint );

--Print(""Home Based Knockback5"")		
	victim.actor:MoveSplineAbs( 
			BuildKnockbackSpline( startPosition, opponentFinalPoint, time), time )
	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 


function PerformSlide( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	DebugPrint(""knock"")		
 
	local opponentFinalPoint 	= CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;
 
	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveToAbs(opponentFinalPoint, duration );
	victim.actor:WaitMovementComplete() 
 
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 

function PerformVerticalKnockback( victim, attacker, distance, time ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveSplineAbs( BuildKnockbackSpline( victim.actor:GetPosition(), victim.actor:GetPosition(), time), time)

	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();
end

"
1658,[1] Turn Package - Build Boombot / Countdown / Detonate,"effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 


	DefaultTurnCleanUp(ROID);

	-- Flag the object for despawning
	object.detonating = false;
end"
1659,Darren's Test Item Replacement,"print(""ITEM REPLACEMENT TEST"")

local nazID = 7561
local nazCreateData = ActorCreateData:Default()
nazCreateData.creatureID = nazID
nazCreateData.scale = 1.0
nazCreateData.groundSnap = true
nazCreateData.transform = Transform:New(Vector:New(5, 0, 0), 180)
local naz = scene:SpawnActor(nazCreateData)

scene:WaitTimer(2)

local fishingVisID = 28448
local fishingHandle = naz:PlaySpellChannelVisualAtTargets(fishingVisID, {naz})

scene:WaitTimer(5)

naz:ClearSpellChannelVisual(fishingVisID, fishingHandle)

scene:WaitTimer(50)"
1660,Jade Forest - Fresco Scene - Master Script 02 - JSB,"
-- scene:WaitTimer(2)

soundBunny:PlaySoundKitStereo(33119, true)

scene:SetCamera(363,7,nil,nil) -- (camera, transition time, primary target, secondary target)


scene:WaitTimer(10) 


scene:SetCamera(364,7,nil,nil) 

scene:WaitTimer(5) 

scene:SetCamera(0,2,nil,nil) -- sets camera back to game-cam
"
1661,Jade Forest - Fresco Scene 01 - init - JSB,"
-- spawn sound bunny
local soundBunnyCreatureID = 28960
soundBunny = SpawnActor( soundBunnyCreatureID, 2390.18, -2106.64, 230.51, 37.1035, 1.0, false )
"
1662,Jade Forest - Fresco Scene 02 - Init - JSB,"
-- spawn sound bunny
local soundBunnyCreatureID = 28960
soundBunny = SpawnActor( soundBunnyCreatureID, 2390.18, -2106.64, 230.51, 37.1035, 1.0, false )
"
1665,[2] Cinematic Framework - Spawning,"actor = scene:SpawnActor( createData )
	return actor

end

--
-- SpawnInteractibleActor( creatureID, x, y, z, facing [default 0], scale [default 1] )
--   Spawn an Interactible actor
--
function SpawnInteractibleActor( creatureID, x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )
	local createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = true

	local actor = scene:SpawnActor( createData )
	return actor

end

-- SmoothPhaseSpawnInteractibleActor( creatureID, x, y, z, facing [default 0], scale [default 1] )
--   Spawn an Interactible actor
--
function SmoothPhaseSpawnInteractibleActor( creatureID, x, y, z, facing, scale, snapToGround )
	if not facing then
		facing = 0
	end

	if not scale then
		scale = 1
	end

	local spawnPos = Vector:New( x, y, z )
	local spawnTransform = Transform:New( spawnPos, facing )
	local createData = ActorCreateData:New( creatureID, spawnTransform, scale )
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = true
	createData.smoothPhase = true

	WaitForSmoothPhase(createData)

	local actor = scene:SpawnActor( createData )
	return actor
end

--
-- SpawnModelActor( modelFileName, pointsPathID, snapToGround [=true] )
--   Spawn an uninteractible actor
--
function SpawnModelActorsAtPoints( modelFileName, pointsPathID, snapToGround )

	if not scale then
		scale = 1
	end

	local createData = ActorCreateData:Default()
	createData.model = modelFileName
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	return actors

end

--
-- SpawnModelActorAtPoint( modelFileName, pointsPathID, snapToGround )
--   Spawn an uninteractible actor
--
function SpawnModelActorAtPoint( modelFileName, pointsPathID, snapToGround, scale )

	if not scale then
		scale = 1
	end

	local createData = ActorCreateData:Default()
	createData.model = modelFileName
	createData.scale = scale
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	return actors[1]

end

function SpawnActorAtPoint( creatureID, pointsPathID, snapToGround )

	local createData = ActorCreateData:Default()
	createData.creatureID =  creatureID
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	return actors[1]

end

function SpawnFadedActorAtPoint( creatureID, pointsPathID, snapToGround )

	local createData = ActorCreateData:Default()
	createData.creatureID =  creatureID
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	local actor = actors[1]
	FadeOut(actor, 0)
	return actor

end

function SpawnActorsAtPoints( creatureID, pointsPathID, snapToGround )

	local createData = ActorCreateData:Default()
	createData.creatureID =  creatureID
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	return actors

end

function SpawnFadedActorsAtPoints( creatureID, pointsPathID, snapToGround )

	local createData = ActorCreateData:Default()
	createData.creatureID =  creatureID
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	for i = 1, (#actors) do
		FadeOut(actors[i], 0)"
1666,Weather - Arcane Storm,"function Weather_Arcanestorm(ROID, isAura, aura, auraInstanceID, turnsRemaining)

	if (isObserved ~= true) then
		return
	end

	local pad = ROIDTOPET(ROID);

	local groundModel = fid(590396);

	local centerPosition = pad.actor:GetPosition()+Vector:New(0,0,1)
	
	local baseScale = 0.6;
	local bonusScalePerRoundRemaining = 0;
	local startingScale =  baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local snapToGround = false;

	local groundActor, killFunction =  CreatePadObject(
			groundModel, 
			startingScale,
			Transform:New(centerPosition,0), 
			snapToGround
			)

	local q = 1

	while ( aura.running and q < 1000 ) do 
		q = q + 1;

		local scale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining
		--if ( groundActor:GetScale() ~= scale ) then 
			groundActor:SetScale(scale);
		--end

		scene:WaitTimer(1);
	end

	killFunction();
end"
1667,Jade Forest - Twinspire Keep - Bomb - Plane Sounds,"--for i=0, 1000 do
--	planes[math.fmod(i, #planes)+1]:PlaySoundKit(33304, true)
--	Wait(.1)
--end

for i=1, #planes do
	planes[i]:PlaySoundKit(33304, false)
end"
1671,Magic - Clean-Up,"function Magic_Cleanup( ROID, isTurn, turn )

	RemoveObjectWave( 28318, fid(166572), 3268, ROID, isTurn, turn )

end"
1673,Mechanical - Launch,"function Mechanical_Launch( ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_AlternateVisualOnMultiHit"");

		return; 
	end

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local sourcePosition, targetPosition = pet.actor:GetPosition(), Vector:New( 0,0,0 );
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	--Play the Pre-Flight Visual
	pet.actor:PlaySpellCastVisual(28901);

	pet.actor:SetSnapToGround(false)
	pet.actor:WaitMoveToAbs( LocalToWorldCoords( Vector:New(1, 0, 4) ), 1 );
	
	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	scene:WaitTimer(0.2);
end


function Mechanical_LaunchAttack( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end

	local visuals = true;

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local targetROID = ResultToTargetROID(turn.effects[1].results[1])
	local target =  ROIDTOUNIT(targetROID);

	local missed = turn.effects[1].results[1].flags.miss;
	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )
	
	-- New Spline START
	local moveData = MoveData:Default(6)
	moveData.isGroundSnapping = false;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Tangent
	moveData.yawControl = MoveRotControl.Tangent


	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, pet.actor:GetPosition().z ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0.2) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.3*distToTarget, dir, 2) );
	moveData.points[3].speed = 7
	moveData.points[4].pos = LocalToWorldCoords ( Vector:New(0.5*distToTarget, dir*-1, 3) );
	moveData.points[4].speed = 7
	moveData.points[5].pos = player.home + LocalToWorldCoords ( Vector:New(0.0*distToTarget, dir*-0.5, 1) );
	moveData.points[5].speed = 7
	moveData.points[6].pos = player.home
	moveData.points[6].speed = 2

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL ) 

	local stretch = false;
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	local success = function()
		local effect = turn.effects[1];
		"
1674,[1] Mechanical - Launch,"DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID);
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end

	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

	-- New Spline END

	pet.actor:SetSnapToGround(true)
	scene:WaitTimer(0.2);

	-- Always remember to clean up after yourself
	DefaultTurnCleanUp(ROID);
end"
1675,MoP - Dread Wastes - Klaxxi'Vess Finale - audioBunny - ZTO,"WaitForTrigger(""phase ready"")
audioBunny:PlaySoundKitStereo(33271, true)

WaitForTrigger(""audioBunny - tempo change"")
audioBunny:PlaySoundKitStereo(33272, true)"
1676,Humanoid - Holy Charge,"function Humanoid_HolyCharge( ROID, isTurn, turn )
-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
 
	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn )

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.Melee, missed )
	
	local test, success, finish = Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint)

	-- When you pass the test the first time
	local success = function()
		local overrideFailure, overrideEffectSuccess, overrideEffectFailure = nil, nil, nil;
		DefaultTurnVisualHandler( ROID, turn, BodySlam_HugeKnockbackSuccess, overrideFailure, overrideEffectSuccess, overrideEffectFailure )

		-- Handle all effects
		for index=1,#turn.effects do 
			local effect = turn.effects[index];

			-- Default Visual 
			--DefaultEffectVisualHandler( ROID, effect, turnVisualID)
			DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		end 
	end
--[[
	-- New Spline START
	local moveData = MoveData:Default(3)
	moveData.isGroundSnapping = true;	
	moveData.posControl = MovePosControl.PointSpeed
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None
	moveData.yawControl = MoveRotControl.Tangent

	-- Convert world space into local space to land back on your home spot
	local sourcePosition, targetPosition = pet.actor:GetPosition() - Vector:New(0,0,pet.actor:GetPosition().z), attackPoint;
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local player = ROIDTOPLAYER(ROID);
	local homeDelta = player.home - pet.actor:GetPosition() + Vector:New(0,0,pet.actor:GetPosition().z);

	-- Scale the spline by the distance target for the outgoing part
	local distToTarget = sourcePosition:Dist( targetPosition );


	-- Builds a spline which moves in local space and ends in global space.

	-- Alternate between left and right attacks.
	local dir = 1 - math.random(0,1)*2;	
 
	moveData.points[1].pos = LocalToWorldCoords ( Vector:New(0.0*distToTarget, 0, 0 ) );
	moveData.points[1].speed = 7
	moveData.points[2].pos = LocalToWorldCoords ( Vector:New(1.0*distToTarget, 0, 0) );
	moveData.points[2].speed = 10
	moveData.points[3].pos = LocalToWorldCoords ( Vector:New(1.2*distToTarget, 0, 0) );
	moveData.points[3].speed = 7

	local stretch = false;
	local splineDuration = 2;

	pet.actor:ClearFacing();

	local visKit = pet.actor:PlaySpellStateVisual( PET_BATTLES_SPRINT_TRAIL )
	Spline_Attack2( test, success, finish, moveData, stretch, pet.actor, attackPoint )

	pet.actor:ClearSpellVisual( visKit)

--]]

	pet.actor:WaitMoveToAbs(attackPoint, attackPoint:Dist( pet.actor:GetPosition() ) / pet.moveSpeed / 2 );
	success();

	DefaultTurnCleanUp(ROID);
end

function BodySlam_HugeKnockbackSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactHugeKnockback, attackerROID, 5, 0.5 ); 	 
	"
1677,[1] Humanoid - Holy Charge,"Dispatcher_AddCommandToQueue(attackerROID, Dispatcher_PerformImpactHugeKnockback, victimROID, 0.5, 0.5 ); 	 
end"
1678,Jade Forest - Anduin Hozen Scene - Init - JSB,"

-- spawn anduin
local anduinCreatureID = 59215
anduin = SpawnActor( anduinCreatureID, -245.717, -3148.45, 39.4766, 15, 1.0, true )

-- spawn hozen01
local hozenCreatureID = 54869
hozen01 = SpawnActor( hozenCreatureID, -253.998, -3150.6, 37.4669, 20, 1.0, true )

-- spawn hozen02
local hozenCreatureID = 54869
hozen02 = SpawnActor( hozenCreatureID, -179.579, -3158.57, 47.7753, 183.905, 1.0, true )

-- spawn hozen03
local hozenCreatureID = 54869
hozen03 = SpawnActor( hozenCreatureID, -92.1912, -3051.39, 22.1402, 219.763, 1.0, false )

-- spawn hozen04
local hozenCreatureID = 54869
hozen04 = SpawnActor( hozenCreatureID, -89.7286, -3057.02, 22.3516, 215.81, 1.0, true )

-- spawn ren
local renCreatureID = 59222
ren = SpawnActor( renCreatureID, -641.282, -2377.57, 25.0779, 79.3169, 1.0, false )

-- spawn lina
local linaCreatureID = 56487
lina = SpawnActor( linaCreatureID, -641.282, -2377.57, 25.0779, 79.3169, 1.0, true )

FadeOut( ren, 0 )
FadeOut( lina, 0 )"
1679,Jade Forest - Anduin Hozen Scene - Master - JSB,"
local sceneOrigin = scene:GetPosition()
scene:SetCamera(0, 0.0, nil, nil)

Wait(1.0)

scene:SetCamera(497, 5, nil, nil)

Wait(3.0)

SetCameraFollowPath( 368, 4, 4424, 4425, 7 )

Wait(4.0)

SendTrigger(""anduinMove"")

SetCameraFollowPath( 368, 5, 4426, 4427, 10 ) -- was 9

Wait(8.7)

SetCameraFollowPath( 368, 2, 4428, 4429, 18 )

Wait(15)

scene:SetCamera(498, 13, nil, nil)

Wait(9) -- was 11!!!!

SetCameraFollowPath( 368, 6, 4430, 4432, 25 )

-- Wait( 28 )

Wait( 5 )

scene:SetCamera(499, 0, nil, nil)

scene:SetCamera(500, 14, nil, nil)

Wait( 18 )

scene:ApplyScreenEffect(827) 

Wait( 3.5 )

scene:EndScene()"
1682,Jade Forest - Anduin Hozen Scene - Anduin - JSB,"
anduin:PlaySoundKitStereo(33235, true)

WaitForTrigger(""anduinMove"")

Wait( 3.5 )

RunToLocation( anduin, 6, -210.503, -3144.82, 40.818, 66 )

RunToLocation( anduin, 6, -188.781, -3109.88, 37.9048, 20 )

RunToLocation( anduin, 6, -171.651, -3094.04, 35.8132, 20 )


anduin:PlayLoopingAnimKit(3279)

Wait( 1 )

anduin:SetFacing(300)

Wait( 1 )



SendTrigger(""anduinReverse"")

anduin:SetFacingToAbs(Vector:New(-170.878, -3122.44, 47.4201))
anduin:SetHeadFacingToAbs(Vector:New(-170.878, -3122.44, 47.4201))

RunToLocation( anduin, 1.5, -173.717, -3087.47, 35.5417, 265 )

anduin:BroadcastTextStereo(BroadcastType.Say, 58171) 
anduin:PlaySoundKitStereo(33234, true)

Wait( 2 )

anduin:ClearFacing() 
anduin:ClearHeadFacing() 

local auraHandle = anduin:PlaySpellStateVisual(28927) 

Wait( 1.5 ) -- was 2.5

anduin:StopAnimKit(3279)

SendTrigger(""anduinFear"")

Wait( 0.5 )
anduin:ClearSpellVisual( auraHandle) 

Wait( 1 )

RunToLocation( anduin, 6, -161.791, -3098.43, 35.6808, 306.908 )
RunToLocation( anduin, 6, -137.577, -3134.62, 41.4213, 303.533 )
RunToLocation( anduin, 6, -115.361, -3147.88, 51.9482, 2.7081 )
-- RunToLocation( anduin, 6, -83.6238, -3145.9, 74.2981, 2.03312 )
-- RunToLocation( anduin, 6, -74.2657, -3146.51, 78.609, 356.633 )

-- RunToLocation( anduin, 350, -74.2657, -3146.51, 78.609, 356.633 )
RunToLocation( anduin, 350, -56.2704, -3147.95, 85.0201, 344.933 )
RunToLocation( anduin, 6, -53.4848, -3148.64, 85.8623, 355.958 )
RunToLocation( anduin, 6, -51.2057, -3149.22, 86.1551, 345.833 )

anduin:SetFacingToAbs(Vector:New(-72.544, -3146.34, 79.1502))
anduin:SetHeadFacingToAbs(Vector:New(-72.544, -3146.34, 79.1502))

anduin:PlayOneShotFullBodyAnim(Animations.SpellCastOmni)
local auraHandle = anduin:PlaySpellStateVisual(784) 

Wait( 1 )

anduin:PlayLoopingAnimKit(644)

RunToLocation( anduin, 1.5, -42.9828, -3151.19, 86.1625, 346.508 )
anduin:SetFacing(175)"
1683,Jade Forest - Anduin Hozen Scene - Hozen01 - JSB,"
WaitForTrigger(""anduinMove"")

Wait( 4.2 )

RunToLocation( hozen01, 6, -242.734, -3148.13, 39.854, 5.7502 )

RunToLocation( hozen01, 6, -213.795, -3147.11, 40.9512, 52.3252 )

RunToLocation( hozen01, 6, -190.357, -3110.63, 37.9851, 40.6252 )

RunToLocation( hozen01, 6, -176.989, -3098.74, 36.4288, 41.7502 )

WaitForTrigger(""anduinReverse"")

Wait( 0.4 )
hozen01:PlayLoopingAnimKit(3278)

RunToLocation( hozen01, 1, -176.697, -3091.71, 35.944, 58.5716 )

WaitForTrigger(""anduinFear"")

-- FEARED
local auraHandle = hozen01:PlaySpellStateVisual(18695) 

hozen01:StopAnimKit(3278)
RunToLocation( hozen01, 6, -185.563, -3095.64, 36.8167, 207.042 )
RunToLocation( hozen01, 6, -183.56, -3111.4, 38.0987, 277.242 )
RunToLocation( hozen01, 6, -167.394, -3105.37, 36.5189, 32.2168 )

hozen01:ClearSpellVisual( auraHandle) 

hozen01:ClearSpellVisual( auraHandle) 

-- final chase

RunToLocation( hozen01, 6, -155.711, -3107.69, 36.7779, 293.667 )
RunToLocation( hozen01, 6, -142.828, -3136.58, 41.2927, 274.992 )
-- RunToLocation( hozen01, 6, -111.298, -3150.34, 54.7024, 2.06707 )
Wait( 2 )
-- RunToLocation( hozen01, 320, -111.298, -3150.34, 54.7024, 2.06707 )
RunToLocation( hozen01, 120, -83.8105, -3148.47, 74.2944, 4.99207 )
RunToLocation( hozen01, 6, -60.3566, -3148.4, 83.777, 353.517 )
RunToLocation( hozen01, 6, -54.3901, -3152.9, 86.2808, 328.959 )


RunToLocation( hozen01, 1.5, -50.0892, -3156.47, 86.5471, 16.8837 )


"
1684,Jade Forest - Anduin Hozen Scene - Hozen02 - JSB,"
WaitForTrigger(""anduinMove"")

Wait( 6 )

RunToLocation( hozen02, 6, -195.952, -3156.78, 44.9698, 140.526 )

RunToLocation( hozen02, 6, -203.26, -3142.3, 40.8155, 82.0255 )

RunToLocation( hozen02, 6, -193.752, -3122.64, 38.7523, 53.4505 )

RunToLocation( hozen02, 6, -172.449, -3100.86, 36.3092, 91.7005 )


WaitForTrigger(""anduinReverse"")

hozen02:PlayLoopingAnimKit(3278)

RunToLocation( hozen02, 1, -172.724, -3092.99, 35.8186, 100.647 )


WaitForTrigger(""anduinFear"")

-- FEARED
local auraHandle = hozen02:PlaySpellStateVisual(18695) 

hozen02:StopAnimKit(3278)
RunToLocation( hozen02, 6, -183.318, -3088.97, 36.119, 158.858 )
RunToLocation( hozen02, 6, -175.554, -3076.8, 34.5776, 57.8335 )
RunToLocation( hozen02, 6, -160.916, -3087.46, 34.7965, 308.484 )

hozen02:ClearSpellVisual( auraHandle) 

-- final chase

RunToLocation( hozen02, 6, -139.669, -3132.44, 40.9344, 295.434 )
RunToLocation( hozen02, 6, -117.207, -3146.39, 50.6429, 359.108 )
-- RunToLocation( hozen02, 6, -84.5466, -3146.63, 73.7971, 2.93303 )

-- RunToLocation( hozen02, 320, -84.5466, -3146.63, 73.7971, 2.93303 )
RunToLocation( hozen02, 320, -67.2743, -3143.96, 80.6326, 349.433 )
RunToLocation( hozen02, 6, -52.8683, -3146.59, 85.7767, 340.017 )

RunToLocation( hozen02, 1.5, -45.503, -3145.89, 86.1624, 327.609 )
"
1685,Jade Forest - Anduin Hozen Scene - Hozen03 - JSB,"
WaitForTrigger(""anduinMove"")

Wait( 6 )

RunToLocation( hozen03, 6, -92.1912, -3051.39, 22.1402, 219.763 )

RunToLocation( hozen03, 6, -145.663, -3087, 34.5923, 208.738 )

RunToLocation( hozen03, 6, -164.626, -3092.09, 35.3141, 183.538 )

WaitForTrigger(""anduinReverse"")

Wait( 1 )
hozen03:PlayLoopingAnimKit(3278)

RunToLocation( hozen03, 1, -169.341, -3090.98, 35.5196, 136.422 )


WaitForTrigger(""anduinFear"")

-- FEARED
local auraHandle = hozen03:PlaySpellStateVisual(18695) 

hozen03:StopAnimKit(3278)
RunToLocation( hozen03, 6, -163.411, -3072.84, 34.1926, 69.7585 )
RunToLocation( hozen03, 6, -153.794, -3087.47, 34.8502, 303.534 )
RunToLocation( hozen03, 6, -140.23, -3101.63, 37.1628, 314.334 )

hozen03:ClearSpellVisual( auraHandle) 

-- final chase

RunToLocation( hozen03, 6, -146.19, -3114.18, 38.2489, 301.059 )
RunToLocation( hozen03, 6, -132.018, -3138.49, 43.1698, 335.934 )
-- RunToLocation( hozen03, 6, -112.684, -3148.17, 53.5524, 2.7088 )

-- RunToLocation( hozen03, 320, -112.684, -3148.17, 53.5524, 2.7088 )
RunToLocation( hozen03, 320, -83.6549, -3145.66, 74.2837, 356.859 )
RunToLocation( hozen03, 6, -56.684, -3147.92, 84.921, 341.648 )

RunToLocation( hozen03, 2.5, -51.4566, -3148.46, 85.9726, 341.648 )

hozen03:SetFacingToAbs(Vector:New(-25.283, -3162.58, 88.87))

hozen03:PlayOneShotAnimKit(3291)
hozen03:FollowPath( 4442, 4.5 )"
1686,Jade Forest - Anduin Hozen Scene - Hozen04 - JSB,"
WaitForTrigger(""anduinMove"")

Wait( 5.5 )

RunToLocation( hozen04, 6, -111.353, -3075.36, 25.9463, 210.41 )

RunToLocation( hozen04, 6, -137.821, -3093.88, 35.5024, 195.785 )

RunToLocation( hozen04, 6, -167.677, -3099, 35.891, 120.635 )

WaitForTrigger(""anduinReverse"")

RunToLocation( hozen04, 1, -169.213, -3097.63, 35.8788, 128.96 )


hozen04:PlaySoundKitStereo(26823, true)
hozen04:PlayOneShotFullBodyAnim(Animations.Death)

Wait( 1.7 )

hozen04:PlayLoopingFullBodyAnim(Animations.Dead)

"
1687,Jade Forest - Anduin Hozen Scene - Caster - JSB,"WaitForTrigger(""anduinReverse"")

Wait( 0.8 )

CastSpellAtActor( anduin, anduin, 132399 )

Wait( 0.5 )

CastSpellAtActor( hozen04, hozen04, 132400 )"
1688,Dustwallow Marsh - Theramore Explosion Scene - Music Manager- JSB,"
local soundHandle = mist:PlayMusic(33415)
"
1689,Jade Forest - Garroshar Point - Strafing Runs - barrel 1 - ZTO,"TargetImpact(1)
"
1690,Jade Forest - Garroshar Point - Strafing Runs - barrel 2 - ZTO,"TargetImpact(2)
"
1691,Jade Forest - Garroshar Point - Strafing Runs - barrel 3 - ZTO,"TargetImpact(3)
"
1692,Jade Forest - Garroshar Point - Strafing Runs - barrel 4 - ZTO,"TargetImpact(4)
"
1693,[1] Darren's Test Scene Script 1,"0))
	scene:WaitTimer(0.5)
end
]]
"
1694,Lorewalker Story - S2: Saurok - Scene 5 - saurok_pillar01 - ZTO ,"PlayLoopingSplitBodyAnim( saurok_pillar01, Animations.ChannelCastOmni )

--Wait For Scene 8
WaitForTrigger(""Scene8"")
FadeIn( saurok_pillar01, 2 )
local saurokSpellAura = saurok_pillar01:PlaySpellStateVisual(25547)

--WAit for Scene 9
WaitForTrigger(""saurok_pillar01 - kill"")
saurok_pillar01:ClearSpellVisual( saurokSpellAura)
Wait(1)
Kill(saurok_pillar01)

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_pillar01, 1)
saurok_pillar01: Despawn()"
1695,Lorewalker Story - S2: Saurok - Scene 5 - saurok_pillar02 - ZTO ,"PlayLoopingSplitBodyAnim( saurok_pillar02, Animations.StealthStand )

--Wait For Scene 8
WaitForTrigger(""Scene8"")
FadeIn( saurok_pillar02, 2 )

--WAit for Scene 9
WaitForTrigger(""saurok_pillar02 - kill"")
Wait(1)
Kill(saurok_pillar02)

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(saurok_pillar02, 1)
saurok_pillar01: Despawn()"
1696,Lorewalker Story - S2: Saurok - moguVictim - ZTO,"PlayLoopingSplitBodyAnim( moguVictim, Animations.EmoteLaugh )

WaitForTrigger(""Scene6"")
FadeIn( moguVictim, 2 )

WaitForTrigger(""Scene7"")
StopLoopingSplitBodyAnim( moguVictim, Animations.EmoteLaugh )
PlayLoopingSplitBodyAnim( moguVictim, Animations.EmoteNo )

WaitForTrigger(""moguVictim - Kill"")
Kill( moguVictim )

-- Wait until dismissed
WaitForTrigger( ""Scene10"" )
FadeOut(moguVictim, 1)
moguVictim: Despawn()"
1697,Jade Forest - Anduin Hozen Scene - Ren - JSB,"



WaitForTrigger(""anduinFear"")

RunToLocation( ren, 1000, -38.0278, -3155.77, 86.1624, 102.717 )

FadeIn( ren, 0 )

ren:PlayLoopingAnimKit(3287)

Wait( 16 )

ren:StopAnimKit(3287)

ren:PlayOneShotAnimKit(3288)

Wait( 1 )

ren:SetFacing(165)

Wait( 3.5 )

RunToLocation( ren, 6, -39.1146, -3150.75, 86.1622, 102.717 )

ren:PlayOneShotAnimKit(3289)

ren:FollowPath( 4441, 1.5 )

Wait( 1.5 )

ren:PlayLoopingAnimKit(3279)"
1698,VFW: (DLA) - Lotus Farm - Golden Dream - Camera,"local genericFOV90 = 368

SetCameraFollowPath( genericFOV90, 0, 4450, 4444, 7)
Wait(7)
SetCameraFollowPath( genericFOV90, 0, 4447, 4448, 10)
Wait(10)
SetCameraFollowPath( genericFOV90, 0, 4451, 4452, 30)
Wait(30)
scene:ApplyScreenEffect(938)
scene:WaitTimer(3)
scene:ClearScreenEffect(938)
scene:EndScene()"
1699,Jade Forest - Anduin Hozen Scene - Lina - JSB,"
WaitForTrigger(""anduinFear"")

RunToLocation( lina, 1000, -42.7514, -3155.94, 86.1634, 69.6862 )

FadeIn( lina, 0 )

lina:PlayLoopingAnimKit(3287)

Wait( 15 )

lina:StopAnimKit(3287)

lina:PlayOneShotAnimKit(3288)

Wait( 1.2 )

lina:SetFacing(147)

Wait( 4 )

-- RunToLocation( lina, 3, -48.5937, -3154.32, 86.1625, 152.442 )
-- lina:PlayLoopingAnimKit(644)

lina:PlayLoopingAnimKit(3279)"
1706,PetBattle - Dispatcher - Thread Bot 5,"local BOT_ID = 5
ThreadBotMain(BOT_ID)"
1707,PetBattle - Dispatcher - Thread Bot 6,"local BOT_ID = 6
ThreadBotMain(BOT_ID)"
1708,PetBattle - Dispatcher - Thread Bot 7,"local BOT_ID = 7
ThreadBotMain(BOT_ID)"
1709,PetBattle - Dispatcher - Thread Bot 8,"local BOT_ID = 8
ThreadBotMain(BOT_ID)"
1751,[1] Brazie's PetBattle - Constants,"WALL_LOCATIONS = {
	[PetBattlePlayerID.Weather] = {
		[1] = Transform:New(Vector:New( 0, 0, 0), 0);
	};
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1.5,  0, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New( -1.5,  0, 0) , 180 );
	};
}"
1752,Lorewalker Story - S5: Mogu - pandarenSlavesInChains - ZTO,"WaitForTrigger(""smoothPhaseComplete"")

local chainsChannel = { }
local chainsAura = { }

--[[
for i=1, #pandarenSlavesChains do
	pandarenSlavesChains[i]:PlaySpellStateVisual(chainsAuraID) 
end
]]--
WaitForTrigger(""Scene2b"")
for i=1, #pandarenSlavesChains do
	if i<#pandarenSlavesChains then
		pandarenSlavesChains[i]:PlaySpellStateVisual(chainsAuraID) 
		ChannelSpellVisualAtActor( pandarenSlavesChains[i], chainsAuraID, pandarenSlavesChains[(i+1)] )
		FadeIn(pandarenSlavesChains[i], 2)
	else
		FadeIn(pandarenSlavesChains[i], 2)
	end
end

for i=1, #pandarenSlavesChains do
	pandarenSlavesChains[i]:FollowRelativePathAtSpeed(4454, 0.5)
end

for i=1, #pandarenSlavesChains do
	pandarenSlavesChains[i]:WaitMovementComplete()
	pandarenSlavesChains[i]:Despawn()
	--pandarenSlavesChains[i]:ClearChannelSpellVisual(chains[i])
	--FadeOut(pandarenSlavesChains[i], 2)
end
"
1753,[1] Lorewalker Story - S5: Mogu - Lorewalker Cho - ZTO,"Animations.EmoteBow )
Wait(2)
lorewalker: Despawn()
scene:EndScene()"
1754,[1] Lorewalker Story - S13: Ballad of Liu Lang - MASTER - Lorewalker Cho - ZTO,"Animations.EmoteLaugh )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Scene7"" ) --Cue return to normalsy
--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.221, 93.5645)
Wait(4)
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )


--Final
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
1755,[1] Lorewalker Story - S4: Jinyu - MASTER - Lorewalker Cho - ZTO,"--lorewalker:WaitSoundKitComplete(soundKit) -- Fix once sound kit is done then propagate it to other sound clips
lorewalker:PlayOneShotAnimKit(3229)
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.221, 93.5645)
lorewalker:StopAnimKit(3229)
--Wait(11)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(6)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Final
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
1756,[1] Brazie's PetBattle - Post Turn - Clean Up 2.0,"local unit = ROIDTOUNIT ( roid )

	if ( not unit ) then
		warning(""Invalid ROID provided to DoHomeWait: ""..roid.."" (probably a missing object)"" );
		return;
	end

	unit.actor:WaitMovementComplete()
end

function DoFacingCleanUp( roid )
	local team = ROIDTOPLAYER ( roid )
	local unit = ROIDTOUNIT ( roid )

	if ( not unit ) then
		warning(""Invalid ROID provided to DoFacingCleanUp: ""..roid.."" (probably a missing object)"" );
		return;
	end

	if ( team.activePet == unit.slot or unit.clone ) then 
		local opponent = GetActivePetByIndex( EnemyOf( unit.playerID ) ) 

		DefaultFacing( roid, PETTOROID(opponent) );

	elseif ( unit.isPet ) then
		local ally = GetActivePetByIndex( unit.playerID );

		DefaultFacing( roid, PETTOROID(ally) );
	end
end"
1759,Krasaran Wilds - Goblin Escape Pod - Init - ZTO,"-------------------
-- Configuration --
-------------------

scene:SetRelativeCoords(true)


----------
-- Init --
----------

--Escape Pod
escapepodModelID = ""WORLD\\GENERIC\\GOBLIN\\PASSIVEDOODADS\\LOSTISLES\\Goblin_EscapePod.M2""
escapePod = SpawnModelActor( escapepodModelID, 0, 0, 0, 0, 1, false)
FadeOut(escapePod, 0)

--thruster
bunnyCreatureID = 62026
thrusterVisual = SpawnActor( bunnyCreatureID, 0, 0, 0, 0, 1, false)
FadeOut(thrusterVisual, 0)

thrusterVisual: SetRelativeTo( escapePod )

--SpellAuraVisuals
burningAuraVisualID = 27878

--Spells
smallExplosion = 88309 
bigExplosion = 46419
crashExplosion = 130533

--------------
-- Movement --
--------------

local crashData = MoveData:Default()
crashData.pathID = 4668
crashData.speed = 19
crashData.posControl = MovePosControl.ConstantSpeed
crashData.yawControl = MoveRotControl.Tangent
crashData.pitchControl = MoveRotControl.Tangent
crashData.rollControl = MoveRotControl.Angle
crashData.isRelative = false -- true
crashData.teleportToFirstPoint = true -- false
crashData.isGroundSnapping = false

-------------------
-- OnScene Start --
-------------------

escapePod:Move(crashData)
FadeIn( escapePod, 0 )
FadeIn( thrusterVisual, 0 )
Wait(1)
local burningAura1 = thrusterVisual:PlaySpellStateVisual(burningAuraVisualID) 
local burningAura2 = escapePod:PlaySpellStateVisual(burningAuraVisualID) 

escapePod:WaitMovementComplete()
CastSpellAtActor(escapePod, escapePod, crashExplosion)
CastSpellAtActor(escapePod, escapePod, bigExplosion)
-- Camera Shake to signal arrival of empress
local shakeOrigin01 = Vector:New(0, 0, 0)
shakeX = scene:AddCameraEffect( 41, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 42, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 43, shakeOrigin01, nil, 1 )
thrusterVisual:Despawn()
Wait(5)
thrusterVisual:ClearSpellVisual( burningAura1)
FadeOut(thrusterVisual, 2)
escapePod:ClearSpellVisual( burningAura2)
FadeOut(escapePod, 2)
Wait(5)
scene:EndScene()"
1760,Krasarang - Domination Point - Cannon INIT - ZTO,"function Explode(actor)
	explosionID = math.random(0, 1)
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, beachExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisualID) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, beachExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisualID) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

function Fire(actor, target)
--Constants
	local startSpeed = 25
	local waitTime = 7
	local radius = 1 
	local missileSpeed = 30

	targetPos = { target:GetPosition(); } 
	--targetLoc = { Vector:New(targetPos); }
	--CastSpellAtActor(actor, actor, smallExplosion)
	actor:PlaySpellCastVisualAtPoints(missileVisualID, missileSpeed, false, targetPos) 
	Wait(waitTime/startSpeed)
	--CastSpellAtActor(target, target, beachExplosion) --Testing
	--Explode( target )
end

-----------------------
--Inits and constants--
-----------------------

--SpellAuraVisuals
burningAuraVisualID = 27878
pilotAuraVisualID = 28072

--Spells
smallExplosion = 88309 
bigExplosion = 46419
crashExplosion = 130533
beachExplosion = 133571

--Spell Visuals
missileVisualID = 29020 

--Creature IDs
bunnyCreatureID = 62026

cannonArray01 = SpawnActorsAtPoints( bunnyCreatureID, 4673, false )
cannonArray02 = SpawnActorsAtPoints( bunnyCreatureID, 4674, false )
cannonArray03 = SpawnActorsAtPoints( bunnyCreatureID, 4675, false )

targetArray01 = SpawnActorsAtPoints( bunnyCreatureID, 4676, false )
targetArray02 = SpawnActorsAtPoints( bunnyCreatureID, 4677, false )
targetArray03 = SpawnActorsAtPoints( bunnyCreatureID, 4678, false )
"
1761,Krasarang - Domination Point - Cannon Fire1 - ZTO,"while true do
	local rand = math.random(#cannonArray01)
	Fire(cannonArray01[rand], targetArray01[rand])
	Wait(8)
end"
1762,Krasarang - Domination Point - Cannon Fire2 - ZTO,"while true do
	local rand = math.random(#cannonArray02)
	Fire(cannonArray02[rand], targetArray02[rand])
	Wait(8)
end"
1763,Krasarang - Domination Point - Cannon Fire3 - ZTO,"while true do
	local rand = math.random(#cannonArray03)
	Fire(cannonArray03[rand], targetArray03[rand])
	Wait(8)
end"
1766,Krasarang Wilds 5.1 - Demolishers - Init - ZTO,"--Constants
local spawnPoint = 4703
local spline = 4704
local startSpeed = 25
local waitTime = 5
local radius = 1
--local targetDestA = {Vector:New(-144.386, -1465.83, 83.3739)}
--local targetDestB = {Vector:New(-144.793, -1451.82, 83.3739)}
--local targetDestC = {Vector:New(-144.989, -1438.81, 83.3739)}
--local targetDestD = {Vector:New(-143.881, -1423.36, 83.3739)}
local missileSpeed = 8

--Creature IDs
demolisherCreatureID = 67395
gyroExtractorCreatureID = 67493
mekkatorqueCreatureID = 67387
bunnyCreatureID = 62026

--Spell Visual State IDs
local mekkatorqueAuraID = 29108

--Beams
local uploadBeamChannelID = 29095

--Spawning
demolisher1 = SmoothPhaseSpawnInteractibleActor(demolisherCreatureID, -2160.010498, 2413.689209, 6.751268, 165, 1, true)
demolisher2 = SmoothPhaseSpawnInteractibleActor(demolisherCreatureID, -2164.298584, 2401.878418, 6.753296, 179, 1, true)
local demolisher1Loc = {Vector:New(-2160.010498, 2413.689209, 6.751268)}
local demolisher2Loc = {Vector:New(-2164.298584, 2401.878418, 6.753296)}

scout = SpawnActor( bunnyCreatureID, -2234.838623, 2402.222168, 1.650363, 344, 1, true)
siegeomatic = SpawnActor(gyroExtractorCreatureID, -2234.838623, 2402.222168, 31.650363, 344, 1, false)
mekkatorque = SpawnActor(mekkatorqueCreatureID, -2234.838623, 2402.222168, 34.4, 344, 1, false)
FadeOut( siegeomatic, 0 )
FadeOut( mekkatorque, 0 )

planes = SpawnFadedActorsAtPoints( 65843, spawnPoint, false)
SendTrigger(""smoothPhaseComplete"")


--Cue Action
FadeIn( siegeomatic, 2 )
FadeIn( mekkatorque, 2 )
siegeomatic:PlaySpellStateVisual(mekkatorqueAuraID)
mekkatorque:SetRelativeTo(siegeomatic)
--mekkatorque:BroadcastText(BroadcastType.Say, 69020)

siegeomatic:MoveToRel((Vector:New(0, 0, -27)), 5)
siegeomatic:WaitMovementComplete()
local uploadBeam = ChannelSpellVisualAtActor( siegeomatic, uploadBeamChannelID, scout )
local mekkatorqueLines = { 68991, 68992, 68993 }
local mekkatorqueLinesDesc = mekkatorqueLines[math.random(#mekkatorqueLines)]
mekkatorque:BroadcastText(BroadcastType.Say, mekkatorqueLinesDesc)
Wait(2)
ClearChannelSpellVisual( uploadBeam )
siegeomatic:FollowPathAtSpeed( 4746, 10, true)
siegeomatic:WaitMovementComplete()
siegeomatic:SetFacing(169.841)

--Send in Planes
FadeIn(planes[1], 1)
planes[1]:PlayLoopingFullBodyAnim(Animations.Fly)
planes[1]:PlaySoundKit(33304, false)

for i=2, #planes do
	FadeIn(planes[i], 1)
	planes[i]:PlayLoopingFullBodyAnim(Animations.Fly)
	planes[i]:PlaySoundKit(33304, false)
	planes[i]:SetRelativeTo(planes[1])
end

planes[1]:FollowPathAtSpeed(spline, startSpeed, true)
	
Wait(1)
--planes[1]:BroadcastTextStereo(BroadcastType.Say, 67693)
 
Wait(waitTime)
for i=#planes, 1, -1 do
	if i<=2 then
		planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, demolisher1Loc)
	else
		planes[i]:PlaySpellCastVisualAtPoints(27822, missileSpeed, false, demolisher2Loc)
	end
	--local missilePos = targetDest + randPos
	Wait(waitTime/startSpeed)
	--Broadcast(""sending missile ""..i)
end
siegeomatic:MoveToRel((Vector:New(0, 0, 27)), 30)

SendTrigger(""demolisher1 - destroy"")
Wait(1)
SendTrigger(""demolisher2 - destroy"")

planes[1]:WaitMovementComplete()
scene:EndScene()"
1767,Krasarang Wilds 5.1 - Demolishers - demolisher1 - ZTO,"WaitForTrigger(""demolisher1 - destroy"")
PlayOneShotSplitBodyAnim(demolisher1, Animations.Death)
Wait(5.1)
demolisher1:PlayLoopingFullBodyAnim(Animations.Dead)"
1768,Krasarang Wilds 5.1 - Demolishers - demolisher2 - ZTO,"WaitForTrigger(""demolisher2 - destroy"")
PlayOneShotSplitBodyAnim(demolisher2, Animations.Death)
Wait(5.1)
demolisher2:PlayLoopingFullBodyAnim(Animations.Dead)"
1769,Krasarang Wilds 5.1 - Wolves Init - ZTO,"function WolfExtraction( gyroID, wolfID, pathID )
	local startSpeed = math.random( 19, 40 )
	FadeIn(gyroID, 2)
	gyroID:MoveToRel((Vector:New(0, 0, -48.75)), 5)
	gyroID:WaitMovementComplete()
	CastSpellAtActor( wolfID, wolfID, 355 ) --Taunt Self
	wolfID:SetRelativeTo(gyroID)
	gyroID:MoveToRel((Vector:New(0, 0, 2)), 1)
	--Wait(1)
	PlayLoopingSplitBodyAnim( wolfID, Animations.Drowned )
	gyroID:WaitMovementComplete()
	gyroID:FollowPathAtSpeed(pathID, startSpeed, true)
	gyroID:WaitMovementComplete()
	FadeOut(gyroID, 2)
	FadeOut(wolfID, 2)
end

--Creature IDs
gyroExtractorCreatureID = 67493
wolfCreatureID = 67344
mekkatorqueCreatureID = 67387
bunnyCreatureID = 62026

--Spell Visual State IDs
local mekkatorqueAuraID = 29108

--Beams
local uploadBeamChannelID = 29095

wolf1 = SmoothPhaseSpawnActor( wolfCreatureID, -1990.022583, 2456.626709, 5.564555, 263, 1, true)
wolf2 = SmoothPhaseSpawnActor( wolfCreatureID, -1979.232666, 2458.015625, 5.564553, 33, 1, true)
wolf3 = SmoothPhaseSpawnActor( wolfCreatureID, -1983.520874, 2447.184082, 5.565501, 158, 1, true)
wolf4 = SmoothPhaseSpawnActor( wolfCreatureID, -1985.206665, 2458.109375, 5.564554, 254, 1, true)
wolf5 = SmoothPhaseSpawnActor( wolfCreatureID, -1982.078125, 2451.854248, 5.564554, 347, 1, true)

gyro1 = SpawnActor( gyroExtractorCreatureID, -1990.022583, 2456.626709, 55.564555, 263, 1, false)
gyro2 = SpawnActor( gyroExtractorCreatureID, -1979.232666, 2458.015625, 55.564553, 33, 1, false)
gyro3 = SpawnActor( gyroExtractorCreatureID, -1983.520874, 2447.184082, 55.565501, 158, 1, false)
gyro4 = SpawnActor( gyroExtractorCreatureID, -1985.206665, 2458.109375, 55.564554, 254, 1, false)
gyro5 = SpawnActor( gyroExtractorCreatureID, -1982.078125, 2451.854248, 55.564554, 347, 1, false)

scout = SpawnActor( bunnyCreatureID, -2013.744751, 2441.112793, 4.654357, 20, 1, true)

siegeomatic = SpawnActor(gyroExtractorCreatureID, -2013.744751, 2441.112793, 34.654357, 20, 1, false)
mekkatorque = SpawnActor(mekkatorqueCreatureID, -2013.744751, 2441.112793, 37.4, 20, 1, false)
FadeOut( siegeomatic, 0 )
FadeOut( mekkatorque, 0 )

FadeOut(gyro1, 0)
FadeOut(gyro2, 0)
FadeOut(gyro3, 0)
FadeOut(gyro4, 0)
FadeOut(gyro5, 0)

Wait(2)
SendTrigger( ""smooth phase complete"" )
--scene:SetFadeRegion(100, true)

--Cue Action
FadeIn( siegeomatic, 2 )
FadeIn( mekkatorque, 2 )
siegeomatic:PlaySpellStateVisual(mekkatorqueAuraID)
mekkatorque:SetRelativeTo(siegeomatic)

siegeomatic:MoveToRel((Vector:New(0, 0, -28)), 5)
siegeomatic:WaitMovementComplete()
local uploadBeam = ChannelSpellVisualAtActor( siegeomatic, uploadBeamChannelID, scout )
local mekkatorqueLines = { 68994, 68995, 68996 }
local mekkatorqueLinesDesc = mekkatorqueLines[math.random(#mekkatorqueLines)]
mekkatorque:BroadcastText(BroadcastType.Say, mekkatorqueLinesDesc)
Wait(2)
ClearChannelSpellVisual( uploadBeam )
siegeomatic:FollowPathAtSpeed( 4747, 10, true)
siegeomatic:WaitMovementComplete()
siegeomatic:SetFacing(227.206)

SendTrigger( ""wolf1"" )
Wait(0.75)
SendTrigger( ""wolf2"" )
Wait(0.25)
SendTrigger( ""wolf3"" )
Wait(1)
SendTrigger( ""wolf4"" )
Wait(0.5)
SendTrigger( ""wolf5"" )

siegeomatic:MoveToRel((Vector:New(0, 0, 50)), 5)

Wait(20)
scene:EndScene()
"
1770,Krasarang Wilds 5.1 - Wolves - gyro 1 - ZTO,"WaitForTrigger( ""wolf1"" )

WolfExtraction( gyro1, wolf1, 4707 )"
1771,Krasarang Wilds 5.1 - Wolves - gyro 2 - ZTO,"WaitForTrigger( ""wolf2"" )

WolfExtraction( gyro2, wolf2, 4708 )"
1772,Krasarang Wilds 5.1 - Wolves - gyro 3 - ZTO,"WaitForTrigger( ""wolf3"" )

WolfExtraction( gyro3, wolf3, 4709 )"
1773,Krasarang Wilds 5.1 - Wolves - gyro 4 - ZTO,"WaitForTrigger( ""wolf4"" )

WolfExtraction( gyro4, wolf4, 4710 )"
1774,Krasarang Wilds 5.1 - Wolves - gyro 5 - ZTO,"WaitForTrigger( ""wolf5"" )

WolfExtraction( gyro5, wolf5, 4711 )"
1775,Krasarang Wilds 5.1 - Burrow - Init (zto),"--------------
--Constants --
--------------
currentLoc = scene:GetPosition()
currentVector = { Vector:New(currentLoc.x, currentLoc.y, currentLoc.z); }

-----------
-- Inits --
-----------

--Spell Auras
burrowAuraID = 29067

--Creature IDs
drillModelID = ""WORLD\\GENERIC\\GNOME\\PASSIVE DOODADS\\TOOLS\\GnomeTool01.m2""
bunnyCreatureID = 62026


--Spawning
drill = SpawnModelActor( drillModelID, currentLoc.x, (currentLoc.y + 1), currentLoc.z, 0, 1, false )

playerClone = SmoothPhaseSpawnActivePlayerCloneActor( currentLoc.x, currentLoc.y, currentLoc.z, 0, 1, true )
burrowBunny = SpawnActor( bunnyCreatureID, currentLoc.x, currentLoc.y, currentLoc.z, 0, 1, true )
FadeOut( burrowBunny, 0 )
local burrowAura = burrowBunny:PlaySpellStateVisual(burrowAuraID)

---------------
-- MoveDatas --
---------------

--Setup
local burrowMove1 = MoveData:Default()
burrowMove1.pathID = 4712
burrowMove1.speed = 8
burrowMove1.posControl = MovePosControl.ConstantSpeed
burrowMove1.yawControl = MoveRotControl.Tangent
burrowMove1.pitchControl = MoveRotControl.Tangent
burrowMove1.rollControl = MoveRotControl.Angle
burrowMove1.isRelative = false
burrowMove1.teleportToFirstPoint = false

--Head bonk 1
local burrowMove2 = MoveData:Default()
burrowMove1.pathID = 4713
burrowMove1.speed = 8
burrowMove1.posControl = MovePosControl.ConstantSpeed
burrowMove1.yawControl = MoveRotControl.Tangent
burrowMove1.pitchControl = MoveRotControl.Tangent
burrowMove1.rollControl = MoveRotControl.Angle
burrowMove1.isRelative = false
burrowMove1.teleportToFirstPoint = false

--head bonk 2
local burrowMove3 = MoveData:Default()
burrowMove1.pathID = 4714
burrowMove1.speed = 8
burrowMove1.posControl = MovePosControl.ConstantSpeed
burrowMove1.yawControl = MoveRotControl.Tangent
burrowMove1.pitchControl = MoveRotControl.Tangent
burrowMove1.rollControl = MoveRotControl.Angle
burrowMove1.isRelative = false
burrowMove1.teleportToFirstPoint = false

--Final
local burrowMove4 = MoveData:Default()
burrowMove1.pathID = 4715
burrowMove1.speed = 8
burrowMove1.posControl = MovePosControl.ConstantSpeed
burrowMove1.yawControl = MoveRotControl.Tangent
burrowMove1.pitchControl = MoveRotControl.Tangent
burrowMove1.rollControl = MoveRotControl.Angle
burrowMove1.isRelative = false
burrowMove1.teleportToFirstPoint = false

------------
-- Action --
------------
SendTrigger(""smooth phase complete"")

playerClone:SetRelativeTo(drill)
PlayLoopingSplitBodyAnim( playerClone, Animations.Mount )

FadeIn( burrowBunny, 2)
drill:MoveToRel( Vector:New(0, 0, -5), 1)
drill:WaitMovementComplete()
drill:SetRelativeTo( burrowBunny )

-- Line up for cameras
burrowBunny:Move( burrowMove1 )
burrowBunny:WaitMovementComplete()
Wait(1)

SendTrigger("" camera1 - position "")

burrowBunny:Move( burrowMove2 )
burrowBunny:WaitMovementComplete()
CastSpellAtActor(burrowBunny, burrowBunny, 133160) -- Comedy Bonk

SendTrigger("" camera2 - position "")

burrowBunny:Move( burrowMove3 )
burrowBunny:WaitMovementComplete()
CastSpellAtActor(burrowBunny, burrowBunny, 133160) -- Comedy Bonk

burrowBunny:Move( burrowMove4 )
burrowBunny:WaitMovementComplete()
CastSpellAtActor(burrowBunny, burrowBunny, 100627) -- Dusty Explosion
playerClone:SetRelativeTo( nil )
PlayLoopingSplitBodyAnim( playerClone, Animations.Jump)
playerClone:MoveToRel(Vector:New(0, 0, 5), 2)
FadeOut( burrowBunny, 2)
Wait(2)
StopLoopingSplitBodyAnim( playerClone, Animations.Jump)
PlayOneShotSplitBodyAnim( playerClone, Animations.JumpEnd)
Wait(1.5)
SendTrigger("" camera3 - position 2 "")
RunToLocation( playerClone, 2, -1952.94, 2333.01, 8.14856, 36.0007, true)
SendTrigger("" camera1 - player done "")
Wait(1)
scene:EndScene()"
1776,Krasarang Wilds 5.1 - Burrow - Cameras (zto),"local genericFOV90 = 368
local cam1 = 4716
local cam1t = 4712

local cam2 = 4717
local cam2t = 4713

local cam3 = 4718
local cam3t = 4715

scene:SetCamera(0,0,nil,nil)
WaitForTrigger(""smooth phase complete"")
SetCameraFollowPath( genericFOV90, 5, cam1, cam1t, 5 )

WaitForTrigger("" camera1 - position "")
SetCameraFollowPath( genericFOV90, 5, cam2, cam2t, 5 )

--Wait(4)
WaitForTrigger("" camera2 - position "")
SetCameraFollowPath( genericFOV90, 5, cam3, cam3t, 8 )

Wait(5)
WaitForTrigger("" camera3 - position 2 "")
scene:SetCamera(0,5,nil,nil)"
1781,Krasarang Wilds: zto - Burning Goblins - Init,"function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-----------------------
--Inits and constants--
-----------------------

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Spells
smallExplosion = 88309 
bigExplosion = 46419

--Creature IDs
bunnyCreatureID = 62026

fires = SpawnActorsAtPoints(bunnyCreatureID, 4732, true)

for i=1, #fires do
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end

------------
-- Action --
------------
 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
9330,Krasarang Wilds: zto - Explode Goblins - Init,"function Explode(actor)
	explosionID = math.random(0, 1) 
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		--local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		--Wait(5)
		--actor:ClearSpellVisual( burningAura) 
		--Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		--local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		--Wait(5)
		--actor:ClearSpellVisual( burningAura)
		--Wait(5)
	end
end 

-----------------------
--Inits and constants--
-----------------------

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }
mekkatorqueAuraID = 29108

--Beams
uploadBeamChannelID = 29095

--Spells
smallExplosion = 88309 
bigExplosion = 46419
massiveExplosion = 133342

--Creature IDs
bunnyCreatureID = 62026
gyrocopterCreatureID = 67493
babombCreatureID = 67607
gyroExtractorCreatureID = 67493
mekkatorqueCreatureID = 67387


fires = SpawnActorsAtPoints(bunnyCreatureID, 4732, true)
bomb = SpawnInteractibleActor(babombCreatureID, -1929.93, 2277.91, 8.19355, 0, 1, false)
--gyro = SpawnInteractibleActor(gyrocopterCreatureID, -1929.93, 2277.91, 11.69355, 0, 1, false)
explosionBunny = SpawnActor( bunnyCreatureID, -1863.11, 2321.94, 13.1266, 69.9756, 1, true)



scout = SpawnActor( bunnyCreatureID, -1880.545166, 2353.359375, 10.940398, 297, 1, false)
gyro = SpawnActor(gyroExtractorCreatureID, -1880.545166, 2353.359375, 40.940398, 297, 1, false)
mekkatorque = SpawnActor(mekkatorqueCreatureID, -1880.545166, 2353.359375, 43.69, 297, 1, false)
FadeOut( gyro, 0 )
FadeOut( mekkatorque, 0 )


------------------
-- Pathing Data --
------------------
local moveData = MoveData:Default()
moveData.pathID = 4742
moveData.speed = 19
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false 
moveData.teleportToFirstPoint = true 
--moveData.animKitID = 697 
moveData.isGroundSnapping = false

local exitData = MoveData:Default()
exitData.pathID = 4743
exitData.speed = 19
exitData.posControl = MovePosControl.ConstantSpeed
exitData.yawControl = MoveRotControl.Tangent
exitData.pitchControl = MoveRotControl.Tangent
exitData.rollControl = MoveRotControl.Angle
exitData.isRelative = false 
exitData.teleportToFirstPoint = false 
--exitData.animKitID = 697 
exitData.isGroundSnapping = false


------------
-- Action --
------------
FadeIn( gyro, 2 )
FadeIn( mekkatorque, 2 )
gyro:PlaySpellStateVisual(mekkatorqueAuraID)
mekkatorque:SetRelativeTo(gyro)

gyro:MoveToRel((Vector:New(0, 0, -27)), 5)
gyro:WaitMovementComplete()
local uploadBeam = ChannelSpellVisualAtActor( gyro, uploadBeamChannelID, scout )
local mekkatorqueLines = { 69021, 69022, 69023 }
local mekkatorqueLinesDesc = mekkatorqueLines[math.random(#mekkatorqueLines)]
mekkatorque:BroadcastText(BroadcastType.Say, mekkatorqueLinesDesc)
Wait(2)
ClearChannelSpellVisual( uploadBeam )
gyro:FollowPathAtSpeed( 4748, 20, true) 
gyro:WaitMovementComplete()
RunToLocation (gyro, 30, -1929.93, 2277.91, 11.69355, 0, false)

Wait(2)

bomb:SetRelativeTo(gyro) --Bomb mounts the gyro

gyro:Move( moveData )
--gyro:FollowPathAtSpeed( 4742, 19, true)
gyro:WaitMovementComplete()
bomb:SetRelativeTo( nil )
RunToLocation( bomb, 2, -1863.11, 2321.94, 13.1266, 69.9756, true)
gyro:Move( exitData )
bomb:BroadcastTextStereo( BroadcastType.Yell, 3927 )
Wait(2)
CastSpellAtActor(explosionBunny, explosionBunny, massiveExplosion)
Wait(2)
FadeOut( bomb, 0 )

for i=1, #fires do
	Explode(fires[i])
end

for i=1, #fires do
	Explode(fires[i])
"
9331,[1] Krasarang Wilds: zto - Explode Goblins - Init,"end

for i=1, #fires do
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end

for i=1, #fires do
	Explode(fires[i])
end

Wait(2)
scene:EndScene()"
9332,Krasarang Wilds: zto - Valor's Edge - Init,"function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-----------------------
--Inits and constants--
-----------------------

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Spells
smallExplosion = 88309 
bigExplosion = 46419

--Creature IDs
bunnyCreatureID = 62026

fires = SpawnActorsAtPoints(bunnyCreatureID, 4750, true)

for i=1, #fires do
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end

------------
-- Action --
------------
 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
9333,Krasarang Wilds: zto - The Defiant - Init ,"function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-----------------------
--Inits and constants--
-----------------------

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Spells
smallExplosion = 88309 
bigExplosion = 46419

--Creature IDs
bunnyCreatureID = 62026

fires = SpawnActorsAtPoints(bunnyCreatureID, 4751, true)

for i=1, #fires do
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end

------------
-- Action --
------------
 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
9334,Test - Darren's LOD,"-- A good spot to create this scene is: worldport 870, -90.7, 969.9, 166, 58.5

--
-- Constants
--
local critterCreatureIDs =
{
	57415;	-- springtail leaper
}
local regionWidth = 64
local regionHeight = 64
local baseSpacing = 2
local positionDeviation = 0.75
local scaleDeviation = 0.2

local critterCreateData = ActorCreateData:Default()
critterCreateData.groundSnap = true
critterCreateData.interactible = false
critterCreateData.aoiSettings.priority = ActorAOIPriority.Low
critterCreateData.aoiSettings.range = ActorAOIRange.Tiny

local critters = { }

local numX = math.ceil(regionWidth / baseSpacing)
local numY = math.ceil(regionWidth / baseSpacing)
for y = 1,numY do
	local yBaseCoord = (y - (1 + numY)/2) * baseSpacing
	for x = 1, numX do
		local xBaseCoord = (x - (1 + numX)/2) * baseSpacing

		critterCreateData.creatureID = critterCreatureIDs[math.random(#critterCreatureIDs)]

		local pos = Vector:New( xBaseCoord + math.random()*positionDeviation, yBaseCoord + math.random()*positionDeviation, 0 )
		critterCreateData.transform.position = pos

		critterCreateData.scale = 1.0 + 2*(math.random() - 0.5)*scaleDeviation

		local critter = { }
		critter.actor = scene:SpawnActor(critterCreateData)

		table.insert(critters, critter)
	end
end

while true do
	scene:WaitTimer(1)
end
"
9335,Krasarang Wilds: zto - Ship - Init,"function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-----------------------
--Inits and constants--
-----------------------

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Spells
smallExplosion = 88309 
bigExplosion = 46419

--Creature IDs
bunnyCreatureID = 62026

fires = SpawnActorsAtPoints(bunnyCreatureID, 4757, true)

for i=1, #fires do
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end

------------
-- Action --
------------
 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
9336,Warlock Class - Meet the Masters - Setup NPCs,"
-- Spawn Kanrethad
local kanrethadCreatureID = 68019
kanrethad = SpawnInteractibleActor( kanrethadCreatureID, -3596.16, 1857.81, 47.2409, 8.77723, 1, true )

FadeOut(kanrethad, 0)

-- Spawn Jubeka
local jubekaCreatureID = 68018
jubeka = SpawnInteractibleActor( jubekaCreatureID, -3590.05, 1858.31, 47.2409, 187.652, 1, true )

FadeOut(jubeka, 0)

-- Spawn Infernal
local infernalCreatureID = 89
infernal = SpawnInteractibleActor( infernalCreatureID, -3592.28, 1851.16, 47.2406, 95.6312, 1, true );

FadeOut(infernal, 0);"
9337,Warlock Class - Meet the Masters - Shadowmoon Valley,"
-- Fade the Character in
jubeka:Fade(0.75,1)
kanrethad:Fade(0.75,1)

Wait(1)

SayTextWithAnim(jubeka, 69352);

Wait(4);

SayTextWithAnim(kanrethad, 69351);

Wait(4);

SayTextWithAnim(jubeka, 69354, Animations.EmotePoint);

Wait(4);

SayTextWithAnim(kanrethad, 69353, Animations.EmotePoint);

Wait(4);

RunToLocation( kanrethad, 2, -3593.46, 1858.18, 47.2413, 10.1319 );

SayText(kanrethad, 69357 ); 

Wait(1);

jubeka:PlayLoopingFullBodyAnim(Animations.Cower);
SayText(jubeka, 69355 ); 

Wait(2);
Wait(2);

SayText(jubeka, 69356 );

Wait(4);
jubeka:StopLoopingFullBodyAnim();

RunToLocation( kanrethad, 2,  -3593.06, 1856.38, 47.2413, 279.456 );

SayTextWithAnim(kanrethad, 69358);

Wait(4);

SayText(kanrethad, 69359);

local summonInfernalSpellID = 1122;
local summonInfernalVisual = 23004;

--CastSpellAtLocation ( kanrethad, 
CastSpellAtActor( kanrethad, infernal, summonInfernalSpellID, true);

Wait(1)

infernal:Fade(1, 1);

Wait(4);

SayTextWithAnim(kanrethad, 69360);

Wait(4);

local howlOfTerrorSpellID = 5484;
CastSpellAtActor( kanrethad, infernal, howlOfTerrorSpellID, true);

Wait(0.5);

local fearImpactAndStateVisualID = 10744;
local fearKit = PlaySpellImpactAndState( infernal, fearImpactAndStateVisualID );

RunToLocation( infernal, 7, -3617, 1869.19, 47.5721, 149.69 );

Wait(2);

FadeOut(infernal);

SayTextWithAnim(kanrethad, 69361);

RunToLocation( kanrethad, 2, -3591.67, 1855.81, 47.2408, 57.6682 );

Wait(4);

SayTextWithAnim(jubeka, 69363, Animations.EmoteNo );

Wait(4);

kanrethad:PlayLoopingAnimKit(2064);

SayText(kanrethad, 69362);

Wait(1);
Wait(3);"
9338,Cinematic Framework - Text Display,"function SayText(actor, broadcastId, BroadcastStereo)
	if (BroadcastStereo) then
		actor:BroadcastTextStereo(BroadcastType.Say, broadcastId)
	else
		actor:BroadcastText(BroadcastType.Say, broadcastId)
	end
end

function YellText(actor, broadcastId, BroadcastStereo)
	if (BroadcastStereo) then
		actor:BroadcastTextStereo(BroadcastType.Yell, broadcastId)
	else
		actor:BroadcastText(BroadcastType.Yell, broadcastId)
	end
end

function SayTextWithAnim(actor, broadcastId, overrideAnim, BroadcastStereo)
	SayText(actor, broadcastId, BroadcastStereo)

	local anim = overrideAnim or  Animations.EmoteTalk
	PlayOneShotSplitBodyAnim( actor, anim )
end


function YellTextWithAnim(actor, broadcastId, overrideAnim, BroadcastStereo)
	YellText(actor, broadcastId, BroadcastStereo)

	local anim = overrideAnim or  Animations.EmoteTalkExclamation
	PlayOneShotSplitBodyAnim( actor, anim )
end"
9339,Cinematic Framework - Fake Spellcasting,"--
-- Spellcasting
-- These Scripts have been added to SVN, if you make a change here, update it
-- also there Object\ObjectClient\SceneScriptPackages\CinematicFramework
-- If you do not know how - contact a Gameplay Programmer
--

function CastSpellAtLocation( actor, spellVisualID, locationList, castTime, missileSpeed, missileSpeedIsFlatTime, waitForMissiles ) 
	local precastTime = castTime or 1.5;
	local missileSpeed = missileSpeed or 40;

	local preCastInstance = actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(precastTime)
	actor:ClearSpellVisual(preCastInstance)

	if ( #locationList >= 1 ) then
		actor:PlaySpellCastVisualAtPoints(
			spellVisualID,
			missileSpeed,
			missileSpeedIsFlatTime,
			locationList )
	else
		-- self targeted
		casterCastingPet.actor:PlaySpellCastVisual(spellVisualID)
	end

	-- wait for impact
	local waitMissiles = ( waitForMissiles == nil or waitForMissiles == true );
	if Actor.HasPendingMissiles then
		waitMissiles = actor:HasPendingMissiles(0)
	end

	if (waitMissiles == true) then
		actor:WaitMissilesImpacted(0)
	end
end

function PlaySpellImpactAndState( target, spellVisualID, useTargetImpact ) 
	if ( useTargetImpact ) then 
		target:PlaySpellTargetImpactVisual(spellVisualID)
	else
		target:PlaySpellImpactVisual(spellVisualID)
	end

	local stateKitVisualInstanceID = target:PlaySpellStateVisual(spellVisualID)

	return stateKitVisualInstanceID;
end

local ChannelFuncInternal = function( caster, spellVisualID, useStateVisuals, target, ... )

	local newChannel =
	{
		visualID = spellVisualID;
		casterActor = caster;
		channelTargets = { target };
		casterStateHandle = nil;
		targetStateHandles = {};
	}

	local numArgs = select('#', ...)
	local args = { ... }
	if (args) then
		for i = 1,#args do
			table.insert(newChannel.channelTargets, args[i])
		end
	end

	-- play caster/target state kits
	if (useStateVisuals == true) then
		newChannel.casterStateHandle = caster:PlaySpellStateVisual(spellVisualID)
	end

	-- play beam
	newChannel.instanceID = caster:PlaySpellChannelVisualAtTargets( spellVisualID, newChannel.channelTargets );

	return newChannel
	
end

local ClearChannelFuncInternal = function( channel )
	if (not channel) then
		return
	end

	-- clear state kit
	if (channel.casterStateHandle) then
		channel.casterActor:ClearSpellVisual( channel.casterStateHandle )                       
		channel.casterStateHandle = nil
	end

	-- clear beams
	if ((channel.instanceID) and (channel.instanceID ~= 0)) then
--		for i,target in pairs(channel.channelTargets) do
--			target:ClearSpellVisual( channel.instanceID )
--		end

-- the below supercedes the above from code rev 326619 which corrected a channeling ownership issue 
		channel.casterActor:ClearSpellVisual( channel.instanceID )
		channel.instanceID = 0
	end
end

--
-- ChannelSpellVisualAtActor( caster, spellVisualID, target1 [, target2] [, target3] )
--   Channel a spell visual at the target actor(s)
--   return a handle to the channel so it can be conveniently cleared using ClearChannelSpellVisual
--
function ChannelSpellVisualAtActor( caster, spellVisualID, target, ... )
	return ChannelFuncInternal( caster, spellVisualID, false, target, ... )
end

--
-- ChannelSpellVisualAtActorWithStateEffects( caster, spellVisualID, target1 [, target2] [, target3] )
--   Channel a spell visual at the target actor(s)
--   Channel kit will play on caster, state kits will play on target
--   return a handle to the channel so it can be conveniently cleared using ClearChannelSpellVisual
--
function ChannelSpellVisualAtActorWithStateEffects( caster, spellVisualID, target, ... )
	return ChannelFuncInternal( caster, spellVisualID, true, target, ... )
end


--
-- ChannelSpellVisualAtActor( channel )
--   Clear a previously issued spell "
9340,Warlock Class - Meet the Masters - Blade's Edge - Setup NPCs,"
-- Spawn Kanrethad
local kanrethadCreatureID = 68019
kanrethad = SpawnInteractibleActor( kanrethadCreatureID, 3279.61, 4632.55, 216.394, 87.5677, 1, true )

FadeOut(kanrethad, 0)

-- Spawn Jubeka
local jubekaCreatureID = 68018
jubeka = SpawnInteractibleActor( jubekaCreatureID, 3273.21, 4637.75, 216.24, 20.2926, 1, true )

FadeOut(jubeka, 0)

-- Spawn Doomguard
local doomguardCreatureID = 11859
doomguard = SpawnInteractibleActor( doomguardCreatureID, 3279.91, 4640.52, 216.528, 244.575, 2, true );

FadeOut(doomguard, 0);"
9341,Warlock Class - Meet the Masters - Blade's Edge,"
-- Fade the Character in
jubeka:Fade(0.75,1)
kanrethad:Fade(0.75,1)
doomguard:Fade(0.75,1)

local enslaveVisualID = 10185;
local enslaveKit = PlaySpellImpactAndState( doomguard, enslaveVisualID );

Wait(5)

SayTextWithAnim( kanrethad, 69364);

Wait(6);

SayTextWithAnim( doomguard, 69365);

Wait(6);

YellTextWithAnim( kanrethad, 69366,  Animations.EmoteNo);

Wait(6);

YellTextWithAnim( kanrethad, 69367);

Wait(6);

SayTextWithAnim( jubeka, 69368);

Wait(6);

YellTextWithAnim( kanrethad, 69369);

Wait(6);

SayTextWithAnim( doomguard, 69370);

Wait(6);

SayTextWithAnim( kanrethad, 69371);

Wait(8);

SayTextWithAnim( doomguard, 69372);

Wait(8);

SayTextWithAnim( doomguard, 69373);

Wait(8);

SayTextWithAnim( doomguard, 69374);

Wait(6);

RunToLocation( kanrethad, 2, 3279.29, 4630.81, 216.456, 259.918);

SayTextWithAnim( kanrethad, 69375);

Wait(4);

RunToLocation( kanrethad, 2, 3278.38, 4632.49, 216.443, 134.367);

SayTextWithAnim( kanrethad, 69376 );

Wait(4)

local grimoireOfSacrificeSpellID = 108503
CastSpellAtActor( jubeka, doomguard, grimoireOfSacrificeSpellID, true)

Wait(1.5);

doomguard:PlayLoopingAnimKit(2451);

Wait(1.5);
"
9342,Meet the Masters - Netherstorm - Setup NPCs,"
-- Spawn Kanrethad
local kanrethadCreatureID = 68019
kanrethad = SpawnInteractibleActor( kanrethadCreatureID, 4669.19, 2508.27, 240.03, 220.5, 1, true )

FadeOut(kanrethad, 0);

-- Spawn Jubeka
local jubekaCreatureID = 68018
jubeka = SpawnInteractibleActor( jubekaCreatureID, 4659.68, 2499.45, 242.543, 166.05, 1, true )

FadeOut(jubeka, 0)

-- Spawn Observer
local observerCreatureID = 58964
observer = SpawnActor( observerCreatureID, 4648.33, 2503.67, 244.457, 323.775, 1, true );

FadeOut(observer, 0);

observer1 = SpawnActor( observerCreatureID, 4657.14, 2463.6, 240.01, 65.0247, 1, true );
observer2 = SpawnActor( observerCreatureID, 4719.39, 2475.13, 240.067, 145.8, 1, true );
observer3 = SpawnActor( observerCreatureID, 4719.16, 2521.09, 237.797, 217.125, 1, true );
observer4 = SpawnActor( observerCreatureID, 4675.63, 2552.93, 225.734, 294.975, 1, true );

FadeOut(observer1, 0);
FadeOut(observer2, 0);
FadeOut(observer3, 0);
FadeOut(observer4, 0);"
9343,Meet the Masters - Netherstorm,"
-- Fade the Character in
jubeka:Fade(0.75,1)
kanrethad:Fade(0.75,1)
observer:Fade(0.75,1) 

local banishSpellID = 710;
local banishVisualID = 7324;

local banishKit = PlaySpellImpactAndState( observer, banishVisualID );

Wait(5)

SayTextWithAnim( jubeka, 69379 );

Wait(2);
RunToLocation( kanrethad, 2, 4667.96, 2504.19, 240.031, 196.874 );

SayTextWithAnim( kanrethad, 69380 );

Wait(4);

RunToLocation( jubeka, 2, 4664.66, 2502.33, 241.321, 23.1741 );

SayTextWithAnim( jubeka, 69382 );

Wait(4);

SayTextWithAnim( kanrethad, 69381 );

Wait(2);

RunToLocation( jubeka, 5, 4670.58, 2494.26, 240.031, 335.473 );

SayTextWithAnim( jubeka, 69383 );

Wait(2);

RunToLocation( kanrethad, 2, 4674.43, 2501.96, 240.02, 260.548 );

SayTextWithAnim( kanrethad, 69384, Animations.EmoteTalkQuestion );

Wait(4);

SayTextWithAnim( jubeka, 69385 );

RunToLocation( jubeka, 7, 4693.61, 2502.75, 237.533, 15.7475, false );

RunToLocation( kanrethad, 7, 4685.38, 2505.28, 238.765, 350.098 );

Wait(3)

SayTextWithAnim( kanrethad, 69386 );

RunToLocation( jubeka, 2, 4690.52, 2502.01, 238.411, 159.974 );

Wait(2)

SayTextWithAnim( jubeka, 69387, Animations.EmoteNo );

Wait(6);

SayTextWithAnim( jubeka, 69388 );

observer1:Fade(0.75, 1);
observer2:Fade(0.75, 1);
observer3:Fade(0.75, 1);
observer4:Fade(0.75, 1);

RunToLocation( observer1, 7, 4676.91, 2493.29, 239.998, 41.3986, true );
RunToLocation( observer3, 7, 4701.84, 2507.21, 236.588, 192.599, true );
RunToLocation( observer4, 7, 4687.15, 2518.82, 236.395, 273.149, true );
RunToLocation( observer2, 7, 4700.79, 2493.13, 238.696, 140.848, false );

Wait(2);

RunToLocation( jubeka, 2, 4693.67, 2505.06, 237.269, 17.0969 );

SayText( jubeka, 69389 );

Wait(4);
"
9349,Test - Darren's Transform,"
--local creatureID1 = 67761
--local creatureID2 = 68025
local creatureID2 = 67761
local creatureID1 = 68025

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(30, 0, 0), 180)
createData.creatureID = creatureID1

local actor = scene:SpawnActor(createData)

scene:WaitTimer(1)
actor:MoveToRel(Vector:New(25, 0, 0), 8)

scene:WaitTimer(4)
createData.creatureID = creatureID2
actor:SetModel(createData)

scene:WaitTimer(10)
"
9350,Warlock Class - Meet the Masters - Setup NPCs (Reliquary),"
-- Spawn Kanrethad
local kanrethadCreatureID = 68019
kanrethad = SpawnInteractibleActor( kanrethadCreatureID, 493.699, 166.578, 94.5201, 88.6501, 1, true )

FadeOut(kanrethad, 0)

-- Spawn Jubeka
local jubekaCreatureID = 68018
jubeka = SpawnInteractibleActor( jubekaCreatureID, 490.783, 160.836, 94.6113, 86.1751, 1, true )

FadeOut(jubeka, 0)

-- Spawn Infernal
local ashtongueCreatureID = 68098
ashtongueCorpse1 	= SpawnInteractibleActor( ashtongueCreatureID, 479.364, 156.567, 94.7916, 105.3, 1, true );
ashtongueCorpse2	= SpawnInteractibleActor( ashtongueCreatureID, 504.417, 157.236, 94.9122, 302.175, 1, true );
ashtongueCorpse3	= SpawnInteractibleActor( ashtongueCreatureID, 502.185, 179.024, 94.6844, 123.75, 1, true );

FadeOut(ashtongueCorpse1, 0);
FadeOut(ashtongueCorpse2, 0);
FadeOut(ashtongueCorpse3, 0);

-- Satyr
local greenSatyrCreatureID = 68145;
local blueSatyrCreatureID = 68147;

greenSatyr 	= SpawnActor( greenSatyrCreatureID, 478.922, 154.238, 100.9491, 60.1003, 1, false )
blueSatyr 	= SpawnActor( blueSatyrCreatureID, 484.516, 150.299, 100.1177, 60.7003, 1, false )

FadeOut(greenSatyr, 0);
FadeOut(blueSatyr, 0);

greenSatyr:PlayLoopingAnimKit(985);
blueSatyr:PlayLoopingAnimKit(985);"
9351,Warlock Class - Meet the Masters - Reliquary of Souls,"
-- Fade the Character in
jubeka:Fade(0.85,1)
kanrethad:Fade(0.85,1)

ashtongueCorpse1:PlayLoopingAnimKit(1427);
ashtongueCorpse2:PlayLoopingAnimKit(1427);
ashtongueCorpse3:PlayLoopingAnimKit(1427);

ashtongueCorpse1:Fade(0.75,1);
ashtongueCorpse2:Fade(0.75,1);
ashtongueCorpse3:Fade(0.75,1);

Wait(4);

SayTextWithAnim(jubeka, 69505);

Wait(8);

SayTextWithAnim(kanrethad, 69504);

Wait(8);

SayTextWithAnim(jubeka, 69506, Animations.EmoteTalkExclamation );

Wait(5);

RunToLocation( kanrethad, 2, 494.657, 175.348, 94.4555, 85.5002 );

SayTextWithAnim(kanrethad, 69507, Animations.EmotePoint);

Wait(8);

SayTextWithAnim(kanrethad, 69508, Animations.EmoteNo ); 

Wait(4);

RunToLocation( kanrethad, 2, 493.871, 170.518, 94.4773, 271.8 );

SayTextWithAnim( jubeka, 69509 );

Wait(8);

SayTextWithAnim( kanrethad, 69510 );

Wait(8);

SayTextWithAnim( kanrethad, 69511 );

Wait(8);

SayTextWithAnim( kanrethad, 69512 );

Wait(8);

SayTextWithAnim( jubeka, 69513 );

Wait(8);

RunToLocation( kanrethad, 2, 487.998, 160.301, 94.687, 244.575 );

SayTextWithAnim( kanrethad, 69514 );

blueSatyr:Fade(0.75,1)
greenSatyr:Fade(0.75,1)

RunToLocation( jubeka, 2, 489.385, 157.831, 94.7828, 185.175 );

Wait(6);

SayTextWithAnim( jubeka, 69515 );

Wait(8);

RunToLocation( kanrethad, 2, 498.992, 163.036, 94.712, 318.375 );

SayTextWithAnim( kanrethad, 69516, Animations.Kneel );

RunToLocation( jubeka, 2, 489.809, 158.115, 94.7616, 31.0491 );

blueSatyr:Fade(0,1)
greenSatyr:Fade(0,1)

Wait(6) 

SayTextWithAnim( jubeka, 69519, Animations.EmoteNo );

Wait(6) 

SayTextWithAnim( kanrethad, 69520 );

Wait(2);

SayTextWithAnim( jubeka, 69521, Animations.EmoteNo );

Wait(2);

RunToLocation ( kanrethad, 2, 496.589, 159.116, 94.6936, 175.5 );
SayTextWithAnim( kanrethad, 69522 );

Wait(8);

SayTextWithAnim( jubeka, 69523 );

Wait(8);

SayTextWithAnim( kanrethad, 69524 );

Wait(8);

local soulHarvestVisualID = 29324
local soulHarvestKit1 = PlaySpellImpactAndState( kanrethad, soulHarvestVisualID );
local soulHarvestKit2 = PlaySpellImpactAndState( jubeka, soulHarvestVisualID );

Wait(6);

jubeka:Fade(0,1)
kanrethad:Fade(0,1)

Wait(1);
"
9364,Kun-Lai Summit 5.1 - Monkey King Reveal - ZTO,"-----------
-- INITs --
-----------

--Auras
jadeAuraID = 29325
readAuraID = 20291


--Spells
jadeShatterID = 134416
anduinRedemptionSpellID = 39794

--Spawns
jadeWarlorcCreatureID = 68005
monkeyKingCreatureID = 68003
bunnyCreatureID = 62026
starCreatureID = 64677
anduinCreatureID = 68004

-----------
--Movements--
-------------
local monkeyLoc = MoveData:Default()
monkeyLoc.pathID = 4776
monkeyLoc.speed = 7
monkeyLoc.posControl = MovePosControl.ConstantSpeed
monkeyLoc.yawControl = MoveRotControl.Tangent
monkeyLoc.pitchControl = MoveRotControl.Tangent
monkeyLoc.rollControl = MoveRotControl.Angle
monkeyLoc.isRelative = false
monkeyLoc.teleportToFirstPoint = false

local monkeyEscape = MoveData:Default()
monkeyEscape.pathID = 4778
monkeyEscape.speed = 12
monkeyEscape.posControl = MovePosControl.ConstantSpeed
monkeyEscape.yawControl = MoveRotControl.Tangent
monkeyEscape.pitchControl = MoveRotControl.Tangent
monkeyEscape.rollControl = MoveRotControl.Angle
monkeyEscape.isRelative = false
monkeyEscape.teleportToFirstPoint = false
monkeyEscape.isGroundSnapping = false

local warlordLoc = MoveData:Default()
warlordLoc.pathID = 4777
warlordLoc.speed = 7
warlordLoc.posControl = MovePosControl.ConstantSpeed
warlordLoc.yawControl = MoveRotControl.Tangent
warlordLoc.pitchControl = MoveRotControl.Tangent
warlordLoc.rollControl = MoveRotControl.Angle
warlordLoc.isRelative = false
warlordLoc.teleportToFirstPoint = false

------------
--Spawning--
------------

jadeWarlord = SmoothPhaseSpawnActor (jadeWarlorcCreatureID, 3545.040039, 1776.571167, 722.543335, 167, 1, true)
monkeyKing = SmoothPhaseSpawnActor (monkeyKingCreatureID, 3539.792480, 1781.918457, 724.339233, 314, 1, false)
anduin = SmoothPhaseSpawnActor (anduinCreatureID, 3512.23, 1780.95, 719.196, 353.292, 1, true)
stars1 = SpawnFadedActorsAtPoints( starCreatureID, 4779, false)
stars2 = SpawnFadedActorsAtPoints( starCreatureID, 4779, false)


-----------
--Actions--
-----------

local jadeAura1 = monkeyKing:PlaySpellStateVisual(jadeAuraID)
local jadeAura2 = jadeWarlord:PlaySpellStateVisual(jadeAuraID)

monkeyKing:PlayLoopingAnimKit(3367)
jadeWarlord:PlayLoopingAnimKit(3366)

anduin:BroadcastTextStereo(BroadcastType.Say, 70716) -- Anduin announces his intent to relase the monkey king
CastSpellAtActor(anduin, monkeyKing, anduinRedemptionSpellID)
anduin:WaitCastingComplete(anduin, anduinRedemptionSpellID)
Wait(2)

for i=1, #stars1 do
	FadeIn(stars1[i], 2)
	stars1[i]:Move( monkeyLoc )
end

for i=1, #stars2 do
	FadeIn(stars2[i], 2)
	stars2[i]:Move( warlordLoc )
end

stars2[#stars2]: WaitMovementComplete()

for i=1, #stars1 do
	FadeOut(stars1[i], 2)
end

for i=1, #stars2 do
	FadeOut(stars2[i], 2)
end

--Que the release of the Monkey King and the Jade Warlord
monkeyKing:ClearSpellVisual( jadeAura1)
jadeWarlord:ClearSpellVisual( jadeAura2)

monkeyKing:StopAnimKit(3367)
jadeWarlord:StopAnimKit(3366)

CastSpellAtActor(monkeyKing, monkeyKing, jadeShatterID)
CastSpellAtActor(jadeWarlord, jadeWarlord, jadeShatterID)
SendTrigger(""Curse Lifted"")

--End visual effects for the Jade release

monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70184) -- The Monkey King announces his release

monkeyKing:SetFacingToAbs(Vector:New(3539.792480, 1781.918457, 724.33923))
monkeyKing:Move(monkeyEscape)
Wait(3)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.JumpEnd)
Wait(0.93)
PlayLoopingSplitBodyAnim(monkeyKing, Animations.Stand)
Wait(1)
scene:EndScene()"
9365,Silvermoon City 5.1: zto - Lor'themar Speech 001,"lorthemarCreatureID = 68084 --Lor'themar Theron's Creature ID
local musichandle = nil --Declaring a music handle

--Constants
currentLoc = scene:GetPosition() --Get the position of the scene object
locX = currentLoc.x
locY = currentLoc.y
locZ = currentLoc.z

lorthemar = SmoothPhaseSpawnActor(lorthemarCreatureID, currentLoc.x, currentLoc.y, currentLoc.z, 0, 1, true) --Smooth phase spawn Lor'themar where the scene is starting
lorthemar:FollowPathAtSpeed( 4788, 3, true) --Lor'themar follows a path generated in the Scene Visualizer
musichandle = lorthemar:PlayMusic(34959) --Music Start
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:BroadcastText(BroadcastType.Say, 69436) -- VO Line 1 (3.754)
Wait(4)
lorthemar:WaitBroadcastSoundComplete()
Wait(1)

PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:BroadcastText(BroadcastType.Say, 69437) -- VO Line 2 (9.879)
Wait(8)
Wait(3)
lorthemar:WaitBroadcastSoundComplete()

PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:BroadcastText(BroadcastType.Say, 69438) -- VO Line 3 (7.396)
Wait(7)
lorthemar:WaitBroadcastSoundComplete()
Wait(.75)

PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:BroadcastText(BroadcastType.Say, 69439) -- VO Line 4 (6.906)
Wait(8)
lorthemar:WaitBroadcastSoundComplete()
Wait(.75)

PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:BroadcastText(BroadcastType.Say, 69440) -- VO Line 5 (5.486)
Wait(6)
lorthemar:WaitBroadcastSoundComplete()
Wait(.75)

PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:BroadcastText(BroadcastType.Say, 69441) -- VO Line 6 (8.934)
Wait(10)
lorthemar:WaitBroadcastSoundComplete()
Wait(.75)

PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:BroadcastText(BroadcastType.Say, 69442) -- VO Line 7 (9.528)
Wait(11)
lorthemar:WaitBroadcastSoundComplete()
Wait(.75)

PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
musichandle:Stop() --Stop previous music track
musichandle = lorthemar:PlayMusic(34963) --Music Start - Rising Tension
SendTrigger(""Music Start"") --Start timer on Music Wait for duration of music sound clip
lorthemar:BroadcastText(BroadcastType.Say, 69443) -- VO Line 8 (5.015)
Wait(7)
lorthemar:WaitBroadcastSoundComplete()

WaitForTrigger(""Music Done"") --Wait for music timer to finish
musichandle:Stop() --Stop scene music
musichandle = lorthemar:PlayMusic(10086) --Music Start - TempMono (silence)
musichandle:Stop()
Wait(100)
scene:EndScene()"
9366,Warlock Class - Black Temple - Setup NPCs,"-- Spawn Kanrethad
local kanrethadCreatureID = 68019
kanrethad = SpawnInteractibleActor( kanrethadCreatureID, 695.643, 296.663, 354.151, 174.373, 1, true )

FadeOut(kanrethad, 0)

-- Spawn Jubeka
local jubekaCreatureID = 68018
jubeka = SpawnInteractibleActor( jubekaCreatureID, 693.194, 313.856, 354.075, 203.848, 1, true )

FadeOut(jubeka, 0)

-- spawn clone
local playerCloneCreatureID = 65247
clone = SpawnActivePlayerCloneActor(707.651, 306.88, 353.697, 188.299, 1.0, true )

-- spawn essence of order
local essenceCreatureID = 68151
essence = SpawnActor( essenceCreatureID, 686.408, 304.357, 353.192, 177.498, 0.05, false );

FadeOut(essence, 0);

-- Spawn Xi'ri
local xiriCreatureID = 68289
xiri = SmoothPhaseSpawnInteractibleActor( xiriCreatureID, 676.424, 305.079, 353.192, 0, 1, true )

FadeOut(xiri, 0)

SendTrigger('SmoothPhaseComplete');

"
9367,Warlock Class - Black Temple - Temple Summit,"WaitForTrigger('SmoothPhaseComplete');

scene:SetFadeRegion(300, true)  -- (radius, fadeActivePlayer)
scene:SetCamera(501,0,nil,nil) -- (camera, transition time, primary target, secondary target)

clone:Fade(1,1);

xiri:Fade(1,1);

RunToLocation( clone, 2,  697.398, 306.709, 354.306, 192.369 );

--scene:SetCamera(459,6,nil,nil) -- (camera, transition time, primary target, secondary target)

SayText(xiri, 69809);

SetCameraFollowPath( 368, 5, 4789, 4790, 15 ); 

Wait ( 5 );

SayText(xiri, 69811 );

Wait ( 5 );

SayText(xiri, 69812 );

Wait ( 5 );

SetCameraFollowPath( 368, 5, 4791, 4792, 13 ); 

SayText(xiri, 69813 );

Wait ( 5 );

SayText(xiri, 69815 );

Wait ( 6 );

SayText(xiri, 69816 );

SetCameraFollowPath( 368, 5, 4793, 4794, 24 ); 

Wait ( 8 );

SayText(xiri, 69818 );

Wait ( 5 );

FadeIn(essence, 1);

SayText(xiri, 69819 );

local moveData = MoveData:Default(2);
moveData.posControl = MovePosControl.PointSpeed
moveData.yawControl = MoveRotControl.AngleAbs
moveData.pitchControl = MoveRotControl.None
moveData.rollControl = MoveRotControl.None

moveData.points[1].pos = Vector:New(684.408, 304.357, 353.192);
moveData.points[1].speed = 1
moveData.points[1].yaw = 0
moveData.points[2].pos = Vector:New(684.753, 304.665, 359.754);
moveData.points[1].speed = 1
moveData.points[1].yaw = 1080

essence:Move(moveData);

Wait ( 3 );

SayText(xiri, 69820 );

Wait ( 8 );

SayText(xiri, 69822 );

-- create the spell effect
local transform = Transform:New( essence:GetPosition() );
local effectCreateData = ActorCreateData:Default();
local baseScale = 0.1;

effectCreateData.name = ""Infusion"";
effectCreateData.model = ""SPELLS\\Altar_of_Ascension_FX.M2"";
effectCreateData.transform = transform;
effectCreateData.scale = baseScale;
effectCreateData.interactible = false;
effectCreateData.groundSnap = false

local effect = scene:SpawnActor(effectCreateData);

Wait ( 2 );

effect:SetScale(0.25)

Wait ( 2 );

effect:SetScale(0.50)

Wait ( 2 );

effect:SetScale(1.00)


SayText(xiri, 69823 );

Wait ( 7 );

FadeOut(xiri, 1);
FadeOut(essence, 1);
FadeOut(effect, 1);

"
9368,Dalaran 5.1: zto - Jaina and Anduin Convo - Init,"--Animation Inits--
rpEmotes = { 
	Animations.EmoteLaugh;
	Animations.EmoteTalk;
	Animations.EmoteTalkQuestion;
	Animations.EmoteUseStanding;
	}

--Creature Inits--
anduinCreatureID = 68106
jainaCreatureID = 68108
kaelthasCreatureID = 19622
kaelthasAssistantCreatureID = 68482 
kalecgosCreatureID = 35867
sunreaverCreatureID = 68052
silverCreatureID = 36774
kelthuzadCreatureID = 20350
undeadCreatureID = 3
fountainModelID = ""World\\Expansion02\\Doodads\\Dalaran\\Dalaran_Fountain_01.mdx""

genericFOV90 = 368
cameraLoc1 = 4796
cameraLoc1Target = 4800
jainaPath1 = 4797
anduinPath1 = 4799

kaelthasCam = 4827
kaelthasCamTarget = 4828

jainaCloseUpCam = 4830
jainaCloseUpCamTarget = 4831

anduinCloseUpCam = 4832
anduinCloseUpCamTarget = 4833

kalecgosCam = 4836
kalecgosCamTarget = 4837

kelthuzadCam1 = 4857
kelthuzadCam2 = 4856
kelthuzadWalkPath = 4855
kelthuzadCamTarget1 = 4858
kelthuzadCamTarget2 = 4859


wideCam = 4963 --4959 --4838 --4847
wideCamTarget = 4964 --4962
wideCam2 = 4960
wideCam2Target = 4961

getAlongCam = 4840
getAlongCamTarget = 4841

--Smoothphase Actors Init--
anduin = SmoothPhaseSpawnActor(anduinCreatureID, 5850.834961, 830.232666, 846.338562, 175, 1, true)
jaina = SmoothPhaseSpawnActor(jainaCreatureID, 5849.502441, 830.218750, 846.338440, 2, 1, true)
SendTrigger(""smooth phase complete"")

--Kael'thas Scene Init--
kaelthas = SpawnActor(kaelthasCreatureID, 5938.86, 506.132, 650.178, 125.088, .5, true)
kaelthasAssistant = SpawnActorsAtPoints(kaelthasAssistantCreatureID, 4826, true)

--Kalecgos Scene --
kalec = SpawnActor(kalecgosCreatureID, 5811.92, 643.95, 647.464, 49.5956, 1, true)
jaina2 = SpawnActor(jainaCreatureID, 5808.24, 647.083, 647.47, 49.5956, 1, true)
fountain = SpawnModelActorsAtPoints(fountainModelID, 4956, true)

--Sunreavers and Silver Covenant Scene Init--
sunreavers = SpawnActorsAtPoints(sunreaverCreatureID, 4842, true)
silvers = SpawnActorsAtPoints(silverCreatureID, 4843, true)

--Kael'thas Scene Init--
undead2 = SpawnActor(undeadCreatureID, 5734.03, 733.336, 656.819, 142.492, 1, true)
undead = SpawnActor(undeadCreatureID, 5750.07, 720.771, 656.937, 88.1881, 1, true)
kelthuzad = SpawnActor(kelthuzadCreatureID, 5752.05, 720.897, 656.937, 174.892, 1, true)

--Inits complete--
SendTrigger(""scene start"")

--Cue Action--
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69446) -- VO Line 1 (Hate Garrosh)
--jaina:WaitBroadcastSoundComplete()
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(3)
jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69447) -- VO Line 1 (Follow me)

SendTrigger(""Jaina - Walk outside"")
SendTrigger(""Anduin - Walk outside"")
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalkQuestion )
Wait(2)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69448) -- VO Line 2 (Decimate Orgrimmar)
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalkQuestion )
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(3)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
anduin:SetFacing(175.289) 
anduin:BroadcastTextStereo(BroadcastType.Say, 69450) -- VO Line 3 (Jaina!)
Wait(1)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69449) -- VO Line 4 (Kalecgos)
SendTrigger(""Jaina - face Anduin"")
SendTrigger(""Jaina - stroll"")
Wait(1)
SendTrigger(""Camera - kalecgos Cam"")
Wait(4) --Check these, only one may need to be active
Wait(2)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

"
9369,Dalaran 5.1: zto - Jaina and Anduin Convo - Jaina 2,"WaitForTrigger(""scene start"")

WaitForTrigger(""Jaina - stroll"")
jaina2:FollowPathAtSpeed(4834, 2, true) --Walking in the courtyard
jaina2:WaitMovementComplete() "
9370,Dalaran 5.1: zto - Jaina and Anduin Convo - Anduin,"WaitForTrigger(""scene start"")


WaitForTrigger(""Anduin - Walk outside"")
anduin:FollowPathAtSpeed(anduinPath1, 2, true) --Cross to balcony
anduin:WaitMovementComplete() 

WaitForTrigger(""Camera - kalecgos Cam"")
RunToLocation(anduin, 10, 5850.834961, 830.232666, 846.338562, 175, true)"
9371,Dalaran 5.1: zto - Jaina and Anduin Convo - CAMERA MASTER,"WaitForTrigger(""smooth phase complete"")
--scene:SetCamera(0, 0, nil, nil)
SetCameraFollowPath( genericFOV90, 2, 5518, 5519, 2 )--Camera 1
--Wait(2)
WaitForTrigger(""Jaina - Walk outside"")
SetCameraFollowPath( genericFOV90, 8, cameraLoc1, cameraLoc1Target, 8 )--Camera 1

WaitForTrigger(""Camera - kalecgos Cam"")
scene:SetFadeRegion(300, false)
SetCameraFollowPath( genericFOV90, 0, kalecgosCam, kalecgosCamTarget, 10 ) --Kael'thas Camera
scene:ApplyScreenEffect( 967 ) -- Memory Vision

WaitForTrigger(""Camera - Kelthuzad Cam"") 
SetCameraFollowPath( genericFOV90, 0, kelthuzadCam1, kelthuzadCamTarget1, 0 ) --Kael'thas Camera
WaitForTrigger(""kelthuzad - cross"")
SetCameraFollowPath( genericFOV90, 1, kelthuzadCam2, kelthuzadCamTarget2, 5 ) --Kael'thas Camera

WaitForTrigger(""Camera - Kaelthas Cam"")
SetCameraFollowPath( genericFOV90, 0, kaelthasCam, kaelthasCamTarget, 10 ) --Kael'thas Camera
--scene:ApplyScreenEffect( 967 ) -- Memory Vision

WaitForTrigger(""Camera - Jaina Close Up 1"")
scene:ClearScreenEffect( 967 ) -- Clear Memory Vision
SetCameraFollowPath( genericFOV90, 0, anduinCloseUpCam, anduinCloseUpCamTarget, 10 ) --Kael'thas Camera

WaitForTrigger(""Camera - Get Along"")
scene:ClearScreenEffect( 967 ) -- Clear Memory Vision
--scene:ApplyScreenEffect( 970 ) -- Time of Day override
SetCameraFollowPath( genericFOV90, 0, getAlongCam, getAlongCamTarget, 20 ) --Why can't we all get along


WaitForTrigger(""Camera - Wide"")
scene:ClearScreenEffect( 967 ) -- Clear Memory Vision
SetCameraFollowPath( genericFOV90, 0, wideCam2, wideCam2Target, 6 ) --Kael'thas Camera
WaitForTrigger(""Camera - Wide2"")
SetCameraFollowPath( genericFOV90, 0, wideCam, wideCamTarget, 20 ) --Kael'thas Camera

WaitForTrigger(""Camera - Anduin Close Up 1"")
scene:ClearScreenEffect( 967 ) -- Clear Memory Vision
--scene:ClearScreenEffect( 970 ) -- Time of Day override
SetCameraFollowPath( genericFOV90, 0, jainaCloseUpCam, jainaCloseUpCamTarget, 20 ) --Kael'thas Camera


WaitForTrigger(""wrap up"")
scene:SetFadeRegion(0, false)
scene:SetCamera(0, 5, nil, nil)"
9372,Kun-Lai Summit 5.1 - Memory Wine Scene Init - HMC,"-- spawn Shan Kien
shanKienCreatureID = 68357
shanKien = SpawnActor( shanKienCreatureID, 4529.99, 2765.37, 124.111, 132.21, 1.2, false )

-- spawn Avartu
avartuCreatureID = 68358
avartu = SpawnActor( avartuCreatureID, 4459.93, 2753.18, 111.33, 31.8596, 1.0, false )

-- spawn Rock 1
rock1CreatureID = 68396
rock1 = SpawnActor( rock1CreatureID, 4504.33, 2769.17, 128.843, 7.08444, 1.0, true )
FadeOut(rock1, 0)

-- spawn Rock 2
rock2CreatureID = 68396
rock2 = SpawnActor( rock2CreatureID, 4501.46, 2768.16, 135.018, 7.08444, 1.0, false )
FadeOut(rock2, 0)

-- spawn Bunnies
cryptBunnyCreatureID = 68415
bunny1 = SpawnActor( cryptBunnyCreatureID, 4506.4, 2776.69, 127.571, 200.203, 1.0, false )
bunny2 = SpawnActor( cryptBunnyCreatureID, 4507.4, 2776.41, 135.362, 194.353, 1.0, false )
bunny3 = SpawnActor( cryptBunnyCreatureID, 4508.1, 2770.16, 142.477, 180.403, 1.0, false )
bunny4 = SpawnActor( cryptBunnyCreatureID, 4510.23, 2764.38, 134.093, 204.478, 1.0, false )
bunny5 = SpawnActor( cryptBunnyCreatureID, 4511.03, 2763.11, 126.098, 194.353, 1.0, false )


--- PATHS ---
avartuPath = 4816


--- TEXT ---
shanKienSay1 = 69686
shanKienSay2 = 69690
shanKienSay3 = 69691
shanKienSay4 = 69692

avartuSay1 = 69687
avartuSay2 = 69688
avartuSay3 = 69689"
9373,Kun-Lai Summit 5.1 - Memory Wine Scene Master - HMC,"local genericFOV90 = 368
local dreamScreenEffectID = 824
local fadeInID = 938
local musichandle = nil

scene:SetCamera(502,0,nil,nil)
scene:SetFadeRegion(300, true)

--scene:ApplyScreenEffect(fadeInID)

Wait(3)
--scene:ClearScreenEffect(fadeInID)
musichandle = shanKien:PlayMusic(34892)
SetCameraFollowPath( genericFOV90, 5, 4810, 4825, 20 )
Wait(3)
scene:ApplyScreenEffect(dreamScreenEffectID)
Wait(6)

--SetCameraFollowPath( genericFOV90, 5, 4810, 4809, 10 )

Wait(8)
SendTrigger(""avartuMove"")

WaitForTrigger( ""avartuStop"" )

SendTrigger(""shanKienLine1"")
Wait(3)
SendTrigger(""avartuLine1"")
Wait(13)
SendTrigger(""avartuLine2"")
Wait(5)
SendTrigger(""shanKienLine2"")
Wait(8)
SendTrigger(""avartuLine3"")
Wait(6)
SendTrigger(""shanKienLine3"")
Wait(5)
SendTrigger(""shanKienLine4"")


WaitForTrigger(""endScene"")
musichandle:Stop()
scene:EndScene()"
9374,Kun-Lai Summit 5.1 - Memory Wine Scene Rock 2 - HMC,"WaitForTrigger(""rocks2fall"")
FadeIn(rock2, 0)
rock2:PlayOneShotAnimKit(3408, true, true)
Wait(7)
rock2:PlayLoopingAnimKit(1256, true, true)
Wait(1)
SendTrigger(""endScene"")"
9375,Kun-Lai Summit 5.1 - Memory Wine Scene Shan Kien - HMC,"--- SPEAKING TO AVARTU ---

WaitForTrigger( ""shanKienLine1"" )
PlayOneShotSplitBodyAnim( shanKien, Animations.EmoteTalkQuestion )
shanKien:BroadcastTextStereo(BroadcastType.Say, shanKienSay1)

WaitForTrigger( ""shanKienLine2"" )
PlayOneShotSplitBodyAnim( shanKien, Animations.EmoteNo )
shanKien:BroadcastTextStereo(BroadcastType.Say, shanKienSay2)

WaitForTrigger( ""shanKienLine3"" )
PlayOneShotSplitBodyAnim( shanKien, Animations.EmoteTalk )
shanKien:BroadcastTextStereo(BroadcastType.Say, shanKienSay3)

WaitForTrigger( ""shanKienLine4"" )
PlayOneShotSplitBodyAnim( shanKien, Animations.EmoteTalkExclamation )
shanKien:BroadcastTextStereo(BroadcastType.Say, shanKienSay4)

--- KICK AVARTU INTO CRYPT ---
Wait(2)
SendTrigger(""shanKienKick"")
CastSpellAtActor(shanKien, avartu, 134823, true)
Wait(4)

--- COLLAPSE ENTRANCE ---
local channelHandle = ChannelSpellVisualAtActorWithStateEffects(shanKien, 29461, bunny1, bunny2, bunny3, bunny4, bunny5)
shanKien:PlaySoundKit(29977, true)

local sceneOrigin = Vector:New(4535.6, 2785.28, 127.693)
local shakeY 
local shakeZ
if Scene.AddCameraShake then
	shakeY = scene:AddCameraEffect(44, sceneOrigin, nil, 1)
	shakeZ = scene:AddCameraEffect(45, sceneOrigin, nil, 1)
end

Wait(3)
ClearChannelSpellVisual(channelHandle)

SendTrigger(""rocksfall"")
local soundHandle = shanKien:PlaySoundKit(15227, false)
Wait(4)
shanKien:StopSoundKit(15227)"
9376,Kun-Lai Summit 5.1 - Memory Wine Scene Avartu - HMC,"WaitForTrigger( ""avartuMove"" )

avartu:FollowPathAtSpeed(avartuPath, 12, true)
avartu:WaitMovementComplete()
avartu:PlayAnimKit(2312, false, Animations.None)
SendTrigger(""avartuStop"")

WaitForTrigger( ""avartuLine1"" )
avartu:StopAnimKit(2312)
Wait(1)
PlayOneShotSplitBodyAnim( avartu, Animations.EmoteTalk )
avartu:BroadcastTextStereo(BroadcastType.Say, avartuSay1)

WaitForTrigger( ""avartuLine2"" )
PlayOneShotSplitBodyAnim( avartu, Animations.EmoteTalk )
avartu:BroadcastTextStereo(BroadcastType.Say, avartuSay2)

WaitForTrigger( ""avartuLine3"" )
PlayOneShotSplitBodyAnim( avartu, Animations.EmoteTalk )
avartu:BroadcastTextStereo(BroadcastType.Say, avartuSay3)

WaitForTrigger(""shanKienKick"")
Wait(2)
avartu:PlaySpellImpactVisual(29457)
avartu:SetFacingToAbs(Vector:New(4530.71, 2767.05, 124.111))
--avartu:PlayLoopingAnimKit(3411, true, true)
avartu:PlayAnimKit(3411, false, Animations.None)
avartu:FollowPathAtSpeed(4821, 16, true)"
9377,Kun-Lai Summit 5.1 - Memory Wine Scene Rock 1 - HMC,"WaitForTrigger(""rocksfall"")
FadeIn(rock1, 0)
rock1:PlayOneShotAnimKit(3408, true, true)
Wait(2)
SendTrigger(""rocks2fall"")
Wait(5)
rock1:PlayLoopingAnimKit(1256, true, true)"
9378,Dalaran 5.1: zto - Jaina and Anduin Convo - Kaelthas assistants,"WaitForTrigger(""scene start"")

for i=1, #kaelthasAssistant do
	kaelthasAssistant[i]:SetFacingToAbs(Vector:New(5938.86, 506.132, 650.178))
	PlayLoopingSplitBodyAnim(kaelthasAssistant[i], Animations.EmoteReadLoop )
end "
9379,Dalaran 5.1: zto - Jaina and Anduin Convo - Jaina,"WaitForTrigger(""scene start"")

WaitForTrigger(""Jaina - Walk outside"")
jaina:FollowPathAtSpeed(jainaPath1, 2, true) --Cross to balcony
jaina:WaitMovementComplete()

WaitForTrigger(""Jaina - face Anduin"")
jaina:SetFacing(2.14) 

WaitForTrigger(""Camera - kalecgos Cam"")
RunToLocation(jaina, 10, 5849.502441, 830.218750, 846.338440, 2, true)"
9380,Dalaran 5.1: zto - Jaina and Anduin Convo - Kalecgos,"WaitForTrigger(""scene start"")

WaitForTrigger(""Jaina - stroll"")
PlayLoopingSplitBodyAnim(kalec, Animations.EmoteTalk )
kalec:FollowPathAtSpeed(4835, 2, true) --Walking in the courtyard
kalec:WaitMovementComplete() "
9382,[1] Dalaran 5.1: zto - Jaina and Anduin Convo - Init,"PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 70258) -- VO Line 5 (kel'thuzad)
SendTrigger(""Camera - Kelthuzad Cam"")
Wait(1)
SendTrigger(""kelthuzad - cross"")
Wait(7)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69452) -- VO Line 5 (Kael'thas)
SendTrigger(""Camera - Kaelthas Cam"")
Wait(7)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
SendTrigger(""Camera - Jaina Close Up 1"")
jaina:BroadcastTextStereo(BroadcastType.Say, 69454) -- VO Line 6 (Right thing to do)
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(3)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalkQuestion )
jaina:BroadcastTextStereo(BroadcastType.Say, 69453) -- VO Line 7 (Follow me)
Wait(2)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalkQuestion )
Wait(2)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
SendTrigger(""Camera - Get Along"")
jaina:BroadcastTextStereo(BroadcastType.Say, 69455) -- VO Line 8 (Sunreavers)
Wait(7)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
SendTrigger(""Camera - Wide"")
jaina:BroadcastTextStereo(BroadcastType.Say, 69456) -- VO Line 9 (hope for the world)
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(3)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
SendTrigger(""Camera - Wide2"")
jaina:BroadcastTextStereo(BroadcastType.Say, 69457) -- VO Line 10 (beacon of light)
Wait(6)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69458) -- VO Line 11 (More hope for the world)
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(2)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)
Wait(1)

--Deprecated lines--
--[[PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69459) -- VO Line 12 (Follow me)
Wait(8)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69460) -- VO Line 13 (Follow me)
Wait(8)
]]--

PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
SendTrigger(""Camera - Anduin Close Up 1"")
anduin:BroadcastTextStereo(BroadcastType.Say, 69462) -- VO Line 14 (Follow me)
Wait(4)
--anduin:WaitBroadcastSoundComplete()
Wait(.5)

PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
jaina:BroadcastTextStereo(BroadcastType.Say, 69461) -- VO Line 15 (Follow me)
Wait(3)
SendTrigger(""wrap up"")
Wait(5)
scene:EndScene()"
9383,Dalaran 5.1: zto - Jaina and Anduin Convo - Sunreavers and Silvers (zto),"WaitForTrigger(""scene start"")

for i=1, #sunreavers do
	Wait(0.5)
	local rand = math.random(#rpEmotes)
	PlayLoopingSplitBodyAnim(sunreavers[i], rpEmotes[rand] )
end

for i=1, #silvers do
	local rand = math.random(#rpEmotes)
	PlayLoopingSplitBodyAnim(silvers[i], rpEmotes[rand] )
end "
9384,Warlock - Cataclysm Precast Scene,"-- Relative coordinates to the summoning
scene:SetRelativeCoords(true)


-- create the ground effect 
local transform = Transform:New( Vector:New(), 0);
if (Scene.GetCreatorDisplay) then
	local creator = scene:GetCreatorDisplay();
	if (creator) then
		transform.position = creator:GetPosition();
	end 
end

local groundEffectCreateData = ActorCreateData:Default();

groundEffectCreateData.name = ""Ground"";
groundEffectCreateData.model = ""SPELLS\\Warlock_Cataclysm_Ground.M2"";
groundEffectCreateData.transform = transform; 
groundEffectCreateData.scale = 1 * radius / 10;
groundEffectCreateData.interactible = false;
groundEffectCreateData.groundSnap = true;
 
local scorchedEarth = scene:SpawnActor(groundEffectCreateData);
local STAND_HOLD_DECAY_KIT_ID = 2133;
local kit = scorchedEarth:PlayLoopingAnimKit(STAND_HOLD_DECAY_KIT_ID);

--scorchedEarth:SetScale(1 * radius / 10);

-- create the spell effect
local effectCreateData = ActorCreateData:Default();
local lavaBaseScale = 1;

effectCreateData.name = ""Pool"";
effectCreateData.model = ""SPELLS\\Warlock_Cataclysm.M2"";
effectCreateData.transform = transform;
effectCreateData.scale = lavaBaseScale;
effectCreateData.interactible = false;
effectCreateData.groundSnap = true

local lavaPool = scene:SpawnActor(effectCreateData);
local kit2 = lavaPool:PlayLoopingAnimKit(STAND_HOLD_DECAY_KIT_ID);
--[[
local ringBaseScale = 0.01;

effectCreateData.name = ""Ring"";
effectCreateData.model = ""WORLD\\EXPANSION03\\DOODADS\\FIRELANDS\\LAVAPOOL_FIRERING\\Firelands_LavaPool_FireRing.M2"";
effectCreateData.transform = transform;
effectCreateData.scale = ringBaseScale;
effectCreateData.interactible = false;
effectCreateData.groundSnap = true

local ring = scene:SpawnActor(effectCreateData);
]]--

local lavaFinalScale = 0.2 * radius / 10;


local lavaBurstCreateData = ActorCreateData:Default();
lavaBurstCreateData.name = ""Lava Burst"";
lavaBurstCreateData.model = ""SPELLS\\lavaelemental_Impact_Base.M2"";
lavaBurstCreateData.interactible = false;
lavaBurstCreateData.groundSnap = true;

local playLavaBurst = function ( location )
	lavaBurstCreateData.transform = transform:New(location, math.random(0,360) );
	lavaBurstCreateData.scale = 1 + math.random(-20, 20) / 100;
	return scene:SpawnActor(lavaBurstCreateData);	
end

local explosionCreateData = ActorCreateData:Default();
explosionCreateData.name = ""Explosion"";
explosionCreateData.model = ""spells\\Warlock_Cataclysm_Explosion.m2"";
explosionCreateData.interactible = false;
explosionCreateData.groundSnap = true;
explosionCreateData.transform = transform;
explosionCreateData.scale = 1;

local maxTime = 3;
local timeStep = 0.1;

local bursts = {}

local burstStep = 0.2;
local burstsPerTick = 1;
local burstLifespan = 2;
local lastBurst = 0;

local lavaAngle = 0;
local lavaAngleStep = 120;

local minRadius = 2;
local finalMaxRadius = 8 * radius / 10;
local initialMaxRadius = 5 * radius / 10;

local explosionActor;
local explosionBlown = false;

local scaleBlown = false;

for time = 0.1, maxTime, timeStep do
	local progress = (time / maxTime);

	scene:WaitTimer(timeStep);

	local timeMaxRadius = initialMaxRadius + (finalMaxRadius  * progress);

	if ( time > lastBurst + burstStep and time < maxTime -  burstLifespan) then 
		lastBurst = time;

		for j=1, burstsPerTick do 
			local angle = lavaAngle + lavaAngleStep * math.random(0,100) * 0.01;

			lavaAngle = lavaAngle + lavaAngleStep;

			local x = math.cos(angle) * math.random(minRadius, finalMaxRadius);
			local y = math.sin(angle) * math.random(minRadius, finalMaxRadius);
			local location = Vector:New( x, y )
			local burst = playLavaBurst( location );

			table.insert( bursts, { actor = burst, spawnTime = time } );
		end

		for i = #bursts, 1 do 
			local v = bursts[i];
			if ( v ) then 
				if ( "
9385,VoEB 5.1 - Voice of the Gods - Init - HMC,"-- spawn Narrator Bunny
narratorCreatureID = 68511
narrator = SpawnActor( narratorCreatureID, 4330.04, 1283.94, 474.741, 134.461, 1, false )


narratorText1 = 70155
narratorText2 = 70156
narratorText3 = 70157
narratorText4 = 70158
narratorText5 = 70159
narratorText6 = 70160
narratorText7 = 70161
narratorText8 = 70162
narratorText9 = 70163"
9386,VoEB 5.1 - Voice of the Gods - Master - HMC,"local camera = 503

scene:SetCamera(camera,0,nil,nil)
scene:SetFadeRegion(300, true)

Wait(2)
SendTrigger(""narrator1"")
Wait(5)
SendTrigger(""narrator2"")
Wait(5)
SendTrigger(""narrator3"")
Wait(5)
SendTrigger(""narrator4"")
Wait(5)
SendTrigger(""narrator5"")
Wait(5)
SendTrigger(""narrator6"")
Wait(5)
SendTrigger(""narrator7"")
Wait(5)
SendTrigger(""narrator8"")
Wait(5)
SendTrigger(""narrator9"")
Wait(5)
scene:EndScene()"
9387,VoEB 5.1 - Voice of the Gods - Narrator - HMC,"WaitForTrigger( ""narrator1"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText1)

WaitForTrigger( ""narrator2"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText2)

WaitForTrigger( ""narrator3"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText3)

WaitForTrigger( ""narrator4"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText4)

WaitForTrigger( ""narrator5"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText5)

WaitForTrigger( ""narrator6"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText6)

WaitForTrigger( ""narrator7"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText7)

WaitForTrigger( ""narrator8"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText8)

WaitForTrigger( ""narrator9"" )
narrator:BroadcastTextStereo(BroadcastType.Say, narratorText9)
"
9388,Kun-Lai Summit 5.1 - Monkey King Reveal - Jade Warlord - ZTO,"WaitForTrigger(""Curse Lifted"")

PlayOneShotSplitBodyAnim(jadeWarlord, Animations.BattleRoar)"
9391,Dalaran 5.1: zto - Jaina and Anduin Convo - Kelthuzad,"WaitForTrigger(""kelthuzad - cross"")

undead2:FollowPathAtSpeed(kelthuzadWalkPath, 6, true)
 "
9392,Krasarang Wilds 5.1: zto - Monkey King - Mallet - INIT,"--Constants
currentLoc = scene:GetPosition()
locX = currentLoc.x
locY = currentLoc.y
locZ = currentLoc.z

--SpellCasts--
transformSpellID = 108142
shatterSpellID = 134416

--INits - Creatures --
bunnyCreatureID = 62026
monkeyKingCreatureID = 61942

--inits - Model IDs --
malletModelID = ""ITEM\\OBJECTCOMPONENTS\\WEAPON\\PA_CelestialMallet_2H.M2""
headModelID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\PA_CelestialMallet_Head.M2""
handleModelID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\PA_CelestialMallet_Shaft.M2""
ointmentModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\Mogu_pot_3.M2""
fogModelID = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""

-- Init Spawns--
mallet = SpawnModelActor(malletModelID, -1102.61, -1221.69, 26.2786, 180, 1, false)
head = SpawnModelActor(headModelID, -1102.61, -1221.69, 26.2786, 0, 1, false)
handle = SpawnModelActor(handleModelID, -1102.61, -1221.69, 26.2786, 180, 1, false)
ointment = SpawnModelActor(ointmentModelID, -1102.61, -1221.69, 26.2786, 0, 1, false)
bunny = SpawnActor(bunnyCreatureID, -1102.61, -1221.69, 26.2786, 0, 1, false)
fog = SpawnModelActor(fogModelID, -1102.44, -1220.06, 26.2786, 0, 1, false)

FadeOut(mallet, 0)
FadeOut(head, 0)
FadeOut(handle, 0)
FadeOut(ointment, 0)
FadeOut(fog, 0)

monkeyKing = SmoothPhaseSpawnActor(monkeyKingCreatureID, locX, locY, locZ, 248.111, 1, true)
PlayLoopingSplitBodyAnim( monkeyKing, Animations.SitGround)

SendTrigger(""Smooth Phase Complete"")

Wait(1)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70409) 
Wait(1)
SendTrigger(""mallet - fade in"")
Wait(4)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70410) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70411) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70412) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70413) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70414) 
SendTrigger(""mallet - shatter"")
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70415) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70416) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70417) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70418) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70419) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 70420) 
SendTrigger(""fog - Fade"")
Wait(5)
SendTrigger(""monkeyKing - Sit"")
Wait(3)
scene:EndScene()
"
9393,Krasarang Wilds 5.1: zto - Monkey King - Mallet - MonkeyKing,"WaitForTrigger(""Smooth Phase Complete"")
StopLoopingSplitBodyAnim( monkeyKing, Animations.SitGround)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.SitGroundUp)
Wait(1.7)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalk)
Wait(3)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalkQuestion)
Wait(3.8)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalk)
Wait(3)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalkQuestion)
Wait(3.8)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalk)
Wait(3)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalkQuestion)
Wait(3.8)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalk)
Wait(3)
PlayOneShotSplitBodyAnim(monkeyKing, Animations.EmoteTalkQuestion)
Wait(3.8)


WaitForTrigger(""monkeyKing - Sit"")
PlayOneShotSplitBodyAnim(monkeyKing, Animations.SitGroundDown)
Wait(1.7)
PlayLoopingSplitBodyAnim(monkeyKing, Animations.SitGround)
"
9394,Krasarang Wilds 5.1: zto - Monkey King - Mallet - mallet,"WaitForTrigger(""mallet - fade in"")
mallet:Fade( 0.75, 2 )

WaitForTrigger(""mallet - shatter"")
CastSpellAtActor(bunny, bunny, shatterSpellID)
FadeOut(mallet, .5 )
"
9395,Krasarang Wilds 5.1: zto - Monkey King - Mallet - handle,"WaitForTrigger(""mallet - shatter"")

handle:Fade( 0.75, .5)
handle:SetFacingToAbs(Vector:New(-1102.61, -1221.69, 26.2786))
handle:MoveToRel(Vector:New(-1, 1, 0), 1)"
9396,Krasarang Wilds 5.1: zto - Monkey King - Mallet - head,"WaitForTrigger(""mallet - shatter"")

head:Fade( 0.75, .5)
head:MoveToRel(Vector:New(-1, 1, 0), 1)"
9397,Kun-Lai Summit 5.1 - Alliance - The Divine Bell - Init - HMC,"-- spawn sentinel
sentinelCreatureID = 68612
sentinel1 = SpawnActor( sentinelCreatureID, 4331.36, 2818.34, 54.5582, 310.285, 1, false )
sentinel2 = SpawnActor( sentinelCreatureID, 4314.77, 2780.27, 54.5582, 8.2008, 1, false )
sentinel3 = SpawnActor( sentinelCreatureID, 4312.04, 2774.11, 54.5582, 11.3507, 1, false )
sentinel4 = SpawnActor( sentinelCreatureID, 4350.85, 2832.13, 54.5582, 273.251, 1, false )
sentinel5 = SpawnActor( sentinelCreatureID, 4359.78, 2830.62, 54.5582, 264.657, 1, false )
"
9398,Kun-Lai Summit 5.1 - The Divine Bell - Alliance - Sentinel 1 - HMC,"RunToLocation(sentinel1, 3, 4349.01, 2798.5, 54.5582, 307.451, false)"
9399,Kun-Lai Summit 5.1 - The Divine Bell - Alliance - Master - HMC,"Wait(180)
scene:EndScene()"
9400,Kun-Lai Summit 5.1 - The Divine Bell - Alliance - Sentinel 5 - HMC,"Wait(1)
RunToLocation(sentinel5, 3, 4356.27, 2803, 54.5582, 259.257, false)"
9401,Kun-Lai Summit 5.1 - The Divine Bell - Alliance - Sentinel 2 - HMC (copy),"Wait(2)
RunToLocation(sentinel2, 3, 4340.89, 2785.24, 54.5582, 13.3758, false)"
9402,Kun-Lai Summit 5.1 - The Divine Bell - Alliance - Sentinel 3 - HMC (copy),"Wait(1)
RunToLocation(sentinel3, 3, 4340.18, 2780.63, 54.5582, 32.5006, false)"
9403,Kun-Lai Summit 5.1 - The Divine Bell - Alliance - Sentinel 4 - HMC (copy),"Wait(1)
RunToLocation(sentinel4, 3, 4352.81, 2806.41, 54.5582, 274.376, false)"
9404,Krasarang Wilds 5.1: zto - Monkey King - Mallet - fog,"WaitForTrigger(""mallet - fade in"")
fog:Fade( 0.75, 2 )

WaitForTrigger(""fog - Fade"")
FadeOut(fog, .5 )
"
9405,Warlock - Cataclysm Precast,radius = 10;
9406,Warlock - Cataclysm Precast - MF,radius = 22.5;
9409,Kun-Lai Summit 5.1 - Finale - Horde - Init - HMC,"-- spawn Garrosh
garroshCreatureID = 68882
garrosh = SpawnActor( garroshCreatureID, 4279.17, 1337.99, 457.325, 177.944, 1, false )


-- spawn Anduin
anduinCreatureID = 68881
anduin = SpawnActor( anduinCreatureID, 4286.64, 1334.25, 457.352, 71, 1, false )

-- spawn Bell
bellModel = ""world\\expansion04\\doodads\\mogu\\mogu_divinebell_snowy.m2""
divinebell = SpawnModelActor( bellModel, 4291.81, 1337.6, 457.361, 356.11, 2, false )

-- spawn Sha FX
shaFXModel = ""world\\expansion04\\doodads\\mogu\\pa_moguraid_ext_sha_fxwrap.m2""
shaFX = SpawnModelActor( shaFXModel, 4280.57, 1337.97, 457.15, 177.6, 1, false )

-- spawn Bell Bunny
bellBunnyCreatureID = 68918
bellBunny1 = SpawnActor( bellBunnyCreatureID, 4291.82, 1337.7, 458.34, 0, 1, false )
bellBunny2 = SpawnActor( bellBunnyCreatureID, 4291.82, 1337.7, 459, 0, 1, false )

-- spawn sparkle Bunny 1
sparkleBunnyCreatureID = 62026
sparkleBunnyArray = SpawnActorsAtPoints( sparkleBunnyCreatureID, 4967, true)

-- spawn earthCleave Bunny
earthBunnyCreatureID = 62026
earthBunnyArray = SpawnActorsAtPoints( earthBunnyCreatureID, 4970, true)

-- spawn sha Bunny
shaBunnyCreatureID = 62026
shaBunnyArray = SpawnActorsAtPoints( shaBunnyCreatureID, 4971, true)

-- TEXT
garroshText1 = 69558
garroshText2 = 71301
garroshText3 = 69560

anduinText1 = 69559
anduinText2 = 69561
anduinText3 = 69562

--- PATHS ---
garroshPath = 4894
garroshFlyPath = 4969
anduinPath = 4966


-- BACKGROUND ACTORS --
korkronCreatureID = 68880
korkron1 = SpawnActor( korkronCreatureID, 4250.87, 1363.71, 457.102, 311.581, 1, false )
korkron2 = SpawnActor( korkronCreatureID, 4252.56, 1365.24, 457.102, 309.579, 1, false )
korkron3 = SpawnActor( korkronCreatureID, 4254.33, 1366.76, 457.102, 312.643, 1, false )
korkron4 = SpawnActor( korkronCreatureID, 4255.99, 1368.4, 457.102, 312.643, 1, false )
korkron5 = SpawnActor( korkronCreatureID, 4257.58, 1369.94, 457.102, 312.643, false )
korkron6 = SpawnActor( korkronCreatureID, 4259.24, 1371.49, 457.102, 312.643, 1, false )

korkron7 = SpawnActor( korkronCreatureID, 4301.27, 1370.8, 457.102, 212.98, 1, false )
korkron8 = SpawnActor( korkronCreatureID, 4302.85, 1369.21, 457.102, 212.98, 1, false )
korkron9 = SpawnActor( korkronCreatureID, 4304.44, 1367.48, 457.102, 212.98, 1, false )
korkron10 = SpawnActor( korkronCreatureID, 4306.05, 1365.86, 457.102, 212.98, 1, false )
korkron11 = SpawnActor( korkronCreatureID, 4307.61, 1363.91, 457.102, 212.98, 1, false )
korkron12 = SpawnActor( korkronCreatureID, 4309.25, 1362.21, 457.102, 212.98, 1, false )
korkron13 = SpawnActor( korkronCreatureID, 4311.01, 1360.28, 457.102, 212.98, 1, false )

korkron14 = SpawnActor( korkronCreatureID, 4317.79, 1344.89, 457.102, 172.928, 1, false )
korkron15 = SpawnActor( korkronCreatureID, 4317.57, 1342.55, 457.102, 172.928, 1, false )
korkron16 = SpawnActor( korkronCreatureID, 4317.5, 1340.1, 457.102, 172.928, 1, false )
korkron17 = SpawnActor( korkronCreatureID, 4317.35, 1337.4, 457.102, 172.928, 1, false )
korkron18 = SpawnActor( korkronCreatureID, 4317.24, 1334.9, 457.102, 172.928, 1, false )
korkron19 = SpawnActor( korkronCreatureID, 4317.03, 1332.36, 457.102, 172.928, 1, false )
korkron20 = SpawnActor( korkronCreatureID, 4316.93, 1329.77, 457.102, 172.928, 1, false )
korkron21 = SpawnActor( korkronCreatureID, 4316.74, 1327.01, 457.102, 172.928, 1, false )

korkron22 = SpawnActor( korkronCreatureID, 4311.19, 1315.86, 457.102, 131.9, 1, false )
korkron23 = SpawnActor( korkronCreatureID, 4309.18, 1314.11, 457.102, 131.9, 1, false )
korkron24 = SpawnActor( korkronCreatureID, 4307.32, 1312.47, 457.102, 131.9, 1, false )
korkron25 = SpawnActor( korkronCreatureID, 4305.52, 1310.69, 457.102, 131.9, 1, false )
korkron26 = SpawnActor( korkronCreatureID, 4303.65, 1309.12, 457.102, 131.9, 1, false )
korkron27 = SpawnActor( korkronCreatureID, "
9410,Kun-Lai Summit 5.1 - Finale - Horde - Master - HMC,"local cameraGarrosh = 506
local cameraAnduin = 505
local cameraCenter = 504
--local musichandle = nil

--scene:SetCamera(cameraGarrosh,3,nil,nil)
scene:SetFadeRegion(300, false)
scene:AddFadeRegionExcludedCreature(68225)
scene:AddFadeRegionExcludedCreature(68936)

WaitForTrigger(""smoothPhaseComplete"")
--musichandle = korkron1:PlayMusic(34896)
Wait(2)
SendTrigger(""1garrosh1"")
Wait(9)
SendTrigger(""2anduin1"")

WaitForTrigger(""EndScene"")
--musichandle:Stop()
scene:EndScene()"
9411,Kun-Lai Summit 5.1 - Finale - Horde - Garrosh - HMC,"WaitForTrigger(""smoothPhaseComplete"")

Wait(1)
garrosh:SetFacing(357.944)
WaitForTrigger( ""1garrosh1"" )
garrosh:BroadcastTextStereo(BroadcastType.Say, garroshText1)
PlayOneShotSplitBodyAnim( garrosh, Animations.EmoteTalkExclamation )
Wait(3)
PlayOneShotSplitBodyAnim( garrosh, Animations.EmotePoint )

-- Garrosh runs up 
WaitForTrigger(""garroshRunUp"")
--garrosh:BroadcastTextStereo(BroadcastType.Say, garroshText2)
--PlayOneShotSplitBodyAnim( garrosh, Animations.BattleRoar )
--garrosh:FollowPathAtSpeed(garroshPath, 8, true)
--garrosh:WaitMovementComplete()
--garrosh:PlayLoopingAnimKit(1977) -- ready 1h
SendTrigger(""5ShowNoMercy"")

-- Garrosh is knocked back
--WaitForTrigger(""6RadiantBlast"")
--garrosh:SetFacingToAbs(Vector:New(4289.02, 1341.63, 457.436))
--garrosh:FollowPathAtSpeed(garroshFlyPath, 10, true)
--garrosh:PlayAnimKit(3504, false, Animations.None) -- knockdown
--garrosh:PlaySoundKit( 34763, true )
-- new
WaitForTrigger(""4StartSparkles"")
garrosh:PlaySpellImpactVisual(16347)
garroshAura = garrosh:PlaySpellStateVisual(29798)
--Wait(3)
garrosh:PlayAnimKit(1567, true, Animations.None) -- stun
Wait(4)
Wait(10)

-- Garrosh charges Anduin
garrosh:StopAnimKit(1977) -- stop ready 1h anim
garrosh:StopAnimKit(1567) -- stop stun anim
garrosh:ClearFacing()
garrosh:ClearSpellVisual( garroshAura)
PlayOneShotSplitBodyAnim( garrosh, Animations.BattleRoar )
garrosh:BroadcastTextStereo(BroadcastType.Say, garroshText3)
Wait(2)
garrosh:FollowPathAtSpeed(garroshPath, 12, true)
garrosh:WaitMovementComplete()
garrosh:PlayAnimKit(3505, true, Animations.None)
SendTrigger(""earthCleave"")
Wait(2)
-- camera shakes
local sceneOrigin = Vector:New(4285.74, 1337.7, 457.36)
local shakeY 
local shakeZ
if Scene.AddCameraShake then
	shakeY = scene:AddCameraEffect(44, sceneOrigin, nil, 1)
	shakeZ = scene:AddCameraEffect(45, sceneOrigin, nil, 1)
end
-- send trigger
SendTrigger(""8BellErupts"")


--[[

-- Garrosh runs up and says ""I will show no mercy!""
WaitForTrigger(""4AnduinHitBell"")
garrosh:BroadcastTextStereo(BroadcastType.Say, garroshText2)
Wait(3)
garrosh:FollowPathAtSpeed(garroshPath, 4, true)
garrosh:WaitMovementComplete()
garrosh:PlayLoopingAnimKit(1977) -- ready 1h
Wait(1)
SendTrigger(""5ShowNoMercy"")


WaitForTrigger( ""garrosh2"" )
garrosh:BroadcastTextStereo(BroadcastType.Say, garroshText2)

SendTrigger(""killAnduin"")
garrosh:PlayAnimKit(3488, false, Animations.None)
Wait(2)
garrosh:PlaySpellImpactVisual(29657)
Wait(2)
garrosh:PlayLoopingAnimKit(1977)
]]--"
9412,Kun-Lai Summit 5.1 - Finale - Horde - Anduin - HMC,"WaitForTrigger(""smoothPhaseComplete"")

anduin:SetFacing(165)
WaitForTrigger( ""2anduin1"" )
anduin:BroadcastTextStereo(BroadcastType.Say, anduinText1 )
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
Wait(3)
-- run to bell
anduin:FollowPathAtSpeed(anduinPath, 6, true)
anduin:WaitMovementComplete()
anduin:SetFacing(357.944)
-- hit the bell
Wait(1)
anduin:PlayAnimKit(3501, false, Animations.None)
Wait(1)
-- bell radiates light --
SendTrigger(""3radianceStart"")
Wait(1)
auraInstanceID6 = anduin:PlaySpellStateVisual(29785)
Wait(3)
SendTrigger(""garroshRunUp"")


-- anduin casts hola nova backward
WaitForTrigger(""5ShowNoMercy"")
-- anduin turns to Garrosh and gives shpiel about bell
anduin:SetFacing(176.879)
Wait(1)
--anduin:PlaySpellCastVisual(29786) -- play holy nova
SendTrigger(""6RadiantBlast"")
Wait(1)
anduin:BroadcastTextStereo(BroadcastType.Say, anduinText2)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )

-- anduin falls
WaitForTrigger(""8BellErupts"")
anduin:ClearSpellVisual( auraInstanceID6)
anduin:StopAnimKit(3018)
--anduin:PlayAnimKit(2064, false, Animations.None) -- kneel
anduin:PlayAnimKit(730, false, Animations.None) -- kneel



--[[ OLD --
-- Anduin blood splatter
anduin:PlaySpellImpactVisual(29658)
Wait(1)

-- Anduin is knocked back
anduin:SetFacingToAbs(Vector:New(4287.33, 1337.74, 457.361))
anduin:PlayAnimKit(3411, false, Animations.None)
anduin:FollowPathAtSpeed(anduinPath, 6, true)
Wait(1)
anduin:StopAnimKit(3411)
anduin:PlayAnimKit(1666, true, Animations.None)
Wait(2)

-- Anduin's overcome by Sha
auraInstanceID1 = anduin:PlaySpellStateVisual(29661)
--Wait(2)
anduin:BroadcastTextStereo(BroadcastType.Say, anduinText3)
Wait(6)

-- Anduin's Eyes Glow
auraInstanceID = anduin:PlaySpellStateVisual(29664)

Wait(5)

-- Anduin hits the Bell
anduin:PlayAnimKit(3461, false, Animations.None)
Wait(3)
SendTrigger(""radianceStart"")

-- Anduin goes back to struggling
anduin:StopAnimKit(3461)
anduin:PlayAnimKit(1666, true, Animations.None)


-- Anduin Dead --
WaitForTrigger(""bellExplosion"")
anduin:PlayAnimKit(730, false, Animations.None)]]--"
9413,Kun-Lai Summit 5.1 - Finale - Horde - Bell Bunny 1 - HMC,"WaitForTrigger(""smoothPhaseComplete"")

-- play Sha Ripple Effect
auraInstanceID2 = bellBunny1:PlaySpellStateVisual(29629)


WaitForTrigger( ""3radianceStart"" )
--- RADIANCE STARTS ---
PlayOneShotSplitBodyAnim( divinebell, Animations.Custom2 ) -- bell rings - radiance impact 1x
bellBunny1:PlaySpellImpactVisual(29669)
bellBunny1:PlaySoundKit( 34387, true )
bellBunny1:ClearSpellVisual( auraInstanceID2)
auraInstanceID3 = bellBunny1:PlaySpellStateVisual(29666) -- play radiance 1x
Wait(2)
bellBunny1:PlaySpellImpactVisual(29670) -- radiance impact 2x
-- play radiance 2x
auraInstanceID5 = bellBunny1:PlaySpellStateVisual(29667)
Wait(1)
bellBunny1:PlaySpellCastVisual(29786) -- play holy nova
SendTrigger(""4StartSparkles"")
Wait(7)
SendTrigger(""4AnduinHitBell"")

WaitForTrigger(""9Explosion"")
Wait(1)
PlayOneShotSplitBodyAnim( divinebell, Animations.Open )
--PlayOneShotSplitBodyAnim( divinebellCollision, Animations.Close )
bellBunny1:PlaySoundKit( 34386, true )
bellBunny1:ClearSpellVisual( auraInstanceID3)
bellBunny1:ClearSpellVisual( auraInstanceID5)
Wait(3)
FadeOut(divinebell, 5)
Wait(1)
SendTrigger(""EndScene"")



--[[
-- PLAY DESTRUCTION VISUALS --
bellBunny:PlaySpellImpactVisual(29674)
Wait(2)
SendTrigger(""bellExplosion"")

-- DESTROY BELL --
PlayOneShotSplitBodyAnim( divinebell, Animations.Open )
Wait(4)
PlayLoopingSplitBodyAnim( divinebell, Animations.Opened )


--- SHA STARTS ---
-- radiance impact 1x
bellBunny:PlaySpellImpactVisual(29628)
-- play radiance 1x
auraInstanceID4 = bellBunny:PlaySpellStateVisual(29629)

Wait(2)
]]--"
9414,Krasarang Wilds 5.1 - Alliance Epilogue - Init - HMC,"-- spawn Varian
varianCreatureID = 68921
varian = SpawnActor( varianCreatureID, -1115.41, -1183.99, 21.7244, 120.598, 1, false )

-- spawn Jaina
jainaCreatureID = 68922
jaina = SpawnActor( jainaCreatureID, -1115.72, -1181.38, 21.7245, 128.285, 1, false )


-- TEXT --

varianText1 = 69637
varianText2 = 69639
varianText3 = 69641
varianText4 = 71017
varianText5 = 71018
varianText6 = 71019
varianText7 = 71020

jainaText1 = 69638
jainaText2 = 69640
jainaText3 = 71016

-- PATHS
varianPath1 = 4897
varianPath2 = 4898
jainaPath1 = 4899
jainaPath2 = 4900"
9415,Krasarang Wilds 5.1 - Alliance Epilogue - Master - HMC,"
WaitForTrigger(""endScene"")
scene:EndScene()"
9416,Krasarang Wilds 5.1 - Alliance Epilogue - Varian - HMC,"local musichandle = nil
local musichandle2 = nil

Wait(3)
varian:BroadcastTextStereo(BroadcastType.Say, varianText1)
musichandle = varian:PlayMusic(34936)
varian:FollowPathAtSpeed(varianPath1, 3, true)
varian:WaitMovementComplete()

WaitForTrigger(""jainaRuns"")
Wait(1)

-- 'Anduin, what were you thinking?' --
varian:FollowPathAtSpeed(varianPath2, 6, true)
varian:WaitMovementComplete()
varian:SetFacing(194.307)
varian:BroadcastTextStereo(BroadcastType.Say, varianText2)
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalkQuestion )
Wait(7)
SendTrigger(""varianText2"")

-- 'Send for Velen!' --
WaitForTrigger(""jainaText2"")
varian:BroadcastTextStereo(BroadcastType.Say, varianText3)
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalkExclamation )
Wait(4)
SendTrigger(""varianText3"")
Wait(2)

-- 'Jaina-' --
WaitForTrigger(""jainaText3"")
Wait(2)
varian:BroadcastTextStereo(BroadcastType.Say, varianText4)

-- Wait for Jaina to teleport --
Wait(4)

-- Stand --
varian:BroadcastTextStereo(BroadcastType.Say, varianText5)
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalk )
Wait(10)
varian:BroadcastTextStereo(BroadcastType.Say, varianText6)
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalk )
Wait(8)
varian:BroadcastTextStereo(BroadcastType.Say, varianText7)
musichandle:Stop()
musichandle2 = varian:PlayMusic(34898)
Wait(2)

-- Kneel --
varian:PlayAnimKit(2312, true, Animations.None)
Wait(38)
musichandle2:Stop()
Wait(22)
SendTrigger(""endScene"")"
9417,Krasarang Wilds 5.1 - Alliance Epilogue - Jaina - HMC,"Wait(3)
jaina:FollowPathAtSpeed(jainaPath1, 3, true)
jaina:WaitMovementComplete()

-- 'Anduin!'
jaina:BroadcastTextStereo(BroadcastType.Say, jainaText1)
SendTrigger(""jainaRuns"")
jaina:FollowPathAtSpeed(jainaPath2, 7, true)
jaina:WaitMovementComplete()
jaina:SetFacing(231.17)
jaina:PlayAnimKit(2312, true, Animations.None)

-- 'His bones are broken...' --
WaitForTrigger(""varianText2"")
jaina:BroadcastTextStereo(BroadcastType.Say, jainaText2)
Wait(4)
SendTrigger(""jainaText2"")

-- 'My King, I promise you...' --
WaitForTrigger(""varianText3"")
jaina:StopAnimKit(2312)
jaina:SetFacing(291.86)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalkExclamation )
jaina:BroadcastTextStereo(BroadcastType.Say, jainaText3)
Wait(11)
SendTrigger(""jainaText3"")

-- Teleport Away --

--jaina:PlaySpellPreCastVisual(787)
--Wait(2)
--jaina:ClearSpellVisual( 0)
--jaina:PlaySpellCastVisual(786)
CastSpellAtActor( jaina, jaina, 62940, false)
Wait(3)
FadeOut( jaina,  2)"
9418,Dalaran 5.1: zto - Dalaran Rebellion - NYI,scene:EndScene()
9419,Shrine of Seven Stars 5.1 - What Had To Be Done - INIT - ZTO,"----------
-- Init --
----------

--Spells
summonPortalSpellID = 85322
teleportSpellID = 51347

--Creatures and Models
varianCreatureID = 68690
jainaCreatureID = 68609
bunnyCreatureID = 62026
anduinCreatureID = 68106
portalModelID = ""World\\Generic\\ActiveDoodads\\SpellPortals\\MagePortal_Dalaran.mdx""

varian = SmoothPhaseSpawnActor (varianCreatureID, -1144.791626, -1172.703125, 22.966513, 26, 1, true)
jaina = SmoothPhaseSpawnActor (jainaCreatureID, -1139.085083, -1166.442749, 22.966513, 225, 1, true)
portal = SpawnModelActor ( portalModelID, -1129.46, -1163.39, 21.7211, 29.391, 1, true)
anduin = SmoothPhaseSpawnActor (anduinCreatureID, -1138.335083, -1174.862915, 22.956926, 118, 1, true)

--FadeOut(varian, 0)
FadeOut(portal, 0)

------------------------
-- Master Action List --
------------------------
Wait(1)
jainaMusic = varian:PlayMusic(34893) --Jaina Music Start
varian:BroadcastTextStereo(BroadcastType.Say, 69619) -- VO Line 1 - ""Has there been an attack?""
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalkExclamation )
Wait(2)
SendTrigger(""varian - cue 1"")
varian:PlayOneShotAnimKit(1521)
--varian:WaitBroadcastSoundComplete()
Wait(2)
Wait(1)

jaina:BroadcastTextStereo(BroadcastType.Say, 69620) -- VO Line 2 - ""Kirin Tor betrayed""
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(5)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

varian:BroadcastTextStereo(BroadcastType.Say, 69621) -- VO Line 3 - ""How?""
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalkQuestion )
Wait(1)
--varian:WaitBroadcastSoundComplete()
Wait(.5)

jaina:BroadcastTextStereo(BroadcastType.Say, 69622) -- VO Line 4 - ""Purge""
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(7)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

varian:BroadcastTextStereo(BroadcastType.Say, 69624) -- VO Line 5 - ""But you said..""
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalk )
Wait(1)
--varian:WaitBroadcastSoundComplete()
--Wait(.5)

jaina:BroadcastTextStereo(BroadcastType.Say, 69623) -- VO Line 6 - ""I know what I said...""
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(4)
--jaina:WaitBroadcastSoundComplete()
Wait(1)

jainaMusic:Stop()
jainaMusic = varian:PlayMusic(34894) --Jaina Music part 2 Start
SendTrigger(""Music Wait"")
varian:BroadcastTextStereo(BroadcastType.Say, 69625) -- VO Line 7 - ""What of the Sin'dorei - the Sunreavers?""
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalkQuestion )
Wait(3)
--varian:WaitBroadcastSoundComplete()
Wait(.5)

jaina:BroadcastTextStereo(BroadcastType.Say, 69626) -- VO Line 8 - ""Violet Hold""
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(6)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

varian:BroadcastTextStereo(BroadcastType.Say, 69627) -- VO Line 9 - ""Jaina, you need to talk to me before you act-""
PlayOneShotSplitBodyAnim( varian, Animations.EmotePoint )
Wait(2)
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalk )
Wait(2)
--varian:WaitBroadcastSoundComplete()
--Wait(.5)

jaina:BroadcastTextStereo(BroadcastType.Say, 69628) -- VO Line 10 - ""How I run the Kirin Tor is my business.""
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(2)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

varian:BroadcastTextStereo(BroadcastType.Say, 69629) -- VO Line 11 - ""I was trying to negotiate with the Sin'dorei""
PlayLoopingSplitBodyAnim( varian, Animations.EmoteTalk )
Wait(8)
--varian:WaitBroadcastSoundComplete()
StopLoopingSplitBodyAnim( varian, Animations.EmoteTalk )
--Wait(.5)

jaina:BroadcastTextStereo(BroadcastType.Say, 69630) -- VO Line 12 - ""They chose their own path.""
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(3)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

"
9421,[1] Warlock - Cataclysm Precast Scene,"time - v.spawnTime >= burstLifespan or time >= maxTime -  burstLifespan ) then
					v:Despawn();
					table.remove(bursts, i);
				end
			end
		end
	end

	if ( time >= 2.5 and explosionBlown == false ) then 
		explosionBlown = true;
		--explosionActor = scene:SpawnActor(explosionCreateData);
		--explosionActor:PlayLoopingAnimKit(STAND_HOLD_DECAY_KIT_ID);
	end
end

scorchedEarth:Despawn();
 
scorchedEarth:StopAnimKit(STAND_HOLD_DECAY_KIT_ID);
scorchedEarth:WaitAnimKitComplete(kit);
 
scene:WaitTimer(2);
"
9422,Silvermoon 5.1: zto - One Last Grasp - Init,"----------------------
-- Helper Functions --
----------------------

function refugeeStance( actor )
	local emoteArray = { 
		Animations.Sleep;
		Animations.Stand;
		Animations.SitGround;
		Animations.KneelLoop;
	}
	local emoteSomething = emoteArray[math.random(#emoteArray)]
	PlayLoopingSplitBodyAnim( actor, emoteSomething )
end

-------------------------
--Scene Points & Paths --
-------------------------
refugeeSpawnPoint = 4923
refugeeSpawnerPoint = 4924

------------
-- Spells --
------------
teleportSpell = 51347

--------------
--Characters--
--------------

refugee1CreatureID = 68613
refugee2CreatureID = 68766
refugee3CreatureID = 68978
silvermoonGuardCreatureID = 51796
--divineBellModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\Mogu_DivineBell.M2""
portalModelID = ""World\\Generic\\ActiveDoodads\\SpellPortals\\MagePortal_Dalaran.mdx""
tableModelID = ""WORLD\\EXPANSION01\\DOODADS\\GENERIC\\BLOODELF\\BENCHES\\BE_Bench01.m2""
bunnyCreatureID = 62026

lorthemarCreatureID = 68084
halduronCreatureID = 16801
aethasCreatureID = 30116
rommathCreatureID = 16800


--refugeesA = SpawnActorsAtPoints ( refugee1CreatureID, 4923, 1, true )
--guards = SpawnActorsAtPoints ( silvermoonGuardCreatureID, 4925, 1, true )
--refugeesC = SpawnActorsAtPoints ( refugee3CreatureID, 4926, 1, true )
--divineBell = SpawnModelActor ( divineBellModelID, 9833.22, -7267.85, 26.1817, 191.906, 2, true)
portals = SpawnModelActorsAtPoints ( portalModelID, 4924, 1, true )

lorthemar = SmoothPhaseSpawnActor (lorthemarCreatureID, 9820.831055, -7261.232910, 26.175354, 226, 1, true)
halduron = SmoothPhaseSpawnActor (halduronCreatureID, 9817.772461, -7256.824707, 26.178864, 267, 1, true)
aethas = SmoothPhaseSpawnActor (aethasCreatureID, 9815.26, -7267.02, 26.2364, 46.459, 1, true)
rommath = SmoothPhaseSpawnActor (rommathCreatureID, 9815.26, -7267.02, 26.2364, 46.459, 1, true)

table = SpawnModelActor (tableModelID, 9820.66, -7255.25, 26.1533, 214.301, 1, false)

splashBunny = SpawnActor(bunnyCreatureID, 9827.83, -7248.18, 27.1063, 216.325, 1, false)

FadeOut(aethas, 0)
FadeOut(rommath, 0)

--[[Random emotes for refugees
for i=1, #refugeesA do
	refugeeStance( refugeesA[i] )
end

--Set emotes for guards
for i=1, #guards do
	PlayLoopingSplitBodyAnim( guards[i], Animations.Ready1H )
end

--Set Emotes for other Random refugees
for i=1, #refugeesC do
	refugeeStance( refugeesC[i] )
end
]]--

SendTrigger(""Smooth Phase Complete"")

--------------
--Cue Action--
--------------

Wait(1)
lorthemar:BroadcastTextStereo(BroadcastType.Yell, 69642) -- VO Line 1
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalkExclamation )
Wait(2)
--lorthemar:WaitBroadcastSoundComplete()
Wait(.5)

aethas:BroadcastTextStereo(BroadcastType.Say, 69643) -- VO Line 2
PlayOneShotSplitBodyAnim( aethas, Animations.EmoteTalk )
Wait(7)
--aethas:WaitBroadcastSoundComplete()
Wait(.5)

lorthemar:BroadcastTextStereo(BroadcastType.Say, 69644) -- VO Line 3
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalkQuestion )
Wait(5)
--lorthemar:WaitBroadcastSoundComplete()
Wait(.5)

aethas:BroadcastTextStereo(BroadcastType.Say, 69645) -- VO Line 4 - ""Proudmoore, she's blah blah blah""
aethas:PlayOneShotAnimKit( 1530 )
Wait(2)
aethas:PlayOneShotAnimKit( 1530 )
--aethas:WaitBroadcastSoundComplete()
Wait(6)
Wait(1)

--Angry lorthemar
lorthemar:BroadcastTextStereo(BroadcastType.Say, 69646) -- VO Line 5 - Table Flipper
SendTrigger(""lorthemar - pace"")
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
Wait(5)
SendTrigger(""lorthemar - cross to table"")
--lorthemar:WaitBroadcastSoundComplete()
Wait(3)
Wait(1)

lorthemar:BroadcastTextStereo(BroadcastType.Say, 69647) -- VO Line 6 - ""When will they learn!""
Wait(6)
"
9423,Scenario - A Little Patience - Init - JSB,"
-- spawn scargash
local scargashCreatureID = 69025
scargash = SpawnActor( scargashCreatureID, -1707.53, 1052.73, 29.5189, 0, 1.0, true )

-- spawn sentries
local sentryCreatureID = 68477
sentry01 = SpawnActor( sentryCreatureID, -1738.64, 1045.79, 29.603, 4.46576, 1.0, true )
sentry02 = SpawnActor( sentryCreatureID, -1738.91, 1060.52, 29.603, 350.48, 1.0, true )
sentry03 = SpawnActor( sentryCreatureID, -1686.27, 1066.45, 29.505, 354.87, 1.0, true )
sentry04 = SpawnActor( sentryCreatureID, -1686.19, 1040.22, 29.4046, 1.71957, 1.0, true )




-- spawn varian
local varianCreatureID = 69026
varian = SpawnActor( varianCreatureID, -1081.22, 1157.52, 16.5717, 47.9853, 1.0, true )

-- spawn tyrande
local tyrandeCreatureID = 68842
tyrande = SpawnActor( tyrandeCreatureID, -1077.66, 1161.11, 16.3741, 212.91, 1.0, true )


-- spawn clone
local cloneCreatureID = 61833
clone = SpawnActivePlayerCloneActor( -1083.76, 1197.04, 16.7024, 278.338, 1.0, false )
-- end

"
9426,Scenario - A Little Patience - MASTER - JSB,"
scene:SetFadeRegion(10, true) -- (radius, fadeActivePlayer)


-- Wait( 1 )
scene:SetCamera(507,0,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 4 )

scene:SetCamera(508,5,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 2 ) 

SetCameraFollowPath( 368, 4, 4916, 4917, 5 ) -- (camera, transition time, spline, target spline, duration)

Wait( 3 ) 

SetCameraFollowPath( 368, 3, 4918, 4919, 15 ) -- (camera, transition time, spline, target spline, duration)

Wait( 12 ) 

scene:SetCamera(509,18,nil,nil)

Wait( 13 )

FadeOut(clone, 0)

scene:SetCamera(510,8,nil,nil)

scene:SetFadeRegion(10, false) -- (radius, fadeActivePlayer)

Wait( 5 )

scene:SetCamera(0,5,nil,nil) -- sets camera back to game-cam

Wait( 4 )

scene:EndScene()

"
9427,Legendary 5.1 - Chapter 01 - Tavern Intro - Ally - Main,"-- Wrathion's Actions
local wrathionSpellTarget={Vector:New(825.461, -169.286, 415.262)}

-- Set Up and Spawn in Wrathion (Alliance)
wrathionID = 64616
wrathion = SmoothPhaseSpawnActor( wrathionID, 821.63, -163.648, 415.192, 241.546, 1, false ) 
SendTrigger(""wrathionSpawn"")
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Spawn in Sitting
wrathion:PlaySoundKitStereo(34904, true) -- BEGIN MUSIC (Old music was 33426)
Wait(1)
StopLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Stand Up
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 241.546, true ) --Feet on floor
Wait(1)

-- Here's Where He Begins Talking
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 281.371, true ) --Turn
Wait(.5)
wrathion:BroadcastText(BroadcastType.Say, 70329) -- ""Tong! Num nums! Nao!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(3)
RunToLocation( wrathion, 1, 823.412, -166.748, 415.262, 306.343, true ) --Walk to Wrynn
SendTrigger(""wrynnSpawn"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70330) -- ""Varian Wrynn! High King...""
Wait(3)
RunToLocation( wrathion, 1, 823.412, -166.748, 415.262, 147.494 ) --Turn in place
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 70331) -- ""Did you know...?""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(3)
SendTrigger(""wrynnTransform"")
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70332) -- ""Suffering from amnesia...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
RunToLocation( wrathion, 1, 826.407, -166.937, 415.262, 328.799 ) --Circling
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 70333) -- ""There, he earned the name Lo'Gosh...""
RunToLocation( wrathion, 1, 827.322, -168.387, 415.262, 302.249 ) --Circling
RunToLocation( wrathion, 1, 825.828, -170.82, 415.262, 228.225 ) --Circling
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
RunToLocation( wrathion, 1, 823.459, -171.035, 415.262, 143.4  ) --Facing Front
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 70334) -- ""He IS a fighter...""
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
RunToLocation( wrathion, 1, 822.093, -169.417, 415.262, 112.8  ) --Corner position
Wait(2)
RunToLocation( wrathion, 1, 822.093, -169.417, 415.262, 15.5998  ) --Face Wrynn
SendTrigger(""wrynnTransformBack"")
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(1)
wrathion:BroadcastText(BroadcastType.Say, 70335) -- ""Think about it!""
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
SendTrigger(""cataclysm"")
Wait(3.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
wrathion:BroadcastText(BroadcastType.Say, 70336) -- ""Horde soldiers thundered...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 70337) -- ""Varian Wrynn didn't take advantage...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(1)
SendTrigger(""endCataclysm"")
Wait(2.5)
RunToLocation( wrathion, 1, 823.821, -166.488, 415.262, 161.182 ) --Circle, face front
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(.5)
wrathion:BroadcastText(BroadcastType.Say, 70338) -- ""Weak? Or Principled?...""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
wrathion:BroadcastText(BroadcastType.Say, 70339) -- ""Bigger question:""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, "
9428,[1] Legendary 5.0 - Chapter 01 - Tavern Intro - Ally - Main,")
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 65099) -- ""This war has to end!...""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.7)

-- WRATHION SUPPORTS THE ALLIANCE! (If you play as Alliance...)
SendTrigger(""plantFlag"")
wrathion:BroadcastText(BroadcastType.Say, 65100) -- ""Yay, Alliance!""
RunToLocation( wrathion, 1, 823.287, -168.086, 415.262, 147.139 ) -- Move forward to center of room
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes )
Wait(3)

-- The Normal Script Resumes Here
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 65102) -- ""How do we bring a swift end...?""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(4)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 65103) -- ""We must ensure...""
Wait(1)
RunToLocation( wrathion, 1, 821.63, -163.648, 415.192, 241.546, false ) -- Walk back to seat
Wait(1)
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Sit back down
Wait(2)"
9429,Scenario - A Little Patience - Scargash - JSB,"Wait( 1 )

scargash:PlayOneShotAnimKit(1298)
scargash:PlaySoundKit( 34738, true )

Wait( 3 )

scargash:SetFacing(180)

Wait( 1 )

RunToLocation( scargash, 4, -1762.48, 1053.22, 29.5197, 180 )

Wait( 200 )"
9430,Scenario - A Little Patience - Tyrande - JSB,"
Wait( 10 )

tyrande:BroadcastTextStereo(BroadcastType.Say, 70299)

Wait( 12.5 )

tyrande:BroadcastTextStereo(BroadcastType.Say, 70300)
tyrande:PlayOneShotAnimKit(3481)

Wait( 10 )

tyrande:BroadcastTextStereo(BroadcastType.Say, 70301)
tyrande:PlayOneShotAnimKit(1201)

Wait( 3 )

tyrande:SetFacing(18)
Wait( 1 )
RunToLocation( tyrande, 3, -1063.72, 1174.23, 18.1518, 206.257 )"
9431,Scenario - A Little Patience - Varian - JSB,"
Wait( 15 )

varian:BroadcastTextStereo(BroadcastType.Say, 70261)

Wait( 11 )

varian:BroadcastTextStereo(BroadcastType.Say, 70262)
varian:PlayOneShotAnimKit(595)"
9432,Gather Nearest Bunnies,"local scenePos = scene:GetPosition()
local checkRadius = 40
local pathData = scene:LoadPath(4922)
local nearbyNodes = {}
local spellModel = ""SPELLS\\Magic_PreCast_Hand.M2""

for i = 1, #pathData.nodes do
	local thisNode = pathData.nodes[i]
	local thisPos = thisNode.pos
	local distance = Vector.Dist(thisPos, scenePos)
	if (distance < checkRadius) then
		table.insert(nearbyNodes, thisPos)
	end
end

for i=1, #nearbyNodes do
	local thisNode = nearbyNodes[i]
	local var = ((thisNode.x + thisNode.y)%10)*.2
	SpawnModelActor(spellModel, thisNode.x, thisNode.y, thisNode.z+(1+var), 0, 2, false)
end

Wait(.5)"
9433,Scenario - A Little Patience - Clone - JSB,"Wait( 15 )

RunToLocation( clone, 3, -1085.8, 1168.9, 16.8407, 289.139 )"
9434,Silvermoon 5.1: zto - One Last Grasp - lorthemar,"--Movements for Lor'themar
WaitForTrigger(""lorthemar - pace"")
lorthemar:FollowPathAtSpeed( 4931, 2 )
lorthemar:WaitMovementComplete()
lorthemar:SetFacing(36.7832)

WaitForTrigger(""lorthemar - cross to table"")
--lorthemar:SetFacing(36.7832)
--RunToLocation( lorthemar, 2, 9820.05, -7255.56, 26.1594, 35.5091, true)
--lorthemar:WaitMovementComplete()
PlayOneShotSplitBodyAnim( lorthemar, Animations.Loot)
Wait(.5)
PlayOneShotSplitBodyAnim( lorthemar, Animations.KneelLoop)
Wait(1.33)
SendTrigger(""table - flip"")
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteRoar)
Wait(1.75)
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalkExclamation)
Wait(.5)
lorthemar:SetFacing(241)
Wait(1.5)"
9435,[1] Silvermoon 5.1: zto - One Last Grasp - Init,"lorthemar:FollowPathAtSpeed( 4939, 2 )
Wait(5.5)
--lorthemar:WaitBroadcastSoundComplete()
Wait(.5)

aethas:BroadcastTextStereo(BroadcastType.Say, 69648) -- VO Line 7 - ""My Lord?""
SendTrigger(""aethas - standup"")
--lorthemar:FollowPathAtSpeed( 4939, 2 )
Wait(1)
--aethas:WaitBroadcastSoundComplete()
Wait(.5)

lorthemar:BroadcastTextStereo(BroadcastType.Say, 69649) -- VO Line 8 - Lorthemar starts issuing commands
--RunToLocation( lorthemar, 2, 9817.43, -7258.97, 26.1916, 82.4584, true)
--lorthemar:SetFacing(82.4584)
lorthemar:WaitMovementComplete()
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmotePoint )
Wait(2.67)
PlayOneShotSplitBodyAnim( halduron, Animations.EmoteSalute )
lorthemar:FollowPathAtSpeed( 4940, 2 )
--RunToLocation( lorthemar, 2, 9818.59, -7262.93, 26.1961, 286.384, true)
--lorthemar:SetFacing(286.384)
--lorthemar:WaitMovementComplete()
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmotePoint )
Wait(2.67)
PlayOneShotSplitBodyAnim( rommath, Animations.EmoteBow )
--lorthemar:WaitBroadcastSoundComplete()
Wait(2)
Wait(.5)

lorthemar:BroadcastTextStereo(BroadcastType.Say, 69650) -- VO Line 9 - ""We Sindorei will take our future into our own hands
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
Wait(5)
--lorthemar:WaitBroadcastSoundComplete()
Wait(.5)

lorthemar:BroadcastTextStereo(BroadcastType.Say, 69651) -- VO Line 10 - ""And get this damn thing out of my site
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalkExclamation )
--RunToLocation( lorthemar, 2, 9822.09, -7266.17, 26.1962, 357.484, true)
lorthemar:FollowPathAtSpeed( 4941, 2 )
SendTrigger(""cross"")
Wait(2)
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:WaitMovementComplete()
Wait(.5)
lorthemar:SetFacing(357.484)
Wait(5)
--lorthemar:WaitBroadcastSoundComplete()
Wait(.5)

rommath:BroadcastTextStereo(BroadcastType.Say, 69653) -- VO Line 11 - ""You would make a fine Warchief""
PlayOneShotSplitBodyAnim( rommath, Animations.EmoteTalk )
Wait(3)
--rommath:WaitBroadcastSoundComplete()
Wait(.5)

lorthemar:BroadcastTextStereo(BroadcastType.Say, 69654) -- VO Line 12 - ""Bring me my blades""
PlayOneShotSplitBodyAnim( lorthemar, Animations.EmoteTalk )
lorthemar:SetFacing(173.8)
Wait(2)
PlayOneShotSplitBodyAnim( aethas, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( aethas, Animations.EmoteTalk )
--lorthemar:WaitBroadcastSoundComplete()
Wait(4)
Wait(.5)
SendTrigger(""Dialogue Done"")

while true do
	Wait (300)
end

--scene:EndScene()"
9436,Silvermoon 5.1: zto - One Last Grasp - aethas,"WaitForTrigger(""Smooth Phase Complete"")

CastSpellAtActor( aethas, aethas, teleportSpell )
FadeIn(aethas, 2) 
Wait(1)
aethas:FollowPathAtSpeed( 4929, 2 )
PlayOneShotSplitBodyAnim( aethas, Animations.SpellKneelStart )
Wait(1)
PlayLoopingSplitBodyAnim( aethas, Animations.SpellKneelLoop )

WaitForTrigger(""aethas - standup"")
StopLoopingSplitBodyAnim( aethas, Animations.SpellKneelLoop )
PlayOneShotSplitBodyAnim( aethas, Animations.SpellKneelEnd )
aethas:PlayOneShotAnimKit( 1530 )

WaitForTrigger(""cross"")
aethas:SetFacingToAbs(Vector:New(9822.09, -7266.17, 26.1962))"
9437,Silvermoon 5.1: zto - One Last Grasp - rommath,"WaitForTrigger(""Smooth Phase Complete"")
Wait(1)
CastSpellAtActor( rommath, rommath, teleportSpell )
FadeIn(rommath, 2) 
Wait(1)
rommath:FollowPathAtSpeed( 4930, 2 )
rommath:SetFacing(78.3814)
--PlayOneShotSplitBodyAnim( rommath, Animations.SpellKneelStart )
--Wait(1)
--PlayLoopingSplitBodyAnim( rommath, Animations.SpellKneelLoop )


WaitForTrigger(""cross"")
rommath:SetFacingToAbs(Vector:New(9822.09, -7266.17, 26.1962))"
9438,Legendary 5.1 - Chapter 01 - Tavern Intro - Ally - Wrynn,"WaitForTrigger(""wrynnSpawn"")

-- King Wrynn's Actions
wrynnID = 55561
youngWrynnID = 68925
allyFlagID = 64818

-- King Wrynn appears. A spotlight shines down on him.
wrynn = SpawnActor( wrynnID, 824.696, -168.66, 415.262, 146.862, .65, true )
Wait(2)
local spotlight = wrynn:PlaySpellStateVisual(8156) -- Initiate spotlight

-- Wait until Wrathion talks about Wrynn as a Gladiator
WaitForTrigger(""wrynnTransform"")

-- Transform Wrynn into the young, gladiator version of himself
wrynn:PlaySpellCastVisual( 29723 )
youngWrynn = SpawnActor( youngWrynnID, 824.696, -168.66, 415.262, 146.862, 1.1, true )
local swords = youngWrynn:PlaySpellStateVisual(29718) -- Young Wrynn wears dual swords
FadeOut( wrynn, 1 )
youngWrynn:PlayLoopingAnimKit(3482)

-- Wrathion is done talking about pit-fighting. Young Wrynn disappears.
WaitForTrigger(""wrynnTransformBack"")
youngWrynn:PlaySpellCastVisual( 29723 )
youngWrynn:ClearSpellVisual( swords)
FadeIn( wrynn, 1 )
FadeOut( youngWrynn, 1 )

-- After the fire ends, Alliance flags appear
WaitForTrigger(""endCataclysm"")
Wait(2)
allyFlag1 = SpawnActor( allyFlagID, 826.284, -167.448, 415.262, 149.085, 1, true ) 
allyFlag2 = SpawnActor( allyFlagID, 824.485, -170.478, 415.262, 142.11, 1, true ) 
Wait(1)
allyFlag1:PlaySpellCastVisual( 27580 )
allyFlag2:PlaySpellCastVisual( 27580 )
Wait(4)
local patriot = wrynn:PlaySpellStateVisual(29727) -- Patriotic Pose!!

WaitForTrigger(""endWrynn"")
-- Clean everything up
wrynn:ClearSpellVisual( patriot)
Wait(1)
wrynn:ClearSpellVisual( spotlight)
Wait(2)
FadeOut( wrynn, 2 )
FadeOut( allyFlag1, 2 )
FadeOut( allyFlag2, 2 )


"
9439,Legendary 5.1 - Chapter 01 - Tavern Intro - Ally - Cataclysm,"-- Flames surround King Wrynn. Oh Noes!

--Bunnies for Effects
bunnyCreatureID = 62026
fire1 = SpawnActor( bunnyCreatureID, 826.284, -167.448, 415.262, 149.085, 1, false )
fire2 = SpawnActor( bunnyCreatureID, 826.466, -167.962, 415.262, 149.085, 1, false )
fire3 = SpawnActor( bunnyCreatureID, 826.472, -168.751, 415.262, 149.085, 1, false )
fire4 = SpawnActor( bunnyCreatureID, 826.215, -169.561, 415.262, 147.285, 1, false )
fire5 = SpawnActor( bunnyCreatureID, 825.423, -170.312, 415.262, 146.61, 1, false )
fire6 = SpawnActor( bunnyCreatureID, 824.485, -170.478, 415.262, 142.11, 1, false )
fire7 = SpawnActor( bunnyCreatureID, 823.584, -170.582, 415.262, 146.385, 1, false )
meteorTarget = SpawnActor( bunnyCreatureID, 829.795, -166.352, 415.21, 188.412, 1, false )
meteorShooter = SpawnActor( bunnyCreatureID, 824.04, -174.434, 421.931, 36.3114, 1, false )

-- Wait until Wrathion talks about the Cataclysm
WaitForTrigger(""cataclysm"")
local fireFX1 = fire1:PlaySpellStateVisual(29724)
local fireFX2 = fire2:PlaySpellStateVisual(29724)
local fireFX3 = fire3:PlaySpellStateVisual(29724)
local fireFX4 = fire4:PlaySpellStateVisual(29724)
local fireFX5 = fire5:PlaySpellStateVisual(29724)
local fireFX6 = fire6:PlaySpellStateVisual(29724)
local fireFX7 = fire7:PlaySpellStateVisual(29724)
Wait(1)
CastSpellAtActor( meteorShooter, meteorTarget, 135791, false )

-- Keep the flames going until Wrathion is satisfied
WaitForTrigger(""endCataclysm"")
fire1:ClearSpellVisual( fireFX1)
fire2:ClearSpellVisual( fireFX2)
fire3:ClearSpellVisual( fireFX3)
fire4:ClearSpellVisual( fireFX4)
fire5:ClearSpellVisual( fireFX5)
fire6:ClearSpellVisual( fireFX6)
fire7:ClearSpellVisual( fireFX7)
"
9440,Silvermoon 5.1: zto - One Last Grasp - table,"--Table Move parameters--
local moveData = MoveData:Default()

moveData.pathID = 4932
moveData.speed = 18
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = false

WaitForTrigger(""table - flip"")
table:Move( moveData )
table:WaitMovementComplete()
CastSpellAtActor( splashBunny, splashBunny, 92593) --Splash table
CastSpellAtActor( table, table, 134416) --Explode table
FadeOut( table, .5 )
"
9441,Silvermoon 5.1: zto - One Last Grasp - halduron,"WaitForTrigger(""cross"")
halduron:SetFacingToAbs(Vector:New(9822.09, -7266.17, 26.1962))"
9442,Silvermoon 5.1: zto - One Last Grasp - Static - Init,"----------------------
-- Helper Functions --
----------------------

function refugeeStance( actor )
	local emoteArray = { 
		Animations.Sleep;
		Animations.Stand;
		Animations.SitGround;
		Animations.KneelLoop;
	}
	local emoteSomething = emoteArray[math.random(#emoteArray)]
	PlayLoopingSplitBodyAnim( actor, emoteSomething )
end

-------------------------
--Scene Points & Paths --
-------------------------
refugeeSpawnPoint = 4923
refugeeSpawnerPoint = 4924

------------
-- Spells --
------------
teleportSpell = 51347

--------------
--Characters--
--------------

refugee1CreatureID = 68613
refugee2CreatureID = 68766
refugee3CreatureID = 68978
silvermoonGuardCreatureID = 51796
portalModelID = ""World\\Generic\\ActiveDoodads\\SpellPortals\\MagePortal_Dalaran.mdx""

refugeesA = SpawnActorsAtPoints ( refugee1CreatureID, 4923, 1, true )
guards = SpawnActorsAtPoints ( silvermoonGuardCreatureID, 4925, 1, true )
refugeesC = SpawnActorsAtPoints ( refugee3CreatureID, 4926, 1, true )
--portals = SpawnModelActorsAtPoints ( portalModelID, 4924, 1, true )

for i=1, #refugeesA do
	refugeeStance( refugeesA[i] )
end

--Set emotes for guards
for i=1, #guards do
	PlayLoopingSplitBodyAnim( guards[i], Animations.Ready1H )
end

--Set Emotes for other Random refugees
for i=1, #refugeesC do
	refugeeStance( refugeesC[i] )
end

Wait(600)

--while true do
--	Wait(3)
--end"
9443,Krasarang Wilds 5.1: zto -Rebuilding Mallet - INIT,"--Constants
currentLoc = scene:GetPosition()
locX = currentLoc.x
locY = currentLoc.y
locZ = currentLoc.z

--SpellCasts--
transformSpellID = 108142
shatterSpellID = 134416

--SpellStates--
handleStateID = 29512
headStateID = 29736
malletStateID = 29737

--INits - Creatures --
bunnyCreatureID = 62026
monkeyKingCreatureID = 61942
anduinCreatureID = 68106

--inits - Model IDs --
malletModelID = ""ITEM\\OBJECTCOMPONENTS\\WEAPON\\PA_CelestialMallet_2H.M2""
headModelID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\PA_CelestialMallet_Head.M2""
handleModelID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\PA_CelestialMallet_Shaft.M2""
ointmentModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\Mogu_pot_3.M2""
fogModelID = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""

-- Init Spawns--
mallet = SpawnModelActor(malletModelID, -1102.61, -1221.69, 26.2786, 180, 1, false)
head = SpawnModelActor(headModelID, -1102.61, -1221.69, 26.2786, 0, 1, false)
handle = SpawnModelActor(handleModelID, -1102.61, -1221.69, 26.2786, 180, 1, false)
ointment = SpawnModelActor(ointmentModelID, -1102.61, -1221.69, 26.2786, 0, 1, false)
bunny = SpawnActor(bunnyCreatureID, -1102.61, -1221.69, 26.2786, 0, 1, false)
fog = SpawnModelActor(fogModelID, -1102.44, -1220.06, 26.2786, 0, 1, false)

FadeOut(mallet, 0)
FadeOut(head, 0)
FadeOut(handle, 0)
FadeOut(ointment, 0)
FadeOut(fog, 0)

monkeyKing = SmoothPhaseSpawnActor(monkeyKingCreatureID, locX, locY, locZ, 248.111, 1, true)
anduin = SmoothPhaseSpawnActor( anduinCreatureID, -1101.52, -1222.99, 24.2805, 118.321, 1, true)
PlayLoopingSplitBodyAnim( monkeyKing, Animations.SitGround)

SendTrigger(""Smooth Phase Complete"")

Wait(1)
anduin:BroadcastTextStereo(BroadcastType.Say, 71043) 
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
Wait(1.8)
SendTrigger(""monkeyKing - assemble"")
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 71044) 
Wait(5)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 71045) 
Wait(5)
anduin:BroadcastTextStereo(BroadcastType.Say, 71046) 
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(2)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(2)
monkeyKing:BroadcastTextStereo(BroadcastType.Say, 71047) 
PlayOneShotSplitBodyAnim( monkeyKing, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.EmoteTalk )
Wait(3.8)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.EmoteTalk )
Wait(3.8)
SendTrigger(""monkeyKing - sit"")

WaitForTrigger(""scene - WrapUpReady"")

while true do
	Wait(300)
end"
9444,Krasarang Wilds 5.1: zto -Rebuilding Mallet - MonkeyKing,"WaitForTrigger(""monkeyKing - assemble"")
local handle = monkeyKing:PlaySpellStateVisual(handleStateID)
local head = monkeyKing:PlaySpellStateVisual(headStateID)
StopLoopingSplitBodyAnim( monkeyKing, Animations.SitGround )
PlayOneShotSplitBodyAnim( monkeyKing, Animations.SitGroundUp )
Wait(1.7)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.EmoteLaugh )
Wait(.88)
monkeyKing:ClearSpellVisual( handle)
monkeyKing:ClearSpellVisual( head)
local mallet = monkeyKing:PlaySpellStateVisual(malletStateID)
Wait(2.29)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.EmoteCheer )

WaitForTrigger(""monkeyKing - sit"")
--monkeyKing:ClearSpellVisual( mallet)
PlayOneShotSplitBodyAnim( monkeyKing, Animations.SitGroundDown )
Wait(1.7)
PlayLoopingSplitBodyAnim( monkeyKing, Animations.SitGround )
SendTrigger(""scene - WrapUpReady"")"
9445,[1] Legendary 5.1 - Chapter 01 - Tavern Intro - Ally - Main,"Animations.EmoteTalk )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 70340) -- ""Make no mistake. Pandaria...""
Wait(3)
RunToLocation( wrathion, 1, 823.821, -166.488, 415.262, 300, true ) --Face Wrynn
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(1)
wrathion:BroadcastText(BroadcastType.Say, 70341) -- ""Let us see what he is made of.""
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteSalute )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
wrathion:BroadcastText(BroadcastType.Say, 70342) -- ""Let us see if your Alliance...""
Wait(2)
RunToLocation( wrathion, 1, 823.821, -166.488, 415.262, 161.182, true ) --Face front
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
SendTrigger(""endWrynn"")


-- Return to seat, sit down, end scene

RunToLocation( wrathion, 1, 821.63, -163.648, 415.192, 241.546, false ) -- Walk back to seat
Wait(1)
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Sit back down
Wait(2)
"
9446,Legendary 5.1 - Chapter 01 - Tavern Intro - Horde - Main,"-- Set Up and Spawn in Wrathion (Alliance)
wrathionID = 64616
wrathion = SmoothPhaseSpawnActor( wrathionID, 821.63, -163.648, 415.192, 241.546, 1, false ) 
SendTrigger(""wrathionSpawn"")
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Spawn in Sitting
wrathion:PlaySoundKitStereo(34903, true) -- BEGIN MUSIC (Old Music = 33426)
--hordeMusic = wrathion:PlayMusic(34903) -- BEGIN MUSIC
Wait(1)
StopLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Stand Up
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 241.546, true ) --Feet on floor
Wait(1)

-- Here's Where He Begins Talking
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 281.371, true ) --Turn
Wait(.5)
wrathion:BroadcastText(BroadcastType.Say, 70329) -- ""Tong! Num nums! Nao!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(3)
RunToLocation( wrathion, 1, 823.75, -166.181, 415.262, 306.343, true ) --Walk to Garrosh
SendTrigger(""garroshSpawn"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70343) -- ""Garrosh Hellscream! Warchief...""
Wait(2.5)
RunToLocation( wrathion, 1, 823.75, -166.181, 415.262, 147.494 ) --Turn to player
Wait(1.6)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 70344) -- ""He did not always command...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
SendTrigger(""garroshTransform"")
Wait(2)
RunToLocation( wrathion, 1, 823.75, -166.181, 415.262, 306.343 ) --Turn back to Garrosh
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70345) -- ""On Draenor, he was misterable...""
Wait(2.75)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(3)
wrathion:PlayOneShotAnimKit( 3487 ) --KNEEL BEFORE GARROSH!
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 70346) -- ""I understand you, Garrosh...""
Wait(9)
wrathion:BroadcastText(BroadcastType.Say, 70347) -- ""A Warrior like Garrosh""
Wait(3)
RunToLocation( wrathion, 1, 823.75, -166.181, 415.262, 147.494 ) --Turn to player
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
SendTrigger(""garroshTransformBack"")
wrathion:BroadcastText(BroadcastType.Say, 70348) -- ""Your Horde finds itself at a turning point...""
Wait(1)
RunToLocation( wrathion, 1, 826.407, -166.937, 415.262, 328.799 ) --Circling
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
RunToLocation( wrathion, 1, 827.322, -168.387, 415.262, 302.249 ) --Circling
wrathion:BroadcastText(BroadcastType.Say, 70349) -- ""What IS the Horde?""
RunToLocation( wrathion, 1, 825.828, -170.82, 415.262, 228.225 ) --Circling
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
RunToLocation( wrathion, 1, 823.459, -171.035, 415.262, 143.4  ) --Facing Front
wrathion:BroadcastText(BroadcastType.Say, 70350) -- ""An instrument of vengeance...?""
Wait(2)
SendTrigger(""spawnFlags"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
wrathion:BroadcastText(BroadcastType.Say, 70351) -- ""Refuge for the weak...?""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
SendTrigger(""enterThrall"")
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
RunToLocation( wrathion, 1, 822.093, -169.417, 415.262, 112.8  ) --Corner position
Wait(4)
--RunToLocation( wrathion, 1, 822.093, -169.417, 415.262, 15.5998  ) --Face Garrosh
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 70352) -- ""Confederacy of unlikely partners...?""
SendTrigger(""enterSylvanas"")
Wait(1)
RunToLocation( wrathion, 1, 823.821, -166.488, 415.262, 161.182 ) --Circle, face front
Wait(1.5)
"
9447,[1] Legendary 5.1 - Chapter 01 - Tavern Intro - Horde - Main,"PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.5)
wrathion:BroadcastText(BroadcastType.Say, 70353) -- ""What is the SOUL of the Horde?""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2)
RunToLocation( wrathion, 1, 823.821, -166.488, 415.262, 300, true ) --Face Garrosh
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(1)
wrathion:BroadcastText(BroadcastType.Say, 70354) -- ""We will find the answers...""
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2.5)
RunToLocation( wrathion, 1, 823.821, -166.488, 415.262, 161.182, true ) --Face front
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
wrathion:BroadcastText(BroadcastType.Say, 70355) -- ""Show me what your Horde is made of!""
Wait(4)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 70356) -- ""Prove to me that you are worthy...""
Wait(3)
SendTrigger(""endGarrosh"")


-- Return to seat, sit down, end scene

RunToLocation( wrathion, 1, 821.63, -163.648, 415.192, 241.546, false ) -- Walk back to seat
Wait(1)
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Sit back down
--hordeMusic: Stop()
Wait(2)
"
9448,Legendary 5.1 - Chapter 01 - Tavern Intro - Horde - Garrosh,"WaitForTrigger(""garroshSpawn"")

-- Garrosh's Actions
garroshID = 67867
youngGarroshID = 69045
hordeFlagID = 64819

-- Garrosh appears. A spotlight shines down on him.
garrosh = SpawnActor( garroshID, 824.696, -168.66, 415.262, 146.862, 1, true )
Wait(2)
local spotlight = garrosh:PlaySpellStateVisual(8156) -- Initiate spotlight

-- Wait until Wrathion talks about Garrosh's past
WaitForTrigger(""garroshTransform"")

-- Transform Garrosh into a young, whiny bitch from Outland
garrosh:PlaySpellCastVisual( 29723 )
youngGarrosh = SpawnActor( youngGarroshID, 824.696, -168.66, 415.262, 146.862, 1, true )
FadeOut( garrosh, 1 )
Wait(3)
youngGarrosh:PlayLoopingAnimKit(3486)

-- Wrathion moves on. Present-day Garrosh reappears.
WaitForTrigger(""garroshTransformBack"")
Wait(1.5)
youngGarrosh:PlaySpellCastVisual( 29723 )
FadeIn( garrosh, 1 )
FadeOut( youngGarrosh, 1 )
Wait(3.5)
garrosh:PlayLoopingAnimKit(1209)

-- On cue, a Horde Banner appears
WaitForTrigger(""spawnFlags"")
hordeFlag = SpawnActor( hordeFlagID, 826.215, -169.561, 416.262, 147.285, 1.5, true ) 
Wait(1)
hordeFlag:PlaySpellCastVisual( 27991 )
Wait(1)
PlayOneShotSplitBodyAnim( garrosh, Animations.Special2H )

Wait(4)
--local patriot = wrynn:PlaySpellStateVisual(29727) -- Patriotic Pose!!

WaitForTrigger(""endGarrosh"")
-- Clean everything up
--wrynn:ClearSpellVisual( patriot)
Wait(1)
garrosh:ClearSpellVisual( spotlight)
Wait(2)
FadeOut( garrosh, 2 )
FadeOut( hordeFlag, 2 )



"
9450,Legendary 5.1 - Chapter 01 - Tavern Intro - Horde - Warchiefs,"-- Thrall and Sylvanas are handled in this script.
-- They'll wait for Wrathion to summon them.
thrallID = 68059
--thrallID = 46089 -- Test Thrall for Animation purposes.
sylvanasID = 69048

-- On cue, Thrall enters and does badass stuff with his hammer
WaitForTrigger(""enterThrall"")
thrall = SpawnActor( thrallID, 830.294, -167.071, 415.21, 179.34, 1, true )
Wait(1)
RunToLocation( thrall, 1, 826.746, -167.617, 415.262, 154.591 )
Wait(.5)
local badassery = thrall:PlaySpellStateVisual(29752) -- Thrall Badassery
Wait(2.5)
thrall:ClearSpellVisual( badassery)
thrall:PlaySpellCastVisual( 29753 )

-- On cue, Sylvanas enters, and does... something. 
WaitForTrigger(""enterSylvanas"")
sylvanas = SpawnActor( sylvanasID, 826.801, -175.232, 415.233, 123.765, 1, true )
Wait(1)
RunToLocation( sylvanas, 1, 824.299, -170.975, 415.263, 154.591 )
Wait(.5)
sylvanas:PlaySpellCastVisual( 29791 )
local awesomesauce = sylvanas:PlaySpellStateVisual(29791) -- Sylvanas Badassery
Wait(4)
sylvanas:ClearSpellVisual( awesomesauce)

-- When the scene ends, these guys clean up gracefully
WaitForTrigger(""endGarrosh"")
FadeOut( thrall, 2 )
FadeOut( sylvanas, 2 )"
9451,Legendary 5.1 - Chapter 04 - Tavern Finale - Ally - Main,"-- Wrathion's Actions


-- Set Up and Spawn in Wrathion (Alliance)
wrathionID = 64616
wrathion = SmoothPhaseSpawnActor( wrathionID, 821.63, -163.648, 415.192, 241.546, 1, false ) 
SendTrigger(""wrathionSpawn"")
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Spawn in Sitting
wrathion:PlaySoundKitStereo(34887, true) -- BEGIN MUSIC
Wait(1)
StopLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Stand Up
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 241.546, true ) --Feet on floor
Wait(1)

-- Here's Where He Begins Talking
wrathion:BroadcastText(BroadcastType.Say, 70357) -- ""You have proven to be an exemplary hero...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes)
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.2)
RunToLocation( wrathion, 1, 823.412, -166.748, 415.262, 306.343, true ) --Walk to Center
SendTrigger(""wrynnSpawn"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 70358) -- ""Do you recall...?""
Wait(4)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70359) -- ""We discussed the merits...""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2)
RunToLocation( wrathion, 1, 823.412, -166.748, 415.262, 147.494 ) --Turn in place
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(1)
wrathion:BroadcastText(BroadcastType.Say, 70360) -- ""It is true: he has the spirit of a wolf.""
Wait(2)
SendTrigger(""wrynnFight"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
RunToLocation( wrathion, 1, 822.093, -169.417, 415.262, 287 ) --Cross in front
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
SendTrigger(""wrynnWolf"")
RunToLocation( wrathion, 1, 822.997, -171.206, 415.262, 337.709 ) --Circling
wrathion:BroadcastText(BroadcastType.Say, 70361) -- ""Having seen him in action...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
RunToLocation( wrathion, 1, 825.828, -170.82, 415.262, 30.55 ) --Circling
RunToLocation( wrathion, 1, 827.322, -168.387, 415.262, 80.646 ) --Circling
wrathion:BroadcastText(BroadcastType.Say, 70362) -- ""Wolves are pack animals...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
RunToLocation( wrathion, 1, 826.407, -166.937, 415.262, 170.37 ) --Circling
RunToLocation( wrathion, 1, 824.248, -165.449, 415.262, 161.31 ) --Return to front
wrathion:BroadcastText(BroadcastType.Say, 70363) -- ""Your king is calling his pack to him...""
SendTrigger(""wrynnHowl"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
RunToLocation( wrathion, 1, 824.248, -165.449, 415.262, 297.434 ) -- Face Wrynn
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 70364) -- ""His journey is long...""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
wrathion:BroadcastText(BroadcastType.Say, 70365) -- ""But with heroes like you...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(1)
RunToLocation( wrathion, 1, 824.248, -165.449, 415.262, 161.31 ) --Face back to player
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(4)
RunToLocation( wrathion, 1, 824.248, -165.449, 415.262, 268.881 ) --Face Tong
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
wrathion:BroadcastText(BroadcastType.Say, 70366) -- ""Tong! Fetch my things!""
SendTrigger(""endWrynn"")
Wait(3)
RunToLocation( wrathion, 1, 822.915, -168.076, 415.262, 150.531 ) --Go to center of room
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70367) -- ""Your dedication to your "
9453,[1] Shrine of Seven Stars 5.1 - What Had To Be Done - INIT - ZTO,"varian:BroadcastTextStereo(BroadcastType.Say, 69631) -- VO Line 13 - ""You've driven them back to the Horde.""
PlayOneShotSplitBodyAnim( varian, Animations.EmotePoint )
--varian:WaitBroadcastSoundComplete()
Wait(4)
Wait(.5)

jaina:BroadcastTextStereo(BroadcastType.Say, 69632) -- VO Line 14 - "" Once Horde, always Horde""
PlayOneShotSplitBodyAnim( jaina, Animations.EmoteTalk )
Wait(5)
SendTrigger(""jaina - prep exit"")
Wait(2)
--jaina:WaitBroadcastSoundComplete()
Wait(.5)

varian:BroadcastTextStereo(BroadcastType.Say, 69633) -- VO Line 13 - "" The Alliance must act as one.""
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalk )
--varian:WaitBroadcastSoundComplete()
Wait(6)
Wait(.5)

jaina:PlayLoopingAnimKit(3491) -- Look over shoulder and hold
Wait(1)
jaina:SetFacing(89.3967)
jaina:BroadcastTextStereo(BroadcastType.Say, 69634) -- VO Line 15 - ""Don't get soft on me""
jaina:PlayOneShotAnimKit(1530) -- Talking head
jaina:WaitBroadcastSoundComplete()
jaina:StopAnimKit(3491) -- Look over shoulder and hold
jaina:PlayOneShotAnimKit(3492) -- END Look over shoulder and hold
jaina:SetFacing(27.7466)
Wait(1)
SendTrigger(""jaina - teleport"")
SendTrigger(""varian - cue 2"")

WaitForTrigger(""varian - line"")
varian:BroadcastTextStereo(BroadcastType.Say, 69635) -- VO Line 16 - "" The Alliance must act as one.""
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalk )
Wait(1)
--varian:WaitBroadcastSoundComplete()
Wait(.5)

WaitForTrigger(""varian - finished"")
WaitForTrigger(""Music Done"")
scene:EndScene()"
9454,Shrine of Seven Stars 5.1 - What Had To Be Done - jaina - ZTO,"WaitForTrigger(""jaina - look at Varian 1"")
jaina:SetFacing(130.265)

WaitForTrigger(""jaina - prep exit"")
jaina:FollowPathAtSpeed(4952, 2, true)
varian:SetFacing(1.78704)
jaina:WaitMovementComplete()
CastSpellAtActor(jaina, portal, summonPortalSpellID)
Wait(1)
FadeIn(portal, 2)

WaitForTrigger(""jaina - teleport"")
CastSpellAtActor(jaina, jaina, teleportSpellID)
FadeOut(jaina, 1)
FadeOut(portal, 1)"
9455,Shrine of Seven Stars 5.1 - What Had To Be Done - varian - ZTO,"WaitForTrigger(""varian - cue 1"")
varian:FollowPathAtSpeed( 4953, 2.5, true )

varian:WaitMovementComplete()
SendTrigger(""jaina - look at Varian 1"")

WaitForTrigger(""varian - cue 2"")
varian:FollowPathAtSpeed( 4954, 2.5, true )
varian:WaitMovementComplete()
Wait(1)
SendTrigger(""varian - line"")
varian:FollowPathAtSpeed( 4955, 2.5, true )
varian:WaitMovementComplete()
varian:SetFacing(29.2389)
Wait(1)
SendTrigger(""varian - finished"")"
9456,Legendary 5.1 - Chapter 04 - Tavern Finale - Ally - Wrynn,"-- King Wrynn's actions, and that of his companions

-- Creature IDs
wrynnID = 55561
wolfID = 49450
allyFlagID = 64818
anduinID = 66056
jainaID = 68108
greymaneID = 67973
tyrandeID = 68842
moiraID = 42129
mekkatorqueID = 45667
velenID = 45774
aysaID = 62419

-- King Wrynn appears. A spotlight shines down on him.
WaitForTrigger(""wrynnSpawn"")
wrynn = SpawnActor( wrynnID, 824.696, -168.66, 415.262, 146.862, .65, true )
Wait(1)
--local spotlight = wrynn:PlaySpellStateVisual(8156) -- Initiate spotlight

-- Wrynn drops into a badass pose
WaitForTrigger(""wrynnFight"")
wrynn:PlayLoopingAnimKit(3496)


-- The faint outline of Goldrinn the Wolf God appear around Wrynn
WaitForTrigger(""wrynnWolf"")
wolf = SpawnActor( wolfID, 825.065, -169.091, 415.262, 143.038, .5, true )
wolf:Fade(0, 0) -- Wolf begins transparent 
wolf:Fade(.4, 3) -- Wolf fades in
Wait(5)

-- Goldrinn/Wrynn HOWL as one! Wrynn's pack surrounds him.
WaitForTrigger(""wrynnHowl"")
Wait(2)
wolf:PlaySpellCastVisual( 29765 )
wrynn:PlaySpellCastVisual( 10758 )
wolf:PlaySoundKit( 19729, true )
FadeOut( wolf, 3 )
Wait(2)
anduin = SpawnActor( anduinID, 829.507, -170.105, 415.214, 146.031, 1, true )
jaina = SpawnActor( jainaID, 829.11, -172.687, 415.215, 146.659, 1, true )
greymane = SpawnActor( greymaneID, 828.262, -173.396, 415.217, 144.409, 1, true )
tyrande = SpawnActor( tyrandeID, 830.383, -168.919, 415.212, 150.979, .75, true )
moira = SpawnActor( moiraID, 831.275, -167.445, 415.209, 149.273, 1, true )
mekkatorque = SpawnActor( mekkatorqueID, 826.446, -175.053, 415.222, 130.661, 1, true )
Wait(1)
RunToLocation( anduin, 1, 826.093, -167.877, 415.261, 145.061, true)
RunToLocation( jaina, 1, 824.555, -169.866, 415.261, 145.961, true)
RunToLocation( greymane, 1, 824.146, -171.238, 415.262, 145.356, true)
RunToLocation( tyrande, 1, 826.825, -166.929, 415.261, 149.561, true)
RunToLocation( moira, 1, 827.785, -166.662, 415.262, 148.373, true)
RunToLocation( mekkatorque, 1, 824.127, -172.746, 415.261, 148.436, true)
Wait(1)
allyFlag = SpawnActor( allyFlagID, 826.215, -169.561, 416.262, 147.285, 1.5, true ) 
velen = SpawnActor( velenID, 828.963, -172.058, 415.216, 152.71, .9, true )
aysa = SpawnActor( aysaID, 830.281, -169.389, 415.213, 148.956, .9, true )
Wait(1)
allyFlag:PlaySpellCastVisual( 27580 )
Wait(2)
RunToLocation( velen, 1, 825.982, -171.148, 415.262, 147.83, true)
RunToLocation( aysa, 1, 827.624, -167.982, 415.261, 150.236, true)


-- Scene over - Clean everything up.
WaitForTrigger(""endWrynn"")
Wait(1)
FadeOut (anduin, 2)
FadeOut (jaina, 2)
FadeOut (tyrande, 2)
FadeOut (mekkatorque, 2)
FadeOut (velen, 2)
FadeOut (aysa, 2)
FadeOut (moira, 2)
FadeOut (greymane, 2)
Wait(2)
FadeOut( wrynn, 2 )
FadeOut( allyFlag, 2 )



"
9457,[1] Legendary 5.1 - Chapter 04 - Tavern Finale - Ally - Main,"cause...""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 70368) -- ""Like you, I continue to refine...""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes )
Wait(2.5)
RunToLocation( wrathion, 1, 822.915, -168.076, 415.262, 249.531 ) --Turn to Treasure Chest
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
wrathion:BroadcastText(BroadcastType.Say, 70369) -- ""Choose your reward!""
Wait(3)

-- Return to seat, sit down, end scene

RunToLocation( wrathion, 1, 821.63, -163.648, 415.192, 241.546, false ) -- Walk back to seat
Wait(1)
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Sit back down
Wait(2)
"
9459,Silvermoon 5.1: zto - One Last Grasp - Portals,"--fade out portals
WaitForTrigger(""lorthemar - pace"")
for i=1, #portals do
	Wait(5)
	FadeOut( portals[i], 2 )
end"
9460,Legendary 5.1 - Chapter 04 - Tavern Finale - Horde - Main,"-- Wrathion's Actions


-- Set Up and Spawn in Wrathion (Alliance)
wrathionID = 64616
wrathion = SmoothPhaseSpawnActor( wrathionID, 821.63, -163.648, 415.192, 241.546, 1, false ) 
SendTrigger(""wrathionSpawn"")
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Spawn in Sitting
--wrathion:PlaySoundKitStereo(33426, true) -- BEGIN MUSIC (OLD)
hordeMusic1 = wrathion:PlayMusic(34897)
Wait(1)
StopLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Stand Up
RunToLocation( wrathion, 1, 821.439, -164.064, 415.219, 241.546, true ) --Feet on floor
Wait(1)

-- Here's Where He Begins Talking
wrathion:BroadcastText(BroadcastType.Say, 70371) -- ""You have proven to be an exemplary hero...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes)
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.2)
RunToLocation( wrathion, 1, 823.412, -166.748, 415.262, 306.343, true ) --Walk to Center
SendTrigger(""garroshSpawn"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 70372) -- ""Do you recall...?""
Wait(4)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70373) -- ""We spoke of your Warchief...""
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(1)
RunToLocation( wrathion, 1, 823.412, -166.748, 415.262, 147.494 ) --Turn in place
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 70374) -- ""I asked you, who is the soul...?""
SendTrigger(""spotlightSpawn"")
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
RunToLocation( wrathion, 1, 819.917, -172.269, 415.215, 69.1293 ) --Cross in front
wrathion:BroadcastText(BroadcastType.Say, 70375) -- ""Your efforts have given me...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(4)
wrathion:BroadcastText(BroadcastType.Say, 70376) -- ""YOU are the soul of the Horde.""
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
SendTrigger(""playerSpawn"")
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 70377) -- ""Your actions in the coming weeks...""
RunToLocation( wrathion, 1, 823.628, -166.7, 415.215, 59.6793 ) -- Cross back
Wait(1)
RunToLocation( wrathion, 1, 823.628, -166.7, 415.215, 163.629 ) -- Face Front
Wait(3)
wrathion:BroadcastText(BroadcastType.Say, 70378) -- ""I want to make sure you are equiped...""
hordeMusic1: Stop() -- End Music
wrathion:PlaySoundKitStereo(34912, true) -- Begin final track
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo)
Wait(2)

RunToLocation( wrathion, 1, 823.628, -166.7, 415.215, 267.579 ) --Face Tong
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
wrathion:BroadcastText(BroadcastType.Say, 70366) -- ""Tong! Fetch my things!""
SendTrigger(""cleanup"")
Wait(3)
RunToLocation( wrathion, 1, 822.915, -168.076, 415.262, 150.531 ) --Go to center of room
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
wrathion:BroadcastText(BroadcastType.Say, 70367) -- ""Your dedication to your cause...""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
wrathion:BroadcastText(BroadcastType.Say, 70368) -- ""Like you, I continue to refine...""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes )
Wait(2.5)
RunToLocation( wrathion, 1, 822.915, -168.076, 415.262, 249.531 ) --Turn to Treasure Chest
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
"
9461,[1] Legendary 5.1 - Chapter 04 - Tavern Finale - Horde - Main,"wrathion:BroadcastText(BroadcastType.Say, 70369) -- ""Choose your reward!""
Wait(3)

-- Return to seat, sit down, end scene

RunToLocation( wrathion, 1, 821.63, -163.648, 415.192, 241.546, false ) -- Walk back to seat
Wait(1)
PlayLoopingSplitBodyAnim( wrathion, Animations.SitChairHigh  ) -- Sit back down
Wait(2)
"
9463,Kun-Lai Summit 5.1 - Finale - Horde - Sha Eruption Bunny 1 - HMC (copy),"WaitForTrigger(""8BellErupts"")
-- play eruption visual
FadeOut( bellBunny2,  2)
bellBunny2:Despawn()
shaAura1 = shaBunnyArray[1]:PlaySpellStateVisual(29790)
shaAura2 = shaBunnyArray[2]:PlaySpellStateVisual(29790)
shaAura3 = shaBunnyArray[3]:PlaySpellStateVisual(29790)
shaAura4 = shaBunnyArray[4]:PlaySpellStateVisual(29790)
shaAura5 = shaBunnyArray[5]:PlaySpellStateVisual(29790)
shaAura6 = shaBunnyArray[6]:PlaySpellStateVisual(29790)

SendTrigger(""9Explosion"")
Wait(1)

shaBunnyArray[1]:ClearSpellVisual( shaAura1)
shaBunnyArray[2]:ClearSpellVisual( shaAura2)
shaBunnyArray[3]:ClearSpellVisual( shaAura3)
shaBunnyArray[4]:ClearSpellVisual( shaAura4)
shaBunnyArray[5]:ClearSpellVisual( shaAura5)
shaBunnyArray[6]:ClearSpellVisual( shaAura6)"
9467,Kun-Lai Summit 5.1 - Finale - Horde - Bell Bunny 2 - HMC,"WaitForTrigger(""4StartSparkles"")

Wait(1)
while true do
local waitTime = math.random(0.3, 1)
Wait(waitTime)
local target = sparkleBunnyArray[(math.random(#sparkleBunnyArray))]
CastSpellAtActor( bellBunny2, target, 135903)
end


"
9468,Legendary 5.1 - Chapter 04 - Tavern Finale - Horde - The Warchiefs,"-- Events for the Horde Leaders

-- Model IDs
garroshID = 67867
hordeFlagID = 64819
thrallID = 68059
sylvanasID = 69048
voljinID = 68970
baineID = 68287
lorthemarID = 68278
gallywixID = 45250
bunnyCreatureID = 62026
--jiID = 60570

-- On cue, Garrosh and the Flag appear
WaitForTrigger(""garroshSpawn"")
hordeFlag = SpawnActor( hordeFlagID, 828.269, -170.957, 415.215, 147.88, 2, false )
Wait(1)
hordeFlag:PlaySpellCastVisual( 27991 )
Wait(1)
garrosh = SpawnActor( garroshID, 827.232, -170.308, 415.262, 147.429, 1, false )

-- Followed a few seconds later by everyone else
Wait(6)
gallywix = SpawnActor( gallywixID, 829.387, -169.271, 415.215, 173.305, 1, false )
voljin = SpawnActor( voljinID, 829.465, -167.357, 415.215, 187.255, 1, false )
sylvanas = SpawnActor( sylvanasID, 828.554, -165.799, 415.262, 207.281, 1, false )
lorthemar = SpawnActor( lorthemarID, 826.467, -172.329, 415.215, 122.004, 1, false )
thrall = SpawnActor( thrallID, 824.908, -172.956, 415.215, 107.379, 1, false )
baine = SpawnActor( baineID, 822.644, -173.351, 415.215, 82.1795, 1, false )

-- An empty spotlight appears, waiting for the player...
WaitForTrigger(""spotlightSpawn"")
Wait(2)
spotlight = SpawnActor( bunnyCreatureID, 824.756, -168.844, 415.262, 152.378, 1, false )
local spotlightFX = spotlight:PlaySpellStateVisual(8156) 

-- The player appears in the spotlight. You're the hero!
WaitForTrigger(""playerSpawn"")
player = SpawnActivePlayerCloneActor( 824.756, -168.844, 415.262, 152.378, 1, false )
Wait(1)
player:PlaySpellCastVisual( 7265 )
Wait(2)
player:PlaySpellCastVisual( 6080 )
Wait(3)
FadeOut( garrosh, 2 )
FadeOut( thrall, 2 )
FadeOut( voljin, 2 )
FadeOut( baine, 2 )
FadeOut( sylvanas, 2 )
FadeOut( lorthemar, 2 )
FadeOut( gallywix, 2 )

-- Clean everything up when Wrathion is finished
WaitForTrigger(""cleanup"")
spotlight:ClearSpellVisual( spotlightFX )
FadeOut( player, 2 )
Wait(2)
FadeOut( hordeFlag, 2 )"
9469,Kun-Lai Summit 5.1 - Finale - Horde - Earth Bunny Array - HMC,"WaitForTrigger(""earthCleave"")
local i
local j
local k
local auraHandlers = { }

for i = 1, #earthBunnyArray do
	auraHandlers[i] = earthBunnyArray[i]:PlaySpellStateVisual(29788)
end

Wait(2)

for j = 1, #earthBunnyArray do
	earthBunnyArray[j]:PlaySpellCastVisual(29789)
end

earthBunnyArray[1]:PlaySoundKit( 35003, true )

for k = 1, #earthBunnyArray do
	earthBunnyArray[k]:ClearSpellVisual( auraHandlers[k])
end
"
9470,Kun-Lai Summit 5.1 - Finale - Horde - Sha FX - HMC,"WaitForTrigger(""smoothPhaseComplete"")

PlayOneShotSplitBodyAnim( shaFX, Animations.Open )
Wait(1)
PlayLoopingSplitBodyAnim( shaFX, Animations.Opened)

WaitForTrigger(""3radianceStart"")
PlayOneShotSplitBodyAnim( shaFX, Animations.Close )
Wait(1)
PlayLoopingSplitBodyAnim( shaFX, Animations.Closed)"
9471,[1] Kun-Lai Summit 5.1 - Finale - Horde - Init - HMC,"4301.83, 1307.43, 457.102, 131.9, 1, false )
korkron28 = SpawnActor( korkronCreatureID, 4299.73, 1305.64, 457.102, 131.9, 1, false )
korkron29 = SpawnActor( korkronCreatureID, 4297.91, 1303.99, 457.102, 131.9, 1, false )

korkron30 = SpawnActor( korkronCreatureID, 4278.52, 1300.39, 457.102, 82.9331, 1, false )
korkron31 = SpawnActor( korkronCreatureID, 4276.06, 1300.53, 457.102, 82.9331, 1, false )
korkron32 = SpawnActor( korkronCreatureID, 4273.55, 1300.74, 457.102, 82.9331, 1, false )

korkron33 = SpawnActor( korkronCreatureID, 4257.39, 1306.38, 457.102, 47.1088, 1, false )
korkron34 = SpawnActor( korkronCreatureID, 4255.67, 1308.23, 457.102, 47.1088, 1, false )
korkron35 = SpawnActor( korkronCreatureID, 4254, 1310.08, 457.102, 47.1088, 1, false )
korkron36 = SpawnActor( korkronCreatureID, 4252.11, 1312.1, 457.102, 47.1088, 1, false )
korkron37 = SpawnActor( korkronCreatureID, 4250.09, 1314.05, 457.102, 47.1088, 1, false )
korkron38 = SpawnActor( korkronCreatureID, 4248.22, 1316.15, 457.102, 47.1088, 1, false )
korkron39 = SpawnActor( korkronCreatureID, 4246.3, 1318.24, 457.102, 47.1088, 1, false )

SendTrigger(""smoothPhaseComplete"")
"
9472,Test - Darren's Test Fade Region,"scene:WaitTimer(5)
scene:SetFadeRegion(20, true)
scene:WaitTimer(5)
scene:SetFadeRegionExcludesAllPlayers(true)
scene:WaitTimer(5)
scene:AddFadeRegionExcludedCreature(100)
scene:WaitTimer(5)
scene:RemoveFadeRegionExcludedCreature(100)
scene:WaitTimer(5)
print(""Done!"")
"
9474,Test - Darren's Test State Aura,"local creatureID = 63559
local auraVisualID = 27486

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(4, 0, 0), 180)
createData.creatureID = creatureID

local actor = scene:SpawnActor(createData)

--scene:WaitTimer(1)
actor:PlaySpellStateVisual(auraVisualID)

while (true) do
	scene:WaitTimer(10)
end
"
9475,Scenario - A Little Patience - Music - JSB,"Wait( 1 )

local soundHandle = varian:PlayMusic(34888)
"
9477,Reusable Scripts - Remove Object Wave,"function RemoveObjectWave( waveVisualID, waveModelName, waveAnimKitID, ROID, isTurn, turn )

	-- Unit Wrangling
	local pet = ROIDTOPET(ROID);
	if ( not pet or (pet and pet.isPad) ) then
		return;
	end

	local turnVisualID = turn.turnVisualID ;

	-- Go home first
	SendEverybodyHome()

	-- Use the first result from each effect
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )

	-- Step 1: 
	--   Create the transformation matrix 

	local sourcePosition, targetPosition = pet.actor:GetPosition(), attackPoint
	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	-- Step 2:
	--	 Determine the initial and final wave points
	local travelDistance = 15;
	local startPoint = LocalToWorldCoords( Vector:New( -5, 0, 0 ) );
	local endPoint   = LocalToWorldCoords( Vector:New( -5+travelDistance, 0, 0 ) );
	local facePoint  = LocalToWorldCoords( Vector:New( -5+travelDistance+1, 0, 0 ) );

	local delta2 = endPoint - startPoint;
	local yaw = math.atan2( delta2.y, delta2.x ) / math.pi * 180;

	-- Step 3:
	-- 	 Draw the wave, moving objects as the wave's position
	--	 Passes their coordinates


	-- Play the Cast Visual First
	
	pet.actor:PlaySpellCastVisual(waveVisualID)

	local wave = scene:SpawnActor(
	ActorCreateData:NewModel(
		""Wave"",
		waveModelName,
		Transform:New( startPoint, yaw ),
		0.5
	) );
	wave:PlayLoopingAnimKit(waveAnimKitID)
	wave:SetInteractible(false);

	local travelSpeed = 4;
	local travelTime = travelDistance / travelSpeed; -- sec

	wave:SetFacingToAbs( facePoint );
	scene:WaitTimer(1.0)
	wave:MoveToAbs( endPoint, travelTime );

	-- Push objects away while you wait
	local allObjects = GetAllObjects();
	local allActors = {};

	for teamID,objectList in pairs( allObjects ) do
		for index, object in pairs( objectList ) do 
			table.insert(allActors, object.actor);
			if ( object.actors ) then 
				for k,v in pairs( object.actors ) do

					table.insert(allActors, v);
				end
			end
		end
	end

	-- Add the target unit too!
	table.insert( allActors, target.actor );

	local movedObjects = {};

	local reachedTargetActor = false
	local testFunction = function ()

		local waveLocalPosition = WorldToLocalCoords( wave:GetPosition() );
		
		for i=#allActors,1,-1 do
			local actor = allActors[i];

			if ( movedObjects[actor] ) then 
			else
				local actorLocalPosition = WorldToLocalCoords( actor:GetPosition() );
				local diff = actorLocalPosition - waveLocalPosition;

				if ( diff.x <= 0 ) then 
					local pushPoint = LocalToWorldCoords( Vector:New(  5, 0, 0 ) + diff );
					local pushDist = actor:GetPosition():Dist(pushPoint);

					actor:MoveToAbs( pushPoint, pushDist / travelSpeed );
					movedObjects[actor] = true;

					-- Process all events when you hit the primary target
					if ( actor == target.actor ) then 

						-- Handle all effects
						for index=1,1 do 
							local effect = turn.effects[index];

							-- Default Visual 
							DefaultEffectVisualHandler( ROID, effect, turnVisualID)
							DefaultDoEffectProcessing( ROID, ""effect"", effect );

							reachedTargetActor = true
						end 
					end
				end
			end	
		end	
	end

	local fadeOutTime = 1
	local fadeStarted = false
	local StartFade = function()
		if (fadeStarted == true) then
			return
		end

		fadeStarted = true
		wave:Fade(0,fadeOutTime);

		-- fade all swept objects
		for index,actor in pairs(allActors) do
			if (actor ~= target.actor) then
				actor:Fade(0,fadeOutTime)
			end
		end
	end

	repeat
		testFunction();
		if (reachedTargetActor == true) then
			StartFade()
		"
9478,[1] Reusable Scripts - Remove Object Wave,"end
		scene:WaitTimer(0.1)
	until ( not wave:IsMoving() );

	-- Remove Wave
	wave:WaitMovementComplete();

	-- Handle remaining effects
	for index=2,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler( ROID, effect, turnVisualID)
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
	end 

	StartFade()

	scene:WaitTimer(fadeOutTime)
	wave:Despawn();

	-- despawn swept actors
	for index,actor in pairs(allActors) do
		if (actor ~= target.actor) then
			actor:Despawn()
		end
	end
	allActors = { }

	for teamID,objectList in pairs( allObjects ) do
		for index, object in pairs( objectList ) do 
			UnregisterObject(teamID, index)
		end
	end

	-- Standard Cleanup
	DefaultTurnCleanUp(ROID);
end"
9479,Shrine of Seven Stars 5.1 - What Had To Be Done - Music Wait - ZTO,"WaitForTrigger(""Music Wait"")
Wait(73)
SendTrigger(""Music Done"")"
9480,Silvermoon City 5.1: zto - Music Wait,"WaitForTrigger(""Music Start"")
Wait(12)
SendTrigger(""Music Done"")
"
9481,MoP - Kun-Lai Summit - Zouchin Invasion - Music - ZTO,"WaitForTrigger(""cue Music"")
local musicHandle = cho:PlayMusic(12748)

WaitForTrigger(""Music End"")
musicHandle:Stop()"
9482,PetBattle - Dispatcher - Common,"function ThreadBotMain(BOT_ID)

	local myROID;
	local myList=nil;

	local frameTimer = scene:Timer(0)
	while( not BOT_KILL_SWITCH ) do
		for k,v in pairs(UNIT_ACTION_QUEUE) do
			if ( v.isProcessing == false and #v.commands > 0 ) then 
				myROID = k;
				myList = v;
				break;
			end
		end

		if ( myROID ) then 
			--print( ""Bot ""..BOT_ID.."" Acquired Task for "", ROIDTOSTRING(myROID) );
			UNIT_ACTION_QUEUE[myROID].isProcessing = true;
			
			-- [ABrazie]: Bots will only handle one task at a time now, not managed according to who owns it.
			--while myList.commands[1] ~= nil do
				local task = myList.commands[1];
			--print( ""Mine: "", ROIDTOSTRING(myROID)  );
			--print(""Other: "",ROIDTOSTRING(task.args[1])); 
			--DEBUG_TABLE(task.args);

				table.remove(myList.commands,1);
			--end
		
			UNIT_ACTION_QUEUE[myROID].isProcessing = false;

			local result = task.func(myROID, unpack(task.args));

			--print(""Bot""..BOT_ID.."" Result: "",result)
			myROID = nil;
			myList = nil;
			--print( ""Bot ""..BOT_ID.."" Released Task"" );
		end

		-- Darren's Garbage Collector Optimization:
		--  always use the same timer, instead of
		--	scene:WaitTimer(0)
		frameTimer:Reset()
		scene:Wait(frameTimer)
	end

end
"
9483,[1] Turn Package - Ion Cannon,"newPosition = LocalToWorldCoords( Vector:New(0,0,zOffset ) )

--	print(""yaw = "" .. yaw .. "", pitch = "" .. pitch)
	local transform = Transform:New( newPosition, yaw+90, pitch+90 );
	local create = ActorCreateData:NewModel(
		""Moonfire"",
		model,
		transform,
		1.5);
	create.groundSnap = false;
	local newActor = scene:SpawnActor(create);
	newActor:PlayOneShotAnimKit(3521)

	scene:WaitTimer(0.25)
	IonCannon_HugeSlideSuccess( targetROID, ROID, turnVisualID )

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];

		DefaultDoEffectProcessing( nil, ""effect"", effect ); 
	end 

	scene:WaitTimer(0.25)
	newActor:Despawn();

	scene:WaitTimer(1);

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end


function IonCannon_HugeSlideSuccess( victimROID, attackerROID, visualID )
	if ( not attackerROID ) then 
		print(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactSlide, attackerROID, 5, 0.5); 	 

end"
9484,Object - Build Wall Shared,"function CreateObject_WallShared(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID, params)

	local damModel = params.damModel;
	local baseScale = params.baseScale;
	local extraYaw = params.extraYaw;
	local yOffset = params.yOffset;
	local xOffset = params.xOffset;
	local startZ = params.startZ;
	local destZ = params.destZ;
	local upAnimTime = params.upAnimTime or 2.0;
	local downAnimTime = params.downAnimTime or 1.2;

	local pad = ROIDTOPET(ROID);
	if ( pad.playerID == 2 ) then
		yOffset = yOffset *- 1;
	end
	
	local initWallZ = WALL_LOCATIONS[pad.playerID][1].position.z
	if(upAnimTime > 0) then
		initWallZ = initWallZ + startZ
	end
	local initWallPosition = Vector:New(WALL_LOCATIONS[pad.playerID][1].position.x + xOffset,
										WALL_LOCATIONS[pad.playerID][1].position.y + yOffset,
										initWallZ);
	local initWallYaw = WALL_LOCATIONS[pad.playerID][1].yaw + extraYaw
	local centerTransform = Transform:New(initWallPosition,	initWallYaw);
	
	--create Scene Actor
	local damActor, killFunction = CreatePadObject(
			damModel, 
			baseScale,
			centerTransform, 
			false ) --snapToGround

	--register an object with brazie's object mgr and tie it to this auraInstance.
	local object, playerID, slot, transform = RegisterObject( aura.playerID, auraAbilityID, auraInstanceID)
	object.actor = damActor
	object.moveSpeed = 0
	object.sessile = true

	-- force the dam object to never change facing
	damActor:SetFacingTurnRate(0)

	if(destZ ~= startZ and upAnimTime > 0) then
		-- Animate up out of the ground
		AnimateWallModelAndWait(destZ - startZ, damActor, 5, upAnimTime, initWallPosition, initWallYaw)
		damActor:WaitMovementComplete()
	end

	local q = 1
 	while ( aura.running and q < 1000 ) do 
		q = q + 1
		scene:WaitTimer(1)
	end

	if(destZ ~= startZ and downAnimTime > 0) then
		-- Animate down into the ground
		initWallPosition.z = WALL_LOCATIONS[pad.playerID][1].position.z + destZ
		AnimateWallModelAndWait(startZ - destZ, damActor, 5, downAnimTime, initWallPosition, initWallYaw)
		scene:WaitTimer(downAnimTime*0.5)
		damActor:Fade(0,downAnimTime*0.5)
		damActor:WaitMovementComplete()
	end


	killFunction()
	UnregisterObject(object.playerID, object.slot)
end

function AnimateWallModelAndWait(zDelta, theActor, numPoints, animTime, initPosition, initYaw)
	local moveData = MoveData:Default(numPoints);
	moveData.isRelative = false
	moveData.teleportToFirstPoint = true
	moveData.posControl = MovePosControl.PointTime
	moveData.yawControl = MoveRotControl.Angle;

	local pointID = 1;
	while(pointID <= numPoints) do
		local animPct = (pointID-1) / (numPoints-1);

		moveData.points[pointID].pos.x = initPosition.x;
		moveData.points[pointID].pos.y = initPosition.y;
		moveData.points[pointID].pos.z = initPosition.z + zDelta * math.sqrt(animPct);
		moveData.points[pointID].time = pointID * animTime / numPoints;
		moveData.points[pointID].yaw = initYaw;
		pointID = pointID + 1;
	end
	theActor:Move(moveData);
end"
9485,Test - Darren's Test Interactible Actor,"local creatureID = 71344

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = true
createData.selectable = true
createData.floatingTooltip = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(4, 0, 0), 180)
createData.creatureID = creatureID

local offsetX = 0
local offsetY = 0
local rangeX = 15
local rangeY = 15
local respawnMin = 0.25
local respawnMax = 1
local minSpawnRange = 4

local maxKills = 25
local killCount = 0

local numProceduralCoroutines = 16
if (not Scene.AddCoroutine) then
	numProceduralCoroutines = nil
end

print(""Kill "" .. maxKills .. "" guys!"")

local spawnPoints = { }
function ThrallBot(spawnID)
	local spawnTest = nil

	-- keep trying to find a spawn point each frame
	local found = false
	while (found == false) do
		found = true
		spawnPoint = Vector:New(
			(math.random()-0.5)*rangeX + offsetX,
			(math.random()-0.5)*rangeY + offsetY)

		for id, point in pairs(spawnPoints) do
			local offset = spawnPoint - point
			if (offset:Magnitude() < minSpawnRange) then
				found = false
				break;
			end
		end

		if (found == false) then
			scene:WaitTimer(0)
		end
	end

	spawnPoints[spawnID] = spawnPoint

	createData.transform.position.x = spawnPoints[spawnID].x
	createData.transform.position.y = spawnPoints[spawnID].y

	local actor = scene:SpawnActor(createData)

	actor:SetInteractCursor(""crosshairs"", CursorRange.RangeFromPlayer, 20, nil)
--	actor:SetInteractCursor(""gunner"", CursorRange.RangeFromPlayer, 10, nil)

	actor:WaitRightClick()
	scene:TriggerServerEvent(""boom"")
	actor:PlaySpellTargetImpactVisual(1263)
	scene:WaitTimer(0.25)
	actor:SetHealth(0)
	actor:PlayLoopingAnimKit(62)

	killCount = killCount + 1
	print(""Kills: "" .. killCount .. ""/"" .. maxKills)
	if (killCount >= maxKills) then
		print(""Grats!"")
		scene:EndScene()
	end

	scene:WaitTimer(2)

	-- free the spawn point
	spawnPoints[spawnID] = nil
	scene:WaitTimer(2)

	actor:Despawn()	
end

function RunSpawn(spawnID)
	while true do
		ThrallBot(spawnID)
		local respawnTime = math.random()*(respawnMax - respawnMin) + respawnMin
		scene:WaitTimer(respawnTime)
	end
end

function ScriptCoroutine(spawnID)
	if (numProceduralCoroutines) then
		return
	end

	RunSpawn(spawnID)
end

if (numProceduralCoroutines and numProceduralCoroutines > 0) then

	-- spawn off coroutines
	for i = 1,numProceduralCoroutines do
		scene:AddCoroutineWithParams(RunSpawn, i)
	end

end


"
9486,Global Functions - Actor Interaction,"--
-- Interaction Helper Functions
--
function Actor:WaitRightClick()
	local rightClickCount = self:GetRightClickCount()
	local waitCondition = function()
		local currentCount = self:GetRightClickCount()
		return (currentCount ~= rightClickCount)
	end
	self:WaitCondition(waitCondition)
end

local RightClickListenerCoroutine

function Actor:AddOnRightClickListener(listenFreq, listenFunc, ...)
	local env = getfenv(2)
	if (not env.RightClickListeners) then
		-- add a listener map to the local environment if we don't already have one
		-- NOTE: we create the table in the calling functions environment
		-- print(""Adding listener map"")
		env.RightClickListeners = 
		{
			nextID = 0;
			activeListeners = { };
		}
	end

	local listenerID = env.RightClickListeners.nextID
	env.RightClickListeners.nextID = env.RightClickListeners.nextID + 1
	
	local activeListener = { }
	activeListener.ID = listenerID
	activeListener.actor = self
	activeListener.freq = listenFreq
	activeListener.func = listenFunc
	activeListener.params = {...}

	-- add to the listener table
	env.RightClickListeners.activeListeners[listenerID] = activeListener

	-- kick off a listening coroutine
	local scene = self:GetScene()
	scene:AddCoroutineWithParams(RightClickListenerCoroutine, listenerID)

	return listenerID
end

function Actor:CancelOnRightClickListener(listenerID)
	local env = getfenv(2)
	if (env.RightClickListeners and listenerID) then
		env.RightClickListeners.activeListeners[listenerID] = nil
	end
end

--
-- Internal Listener implementation
--
RightClickListenerCoroutine = function(listenerID)
	local env = getfenv(2)
	local clickCount = 0
	local timer

	while true do
		if (not env.RightClickListeners) then
			return
		end

		local listener = env.RightClickListeners.activeListeners[listenerID]
		if (not listener) then
			return
		end

		if (not listener.actor or (listener.actor:IsDespawned() == true)) then
			env.RightClickListeners.activeListeners[listenerID] = nil
			return
		end

		local currentClickCount = listener.actor:GetRightClickCount()
		if (currentClickCount ~= clickCount) then
			-- click occured
			env.RightClickListeners.activeListeners[listenerID] = nil
			listener.func(unpack(listener.params))
			return
		end

		local scene = listener.actor:GetScene()
		if (not timer) then
			timer = scene:Timer(listener.freq)
		else
			timer:Reset()
		end
		scene:Wait(timer)
	end
end"
9487,Test - Darren's Test Interactible Actor - Spawn 1,"
ScriptCoroutine(1)
"
9488,Test - Darren's Test Interactible Actor - Spawn 2,"ScriptCoroutine(2)
"
9489,Test - Darren's Test Interactible Actor - Spawn 3,"ScriptCoroutine(3)
"
9490,Test - Darren's Test Interactible Actor - Spawn 4,"ScriptCoroutine(4)
"
9491,Test - Darren's Test Interactible Actor - Spawn 5,"ScriptCoroutine(5)
"
9492,Test - Darren's Test Interactible Actor - Spawn 6,"ScriptCoroutine(6)
"
9493,Test - Darren's Test Interactible Actor - Spawn 7,"ScriptCoroutine(7)
"
9494,Test - Darren's Test Interactible Actor - Spawn 8,"ScriptCoroutine(8)
"
9498,Dynamic Spawner - Main,"--------------------------------------------------------------------------------
-- Dynamic Spawn
--   Call the global function DynamicSpawn with your spawnData
--------------------------------------------------------------------------------
local SpawnerCoroutineOld

DynamicSpawnManager = { }

--------------------------------------------------------------------------------
DynamicSpawnManager.CreateSpawner = function(self, spawnData)
	if (not self) or (not spawnData) or (not spawnData.name) then
		self:DebugPrint(""ERROR: spawner needs a name"")
		return
	end

	if (self.spawners[spawnData.name]) then
		self:DebugPrint(""ERROR: spawner of name '"" .. spawnData.name .. ""' already exists"")
		return
	end

	-- store a reference to the spawn data
	local spawner = { }
	self.spawners[spawnData.name] = spawner

	spawner.active = false
	spawner.spawnData = spawnData
	spawner.DebugPrint = self.DebugPrint

	scene:AddCoroutineWithParams(self.SpawnerMain, spawner)

	return spawner
end

DynamicSpawnManager.spawners = { }

--------------------------------------------------------------------------------
--local dynamicSpawnDebug = true
DynamicSpawnManager.DebugPrint = function(text)
	if (dynamicSpawnDebug ~= true) then
		return
	end
	print(""DynSpwnDebug: "" .. tostring(text))
end
"
9499,Test - Darren's Dynamic Spawning - Critter Spawner,"
local minRangeFromPlayer = 12.0

local spawnData =
{
	name = ""Test Spawner"";

	region =
	{
		type = DynamicSpawnRegion.Circle;
		center = Vector:New(0, 0, 0);
		radius = 40.0;
	};

--	minSpacing = 5;
--	maxSpawns = 40;

	minSpacing = 4;
	maxSpawns = 50;

	OnSpawn = function(spawnNode)
		-- don't spawn too close
		local playerDisplay = scene:GetActivePlayerDisplay()
		if (playerDisplay) then
			local offset = spawnNode.spawnPoint - playerDisplay:GetPosition()
			if (offset:Magnitude() < minRangeFromPlayer) then
				return
			end
		end

		-- roll for behavior
		local roll = math.random()
		if (roll < 0.2) then
			CritterWander(spawnNode)
		elseif (roll < 0.2) then
			CritterShy(spawnNode)
		elseif (roll < 0.9) then 
			CritterFlee(spawnNode)
		else
			CritterIdle(spawnNode)
		end
	end;
}

critterSpawner = DynamicSpawnManager:CreateSpawner(spawnData)
"
9500,Dynamic Spawner - Regions,"--
-- Dynamic Spawn - Region Types
--
DynamicSpawnRegion =
{
	Circle = 1;
}

DynamicSpawnRegion.RandomPoint = function(region)
	if (not region) then
		return
	end

	if (region.type == DynamicSpawnRegion.Circle) then

		-- CIRCLE: uniform spawning
		if (region.radius and region.radius > 0.1) then
			local angle = math.random()*math.pi*2
			local radius = math.sqrt(math.random())*region.radius

			local spawnPoint = Vector:New(
				radius*math.cos(angle),
				radius*math.sin(angle))
			if (region.center) then
				spawnPoint = spawnPoint + region.center
			end
			
			return spawnPoint
		end

	end
end

DynamicSpawnRegion.CalcBounds = function(region)
	if (not region) then
		return
	end

	if (region.type == DynamicSpawnRegion.Circle) then
		local boundsHalfDiagonal = Vector:New(region.radius, region.radius, 0)
		local boundsMin = region.center - boundsHalfDiagonal
		local boundsMax = region.center + boundsHalfDiagonal
		return boundsMin, boundsMax
	end
end

DynamicSpawnRegion.AccumulateBounds = function(region, boundsMin, boundsMax)

	local regionBoundsMin, regionBoundsMax = DynamicSpawnRegion.CalcBounds(region)
	if (regionBoundsMin and regionBoundsMax) then
		boundsMin.x = math.min(boundsMin.x, regionBoundsMin.x)
		boundsMin.y = math.min(boundsMin.y, regionBoundsMin.y)

		boundsMax.x = math.max(boundsMin.x, regionBoundsMin.x)
		boundsMax.y = math.max(boundsMin.y, regionBoundsMin.y)
	end

end
"
9501,Test - Darren's Dynamic Spawning - Critter Common,"local creatureID = 60205
actorCreateData = ActorCreateData:Default()
actorCreateData.groundSnap = true
actorCreateData.interactible = false
actorCreateData.floatingTooltip = false
actorCreateData.aoiSettings.range = ActorAOIRange.Infinite
actorCreateData.transform = Transform:New()
actorCreateData.scale = 0.4
actorCreateData.creatureID = creatureID

local workAnimKitID = 3570

local bunnyCreatureID = 62026
bunnyCreateData = ActorCreateData:Default()
bunnyCreateData.groundSnap = true
bunnyCreateData.interactible = false
bunnyCreateData.floatingTooltip = false
bunnyCreateData.aoiSettings.range = ActorAOIRange.Infinite
bunnyCreateData.scale = 0.6
bunnyCreateData.creatureID = bunnyCreatureID

local burrowMoveData = MoveData:Default(2)
burrowMoveData.isRelative = true
burrowMoveData.isGroundSnapping = true
burrowMoveData.posControl = MovePosControl.PointTime
burrowMoveData.yawControl = MoveRotControl.None
burrowMoveData.animKitID = workAnimKitID
burrowMoveData.points[1].time = 0.5
burrowMoveData.points[1].pos.z = -1
burrowMoveData.points[2].time = 2
burrowMoveData.points[2].pos.z = -4


local emergeMoveData = MoveData:Default(3)
emergeMoveData.isRelative = true
emergeMoveData.isGroundSnapping = true
emergeMoveData.teleportToFirstPoint = true
emergeMoveData.posControl = MovePosControl.PointTime
emergeMoveData.yawControl = MoveRotControl.None
emergeMoveData.animKitID = workAnimKitID
emergeMoveData.points[1].pos.z = -4
emergeMoveData.points[2].time = 0.5
emergeMoveData.points[2].pos.z = -1
emergeMoveData.points[3].time = 2

local burrowSpellVisualID = 27145

local pickUpJumpGravity = 50
local pickUpJumpTime = 0.5
local pickUpRange = 4
--local pickUpJumpGravity = 9.8
--local pickUpJumpTime = 2
--local pickUpRange = 20

local nextCritterID = 1

local critterMap = { }
local OnClick = function(critterID)

	local critter = critterMap[critterID]
	if (not critter) or (critter.clicked == true) or (not critter.actor) then
		return
	end

	local actor = critter.actor
	if (actor:IsDespawned()) then
		return
	end

	critter.clicked = true
	actor:SetInteractCursor(""pickup"", CursorRange.AlwaysOutOfRange, 0, nil)
	actor:SetInteractible(false)

	actor:ClearFacing()

	local playerDisplay = scene:GetActivePlayerDisplay()
	actor:SetScale(0.1)
	actor:Fade(0, pickUpJumpTime)
	if (playerDisplay) then
		playerDisplay:PlayAnimKit(3568, true, Animations.None)
		actor:SetSnapToGround(false)
		actor:WaitJumpToAbs(playerDisplay:GetPosition(), pickUpJumpTime, pickUpJumpGravity)
	end

	actor:Despawn()

end

function Spawn(spawnNode)
	actorCreateData.transform.position.x = spawnNode.spawnPoint.x
	actorCreateData.transform.position.y = spawnNode.spawnPoint.y
	actorCreateData.transform.position.z = spawnNode.spawnPoint.z
	actorCreateData.transform.yaw = math.random()*360
	
	local actor = scene:SpawnActor(actorCreateData)

	local critterID = nextCritterID
	nextCritterID = nextCritterID + 1

	local critter = { }
	critter.ID = critterID
	critter.actor = actor
	critter.clicked = false

	critterMap[critterID] = critter

	bunnyCreateData.transform.position = actor:GetPosition()
	local burrowBunny = scene:SpawnActor(bunnyCreateData)
	burrowBunny:PlaySpellPreCastVisual(burrowSpellVisualID)


	actor:SetSnapToGround(false)
	actor:Move(emergeMoveData)

	local time = emergeMoveData.points[3].time
	scene:WaitTimer(time*0.5)
	burrowBunny:SetSnapToGround(false)
	burrowBunny:Move(burrowMoveData)
	scene:WaitTimer(time*0.5)

	actor:SetSnapToGround(true)

	burrowBunny:Despawn()

	-- spawn off a click coroutine
	actor:SetInteractible(true)
	actor:SetInteractCursor(""pickup"", CursorRange.RangeFromPlayer, pickUpRange, nil)
	actor:AddOnRightClickListener(0, OnClick, critterID)

	return critter
end

function Burrow(critter)
	local actor = critter.actor

	"
9502,Test - Darren's Dynamic Spawning - Critter Idle,"
function CritterIdle(spawnNode)
	
	local critter = Spawn(spawnNode)
	local actor = critter.actor

	scene:WaitTimer(math.random(10, 20))

	if (critter.clicked == true) then
		return
	end
	
	Burrow(critter)
	Despawn(critter)
end
"
9503,Test - Darren's Dynamic Spawning - Critter Wander,"local wanderRadius = 2.0
local wanderIdleTimeMin = 2.0
local wanderIdleTimeMax = 5.0
local wanderSpeed = 4
local wanderMoveData = MoveData:Default(1)
wanderMoveData.isGroundSnapping = true
wanderMoveData.posControl = MovePosControl.ConstantSpeed
wanderMoveData.yawControl = MoveRotControl.Tangent
wanderMoveData.speed = wanderSpeed

function CritterWander(spawnNode)

	local critter = Spawn(spawnNode)
	local actor = critter.actor

	local numWanders = math.random(5, 10)
	for i = 1, numWanders do
		if (critter.clicked == true) then
			return
		end

		local angle = math.random()*math.pi*2.0
		local radius = math.sqrt(math.random())*wanderRadius
		local movePos = spawnNode.spawnPoint + radius*Vector:New(math.cos(angle), math.sin(angle))

		wanderMoveData.points[1].pos = movePos
		actor:WaitMove(wanderMoveData)
		if (critter.clicked == true) then
			return
		end

		local idleTime = math.random()*(wanderIdleTimeMax - wanderIdleTimeMin) + wanderIdleTimeMin
		scene:WaitTimer(idleTime)
	end

	if (critter.clicked == true) then
		return
	end

	Burrow(critter)
	Despawn(critter)
end
"
9504,Test - Darren's Dynamic Spawning - Critter Shy,"
local shyTickTimeMin = 0.25
local shyTickTimeMax = 0.5
local shyRange = 6.0

function CritterShy(spawnNode)

	local critter = Spawn(spawnNode)
	local actor = critter.actor
	
	local firstTick = true

	while true do
		if (critter.clicked == true) then
			return
		end

		local hide = true
		local playerDisplay = scene:GetActivePlayerDisplay()
		
		local myPos = actor:GetPosition()
		if (playerDisplay) then
			local playerPos = playerDisplay:GetPosition()
			local offset = myPos - playerPos
			local distance = offset:Magnitude()
			if (distance < shyRange) then
				hide = true
			else
				hide = false
				actor:SetFacingToAbs(playerPos)
			end
		end

		if (hide == true) then
			if (not firstTick) then
				Burrow(critter)
			end
			Despawn(critter)		
			return
		else
			local shyTick = math.random()*(shyTickTimeMax - shyTickTimeMin) + shyTickTimeMin
			scene:WaitTimer(shyTick)
		end

		firstTick = false
	end

end
"
9505,Test - Darren's Interact Listener,"scene:SetRelativeCoords(true)
local creatureID = 60205
actorCreateData = ActorCreateData:Default()
actorCreateData.groundSnap = true
actorCreateData.interactible = true
actorCreateData.floatingTooltip = false
actorCreateData.aoiSettings.priority = ActorAOIPriority.Low
actorCreateData.aoiSettings.range = ActorAOIRange.Normal
actorCreateData.transform = Transform:New(Vector:New(10, 0, 0))
actorCreateData.scale = 0.4
actorCreateData.creatureID = creatureID

local actor = scene:SpawnActor(actorCreateData)
actor:SetInteractCursor(""pickup"", CursorRange.RangeFromPlayer, 20, nil)

local OnRightClick = function(clickedActor)
	print(""clicked!"")
	clickedActor:Despawn()
end

actor:AddOnRightClickListener(0, OnRightClick, actor)

while (actor:IsDespawned() ~= true) do
	scene:WaitTimer(5)
end
print(""despawned!"")
"
9506,[1] Test - Darren's Dynamic Spawning - Critter Common,"actor:SetInteractible(false)

	bunnyCreateData.transform.position = actor:GetPosition()
	local burrowBunny = scene:SpawnActor(bunnyCreateData)
	burrowBunny:PlaySpellPreCastVisual(burrowSpellVisualID)

	actor:ClearFacing()
	actor:SetSnapToGround(false)
	actor:Move(burrowMoveData)

	local time = burrowMoveData.points[2].time
	scene:WaitTimer(time*0.5)
	burrowBunny:SetSnapToGround(false)
	burrowBunny:Move(burrowMoveData)
	scene:WaitTimer(time*0.5)
	burrowBunny:Despawn()
end

function Despawn(critter)
	critterMap[critter.ID] = nil

	local actor = critter.actor
	actor:SetInteractible(false)
	actor:Despawn()
	actor = nil
end
"
9507,Test - Darren's Dynamic Spawning - Critter Flee,"
local aliveTimeMin = 20
local aliveTimeMax = 40

local tickTimeMin = 0.25
local tickTimeMax = 0.5

local fleeDistance = 6
local fleeToRange = 8
local fleeRandom = 2
local fleeSpeed = 10

local fleeMoveData = MoveData:Default(1)
fleeMoveData.isGroundSnapping = true
fleeMoveData.posControl = MovePosControl.ConstantSpeed
fleeMoveData.yawControl = MoveRotControl.Tangent
fleeMoveData.speed = fleeSpeed

function CritterFlee(spawnNode)
	
	local critter = Spawn(spawnNode)
	local actor = critter.actor

	local lifeTime = math.random()*(aliveTimeMax - aliveTimeMin) + aliveTimeMin

	local aliveTime = 0
	while ((critter.clicked == false) and (aliveTime < lifeTime)) do
		local playerDisplay = scene:GetActivePlayerDisplay()
		if (playerDisplay) then
			-- move to a slightly random point away from the player
			local playerPos = playerDisplay:GetPosition()
			local myPos = actor:GetPosition()
			local offset = myPos - playerPos
			offset.z = 0
			local offsetMag = offset:Magnitude()
			if (offsetMag < fleeDistance) then
				local fleeDir = offset * (1.0 / offsetMag)
				local fleePoint = myPos + fleeDir*fleeToRange
				fleePoint.x = fleePoint.x + (math.random()-0.5)*2*fleeRandom
				fleePoint.y = fleePoint.y + (math.random()-0.5)*2*fleeRandom
				
				fleeMoveData.points[1].pos = fleePoint
				actor:Move(fleeMoveData)
			end
		end


		local tickTime = math.random()*(tickTimeMax - tickTimeMin) + tickTimeMin
		aliveTime = aliveTime + tickTime
		scene:WaitTimer(tickTime)
	end

	if (critter.clicked == true) then
		return
	end
	
	Burrow(critter)
	Despawn(critter)
end
"
9510,Dynamic Spawner - Internal,"--------------------------------------------------------------------------------
-- First pass Spawner

local SpawnNodeCoroutine = function(spawnFunc, spawnNode)
	spawnFunc(spawnNode)
	spawnNode.active = false
end

--------------------------------------------------------------------------------
local TrySpawn = function(spawner)
	local newSpawn = { }
	newSpawn.active = true
	newSpawn.spawnPoint = DynamicSpawnRegion.RandomPoint(spawner.spawnData.region)
	if (newSpawn.spawnPoint) then
		if (spawner.spawnData.minSpacing and spawner.spawnData.minSpacing > 0.1) then
			for index, existingSpawn in pairs (spawner.activeSpawns) do
				local offset = newSpawn.spawnPoint - existingSpawn.spawnPoint
				local distance = offset:Magnitude()
				if (distance < spawner.spawnData.minSpacing) then
					return false
				end
			end
		end

		table.insert(spawner.activeSpawns, newSpawn)
		if (spawner.spawnData.OnSpawn) then
			scene:AddCoroutineWithParams(SpawnNodeCoroutine, spawner.spawnData.OnSpawn, newSpawn)
		end
		return true
	end
	return false
end

--------------------------------------------------------------------------------
DynamicSpawnManager.SpawnerMain = function(spawner)
	spawner.DebugPrint(""Initializing Spawner '"" .. spawner.spawnData.name .. ""'"")

	-- add to the list of all spawners
	spawner.active = true
	spawner.activeSpawns = { }

	-- first pass spawn
	local maxSpawns = spawner.spawnData.maxSpawns or 10
	local tickRate = spawner.spawnData.tickRate or 1.0
	local maxFailedAttempts = 5

	local tickRateTimer = scene:Timer(tickRate)
	local frameTimer = scene:Timer(0)

	local activeCount = 0
	local failedAttempts = 0

	while (spawner.active == true) do
	
		-- iterate active spawns
		activeCount = 0
		for index, spawn in pairs(spawner.activeSpawns) do
			if (spawn.active == true) then
				activeCount = activeCount + 1
			else
				if (spawner.spawnData.OnDespawn) then
					scene:AddCoroutineWithParams(spawner.spawnData.OnDespawn, spawn)
				end
				spawner.activeSpawns[index] = nil
			end
		end
		
		failedAttempts = 0
		while (activeCount < maxSpawns) and (failedAttempts < maxFailedAttempts) do
			-- spawner.DebugPrint(""Try Spawn"")
			local wasSpawned = TrySpawn(spawner)
			if (wasSpawned == true) then
				failedAttempts = 0
				activeCount = activeCount + 1
			else
				failedAttempts = failedAttempts + 1
				spawner.DebugPrint(""Failed to find spawnpoint"")
			end
		end

		if (failedAttempts < maxFailedAttempts) then
			tickRateTimer:Reset()
			scene:Wait(tickRateTimer)
		else
			-- try and spawn again immediately
			frameTimer:Reset()
			scene:Wait(frameTimer)
		end

	end

	spawner.DebugPrint(""Shutting Down Spawner '"" .. spawner.spawnData.name .. ""'"")
	spawners[spawner.spawnData.name] = nil
end"
9836,Quest - IotTK 5.2: zto - Planting Bombs (Horde) - Init ,"----------------------
-- Helper Functions --
----------------------
function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-------------------------
-- Inits and Constants --
-------------------------

--Spells
tacticalManaBombSpellID = 137319
smallExplosion = 88309 
bigExplosion = 46419
nukeExplosion = 103119

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Creature IDs
bunnyCreatureID = 62026

local scenePos = scene:GetPosition()
local checkRadius = 100
local pathData = scene:LoadPath(5368)
local nearbyNodes = {}
local fires = {}

--Find nearby nodes
for i = 1, #pathData.nodes do
	local thisNode = pathData.nodes[i]
	local thisPos = thisNode.pos
	local distance = Vector.Dist(thisPos, scenePos)
	if (distance < checkRadius) then
		table.insert(nearbyNodes, thisPos)
	end
end



--for nearby nodes, spawn a bunny
for i=1, #nearbyNodes do
	local thisNode = nearbyNodes[i]
	local var = math.random(0, 359)
	fires[i] = SpawnActor(bunnyCreatureID, thisNode.x, thisNode.y, thisNode.z, var, 1, false)
end

nukeBunny = SpawnActor(bunnyCreatureID, scenePos.x, scenePos.y, scenePos.z, 0, 1, false)

------------
-- Action --
------------

Wait(1)
CastSpellAtActor(nukeBunny, nukeBunny, tacticalManaBombSpellID) --Set off the big nuke!
--Wait(1)
--Start the fires
for i=1, #fires do
	CastSpellAtActor(fires[i], fires[i], tacticalManaBombSpellID) --Set off the big nuke!
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end
--CastSpellAtActor(nukeBunny, nukeBunny, nukeExplosion, false) 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
9840,Quest - IotTK 5.2: zto - Planting Bombs (Horde) - Init,"----------------------
-- Helper Functions --
----------------------
function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-------------------------
-- Inits and Constants --
-------------------------

--Spells
smallExplosion = 88309 
bigExplosion = 46419

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Creature IDs
bunnyCreatureID = 62026

local scenePos = scene:GetPosition()
local checkRadius = 75
local pathData = scene:LoadPath(5368)
local nearbyNodes = {}
local fires = {}

SendTrigger(""Start Timer"")

--Find nearby nodes
for i = 1, #pathData.nodes do
	local thisNode = pathData.nodes[i]
	local thisPos = thisNode.pos
	local distance = Vector.Dist(thisPos, scenePos)
	if (distance < checkRadius) then
		table.insert(nearbyNodes, thisPos)
	end
end

--for nearby nodes, spawn a bunny
for i=1, #nearbyNodes do
	local thisNode = nearbyNodes[i]
	local var = math.random(0, 359)
	fires[i] = SpawnActor(bunnyCreatureID, thisNode.x, thisNode.y, thisNode.z, var, 1, false)
end


------------
-- Action --
------------

--Start the fires
for i=1, #fires do
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end
 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
9841,Quest - IotTK 5.2: zto - Planting Bombs (Horde) - Looper,"WaitForTrigger(""Start Timer"")
Wait(601)
scene:EndScene()"
9915,Scenario - Tear Down This Wall - Init - JSB,"
-- spawn al'chukla
local alchuklaCreatureID = 69755
alchukla = SpawnActor( alchuklaCreatureID, 6602.72, 5322.08, 49.8504, 138.928, 1.0, true )


"
9916,Scenario - Tear Down This Wall - MASTER - JSB,"
scene:SetFadeRegion(1, true) -- (radius, fadeActivePlayer)


scene:SetCamera(512,0,nil,nil) -- (camera, transition time, primary target, secondary target)

Wait( 3 )

SetCameraFollowPath( 368, 1, 5373, 5374, 5 ) -- (camera, transition time, spline, target spline, duration)

Wait( 4 )

scene:TriggerServerEvent(""Wallbreak"") -- server will cast spell specified in the scene

local shakeOrigin = Vector:New(6606.27, 5336.19, 23.3737, 319.65)
shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )


Wait( 2 )


scene:SetCamera(0,5,nil,nil) -- sets camera back to game-cam

Wait( 5 )

scene:EndScene()

"
9917,Quest - IotTK 5.2: zto - Planting Bombs (Alliance) - Init,"----------------------
-- Helper Functions --
----------------------
function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-------------------------
-- Inits and Constants --
-------------------------

--Spells
smallExplosion = 88309 
bigExplosion = 46419

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Creature IDs
bunnyCreatureID = 62026

local scenePos = scene:GetPosition()
local checkRadius = 75
local pathData = scene:LoadPath(5375)
local nearbyNodes = {}
local fires = {}

SendTrigger(""Start Timer"")

--Find nearby nodes
for i = 1, #pathData.nodes do
	local thisNode = pathData.nodes[i]
	local thisPos = thisNode.pos
	local distance = Vector.Dist(thisPos, scenePos)
	if (distance < checkRadius) then
		table.insert(nearbyNodes, thisPos)
	end
end

--for nearby nodes, spawn a bunny
for i=1, #nearbyNodes do
	local thisNode = nearbyNodes[i]
	local var = math.random(0, 359)
	fires[i] = SpawnActor(bunnyCreatureID, thisNode.x, thisNode.y, thisNode.z, var, 1, false)
end


------------
-- Action --
------------

--Start the fires
for i=1, #fires do
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end
 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
9918,Quest - IotTK 5.2: zto - Planting Bombs (Alliance) - Looper,"WaitForTrigger(""Start Timer"")
Wait(601)
scene:EndScene()"
9919,PetBattle - Debug Stuff,"debugOn = false;

warningsEnabled = battleScene:WarningsEnabled();

function DebugPrint(...)
	if ( debugOn == true ) then
		print(...);
	end
end

function LocalDebugPrint(enabled, name)
	local debugPrint = function(data)
		if (debugOn == true) then
			DebugPrint(name .. "": "" .. tostring(data))
		end
	end
	return debugPrint
end

function warning (...)
	if ( warningsEnabled == true ) then
		print(...);
	end
end


STATE_LOOKUP = {
    STATE_Is_Dead = 1;
    STATE_maxHealthBonus = 2;
    STATE_speedBonus = 3;
    STATE_Stat_Kharma = 4;
    STATE_healthBonus = 17;
    STATE_Stat_Power = 18;
    STATE_Stat_Stamina = 19;
    STATE_Stat_Speed = 20;
    STATE_Mechanic_IsPoisoned = 21;
    STATE_Mechanic_IsStunned = 22;
    STATE_Mod_DamageDealtPercent = 23;
    STATE_Mod_DamageTakenPercent = 24;
    STATE_Mod_SpeedPercent = 25;
    STATE_Ramping_DamageID = 26;
    STATE_Ramping_DamageUses = 27;
    STATE_Condition_WasDamagedThisTurn = 28;
    STATE_untargettable = 29;
    STATE_Mechanic_IsUnderground = 30;
    STATE_Last_HitTaken = 31;
    STATE_Last_HitDealt = 32;
    STATE_Mechanic_IsFlying = 33;
    STATE_Mechanic_IsBurning = 34;
    STATE_turnLock = 35;
    STATE_swapLock = 36;
    STATE_Stat_CritChance = 40;
    STATE_Stat_Accuracy = 41;
    STATE_Passive_Critter = 42;
    STATE_Passive_Beast = 43;
    STATE_Passive_Humanoid = 44;
    STATE_Passive_Flying = 45;
    STATE_Passive_Dragon = 46;
    STATE_Passive_Elemental = 47;
    STATE_Passive_Mechanical = 48;
    STATE_Passive_Magic = 49;
    STATE_Passive_Undead = 50;
    STATE_Passive_Aquatic = 51;
    STATE_Mechanic_IsChilled = 52;
    STATE_Weather_BurntEarth = 53;
    STATE_Weather_ArcaneStorm = 54;
    STATE_Weather_Moonlight = 55;
    STATE_Weather_Darkness = 56;
    STATE_Weather_Sandstorm = 57;
    STATE_Weather_Blizzard = 58;
    STATE_Weather_Mud = 59;
    STATE_Weather_Rain = 60;
    STATE_Weather_Sunlight = 61;
    STATE_Weather_LightningStorm = 62;
    STATE_Weather_Windy = 63;
    STATE_Mechanic_IsWebbed = 64;
    STATE_Mod_HealingDealtPercent = 65;
    STATE_Mod_HealingTakenPercent = 66;
    STATE_Mechanic_IsInvisible = 67;
};"
9920,PetBattle - Constants,"--------------------------------------------------------------------------------
-- spawning options
battleScale    = 1.0
spawnFwdOffset = 0.0
initialFadeInTime = 0.5

--------------------------------------------------------------------------------
-- pet ranges and move speeds
playerRadius   = 5.0
idleRadius     = 2.0
readyRadius    = 1.25
rangedRadius   = 0.5
meleeRadius    = -0.5
backlineRadius = 4.0
forwardSpeed   = 7
backwardSpeed  = 8

--------------------------------------------------------------------------------
-- backline
backlineSpacing = 2.0
backlineAlpha   = 1.0
backlineFadeTime = 0.25

--------------------------------------------------------------------------------
-- pad
padModel = ""CREATURE\\INVISIBLESTALKER\\InvisibleStalker.M2""
padAlpha = 1.0
padScale = 1.0

--------------------------------------------------------------------------------
-- arena
arenaRingModel = ""SPELLS\\Stranglethorn_DiamondMines_Circle_Effect_Solid_White.M2""
arenaRingAlpha = 0.5
arenaRingScale = 1.0
arenaFadeTime = 5.0

--------------------------------------------------------------------------------
-- camera
freelookZoomMin = 5
freelookZoomMax = 15
freelookZoomStart = 10.0
useFreelookCamera = true
if (not Scene.SetGameCameraTarget) then
	useFreelookCamera = false
end

battleCameraIDs =
{
	intro = 336;
	idle = 335;
}

--------------------------------------------------------------------------------
-- animation
petBattleAnimKits =
{
	Stand 			= 2267;
	Death 			= 2268;
	Dead  			= 2269;
	StandHoldDecay 	= 2133;
	CloseClosed		= 2770;
	OpenOpened		= 2769;
	Custom0Custom1  = 2768;
}
"
9921,PetBattle - Functions,"
function BuildVector(facing, fwd, right)
	local facingRads = math.rad(facing)
	local facingX = math.cos(facingRads)
	local facingY = math.sin(facingRads)
	
	local absPos = Vector:New(
		(facingX*fwd - facingY*right) * battleScale,
		(facingY*fwd + facingX*right) * battleScale,
		0)
	
	if spawnFwdOffset then
		absPos.x = absPos.x + spawnFwdOffset
	end

	return absPos
end

function GetTeamByIndex(teamIndex)
	return teams[teamIndex]
end

function GetActivePetByIndex(teamIndex)
	local team = GetTeamByIndex(teamIndex)
	return team.pets[team.activePet]
end


function ResetActivePets()
	-- return pets to idle
	WaitMoveToRadius(GetActivePetByIndex(1), idleRadius)
	WaitMoveToRadius(GetActivePetByIndex(2), idleRadius)
end

function LookAtOpposingTeam(pet)
	local lookAtPos = BuildVector(pet.teamFacing, idleRadius, 0)
	pet.actor:SetFacingToAbs(lookAtPos)
end

function SetHealth(pet, health, fullUpdate)

	local oldHealth = pet.currentHealth
	pet.currentHealth = health

	-- damage numbers feedback for observed battles
	if (isObserved) and (not fullUpdate) and (oldHealth ~= nil) then
		local change = health - oldHealth
		if (change < 0) and (Actor.AddDamageText) then
			pet.actor:AddDamageText(nil, -change, false, false)
		elseif (change > 0)  and (Actor.AddHealingText) then
			pet.actor:AddHealingText(nil, change, false, false)
		end
	end

	if (pet.currentHealth <= 0) and (not pet.deathAnimKit) then
		-- HACKfix facing way off in the distance so as to effectively not rotate
		local lookAtPos = BuildVector( (pet.teamFacing or 0.0), idleRadius*1000, 0)
		pet.actor:SetFacingToAbs(lookAtPos)
		if ( pet.realActor ) then 
			pet.realActor:SetFacingToAbs(lookAtPos)
		end

		RemoveAllAuraVisuals(pet)

		-- play dead
		local deathKitID = 62
		if (fullUpdate == true) then
			-- already dead
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			end
		else
			-- dieing
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			end
			scene:WaitTimer(1.5)
		end

		pet.dead = true;


		return ""dead"";
	elseif (pet.currentHealth > 0) and (pet.deathAnimKit) then
		-- resurrect

		pet.deathAnimKit:Stop()
		pet.deathAnimKit = nil
		pet.dead = false;
		local lookAtPos = BuildVector(pet.teamFacing, idleRadius, 0)
		LookAtOpposingTeam(pet)
		pet.actor:Fade(GetAlpha(pet), 0.5)
		UpdateAuraVisuals(pet)

		return ""respawn"";
	end
end

function SetXP(pet, xp, level, fullUpdate)
	local oldXP = pet.xp
	local oldLevel = pet.level
	pet.xp = xp
	pet.level = level
	if (fullUpdate) then
		return
	end
		
	local xpChange = pet.xp - oldXP
	local levelChange = pet.level - oldLevel
	if (xpChange <= 0) and (levelChange <= 0) then
		return
	end

	if (xpChange > 0) and (pet.playerID == observingPlayerIndex) then
		pet.actor:AddWorldXPGainText(xpChange)
	end

	if (levelChange > 0) then
		pet.actor:ApplyLevelUpEffect()
	end
end

function GetAlpha(pet)
	if (pet.deathAnimKit) then
		return 0
	else
		return 1
	end
end

function GetAttackRadius(rangeType)
	local attackRadius = readyRadius
	if rangeType == PetBattleRange.Melee then
		attackRadius = meleeRadius
	elseif rangeType == PetBattleRange.Ranged then
		attackRadius = rangedRadius
	end
	return attackRadius
end
"
9922,PetBattle - Ability Data,"
local petAbilities = { }
local petAbilityTurns = { }
local petAbilityEffects = { }
local petAbilityEffectTypes = { }
local petAbilityVisuals = { }

local debugStaticData = false
local debugEffectVisualSearch = false 

function InitStaticData(initialBattleState)
	if (debugStaticData) then
		print(""Init Static Data"")
	end

	for index,ability in pairs(initialBattleState.abilityDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY "" .. ability.ID)
		end
		petAbilities[ability.ID] = ability
	end

	for index,abilityTurn in pairs(initialBattleState.abilityTurnDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY TURN "" .. abilityTurn.ID)
		end
		petAbilityTurns[abilityTurn.ID] = abilityTurn
	end

	for index,abilityEffect in pairs(initialBattleState.abilityEffectDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY EFFECT "" .. abilityEffect.ID)
		end
		petAbilityEffects[abilityEffect.ID] = abilityEffect
	end

	for index,abilityEffectType in pairs(initialBattleState.abilityEffectTypeDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY EFFECT TYPE "" .. abilityEffectType.ID)
		end
		petAbilityEffectTypes[abilityEffectType.ID] = abilityEffectType
	end

	for index,abilityVisual in pairs(initialBattleState.abilityVisualDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY VISUAL "" .. abilityVisual.ID)
		end

		petAbilityVisuals[abilityVisual.ID] = abilityVisual

		-- add any custom script function
		LoadCustomVisualScript(abilityVisual)
	end

end

function GetAbility(abilityID)
	if (abilityID) then
		return petAbilities[abilityID]
	end
end

function GetAbilityTurn(abilityTurnID)
	if (abilityTurnID) then
		return petAbilityTurns[abilityTurnID]
	end
end

function GetAbilityEffect(abilityEffectID)
	if (abilityEffectID) then
		return petAbilityEffects[abilityEffectID]
	end
end

function GetAbilityEffectType(abilityEffectTypeID)
	if (abilityEffectTypeID) then
		return petAbilityEffectTypes[abilityEffectTypeID]
	end
end

function GetAbilityVisual(abilityVisualID)
	if (abilityVisualID) then
		return petAbilityVisuals[abilityVisualID]
	end
end

function GetAllAbilityVisualsFromEffectID(effectID)
	local effectVisual = nil
	local turnVisual = nil
	local abilityVisual = nil
	local effectTypeVisual = nil

	local abilityEffect = GetAbilityEffect(effectID)
	if (abilityEffect) then
		effectVisual = GetAbilityVisual(abilityEffect.visualID)

		-- check parents: turn and then ability
		local abilityTurn = GetAbilityTurn(abilityEffect.turnID)
		if (abilityTurn) then
			turnVisual = GetAbilityVisual(abilityTurn.visualID)

			local ability = GetAbility(abilityTurn.abilityID)
			if (ability) then
				abilityVisual = GetAbilityVisual(ability.visualID)		
			end			
		end

		-- check fallback: effect properties
		local effectType = GetAbilityEffectType(abilityEffect.effectType)
		if (effectType) then
			effectTypeVisual = GetAbilityVisual(effectType.visualID)
		end
	end

	return effectVisual, turnVisual, abilityVisual, effectTypeVisual
end

function GetAbilityVisualFromEffectID(effectID)
	-- Priority rules for picking visuals for an EFFECT:
	--   1. Effect Visual
	--   2. Turn Visual (if not scripted)
	--   3. Ability Visual (if not scripted)
	--   4. Effect Type Visual
	local effectVisual = nil
	local turnVisual = nil
	local abilityVisual = nil
	local effectTypeVisual = nil
	effectVisual, turnVisual, abilityVisual, effectTypeVisual = GetAllAbilityVisualsFromEffectID(effectID)

	if (effectVisual) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" Visual: Using EFFECT Visual ID "" .. effectVisual.ID)
		end
		return effectVisual
	end

	if (turnVisual and turnVisual.scriptFunction == nil) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" "
9923,[1] PetBattle - Ability Data,"Visual: Using TURN Visual ID "" .. turnVisual.ID)
		end
		return turnVisual
	end

	if (abilityVisual and abilityVisual.scriptFunction == nil) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" Visual: Using ABILITY Visual ID "" .. abilityVisual.ID)
		end
		return abilityVisual
	end

	if (debugEffectVisualSearch) then
		if (effectTypeVisual) then
			print(""Effect "" .. effectID .. "" Visual: Using EFFECT TYPE visual ID "" .. effectTypeVisual.ID)
		else
			print(""Effect "" .. effectID .. "" Visual: NONE FOUND"")
		end
	end

	return effectTypeVisual
end

function GetAuraAbilityVisualID(auraAbilityID)
	-- in the absence of any other info, search down to the first turn
	local visualID = nil
	local ability = petAbilities[auraAbilityID]
	if (not ability) then
		return visualID
	end

	if (ability.visualID and ability.visualID ~= 0) then
		visualID = ability.visualID
	end

--[[
	if (#ability.turnIDs < 1) then
		return visualID
	end

	local abilityTurn = petAbilityTurns[ ability.turnIDs[1] ]
	if (not abilityTurn) then
		return visualID
	end

	if (abilityTurn.visualID and abilityTurn.visualID ~= 0) then
		visualID = abilityTurn.visualID
	end
]]--
	return visualID
end

function GetAuraAbilityVisual(auraAbilityID)
	local abilityVisualID = GetAuraAbilityVisualID(auraAbilityID)
	if (not abilityVisualID) then
		return nil
	end

	return petAbilityVisuals[abilityVisualID]
end
"
9924,PetBattle - Init Player,"
allPlayers = { }

function InitTeam(playerID, team)

	-- save the team
	allPlayers[playerID] = team

	local padRadius = -idleRadius
	if (playerID == PetBattlePlayerID.Weather) then
		padRadius = 0
		team.isWeather = true
	else
		team.isWeather = false
	end

	-- spawn a pad for this team
	local padPos = BuildVector(team.teamFacing, padRadius, 0)
	local padTransform = Transform:New(padPos, team.teamFacing)
	local padCreateData = ActorCreateData:NewModel(""pad"", padModel, padTransform, padScale*battleScale)
	padCreateData.interactible = false
	if (PetBattleScene.SpawnPet) then
		padActor = battleScene:SpawnPet(playerID, PetBattlePetID.Pad, padCreateData)
	else
		padActor = scene:SpawnActor(padCreateData)
	end
	padActor:Fade(padAlpha, 0)

	-- spawn NPC character
	if (team.npcCreatureID and team.npcCreatureID > 0 and team.npcDisplayID) then
		local npcPos = BuildVector(team.teamFacing, -playerRadius, 0)
		local npcCreateData = ActorCreateData:Default()
		npcCreateData.creatureID = team.npcCreatureID
		npcCreateData.creatureDisplayID = team.npcDisplayID
		npcCreateData.transform = Transform:New(npcPos, team.teamFacing)
		npcCreateData.interactible = false
		if (PetBattleScene.SpawnNPC) then
			team.npcActor = battleScene:SpawnNPC(playerID, npcCreateData)
		else
			team.npcActor = scene:SpawnActor(npcCreateData)
		end
		team.playerDisplay = team.npcActor
	end

	team.pets = { }
	local numDescs = #team.petDescs
	local backLineOffset = (0.5 - math.floor((numDescs - 1) / 2)) * backlineSpacing
	for id, petDesc in pairs(team.petDescs) do
		local pet = { desc = petDesc, teamFacing = team.teamFacing, slot = id, auras = { } }
		pet.playerID = playerID
		team.pets[id] = pet

		if (id == PetBattlePetID.Pad) then
			pet.isPad = true
			pet.actor = padActor
			team.pad = pet
		else			
			pet.isPad = false
			local radius = backlineRadius
			local offset = 0
			if id == team.activePet then
				if (numDescs > 1) and (initialBattleState.battleState == PetBattleState.WaitingPreBattle) then
					radius = backlineRadius
				else
					radius = idleRadius
				end
			else
				offset = backLineOffset
				backLineOffset = backLineOffset + backlineSpacing
			end
			
			local pos = BuildVector(team.teamFacing, -radius, offset)
			local transform = Transform:New(pos, team.teamFacing)
			
			local petCreateData = ActorCreateData:New(petDesc.creatureID, transform, battleScale)
			petCreateData.creatureDisplayID = petDesc.displayID or 0

			pet.actor = scene:SpawnActor(petCreateData)

			SetXP(pet, petDesc.xp, petDesc.level, true)
			SetHealth(pet, petDesc.health, true)

			pet.status = petDesc.status

			pet.currentRadius = radius
			pet.currentOffset = offset

			-- always face the opponent location (at idleRadius)
			LookAtOpposingTeam(pet)


			-- hide all pets until loaded
			pet.actor:SetInteractible(false)
			pet.actor:SetHidden(true)
			pet.actor:Fade(0, 0)
			pet.standAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Stand, false, Animations.None)
		end

		-- apply initial auras
		for auraIndex, auraData in pairs(petData.auras or { }) do
			local auraVisual = petAbilityVisuals[auraData.auraVisualID]
			if (auraVisual) then
				ApplyAura(pet, auraData.instanceID, auraData.turnsRemaining, auraVisual.spellVisualID)
			end
		end

	end
end

function WaitAllPetsLoaded()

	local waitCondition = function()
		-- all actors must be renderable
		for playerID, player in pairs( allPlayers ) do
			if ( player.pets ) then 
				for slot, pet in pairs ( player.pets ) do
					if not pet.actor:IsReadyToDisplay() then
						return false
					end
				end
			end
		end
		return true
	end
	scene:WaitCondition(waitCondition)

end

function FadeInAllPets( fadeInTime )

	for playerID, player in pairs( allPlayers ) do
		if (player.isWeather == false) "
9925,[1] PetBattle - Init Player,"then
			for slot, pet in pairs ( player.pets ) do
				if (pet.isPad == false) then
					pet.actor:SetHidden(false)

					local targetAlpha = backlineAlpha
					if slot == player.activePet then
						-- use the front alpha if it is the active pet
						targetAlpha = GetAlpha(pet)
					end

					pet.actor:Fade(targetAlpha, fadeInTime)
				end
			end
		end
	end

	-- wait until faded in
	if fadeInTime > 0 then
		scene:WaitTimer( fadeInTime )
	end

	-- make everything interactible again
	for playerID, player in pairs( allPlayers ) do
		if (player.isWeather == false) then
			for slot, pet in pairs ( player.pets ) do
				if (pet.isPad == false) then
					pet.actor:SetInteractible( true )
				end
			end
		end
	end

end
"
9926,PetBattle - 1. Handle Event,"
-- Helper Functions for processing effects
local currentEffectInstanceID = nil

-- uncomment the below to check for dupes
--local processHistoryList = { }

function ProcessEvent(event)

	-- apply the different types of effects
	if not (event) then
		return true
	end

	local eventType = event.eventType

	StartEffectProcessing(event)

	if (eventType == PetBattleEvent.BattleOver) then

		return false, event.winnerID
	elseif (eventType == PetBattleEvent.BattleResultsBegin ) then

		if ( event.winnerID == 3 or event.abandoned ) then 
			FleeCeremony(event.winnerID);
		elseif ( event.winnerID == observingPlayerIndex ) then 
			VictoryCeremony(event.winnerID)
		end

	elseif (eventType == PetBattleEvent.BattleResults) then

		if ( event.winnerID == observingPlayerIndex ) then 
			EventReward(event.rewards)
		end

	elseif (eventType == PetBattleEvent.ObserverChange) then

		local newIsObserved = false
		local newObservingPlayerIndex = 0
		if (battleScene.GetUIObservingPlayer) then
			newObservingPlayerIndex = battleScene:GetUIObservingPlayer()
			if (observingPlayerIndex > 0) then
				newIsObserved = true
			end
		end

		if (newIsObserved ~= isObserved) or (newObservingPlayerIndex ~= newIsObserved) then
			isObserved = newIsObserved
			observingPlayerIndex = newObservingPlayerIndex
			if (observingPlayerIndex > 0) then
				SetCamera(3)
			else
				SetCamera(4)
			end
		end

	elseif (eventType == PetBattleEvent.MoveAbilitySelected) then
		EventMoveAbilitySelected(event.abilityVisualID)
	elseif (eventType == PetBattleEvent.MovePetSwapSelected) then
		EventMovePetSwapSelected(event.newFrontPet)
	elseif (eventType == PetBattleEvent.MoveTrapSelected) then
		EventMoveTrapSelected()
	elseif (eventType == PetBattleEvent.RoundEffect) then
		print(""WARNING: processing round result outside of RoundStart/End"")
		ProcessRoundResult(event)
	elseif (eventType == PetBattleEvent.RoundStart) then

		-- pull off all round effects
		local allEffects = { }
		local effectNum = 0
		local done = false
		while ((done ~= true) and (battleScene:HasPendingEffects() == true)) do
			event = battleScene:GetPendingEffect()
			eventType = event.eventType
			if (eventType == PetBattleEvent.RoundComplete) then
				done = true
			else
				effectNum = effectNum + 1
				allEffects[effectNum] = event
			end
		end
		
		-- if we have at least one effect or we're done, make sure
		-- process the round start then batch process effects
		-- NOTE: the event we are left with will be RoundComplete
		if (done == true or #allEffects > 0) then
			SignalEffectProcessed()
			ProcessAllRoundResults(allEffects)

			-- switch to the next pendign event
			StartEffectProcessing(event)
		end
	end

	-- Ensure the current effect was processed
	SignalEffectProcessed()

	if (eventType == PetBattleEvent.RoundComplete) then
		if ( PostRoundCleanUp ) then
			PostRoundCleanUp(event);
		end
		
		for playerID, player in pairs(teams) do
			ClearTrapPrecast(playerID)
		end
		--ResetActivePets()
	end

	return true
end

--local lastEvent = nil
function StartEffectProcessing(event)
--	lastEvent = event

	local instanceID = event.instanceID
	if ((instanceID ~= nil) and (processHistoryList ~= nil)) then
		local history = processHistoryList[instanceID]
		if (history ~= nil) then
			print(""ERROR: started processing old event ID "" .. instanceID .. "", in history as "" .. tostring(history))
			ForceStackError()
		else
			processHistoryList[instanceID] = ""STARTED""
		end
	end

	-- save the instance ID of the effect currently being processed
	currentEffectInstanceID = instanceID
end

function SignalEffectProcessed()

--[[	if (lastEvent and
		lastEvent.eventType == PetBattleEvent.RoundResult and
		(lastEvent.resultType == PetBattleEffect.SetHealth or
		lastEvent.effectType == "
9927,[1] PetBattle - 1. Handle Event,"PetBattleEffect.SetHealth)
		and lastEvent.value <= 0) then
		ForceStackError()
	end]]

	if ((currentEffectInstanceID ~= nil) and (processHistoryList ~= nil)) then
		local history = processHistoryList[currentEffectInstanceID]
		if (history ~= ""STARTED"") then
			print(""ERROR: signaled processed old event ID "" .. instanceID .. "", in history as "" .. tostring(history))
			ForceStackError()			
		else
			processHistoryList[currentEffectInstanceID] = ""PROCESSED""
		end
	end

	if currentEffectInstanceID and battleScene then
		battleScene:SignalEffectApplied(currentEffectInstanceID)
		currentEffectInstanceID = nil
	end
end

-- TODO: add a pcall for safety, but pcall where the function can yield requires
-- Lua 5.1 at least
local createFormatString = [[
return function(...)
  local customFunc = function(...)
    return %s
  end
  customFunc(...)
  return true
end
]]

function LoadCustomVisualScript(abilityVisual)
	if (not abilityVisual) then
		return
	end

	local customScriptString = abilityVisual.scriptFunctionString

	if (customScriptString and #customScriptString > 0) then
		local createString = string.format(createFormatString, customScriptString, abilityVisual.ID, customScriptString)
		local status, result = pcall(loadstring(createString))
		if (status == true) then
			setfenv(result, getfenv())
			abilityVisual.scriptFunction = result
		else
			print(""ERROR: loading script on BattlePetVisual ID="" .. abilityVisual.ID .. "" failed: "" .. createString)
			print(""ERROR: "" .. result)
		end
	end

end

"
9928,PetBattle - 2. Pre-Playback Processing,"--------------------------------------------------------------------------------
-- Group and process all round effects

local processDebug = false;

-- TODO: child proc groups were not being handled as expected
local flattenProcs = false; 

function ProcessAllRoundResults(allEvents)
	if ( processDebug ) then 
		DebugPrint(""== Round Result Grouping =="")
	end

	-- group on (turnInstanceID, effectID, stackDepth)

	-- build an effect tree, taking into account procs
	local turnGroups = { }
	local effectGroups = { }
	
	-- top level turns that we will process
	local topLevelTurnGroups = { }
	
	-- generate groups, and a  mapping from effectIndex
	local lastEffect = nil

	local currentFlatTurnKey = 1
	local currentFlatEffectKey = 1
	local lastGenKeyEvent = nil

	for eventIndex, event in pairs(allEvents) do
		local turnKey
		local effectKey

		if (flattenProcs == true) then
			-- flatten the turn structure for key generation, preserving order
			-- and maintaining group splits on visuals
			if (lastGenKeyEvent) then
				local turnGroupDiffers = false
				if (event.stackDepth ~= lastGenKeyEvent.stackDepth) or (event.turnInstanceID ~= lastGenKeyEvent.turnInstanceID) then
					turnGroupDiffers = true
					currentFlatTurnKey = currentFlatTurnKey + 1
				end

				if (turnGroupDiffers == true) or (event.turnInstanceID ~= lastGenKeyEvent.turnInstanceID) then
					currentFlatEffectKey = currentFlatEffectKey + 1
				end
			end

			turnKey = currentFlatTurnKey
			effectKey = currentFlatEffectKey
			lastGenKeyEvent = event

			if ( EVENT_DEBUG_MODE ) then 
				print(""FLATTENED: "" .. event.instanceID .. "", TK="" .. tostring(turnKey) .. "", EK="" .. tostring(currentFlatEffectKey))
			end
		else
			turnKey, effectKey = GenerateUniqueGroupKeys(event)

			if ( EVENT_DEBUG_MODE ) then 
				print(""PROCTREE: "" .. event.instanceID .. "", TK="" .. tostring(turnKey) .. "", EK="" .. tostring(currentFlatEffectKey))
			end
		end

		local abilityEffect 	
		local abilityEffectType 
		local abilityTurn 		
		local ability 			

		local abilityID
		local abilityVisualID 			
		local turnVisualID				
		local effectVisualID 			
		local effectFallbackVisualID

		-- Load up the relevant spell data
		abilityEffect 	= GetAbilityEffect(event.effectID);
		if ( abilityEffect ) then 
			abilityEffectType 	= GetAbilityEffectType(abilityEffect.effectType)
			abilityTurn 		= GetAbilityTurn(abilityEffect.turnID)
			ability 			= GetAbility(abilityTurn.abilityID)

			abilityID 				= ability.ID;
			abilityVisualID 		= ability.visualID
			turnVisualID			= abilityTurn.visualID
			effectVisualID 			= abilityEffect.visualID
			effectFallbackVisualID	= abilityEffectType.visualID
		end

		local filteredEvent = FilterResultEventsByType(event);
--print(""Turn Key: ""..turnKey.."" EffectID: ""..event.effectID);
		-- find or build a turn group as necessary
		local turnGroup = turnGroups[turnKey]
		if (not turnGroup) then
			turnGroup =
			{
				class = ""turn"";

				key = turnKey;
				turnInstanceID = event.turnInstanceID;
				firstEvent = filteredEvent;
				effects = { };

				turnVisualID = turnVisualID;
				abilityID = abilityID or event.trapAbilityID;
				playerID = event.casterPlayerID or event.targetPlayerID;
				petSlot = event.casterPetSlot or event.targetPetSlot;
				sourceAuraInstanceID = event.sourceAuraInstanceID;
			}
			turnGroup = FilteredEventMetaTable( turnGroup )
			turnGroups[turnKey] = turnGroup
			
			if (event.stackDepth <= 1) or (not lastEffect) then
				table.insert(topLevelTurnGroups, turnGroup)
			else
				DebugPrint ( ""PROC!!"", event.effectID, "" : "",abilityID )				
--print( ""Proc Detected ""..event.instanceID )
--				table.insert(topLevelTurnGroups, turnGroup)		
			
				-- this is a proc off of the last effect, and should be attached as a child
				"
9929,[1] PetBattle - 2. Pre-Playback Processing,"lastEffect.procGroup = turnGroup
			end
		
			if ( processDebug ) then 
				DebugPrint(""+ New Turn Group, turnID = "" .. event.turnInstanceID .. "", depth = "" .. event.stackDepth
					.."", ability: ""..tostring(abilityID));
			end
		end
		
		-- find or build an effect group as necessary
		local effectGroup = effectGroups[effectKey]
		if (not effectGroup) then
			effectGroup =
			{
				class = ""effect"";

				key = effectKey;
				firstEvent = filteredEvent;
				results = { };
				
				effectID				= event.effectID;
				effectVisualID 			= effectVisualID;
				effectFallbackVisualID 	= effectFallbackVisualID;
				targetPlayerID 			= event.targetPlayerID;
				targetPetSlot 			= event.targetPetSlot;
			}
			--effectGroup = FilteredEventMetaTable( effectGroup )

			effectGroups[effectKey] = effectGroup

		
			-- this is a new effect group, link it to the end of our parent turn group
			table.insert(turnGroup.effects, effectGroup)

			if ( processDebug ) then
				local effectName = ""Unknown"";

				for k,v in pairs(PetBattleEffect) do 
					if ( v == event.effectType ) then
						effectName = k;
					end
				end

				DebugPrint(""+   New Effect Group, effectID = "" .. event.effectID.."" effectType: ""..effectName)
			end
		end


		-- add this effect to the end of the group list
		table.insert(effectGroup.results, filteredEvent)

		if ( processDebug ) then

			local effectName = ""Unknown"";

			for k,v in pairs(PetBattleEffect) do 
				if ( v == event.effectType ) then
					effectName = k;
				end
			end

			local eventType = ""Unknown"";
			for k,v in pairs(PetBattleEvent) do 
				if ( v == event.eventType ) then
					eventType = k;
				end 
			end

			DebugPrint(""+     New Result, instanceID = "" .. event.instanceID.."" effectType: ""..effectName.."" eventType: ""..eventType)
		end
		
--		lastEffect = event
		lastEffect = filteredEvent
	end
	if ( processDebug ) then
		DebugPrint(""  "")
	end

	-- [ABrazie]: Heavy duty debug mode
	if ( EVENT_DEBUG_MODE ) then 
		for turnID, turn in pairs (topLevelTurnGroups) do 
			DebugTurnGroup(turnID, turn)
		end
	end

	PostProcessAllTurns( topLevelTurnGroups ) 

	PlaybackAllTurns(topLevelTurnGroups);

	if ( processDebug ) then
		DebugPrint(""  "")
	end
end

function DebugTurnGroup(turnID, turn)
	print(""turnKey = "" .. turn.key)
	for effectID, effect in pairs( turn.effects ) do
		print(""effectKey = "" .. effect.key)
		for resultID, result in pairs( effect.results ) do 
			print( ""  AA: T) ""..turnID.."" E) ""..effectID.."" R) ""..resultID.."" I)""..result.instanceID.."" - ""..DEBUG_EVENT_LOG[result.instanceID]  );
			if (result.procGroup) then
				DebugTurnGroup(""PROC"", result.procGroup)
			end
		end
	end
end

-- Used for the Brazie Event Filtering System
function FilterResultEventsByType(event)
	return event;
end"
9930,PetBattle - 3. Post Processing,"function PostProcessAllTurns ( topLevelTurnGroups )

	if (debugOn == true) then
		print(""  "")
		print(""== Start Round Post-Processing =="")
	end 
	
	-- process top level turns in order
	for index, turn in pairs( topLevelTurnGroups ) do
		PostProcessTurn( turn )
	end

	if (debugOn == true) then
		print(""== End Round Post-Processing =="")
		print(""  "")
	end
end

-- The goal here is to analyze each turn
-- Determine useful information
function PostProcessTurn ( turn ) 

	-- Useful information to obtain
	--
	-- Turn:	Complete target list
	-- Effect: 	Primary Target, Secondary Targets
	--			Was It Redirected, Who was the redirect target
	--

	turn.targetList = {};
	turn.primaryTargetList = {};
	
	for effectIndex, effect in pairs( turn.effects ) do 

		effect.targetList = {};
		effect.primaryTarget = nil;
		effect.redirectTarget = nil;

		for resultIndex, result in pairs ( effect.results ) do
			local roid = ResultToTargetROID(result)

			-- [ABrazie] 8/10/2012 - I added this to suppress errors.
			-- Generally, if this occurs its a sign of a server side
			-- Designer data issue, or an invalid target. 
			--if ( roid and roid > 0 ) then 
			effect.primaryTarget = effect.primaryTarget or roid;

			table.insert( effect.targetList, roid );
			table.insert( turn.targetList, roid );
			--end
			if ( result.procGroup ) then 
				PostProcessTurn(result.procGroup)
			end

			if ( result.resultType == PetBattleEffect.SetState ) then
				if ( result.stateID == STATE_BLOCK_CHARGES ) then 
					local newValue = result.stateValue;

					local unit = ROIDTOUNIT ( roid ) 
--print(""Blocks Consumed: ""..ROIDTOSTRING( roid ) );
					-- If you blocked an attack
					if ( unit and unit.states[STATE_BLOCK_CHARGES] and unit.states[STATE_BLOCK_CHARGES] > newValue 
							  and unit.states[STATE_REDIRECT_AURA] and unit.states[STATE_REDIRECT_AURA] > 0) then 
						local auraID = unit.states[STATE_REDIRECT_AURA];
						local team = GetTeamByIndex( unit.playerID );

						local object, playerID, objectSlot, transform = FindObjectByAbilityID( unit.playerID, auraID )
						local redirectTargetROID = GETOBJECTROIDFROMPLAYERIDANDSLOT( playerID, objectSlot )
--print (""Redirect found: ""..ROIDTOSTRING(redirectTargetROID));
						--team.redirectTargetAuraID = nil;
						effect.redirectTarget = redirectTargetROID;
					end
				end
				if ( result.stateID == STATE_CLONE_ACTIVE ) then
					if ( result.stateID > 1 ) then 
						turn.cloned = true;
					end
				end
			elseif ( result.resultType == PetBattleEffect.PetSwap ) then
				turn.hasSwap = true;
			end
		end

		table.insert( turn.primaryTargetList, effect.primaryTarget );
	end
end "
9931,PetBattle - 4. Playback Turn,"--------------------------------------------------------------------------------
-- Group and process all round effects
local debugOn = false
function PlaybackAllTurns(topLevelTurnGroups)

	if (debugOn == true) then
		print(""  "")
		print(""== Start Round Playback =="")
	end 
	
	-- process top level turns in order
	for index, turn in pairs(topLevelTurnGroups) do
		Dispatcher_HandleTurn( turn )
	end

	if (debugOn == true) then
		print(""== End Round Playback =="")
		print(""  "")
	end

end

--------------------------------------------------------------------------------
function ProcessRoundTurnGroup(turnGroup)
	
	if (debugOn == true) then
		print(""- Processing Turn "" .. turnGroup.firstEffect.turnInstanceID)
	end

	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnGroup.firstEffect.turnVisualID) then
		turnVisual = petAbilityVisuals[turnGroup.firstEffect.turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		if ( turnVisual.scriptFunction( turnGroup ) ) then
			processed = true
		end
	end

	-- fallback processing
	if (processed ~= true) then
		for index, effectGroup in pairs(turnGroup.effects) do
			ProcessRoundEffectGroup(effectGroup)
		end
	end
end

--------------------------------------------------------------------------------
function ProcessRoundEffectGroup(effectGroup)
	if (debugOn == true) then
		print(""-   Processing Effect "" .. effectGroup.firstEffect.abilityEffectID)
	end

	-- use a custom script handler if we have one
	local effectVisual = nil
	if (effectGroup.firstEffect.abilityVisualID) then
		effectVisual = petAbilityVisuals[effectGroup.firstEffect.abilityVisualID]
	end
	local processed = false
	if (effectVisual and effectVisual.scriptFunction) then
		if ( effectVisual.scriptFunction( effectGroup ) ) then
			processed = true
		end
	end

	-- fallback handling
	if (processed ~= true) then
		for index, effectResult in pairs(effectGroup.results) do
			StartEffectProcessing(effectResult)
			
			ProcessRoundResult(effectResult)
			
			SignalEffectProcessed()

			if (effectResult.procGroup) then
				ProcessRoundTurnGroup(effectResult.procGroup)
			end
		end
	end
end

--------------------------------------------------------------------------------
-- Process an individula Round Effect Result
function ProcessRoundResult(event)

	local eventType = event.eventType
	local effectType = event.effectType

	if not (eventType == PetBattleEvent.RoundEffect) then
		return
	end

	if (debugOn == true) then
		print(""-     Processing Result "" .. event.instanceID)
	end

	-- battle round effects
	if (effectType == PetBattleEffect.SetHealth) then
		EffectSetHealth(event)
	elseif (effectType == PetBattleEffect.AuraApply) then
		EffectAuraApply(event)
	elseif (effectType == PetBattleEffect.AuraCancel) then
		EffectAuraChange(event, true)
	elseif (effectType == PetBattleEffect.AuraChange) then
		EffectAuraChange(event, false)
	elseif (effectType == PetBattleEffect.PetSwap) then
		EffectSwap(event.casterPlayerID, event.newFrontPet)
	elseif (effectType == PetBattleEffect.StatusChange) then
		EffectStatusChange(event)
	end

end

--------------------------------------------------------------------------------
local maxStackDepth = 16          -- turn keys are not guaranteed unique above this stack depth
local maxTurnInstanceIDs = 100    -- effect keys are not guaranteed unique above this many actions a turn

local effectZeroCount = 0;
local turnInstanceZeroCount = 0;
 
--------------------------------------------------------------------------------
function GenerateUniqueGroupKeys(effect)	
	local stackDepth = effect.stackDepth or 0
	local turnInstanceID = effect.turnInstanceID or 0
	local effectID = effect.effectID or 0
	if (stackDepth > maxStackDepth) then
"
9932,[1] PetBattle - 4. Playback Turn,"		print (""WARNING: stack depth exceeded "" .. maxStackDepth)
	end
	if (maxTurnInstanceIDs > maxTurnInstanceIDs) then
		print (""WARNING: max turn instanceIDs exceeded "" .. maxTurnInstanceIDs)
	end

	-- This is to handle non-data generated effects
	if ( turnInstanceID == 0 ) then 
		turnInstanceZeroCount = turnInstanceZeroCount + 1;
		turnInstanceID = turnInstanceZeroCount * -1;
	end
	
	if ( effectID == 0 ) then 
		effectZeroCount = effectZeroCount + 1;
		effectID = effectZeroCount * -1;
	end
	
	local turnKey = turnInstanceID*maxStackDepth + stackDepth
	local effectKey = effectID*maxTurnInstanceIDs*maxStackDepth + turnKey
	return turnKey, effectKey
end

function HandleSpellVisualPackage(casterPlayerID, casterPetSlot, turnVisualID, ...)

	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnVisualID) then
		turnVisual = petAbilityVisuals[turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		Dispatcher_AddCommandToQueue(casterPlayerID, casterPetSlot, turnVisual.scriptFunction, ...)
		processed = true;
	end

	return processed
end

"
9933,PetBattle - Pet Movement Stuff,"

function PetMoveToAttackPosition(pet, opponent, attackType)
	if ( not attackType or attackType == PetBattleRange.InPlace ) then 
		local radius = GetAttackRadius(attackType);
		WaitMoveToRadius(pet, radius);

	elseif (attackType == PetBattleRange.Melee or attackType == PetBattleRange.Ranged ) then 
		local attackRadius = GetAttackRadius(attackType);
		WaitMoveToRadius(pet, attackRadius);
	end

	LookAtOpposingTeam(pet)
end

function MoveToRadius(pet, radius, offset, instant)
	local radiusMove = pet.currentRadius - radius
	local offsetMove = (offset or 0.0) - pet.currentOffset
	local distToMove = math.sqrt(radiusMove*radiusMove + offsetMove*offsetMove)
	local moveTime = 0
	if (instant == true) then
		moveTime = 0
	elseif radiusMove < 0 then
		moveTime = distToMove / backwardSpeed
	else
		moveTime = distToMove / forwardSpeed
	end	

	pet.currentRadius = radius
	pet.currentOffset = (offset or 0.0)

	local pos = BuildVector( (pet.teamFacing or 0.0) , -pet.currentRadius, pet.currentOffset)
	pet.actor:MoveToAbs(pos, moveTime)
end

function GetAttackRadius(rangeType)
	local attackRadius = readyRadius
	if rangeType == PetBattleRange.Melee then
		attackRadius = meleeRadius
	elseif rangeType == PetBattleRange.Ranged then
		attackRadius = rangedRadius
	end
	return attackRadius
end

function WaitMoveToRadius(pet, radius, offset)
	MoveToRadius(pet, radius, offset)
	pet.actor:WaitMovementComplete()
end"
9934,PetBattle - Play Spell Effect,"
--------------------------------------------------------------------------------
function SpellEffectPlayShared(effect, abilityVisualID)
	local casterPlayerID = effect.casterPlayerID
	local casterPlayer = GetTeamByIndex(casterPlayerID)
	local casterCastingPet = casterPlayer.pets[effect.casterPetSlot]

	local casterFrontPet = casterPlayer.pets[casterPlayer.activePet]

	local targetPlayerID = targetData.playerID;
	local targetPlayer = GetTeamByIndex(targetPlayerID)
	local targetPet = targetPlayer.pets[targetData.petSlot]

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end

	local casterCastingPet, spellVisualID = PerformSpellVisual(casterCastingPet, abilityVisualID, targetPet)

	return casterCastingPet, spellVisualID 
end

--------------------------------------------------------------------------------
function MovePetToFrontLines(pet, opponent, range )
--[[
	-- Move pet if its the current pet
	if ( (casterPlayer.activePet == effect.casterPetSlot) and (not casterFrontPet.deathAnimKit) ) then 
		MovePetToFrontLines(casterFrontPet, opponentFrontPet, abilityVisual.range )
	end

	-- Wait for opponent
	WaitForOpponentPet(opponentFrontPet)
]]--
	PetMoveToAttackPosition(pet, opponent, range );
end

function WaitForOpponentPet(opponent)
	-- make sure the opponent pet is at the correct radius
	if not opponent.deathAnimKit then
		WaitMoveToRadius(opponent, readyRadius)
	end
end

-- Remapping his function to be more genericl
function PerformSpellVisual(casterCastingPet, abilityVisualID, targetPet)
	PerformSpellVisualManyTargets(casterCastingPet, abilityVisualID, {targetPet})
end

function PerformSpellVisualManyTargets(casterCastingPet, abilityVisualID, targetList, waitForMissiles)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
--print(""Cast Time: ""..abilityVisual.castTime);
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellPreCastVisual(spellVisualID, preCastInstance)

	-- loop through all the targets
	local targetActors = {};
	for k, v in pairs(targetList) do
		table.insert(targetActors, v.actor);
	end

	if ( #targetActors > 1 or casterCastingPet.actor ~= targetActors[1] ) then
--print(""Missile Travel Time: ""..abilityVisual.impactTime);
		casterCastingPet.actor:PlaySpellCastVisualAtTargets(
			spellVisualID,
			abilityVisual.impactTime,
			true,
			targetActors)
	else
		-- self targeted
		casterCastingPet.actor:PlaySpellCastVisual(spellVisualID)
	end

	-- wait for impact
	local waitMissiles = ( waitForMissiles == nil or waitForMissiles == true );
	local missilesExist
	if Actor.HasPendingMissiles then
		missilesExist = casterCastingPet.actor:HasPendingMissiles(0)
	end

	if (waitMissiles == true and missilesExist ) then
		casterCastingPet.actor:WaitMissilesImpacted(0)
	else
--	print(""Impact Time: ""..abilityVisual.impactTime);
		scene:WaitTimer(abilityVisual.impactTime)
	end

	return casterCastingPet, spellVisualID

end



function PerformSpellVisualManyPoints(casterCastingPet, abilityVisualID, pointList, waitForMissiles)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == 0) then"
9935,[1] PetBattle - Play Spell Effect,"
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellPreCastVisual(spellVisualID, preCastInstance)

	if ( #pointList >= 1 ) then
		casterCastingPet.actor:PlaySpellCastVisualAtPoints(
			spellVisualID,
			abilityVisual.impactTime,
			true,
			pointList)
	else
		-- self targeted
		casterCastingPet.actor:PlaySpellCastVisual(spellVisualID)
	end

	-- wait for impact
	local waitMissiles = ( waitForMissiles == nil or waitForMissiles == true );
	if Actor.HasPendingMissiles then
		waitMissiles = casterCastingPet.actor:HasPendingMissiles(0)
	end

	if (waitMissiles == true) then
		casterCastingPet.actor:WaitMissilesImpacted(0)
	else
		scene:WaitTimer(abilityVisual.impactTime)
	end

	return casterCastingPet, spellVisualID

end


function PerformSpellChannelVisualManyTargets(casterCastingPet, abilityVisualID, targetList)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellPreCastVisual(spellVisualID, preCastInstance)

	-- loop through all the targets
	local targetActors = {casterCastingPet.actor};
	for k, v in pairs(targetList) do
		table.insert(targetActors, v.actor);
	end

	local instanceID;

	if ( #targetActors > 1 or casterCastingPet.actor ~= targetActors[1] ) then
		instanceID = casterCastingPet.actor:PlaySpellChannelVisualAtTargets(
			spellVisualID,
			targetActors)
	else
		-- self targeted
		instanceID = casterCastingPet.actor:PlaySpellChannelVisualAtTargets(spellVisualID, {})
	end

	return instanceID

end"
9936,PetBattle - Result - Swap,"--------------------------------------------------------------------------------
-- SWAP
function EffectSwap(teamId, petIndex)

--	ResetActivePets()
	
	local team = GetTeamByIndex(teamId)
	if team.activePet == petIndex then
		return
	end

	local lastPet = team.pets[team.activePet]
	local nextPet = team.pets[petIndex]
	if not nextPet then
		return
	end

	-- make the player point
	if (team.playerDisplay) then
		team.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmotePoint)
	end

	-- store where the backline pet was
	local backLineOffset = nextPet.currentOffset

	nextPet.actor:Fade(GetAlpha(nextPet), backlineFadeTime)		
	if (lastPet.currentHealth <= 0) then
		lastPet.actor:Fade(0, backlineFadeTime)

		-- backline pet moves straight to the front
		WaitMoveToRadius(nextPet, idleRadius, 0)

		-- teleport the corpse
		MoveToRadius(lastPet, backlineRadius, backLineOffset, true)

		-- fade corpse back in
		lastPet.actor:Fade(backlineAlpha, backlineFadeTime)
	else
		-- swap pets normally
		lastPet.actor:Fade(backlineAlpha, backlineFadeTime)

		-- backline pet moves straight to the front
		MoveToRadius(nextPet, idleRadius, 0)
		
		-- frontline pet moves forward then back
		WaitMoveToRadius(lastPet, backlineRadius, 0)
		MoveToRadius(lastPet, backlineRadius, backLineOffset)
		
		-- continue once the new frontline pet has finished moving
		nextPet.actor:WaitMovementComplete()
	end

	team.activePet = petIndex
end
"
9937,PetBattle - Result - Set Health,"
--------------------------------------------------------------------------------
-- SET HEALTH

function EffectSetHealth(effect, dontWait)

	local abilityVisual = GetAbilityVisualFromEffectID(effect.effectID)
	local abilityVisualID = nil
	if (abilityVisual) then
		abilityVisualID = abilityVisual.ID
	end

	effectSourcePet, spellVisualID = EffectCastShared(effect, abilityVisualID)
	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for SetHealth"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	-- signal the impact
	SignalEffectProcessed()

	-- final stage: actually apply the impact visuals and damage
	local playersWithDeaths = { }
	local playersWithKills = { }

	local isCritical = false
	if (effect.flags and effect.flags.crit) then
		isCritical = true
	end

	local targetPlayer = GetTeamByIndex(effect.targetPlayerID)
	local targetPet = targetPlayer.pets[effect.targetPetSlot]

	local effectSourceActor = nil
	if (effectSourcePet) then
		effectSourceActor = effectSourcePet.actor
	end

	if (effect.flags and effect.flags.miss == true) then
		targetPet.actor:AddWorldText(effectSourceActor, MissReasons.Physical, false, false)	
	else
		if (spellVisualID) then
			targetPet.actor:PlaySpellImpactVisual(spellVisualID)
		end

		local oldHealth = targetPet.currentHealth
		local newHealth = effect.value	-- actual health change is stored in the value field

		SetHealth(targetPet, newHealth, false, isCritical)

		if (newHealth <= 0) and (oldHealth > 0) then
			playersWithDeaths[effect.casterPlayerID] = true
			if (effectSourcePet) then
				playersWithKills[effect.casterPlayerID] = true
			end
		end
	end

	-- feedback on players that lost pets
	for playerID, hasDeath in pairs(playersWithDeaths) do
		if (hasDeath) then
			playersWithKills[playerID] = nil
			local player = GetTeamByIndex(playerID)
			if (player and player.playerDisplay) then
				player.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmoteCry)
			end
		end
	end

	-- feedback on players that killed pets
	for playerID, hasKill in pairs(playersWithKills) do
		if (hasKill) then
			local player = GetTeamByIndex(playerID)
			if (player and player.playerDisplay) then
				player.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmoteCheer)
			end
		end
	end

	-- wait until the casters animation has completed
	if (spellVisualID) and (effectSourceActor) then
		effectSourceActor:WaitCastingComplete(true)
	end
end"
9938,PetBattle - Result - Aura Apply,"
-- store a mapping of all active auras to the pet they're on
local activeAuraPets = { }

--------------------------------------------------------------------------------
-- APPLY AURA
function EffectAuraApply(effect)

	local abilityVisual = GetAbilityVisualFromEffectID(effect.effectID)
	local abilityVisualID = nil
	if (abilityVisual) then
		abilityVisualID = abilityVisual.ID
	end

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(effect.auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local casterCastingPet
	local spellVisualID
	effectSourcePet, spellVisualID = EffectCastShared(effect, abilityVisualID)
	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no auraVisual for aura"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	-- signal the impact
	SignalEffectProcessed()

	-- final stage: actually apply the impact visuals and damage
	local targetPlayer = GetTeamByIndex(effect.targetPlayerID)
	local targetPet = targetPlayer.pets[effect.targetPetSlot]

	local effectSourceActor = nil
	if (effectSourcePet) then
		effectSourceActor = effectSourcePet.actor
	end

	if (effect.failureReason and effect.failureReason == PetBattleMoveFailureReason.Miss) then
		targetPet.actor:AddWorldText(effectSourceActor, MissReasons.Physical, false, false)
	else
		if (spellVisualID) then
			targetPet.actor:PlaySpellImpactVisual(spellVisualID)
		end

		-- apply an aura, tracked by instance ID
		ApplyAura(targetPet, effect.auraInstanceID, effect.auraTurnsRemaining, auraSpellVisualID)
	end

	-- wait until the casters animation has completed
	if (spellVisualID) then
		effectSourceActor:WaitCastingComplete(true)
	end
end

--------------------------------------------------------------------------------
function ApplyAura(pet, auraInstanceID, turnsRemaining, spellVisualID, auraAbilityID)
	local aura = pet.auras[auraInstanceID]
	if (not aura) then
		aura = { }
		pet.auras[auraInstanceID] = aura
	end

	activeAuraPets[auraInstanceID] = pet

	-- clear existing aura visual for this instance, if there is one
	if (aura.spellVisualID and aura.spellVisualInstanceID) then
		pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)                        
	end

	aura.spellVisualID = spellVisualID
	if (aura.spellVisualID) then
		aura.spellVisualInstanceID = pet.actor:PlaySpellStateVisual(spellVisualID)

		if ( pet.realActor ) then 
			aura.spellVisualInstanceID = pet.realActor:PlaySpellStateVisual(spellVisualID)
		end

	else
		aura.spellVisualInstanceID = nil
	end
	aura.playerID = pet.playerID;
	aura.petSlot = pet.slot;
	aura.turnsRemaining = turnsRemaining
	aura.running = true;

	return aura;
end

--------------------------------------------------------------------------------
function UpdateAuraVisuals(pet)

	for auraInstanceID, aura in pairs(pet.auras) do
		if (aura.spellVisualID and aura.spellVisualInstanceID) then
			pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)                        

			if ( pet.realActor ) then 
				pet.realActor:ClearSpellVisual( aura.spellVisualInstanceID)                        
			end

		end
		aura.spellVisualInstanceID = pet.actor:PlaySpellStateVisual(spellVisualID)

		if ( pet.realActor ) then 
			aura.spellVisualInstanceID = pet.realActor:PlaySpellStateVisual(spellVisualID)
		end
	end
end

--------------------------------------------------------------------------------
function RemoveAura(pet, auraInstanceID)

	RemoveAuraVisual(pet, pet.auras[auraInstanceID])
	pet.auras[auraInstanceID].running = false;
	pet.auras[auraInstanceID] = nil
	activeAuraPets[auraInstanceID].running = false;
	activeAuraPets[auraInstanceID] = nil
end

"
9939,[1] PetBattle - Result - Aura Apply,"--------------------------------------------------------------------------------
function RemoveAuraVisual(pet, aura)

	if aura and aura.spellVisualInstanceID then
		pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)                        

		if ( pet.realActor ) then 
			pet.realActor:ClearSpellVisual( aura.spellVisualInstanceID)                        

			-- GIANT HACK BECAUSE WE ARE OUT OF TIME
			pet.realActor:Fade(0,0);
		end
		--aura.spellVisualInstanceID = nil
	end

end

--------------------------------------------------------------------------------
function RemoveAllAuraVisuals(pet)

	for auraInstanceID, aura in pairs(pet.auras) do
		RemoveAuraVisual(pet, aura)
	end

end

--------------------------------------------------------------------------------
function GetAuraOwnerPet(auraInstanceID)
	if (auraInstanceID) then
		return activeAuraPets[auraInstanceID]
	end
end

"
9940,PetBattle - Result - Aura Change,"
--------------------------------------------------------------------------------
-- REMOVE AURA

function EffectAuraChange(effect, cancel)

	target = effect.target
	local petPlayerID = target.playerID
	local petSlot = target.petSlot

	local player = GetTeamByIndex(petPlayerID)
	local pet = player.pets[petSlot]

	if not petSlot then
		return
	end

	local auraInstanceID = target.auraInstanceID
	local aura = pet.auras[auraInstanceID]
	if not aura then
		print(""ERROR: unknown aura instance ID "" .. auraInstanceID)
		return
	end

	if (cancel == true) or (target.turnsRemaining < 1) then
		RemoveAura(pet, auraInstanceID)
	else
		aura.turnsRemaining = target.turnsRemaining
	end

end
"
9941,PetBattle - Result - Status Change,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function EffectStatusChange(effect)
	if (not effect) then
		return
	end

	target = effect.target
	local targetPlayer = GetTeamByIndex(target.playerID)
	local targetPet = targetPlayer.pets[target.petSlot]

	if (target and target.newStatus) then
		targetPet.status = target.newStatus
	end

	-- check if we need to perform a special trap visual
	local player = nil
	if (effect.casterPlayerID > 0) then
		player = GetTeamByIndex(effect.casterPlayerID)
	end

	if (player) then
		if (effect.abilityVisualID == player.trapVisualID) then
			TrapCast(effect)
		end
	end
end
"
9942,PetBattle - Selected - Ability Selected Movement,"--------------------------------------------------------------------------------
-- MOVE (ability) SELECTED
function EventMoveAbilitySelected(abilityVisualID)

	-- print(""Move Selected: Ability Visual ID: "" .. abilityVisualID)
	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if (not abilityVisual) then
		return
	end

	local player = nil
	local pet = nil
	if (observingPlayerIndex > 0) then
		player = GetTeamByIndex(observingPlayerIndex)
		if (player) then
			pet = player.pets[player.activePet]
		end
	end

	if (not pet) then
		return
	end

	local casterPlayer = GetTeamByIndex(observingPlayerIndex)
	local casterCastingPet = casterPlayer.pets[effect.casterPetSlot]
	local casterFrontPet = casterPlayer.pets[casterPlayer.activePet]
	local opponentFrontPet = GetActivePetByIndex(3 - observingPlayerIndex)

	PetMoveToAttackPosition(pet, opponentFrontPet, ""ready"" );
	
end
"
9943,PetBattle - Selected - Pet Swap Selected Movement,"--------------------------------------------------------------------------------
-- MOVE (pet swap) SELECTED
function EventMovePetSwapSelected(petSlot)

	-- print(""Move Selected: Pet Swap Slot: "" .. petSlot)

end"
9944,PetBattle - Selected - Trap Selected Movement,"--------------------------------------------------------------------------------
-- MOVE (trap) SELECTED
function EventMoveTrapSelected()

	-- print(""Move Selected: Trap"")
	StartTrapPrecast(observingPlayerIndex)

end

function GetTrapVisuals(playerID)

	local player = nil
	local playerDisplay = nil
	if (playerID and (playerID > 0)) then
		player = GetTeamByIndex(playerID)
		if (player) then
			playerDisplay = player.playerDisplay
		end
	end
	
	if (not playerDisplay) then
		return
	end

	if (not player.trapVisualID) then
		return
	end

	local trapVisual = petAbilityVisuals[player.trapVisualID]
	local trapSpellVisualID = nil
	if (trapVisual) then
		trapSpellVisualID = trapVisual.spellVisualID
	end

	if (not trapSpellVisualID) or (trapSpellVisualID == 0) then
		return
	end

	return player, playerDisplay, trapVisual, trapSpellVisualID
end

function StartTrapPrecast(playerID)

	local player
	local playerDisplay
	local trapVisual
	local trapSpellVisualID
	player, playerDisplay, trapVisual, trapSpellVisualID = GetTrapVisuals(playerID)
	if (not player) then
		return
	end

	if (playerDisplay) then
		if (not player.trapPrecastID) then
			player.trapPrecastID = playerDisplay:PlaySpellPreCastVisual(trapSpellVisualID )
		end
	end

end

function ClearTrapPrecast(playerID)

	local player
	local playerDisplay
	local trapVisual
	local trapSpellVisualID
	player, playerDisplay, trapVisual, trapSpellVisualID = GetTrapVisuals(playerID)
	if (not player) then
		return
	end

	if (player.trapPrecastID) then
		playerDisplay:ClearSpellPreCastVisual(trapSpellVisualID, player.trapPrecastID)
		player.trapPrecastID = nil
	end

end

function TrapCast(effect)

	local playerID = effect.casterPlayerID

	local player
	local playerDisplay
	local trapVisual
	local trapSpellVisualID
	player, playerDisplay, trapVisual, trapSpellVisualID = GetTrapVisuals(playerID)

	if (not player) then
		return
	end

--	print(""Casting Trap..."")

	StartTrapPrecast(playerID)
	scene:WaitTimer(trapVisual.castTime)
	ClearTrapPrecast()

	for targetIndex, target in pairs(effect.targets) do
		local targetPlayer = GetTeamByIndex(target.playerID)
		local targetPet = targetPlayer.pets[target.petSlot]

		if (targetPet) then
			local trapSuccess = false
			if (targetPet.status) then
				trapSuccess = targetPet.status.isTrapped
			end

			castInstanceID = playerDisplay:PlaySpellCastVisualAtTargets(trapSpellVisualID, trapVisual.impactTime, true, {targetPet.actor})
			scene:WaitTimer(trapVisual.impactTime)

			local waitCondition = function()
				return not playerDisplay:HasPendingOrInFlightMissiles(castInstanceID)
			end
			scene:WaitCondition(waitCondition)

			if (trapSuccess) then
				--print(""Succesful Trap"")
				targetPet.trappedVisualInstance = targetPet.actor:PlaySpellStateVisual(trapSpellVisualID)
			else
				print(""Failed Trap"")
			end
		end
	end

end
"
9945,PetBattle - Cameras,"
--------------------------------------------------------------------------------
-- camera
battleCameraIDs =
{
	intro = 336;
	idle = 335;
}

local cameraBunny = nil
function StartCameraBunny(transitionTime)
	if ( not isObserved ) or ( not useFreelookCamera ) then
		return
	end

	local player = teams[observingPlayerIndex]

	local cameraBunnyCreate = ActorCreateData:Default()
	cameraBunnyCreate.name = ""arenaCameraBunny""
	cameraBunnyCreate.model = padModel
	cameraBunnyCreate.transform.position = player.playerDisplay:GetPosition()
	cameraBunnyCreate.transform.facing = player.teamFacing
	cameraBunnyCreate.interactible = false

	cameraBunny = scene:SpawnActor(cameraBunnyCreate)
	cameraBunny:SetFacingToAbs(BuildVector(player.teamFacing, playerRadius, 0.0))

	if (PetBattleScene.SetPetBattleGameCameraTarget) then
		battleScene:SetPetBattleGameCameraTarget(cameraBunny, freelookZoomMin, freelookZoomMax)
	else
		scene:SetGameCameraTarget(cameraBunny, freelookZoomMin, freelookZoomMax)
	end
	
	cameraBunny:MoveToAbs(Vector:New(), transitionTime)
end

function StopCameraBunny(transitionTime)
	if ( not cameraBunny ) or ( not isObserved ) or ( not useFreelookCamera ) then
		return
	end

	-- return to the player
	local player = teams[observingPlayerIndex]

	if (PetBattleScene.ResetPetBattleGameCameraZoom) then
		battleScene:ResetPetBattleGameCameraZoom()
	else
		scene:ResetGameCameraZoom()
	end

	cameraBunny:MoveToAbs(player.playerDisplay:GetPosition(), transitionTime)
	scene:WaitTimer(transitionTime)
	scene:SetGameCameraTarget(nil, 0.0, 0.0)
end

function SetCamera(camera)
	if ( not isObserved or availableCamTransition == 0 ) then
		return
	end

	local observedTeam = teams[observingPlayerIndex]
	local otherTeam = teams[3 - observingPlayerIndex]
	local observedPadActor = observedTeam.pad.actor
	if (not observedPadActor) then
		observedPadActor = observedTeam.pad
	end

	if ( camera == 1 ) then 
		scene:SetCamera(battleCameraIDs.intro, 1.75, observedPadActor, arenaRing)
	elseif ( camera == 2 ) then 
		scene:SetCamera(battleCameraIDs.idle, 1.0, observedPadActor, arenaRing)
	elseif ( camera == 3 ) then 
		scene:SetCamera(battleCameraIDs.idle, 0.0, observedPadActor, arenaRing)
	elseif ( camera == 4 ) then
		scene:SetCamera(0, 0.75, nil, nil)
	end
end
"
9946,PetBattle - Victory Ceremony,"function VictoryCeremony(winnerID)
	if (winnerID == 1) or (winnerID == 2) then
		local winnerTeam = teams[winnerID]
		for petIndex, pet in pairs(winnerTeam.pets) do
			if (winnerTeam.activePet ~= petIndex) and (pet.isPad == false) and (pet.currentHealth > 0) then
				-- move backline up to celebrate
				pet.actor:Fade(1.0, backlineFadeTime)
				MoveToRadius(pet, idleRadius, pet.currentOffset)
			end
		end
		scene:WaitTimer(1.0)
	end
end

function VictoryCeremonyCleanUp(winnerID)
	-- Do nothing
end

function FleeCeremony(winnerID)
end"
9947,PetBattle - Reward XP and Level,"--------------------------------------------------------------------------------
-- REWARD
function EventReward(rewards)
--[[
	local rewardedPets = {}
	for rewardIndex,reward in pairs(rewards) do
		if not (reward.wasCaptured) then
			local player = GetTeamByIndex(reward.playerID)
			local playerPet = player.pets[reward.petSlot]
			if (playerPet) then
				local rewardedPet =
				{
					pet = playerPet;
					newXP = reward.newXP;
					newLevel = reward.newLevel;
				}
				rewardedPets[rewardIndex] = rewardedPet

				-- resurrect and move this pet up
				if (playerPet.deathAnimKit) then
					playerPet.deathAnimKit:Stop()
					playerPet.deathAnimKit = nil		
				end

				playerPet.actor:Fade(1.0, backlineFadeTime)
				MoveToVictoryLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local waitCondition = function()
		-- all actors must be renderable
		for prewardIndex,rewardedPet in pairs(rewardedPets) do
			if rewardedPet.pet.actor:IsMoving() then
				return false
			end
		end
		return true
	end
	scene:WaitCondition(waitCondition)

	-- apply the rewards
	for rewardIndex,rewardedPet in pairs(rewardedPets) do
		SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
	end
--]]
end

function MoveToVictoryLocation(pet)
	MoveToRadius(playerPet, idleRadius, playerPet.currentOffset)
end
"
9948,PetBattle - Intro,"
local cameraBunny

--------------------------------------------------------------------------------
function BattleIntro()

	scene:WaitTimer(0.1) --(0.25)
	SetCamera(1)
	StartCameraBunny(0.75) --(1.5)

	if (battleScene.SignalOpeningStart) then
		battleScene:SignalOpeningStart()
	end

	--WaitAllPetsLoaded()

	if (useFreelookCamera) then
		scene:WaitTimer(0.5)
		SetCamera(2)

		scene:WaitTimer(1.4) --(1.6)
		scene:SetCamera(0, 1.2, nil, nil) -- changed from 0.75 -> 

	else
		scene:WaitTimer(0.25)
		SetCamera(2)
		scene:WaitTimer(0.75)
	end

	if (battleScene.SignalReadyToStart) then
		battleScene:SignalReadyToStart()
	else
		battleScene:SignalOpeningComplete()
	end

	-- fade in the pets
	FadeInAllPets(initialFadeInTime)

end
"
9949,---- Libraries ----,
9950,Test - Alex's Battle Pet - Test Library,"-- Add two vectors
function VectorSum( vectorA, vectorB ) 
	return Vector:New( vectorA.x+vectorB.x, vectorA.y+vectorB.y, vectorA.z+vectorB.z );
end

-- Distance between two points
function VectorDist( vectorA, vectorB ) 
	return math.pow (math.pow( vectorA.x-vectorB.x, 2 ) + 
					 math.pow( vectorA.y-vectorB.y, 2 ) +  
					 math.pow( vectorA.z-vectorB.z, 2 ) , 0.5 );	
end

-- Copy a vector
function VectorCopy( vectorA ) 
	return Vector:New( vectorA.x, vectorA.y, vectorA.z )
end

-- Scale a vector up
function VectorScale( vectorA, multi )
	return Vector:New( vectorA.x*multi, vectorA.y*multi, vectorA.z*multi )
end


-- Scale a vector up per axis
function VectorScalePerAxis( vectorA, multiX, multiY, multiZ )
	return Vector:New( vectorA.x*multiX, vectorA.y*multiY, vectorA.z*multiZ )
end

-- Magnitude
function VectorMagnitude ( vectorA )
	return math.pow( 
				math.pow(vectorA.x,2) +
				math.pow(vectorA.y,2) +
				math.pow(vectorA.z,2), 0.5 );
end

-- Normalize
function UnitVectorNormalize ( vectorA ) 
	local magnitude = VectorMagnitude ( vectorA );
  
	return Vector:New(
			vectorA.x/magnitude, 
			vectorA.y/magnitude, 
			vectorA.z/magnitude);
end

-- Unit vector pointing from A to B
function UnitVectorFromAtoB( vectorA, vectorB ) 
	local dist = VectorDist( vectorA, vectorB );

	if (dist == 0 ) then 
		return Vector:New(0,0,1);
	end

	return Vector:New( 
			(vectorB.x-vectorA.x) / dist,
			(vectorB.y-vectorA.y) / dist,
			(vectorB.z-vectorA.z) / dist);
end

-- Unit vector pointing in the perpendicular angle
function UnitVectorCrossProduct ( vectorA, vectorB ) 
	local normalA, normalB = UnitVectorNormalize(vectorA), UnitVectorNormalize(vectorB);

	return Vector:New( 
		((normalA.y * normalB.z) - (normalA.z * normalB.y)),
		((normalA.z * normalB.x) - (normalA.x * normalB.z)),
		((normalA.x * normalB.y) - (normalA.y * normalB.x)) 
		)
end

-- A common function I use 
-- 	baseLoc - the unit facing
--  faceLoc - the location being faced
--  offset  - the distance along the Base -> Face vector
function FastLocalFacingCoordinates( baseLoc, faceLoc, offset ) 
	local frontVector = UnitVectorFromAtoB(baseLoc, faceLoc);
	local upVector = UnitVectorFromAtoB(baseLoc, VectorSum(baseLoc, Vector:New(0,0,1) ) );
	local leftVector = UnitVectorCrossProduct(frontVector, upVector);

	local newLoc = baseLoc
			+ frontVector * offset.x
			+ leftVector * offset.y
			+ upVector * offset.z;

	return newLoc;
end"
9951,Brazie's PetBattle - Constants,"-- Replace Arena Ring Size
arenaRingScale = 1.0

DEFAULT_MOVE_SPEED = 5;
DEFAULT_TURN_RATE = 15;

-- Return Speed
backwardSpeedMulti = 0.7;

-- Replace Home Locations

HOME_LIST = {
	-- Weather
	[0] = Transform:New(Vector:New(  0, 0, 1), 180);
	-- Players
	[1] = Transform:New(Vector:New( -2, 0, 0), 0);
	[2] = Transform:New(Vector:New(  2, 0, 0), 180); 
};
MASTER_SPOTS = { 
	-- Weather
	[0] = Transform:New(Vector:New( 0, 0, 3), 180);
	-- Players
	[1] = Transform:New(Vector:New( -5, 0, 1), 0);
	[2] = Transform:New(Vector:New(  5, 0, 1), 180);
};

BACKROW_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1,  2, 0) , 0 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -2, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  2, 0) , 180 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1, -2, 0) , 180 );
	};
}

WILD_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -16,  8, 0) , 0 ); 
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -16, -8, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  16,  8, 0) , 180 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  16, -8, 0) , 180 );
	};
}


FLEE_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11,  -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11,  6, 0) , 0 );
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11, -6, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11,  6, 0) , 180 );
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11, -6, 0) , 180 );
	};
}


VICTORY_PET_OFFSETS = {
	Vector:New(-1, 0, 0 );
	Vector:New(-1, 2, 0 );
	Vector:New(-1, -2, 0 );
};


-- Locations
OBJECT_LOCATIONS = {
	[PetBattlePlayerID.Weather] = {
		[1] = Transform:New(Vector:New( 0, 0, 0), 0);
		[2] = Transform:New(Vector:New( 0, 1, 0), 0);
		[3] = Transform:New(Vector:New( 0, -1, 0), 0);
	};
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1,  2, 0) , 0 );
		[2] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1, -2, 0) , 0 );
		[3] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New( -1,  0, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New(  1,  2, 0) , 180 );
		[2] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New(  1, -2, 0) , 180 );
		[3] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New( -1,  0, 0) , 180 );
	};
}

MAX_FIELD_OBJECTS = 3;

-- Wall Locations
"
9952,[1] Brazie's PetBattle - Constants,"WALL_LOCATIONS = {
	[PetBattlePlayerID.Weather] = {
		[1] = Transform:New(Vector:New( 0, 0, 0), 0);
	};
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1.5,  0, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New( -1.5,  0, 0) , 180 );
	};
}"
9953,Brazie's PetBattle - Constant Overrides 2,"--
-- All of this should have been defined and provided elsewhere

STATE_FLYING = 33;
STATE_STEALTHED = 84;
STATE_UNDERGROUND = 30;
STATE_WATER_BUBBLED = 85;
STATE_INVISIBLE = 67;
STATE_FLY_TIER = 128;
STATE_FETISH_RANDOM_COLOR = 129;
STATE_BIGGLESWORTH = 144;

-- Grats Sen'jin Fetish is hard coded into the game!
FETISH_BASE_STATE = 11563;
FETISH_STATES = {11558, 11560, 11562 };

STATE_BLOCK_CHARGES = 74;
STATE_REDIRECT_AURA = 75;

STATE_CHARGING 	= 113;
STATE_RECOVERING= 114;
STATE_CLEANSE 	= 141;

STATE_CLONE_ACTIVE = 100;
STATE_CLONE_AURAID = 118;
STATE_CLONE_PBOID  = 101;
STATE_CLONE_HEALTH = 105;
STATE_CLONE_MAX_HP = 106;

PetBattleRange.PointBlank = 4;
PetBattleRange.BehindMelee = 5;
PetBattleRange.BehindRanged = 6;

PET_BATTLES_BIGGLESWORTH = 29438;
PET_BATTLES_SPRINT_TRAIL = 27365;
PET_BATTLES_WATER_BUBBLE = 27486;

PET_TRAP_LEVEL_1 = 427;
PET_TRAP_LEVEL_2 = 77;
PET_TRAP_LEVEL_3 = 135;


--[[
-- PROTOTYPE ATTACK DISPLAY!
PET_ABILITY_NAMES_BY_ID = {
	[113] = ""Burn"";
	[178] = ""Immolate"";
	[179] = ""Conflagrate"";
	[504] = ""Alpha Strike"";
	[116] = ""Zap"";
};

PET_ABILITY_TYPE_COLOR_BY_ID = {
	[113] = Color:New(255, 128, 0);
	[178] = Color:New(255, 128, 0);
	[179] = Color:New(255, 128, 0);
	[504] = Color:New(200, 200, 200);
};

function PreTurn_DisplayAbilityName( userROID, turn)

	if ( turn.abilityID ) then

		if ( PET_ABILITY_NAMES_BY_ID[turn.abilityID] ) then 
	
			local actingPet = ROIDTOPET( userROID );

			local type = WorldText.Damage; --WorldText.BuildingDamage;
			local useColor = true;
			local color = PET_ABILITY_TYPE_COLOR_BY_ID[turn.abilityID] or Color:New(255, 255, 255)

			text = PET_ABILITY_NAMES_BY_ID[turn.abilityID];
			actingPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		else
			print (""Turn Ability ID: "",turn.abilityID );
		end
	end
end

--]]"
9954,Brazie's PetBattle - Library - BitLib,"function bit(p)
  return 2 ^ (p - 1)  -- 1-based indexing
end

-- Typical call:  if hasbit(x, bit(3)) then ...
function hasbit(x, p)
  return x % (p + p) >= p       
end

function setbit(x, p)
  return hasbit(x, p) and x or x + p
end

function clearbit(x, p)
  return hasbit(x, p) and x - p or x
end

function bitor(x, y)
  local p = 1; 
  local z = 0; 
  local limit = x > y and x or y
  while p <= limit do
    if hasbit(x, p) or hasbit(y, p) then
      z = z + p
    end
    p = p + p
  end
  return z
end

function bitand(x, y)
  local p = 1; 
  local z = 0; 
  local limit = x > y and x or y
  while p <= limit do
    if hasbit(x, p) and hasbit(y, p) then
      z = z + p
    end
    p = p + p
  end
  return z
end"
9955,Brazie's PetBattle - Library - Helper Functions,"allPetsShown = true; 

function GetNaturalAlpha(ROID)
	local player = ROIDTOPLAYER( ROID ) 
	local pet = ROIDTOUNIT( ROID ) 

	if ( pet.slot == player.activePet ) then

		if ( pet.underground ) then 
			return 0.1;
		elseif ( pet.stealthed ) then 
			return 0.5;
		elseif ( pet.isTrapped ) then
			return 0;
		else
			return 1;
		end
	elseif ( allPetsShown ) then

		if ( pet.underground ) then 
			return 0;
		elseif ( pet.stealthed ) then 
			return 0.5;
		elseif ( pet.isTrapped ) then
			return 0;
		else
			return 1;
		end
	end
end


-- [ABrazie]: Created this function to handle the situation where dead creatures
-- 		Would continue to face their targets after death. 
-- 
function DefaultFacing( attackerROID, victimROID ) 
	local attacker = ROIDTOUNIT( attackerROID );
	local victim = ROIDTOUNIT( victimROID );

	if ( victim and attacker.currentHealth and attacker.currentHealth> 0 ) then
		attacker.actor:SetFacingToTarget( victim.actor, Vector:New() )
	end
end


function CreateAxisAtLoc(transform, scale)
	local scaleCreateData = ActorCreateData:Default()
	scaleCreateData.name = ""scaleAxis"" 
	scaleCreateData.model = ""SPELLS\\AxisTestObject.m2""
	scaleCreateData.scale = scale or 2.0
	scaleCreateData.transform = transform or Transform:New()
	scaleCreateData.interactible = false
	scaleCreateData.groundSnap = false
	local axis = scene:SpawnActor(scaleCreateData)

	return axis;
end

function EnemyOf( playerID )
	return 3 - playerID
end"
9956,Brazie's PetBattle - Library - ROIDs,"
-- Responsible Object ID
ROID_TYPE_PLAYER_PET_SLOT_1 = 0x0001; 
ROID_TYPE_PLAYER_PET_SLOT_2 = 0x0002;
ROID_TYPE_PLAYER_PET_SLOT_3 = 0x0004;
ROID_TYPE_PLAYER_MASTER		= 0x0008;
ROID_TYPE_PLAYER_PAD		= 0x0010;
ROID_TYPE_PLAYER_PAD_OBJ_1	= 0x0020;
ROID_TYPE_PLAYER_PAD_OBJ_2	= 0x0040;
ROID_TYPE_PLAYER_PAD_OBJ_3	= 0x0080;

ROID_TYPE_WEATHER			= 0x0100;

ROID_TYPE_PLAYER_1 			= 0x1000;
ROID_TYPE_PLAYER_2 			= 0x2000; 

function ROIDISAPET( ROID ) 
	return (bitand(ROID,0x17) > 0)
end

function ROIDISAOBJECT ( ROID )
	return (bitand(ROID,0x0E0) > 0)
end

function ROIDISWEATHER ( ROID )
	return (bitand(ROID,ROID_TYPE_WEATHER) > 0)
end

function ROIDISUNIT( ROID )  
	return ( ROIDISAPET( ROID ) or ROIDISAOBJECT ( ROID ) )
end

function ROIDTOSTRING( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

	if ( not ROIDISAPET( ROID ) and not ROIDISAOBJECT( ROID ) ) then
		if ( ROID == ROID_TYPE_PLAYER_1 ) then
			return ""Player 1 - No Unit"";
		elseif ( ROID == ROID_TYPE_PLAYER_2 ) then
			return ""Player 2 - No Unit"";
		elseif ( ROID == ROID_TYPE_WEATHER ) then
			return ""Weather - No Unit"";
		end

		return ""Invalid ROID: ""..ROID;
			
	end



	local unit = ROIDTOUNIT(ROID);
	local playerID = unit.playerID;
	local slot = unit.slot;

	local castingTeamName = ""Unknown"";
	local castingPetSlotName = ""Unknown""; 

	for k,v in pairs(PetBattlePlayerID) do 
		if ( v == playerID ) then
			castingTeamName = k;
		end
	end


	if ( ROIDISAPET ( ROID ) ) then 
		castingPetSlotName = "" - Pet ""; 
		
		local pet = unit;
		for k,v in pairs(PetBattlePetID) do 
			if ( v == slot ) then
				castingPetSlotName = castingPetSlotName..k;
			end
		end
	elseif ( ROIDISAOBJECT ( ROID ) ) then 
		castingPetSlotName = "" - Object ""; 
		local sub = ( bitand(ROID,0x0E0) )

		if ( sub == ROID_TYPE_PLAYER_PAD_OBJ_1 ) then 
			castingPetSlotName = castingPetSlotName..'1';
		elseif ( sub == ROID_TYPE_PLAYER_PAD_OBJ_2 ) then 
			castingPetSlotName = castingPetSlotName..'2';
		elseif ( sub == ROID_TYPE_PLAYER_PAD_OBJ_3 ) then 
			castingPetSlotName = castingPetSlotName..'3';
		end
	end

	return castingTeamName..castingPetSlotName;
end

function ROIDTOPLAYER( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

	local playerID = 0;
	if ( bitand(ROID, ROID_TYPE_WEATHER) == ROID_TYPE_WEATHER ) then
		playerID = PetBattlePlayerID.Weather;
	elseif ( bitand(ROID, 0xF000) == ROID_TYPE_PLAYER_1 ) then
		playerID = PetBattlePlayerID.Player1;
	elseif ( bitand(ROID, 0xF000) == ROID_TYPE_PLAYER_2 ) then
		playerID = PetBattlePlayerID.Player2;
	else
		return nil;
	end

	return GetTeamByIndex(playerID)
end

function ROIDTOPET( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

--print(ROID,"" p1: "",ROID_TYPE_PLAYER_1, "" p2: "",ROID_TYPE_PLAYER_2)
	local player = ROIDTOPLAYER( ROID );

	if ( player ) then
		local slot = nil;

		if ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_1 ) then
			slot = PetBattlePetID.Slot1
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_2 ) then
			slot = PetBattlePetID.Slot2
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_3 ) then
			slot = PetBattlePetID.Slot3
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PAD ) then
			slot = PetBattlePetID.Pad
		elseif ( bitand(ROID, ROID_TYPE_WEATHER) > 0 ) then
			slot = PetBattlePetID.Weather
		end

		if ( slot ) then
			return player.pets[slot]
		end
	end

	return nil;
end

function ROIDTOOBJ( ROID )
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOOBJ."");
		return nil;
	end

	local player = ROIDTOPLAYER( ROID );

	if ( player ) then
		local slot = nil;

		if ( bitand(ROID, 0x0E0) == "
9957,[1] Brazie's PetBattle - Library - ROIDs,"ROID_TYPE_PLAYER_PAD_OBJ_1 ) then
			slot = 1
		elseif ( bitand(ROID, 0x0E0) == ROID_TYPE_PLAYER_PAD_OBJ_2 ) then
			slot = 2
		elseif ( bitand(ROID, 0x0E0) == ROID_TYPE_PLAYER_PAD_OBJ_3 ) then
			slot = 3
		end

		if ( slot ) then
			local object, playerID, slot, transform = GetObject(player.playerID, slot)

			return object;
		end
	end

	return nil;
end

function ROIDTOWEATHER ( ROID )
	if ( ROID == ROID_TYPE_WEATHER ) then 
		local player = ROIDTOPLAYER( ROID );

		return player.pets[0];
	else
		warning(""ERROR: Invalid ROID passed to ROIDTOWEATHER."");
	end
end

function ROIDTOUNIT( ROID )
	if ( ROIDISAPET( ROID ) ) then
		local pet = ROIDTOPET( ROID );
		return pet;
	elseif ( ROIDISAOBJECT ( ROID ) ) then
		local obj = ROIDTOOBJ( ROID );

		return obj;
	elseif ( ROIDISWEATHER ( ROID ) ) then
		return ROIDTOWEATHER ( ROID );
	else
		warning(""ERROR: Invalid ROID passed to ROIDTOUNIT, "", ROID);
	end
end
"
9958,Brazie's PetBattle - Library - ROIDs - GetROIDs,"
function GETROIDFROMPLAYERID( playerID )
	local roid = 0;
	if ( playerID == 0 ) then
		roid = roid + ROID_TYPE_WEATHER
	elseif ( playerID == 1 ) then
		roid = roid + ROID_TYPE_PLAYER_1
	elseif ( playerID == 2 ) then
		roid = roid + ROID_TYPE_PLAYER_2
	end
	return roid;

end

function GETROIDFROMPLAYERIDANDSLOT( playerID, petSlot )
	local roid = GETROIDFROMPLAYERID( playerID );
--print(""Getter: "",playerID, "" "", slot);

	if ( roid == ROID_TYPE_WEATHER ) then 
		return roid;
	end

	if ( petSlot == PetBattlePetID.Slot1 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_1
	elseif ( petSlot == PetBattlePetID.Slot2 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_2
	elseif ( petSlot == PetBattlePetID.Slot3 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_3
	elseif ( petSlot == PetBattlePetID.Pad ) then
		roid = roid + ROID_TYPE_PLAYER_PAD
	end

	return roid
end


function PETTOROID( pet ) 
	local roid  = GETROIDFROMPLAYERIDANDSLOT ( pet.playerID, pet.slot );

	return roid;
end

function GETROIDFORPLAYERPAD( playerID ) 
	local roid = GETROIDFROMPLAYERID( playerID )

	return roid + ROID_TYPE_PLAYER_PAD;
end


function GETOBJECTROIDFROMPLAYERIDANDSLOT( playerID, objectSlot )
	local roid = GETROIDFROMPLAYERID( playerID );

	if ( roid == ROID_TYPE_WEATHER ) then 
		return roid;
	end

	if ( objectSlot == 1 ) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_1
	elseif ( objectSlot == 2 ) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_2
	elseif ( objectSlot == 3) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_3
	end

	return roid
end


function TurnToUserROID(turn)
	local userPlayerID = turn.playerID
	local userSlot = turn.petSlot

	local userROID = GETROIDFROMPLAYERIDANDSLOT( userPlayerID, userSlot )

	return userROID;
end

function EffectToROIDs(effect)

	local targets = {}
	
	for index,result in pairs(effect.results) do 
		local roid = ResultToTargetROID(result)
		
		if ( roid ) then
			targets[index] = roid;
		end
	end

	return targets;
end

function ResultToTargetROID(result)
	if ( result.targetPlayerID ) then 
		local targetPlayerID, targetSlot = result.targetPlayerID, result.targetPetSlot

		local roid = GETROIDFROMPLAYERIDANDSLOT( targetPlayerID, targetSlot );

		return roid;
	elseif ( result.swapPlayerID ) then 
		local targetPlayerID, targetSlot = result.swapPlayerID, result.newFrontPet

		local roid = GETROIDFROMPLAYERIDANDSLOT( targetPlayerID, targetSlot );

		return roid;
	else
		print(""ResultToTargetROID Error"");
		print(result);
	end

	return nil;
end

function PBOIDTOROID ( pboid ) 
	if ( pboid == 1 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_1;
	elseif ( pboid == 2 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_2;
	elseif ( pboid == 3 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_3;
	elseif ( pboid == 4 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_1;
	elseif ( pboid == 5 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_2;
	elseif ( pboid == 6 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_3;
	elseif ( pboid == 7 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PAD;
	elseif ( pboid == 8 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PAD;
	elseif ( pboid == 9 ) then
		return ROID_TYPE_WEATHER;
	end
end"
9959,Brazie's PetBattle - Library - Pet Movement,"

function PerformRelativeSlide( opponent, pet, front, left, up, duration ) 
	if ( opponent.moveSpeed <= 0 ) then
		return;
	end

	local newDrift = CalculateUnitFacingRelativeOffset(opponent, pet, front, left, up ) 

	local opponentDriftPoint = newDrift;
	local driftDistance = opponentDriftPoint:Dist( opponent.actor:GetPosition() )

	local speed = opponent.moveSpeed;

	if ( not speed ) then
		speed = 5;
	else
		speed = opponent.moveSpeed;
	end

	local duration = (duration or driftDistance/speed)

	opponent.actor:MoveToAbs(opponentDriftPoint, duration );

end

function BuildKnockbackSpline(petStartPosition, petFinalPoint, duration)
	local gravity = -9.8/2; -- M / sec / sec
	local points = 10;  

	local dx = petFinalPoint.x - petStartPosition.x;
	local dy = petFinalPoint.y - petStartPosition.y;
	local xVelocity = dx / duration;  -- M / sec
	local yVelocity = dy / duration;  -- M / sec

	local zVelocity = ( gravity * duration * duration ) * -2;

	local list = {};
	local timeStep = duration / points

	for i=0, points do 
		local time = timeStep * i; 
		local x = time * xVelocity;
		local y = time * yVelocity;
		local u = gravity*time*time + zVelocity*time;
--print(""t: "",time,"" x: "",x,""u: "",u);
		table.insert(list, 
			petStartPosition + Vector:New(x,y,u) 
			);
	end
	table.insert(list, petFinalPoint);
	table.remove(list, 1);

	return list;
end


function CalculateLocationFacingRelativeOffset(pet, location, front, left, up)
	--FastLocalFacingCoordinates ( pet.actor:GetPosition(), location, Vector:New(front, left, up) );

	return FastLocalFacingCoordinates ( pet.actor:GetPosition(), location, Vector:New(front, left, up) );
end

function CalculateUnitFacingRelativeOffset(opponent, pet, front, left, up ) 
	local opponentLocation = opponent.actor:GetPosition();

	return CalculateLocationFacingRelativeOffset(opponent, pet.actor:GetPosition(), front, left, up);
end"
9960,Brazie's PetBattle - Library - Pet Movement - Matrix Generation,"-- Returns functions to get a local coordinate transformation matrix from the source point to the target point

function GetStandardMatrixOps ( sourcePosition, targetPosition )
	local targetPosition = targetPosition or Vector:New(0,0,0);

	if ( sourcePosition:Dist( targetPosition ) < 0.1 ) then
		warning(""INVALID distances provided to GetStandardMatrixOps!"");

		targetPosition = Vector:New(0,0,0);

		--local dummy = function( v ) return v; end;
		--return dummy, dummy;
	end

--[[
	local delta = targetPosition - sourcePosition;
	local angleAroundZ = math.atan2( delta.y, delta.x );
	local angleAroundY = math.atan2( delta.z, delta.x );

	local T  = CreateTranslationMatrix(  sourcePosition.x,  sourcePosition.y,  sourcePosition.z )
	local T1 = CreateTranslationMatrix( -sourcePosition.x, -sourcePosition.y, -sourcePosition.z )

	print( ""angleZ: "", angleAroundZ );
	print( ""angleY: "", angleAroundY );

	local R = CreateRotationMatrixAroundZ ( angleAroundZ );
	local R1 = CreateRotationMatrixAroundZ ( -angleAroundZ );
]]
	--local M = MultiplyMatrixes( R, T1 );
	--local M1 = MultiplyMatrixes( T, R1 ); 

	local M = LocalToWorldMatrix ( targetPosition, sourcePosition );
	local M1 = WorldToLocalMatrix ( targetPosition, sourcePosition );


	-- To Convert from Local to World:
	-- 	Rotate, then Translate

	-- To Convert, from World to Local:
	--  Translate, then Rotate

	local LocalToWorldCoords  = function( v )
		return ApplyMatrixToVectorPoint( M, v );
	end
	local WorldToLocalCoords  = function( v )
		return ApplyMatrixToVectorPoint( M1, v );
	end

	return LocalToWorldCoords, WorldToLocalCoords
end"
9961,Brazie's PetBattle - Library - Pet Movement - Spline Attack,"--
-- Spline_Attack2 - path = MoveData object
-- 
function Spline_Attack2(testFunc, successFunc, finishFunc, path, stretchPath, actor, attackPoint )

	-- Stretch
	if ( stretchPath ) then
	-- Convert to relative space
		local sourcePosition, targetPosition = actor:GetPosition(), attackPoint
		local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

		local dist = attackPoint:Dist( actor:GetPosition() );

		for _,vect in pairs( path.points)  do
			vect.pos.x = vect.pos.x * dist;
		end

		for _,vect in pairs( path.points ) do
			vect.pos = LocalToWorldCoords( vect.pos );
		end
	end

	actor:Move( path );

	local ranSuccess = false;
	local dist = actor:GetPosition():Dist( attackPoint );

	repeat  
		local keepGoing, succeeded = testFunc()
		
		if ( succeeded ) then

			successFunc();
			ranSuccess = true;
		end

		scene:WaitTimer(0.0001);

	until ( keepGoing == false );

	actor:WaitMovementComplete()
	actor:SetSnapToGround(true)

	finishFunc ( ranSuccess );
end

--
-- returns testFunc, successFunc, finishFunc
--
function Spline_Attack2_GetDefaultHandlers(turn, actor, attackPoint, successDistance)
	local successThreshold = successDistance or 2;

	-- Default Hit Test Function
	--
	--	returns:
	--		arg1 - keep testing
	--		arg2 - succeeded
	--
	local testFunc = testFunc or function()
		local dist = attackPoint:Dist( actor:GetPosition() );

		if ( actor:IsMoving() ) then

			dist = actor:GetPosition():Dist( attackPoint );

			if ( dist < successThreshold ) then 
				return false, true;
			end

			return true, false;
		else
			return false, false;
		end
	end

	-- When you pass the test the first time
	local successFunc = function()
		local effect = turn.effects[1];
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID)
	end
	
	-- Default Success Function
	-- 
	local finishFunc = function( ranSuccess )
		local start = 1;

		if ( ranSuccess ) then 
			start = 2;
		end

		-- Handle all effects
		for index=start,#turn.effects do 
			local effect = turn.effects[index];
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end 
	end

	return testFunc, successFunc, finishFunc;
end

-- Spline_Attack - path == array of bezier spline points
--

function Spline_Attack( testFunc, successFunc, finishFunc, path, isAbsolutePath, pathDuration, actor, targetROID )

	-- MY MOVEMENT START
	local opponent = ROIDTOPET(targetROID);

	local opponentLocation = opponent.actor:GetPosition();
	local frontVector = UnitVectorFromAtoB(opponentLocation, actor:GetPosition()  );
	local upVector = UnitVectorFromAtoB(opponentLocation, (opponentLocation + Vector:New(0,0,1) ) );
	local leftVector = UnitVectorCrossProduct(frontVector, upVector);

	actor:ClearFacing(); 

	local points = {}

	-- First calculate the bezier
	local dist = opponentLocation:Dist( actor:GetPosition() );
	local heightFloor = opponent.actor:GetPosition().z - actor:GetPosition().z;

	-- Transform the path into relative space
	if ( not isAbsolutePath ) then

		for k,v in pairs( path.points ) do 
			if ( v.leftArm ) then 
				v.leftArm.x = v.leftArm.x * dist;
				v.leftArm.z = heightFloor * math.max(0, math.min(v.leftArm.x, 1)) + v.leftArm.z;
			end
			if ( v.rightArm ) then 
				v.rightArm.x = v.rightArm.x * dist;
				v.rightArm.z = heightFloor * math.max(0, math.min(v.rightArm.x, 1)) + v.rightArm.z;
			end
			if ( v.basePoint ) then 
				v.basePoint.x = v.basePoint.x * dist;
				v.basePoint.z = heightFloor *  math.max(0, math.min(v.basePoint.x, 1)) + v.basePoint.z;
			end
		end
	end


	-- Start
	local relativeSpline = Brazie_SplineBuilder( path, ""x"", ""z"");
	local realSpline = {};

	for i=1, #relativeSpline  do 
		local relativeNode = "
9962,[1] Brazie's PetBattle - Library - Pet Movement - Spline Attack,"relativeSpline[i];
		local newNode = FastLocalFacingCoordinates ( actor:GetPosition(), opponent.actor:GetPosition(), relativeNode )

		table.insert( realSpline, newNode );
	end

	actor:SetSnapToGround( false )
	actor:MoveSplineAbs( realSpline, pathDuration )

	local ranSuccess = false;
	local dist = actor:GetPosition():Dist( opponent.actor:GetPosition() );

	repeat  
		local keepGoing, succeeded = testFunc()
		
		if ( succeeded ) then

			successFunc();
			ranSuccess = true;
		end

		scene:WaitTimer(0.0001);

	until ( keepGoing == false );

	actor:WaitMovementComplete()
	actor:SetSnapToGround(false)

	-- MY MOVEMENT END

	finishFunc ( ranSuccess );
end"
9963,Brazie's PetBattle - Library - Pet Movement - GetRoll,"
function LockToRollActor( petActor, rollOffset )

	-- Roll test:
	--  The procupine actor is made relative to a stalker that is rolling, and
	--  the stalkers movement path is offset by the pivot point of the roll

	local stalkerModel = ""creature\\invisiblestalker\\invisiblestalker.m2""
	--local stalkerModel = ""spells\\axistestobject.m2""

	local stalkerCreateData = ActorCreateData:Default()
	stalkerCreateData.model = stalkerModel
	stalkerCreateData.groundSnap = true
	local stalker = scene:SpawnActor(stalkerCreateData)


	-- move the stalker to the correct initial position, and make
	-- the actor relative to it
	stalker:SetHoverHeight(rollOffset)
	local transform = petActor:GetTransform()
	transform.position.z = transform.position.z + rollOffset
	stalker:SetTransform(transform)
	stalker:SetFacingTurnRate(petActor:GetFacingTurnRate())
	petActor:SetSnapToGround(false)
	petActor:SetRelativeTo(stalker)

	return stalker;
end

function UnlockRollActor( petActor, stalker, rollOffset ) 
	-- restore the actors position and groun snapping
	petActor:SetRelativeTo(nil)
	petActor:SetSnapToGround(true)
	local transform = stalker:GetTransform()
	transform.position.z = transform.position.z - rollOffset
	transform.roll = 0;
	petActor:SetTransform(transform)

end"
9964,Brazie's PetBattle - Bezier Curve Generation,"local scaleCreateData = ActorCreateData:Default()
scaleCreateData.name = ""scaleAxis""
scaleCreateData.model = ""SPELLS\\AxisTestObject.m2""
scaleCreateData.scale = 1.0
scaleCreateData.interactible = false
scaleCreateData.groundSnap = false;


function Brazie_SplineBuilder( splineData, indexA, indexB ) 
	local finalSpline = {};

	for i=1,#splineData do
		local node = splineData[i];
		local nextNode = splineData[i+1];

		-- If there are spline arms specified, build a bSpline
		if ( nextNode and (node.rightArm and nextNode.leftArm ) ) then 
--print(""SEGMENT: ""..i.. "" handled as bSpline"");
			local bezierInput = {};

			table.insert(bezierInput, node.basePoint);
--[[
		scaleCreateData.transform = Transform:New( node.basePoint, 45 )
		scaleCreateData.scale = 2;
		actor = scene:SpawnActor( scaleCreateData )
--]]
			table.insert(bezierInput, node.rightArm);
			table.insert(bezierInput, nextNode.leftArm);
			table.insert(bezierInput, nextNode.basePoint);


			local output = Build_Bezier( bezierInput, 10 )

			for j=1,#output do 
				local newPoint = output[j];

				if ( #finalSpline > 0 and newPoint:Dist(finalSpline[#finalSpline]) < 0.01 ) then
				else
					table.insert(finalSpline, newPoint );
				end
			end
		-- Otherwise insert splines in a line
		else
			table.insert(finalSpline, node.basePoint);
		end
	end

	return finalSpline;
end

function Bezier_GetFactorial(n)
	if ( n < 0) then 
		print (""ERROR: Factorial < 0 requested in Bezier Curve Calculation"")
		return 1;
	elseif ( n > 32 ) then 
		print (""ERROR: Factorial > 32 requested. Not supported."");
		return 1;
	end

	return FACTORIAL_TABLE[n];
end

function Build_Bezier( arrayOfPoints, numPointsRequested )
	local bezier = {};

	local npts = #arrayOfPoints/2;
	local iCount, jCount;
	local step, t;

	-- Calculate the points on the curve

	iCount = 0;
	t = 0;
	step = 1 / (numPointsRequested-1);

	for i1 = 1, numPointsRequested do 
		if ( (1-t) < 0.00000005 ) then 
			t = 1;
		end

		local u = 1 - t;
		local tt = t * t;
		local uu = u * u;
		local uuu = uu * u;
		local ttt = tt * t;		

		local newPoint = arrayOfPoints[1] * uuu;
		newPoint = newPoint + ( arrayOfPoints[2] * t * uu * 3 );
		newPoint = newPoint + ( arrayOfPoints[3] * u * tt * 3 );
		newPoint = newPoint + ( arrayOfPoints[4] * ttt );

		table.insert(bezier, newPoint);
		
		t = t + step;
	end

	return bezier
end
"
9965,----- Initialization -----,
9966,Brazie's PetBattle - Init Pad,"--------------------------------------------------------------------------------
-- pad
padModel = ""CREATURE\\INVISIBLESTALKER\\InvisibleStalker.M2""
padAlpha = 1.0
padScale = 1.0


function InitPad(transform)
	-- spawn a pad for this team
	local padCreateData = ActorCreateData:Default();
	padCreateData.name = ""pad"";
	padCreateData.model = padModel;
	padCreateData.transform = transform;
	padCreateData.scale = padScale*battleScale;

	pad = scene:SpawnActor(padCreateData)
	pad:Fade(padAlpha, 0.5)
	pad:SetInteractible(false);

	return pad;
end"
9967,Brazie's PetBattle - Init Player,"
function InitTeam(team)
	local playerID = team.playerID;

	-- Save the team
	allPlayers[playerID] = team;
	team.playerID = playerID;

	-- Spawn a Pad
	local homeTransform = HOME_LIST[playerID];
	team.pad = InitPad(homeTransform);

	-- Save the home loc
	team.home = homeTransform.position;

	-- Weather is neutral, so set it up then eject
	if (playerID == PetBattlePlayerID.Weather) then
		team.isWeather = true

		local padPet = { 
			isPad = true;
			actor = team.pad;
			auras = {}; 
			slot = petIndex; 
			--team = team.playerID; 
			playerID = team.playerID;
			moveSpeed = 1000;
		}; 
		team.pets = {};
		team.pets[PetBattlePetID.Weather] = padPet;
		team.pets[PetBattlePetID.Weather].actor = team.pad;

		InitStates( team.playerID, PetBattlePetID.Weather, team.petDescs[PetBattlePetID.Weather].states );
		InitAuras( team.playerID, PetBattlePetID.Weather, team.petDescs[PetBattlePetID.Weather].auras )

		return;
	else
		team.isWeather = false
	end

	-- Create the Master
	local masterTransform = MASTER_SPOTS[playerID];
	local masterLoc = masterTransform.position;
	local master
	
	-- Spawn an NPC if needed
	if (team.npcCreatureID and team.npcCreatureID > 0 and team.npcDisplayID) then
		local npcCreateData = ActorCreateData:Default();
		npcCreateData.creatureID = team.npcCreatureID;
		npcCreateData.creatureDisplayID = team.npcDisplayID;
		npcCreateData.interactible = false;
		npcCreateData.transform = masterTransform;
		npcCreateData.scale = battleScale;

		-- try and smooth phase the NPC to an actor
		npcCreateData.smoothPhase = true;
		local maxWait = 2.5
		local pingInterval = 0.25; -- quarter of a second ping
		local currentWait = 0.0;
		local phaseTimer = scene:Timer(pingInterval);
		while (scene:ShouldWaitForSmoothPhase(npcCreateData) and (currentWait < maxWait)) do
			phaseTimer:Reset();
			scene:Wait(phaseTimer);
			currentWait = currentWait + pingInterval
		end
		master = battleScene:SpawnNPC( playerID, npcCreateData );

		master:SetFacingToAbs(Vector:New());

		-- Assign the master to his team

		-- Darren's scripts required these two
		team.npcActor = master;
		team.playerDisplay = master;

		-- Mine is generic
		team.master = master;
	end

	if ( team.isNPC == true and team.npcActor == nil ) then 
		team.wildBattle = true;
	end

	-- Assign Pets to temporary data
	team.pets = {};

	mainPetLoc = homeTransform;
	
	local backLineCount = 0;

	local offsetTable = BACKROW_PET_OFFSETS;

	-- If it's a wild battle, make them run in from a distance.
	if ( team.wildBattle and initialBattleState.battleState == PetBattleState.WaitingPreBattle ) then
		offsetTable = WILD_PET_OFFSETS;
	end

	for slot,v in pairs( team.petDescs ) do 
		-- If its your pad object
		if ( slot == PetBattlePetID.Pad ) then
			local padPet = { 
				isPad = true;
				actor = team.pad;
				auras = {}; 
				slot = slot; 
				--team = team.playerID; 
				playerID = team.playerID;
			};
			team.pets[slot] =  padPet;

		-- Spawn the appropriate pet in front if the game is mid-session
		elseif ( slot == team.activePet ) then 
			local petLoc = mainPetLoc

			if ( initialBattleState.battleState == PetBattleState.WaitingPreBattle ) then

				petLoc = offsetTable[playerID][3]
			end

			team.pets[slot] = InitPet(team, slot, petLoc);
			team.pets[slot].backlineIndex = 3;
		else
			backLineCount = backLineCount + 1;

			-- Placed in master-relative coordinates
			local transform = offsetTable[playerID][backLineCount]   
			team.pets[slot] =  InitPet(team, slot, transform );
			team.pets[slot].backlineIndex = backLineCount;
		end
		

--[[
if ( id == PetBattlePetID.Pad ) then
	print(""DEBUG AURAS:""..#v.auras);
	DEBUG_TABLE(v.auras);
	print(""DEBUG STATES:""..#v.states);
	DEBUG_TABLE(v.states);
end
--]]
	end


	-- If the battle has already "
9968,[1] Brazie's PetBattle - Init Player,"started
	-- Make them all face the guy in the center
	if ( initialBattleState.battleState ~= PetBattleState.WaitingPreBattle ) then 
		for k,v in pairs(team.pets) do
			if ( k ~= team.activePet ) then 
				v.actor:SetFacingToTarget(team.pets[team.activePet].actor, Vector:New());
			else
				local enemyTeam = teams [3-playerID];
				if ( enemyTeam.pets ) then 
					v.actor:SetFacingToTarget(enemyTeam.pets[enemyTeam.activePet].actor, Vector:New());
				end
			end
		end

	-- Otherwise, everyone faces the center of the game
	else
		for k,v in pairs(team.pets) do
			if ( k ~= team.activePet ) then 
				v.actor:SetFacingToAbs(Vector:New());
			end
		end
	end
end

-- You must initialize states and auras after all of the pet objects are created
function InitAurasAndStates ( team )
	for slot,v in pairs( team.petDescs ) do 
		InitStates( team.playerID, slot, v.states );
		InitAuras( team.playerID, slot, v.auras)
	end
end

function InitPet(team, petIndex, transform)
	local petData = team.petDescs[petIndex];
	local petCreateData = ActorCreateData:New(petData.creatureID, transform, battleScale);
	petCreateData.creatureDisplayID = petData.displayID or 0;

	local petActor
	if (PetBattleScene.SpawnPet) then

		petActor = battleScene:SpawnPet(team.playerID, petIndex, petCreateData)
	else
		petActor = scene:SpawnActor(petCreateData)
	end

	local pet = { 
		isPet = true;
		actor = petActor; 
		moveSpeed = DEFAULT_MOVE_SPEED;
		turnRate = DEFAULT_TURN_RATE;
		auras = {}; 
		slot = petIndex; 
		playerID = team.playerID; 
		--team = team.playerID;
		creatureID = petData.creatureID;
		displayID = petData.displayID;
		teamFacing = team.teamFacing; -- Needed for Darren compat only
		health = petData.health;
		createData = petCreateData;
	};

	-- For Darren Compatibility only
	pet.currentRadius = backlineRadius
	pet.currentOffset = 0

	-- Initialize stuff
	SetXP(pet, petData.xp, petData.level, true)
	SetHealth(pet, petData.health, true)

	pet.status = petData.status

	-- Initially invisible?
	petActor:SetInteractible(false);
	petActor:SetFacingTurnRate(DEFAULT_TURN_RATE);
	--petActor:SetHidden(true);
	--petActor:Fade(0, 0); 
	pet.standAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Stand, false, Animations.None)

	return pet;
end

function InitAuras(playerID, slot, auraList)
	-- apply initial auras
	for auraIndex, auraData in pairs(auraList or { }) do	
--print(""Aura initialized "",playerID,"":"",slot,"" InstanceID: "",auraData.instanceID,"" AuraID: "",auraData.abilityID );		
		local petROID = GETROIDFROMPLAYERIDANDSLOT( playerID, slot )
		local aura = CreateAura( petROID, auraData.instanceID, auraData.turnsRemaining, auraData.abilityID )
	end
end

function InitStates(playerID, slot, states)
	-- add visual rendering support in the future
	local petROID = GETROIDFROMPLAYERIDANDSLOT( playerID, slot )
	local pet = ROIDTOPET( petROID );
	local team = ROIDTOPLAYER( petROID );

	pet.states = pet.states or {};

	for index, stateData in pairs ( states ) do

		if ( stateData.ID == STATE_WATER_BUBBLED and stateData.value > 0 ) then 
			pet.bubbleStateVisual = pet.actor:PlaySpellStateVisual( PET_BATTLES_WATER_BUBBLE );
		end
		if ( stateData.ID == STATE_BIGGLESWORTH and stateData.value > 0 ) then 
			pet.BigglesworthStateVisual = pet.actor:PlaySpellStateVisual( PET_BATTLES_BIGGLESWORTH );
		end
		if ( stateData.ID == STATE_FETISH_RANDOM_COLOR and stateData.value > 0 ) then 


			pet.fetishBaseState = pet.actor:PlaySpellStateVisual( FETISH_BASE_STATE );

			local i = math.random(1, #FETISH_STATES );
		
			pet.fetishRandomState = pet.actor:PlaySpellStateVisual( FETISH_STATES[i] );
		end

		-- Initialize the state table
		pet.states[stateData.ID] = stateData.value;
	end
end"
9969,----- Event Handling -----,"

--
--
-- "
9970,Brazie's PetBattle - Result Event Filtering,"	EVENT_DEBUG_MODE = false;
	DEBUG_EVENT_LOG = {};

-- Used for the Brazie Event Filtering System
function FilterResultEventsByType(event)
	local filteredEvent = FilteredEventMetaTable({});
	
	local eventType = event.eventType
	local effectType = event.effectType

	-- Mark the result as a result
	filteredEvent.class = ""result"";

	-- What kind of result
	filteredEvent.eventType = event.eventType;
	filteredEvent.resultType = event.effectType;
	filteredEvent.instanceID = event.instanceID;

	-- darren's fix
	filteredEvent.turnInstanceID = event.turnInstanceID;
	filteredEvent.effectID = event.effectID;
	filteredEvent.stackDepth = event.stackDepth;

	-- Massive Event Logging
	if ( EVENT_DEBUG_MODE ) then 
		local text = ""Unknown"";
		for name,id in pairs( PetBattleEffect ) do 
			if ( event.effectType == id ) then 
				text = name;
			end
		end

		DEBUG_EVENT_LOG[filteredEvent.instanceID] = text 
		print(filteredEvent.instanceID..""> ""..text);
	end

	-- Procs
	filteredEvent.procGroup = event.procGroup;
	filteredEvent.sourceAuraInstanceID = event.sourceAuraInstanceID;

	-- Targetting
	filteredEvent.targetPlayerID = event.targetPlayerID;
	filteredEvent.targetPetSlot = event.targetPetSlot;

	-- Failure reasons
	if ( event.failureReason and event.failureReason > 0 ) then
		filteredEvent.failureReason =  event.failureReason;
	end

	-- Always provide a flags table
	filteredEvent.flags = {}

	-- Only show true flags 
	if ( event.flags ) then
		for  k, v in pairs ( event.flags ) do 
			if ( v ) then
				filteredEvent.flags[k] = v;
			end
		end
	end

	-- battle round effects
	if ( effectType == PetBattleEffect.SetHealth)  then

		filteredEvent.value = event.value;

	elseif (
		effectType == PetBattleEffect.AuraApply or
		effectType == PetBattleEffect.AuraChange or
		effectType == PetBattleEffect.AuraCancel ) then

		filteredEvent.auraAbilityID = event.auraAbilityID
		filteredEvent.auraInstanceID = event.auraInstanceID
		filteredEvent.auraTurnsRemaining = event.auraTurnsRemaining

	elseif ( effectType == PetBattleEffect.PetSwap ) then

		filteredEvent.targetPlayerID = event.targetPlayerID;
		filteredEvent.targetPetSlot = event.targetPetSlot;

	elseif ( effectType == PetBattleEffect.SetState ) then

		filteredEvent.stateID = event.stateID
		filteredEvent.stateValue = event.value;

	elseif ( effectType == PetBattleEffect.StatusChange ) then
		filteredEvent.isTrapped = event.status.isTrapped;
		filteredEvent.isStunned = event.status.isStunned;
		filteredEvent.isSwapLocked = event.status.isSwapLocked;

	elseif ( effectType == PetBattleEffect.SetMaxHealth ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.SetSpeed ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.SetPower ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.NPCEmote ) then
		filteredEvent.value = event.value;
	end

	return filteredEvent;
end

function FilteredEventMetaTable(newTable)

	setmetatable(newTable, { __tostring = FilteredEventMetaTablePrinter })
	
	return newTable;
end
function FilteredEventMetaTablePrinter (tableRef, depth) 
	local output = ""{\n"";
	local indent = depth or 1;
	local indentText = """";

	-- Safety valve
	if ( indent > 2 ) then
		return ""Depth Error"";
	end

	for i=1,indent do 
		indentText = indentText..""  "";
	end

	for key,val in pairs( tableRef ) do 
		local text = tostring(val);
		if ( key == ""resultType"" ) then 
			for name,id in pairs( PetBattleEffect ) do 
				if ( val == id ) then 
					text = name;
				end
			end

		elseif ( key  == ""playerID"" or key  == ""targetPlayerID"" or key  == ""swapPlayerID"" ) then 
			text = tostring(val);
			for name,id in pairs( PetBattlePlayerID ) do 
				if ( val == id ) then 
					"
9971,[1] Brazie's PetBattle - Result Event Filtering,"text = name;
				end
			end

		elseif (key  == ""petSlot"" or key  == ""targetPetSlot"" or key == ""oldFrontPet"" or key == ""newFrontPet"" ) then 
			text = tostring(val);

			for name,id in pairs( PetBattlePetID ) do 
				if ( val == id ) then 
					text = name;
				end
			end			

		elseif (key  == ""stateID"" ) then 
			text = tostring(val);
			for name,id in pairs( STATE_LOOKUP ) do 
				if ( val == id ) then 
					text = name;
				end
			end			

		elseif ( type(val) == ""table"" ) then 
			text = FilteredEventMetaTablePrinter(val, indent + 1);
		else
			text = tostring(val);
		end
		output = output..indentText..""K: ""..key.."" V: ""..text..""\n"";
	end

	output = output..""}\n"";

	return output
end


	--
	-- Effect Types:
	--
	-- 

	-- EventTypes
	--
	-- This list is primarily for my own edification
	--
	-- PetBattleEvent.BattleOver
	--	params:
	--		event.winnerID - ID of the winner
	--
	-- PetBattleEvent.BattleResults
	--  params:
	--		event.rewards {
	--				playerID
	--				petSlot 
	--				wasCaptured
	--				newLevel
	--				newXP
	--			}
	--
	--	PetBattleEvent.ObserverChange
	--   param:
	--		- none -
	--
	--	PetBattleEvent.MoveAbilitySelected
	--	 params:
	--		event.abilityVisualID
	--
	--	PetBattleEvent.MovePetSwapSelected
	-- 	 params:
	--		event.newFrontPet
	--  
	-- PetBattleEvent.MoveTrapSelected
	-- 	 params:
	--		event.abilityVisualID - the trap ability visual id
	-- 
	-- PetBattleEvent.RoundEffect
	-- 	 params:
	-- 		- MANY -
	-- 
	-- PetBattleEvent.RoundStart
	--	 params:
	--		roundNumber - the round starting
	--
	-- PetBattleEvent.RoundComplete
	-- 	 params:
	-- 		roundNumber - the round ending
	--		stateChange - the battle state



--DEBUG_TABLE(event);
--[[
for k,v in pairs (PetBattleEffect) do 
	if ( v == effectType ) then 
		print("" ::"",k);
	end
end
--]]
"
9972,Brazie's PetBattle - Result Data,"function DidItFail ( data )
	local result; 
	
	if ( data.class == ""turn"" ) then 
		result = data.effects[1].results[1];
	elseif ( data.class == ""effect"" ) then 
		result = data.results[1];
	elseif ( data.class == ""result"" ) then 
		result = data;
	end

	if ( result.flags and ( result.flags.miss or result.flags.absorb or result.flags.parry or result.flags.immune or result.flags.dodge or result.flags.deflect or result.flags.blocked ) ) then 
		return true, result.flags;
	end

	return false, result.flags;
end

function GetMoveToROID( data ) 

	if ( data.class == ""turn"" ) then 

		local team = ROIDTOPLAYER ( data.effects[1].primaryTarget );

		if ( data.effects[1].redirectTarget ) then
			return data.effects[1].redirectTarget;
		end

		return data.effects[1].redirectTarget or data.effects[1].primaryTarget;
	elseif ( data.class == ""effect"" ) then
		local team = ROIDTOPLAYER ( data.primaryTarget );

		if ( data.redirectTarget ) then
			return data.redirectTarget;
		end

		return data.redirectTarget or data.primaryTarget;
	elseif ( data.class == ""result"" ) then
		return ResultToTargetROID( data )
	else
		warning(""Undefined data class"")
	end
end"
9973,Brazie's PetBattle - Core - Handle Turn,"function Dispatcher_HandleTurn(turn)
	-- Turn Package? Hand-off
	local userROID = GetActorROID(turn);

	-- Attempt to process the package
	local processed = Dispatcher_HandleSpellVisualPackage(userROID, turn.turnVisualID, ""turn"", turn)

	-- Baseline
	if ( not processed ) then 
		Dispatcher_DefaultTurnBehaviour(userROID, turn )
	end
end  

function Dispatcher_HandleSpellVisualPackage( ROID, turnVisualID, ...)
	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnVisualID) then
		turnVisual = petAbilityVisuals[turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		turnVisual.scriptFunction( ROID, ...)
		processed = true;
	end

	return processed
end

function GetActorROID ( turn )
	local userROID = TurnToUserROID(turn);

	local user = ROIDTOUNIT( userROID )
	local player = ROIDTOPLAYER ( userROID );
	
	if ( not player ) then 
		return userROID;
	end

	local pad = player.pets[PetBattlePetID.Pad]

--print(""Checking for clone ""..userROID);
--DEBUG_TABLE(user.states);

	-- Check if Clone Mode is turned on
	--if ( turn.cloned ) then
	if ( pad.states[STATE_CLONE_ACTIVE] and pad.states[STATE_CLONE_ACTIVE] > 0) then

		local cloneAuraID = pad.states[STATE_CLONE_AURAID];

		--print(""Clone Aura ID: "",cloneAuraID);

		-- [ABrazie]: 8/7/2012 - this should be changed to use FindObject( turn.sourceAuraInstanceID )
		-- Requires a code change from Pat MacKellar

		local object, playerID, slot, transform =  FindObjectByAbilityID( user.playerID, cloneAuraID ) 
		local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

		if (not objectROID or objectROID == 0) then
			return userROID;
		else
			return objectROID;
		end
	end

	return userROID;
end

-- This replaces the default behaviour with mine
ProcessRoundTurnGroup = Dispatcher_HandleTurn;"
9974,Brazie's PetBattle - Core - Default Turn,"function Dispatcher_DefaultTurnBehaviour( ROID, turn, successOverride, failureOverride, isPeriodic )
	DefaultTurnBehaviour( ROID, ""turn"", turn, successOverride, failureOverride);
end 

function DefaultTurnBehaviour( ROID, isTurn, turn, successOverride, failureOverride, successEffectOverride, failureEffectOverride, isPeriodic )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..turn.class.."" passed to DefaultTurnBehaviour"");

		if ( turn.class == ""effect"" ) then 
			warning(""WARNING: Calling Effect handling for Effect..."");

			DefaultEffectVisualHandler( ROID, turn, turn.effectVisualID, successEffectOverride, failureEffectOverride )
			DefaultDoEffectProcessing( userROID, ""effect"", turn ); 
		end

		return;
	end

	local visuals = true;
	local movementAllowed = true; -- Is used to handle the backline periodic case
	local isAuraUpdate = (turn.turnInstanceID == 0);

	-- If this is not being performed by a specific pet, skip the casting effects
	-- [ABrazie]: 6/25/2012 - I don't recall when this situation would occur.
	-- 			Making a note to review this later

	if ( not ROIDISUNIT( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Is an aura update package
	if ( isAuraUpdate or isPeriodic ) then 
		movementAllowed = false;
	else
--print("" Turn: "", turn.turnInstanceID);
	end

	local targetROID = GetMoveToROID( turn.effects[1] ); 

	-- Move into position
	if ( movementAllowed ) then 
		DefaultTurnPreEffectMovement( ROID, turn )
	end

	local turnVisualPlayed = false;

	if ( visuals and ( turn.turnVisualID and turn.turnVisualID > 0 ) ) then 
		turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride)
	end

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
		local effectVisualPlayed

		-- Will cause the creature to walk into range of the next target
		local nextTargetROID = GetMoveToROID( effect ); 
		if ( nextTargetROID ~= targetROID and movementAllowed ) then 
			DefaultTurnEffectMovement( ROID, turn, effect )
			targetROID = nextTargetROID
		end

		-- Visuals
		if ( visuals ) then  
			effectVisualPlayed = DefaultDoEffect( ROID, effect, successEffectOverride, failureEffectOverride )

			if ( effectVisualPlayed and movementAllowed ) then 
				DefaultEffectCleanUp( ROID );
			end
		else
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end
	end

	if ( turnVisualPlayed and movementAllowed ) then 
		DefaultTurnCleanUp(ROID);
	end
end

--
--  Moves the unit into the right place
--
function DefaultTurnPreEffectMovement( attackerROID, turn )
	local turnVisualID = turn.turnVisualID ;

	local targetROID = GetMoveToROID( turn ); 
	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	-- Visual Data
	local turnVisual = petAbilityVisuals[turnVisualID]

	-- Stationary if undefined
	if ( not turnVisual ) then 
		warning(""ERROR: Turn PreEffect Movement - No turn ability visual!"",turn.abilityID)
		PerformMove( attackerROID, targetROID, PetBattleRange.InPlace, missed ); 

	-- Stationary if sessile
	else
		local attackerUnit = ROIDTOUNIT( attackerROID );
		if ( attackerUnit and attackerUnit.sessile ) then 
			warning(""WARNING: Sessile pet. (probably a construct). No movement."");
			return;
		else
			PerformMove( attackerROID, targetROID, turnVisual.range, missed ); 
		end
	end
end


--
--  Moves the unit into the right place
--
function DefaultTurnEffectMovement( attackerROID, turn, effect )
	local turnVisualID = turn.turnVisualID;
	local effectVisualID = effect.effectVisualID or effect.effectFallbackVisualID; 

	local targetROID = GetMoveToROID( effect ); 

	local failed, flags = DidItFail ( effect );
	local missed = flags.miss;

	-- Visual Data
	local effectVisual = "
9975,[1] Brazie's PetBattle - Core - Default Turn,"petAbilityVisuals[effectVisualID]
	local turnVisual = petAbilityVisuals[turnVisualID]

	-- Stationary if undefined
	if ( not turnVisual and not effectVisual ) then 
		warning(""ERROR: Turn PreEffect Movement - No turn or effect ability visual!"",turn.abilityID)
		PerformMove( attackerROID, targetROID, PetBattleRange.InPlace, missed ); 

	-- Station if sessile
	else
		local attackerUnit = ROIDTOUNIT( attackerROID );
		if ( attackerUnit and attackerUnit.sessile ) then 
			warning(""WARNING: Sessile pet. (probably a construct). No movement."");
			return;

		-- Effect first
		elseif ( effectVisual ) then
			PerformMove( attackerROID, targetROID, effectVisual.range, missed ); 
		else
			PerformMove( attackerROID, targetROID, turnVisual.range, missed ); 
		end
	end

end

-- 
--  Resets the position after
-- 
function DefaultTurnCleanUp(ROID)
	local userPet = ROIDTOUNIT( ROID  );
	userPet.actor:WaitCastingComplete();

	--
	-- ABrazie: This was removed to allow pets to remain ""up front"" until both turns end
	--	 

	-- Reset/reposition
	--Dispatcher_PerformPostAttackCleanup(ROID);

	scene:WaitTimer(0.75);

end
"
9976,Brazie's PetBattle - Core - Default Turn - Visuals,"
-- Play a visual and hit every involved unit
function DefaultTurnVisualHandler( ROID, turn, overrideSuccess, overrideFailure, overrideEffectSuccess, overrideEffectFailure )
	local turnVisualID = turn.turnVisualID ;

	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 
		
		-- Perform the Turn Visual
		local masterTargets = turn.primaryTargetList;

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		-- Face the first target
		if ( target ) then 
			DefaultFacing ( ROID, targetROID );
		end

		Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )
 
		if ( not failed ) then 
			local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
			success ( targetROID, ROID, turnVisualID, flags )
		else
			local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
			failure( targetROID, ROID, turnVisualID, flags )
		end

-- 
-- The TurnVisual Handler should not run the effects. Let the loop handle that.
--[[
		for index=1,#turn.effects do 
			local effect = turn.effects[index];			
			DefaultEffectVisualHandler(ROID, effect, turnVisualID, overrideEffectSuccess, overrideEffectFailure)
		end 
--]]
		return true;
	end

	return false;
end


-- Play a visual and hit every involved unit
function DefaultTurnOnEffectVisualHandler( ROID, turn, effect, overrideSuccess, overrideFailure )
	local turnVisualID = turn.turnVisualID ;
	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 

		local masterTargets = { effect.primaryTarget };


		-- [ABrazie]: Removed on 7/6/2012 to fire only at the primary target of the effect
		---= effect.targetList;
	
		-- [ABrazie]: Removed on 6/25 to support the premade target list
		-- This only took the first result into account. May cause bugs.
		-- May fix bugs. Please review later.
		--
		--[[
		local targets = {ResultToTargetROID(effect.results[1])}  --EffectToROIDs ( effect );

		for k,v in pairs(targets) do 
			table.insert(masterTargets, v);
		end
		-]]

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		-- Face the first target
		DefaultFacing ( ROID, targetROID );

		Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )

		if ( not failed ) then 
			local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
			success ( targetROID, ROID, turnVisualID, flags )
		else
			local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
			failure( targetROID, ROID, turnVisualID, flags )
		end

		return true;
	else
		print(""WARNING: NO turn visual provided to DefaultTurnOnEffectVisualHandler."");
	end

	return false;
end"
9977,Brazie's PetBattle - Core - Default Turn - Variants - No Knockback,"function DefaultTurnBehaviour_NoKnockback( ROID, isTurn, turn )
	local turnSuccess, turnFailure, effectSuccess, effectFailure = Dispatcher_NoKnockbackSuccessVisual, nil, nil, nil
	local isPeriodic = false;
	DefaultTurnBehaviour( ROID, isTurn, turn, turnSuccess, turnFailure, effectSuccess, effectFailure, isPeriodic );
end

function DefaultTurnBehaviour_Periodic( ROID, isTurn, turn )
	local turnSuccess, turnFailure, effectSuccess, effectFailure = Dispatcher_NoKnockbackSuccessVisual, nil, nil, nil
	local isPeriodic = true;
	DefaultTurnBehaviour( ROID, isTurn, turn, turnSuccess, turnFailure, effectSuccess, effectFailure, isPeriodic );
end
 "
9978,Brazie's PetBattle - Core - Default Effect,"function DefaultDoEffect(ROID, effect, overrideSuccess, overrideFailure)
	-- Attempt to process the package
	local processed = Dispatcher_HandleSpellVisualPackage( ROID, effect.effectVisualID, ""effect"", effect )

	-- fallback handling
	if (processed ~= true) then
		local targets = EffectToROIDs ( effect );

		local effectVisualID = effect.effectVisualID;

		-- Start the effect animation
		if ( effectVisualID and effectVisualID > 0 ) then 
			DefaultEffectVisualHandler( ROID, effect, effectVisualID, overrideSuccess, overrideFailure );
		end

		DefaultDoEffectProcessing( userROID, ""effect"", effect ); 

		-- End
		if ( effectVisualID ) then 
			return true;
		end
	end
end


function DefaultEffectCleanUp(ROID)
	local userPet = ROIDTOUNIT( ROID );
	userPet.actor:WaitCastingComplete();
	scene:WaitTimer(0.25);
end


-- Default Effect Handler

function DefaultEffectVisualHandler(ROID, effect, visualID, overrideSuccess, overrideFailure)
	local targetROID = GetMoveToROID( effect ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( effect );

	if ( not failed ) then 
		local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
		success ( targetROID, ROID, visualID, flags )
	else
		local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
		failure( targetROID, ROID, visualID, flags )
	end
end"
9979,Brazie's PetBattle - Core - Default Do Effect Processing,"function DefaultDoEffectProcessing(userROID, isEffect, effect, handlerOverrides ) 
	-- Only handle ""effect"" objects
	if ( effect.class ~= ""effect"" ) then
		warning (""ERROR: Object of type ""..effect.class.."" passed to DefaultDoEffect"");
		return SignalEffectProcessed();
	end

	for index=1,#effect.results do 
		local result = effect.results[index];

		StartEffectProcessing(result)
		
		local handlerTable = GetDefaultHandlerTable(result, index);

		-- Allows you to blow away basic handling
		if ( handlerOverrides ) then
			for eventType,overrides in pairs(handlerOverrides) do 
				
				for k,v in pairs(overrides) do 
					if ( not handlerTable[eventType] ) then
						handlerTable[eventType] = {};
					end
					handlerTable[eventType][k] = v;
				end
			end
		end

		local eventType = result.eventType
		local effectType = result.resultType

		-- This should only occur in case of a bug...
		if eventType and not (eventType == PetBattleEvent.RoundResult ) then
			break;
		end
		
		SignalEffectProcessed()

		-- DoFunction
		if ( handlerTable[effectType] ) then 
			local success = handlerTable[effectType].successEffect
			local failure = handlerTable[effectType].failureEffect

			local victimROID = ResultToTargetROID ( result );
			local successFunc;
			local failureFunc;

			-- sometimes I get slotless effects...
			if ( victimROID ~= nil and userPet ) then 
				successFunc = function () success( victimROID, userROID ); end;
				failureFunc = function () failure( victimROID, userROID ); end;
			end

			DoResult(result, 
				handlerTable[effectType].dontWait, 
				successFunc,
				failureFunc,
				handlerTable[effectType].func, 
				unpack( handlerTable[effectType].args) )
		else
			DebugPrint(""UNHANDLED EFFECT TYPE: "",effectType);
		end

		if (result.procGroup) then
			ProcessRoundTurnGroup(result.procGroup)
		end
	end
end
"
9980,Brazie's PetBattle - Core - Default Do Result Processing,"
function DoResult(result, dontWait, successEffect, failureEffect, func, ... )
	local targetROID = GetMoveToROID( result ); 

	local failed, flags = DidItFail ( result );
	local missed = flags.miss;

	if ( not failed ) then 
		if ( type(successEffect) == ""function"" ) then
			successEffect( targetROID, result );
		end
	else
		if ( type(failureEffect) == ""function"" ) then 
			failureEffect( targetROID, result );
		end
	end

	-- Do the special thing
	if ( type(func) == ""function"" ) then 
		func(targetROID, result, ...); 
	else
		print(""ERROR: DoResult - invalid result function. Type is: "",result)
	end

	-- [ABrazie]: Heavy duty debug mode
	if ( EVENT_DEBUG_MODE ) then 
		local currentEffectInstanceID = result.instanceID;

		if ( currentEffectInstanceID ) then
			print(""Signal ID: ""..currentEffectInstanceID.."" ""..DEBUG_EVENT_LOG[currentEffectInstanceID]);

			if ( LAST_SIGNAL_ID and currentEffectInstanceID < LAST_SIGNAL_ID ) then
				print(""You skipped some effects!"");

				print(result);

				for i=LAST_SIGNAL_ID, currentEffectInstanceID, -1 do 
					print ( i.."") ""..tostring(DEBUG_EVENT_LOG[i]) );
				end

				--afsaf11423();
			end

			if ( LAST_SIGNAL_ID 
					and currentEffectInstanceID > LAST_SIGNAL_ID + 1 
					and DEBUG_EVENT_LOG[LAST_SIGNAL_ID+1] ~= nil ) then

				print(""You skipped ""..(currentEffectInstanceID-LAST_SIGNAL_ID).."" effects!"");
				
				print(result);

				for i=currentEffectInstanceID, LAST_SIGNAL_ID+1, -1 do 
					print ( i.."") ""..tostring(DEBUG_EVENT_LOG[i]) );
				end

				--afsaf11423(); 
			end
			LAST_SIGNAL_ID = currentEffectInstanceID;
		end
	end

	-- signal the impact
	SignalEffectProcessed()


end"
9981,----- Scripted Sequences -----,"

--
--
-- "
9982,Brazie's PetBattle - Intro,"local cameraBunny

--------------------------------------------------------------------------------
local oldBattleMusicIDs = { 28753, 28754, 28755 }

local wildBattleMusicIDs = { 34084, 34085 }
local npcBattleMusicIDs = { 34088 }
local pvpBattleMusicIDs = { 34086, 34087 }

function PlayBattleMusic()
	if (isObserved == true) then
		local opponent = teams[3-observingPlayerIndex]

		local musicIDs = oldBattleMusicIDs
		if (opponent.npcCreatureID > 0 or opponent.npcDisplayID > 0) then
			musicIDs = npcBattleMusicIDs
		elseif (opponent.isNPC) then
			musicIDs = wildBattleMusicIDs
		else
			musicIDs = pvpBattleMusicIDs
		end

		battleScene:PlayPetBattleMusic(musicIDs[math.random(#musicIDs)]);
	end
end

function BattleIntro()

	PlayBattleMusic();

	Dispatcher_AddCommandToQueue(ROID_TYPE_WEATHER, Dispatcher_BattleIntro ); 	 
end

function Dispatcher_BattleIntro(ROID)

	SetCamera(1)
	scene:WaitTimer(1.0)
	SetCamera(2)
	scene:WaitTimer(0.3)
	StartCameraBunny(0.45)
	scene:WaitTimer(0.5)
	scene:SetCamera(0, 1.0, nil, nil)

	battleScene:SignalOpeningComplete()

	-- fade in the pets
	FadeInAllPets(initialFadeInTime)

end
"
9983,Brazie's PetBattle - PreTurn - Move Selected - Run Up,"--------------------------------------------------------------------------------
-- MOVE (ability) SELECTED
function EventMoveAbilitySelected(abilityVisualID)
	-- print(""Move Selected: Ability Visual ID: "" .. abilityVisualID)
	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if (not abilityVisual) then
		return
	end

	local player = nil
	local pet = nil
	if (observingPlayerIndex > 0) then
		player = GetTeamByIndex(observingPlayerIndex)
		if (player) then
			pet = player.pets[player.activePet]
		end
	end

	if (not pet) then
		return
	end

	local casterPlayer = GetTeamByIndex(observingPlayerIndex)
	local casterFrontPet = casterPlayer.pets[casterPlayer.activePet]
	local opponentFrontPet = GetActivePetByIndex(3 - observingPlayerIndex)
--[[
	-- Move up a bit
	local sourcePosition, targetPosition = casterFrontPet.actor:GetPosition(), opponentFrontPet.actor:GetPosition();

	-- Handle the flying case
	if ( victim and victim.states )  and 
		( victim.states[STATE_FLYING] and victim.states[STATE_FLYING] > 0 ) then
		local victimPlayer = ROIDTOPLAYER( victimROID );

		sourcePosition = victimPlayer.home;
	end

	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local moveUpSpot = LocalToWorldCoords( Vector:New( 1,0,0 ) );

	--casterFrontPet.actor:MoveToAbs(  moveUpSpot, moveUpSpot:Dist( casterFrontPet.actor:GetPosition() ) / casterFrontPet.moveSpeed );
--]]
	ReturnOrResetCheck (casterFrontPet, opponentFrontPet)
end
"
9984,Brazie's PetBattle - Turn - Swap,"function EffectSwap(teamId, petIndex)
	local team = GetTeamByIndex(teamId)
	if team.activePet == petIndex then
		return
	end

	local lastPet = team.pets[team.activePet]
	local nextPet = team.pets[petIndex]
	if not nextPet then
		return
	end

	-- make the player or npc point
	if (team.master) then
		team.master:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmotePoint)
	end

	local nextTeam = math.fmod(teamId,2)+1;
	local opponent = allPlayers[nextTeam].pets[ allPlayers[nextTeam].activePet ]

	-- Handle the cosmetic swap
	PerformSwap( lastPet, nextPet, opponent );

	--print(""NEW PET INDEX: ""..petIndex);
	team.activePet = petIndex
end

function PerformSwap ( pet, newPet, opponent )
	if ( pet.preSwapped or newPet.preSwapped ) then 
		return
	end

	local currentPetLoc = pet.actor:GetPosition();
	local currentBacklineLoc = newPet.actor:GetPosition();

--print(""Swapping "",pet.slot,"" with "",newPet.slot);

	-- Backline Index swap
	pet.backlineIndex, newPet.backlineIndex = newPet.backlineIndex, pet.backlineIndex


	local movePet = true;

	-- If pet picked was your pad, dont move it
	if ( pet.isPad ) then
		currentPetLoc = HOME_LIST[pet.playerID].position;
		movePet = false;

	elseif ( pet.currentHealth <= 0 or pet.moveSpeed == 0 ) then
		-- Send the pet into the ring, not to the corpse
		currentPetLoc = HOME_LIST[pet.playerID].position;
		movePet = false;
warning(""Swap - RealActor Fade 0,0.5"");
		pet.actor:Fade(0, 0.5);

		if ( pet.trap ) then 
			pet.trap:Fade(0, 0.5);
		end
		scene:WaitTimer(0.5)
	end

	-- Swap Locations
	if ( movePet and pet.moveSpeed > 0.01) then
		pet.actor:ClearFacing();
		local distance = pet.actor:GetPosition():Dist(currentBacklineLoc);
		pet.actor:MoveToAbs(currentBacklineLoc, distance/pet.moveSpeed)

	end

	-- New guy faces the enemy
	local distance = newPet.actor:GetPosition():Dist(currentPetLoc);
	local newPetMoved = false;
	if ( not newPet.isPad and newPet.currentHealth > 0 and newPet.moveSpeed > 0.01 ) then 
		newPet.actor:ClearFacing();
		newPet.actor:MoveToAbs(currentPetLoc, distance/newPet.moveSpeed)
		newPetMoved = true;
	end

	-- If dead, fade corpse in
	if ( pet.currentHealth <= 0 or pet.moveSpeed < 0.01 ) then 
warning(""Swap - RealActor Fade Backling,0"");
		pet.actor:MoveToAbs(currentBacklineLoc, 0)
		pet.actor:Fade(1.0, 1)

		if ( pet.trap ) then 
			pet.trap:MoveToAbs(currentBacklineLoc, 0)
			pet.trap:Fade(1.0, 1)
		end

	-- If alive wait for it to move to the end
	else
		pet.actor:WaitMovementComplete()
	end
	
	--pgm added this so that new pet doesn't move sideways when entering playfield
	if(newPetMoved) then
		newPet.actor:WaitMovementComplete();
	end
	newPet.actor:SetFacingToAbs( opponent.actor:GetPosition() )

	--ReturnOrResetCheck( newPet, opponent );


	-- Make all of your back-line pets look at the front pet
	for k,v in pairs( allPlayers[pet.playerID].pets ) do 
		if ( k ~= allPlayers[pet.playerID].activePet and (not v.currentHealth or v.currentHealth > 0 ) ) then 
			v.actor:SetFacingToTarget(newPet.actor, Vector:New());
		end
	end
end "
9985,Brazie's PetBattle - Turn - Obtain Attack Point,"--
--	Gets the locations which specifies where the attack should start
--
--		Returns: Vector
--
function ObtainAttackPoint(attackerROID, victimROID, range, miss)
	local attacker = ROIDTOUNIT( attackerROID );
	local victim = ROIDTOUNIT( victimROID );

	-- Confirm the victim exists
	if ( not victim or attackerROID == victimROID ) then
		return Vector:New(0,0,0);
	end

	local sourcePosition, targetPosition = victim.actor:GetPosition(), attacker.actor:GetPosition();
	local distance = sourcePosition:Dist( targetPosition );

	-- Handle the flying case
	if ( victim and victim.states )  and 
		( victim.states[STATE_FLYING] and victim.states[STATE_FLYING] > 0 ) then
		local victimPlayer = ROIDTOPLAYER( victimROID );

		sourcePosition = victimPlayer.home;
	end

	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local finalDestination = nil;

	-- Melee
	if ( range == PetBattleRange.Melee ) then 
		if ( miss ) then 
			if ( math.random(1,2) == 1 ) then 
				finalDestination = LocalToWorldCoords( Vector:New(1,1,0) );
			else
				finalDestination = LocalToWorldCoords( Vector:New(1,-1,0) );
			end
		else
			finalDestination = LocalToWorldCoords( Vector:New(1,0,0) );
		end

	-- Behind Melee
	elseif ( range == PetBattleRange.BehindMelee ) then 
		if ( miss ) then 
			if ( math.random(1,2) == 1 ) then 
				finalDestination = LocalToWorldCoords( Vector:New(-1,1,0) );
			else
				finalDestination = LocalToWorldCoords( Vector:New(-1,-1,0) );
			end
		else
			finalDestination = LocalToWorldCoords( Vector:New(-1,0,0) );
		end

	-- Ranged
	elseif ( range == PetBattleRange.Ranged ) then
		-- Max Range
		if ( distance > 4 ) then 
			finalDestination = LocalToWorldCoords( Vector:New(4,0,0) );
		-- Min Range
		elseif ( distance < 2 ) then 
			finalDestination = LocalToWorldCoords( Vector:New(2,0,0) );
		-- Don't Move
		else
			finalDestination = targetPosition;
		end
	-- Behind Ranged
	elseif ( range == PetBattleRange.BehindRanged ) then 
		finalDestination = LocalToWorldCoords( Vector:New(-3,0,0) );

	-- Stationary
	elseif (range == PetBattleRange.InPlace ) then 
		finalDestination = targetPosition;

	-- Stationary
	elseif (range == PetBattleRange.PointBlank ) then 
		finalDestination = sourcePosition;

	-- Do nothing
	else
		Print(""ERROR: ObtainAttackPoint - No movement range specified!"");
		finalDestination = Vector:New(0,0,0);
	end

	return finalDestination;
end"
9986,Brazie's PetBattle - Turn - Perform Move,"
-- Moves the unit to the correct location based on the ability
function PerformMove(attackerROID, victimROID, range, miss)
	
	local player = ROIDTOPLAYER(attackerROID);
	local pet = ROIDTOUNIT(attackerROID);

	if ( not pet or (pet and pet.isPad) or (pet and pet.slot ~= player.activePet ) ) then
		return;
	end

	if ( victimROID == 0 ) then
		return;
	end

	local opponent = ROIDTOUNIT( victimROID )
	if ( not opponent or victimROID == attackerROID ) then 
		pet.actor:SetFacingToAbs( Vector:New() )
		return;
	end

	local finalDestination = ObtainAttackPoint(attackerROID, victimROID, range, miss)

	if ( finalDestination and pet.moveSpeed > 0 ) then 
		local distance = finalDestination:Dist( pet.actor:GetPosition() );

		if ( distance > 0.02 ) then 
			local moveTime = distance/battleScale/(pet.moveSpeed);
			if(range == 0 and miss) then
				pet.actor:ClearFacing();
				crashNextFacing = true;
			end
			pet.actor:WaitMoveToAbs(finalDestination, moveTime)
		end
	else
		-- ""You didnt need to go anywhere 
	end
end

"
9987,Brazie's PetBattle - Turn - Perform Leap,"
-- Moves the unit to the correct location based on the ability
function PerformLeap(attackerROID, victimROID, range, miss, animation)
	local player = ROIDTOPLAYER( attackerROID );
	local pet = ROIDTOUNIT( attackerROID );
	if ( not pet or (pet and pet.isPad) or (pet and pet.slot ~= player.activePet ) ) then
		return;
	end
	local opponent =  ROIDTOUNIT( victimROID );
	if ( not opponent or victimROID == attackerROID ) then 
		pet.actor:SetFacingToAbs( Vector:New() )
		return;
	end

	local finalDestination = ObtainAttackPoint( attackerROID, victimROID, range, miss )

	if ( finalDestination and pet.moveSpeed > 0 ) then 
		local distance = finalDestination:Dist( pet.actor:GetPosition() );

		if ( distance > 0.02 ) then 
			PerformJump( pet, finalDestination, 0.5, animation )

		end
	else
		-- ""You didnt need to go anywhere
	end
end


function PerformJump( pet, dest, duration, animation )
	if ( not pet.moveSpeed or pet.moveSpeed <= 0 ) then
		return;
	end

	local moveTime = duration or 0.5
	local anim = animation or Animations.JumpLoop

	local kit;
	if ( anim ) then 
		-- This causes an animation to replace normal movement anims
		kit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, anim );
	end

	pet.actor:SetSnapToGround(false)
	pet.actor:MoveSplineAbs( 
			BuildKnockbackSpline(pet.actor:GetPosition(), dest, moveTime), moveTime )
	pet.actor:WaitMovementComplete()
	pet.actor:SetSnapToGround(true)

	if ( kit ) then 
		kit:Stop();
	end

end

"
9988,Brazie's PetBattle - Turn - Trap Target,"function Trap_Target(ROID, isTurn, turn)
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Trap_Target"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local turnVisualPlayed = false;

	local turnVisualID = turn.turnVisualID ;
	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 
		
		-- Perform the Turn Visual
		local masterTargets = {}

		for index=1,#turn.effects do 
			local effect = turn.effects[index];
			local targets = EffectToROIDs ( effect );

			for k,v in pairs(targets) do 
				table.insert(masterTargets, v);
			end
		end

		--Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )
		local success = turn.effects[1].results[1].isTrapped;
--print(""Trap success:  ""..tostring(success),ROID);
		OwnerTrap( ROID, masterTargets[1], success, turn )

		return true;
	end
end"
9989,Brazie's PetBattle - Turn - Trap Target - Throw Trap,"function OwnerTrap( ROID, targetROID, success, turn )
	local player = ROIDTOPLAYER( ROID )
	local targetPet = ROIDTOPET( targetROID );

	if (player and player.playerDisplay) then
		

		local trapVisual = petAbilityVisuals[turn.turnVisualID]  --GetAuraAbilityVisual(player.trapAbilityID)
		local trapSpellVisualID = nil
		if (trapVisual) then
			trapSpellVisualID = trapVisual.spellVisualID
		end		

		if (not trapSpellVisualID) or (trapSpellVisualID == 0) then
			print(""ERROR: No trap turn visual! Ability ID: "",turn.turnAbilityID);
			return
		end

		local petTrapModel = ""WORLD\\GOOBER\\G_PetTrap_01.m2"";
		if ( player.trapAbilityID == PET_TRAP_LEVEL_1 ) then
			petTrapModel = ""WORLD\\GOOBER\\G_PetTrap_01.m2"";
		elseif ( player.trapAbilityID == PET_TRAP_LEVEL_2 ) then
			petTrapModel = ""WORLD\\GOOBER\\G_PetTrap_02.m2"";
		elseif ( player.trapAbilityID == PET_TRAP_LEVEL_3 ) then
			petTrapModel = ""WORLD\\GOOBER\\G_PetTrap_03.m2"";
		end

		--player.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, emote)
		
		-- Play a trap visual
		player.trapPrecastID = player.playerDisplay:PlaySpellPreCastVisual(trapSpellVisualID)

		scene:WaitTimer(trapVisual.castTime)

		player.playerDisplay:ClearSpellPreCastVisual(trapSpellVisualID, player.trapPrecastID)

		-- 
		if (targetPet) then
			castInstanceID = player.playerDisplay:PlaySpellCastVisualAtPoints(trapSpellVisualID, trapVisual.impactTime, true, { targetPet.actor:GetPosition() } )

			scene:WaitTimer(trapVisual.impactTime-.75)
			local missed = false;

			local waitCondition = function()
				return not player.playerDisplay:HasPendingOrInFlightMissiles(castInstanceID)
			end
			scene:WaitCondition(waitCondition)

			local t = targetPet.actor:GetTransform();
			local trapCreateData = ActorCreateData:NewModel(
				""Trap"",
				petTrapModel,
				t,
				1); -- scale
			trapCreateData.groundSnap = true;
			trapCreateData.interactible = false;

			local trapActor = scene:SpawnActor(trapCreateData);

			targetPet.trap = trapActor;

			if (success) then
				--print(""Succesful Trap"")
				--targetPet.trappedVisualInstance = targetPet.actor:PlaySpellStateVisual(trapSpellVisualID) 
	
				-- Don't move again.
				targetPet.moveSpeed = 0;
				targetPet.isTrapped = true;

				local kit = trapActor:PlayLoopingAnimKit(petBattleAnimKits.CloseClosed);

				scene:WaitTimer(1);
				targetPet.actor:SetScale(0.25);

				trapActor:PlaySpellImpactVisual( 26965 ) 

				targetPet.actor:Fade(0,2);
				scene:WaitTimer(2);

				Dispatcher_OwnerEmote( ROID, Animations.EmoteCheer )

				--trapActor:Despawn();
			else
				local kit = trapActor:PlayLoopingAnimKit(petBattleAnimKits.Custom0Custom1);

				scene:WaitTimer(1);

				local trapMissed = GetGlobalString(""BATTLE_PET_MESSAGE_TRAP_MISSED"")
				targetPet.actor:AddCustomWorldText(WorldText.Damage, true, Color:New(255, 255, 0), trapMissed)
	
				scene:WaitTimer(2);
				trapActor:Despawn();
			end

			-- The pet either dodges or gets hit
			for index=1,#turn.effects do 
				local effect = turn.effects[index];

				DefaultDoEffectProcessing( nil, ""effect"", effect ); 
			end
		end
	end
end"
9990,Brazie's PetBattle - Post Turn,"function PostRoundCleanUp( event )

	-- [ABrazie]: Gutted on 7/3/2012 to replace with new, unified system
	--[[
	local pet = GetActivePetByIndex(1)
	local opponent = GetActivePetByIndex(2)
		
	ReturnOrResetCheck( pet, opponent );
	ReturnOrResetCheck( opponent, pet );
	--]]


	SendEverybodyHome()
end"
9991,Brazie's PetBattle - Post Turn - Reset,"backwardSpeedMulti = 0.7;

-- Reset after an attack if needed
function Dispatcher_PerformPostAttackCleanup( ROID )
	local pet = ROIDTOUNIT(ROID);
	if ( not pet ) then 
		print (""ERROR: Post-Attack Clean-up - Invalid ROID: ""..ROIDTOSTRING(ROID).."" || ""..ROID);
		return;
	end

	local opponent = GetActivePetByIndex(3 - pet.playerID)
		
	ReturnOrResetCheck( pet, opponent );
end

function ReturnOrResetCheck (pet, opponent)

	if ( not pet or not pet.playerID  ) then
		print(""ERROR: ReturnOrResetCheck - Pet has no player ID"");
		return;
	end

	if ( pet.isPad ) then 
		return;
	end
	local STATE_FLYING = 33;

	if ( pet.states and pet.states[STATE_FLYING] and pet.states[STATE_FLYING] > 0 ) then
		return;
	end

	if ( not opponent ) then 
		print(""ERROR: ReturnOrResetCheck - Opponent was not provided!"");
		return;
	end

	local newFrontVector = UnitVectorFromAtoB(opponent.actor:GetPosition(), pet.actor:GetPosition()  );
	local returnPoint = newFrontVector * 1.75*battleScale;


	local petLoc = returnPoint;
	local petHome = HOME_LIST[pet.playerID].position;
	local newDist = petLoc:Dist ( petHome );

	local returnDistance = pet.actor:GetPosition():Dist(petLoc)

	if ( newDist > 1.75 * battleScale ) then 
		petLoc = HOME_LIST[pet.playerID].position;
		returnDistance = petHome:Dist(pet.actor:GetPosition());
	end
--[[
	if ( not opponent.dead and not opponent.isPad ) then
		local opponentHome = HOME_LIST[opponent.playerID].position;

		local opponentReturnDistance = opponent.actor:GetPosition():Dist(opponentHome)

		if ( opponentReturnDistance > 1.75 * battleScale ) then 		

print (""enemy go home"");
			local distance = opponentHome:Dist(opponent.actor:GetPosition());

			--opponent.actor:MoveToAbs( opponentHome, distance/ ( opponent.moveSpeed*backwardSpeedMulti) );

		end
	end
]]--
	if ( not pet.dead and not pet.isPad and pet.moveSpeed > 0 ) then 
		--pet.actor:WaitMoveToAbs( pet.home, returnDistance/ ( pet.speed*backwardSpeedMulti) );

		-- LAST MINUTE HACK: DWilliams. MoveToAbs is not rejecting distance if already at the home
		-- loc due to a zOffset when on slopes
		local currentLoc = pet.actor:GetPosition()
		local flatPetLoc = Vector:New(petLoc.x, petLoc.y, currentLoc.z)

		pet.actor:MoveToAbs( flatPetLoc, returnDistance/ ( pet.moveSpeed*backwardSpeedMulti) );
		pet.actor:WaitMovementComplete()
		--opponent.actor:WaitMovementComplete()
		pet.actor:SetFacingToAbs(opponent.actor:GetPosition())
		opponent.actor:SetFacingToAbs(pet.actor:GetPosition())
	end


end

"
9992,Brazie's PetBattle - Post Turn - Clean Up 2.0,"function GetROIDHome( roid ) 
	local player1 = GetTeamByIndex(1);
	local player2 = GetTeamByIndex(2);

	local unit = ROIDTOUNIT( roid )

	if ( ROIDISAOBJECT ( roid ) ) then
		return OBJECT_LOCATIONS[unit.playerID][unit.slot]
	elseif ( unit.playerID == player1.playerID and unit.slot == player1.activePet ) then
		return HOME_LIST[1];
	elseif ( unit.playerID == player2.playerID and unit.slot == player2.activePet ) then
		return HOME_LIST[2];
	elseif ( ROIDISAPET ( roid ) ) then
		return BACKROW_PET_OFFSETS[unit.playerID][unit.backlineIndex];
	end
end 

function SendEverybodyHome()
	
	local roidList = {};
	local homeList = {};

	local player1 = GetTeamByIndex(1);
	local player2 = GetTeamByIndex(2);

	-- Always insert the current front pets
	table.insert( roidList, PETTOROID(GetActivePetByIndex(1)) );
	table.insert( homeList, GetROIDHome( PETTOROID(GetActivePetByIndex(1)) ) );

	table.insert( roidList, PETTOROID(GetActivePetByIndex(2)) );
	table.insert( homeList, GetROIDHome( PETTOROID(GetActivePetByIndex(2)) ) );

	-- Always insert the backline pets
	for playerId = 1,2 do 
		for i=1,2 do
			local player = GetTeamByIndex(playerId);
			local nextSlot = math.fmod(player.activePet+i-1,3)+1;
			local roid = GETROIDFROMPLAYERIDANDSLOT( playerId, nextSlot );
			local unit = ROIDTOUNIT( roid );
			
			if ( unit ) then 
				local homeSpot = GetROIDHome( roid ) 

				if ( homeSpot ) then 
					table.insert( roidList, roid );
					table.insert( homeList, homeSpot );
				end
			end
		end
	end

	-- Cycle through all of the objects too
	local objList = GetAllObjects()

	for team, teamObjects in pairs ( objList ) do
		for slot, objData in pairs ( teamObjects ) do
			-- Only move non-stationary objects
			if ( objData.moveSpeed and objData.moveSpeed > 0 ) then 
				local objRoid = GETOBJECTROIDFROMPLAYERIDANDSLOT( team, slot );
				table.insert( roidList, objRoid );
				table.insert( homeList, GetROIDHome( objRoid )  );
			end
		end
	end

	for i=1, #roidList do 
		local roid = roidList[i];
		local homeTransform = homeList[i];
			
		DoHomeLeash( roid, homeTransform );
	end

	for i=1, #roidList do 
		local roid = roidList[i];

		DoHomeWait( roid );
	end

	for i=1, #roidList do 
		local roid = roidList[i];

		DoFacingCleanUp( roid );
	end

end

function DoHomeLeash( roid, homeTransform )
	local unit = ROIDTOUNIT( roid );

	if ( not unit ) then 
		return;
	end

	if ( unit.states and unit.states[STATE_FLYING] and unit.states[STATE_FLYING] > 0 ) then
		return;
	end

	if ( unit.isPad or unit.dead or unit.moveSpeed <= 0 or unit.deathAnimKit ) then
		return;
	end

	local actor = unit.actor;
	actor:ClearFacing();

	local homeLoc = homeTransform.position;
	local dist = homeLoc:Dist( actor:GetPosition() );

	if ( dist > 1.75 ) then 

		local travelTime = dist / ( unit.moveSpeed*backwardSpeedMulti);

		if ( travelTime > 2 ) then
			travelTime = 2;
		end

		-- LAST MINUTE HACK: DWilliams. MoveToAbs is not rejecting distance if already at the home
		-- loc due to a zOffset when on slopes
		local actorPos = actor:GetPosition()
		local flatHomeLoc = Vector:New(homeLoc.x, homeLoc.y, actorPos.z)

		actor:MoveToAbs ( flatHomeLoc, travelTime );
	end
end

function DoHomeWait( roid )
	local unit = ROIDTOUNIT ( roid )

	if ( not unit ) then
		warning(""Invalid ROID provided to DoHomeWait: ""..roid.."" (probably a missing object)"" );
		return;
	end

	unit.actor:WaitMovementComplete()
end

function DoFacingCleanUp( roid )
	local team = ROIDTOPLAYER ( roid )
	local unit = ROIDTOUNIT ( roid )

	if ( not unit ) then
		warning(""Invalid ROID provided to DoFacingCleanUp: ""..roid.."" (probably a missing object)"" );
		return;
	end

	if ( team.activePet == unit.slot or unit.clone ) then 
		local opponent = GetActivePetByIndex( EnemyOf( "
9993,[1] Brazie's PetBattle - Post Turn - Clean Up 2.0,"unit.playerID ) ) 

		DefaultFacing( roid, PETTOROID(opponent) );

	elseif ( unit.isPet ) then
		local ally = GetActivePetByIndex( unit.playerID );

		DefaultFacing( roid, PETTOROID(ally) );
	end
end"
9994,Brazie's PetBattle - End Game - Flee,"function FleeCeremony ( winnerID )

	local playerID = (3-winnerID)

	Dispatcher_OwnerEmote( GETROIDFROMPLAYERID( playerID ), Animations.Cower )
	local player = GetTeamByIndex(playerID)

	if ( not player ) then 
		print(""Missing player!"");
		return 
	end
 
	for i=1,3 do 
		if ( player.pets[i] ) then 
			local playerPet = player.pets[i] 

			if ( playerPet.currentHealth > 0 ) then 
				playerPet.actor:Fade(1.0, 0.5)
				MoveToFleeLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local waitCondition = function()
		-- all actors must be renderable
		for i=1,3 do
			local pet = player.pets[i] 
			if pet and pet.actor:IsMoving() then
				return false
			end
		end
		return true
	end

	scene:WaitCondition(waitCondition)
end


function MoveToFleeLocation(pet)
	
	local team = GetTeamByIndex(pet.playerID)
	local spot = FLEE_PET_OFFSETS[pet.playerID][pet.slot].position;
	local distance = pet.actor:GetPosition():Dist(spot);

	if ( pet.moveSpeed > 0 ) then
		pet.actor:SetFacingToAbs(spot);
		pet.actor:MoveToAbs(spot, distance/pet.moveSpeed/2)
	end
end
"
9995,Brazie's PetBattle - End Game - Victory,"function VictoryCeremony(winnerID)
	local player = GetTeamByIndex(winnerID)

	if ( not player ) then 
		return
	end

	-- Only dance in PvP games
	if (  ROIDTOPLAYER( GETROIDFROMPLAYERID( 3-winnerID ) ).playerDisplay ) then  
		Dispatcher_OwnerEmote( GETROIDFROMPLAYERID( winnerID ), Animations.EmoteDance )
	end

	for i=1,3 do 
		if ( player.pets[i] ) then 
			local playerPet = player.pets[i] 

			if ( playerPet.currentHealth > 0 ) then 
				playerPet.actor:Fade(1.0, 0.5)
				playerPet.actor:ClearFacing();
				MoveToVictoryLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local facingSet = { }
	local waitCondition = function()
		-- all actors must be renderable
		for i=1,3 do
			local pet = player.pets[i] 
			if pet and pet.actor:IsMoving() then
				return false
			elseif pet and not facingSet[i] then
				local team = GetTeamByIndex(pet.playerID)
				pet.actor:ClearFacing();
				pet.actor:SetFacing(team.teamFacing);
				facingSet[i] = true
			end
		end
		return true
	end

	scene:WaitCondition(waitCondition)
	if ( player.playerDisplay ) then 
		for i=1,3 do
			local pet = player.pets[i] 
			if ( pet ) then
				local team = GetTeamByIndex(pet.playerID)

				pet.actor:ClearFacing();
				pet.actor:SetFacing(team.teamFacing);
				--pet.actor:SetFacingToTarget(player.pets[0].actor, Vector:New());
			end
		end
	end
end

function MoveToVictoryLocation(pet)
	
	local team = GetTeamByIndex(pet.playerID)
	local spot = team.home + VICTORY_PET_OFFSETS[pet.backlineIndex] + Vector:New(1,0,0);
	local distance = pet.actor:GetPosition():Dist(spot);

	if ( pet.moveSpeed > 0 ) then
		pet.actor:MoveToAbs(spot, distance/pet.moveSpeed)
	end
end


function VictoryCeremonyCleanUp(winnerID)
	SignalEffectProcessed()
end"
9996,Brazie's PetBattle - End Game - Victory - Kirby Dance,"function VictoryCeremony_PerformDance(player)
	local loc1 = player.home + BACKROW_PET_OFFSETS[1] + Vector:New(1,0,0)
	local loc2 = player.home + BACKROW_PET_OFFSETS[2] + Vector:New(1,0,0)
	local loc3 = player.home + BACKROW_PET_OFFSETS[3] + Vector:New(1,0,0)

	local actor1
	local actor2
	local actor3

	if ( player.pets[1] ) then 
		actor1 = player.pets[1].actor;
	end
	if ( player.pets[2] ) then 
		actor2 = player.pets[2].actor;
	end
	if ( player.pets[3] ) then 
		actor3 = player.pets[3].actor;
	end

	
	Dance_HopLeft(actor1, loc1);
	Dance_HopLeft(actor2, loc2);
	Dance_HopLeft(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);

	Dance_StepRight(actor1, loc1);
	Dance_StepRight(actor2, loc2);
	Dance_StepRight(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);

	Dance_HopRight(actor1, loc1);
	Dance_HopRight(actor2, loc2);
	Dance_HopRight(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);

	Dance_StepLeft(actor1, loc1);
	Dance_StepLeft(actor2, loc2);
	Dance_StepLeft(actor3, loc3);

	Dance_Recover(actor1, loc1);
	Dance_Recover(actor2, loc2);
	Dance_Recover(actor3, loc3);
--[[
	local t = 0;
	local step = 0.01;

	actor1:ClearFacing();
	actor2:ClearFacing();
	actor3:ClearFacing();

	while ( t < 1 ) do
		t = t + step;
		local rate = 360*10

		Dance_Spin(actor1, rate, step);
		Dance_Spin(actor2, rate, step);
		Dance_Spin(actor3, rate, step);

		scene:WaitTimer(step);
	end
]]
end


function Dance_StepLeft(actor, loc)
	local time = 0.5;
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveToAbs( actor:GetPosition()+Vector:New(0,2,0) , time )
end

function Dance_StepRight(actor, loc)
	local time = 0.5;
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveToAbs( actor:GetPosition()+Vector:New(0,-2,0) , time )
end

function Dance_HopLeft(actor, loc)
	local time = 0.5;
	local spline = BuildKnockbackSpline(actor:GetPosition(), actor:GetPosition()+Vector:New(0,2,0) , time)

	actor:SetSnapToGround(false)
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveSplineAbs( spline , time )
end

function Dance_HopRight(actor, loc)
	local time = 0.5;
	local spline = BuildKnockbackSpline(actor:GetPosition(), actor:GetPosition()+Vector:New(0,-2,0) , time)

	actor:SetSnapToGround(false)
	actor:SetFacingToAbs( loc + Vector:New (100,0,0) );
	actor:MoveSplineAbs( spline , time )
end

function Dance_Recover(actor, loc)
	actor:WaitMovementComplete()
	actor:SetSnapToGround(false)
end

function Dance_Spin(actor, rate, deltaT)
	local transform = actor:GetTransform();
	local yaw = transform.yaw + rate * deltaT;

	local x,y,z = math.cos(yaw/180*math.pi), math.sin(yaw/180*math.pi), 0 
print(yaw);
	actor:SetTransform(transform);
	actor:SetFacingToAbs(actor:GetPosition() + Vector:New(x,y,z) );
end"
9997,Brazie's PetBattle - End Game - Victory - Rewards,"function EventReward(rewards)

	if ( #rewards < 1 ) then
		return;
	end 

	local pet = ROIDTOPET( GETROIDFROMPLAYERIDANDSLOT( rewards[1].playerID, rewards[1].petSlot )  );

	if ( rewards[1].awardedXP == 0 and pet.currentHealth == rewards[1].newHealth ) then
		return;
	end

	--VictoryCeremony_PerformDance(player)

	-- apply the rewards
	local reward = rewards[1];

	if not (reward.wasCaptured) then
		local rewardedPet =
		{
			pet = ROIDTOPET( GETROIDFROMPLAYERIDANDSLOT( reward.playerID, reward.petSlot )  );
			awardedXP = reward.awardedXP;
			newXP = reward.newXP;
			newLevel = reward.newLevel;
			newHealth = reward.newHealth;
		}

		if ( rewardedPet.newLevel > rewardedPet.pet.level ) then  
			SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
			scene:WaitTimer(0.5);
			rewardedPet.pet.actor:PlaySpellCastVisual(26429);

			if ( rewardedPet.newHealth and rewardedPet.newHealth ~= rewardedPet.pet.currentHealth ) then 
				rewardedPet.pet.actor:PlaySpellImpactVisual(26605);
				SetHealth(rewardedPet.pet,  rewardedPet.newHealth, false, {} )
				scene:WaitTimer(1.0);
			end
		elseif ( rewardedPet.awardedXP ) then 
			if ( rewardedPet.newHealth and rewardedPet.newHealth ~= rewardedPet.pet.currentHealth ) then 
				rewardedPet.pet.actor:PlaySpellImpactVisual(26605);
				SetHealth(rewardedPet.pet,  rewardedPet.newHealth, false, {} )
				scene:WaitTimer(1.0);
			end



			SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
			scene:WaitTimer(1.0);
		end


	end

	SignalEffectProcessed();

end"
9998,----- Object Manager -----,
9999,Brazie's PetBattle - Object Manager,"local OBJECTS = {};

-- Create object managers
OBJECTS[PetBattlePlayerID.Weather] = {}
OBJECTS[PetBattlePlayerID.Player1] = {}
OBJECTS[PetBattlePlayerID.Player2] = {}

-- Standard Object Structure
-- {
--	playerID		= 1 | 2;
--	moveSpeed		= 0 | > 0;
--	auraID 			= 1234;
--	auraInstance 	= 3;
--	actor			= < Actor >;
--  actors			= { < Actor > }; -- Additional actors
--	location		= 1 to 3;
-- }


-- 
-- Register
-- 
--	Returns: object, playerID, slot, transform
-- 
function RegisterObject(playerID, auraID, auraInstanceID )
	local obj = {
		auraID = auraID;
		auraInstanceID = auraInstanceID;
		playerID = playerID;
	};

	local slot,location = FindNextObjectSlot( playerID );


	-- If there was no slot found
	if ( slot == 0 ) then 
		warning(""WARNING: Ran out of object slots in the PetBattle object manager. Add new locations."");
		return obj, playerID, nil;
	else
		obj.slot = slot;
		OBJECTS[playerID][slot] = obj;

		return obj, playerID, slot, location;
	end

end

--
-- Find the next empty slot
--
function FindNextObjectSlot( playerID ) 

	if ( not playerID ) then 
		warning(""ERROR: Invalid playerID: "",playerID,"" passed to RegisterObject."");
	else

		for slot=1,MAX_FIELD_OBJECTS do 
			if ( OBJECTS[playerID] ) then 
				if ( not OBJECTS[playerID][slot] ) then 
					return slot, OBJECT_LOCATIONS[playerID][slot]
				end
			else
				warning(""ERROR: Invalid playerID: "",playerID,"" passed to RegisterObject."");
			end
		end
	end

	return 0;
end

--  
--  Retrieve
-- 
--	Returns: object, playerID, slot, transform
--  
function GetObject(playerID, slot)
	return OBJECTS[playerID][slot], playerID, slot, OBJECT_LOCATIONS[playerID][slot];
end

--  
--  Find
-- 
--	Returns: object, playerID, slot, transform
--  
function FindObject( auraInstanceID )
	for playerID, playerObjects in pairs( OBJECTS ) do 
		for slot, obj in pairs( playerObjects ) do
			if ( obj.auraInstanceID == auraInstanceID ) then 
				return obj, playerID, slot, OBJECT_LOCATIONS[playerID][slot];
			end
		end
	end

	print(""WARNING: Invalid auraInstanceID passed to FindObject: "",auraInstanceID);
end




--  
--  Find
-- 
--	Returns: object, playerID, slot, transform
--  
function FindObjectByAbilityID(playerID, auraID )

--print(""Looking for: "",playerID, "","", auraID);
	if ( OBJECTS[playerID] ) then 
--print( #OBJECTS[playerID] );
		for slot, obj in pairs( OBJECTS[playerID] ) do
--print(""Slot: "",slot,"" Aura: "",obj.auraID);
			if ( obj.auraID == auraID ) then 
--print(""Found: "",playerID, "", "", slot);
				return obj, playerID, slot, OBJECT_LOCATIONS[playerID][slot];
			end
		end
	else
		print(""WARNING: Invalid player ID passed to FindObjectByAbilityID: "",playerID);
	end
end



--
-- Unregister
--
function UnregisterObject(playerID, slot)
	OBJECTS[playerID][slot] = nil;
end

--
-- Get All Objects
-- 
function GetAllObjects()
	return OBJECTS;
end"
10000,----- Parallel Dispatcher -----,
10001,Brazie's PetBattle - Dispatcher,"-- Responsible Object ID Tracking and Management
--
--ROID = 0xFFFF;

UNIT_ACTION_QUEUE = {
	--[ROID] = { 
	--  ROID = ROID;
	--  isProcessing = bool;
	--	commands = {
	--		{ func=function()end; args = {}; };
	--	};
	-- }
}

-- A global kill switch if I need it ??
BOT_KILL_SWITCH = false;

-- Parallel Mode Switch
PARALLEL_MODE = true;

function Dispatcher_AddCommandToQueue( responsibleObjectID, func, ...)

	if ( PARALLEL_MODE ) then
		if ( not UNIT_ACTION_QUEUE [responsibleObjectID] ) then
			UNIT_ACTION_QUEUE [responsibleObjectID] = {
				ROID = responsibleObjectID;
				isProcessing = false;
				commands = {};
			};
		end
		table.insert( UNIT_ACTION_QUEUE [responsibleObjectID].commands, 
			{
				func = func;
				args = {...};
			});

	else
		func(responsibleObjectID, ...);
	end

	--[[
	local status, result = pcall(func, responsibleObjectID, ...)
	if (status == true) then
		-- Research what this command does
		--setfenv(result, getfenv())

		print(""Result from pcall was: "",type(result));

		return result
	else
		print(""ERROR: Function Dispatched to "" .. responsibleObjectID.. "" failed."")
		print(""ERROR: "" .. result)
	end
	]]
end"
10002,Brazie's PetBattle - Dispatcher - Visuals - Success / Fail,"--
-- This block of code is a list of the parallel process hand-offs which are used
-- primarily for results
--


function Dispatcher_DefaultSuccessVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	local victim = ROIDTOUNIT(victimROID)
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	if ( victim and not victim.isPad  ) then
		local distance = 3;
		
		if ( flags.strong ) then 
			distance = 4;
		elseif ( flags.weak ) then
			distance = 1;
		end

		Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactBump, attackerROID, distance ); 	 
	end

end


function Dispatcher_NoKnockbackSuccessVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 

end

function Dispatcher_DefaultFailureVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	local victim = ROIDTOUNIT( victimROID );

	if ( victim and not victim.isPad ) then 
		if ( flags.blocked ) then 
			Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformBlock, attackerROID );
		elseif ( flags.miss ) then
			Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformMiss,  attackerROID );
		elseif ( flags.dodge ) then
			Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformDodge, attackerROID );
		end
	end

end

"
10003,Brazie's PetBattle - Dispatcher - Visuals - Cast / Impact,"--
-- Performs the effect visual for each target
--
function Dispatcher_PerformMultiTargetVisual( userROID, targetROIDs,  visualID )
	local user = ROIDTOUNIT( userROID );

	local targets = {};

--print(""CastVisual: "", ROIDTOSTRING(userROID),"" ? "",visualID );
	for i=1,#targetROIDs do 
		local targetROID = targetROIDs[i];
		local targetPet = ROIDTOUNIT( targetROID );
--print(""CastVisual@: "", ROIDTOSTRING(targetROID) );

		if ( targetPet and targetROID ~= userROID ) then 
			table.insert( targets, targetPet );
		elseif ( targetROID == userROID ) then 
			warning (""WARNING: MultiTargetVisual - Target is the caster and is being skipped. This is probably not a bug, but confirm."");
		else
			warning (""ERROR: MultiTargetVisual - Invalid target pet: "",ROIDTOSTRING(targetROID) );
		end 
	end

	if ( not user ) then 
		warning (""ERROR: MultiTargetVisual - Invalid pet. "",ROIDTOSTRING(userROID) );
		return;
	end

	PerformSpellVisualManyTargets( user, visualID, targets )
end 

-- Performs an impact visual whenever
--

function Dispatcher_PerformResultImpactVisual( victimROID, attackerROID, abilityVisualID )

	if ( not abilityVisualID ) then 
		warning( ""ERROR: No Spell Visual ID provided to Dispatcher_PerformResultImpactVisual"" );
		return;
	end
--print( ""ImpactVisual: "",ROIDTOSTRING(targetROID),"" "",abilityVisualID ); 


	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return
	end
	local spellVisualID = abilityVisual.spellVisualID
--print( ""ImpactVisual: "",ROIDTOSTRING(victimROID),"" Spell Vis ID: "",spellVisualID );

	local targetPet = ROIDTOPET(victimROID);
	if ( targetPet ) then 
		if ( victimROID == attackerROID ) then 
			targetPet.actor:PlaySpellImpactVisual(spellVisualID)
		else
			targetPet.actor:PlaySpellTargetImpactVisual(spellVisualID)
		end
	end
end
"
10004,Brazie's PetBattle - Dispatcher - Visuals - Knockbacks,"
-- Performs a bump when requested
--
function Dispatcher_PerformImpactBump( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		PerformBump( victim, attacker, distance, time ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactVerticalKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end
 
	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		--PerformKnockback( victim, attacker, d, t ) 
	
		PerformVerticalKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactHugeKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactHomeKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not "
10005,[1] Brazie's PetBattle - Dispatcher - Visuals - Knockbacks,"attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformHomeKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactSlide( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then  
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformSlide( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end

---

function PerformBump( victim, attacker, distance, time ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	local power = (distance or 3) * 10;

	local front = -math.random(power,power)*.025;
	local left = math.random(-power,power)*.025;
	local up = 0;

	DebugPrint(""slide"")		
	
	victim.actor:PlayOneShotSplitBodyAnim(Animations.CombatWound)

	PerformRelativeSlide( victim, attacker, front, left, up, time );

	victim.actor:WaitMovementComplete()
end


function PerformKnockback( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end
	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	--scene:WaitTimer(0.3)

	DebugPrint(""knock"")		
	--opponent.actor:AddDamageText(nil, damage, false, false)
	local opponentFinalPoint 	= CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;

	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveSplineAbs( 
			BuildKnockbackSpline( victim.actor:GetPosition(), opponentFinalPoint, time), time )
	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 

-- Performs a knockback from the victim's home point
function PerformHomeKnockback( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end
	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	--scene:WaitTimer(0.3)

--Print(""Home Based Knockback2"")		
	--opponent.actor:AddDamageText(nil, damage, false, false)
	local team = ROIDTOPLAYER(PETTOROID(victim));
	
	local opponentFinalPoint 	= CalculateLocationFacingRelativeOffset(victim, team.home, front, left, up);

--Print(""Home Based Knockback3"")		
	--CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;

--Print(""Home Based Knockback4"")		
--Print(""Por?""..time);
	victim.actor:SetSnapToGround(false)
	local "
10006,[2] Brazie's PetBattle - Dispatcher - Visuals - Knockbacks,"kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	local startPosition = victim.actor:GetPosition();

--Print ( startPosition );
--Print ( opponentFinalPoint );

--Print(""Home Based Knockback5"")		
	victim.actor:MoveSplineAbs( 
			BuildKnockbackSpline( startPosition, opponentFinalPoint, time), time )
	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 


function PerformSlide( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	DebugPrint(""knock"")		
 
	local opponentFinalPoint 	= CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;
 
	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveToAbs(opponentFinalPoint, duration );
	victim.actor:WaitMovementComplete() 
 
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 

function PerformVerticalKnockback( victim, attacker, distance, time ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveSplineAbs( BuildKnockbackSpline( victim.actor:GetPosition(), victim.actor:GetPosition(), time), time)

	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();
end

"
10007,Brazie's PetBattle - Dispatcher - Visuals - Dodge,"
-- Performs a dodge when requested
--
function Dispatcher_PerformDodge( victimROID, attackerROID )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	if ( not victim ) then 
		warning (""ERROR: PerformDodge missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: PerformDodge missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	victim.actor:PlaySoundKit(15927, true);
	PerformDodge( victim, attacker ) 
end


function PerformDodge( victim, attacker, time ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	local coin = math.random(0,1);
	if ( coin == 0 ) then 
		coin = -1;
	end

	local front = 0.01;
	local left = 0.75*coin;
	local up = 0; 

	DebugPrint(""dodge"") 
	victim.actor:SetFacingToTarget( attacker.actor, Vector:New() )
	--attacker.actor:SetFacingToTarget( victim.actor, Vector:New() )

	victim.actor:AddWorldText( victim.actor, MissReasons.Dodged, false, false)

	PerformRelativeSlide( victim, attacker, front, left, up, time );

	victim.actor:WaitMovementComplete()
end
"
10008,Brazie's PetBattle - Dispatcher - Visuals - Block,"
-- Performs a dodge when requested
--
function Dispatcher_PerformBlock( victimROID, attackerROID )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	if ( not victim ) then 
		warning (""ERROR: PerformBlock missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: PerformBlock missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	victim.actor:PlaySoundKit(27044, true);
	PerformBlock( victim, attacker ) 
end


function PerformBlock( victim, attacker ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		--return;
	end

	local coin = math.random(0,1);
	if ( coin == 0 ) then 
		coin = -1;
	end

	local front = 0.01;
	local left = 0.75*coin;
	local up = 0;

	DebugPrint(""block"") 
	if ( not victim.sessile ) then 
		victim.actor:SetFacingToTarget( attacker.actor, Vector:New() )
	end
	--attacker.actor:SetFacingToTarget( victim.actor, Vector:New() )

	victim.actor:AddWorldText( victim.actor, MissReasons.Blocked, false, false)

end
"
10009,Brazie's PetBattle - Dispatcher - Visuals - Miss,"
-- Performs a dodge when requested
--
function Dispatcher_PerformMiss( victimROID, attackerROID )

	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	if ( not victim ) then 
		warning (""ERROR: Dispatcher_PerformMiss missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: Dispatcher_PerformMiss missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	local type = WorldText.Miss;
	local text = GetGlobalString( ""BATTLE_PET_MESSAGE_MISS"" ) or ""Miss""
	local useColor = false;
	local color = Color:New(255, 255, 0)

	attacker.actor:AddCustomWorldText( type, useColor, color, text ) 
	attacker.actor:PlaySoundKit(15928, true);
end"
10010,Brazie's PetBattle - Dispatcher - Pet Owner Emote,"function Dispatcher_OwnerEmote( ROID, emote )
	local player = ROIDTOPLAYER( ROID )

	if (player and player.playerDisplay) then
		player.playerDisplay:PlayAnimKit(AnimKits.OneShotFullBodyLow, true, emote) --OneShotUpperBody
	end
end"
10011,Brazie's PetBattle - Dispatcher - Display Damage,"function Dispatcher_SetHealth(ROID, newHealth, dontDraw, flags)
	local pet = ROIDTOPET( ROID )

	SetHealth(pet, newHealth, dontDraw, flags);
end

function SetHealth(pet, newHealth, dontDraw, flags)
	local oldHealth = pet.currentHealth
	pet.currentHealth = newHealth

	local change = 0;

	if ( oldHealth ) then
		change = newHealth - oldHealth

		if ( not dontDraw ) then
			DisplayHealthChange(pet, change, flags)
		end
	end
 
	--Dispatcher_AddCommandToQueue( PETTOROID(pet), Dispatcher_DeathAndRespawnCheck ); 

	return change, DeathAndRespawnCheck(pet);
end

function DisplayHealthChange(pet, change, flags)

	-- damage numbers feedback for observed battles
	if (isObserved) then
		if (change < 0) and (Actor.AddDamageText) then

-- BATTLE_PET_MESSAGE_CRITICAL
-- BATTLE_PET_MESSAGE_STRONG
-- BATTLE_PET_MESSAGE_TRAP_MISSED
-- BATTLE_PET_MESSAGE_WEAK
-- BATTLE_PET_MESSAGE_TRAP_SPELL_LOCK

			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)

			-- Make it positive
			change = -change;

			local text = tostring(change)

			if ( flags.crit ) then 
				type = WorldText.Critical;
				local color = Color:New(255, 0, 0)
				useColor = true;
				local criticalText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_CRITICAL"" )
				text = string.format( criticalText or ""%1$s"", text );
			end

			if ( flags.strong ) then 
				local strongText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_STRONG"" )
			
				text = string.format( strongText or ""%1$s (Strong)"", text )
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			elseif ( flags.weak ) then 
				local weakText 		= GetGlobalString( ""BATTLE_PET_MESSAGE_WEAK"" )
 
				text = string.format( weakText or ""%1$s (Weak)"", text )
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			else
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			end

		elseif (change > 0)  and (Actor.AddHealingText) then
			local useColor = false;
			local type = WorldText.Healing;

			if ( flags.crit ) then 
				type =  WorldText.HealingCritical;
			end

			local color = Color:New(0, 255, 0)

			pet.actor:AddCustomWorldText( type, useColor, color, tostring(change) ) 
			--pet.actor:AddHealingText(nil, change, false, false)
		end
	end
end

--[[
	""Damage""                
	""Absorb""                
	""Critical""              
	""Miss""                  
	""XPGain""                
	""HonorGain""             
	""Healing""               
	""HealingCritical 
	""BuildingDamage"" 
	""BuildingHeal""  
	""Threat""                
	""WhiteDamage""   
	""None""        

--]]
"
10012,Brazie's PetBattle - Dispatcher - Display XP,"function Dispatcher_SetXP(ROID, ...)
	local pet = ROIDTOPET( ROID )

	return SetXP(pet, ...)
end

function SetXP(pet, xp, newLevel, dontDraw)
	local oldXP = pet.xp
	local oldLevel = pet.level
	pet.xp = xp
	pet.level = newLevel
	if (dontDraw) then
		return
	end
	
	-- Show XP bonus if it was a hard fight
	local enemyTeam = GetTeamByIndex( EnemyOf( pet.playerID ) ) ;
	local difficultFight = false;

	for k,v in pairs ( enemyTeam.pets ) do 
		if ( oldLevel and v.level and v.level > oldLevel ) then 
			difficultFight = true;
		end
	end


	local xpChange = pet.xp - oldXP
	local levelChange = pet.level - oldLevel
	ShowXPGains(pet, xpChange, levelChange, dontDraw, difficultFight )
end

function ShowXPGains(pet, xpChange, levelChange, dontDraw, difficultFight )		
	if (xpChange <= 0) and (levelChange <= 0) then
		return
	end

	if (xpChange > 0) and (pet.playerID == observingPlayerIndex) then
		local type = WorldText.XPGain;
		local useColor = false;
		local color = Color:New(255, 255, 0)
		local text = tostring(xpChange)
		local xpText = GetGlobalString( ""BATTLE_PET_MESSAGE_XP"" ) or ""%1$s XP"";

		if ( difficultFight ) then 
			xpText = GetGlobalString( ""BATTLE_PET_MESSAGE_XP_DIFFICULTY_BONUS"" ) or ""%1$s XP (Difficulty Bonus)"";
		end
		text = string.format( xpText or ""%1$s"", text );
		pet.actor:AddCustomWorldText( type, useColor, color, text ) 		
	end

	if (levelChange > 0) then
		pet.actor:ApplyLevelUpEffect()
	end
end"
10013,Brazie's PetBattle - Dispatcher - Death and Respawn Check,"function Dispatcher_DeathAndRespawnCheck(ROID)
	local pet = ROIDTOPET( ROID )
	if ( not pet ) then 
		warning (""ERROR: Dispatcher_DeathAndRespawnCheck - No pet!"");
		return;
	end
	return DeathAndRespawnCheck(pet);
end


--
-- Returns:
--
--		nil - no change
--		""died"" - pet just perished
--		""dead"" - pet was dead and remained dead
--		""respawn"" - pet was dead and is now alive
function DeathAndRespawnCheck(pet, forced)

	if (pet.currentHealth <= 0) and (not pet.dead or forced ) then
--warning(""Pet Killed"");

		-- HACKfix facing way off in the distance so as to effectively not rotate
		local lookAtPos = BuildVector( (pet.teamFacing or 0.0), idleRadius*1000, 0)
		pet.actor:SetFacingToAbs(lookAtPos)
		if ( pet.realActor ) then 
			pet.realActor:SetFacingToAbs(lookAtPos)
		end

		RemoveAllAuraVisuals(pet)

		-- play dead
		local deathKitID = 62
		if (fullUpdate == true) then
			-- already dead
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			end
		else
			-- dieing
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			end
			scene:WaitTimer(1.5)
		end

		return ""died""
	elseif (pet.currentHealth <= 0) and (pet.deathAnimKit or forced) then
--warning(""Pet Is Dead"");
		return ""dead""
	elseif (pet.currentHealth > 0) and (pet.deathAnimKit or forced) then
--warning(""Pet Revived"");
		-- resurrect
		if ( pet.deathAnimKit ) then 
			pet.deathAnimKit:Stop()
			pet.deathAnimKit = nil
			pet.dead = nil;
		end

		local lookAtPos = BuildVector(pet.teamFacing, idleRadius, 0)
		--LookAtOpposingTeam(pet)
		pet.actor:Fade(1, 0.5)
		--UpdateAuraVisuals(pet)

		return ""respawn""
	end
end"
10014,Brazie's PetBattle - Dispatcher - Default Result Handlers,"
function GetDefaultHandlerTable(result, index)
	local handlerTable = {
		[PetBattleEffect.SetHealth] = {
			dontWait = false;

			func = set_health_func;
			args = { result.value };
		};
		[PetBattleEffect.AuraApply] = {
			dontWait = true;

			showSuccessOrFail = true;

			func = apply_aura_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID };
		};
		[PetBattleEffect.AuraCancel] = {
			dontWait = true;
			func = aura_change_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID, true };

		};	
		[PetBattleEffect.AuraChange] = {
			dontWait = true;
			func = aura_change_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID, false };
		};	
		[PetBattleEffect.PetSwap] = {
			dontWait = false;

			func = swap_func;
			args = { result };
		};
		[PetBattleEffect.StatusChange] = {
			dontWait = false;
			func = status_change;
			args = { result };
		};
		[PetBattleEffect.SetState] = {
			dontWait = true;
			func = set_state_func;
			args = { result };
		};
		[PetBattleEffect.SetSpeed] = {
			dontWait = true;
			func = set_speed_func;
			args = { result };
		};
		[PetBattleEffect.SetPower] = {
			dontWait = true;
			func = set_power_func;
			args = { result };
		};
		[PetBattleEffect.NPCEmote] = {
			dontWait = false;
			func = npc_emote;
			args = { result };
		};
--[[
		[PetBattleEffect.LockEnabled] = {
			dontWait = true;
			func = spell_lock_enable_func;
			args = { result };
		};
		[PetBattleEffect.LockDisabled] = {
			dontWait = true;
			func = spell_lock_disable_func;
			args = { result };
		};
		[PetBattleEffect.LockModified] = {
			dontWait = true;
			func = spell_lock_modified_func;
			args = { result };
		};
		[PetBattleEffect.CooldownModified] = {
			dontWait = true;
			func = cooldown_modified_func;
			args = { result };
		};
--]]
	};


	return handlerTable;
end"
10015,Brazie's PetBattle - Dispatcher - Result - Set Health,"function set_health_func(targetROID, result, ...)
	local targetPet = ROIDTOPET(targetROID);

	local oldHealth = targetPet.currentHealth
	local newHealth = select(1,...)
	local hidden = false;

	local crit = false; 

	if ( result.flags and result.flags.crit ) then 
		crit = true;
	end 

	amountChanged, result = SetHealth(targetPet, newHealth, hidden, result.flags )
 
	-- This shouldn't be an inline response - convert to a dispatch later
	if ( result == ""died"" ) then
		local targetMaster = GETROIDFROMPLAYERID(targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;
		local enemyMaster = GETROIDFROMPLAYERID(3-targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;

		Dispatcher_AddCommandToQueue( targetMaster, Dispatcher_OwnerEmote, Animations.EmoteCry )
		Dispatcher_AddCommandToQueue( enemyMaster, Dispatcher_OwnerEmote, Animations.EmoteCheer )

	elseif ( result == ""respawn"" ) then
		local casterMaster = GETROIDFROMPLAYERID(targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;

		Dispatcher_AddCommandToQueue( casterMaster, Dispatcher_OwnerEmote, Animations.EmoteCheer )
	end

end"
10016,Brazie's PetBattle - Dispatcher - Result - Set Speed,"function set_speed_func(targetROID, result, ...)
end"
10017,Brazie's PetBattle - Dispatcher - Result - Set Power,"function set_power_func(targetROID, result, ...)
end"
10018,Brazie's PetBattle - Dispatcher - Result - Create Aura,"function CreateAura(targetROID, auraInstanceID, turnsRemaining, auraAbilityID )
	local targetPet = ROIDTOPET(targetROID);

	if ( not targetPet ) then 
		warning(""ERROR: Invalid pet supplied to CreateAura: "", ROIDTOSTRING( targetROID ), result );
		return;
	end

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local aura = ApplyAura(targetPet, auraInstanceID, turnsRemaining, auraSpellVisualID);

	if ( aura and auraVisual and auraVisual.scriptFunction ) then 

--		if (auraAbilityID == 175) then
--			print(""VOLCANO "" .. auraVisual.ID .. "", "" .. auraVisual.scriptFunctionString)
--			auraVisual.scriptFunction( targetROID, ""aura"", aura, auraInstanceID, turnsRemaining, auraAbilityID ); 
--			return aura
--		end

		warning(""WARNING: Running custom script for Aura of ""..auraAbilityID);
		Dispatcher_AddCommandToQueue(targetROID, auraVisual.scriptFunction, ""aura"", aura, auraInstanceID, turnsRemaining, auraAbilityID ); 	 

		--scene:WaitTimer(0.01); 
	elseif ( not auraVisual ) then
		warning(""WARNING: AuraVisual record missing for ability "", auraAbilityID);
	else
		warning(""WARNING: Default visual being used for aura of "", auraAbilityID);
	end

	return aura;
end
"
10019,Brazie's PetBattle - Dispatcher - Result - Trigger Ability,"function trigger_ability_func(targetROID, result, ...)
end"
10020,Brazie's PetBattle - Dispatcher - Result - Spell Locked,"function spell_lock_enable_func(targetROID, result, ...)

	-- 
	local target = ROIDTOPET ( targetROID );

	local type = WorldText.Damage;
	local useColor = false;
	local color = Color:New(0, 255, 0)

	local text = """" -- number of turns here

	local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_SPELL_LOCK"" )
	text = string.format( lockText or ""Spell Locked! (%1$s turns)"", text )
	target.actor:AddCustomWorldText( type, useColor, color, text ) 
end

function spell_lock_disable_func(targetROID, result, ...)
end

function spell_lock_modified_func(targetROID, result, ...)
end"
10021,Brazie's PetBattle - Dispatcher - Result - Cooldown Modified,"function cooldown_modified_func()
	local target = ROIDTOPET ( targetROID );

	local type = WorldText.Damage;
	local useColor = false;
	local color = Color:New(0, 255, 0)

	local text = """" -- number of turns here

	local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_UP"" )
	--local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_DOWN"" )
	--local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_RESET"" )
	text = string.format( lockText or ""Cooldown reduced!"", text )
	target.actor:AddCustomWorldText( type, useColor, color, text ) 
end"
10022,Brazie's PetBattle - Dispatcher - Result - Aura Apply,"function apply_aura_func( targetROID, result, ... )
	local auraInstanceID, turnsRemaining, auraAbilityID = ...

	-- apply an aura, tracked by instance ID

	if (DidItFail(result)) then
		return
	end

--print(""Applying aura to "",targetROID, "" ("",targetPet.slot,"") of "",auraAbilityID,"" using spell visual ID: "",auraSpellVisualID);

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local target = ROIDTOUNIT(targetROID);

	if ( target ) then 
		if (auraSpellVisualID) then
			target.actor:PlaySpellImpactVisual(auraSpellVisualID)
		end
	end

	aura = CreateAura( targetROID, auraInstanceID, turnsRemaining, auraAbilityID );

end
"
10023,Brazie's PetBattle - Dispatcher - Result - Aura Change,"function aura_change_func(targetROID, result, ...)
	local targetPet = ROIDTOPET( targetROID );

	if not targetPet then
		warning(""ERROR: Unknown pet provided to aura_change_func: "", ROIDTOSTRING(targetROID), result );
		return;
	end

	local auraInstanceID, turnsRemaining, auraAbilityID, cancel = ...
	local aura = targetPet.auras[auraInstanceID]
	if not aura then
		warning(""WARNING: Unknown aura instance ID. "", auraInstanceID, "" (You probably reloaded UI) "" )
--print(result);
		warning(""WARNING: Attempting to reapply aura: "", auraAbilityID);
		aura = CreateAura(targetROID, auraInstanceID, turnsRemaining, auraAbilityID);
	end

	if ( not turnsRemaining ) then
		warning(""ERROR: no turns remaining"");
	end

	if (cancel == true) or (turnsRemaining == 0 ) then

		RemoveAura(targetPet, auraInstanceID)
	else
		-- [ABrazie]: 7/25/2012
		-- Added this block so the spell impact visuals play when an aura
		-- Has its duration extendeded
		if ( turnsRemaining > aura.turnsRemaining ) then 
			local auraSpellVisualID = 0
			local auraVisual = GetAuraAbilityVisual(auraAbilityID)
			if (auraVisual) then
				auraSpellVisualID = auraVisual.spellVisualID
			end

			local target = ROIDTOUNIT(targetROID);

			if (auraSpellVisualID) then
				target.actor:PlaySpellImpactVisual(auraSpellVisualID)
			end
		end

		aura.turnsRemaining = turnsRemaining
	end
end
"
10024,Brazie's PetBattle - Dispatcher - Result - Swap ,"function swap_func(targetROID, result )
	if ( result.flags.invalidTarget ) then 
		return;
	end

	local casterPlayer 		= ROIDTOPLAYER( targetROID ) ;
	local casterNewFrontPet = ROIDTOPET( targetROID );
	local casterFrontPet 	= casterPlayer.pets[casterPlayer.activePet]

	local opponentPlayer 	= GetTeamByIndex(3-casterNewFrontPet.playerID)
	local opponentFrontPet 	= opponentPlayer.pets[opponentPlayer.activePet]

	local casterMasterROID = GETROIDFROMPLAYERID(casterPlayer.playerID) + ROID_TYPE_PLAYER_MASTER;

	if ( casterNewFrontPet.slot ~= casterFrontPet.slot ) then 
		Dispatcher_AddCommandToQueue( casterMasterROID, Dispatcher_OwnerEmote, Animations.EmotePoint )

		casterPlayer.activePet = casterNewFrontPet.slot

		-- This could probably be dispatched
		PerformSwap( casterFrontPet, casterNewFrontPet, opponentFrontPet );

	else
		casterPlayer.activePet = casterNewFrontPet.slot
	end
	-- Clean up also forces the pets to run forward.
	DefaultTurnCleanUp(targetROID);
end"
10025,Brazie's PetBattle - Dispatcher - Result - SetState,"function set_state_func(targetROID, result) 
	local targetPet = ROIDTOPET( targetROID );
	if not targetPet then
		warning(""ERROR: Unknown pet provided to set_state_func: "", ROIDTOSTRING(targetROID), result );
		return;
	end

	local label = ""Unknown State"";

	for k,v in pairs(STATE_LOOKUP) do
		if ( v == result.stateID ) then
			label = k;
			break;
		end
	end

	--Print(""*** State Update: "",label,"" = "",result.stateValue) 

	if ( not targetPet.states ) then
		targetPet.states = {};
	end

	targetPet.states[result.stateID]  = result.stateValue;

	-- stealth activated
	if ( result.stateID == STATE_STEALTHED ) then

		if ( result.stateValue > 0 ) then
			targetPet.stealthed = true;
		else
			targetPet.stealthed = false;
		end
		
		targetPet.actor:Fade( GetNaturalAlpha( targetROID ) , 0.5)
	end

	-- stealth activated
	if ( result.stateID == STATE_FLY_TIER ) then

		if ( result.stateValue > 0 ) then
			targetPet.actor:SetHoverHeight(0.5)
			targetPet.flyTier = true;
		else
			targetPet.actor:SetHoverHeight(0.0)
			targetPet.flyTier = false;
		end
		
	end

	-- stealth activated
	if ( result.stateID == STATE_INVISIBLE ) then

		if ( result.stateValue > 0 ) then
			targetPet.invisible = true;
		else
			targetPet.invisible = false;
		end
		
		targetPet.actor:Fade( GetNaturalAlpha( targetROID ) , 0.5)
	end


	-- Float custom text
	if ( result.stateID == STATE_CHARGING ) then
		if ( result.stateValue > 0 ) then
			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)
 
			local text = GetGlobalString( ""BATTLE_PET_MESSAGE_CHARGING"" ) or ""Charging"";
			targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		end
	end

	if ( result.stateID == STATE_CLEANSE ) then
		if ( result.stateValue > 0 ) then 
			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)
 
			local text = GetGlobalString( ""BATTLE_PET_MESSAGE_CLEANSED"" ) or ""Cleansed"";
			targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		end
	end

	if ( result.stateID == STATE_RECOVERING ) then
		if ( result.stateValue > 0 ) then
			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)

			local text = GetGlobalString( ""BATTLE_PET_MESSAGE_RECOVERING"" ) or ""Recovering"";
			targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
		end
	end

	-- Clone Mode
	if ( result.stateID == STATE_CLONE_ACTIVE ) then
		if ( result.stateValue > 0 ) then 
			--print(""Clone Mode ACTIVATED!""..targetROID);
		else
			--print(""Clone Mode DEACTIVATED!""..targetROID);
		end
	end
end"
10026,Brazie's PetBattle - Dispatcher - Result - NPC Emote,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function npc_emote(targetROID, result)
	if (not result) then
		return
	end

	local player = ROIDTOPLAYER( targetROID );

	if ( player and player.playerDisplay ) then 
		player.playerDisplay:BroadcastText(BroadcastType.Say, result.value )
	end
end
"
10027,Brazie's PetBattle - Dispatcher - Result - ChangeStatus,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function status_change(targetROID, result)
	if (not result) then
		return
	end

-- 
-- I don't know why this is needed, but Okay!
-- 

--[[
print(""Debugging Status Change Table"");
DEBUG_TABLE(result)
--]]

	local targetPet = ROIDTOPET( targetROID );
	
	-- Save the local state
	if ( result.isTrapped ) then 
		targetPet.isTrapped = result.isTrapped;
	end
--[[
	-- check if we need to perform a special trap visual
	local player = nil
	if (effect.casterPlayerID > 0) then
		player = GetTeamByIndex(effect.casterPlayerID)
	end

	if (player) then
		if (effect.abilityVisualID == player.trapVisualID) then
			TrapCast(effect)
		end
	end
]]-- 
	if ( result.isTrapped ) then 
		local enemyMasterRoid = GETROIDFROMPLAYERID(3-targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;
		--Dispatcher_OwnerTrap( enemyMasterRoid, targetROID );
--print(""I'm the very best."", enemyMasterRoid);
		--scene:WaitTimer(5);
	end
end
"
10028,----- Bot Dispatcher -----,
10029,PetBattle - Dispatcher - Common,"function ThreadBotMain(BOT_ID)

	local myROID;
	local myList=nil;

	local frameTimer = scene:Timer(0)
	while( not BOT_KILL_SWITCH ) do
		for k,v in pairs(UNIT_ACTION_QUEUE) do
			if ( v.isProcessing == false and #v.commands > 0 ) then 
				myROID = k;
				myList = v;
				break;
			end
		end

		if ( myROID ) then 
			--print( ""Bot ""..BOT_ID.."" Acquired Task for "", ROIDTOSTRING(myROID) );
			UNIT_ACTION_QUEUE[myROID].isProcessing = true;
			
			-- [ABrazie]: Bots will only handle one task at a time now, not managed according to who owns it.
			--while myList.commands[1] ~= nil do
				local task = myList.commands[1];
			--print( ""Mine: "", ROIDTOSTRING(myROID)  );
			--print(""Other: "",ROIDTOSTRING(task.args[1])); 
			--DEBUG_TABLE(task.args);

				table.remove(myList.commands,1);
			--end
		
			UNIT_ACTION_QUEUE[myROID].isProcessing = false;

			local result = task.func(myROID, unpack(task.args));

			--print(""Bot""..BOT_ID.."" Result: "",result)
			myROID = nil;
			myList = nil;
			--print( ""Bot ""..BOT_ID.."" Released Task"" );
		end

		-- Darren's Garbage Collector Optimization:
		--  always use the same timer, instead of
		--	scene:WaitTimer(0)
		frameTimer:Reset()
		scene:Wait(frameTimer)
	end

end
"
10030,PetBattle - Dispatcher - Thread Bot 1,"local BOT_ID = 1
ThreadBotMain(BOT_ID)"
10031,PetBattle - Dispatcher - Thread Bot 2,"local BOT_ID = 2
ThreadBotMain(BOT_ID)"
10032,PetBattle - Dispatcher - Thread Bot 3,"local BOT_ID = 3
ThreadBotMain(BOT_ID)"
10033,PetBattle - Dispatcher - Thread Bot 4,"local BOT_ID = 4
ThreadBotMain(BOT_ID)"
10034,PetBattle - Dispatcher - Thread Bot 5,"local BOT_ID = 5
ThreadBotMain(BOT_ID)"
10035,PetBattle - Dispatcher - Thread Bot 6,"local BOT_ID = 6
ThreadBotMain(BOT_ID)"
10036,PetBattle - Dispatcher - Thread Bot 7,"local BOT_ID = 7
ThreadBotMain(BOT_ID)"
10037,PetBattle - Dispatcher - Thread Bot 8,"local BOT_ID = 8
ThreadBotMain(BOT_ID)"
10038,PetBattle - Arena,"
--------------------------------------------------------------------------------
-- Spawn Client Side Arena Visuals
local arenaCreateData = ActorCreateData:Default()
arenaCreateData.name = ""arenaRing""
arenaCreateData.model = arenaRingModel
arenaCreateData.scale = arenaRingScale
arenaCreateData.interactible = false
arenaRing = scene:SpawnActor(arenaCreateData)
arenaRing:Fade(0, 0)
arenaRing:PlayLoopingFullBodyAnim(Animations.Hold)

scene:WaitTimer(0.25)
--arenaRing:Fade(arenaRingAlpha, arenaFadeTime)
arenaRing:Fade(0, 0)

local debugScale = false

if ( debugScale ) then
	local scaleCreateData = ActorCreateData:Default()
	scaleCreateData.name = ""scaleAxis""
	scaleCreateData.model = ""SPELLS\\AxisTestObject.m2""
	scaleCreateData.scale = 2.0
	scaleCreateData.interactible = false
	axis = scene:SpawnActor(scaleCreateData)
end"
10039,PetBattle - Placeholder Players,"
--------------------------------------------------------------------------------
-- Placeholder opponents for cross-realm etc battles
--  - script runs in parallel and pings for a player to become valid

local placeHolderCreatureIDs =
{
	32695;
	32697;
	32700;
	32702;
	32704;
	32706;
	32708;
	32709;
	32710;
	32711;
	32712;
	32713;
	32714;
	32715;
	32716;
	32717;
	32718;
	32719;
	32720;
	32721;
	66865;
	66866;
	66871;
	66872;
}

local needPlaceHolder = true
--if not (PetBattleScene.GetActivePlayerDisplay) then
--	needPlaceHolder = false
--end

local placeHolderPingTime = 2.5
local placeHolderActors = { }

while (needPlaceHolder) do
--	needPlaceHolder = false
	for playerID, player in pairs(teams or { }) do
		if (playerID ~= PetBattlePlayerID.Weather) and (player.isNPC ~= true) then
			player.playerDisplay = battleScene:GetActivePlayerDisplay(playerID)
			if (not player.playerDisplay) then
				-- still need a placeholder
				--needPlaceHolder = true

				-- create it if we haven't already
				local placeHolderActor = placeHolderActors[playerID]
				if (not placeHolderActor) then
					local createData = ActorCreateData:Default()
					createData.creatureID = placeHolderCreatureIDs[math.random(#placeHolderCreatureIDs)]
					createData.name = ""placeHolder"" .. playerID
					createData.interactible = false
					createData.floatingTooltip = false

					local placeHolderFacing = player.teamFacing
--print(""Placeholder P"" .. playerID)

					local pos = BuildVector(placeHolderFacing, -playerRadius, 0.0)
					local transform = Transform:New(pos, placeHolderFacing)
					createData.transform = transform

					placeHolderActor = scene:SpawnActor(createData)
					placeHolderActors[playerID] = placeHolderActor
				end

				-- keep using the placeholder
				player.playerDisplay = placeHolderActor
			else
				-- done with this placeholder, despawn it
				local placeHolderActor = placeHolderActors[playerID]
				if (placeHolderActor) then
					placeHolderActor:Despawn()
				end

				placeHolderActors[playerID] = nil
			end
		end
	end
	scene:WaitTimer(placeHolderPingTime)
end

placeHolderActors = nil
"
10040,PetBattle - Main,"
--------------------------------------------------------------------------------
-- battle constants
isObserved = false
observingPlayerIndex = 0
availableCamTransition = 0

if battleScene then
	initialBattleState = battleScene:GetBattleState()
	observingPlayerIndex = battleScene:GetUIObservingPlayer()
	if (observingPlayerIndex > 0) then
		isObserved = true
		if (PetBattleScene.GetUICameraTransition) then
			availableCamTransition = battleScene:GetUICameraTransition()
		else
			availableCamTransition = 1
		end
	end
end

InitStaticData(initialBattleState)

--------------------------------------------------------------------------------
-- build ability and abilityVisual map
petAbilities = { }
for index,ability in pairs(initialBattleState.abilityDescs) do
	petAbilities[ability.ID] = ability
end

petAbilityVisuals = { }
for index,abilityVisual in pairs(initialBattleState.abilityVisualDescs) do
	local visualID = abilityVisual.ID
	petAbilityVisuals[visualID] = abilityVisual

	-- add any custom script function
	LoadCustomVisualScript(abilityVisual)
end

--------------------------------------------------------------------------------
-- spawn teams
initialBattleState.players[PetBattlePlayerID.Weather].teamFacing = 0
initialBattleState.players[PetBattlePlayerID.Player1].teamFacing = 0
initialBattleState.players[PetBattlePlayerID.Player2].teamFacing = 180

teams = { }
teams[PetBattlePlayerID.Weather] = initialBattleState.players[PetBattlePlayerID.Weather]
teams[PetBattlePlayerID.Player1] = initialBattleState.players[PetBattlePlayerID.Player1]
teams[PetBattlePlayerID.Player2] = initialBattleState.players[PetBattlePlayerID.Player2]

if (PetBattleScene.GetActivePlayerDisplay) then
	if (teams[1]) then
		teams[1].playerDisplay = battleScene:GetActivePlayerDisplay(1)
	end
	if (teams[2]) then
		teams[2].playerDisplay = battleScene:GetActivePlayerDisplay(2)
	end
end

if (teams[PetBattlePlayerID.Player2].isNPC == true) and (#teams[PetBattlePlayerID.Player2].petDescs <= 1) then
	-- when battling a single NPC, don't show backline
	backlineAlpha = 0.0
end

InitTeam(teams[PetBattlePlayerID.Weather])
InitTeam(teams[PetBattlePlayerID.Player1])
InitTeam(teams[PetBattlePlayerID.Player2])

InitAurasAndStates ( teams[PetBattlePlayerID.Weather] )
InitAurasAndStates ( teams[PetBattlePlayerID.Player1] )
InitAurasAndStates ( teams[PetBattlePlayerID.Player2] )

-- wait for teams to load
if (Scene.SetCameraInterruptedByFreelook) then
	scene:SetCameraInterruptedByFreelook(true)
end

if (initialBattleState.battleState == PetBattleState.WaitingPreBattle) then
	BattleIntro()
else
	if isObserved then
		PlayBattleMusic()
		if (useFreelookCamera) then
			StartCameraBunny(0)
		else
			SetCamera(3)
		end
	end
	WaitAllPetsLoaded()
	FadeInAllPets(0)
end

-- Pet Battle loop
local inBattle = true
local winnerID

while (inBattle == true) do
	local event = nil

	-- poll for battle events
	local waitForEvents = function()
		return battleScene:HasPendingEffects()
	end
	scene:WaitCondition(waitForEvents)

	event = battleScene:GetPendingEffect()

	inBattle, winnerID = ProcessEvent(event)
end

VictoryCeremonyCleanUp(winnerID)

if isObserved then
	if (useFreelookCamera) then
		StopCameraBunny(0.25)
	else
		SetCamera(4)
		scene:WaitTimer(0.75)
	end
end

--scene:WaitTimer(0.5);

battleScene:SignalBattleComplete()
"
10044,Quest - IotTK 5.2: zto - Planting Bombs (Alliance) - Init ,"----------------------
-- Helper Functions --
----------------------
function Explode(actor)
	explosionID = math.random(0, 1)
	local burningAuraVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	if explosionID == 1 then
		CastSpellAtActor(actor, actor, smallExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura) 
		Wait(5)
	else
		CastSpellAtActor(actor, actor, bigExplosion)
		--Wait(2)
		local burningAura = actor:PlaySpellStateVisual(burningAuraVisual) 
		Wait(5)
		actor:ClearSpellVisual( burningAura)
		Wait(5)
	end
end 

-------------------------
-- Inits and Constants --
-------------------------

--Spells
tacticalManaBombSpellID = 137319
smallExplosion = 88309 
bigExplosion = 46419
nukeExplosion = 103119

--SpellAuraVisuals
burningAuraVisualID = { 27878, 29123, 29124 }

--Creature IDs
bunnyCreatureID = 62026

local scenePos = scene:GetPosition()
local checkRadius = 100
local pathData = scene:LoadPath(5375)
local nearbyNodes = {}
local fires = {}

--Find nearby nodes
for i = 1, #pathData.nodes do
	local thisNode = pathData.nodes[i]
	local thisPos = thisNode.pos
	local distance = Vector.Dist(thisPos, scenePos)
	if (distance < checkRadius) then
		table.insert(nearbyNodes, thisPos)
	end
end

--for nearby nodes, spawn a bunny
for i=1, #nearbyNodes do
	local thisNode = nearbyNodes[i]
	local var = math.random(0, 359)
	fires[i] = SpawnActor(bunnyCreatureID, thisNode.x, thisNode.y, thisNode.z, var, 1, false)
end

nukeBunny = SpawnActor(bunnyCreatureID, scenePos.x, scenePos.y, scenePos.z, 0, 1, false)

------------
-- Action --
------------

Wait(1)
CastSpellAtActor(nukeBunny, nukeBunny, tacticalManaBombSpellID) --Set off the big nuke!
--Wait(1)
--Start the fires
for i=1, #fires do
	CastSpellAtActor(fires[i], fires[i], tacticalManaBombSpellID) --Set off the big nuke!
	local burningVisual = burningAuraVisualID[(math.random(#burningAuraVisualID))]
	fires[i]:PlaySpellStateVisual( burningVisual )
end
--CastSpellAtActor(nukeBunny, nukeBunny, nukeExplosion, false) 
while true do
	local waitTime = math.random(3, 8 )
	Wait(waitTime)
	Explode(fires[(math.random(#fires))])
end	"
10052,Scenario - Tear Down This Wall - Intro - Master - JSB,"
-- scene:SetFadeRegion(1, true) -- (radius, fadeActivePlayer)


-- scene:SetCamera(513,0,nil,nil) -- (camera, transition time, primary target, secondary target)

scene:ApplyScreenEffect(951)
Wait( 1 )
scene:ClearScreenEffect(951) 


SetCameraFollowPath( 368, 0, 5379, 5377, 7 ) -- (camera, transition time, spline, target spline, duration)

Wait( 5 )

SetCameraFollowPath( 368, 10, 5380, 5381, 60 ) -- (camera, transition time, spline, target spline, duration)

Wait( 35 )

SetCameraFollowPath( 368, 10, 5396, 5397, 20 ) -- (camera, transition time, spline, target spline, duration)

Wait( 11 )

SetCameraFollowPath( 368, 10, 5398, 5399, 15 ) -- (camera, transition time, spline, target spline, duration)

Wait( 14 )

scene:SetCamera(0,4,nil,nil) -- sets camera back to game-cam

Wait( 3 )

scene:EndScene()

-- scene:TriggerServerEvent(""Wallbreak"") -- server will cast spell specified in the scene

-- local shakeOrigin = Vector:New(6606.27, 5336.19, 23.3737, 319.65)
-- shakeX = scene:AddCameraEffect( 38, shakeOrigin, nil, 1 )
-- shakeY = scene:AddCameraEffect( 39, shakeOrigin, nil, 1 )
-- shakeZ = scene:AddCameraEffect( 40, shakeOrigin, nil, 1 )


-- Wait( 1 )


-- scene:SetCamera(0,5,nil,nil) -- sets camera back to game-cam

-- Wait( 5 )

-- scene:EndScene()
"
10053,Scenario - Tear Down This Wall - Intro - Thunder King - JSB,"
WaitForTrigger( ""tkSpeak01"" )


thunderking:BroadcastTextStereo(BroadcastType.Say, 71782)
thunderking:PlayOneShotAnimKit(3481)

Wait( 7 )

thunderking:BroadcastTextStereo(BroadcastType.Say, 71783)

thunderking:PlaySpellStateVisual(30403)

SendTrigger( ""tkSpeak02"" )

Wait( 8 )

thunderking:ClearSpellVisual( 0)

Wait( 3 )

thunderking:BroadcastTextStereo(BroadcastType.Say, 71798)
thunderking:PlayOneShotAnimKit(594)

Wait( 8 )

SendTrigger( ""tkSpeak03"" )

Wait( 5 )

thunderking:SetFacing(70)

SendTrigger( ""tkSpeak04"" )

Wait( 1 )

thunderking:BroadcastTextStereo(BroadcastType.Say, 71800)
thunderking:PlayOneShotAnimKit(3649)

Wait( 14 )


thunderking:SetFacing(315)

RunToLocation( thunderking, 3, 6907.45, 5371.76, 48.3428, 314.62)


RunToLocation( thunderking, 3, 6924.36, 5354.87, 66.4396, 316.42)"
10054,Scenario - Tear Down This Wall - Intro - Shan'bu - JSB,"
WaitForTrigger( ""tkSpeak04"" )
shanbu:SetFacing(230)

Wait( 1 )

shanbu:PlayOneShotAnimKit(3647)

Wait( 8 )

shanbu:StopAnimKit(3647)

Wait( 1 )

shanbu:BroadcastTextStereo(BroadcastType.Say, 71801)
shanbu:PlayOneShotAnimKit(1431)

Wait( 3 )

SendTrigger( ""tkSpeak05"" )

shanbu:SetFacing(85)

RunToLocation( shanbu, 3, 6916.96, 5420.69, 48.1561, 59.8904)
RunToLocation( shanbu, 3, 6941.73, 5451.24, 29.8225, 52.2404)"
10055,Scenario - Tear Down This Wall - Intro - Al'Chuckla - JSB,"
--RunToLocation( alchukla, 4, 6891.06, 5387.59, 47.8533, 312.18)

FadeIn( alchukla, 0 )

RunToLocation( alchukla, 3, 6891.06, 5387.59, 47.8533, 312.18)

Wait( 1 )

alchukla:PlayLoopingFullBodyAnim(Animations.KneelLoop)

Wait( 1 )

SendTrigger( ""tkSpeak01"" )

WaitForTrigger( ""tkSpeak02"" )

alchukla:StopLoopingFullBodyAnim()

alchukla:PlaySpellStateVisual(30407)

Wait( 3 )

alchukla:PlaySoundKit( 36002, true )

Wait( 2 )

alchukla:ClearSpellVisual( 0)

alchukla:SetScale(2.5)

alchukla:PlaySpellStateVisual(30420)

alchukla:PlayOneShotAnimKit(3090)

Wait( 1.3 )

alchukla:PlayLoopingFullBodyAnim(Animations.KneelLoop)

WaitForTrigger( ""tkSpeak03"" )

alchukla:StopLoopingFullBodyAnim()

Wait( 1.5 )

alchukla:BroadcastTextStereo(BroadcastType.Say, 71799)
alchukla:PlayOneShotAnimKit(3261)

Wait( 18 )

alchukla:SetFacing(130)

Wait( 0.5 )

RunToLocation( alchukla, 3, 6861.28, 5417.87, 48.1467, 131.271)
RunToLocation( alchukla, 3, 6844.5, 5436.01, 29.5748, 133.296)
RunToLocation( alchukla, 3, 6790.1, 5413.82, 29.5738, 221.496)

"
10056,Scenario - Tear Down This Wall - Intro - Init - JSB,"
-- spawn al'chukla
local alchuklaCreatureID = 69651
alchukla = SpawnActor( alchuklaCreatureID, 6871.24, 5405.52, 47.852, 340, 1.0, true )

-- spawn shanbu
local shanbuCreatureID = 69652
shanbu = SpawnActor( shanbuCreatureID, 6911.76, 5388.55, 47.8517, 158.496, 1.0, true )

-- spawn thunderking
local thunderCreatureID = 69654
thunderking = SpawnActor( thunderCreatureID, 6903.43, 5375.14, 47.8517, 134.196, 1.0, true )

-- spawn spell fx bunny
local fxCreatureID = 28960
fxbunny = SpawnActor( fxCreatureID, 6891.06, 5387.59, 53, 312.18, 1.0, true )



-- spawn random trolls
local trollaCreatureID = 69294
local trollbCreatureID = 69296
local trollcCreatureID = 69295

trolla01 = SpawnActor( trollaCreatureID, 6890.27, 5419.57, 47.8519, 289.934, 1.0, true )
trolla02 = SpawnActor( trollaCreatureID, 6868.33, 5422.75, 48.1614, 317.61, 1.0, true )
trolla03 = SpawnActor( trollaCreatureID, 6852.99, 5395.36, 47.8523, 349.334, 1.0, true )
trolla04 = SpawnActor( trollaCreatureID, 6864.87, 5392.5, 47.8523, 339.209, 1.0, true )
trolla05 = SpawnActor( trollaCreatureID, 6864.58, 5407.32, 47.8523, 335.609, 1.0, true )
trolla06 = SpawnActor( trollaCreatureID, 6860.64, 5398.46, 47.8522, 337.859, 1.0, true )
trolla07 = SpawnActor( trollaCreatureID, 6851.77, 5414.09, 45.5857, 324.808, 1.0, true )
trolla08 = SpawnActor( trollaCreatureID, 6863.65, 5433.09, 41.2287, 292.409, 1.0, true )


trollb01 = SpawnActor( trollbCreatureID, 6900.64, 5418.37, 47.8519, 271.934, 1.0, true )
trollb02 = SpawnActor( trollbCreatureID, 6885.23, 5418.76, 47.8519, 302.309, 1.0, true )
trollb03 = SpawnActor( trollbCreatureID, 6879.12, 5418.39, 47.8519, 308.159, 1.0, true )
trollb04 = SpawnActor( trollbCreatureID, 6871.19, 5418.19, 47.8524, 318.51, 1.0, true )
trollb05 = SpawnActor( trollbCreatureID, 6858.74, 5388.82, 47.8523, 343.934, 1.0, true )
trollb06 = SpawnActor( trollbCreatureID, 6860.26, 5379.35, 47.8523, 6.43428, 1.0, true )
trollb07 = SpawnActor( trollbCreatureID, 6856.91, 5393.53, 47.8522, 348.209, 1.0, true )
trollb08 = SpawnActor( trollbCreatureID, 6862.85, 5423.07, 46.7343, 312.209, 1.0, true )
trollb09 = SpawnActor( trollbCreatureID, 6851.49, 5420.26, 41.8224, 322.109, 1.0, true )


trollc01 = SpawnActor( trollcCreatureID, 6886.72, 5423.36, 47.8519, 299.384, 1.0, true )
trollc02 = SpawnActor( trollcCreatureID, 6882.67, 5423.87, 47.8519, 293.759, 1.0, true )
trollc03 = SpawnActor( trollcCreatureID, 6884.68, 5414.77, 47.8519, 300.734, 1.0, true )
trollc04 = SpawnActor( trollcCreatureID, 6857.96, 5405.9, 47.8523, 335.834, 1.0, true )
trollc05 = SpawnActor( trollcCreatureID, 6860.26, 5379.35, 47.8523, 6.43428, 1.0, true )
trollc06 = SpawnActor( trollcCreatureID, 6865.77, 5401.81, 47.8522, 333.133, 1.0, true )
trollc07 = SpawnActor( trollcCreatureID, 6864.54, 5427.03, 45.3985, 307.259, 1.0, true )
trollc08 = SpawnActor( trollcCreatureID, 6851.24, 5408.72, 47.8506, 331.559, 1.0, true )
trollc09 = SpawnActor( trollcCreatureID, 6851.24, 5408.72, 47.8506, 331.559, 1.0, true )
"
10057,Test - Darren's Weapon Swap,"
local creatureID = 65561
local itemIDs = { 0, 56228, 86140, 34334, 50262, 34675 }
local slots = { WeaponSlot.MainHand, WeaponSlot.OffHand, WeaponSlot.Ranged }

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(5, 0, 0), 180)
createData.creatureID = creatureID

local actor = scene:SpawnActor(createData)
actor:PlayLoopingFullBodyAnim(Animations.ReadyBow)
while true do
	scene:WaitTimer(1)
	local slot = slots[math.random(#slots)]
	local itemID = itemIDs[math.random(#itemIDs)]
	actor:EquipWeapon(slot, itemID)
end
"
10058,Scenario - Tear Down This Wall - Intro - FX Bunny - JSB,"
WaitForTrigger( ""tkSpeak02"" )

Wait( 5 )

fxbunny:PlaySpellImpactVisual(30418)"
10059,Scenario - Tear Down This Wall - Intro - Trolls - JSB,"

FadeIn( trolla01, 0 )
FadeIn( trolla02, 0 )
FadeIn( trolla03, 0 )
FadeIn( trolla04, 0 )
FadeIn( trolla05, 0 )
FadeIn( trolla06, 0 )
FadeIn( trolla07, 0 )
FadeIn( trolla08, 0 )


FadeIn( trollb01, 0 )
FadeIn( trollb02, 0 )
FadeIn( trollb03, 0 )
FadeIn( trollb04, 0 )
FadeIn( trollb05, 0 )
FadeIn( trollb06, 0 )
FadeIn( trollb07, 0 )
FadeIn( trollb08, 0 )
FadeIn( trollb09, 0 )


FadeIn( trollc01, 0 )
FadeIn( trollc02, 0 )
FadeIn( trollc03, 0 )
FadeIn( trollc04, 0 )
FadeIn( trollc05, 0 )
FadeIn( trollc06, 0 )
FadeIn( trollc07, 0 )
FadeIn( trollc08, 0 )
FadeIn( trollc09, 0 )

trolla01:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trolla02:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trolla03:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trolla04:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trolla05:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trolla06:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trolla07:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trolla08:PlayLoopingFullBodyAnim(Animations.KneelLoop)


trollb01:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb02:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb03:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb04:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb05:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb06:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb07:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb08:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollb09:PlayLoopingFullBodyAnim(Animations.KneelLoop)


trollc01:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc02:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc03:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc04:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc05:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc06:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc07:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc08:PlayLoopingFullBodyAnim(Animations.KneelLoop)
trollc09:PlayLoopingFullBodyAnim(Animations.KneelLoop)

WaitForTrigger( ""tkSpeak05"" )


trolla01:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb01:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc01:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trolla06:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb07:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc06:PlayLoopingFullBodyAnim(Animations.EmoteCheer)

Wait( 0.3 )

trolla02:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb02:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc02:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trolla07:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb08:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc07:PlayLoopingFullBodyAnim(Animations.EmoteCheer)

Wait( 0.2 )

trolla03:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb03:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc03:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trolla08:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb09:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc08:PlayLoopingFullBodyAnim(Animations.EmoteCheer)

Wait( 0.3 )

trolla04:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb04:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc03:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc09:PlayLoopingFullBodyAnim(Animations.EmoteCheer)

Wait( 0.25 )

trolla05:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollb05:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc04:PlayLoopingFullBodyAnim(Animations.EmoteCheer)

Wait( 0.25 )

trollb06:PlayLoopingFullBodyAnim(Animations.EmoteCheer)
trollc05:PlayLoopingFullBodyAnim(Animations.EmoteCheer)"
10060,IotTK 5.2: zto - Ballista Fire on Horde Camp (Init),"--[[Helper Function
function FireBallista()
	local target = targets[(math.random(#targets))]
	local ballista = ballistae[(math.random(#ballistae))]
	local targetLoc = target:GetPosition()
	local ballistaLoc = ballista:GetPosition()
	ballista:SetFacingToAbs(Vector:New(targetLoc.x, targetLoc.y, targetLoc.z))
	target:SetFacingToAbs(Vector:New(ballistaLoc.x, ballistaLoc.y, ballistaLoc.z))
	ballista:PlaySpellCastVisualAtTargets(ballistaMissileVisualID, 20, false, { target })
	ballista:WaitMissilesImpacted(ballistaMissileVisualID)
	target:PlaySpellImpactVisual(ballistaImpactVisualID)
end]]--

--Helper Function
function MissilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, -5)
	local spot2 = math.random(-10, 10)
	--local spot3 = math.random(-10, 10) 
	local missilePos = casterPos + Vector:New(spot1, spot2, 0)
	return missilePos
end

function BallistaBounce(target) --Ricochettes the ballista off the shield when it hits.
	local targetLoc = target:GetPosition()
	local spot1 = math.random(1, 15)
	local spot2 = math.random(-15, 15)
	bounceTargetLoc = targetLoc + Vector:New(spot1, spot2, 0)
	bounceTargetLoc.z = 0
	bounceTarget = { bounceTargetLoc }
	target:PlaySpellCastVisualAtPoints( ballistaMissileBounceVisualID, 30, false, bounceTarget )
end

function FireBallista() -- Fire's a Ballista round at the ship
	local target = targets[(math.random(#targets))]
	local ballista = ballistae[(math.random(#ballistae))]
	local targetLoc = target:GetPosition()
	local ballistaLoc = ballista:GetPosition()
	ballista:SetFacingToAbs(Vector:New(targetLoc.x, targetLoc.y, targetLoc.z))
	target:SetFacingToAbs(Vector:New(ballistaLoc.x, ballistaLoc.y, ballistaLoc.z))
	local travelTime = 10
	local missileInstanceID = ballista:PlaySpellCastVisualAtTargets(ballistaMissileVisualID, travelTime, true, { target })
	Wait(travelTime)
	ballista:WaitMissilesImpacted(missileInstanceID)
	BallistaBounce(target)
end


--Spell Visual Kits (Impact)
ballistaImpactVisualID = 32367
ballistaCastVisualID = 30728
ballistaMissileVisualID = 30498
ballistaShieldAuraVisualID = 30513
ballistaShieldCastVisualID = 30510
ballistaMissileBounceVisualID = 31161

--Spells
ballistaSpellID = 138100

--Creatures
bunnyCreatureID = 62026

--Spawn Actors
targets = SpawnActorsAtPoints( bunnyCreatureID, 5408, false)
ballistae = SpawnActorsAtPoints ( bunnyCreatureID, 5409, false)
blockers = SpawnActorsAtPoints(bunnyCreatureID, 5411, false)

for i=1, #blockers do
	blockers[i]:PlaySpellCastVisual(ballistaShieldCastVisualID)
	blockers[i]:PlaySpellStateVisual(ballistaShieldAuraVisualID)
end

--Old Method
--[[while true do
	local waitTime
	waitTime = math.random(.5, 2)
	Wait(waitTime)
	FireBallista()
end]]--

--For the duration of the scene, Ballistas fire rounds at the shields
while true do
	local waitTime = math.random(0.5, 3) --Time between shots
	Wait(waitTime)
	scene:AddCoroutine(FireBallista)
end
"
10061,IotTK 5.2: zto - Ballista Fire on Horde Camp (timer),"Wait(290)
scene:EndScene()"
10062,Lorewalker 5.2 - S1: Zandalari - Init,"-- Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, true )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, true )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, true )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, true )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, true )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, true )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, true )  -- Downstage Center bunny

--Paths and Points
nagaPaths = { 5430, 5431, 5432, 5433, 5429 }
visionPoint = 5428
nagaSpawnPoint = 5434

--Constants
nagaSpawner = 0

--Spells
eyeGlowStateID = 30607
earthquakeStateID = 30662
 
--Trolls
zulCreatureID = 69918
rastakhanCreatureID = 69915
trollGuardCreatureID = 69945
trollPeasantsCreatureID = 69170

rastakhan = SpawnActor(rastakhanCreatureID, 1457.88, 365.284, 550.221, 130.149, 3, false)
FadeOut(rastakhan, 0)

zul = SpawnActor(zulCreatureID, 1451.42, 372.623, 550.221, 310.677, 1, true)
FadeOut(zul, 0)

trollGuards = SpawnFadedActorsAtPoints( trollGuardCreatureID, 5427, true)

peasants = SpawnFadedActorsAtPoints ( trollPeasantsCreatureID, 5444, true)

--Actors
deathwingCreatureID = 56584
nagaCreatureID = 69950
tentacleCreatureID = 42409

deathwing = SpawnActor(deathwingCreatureID, 1454.35, 369.413, 550.223, 131.196, .005, false)
FadeOut(deathwing, 0)

tentacle = SpawnFadedActorsAtPoints(tentacleCreatureID, 5438, true);

quakeBunnies = SpawnActorsAtPoints( bunnyID, 5439, true)

--Models
cobraThroneModelID = ""WORLD\\GENERIC\\TROLL\\PASSIVE DOODADS\\THRONES\\CobraThrone01.M2""
globeModelID = ""WORLD\\EXPANSION03\\DOODADS\\FIRELANDS\\GLOBEOFAZEROTH\\GlobeOfAzeroth.M2""
fissureModelID = ""WORLD\\EXPANSION01\\DOODADS\\HELLFIRECITADEL\\DEMONWING\\ACTIVEDOODADS\\CRACKS\\Hellfire_DW_SmallFloor_Crack_OnOff.m2""
trollHutModelID1 = ""WORLD\\EXPANSION04\\DOODADS\\ZANDALARI\\Zandalari_Tent_Small_02.M2""
trollHutModelID2 = ""WORLD\\EXPANSION04\\DOODADS\\ZANDALARI\\Zandalari_Tent_Canopy_01.M2""
trollBannerModelID = ""WORLD\\EXPANSION04\\DOODADS\\ZANDALARI\\Zandalari_Banner_Wall_01.M2""
waveModelID = ""SPELLS\\Missile_Wave_Water.M2""
maelstromSkyModelID = ""ENVIRONMENTS\\STARS\\Maelstrom_Sky02_DeathwingFight.M2""
maelstromFireModelID = ""WORLD\\EXPANSION03\\DOODADS\\GENERIC\\MAELSTROM\\Maelstrom_DeathwingSteam.M2""
maelstromFireWallModelID = ""WORLD\\EXPANSION03\\DOODADS\\GENERIC\\MAELSTROM\\Maelstrom_DeathwingSteam.M2""
maelstromWavesModelID = ""WORLD\\EXPANSION03\\DOODADS\\GENERIC\\MAELSTROM\\MaelstromSmallSplash01.M2""

throne = SpawnModelActor(cobraThroneModelID, 1460.17, 362.395, 550.223, 125.987, 3, false)
FadeOut(throne, 0)

globe = SpawnModelActor(globeModelID, 1454.35, 369.413, 550.223, 131.196, 1, false)
FadeOut(globe, 0)

fissure = SpawnModelActor(fissureModelID, 1454.35, 369.413, 550.223, 131.196, 1, false)
FadeOut(fissure, 0)

huts1 = SpawnModelActorsAtPoints(trollHutModelID1, 5440, false)
for i=1, #huts1 do
	huts1[i]:Fade(0, 0)
end

huts2 = SpawnModelActorsAtPoints(trollHutModelID2, 5441, false)
for i=1, #huts2 do
	huts2[i]:Fade(0, 0)
end

banners = SpawnModelActorsAtPoints(trollBannerModelID, 5442, false)
for i=1, #banners do
	banners[i]:Fade(0, 0)
end

wave = SpawnModelActor( waveModelID, 1464.46, 378.506, 550.221, 221.28, 1, true)
FadeOut( wave, 0 )

maelstromSky = SpawnModelActor(maelstromSkyModelID, 1440.01, 384.844, 548.016, 312.748, 3, false)
FadeOut(maelstromSky, 0)

maelstromFire = SpawnModelActor( maelstromFireModelID, 1459.57, 363.551, 550.221, 131.407, .1, true)
FadeOut(maelstromFire, 0)

"
10063,Lorewalker 5.2 - S1: Zandalari - Lorewalker Cho - MASTER,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start

Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow ) 
musichandle = lorewalker:PlayMusic(36864) --Music Start 2:50
SendTrigger(""Music - Started"")
Wait(2)
lorewalker:BroadcastText(BroadcastType.Say, 72096) -- S1 001 [VO] 12
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 1"" )
lorewalker:FollowPathAtSpeed( 5504, 2, true )
Wait(2)
SendTrigger( ""Rastakhan - Cue 1"" )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72097) -- S1 002 [VO] 9.5
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 2"" )
Wait(5)
SendTrigger( ""Zul - Cue 1"" )
lorewalker:PlayOneShotAnimKit( 3229 )
Wait(4.5)
lorewalker:StopAnimKit( 3229 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72098) -- S1 003 [VO] 12.5
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 3"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4.5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72099) -- S1 004 [VO] 3
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
SendTrigger( ""Line 4"" )
rastakhan:PlayOneShotAnimKit( 3726 ) --Dismissive Gesture
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72100) -- S1 005 [VO] 14
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Zul - Cue 2"" )
Wait(5)
SendTrigger( ""Line 5"" )
lorewalker:PlayOneShotAnimKit( 3229 )

Wait(9)
lorewalker:StopAnimKit( 3229 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72101) -- S1 006 [VO] 3.25
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
nagaSpawner = 0 --Disables the naga spawner
rastakhan:PlayOneShotAnimKit( 3726 ) --Dismissive Gesture
SendTrigger( ""Line 6"" )

Wait(3.25)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72102) -- S1 007 [VO] 13
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 7"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(4)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72103) -- S1 008 [VO] 17
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 8"" )

Wait(5)
SendTrigger( ""Village - Cue 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:PlayOneShotAnimKit( 3229 )
Wait(7)
lorewalker:StopAnimKit( 3229 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72104) -- S1 009 [VO] 16
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 9"" )
Wait(1)
PlayOneShotSplitBodyAnim( rastakhan, Animations.EmotePoint )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
Wait(4)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:FollowPathAtSpeed( 5505, 2, true )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72105) -- S1 010 [VO] 4
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
lorewalker:FollowPathAtSpeed( 5506, 2, true )
SendTrigger( ""Line 10"" )
--SendTrigger( ""Rastakhan - Cue 2"" )
Wait(4)
lorewalker:WaitBroadcastSoundComplete()
"
10064,Lorewalker 5.2 - S2: Thunder - Init ,"-- Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, true )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, true )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, true )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, true )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, true )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, true )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, true )  -- Downstage Center bunny

--Sounds
thunderClapSound = 36949
distantThunderSound = 35066

--SpellVisuals
shadowSpellStateID = 30589
staticShockCastID = 31470
lightningSpellCastID = 30044
lightningSpell = 136730
windSpellCastID = 23141
windSpell = 113504
 
-- Props
sky1ModelID = ""ENVIRONMENTS\\STARS\\IsleoftheThunderKing_Sky01.M2""
sky2ModelID = ""ENVIRONMENTS\\STARS\\IsleoftheThunderKing_Sky01_Light.M2""
electricWaterModelID = ""SPELLS\\Jinrokh_ThunderTroll_ElectricWater_State.M2""
thunderDiscModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\ThunderKing_Disc.M2""
thunderDoorModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\ThunderKing_Door_Tall_01.M2""
thunderPillarModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\ThunderKing_Pillar.M2""
thunderPillar2ModelID = ""WORLD\\EXPANSION04\\DOODADS\\MOGU\\ThunderKing_LightningColumn_Taper.M2""
cloudModelID = ""WORLD\\ENVIRONMENT\\DOODAD\\GENERALDOODADS\\STEAMCLOUDS\\Generic_Steam_Cloud_Thin.M2""
rainbowModelID = ""WORLD\\EXPANSION02\\DOODADS\\SHOLAZARBASIN\\RAINBOW\\Sholazar_RainBow.m2""

sky1 = SpawnModelActor(sky1ModelID, 1459.61, 363.526, 568, 133.074, 5, false)
sky2 = SpawnModelActor(sky2ModelID, 1457.58, 365.699, 555, 133.074, 5, false)
FadeOut( sky1, 0 )
FadeOut( sky2, 0 )

pillarsSmall = SpawnModelActorsAtPoints( thunderPillarModelID, 5420, false)
for i=1, #pillarsSmall do
	pillarsSmall[i]:Fade( 0, 0 )
	--pillarsSmall[i]:SetScale( .5 )
	pillarsSmall[i]:MoveToRel(Vector:New(0,0,-5), 0)
end

pillarsLarge = SpawnModelActorsAtPoints( thunderPillar2ModelID, 5421, false)
for i=1, #pillarsLarge do
	pillarsLarge[i]:Fade( 0, 0 )
	pillarsLarge[i]:SetScale( .5 )
	pillarsLarge[i]:MoveToRel(Vector:New(0,0,-5), 0)
end

clouds = SpawnModelActorsAtPoints(cloudModelID, 5419, false)
for i=1, #clouds do
	clouds[i]:Fade( 0, 0 )
	clouds[i]:SetScale( 2 )
end

-- Creature IDs
thunderKingCreatureID = 69654
radenCreatureID = 69888
moguPolearmCreatureID = 61899
moguMaceCreatureID = 62427
moguFistCreatureID = 62428
moguCasterCreatureID = 61898
redCraneCreatureID = 59653

thunderKing = SpawnActor( thunderKingCreatureID, 1455.78, 367.911, 550.221, 133.074, .5, true)
FadeOut( thunderKing, 0 )

raden = SpawnActor(radenCreatureID, 1458.63, 364.686, 550.221, 131.273, 1, false)
FadeOut( raden, 0 )

mogu = SpawnFadedActorsAtPoints( moguFistCreatureID, 5418, true)
for i=1, #mogu do
	mogu[i]:SetScale( 0.75 )
end

redCrane = SpawnActor(redCraneCreatureID, 1463.41, 373.064, 550.222, 162.363, 1, true)
FadeOut(redCrane, 0)

rainbow = SpawnModelActor(rainbowModelID, 1454.98, 363.932, 550.222, 41.3925, .2, true)
rainbow2 = SpawnModelActor(rainbowModelID, 1452.18, 361.461, 550.222, 41.3925, .2, true)
FadeOut(rainbow, 0)
FadeOut(rainbow2, 0)

-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is

--Sounds
gong = 12827

-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
"
10065,Lorewalker 5.2 - S2: Thunder - Lorewalker Cho - MASTER ,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start
SendTrigger( ""Sky - cue 1"" )
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow ) 
musichandle = lorewalker:PlayMusic(36865) --Music Start 1:54
SendTrigger(""Music - Started"")
Wait(2)
lorewalker:BroadcastText(BroadcastType.Say, 72110) -- S2 001 [VO] 5
thunderKing:PlaySoundKit(thunderClapSound, true) -- Loud Thunder sound 
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )

Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72112) -- S2 002 [VO] 12
lorewalker:PlayOneShotAnimKit( 1024 )
SendTrigger( ""Ra-den - cue 1"" )
Wait(5)
SendTrigger( ""Thunder King - cue 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(2)

Wait(1)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72111) -- S2 003 [VO] 6
--SendTrigger( ""Ra-den - fade"" )
SendTrigger( ""mogu - cue 1"" )
--SendTrigger( ""Sky - cue 1"" )
lorewalker:PlayOneShotAnimKit( 1024 )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.KneelStart )
Wait(2)
PlayLoopingSplitBodyAnim( lorewalker, Animations.KneelLoop )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72113) -- S2 004 [VO] 3
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteNo )
StopLoopingSplitBodyAnim( lorewalker, Animations.KneelLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
--Wait(8)
--PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteNo )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72114) -- S2 005 [VO] 5
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:PlayOneShotAnimKit( 1024 )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(1)
SendTrigger( ""Thunder King - Lightning"" )
Wait(3)
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalkExclamation )
thunderKing:PlaySoundKit(distantThunderSound, true) -- Distant Thunder sound 

Wait(1)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72115) -- S2 006 [VO] 7
--SendTrigger( ""Pillars - cue 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
Wait(1)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72116) -- S2 007 [VO] 11
SendTrigger( ""Pillars - cue 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72117) -- S2 008 [VO] 14
SendTrigger( ""Pillars - cue 1b"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, "
10066,Lorewalker 5.2 - S3: Mogu Origin - Init ,"-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is

-- Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, true )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, true )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, true )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, true )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, true )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, true )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, true )  -- Downstage Center bunny

--Sounds
thunderClapSound = 35065
distantThunderSound = 35066

-- Spells and Visuals
shadowSpellStateID = 30589
squibID = 86438
cleaveID = 125299
staticShockCastID = 29651
lightningSpellCastID = 30044
lightningSpell = 136730


--Mantid exploder kit
mantidExplosionHeadID = 128992
mantidExplosionLegID = 128993
mantidExplosionPincerID = 128994
mantidExplosionBaseID = 128995
mantidExplosionBurstID = 129263 
sonicSpellID = 129008
sonicSpellVisualID = 27270
headID = 27264
legID = 27265
pincerID = 27266

-- Creature IDs
thunderKingCreatureID = 69654
radenCreatureID = 69888
archaedasCreatureID = 2748
freyaCreatureID = 32906

moguPolearmCreatureID = 61899
moguMaceCreatureID = 62427
moguFistCreatureID = 62428
moguCasterCreatureID = 61898
terrorcottaCreatureID = 62639
moguCivilianCreatureID = 70116

anduinCreatureID = 59215
varianCreatureID = 68921
wrathionCreatureID = 64809
deathwingCreatureID = 46471
thrallCreatureID = 68025
aggraCreatureID = 68038
menethilCreatureID = 70084
arthasGoodCreatureID = 24268
arthasEvilCreatureID = 24267
arthasLichCreatureID = 24266

mantidCreatureID = 66036

mantidPaths = { 5453, 5454, 5455 }
mantidPathsCasual = { 5456, 5457 }


-- Model IDs
babythrallModelID = ""WORLD\\GENERIC\\PASSIVEDOODADS\\BABIES\\Baby_Or.m2""
frostwolfModelID = ""CREATURE\\SPELLS\\BattleStandard_Frostwolf_A_01.M2""
cloudModelID = ""WORLD\\ENVIRONMENT\\DOODAD\\GENERALDOODADS\\STEAMCLOUDS\\Generic_Steam_Cloud_Thin.M2""
treeModelID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_ForestTree01.M2""

-- Spawn Wrynns
varian = SpawnActor( varianCreatureID, 1448.95, 363.081, 550.221, 64.6739, 1, true)
anduin = SpawnActor( anduinCreatureID, 1451.54, 369.987, 550.222, 252.331, 1, true)
FadeOut( varian, 0 )
FadeOut( anduin, 0 )

-- Spawn Dragons
wrathion = SpawnActor( wrathionCreatureID, 1454.56, 368.97, 550.221, 132.849, 1, true)
deathwing = SpawnActor( deathwingCreatureID, 1455.41, 368.057, 550.221, 132.849, .45, true)
FadeOut( wrathion, 0 )
FadeOut( deathwing, 0 )

-- Spawn Wrynns
thrall = SpawnActor( thrallCreatureID, 1461.91, 373.665, 550.221, 170.199, 1, true)
aggra = SpawnActor( aggraCreatureID, 1460.09, 371.991, 550.221, 89.8739, 1, true)
babythrall = SpawnModelActor( babythrallModelID, 1460.09, 373.98, 550.221, 170.199, 1, true)
frostwolfBanner = SpawnModelActor( frostwolfModelID, 1461.85, 375.206, 548.221, 198.099, 2, false)
FadeOut( thrall, 0 )
FadeOut( aggra, 0 )
FadeOut( babythrall, 0 )
FadeOut( frostwolfBanner, 0 )

-- Spawn Menethils
terenas = SpawnActor( menethilCreatureID, 1450.72, 370.584, 550.221, 79.7499, 1, true )
arthasGood = SpawnActor( arthasGoodCreatureID, 1451.11, 372.866, 550.221, 132.4, 1, true )
arthasEvil = SpawnActor( arthasEvilCreatureID, 1451.11, 372.866, 550.221, 132.4, 1, true )
arthasLich = SpawnActor( arthasLichCreatureID, 1451.11, 372.866, 550.221, 132.4, 1, true )
FadeOut( "
10067,Lorewalker 5.2 - S3: Mogu Origin - Lorewalker Cho - MASTER ,"WaitForTrigger( ""smoothPhaseComplete"" )
--OnScene start

musichandle = lorewalker:PlayMusic(36866) --Music Start 2:39
SendTrigger(""Music - Started"")
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
lorewalker:BroadcastText(BroadcastType.Say, 72122) -- S3 001 [VO] 10
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
SendTrigger( ""Line 1"" )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(1.75)

lorewalker:BroadcastText(BroadcastType.Say, 72123) -- S3 002 [VO] 4
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 2"" )
lorewalker:FollowPathAtSpeed( 5450, 2, false )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(4)

lorewalker:WaitBroadcastSoundComplete()
Wait(1.75)

lorewalker:BroadcastText(BroadcastType.Say, 72124) -- S3 003 [VO] 3
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Line 3"" )

Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(1.75)

lorewalker:BroadcastText(BroadcastType.Say, 72125) -- S3 004 [VO] 7
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 4"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(1.75)

lorewalker:BroadcastText(BroadcastType.Say, 72126) -- S3 005 [VO] 9
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:FollowPathAtSpeed( 5465, 2, false )
SendTrigger( ""Line 5"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(4)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72127) -- S3 006 [VO] 11
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:PlayOneShotAnimKit( 1024 )
lorewalker:FollowPathAtSpeed( 5561, 2, false )
SendTrigger( ""Line 6"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72128) -- S3 007 [VO] 11
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 7"" )
Wait(5)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:PlayOneShotAnimKit( 1024 )
Wait(2)
SendTrigger( ""Actives - Cue 1"" )
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72129) -- S3 008 [VO] 11
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 8"" )
lorewalker:FollowPathAtSpeed( 5466, 2, false )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
SendTrigger( ""Actives - Cue 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(5)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
--Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72130) -- S3 009 [VO] 7
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 9"" )
Wait(3)
Wait(1)
SendTrigger( ""Changer - Cue 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72131) -- S3 010 [VO] 11
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk "
10068,Lorewalker 5.2 - S2: Thunder - Thunder King ,"WaitForTrigger( ""smoothPhaseComplete"" )

--When called, fade in
WaitForTrigger( ""Thunder King - cue 1"" )
Wait(2)
thunderKing:PlaySpellCastVisual(staticShockCastID)
FadeIn( thunderKing, 2 )

--Face Audience
SendTrigger( ""Ra-den - fade"" )
--thunderKing: SetFacing(131.273)
RunToLocation( thunderKing, 0.5, 1452.92, 370.689, 550.221, 133.074, true)

--Lightning Strike
WaitForTrigger( ""Thunder King - Lightning"" )
Lightning(light_cl)

--Fade Out after Proclamation
WaitForTrigger( ""Thunder King - Fade"" )
FadeOut( thunderKing, 2 )"
10069,Lorewalker 5.2 - S2: Thunder - Ra-den ,"--Prep
WaitForTrigger( ""smoothPhaseComplete"" )
raden:PlaySpellStateVisual(shadowSpellStateID)
PlayLoopingSplitBodyAnim( raden, Animations.CustomSpell02 )

--When called, fade in
WaitForTrigger( ""Ra-den - cue 1"" )
raden:Fade( .4, 2 )

--Fade out
WaitForTrigger( ""Ra-den - fade"" )
raden:Fade( 0, 2 )"
10070,Lorewalker 5.2 - S2: Thunder - Sky 1,"--When called, fade in
WaitForTrigger( ""Sky - cue 1"" )
sky1:Fade( .8, 300 )
sky1:MoveToRel(Vector:New(5, 5, 0), 300)

--When called, fade out
WaitForTrigger( ""Sky - Fade"" )
sky1:Fade( 0, 2 ) "
10071,Lorewalker 5.2 - S2: Thunder - Sky 2,"--When called, fade in
WaitForTrigger( ""Sky - cue 1"" )
sky2:Fade( .5, 60 )
sky2:MoveToRel(Vector:New(-5, -5, 5), 300)

--When called, fade out
WaitForTrigger( ""Sky - Fade"" )
sky2:Fade( 0, 2 ) "
10072,Lorewalker 5.2 - S2: Thunder - Mogu,"--Prep
WaitForTrigger( ""smoothPhaseComplete"" )

--[[for i=1, #mogu do
	PlayLoopingSplitBodyAnim( mogu[i], Animations.KneelLoop )
end]]--

WaitForTrigger( ""mogu - cue 1"" )
MoguMove(mogu[1])
--[[for i=1, #mogu do
	MoguMove(mogu[i])
	--mogu[i]:Fade( .5, 2 )
	--PlayOneShotSplitBodyAnim( mogu[i], Animations.KneelStart )
end]]--

--Fade Out after Proclamation
WaitForTrigger( ""Thunder King - Fade"" )
for i=1, #mogu do
	mogu[i]:Fade( 0, 2 )
end "
10073,Lorewalker 5.2 - S2: Thunder - Clouds,"--When called, fade in
WaitForTrigger( ""Sky - cue 1"" )

for i=1, #clouds do
	clouds[i]:Fade( 1, 5 )
end 

WaitForTrigger( ""Sky - Fade"" )

for i=1, #clouds do
	clouds[i]:Fade( 0, 2 )
end "
10074,Lorewalker 5.2 - S2: Thunder - Pillars,"--Prep
WaitForTrigger( ""smoothPhaseComplete"" )
for i=1, #pillarsSmall do
	PlayLoopingSplitBodyAnim( pillarsSmall[i], Animations.Closed )
end

--When called, fade in, move up
WaitForTrigger( ""Pillars - cue 1b"" )

for i=1, #pillarsSmall do
	pillarsSmall[i]:Fade( 1, 2 )
	pillarsSmall[i]:MoveToRel(Vector:New(0,0,5), 5 )
end

--Activate Pillars
WaitForTrigger( ""Pillars - cue 2"" )
for i=1, #pillarsSmall do
	PlayLoopingSplitBodyAnim( pillarsSmall[i], Animations.CustomSpell01 )
end

--Clear Pillars
WaitForTrigger( ""Pillars - cue 3"" )
for i=1, #pillarsSmall do
	pillarsSmall[i]:Fade( 0, 2 )
end

 "
10075,Lorewalker 5.2 - S2: Thunder - Pillars_Larg,"--Prep
WaitForTrigger( ""smoothPhaseComplete"" )
for i=1, #pillarsLarge do
	PlayLoopingSplitBodyAnim( pillarsLarge[i], Animations.Closed )
end

--When called, fade in, move up
WaitForTrigger( ""Pillars - cue 1"" )

for i=1, #pillarsLarge do
	pillarsLarge[i]:Fade( 1, 5 )
	--pillarsLarge[i]:MoveToRel(Vector:New(0,0,10), 5 )
end

--Wait(2)

--Activate Pillars
WaitForTrigger( ""Pillars - cue 2"" )
for i=1, #pillarsLarge do
	PlayLoopingSplitBodyAnim( pillarsLarge[i], Animations.CustomSpell01 )
end

--Clear Pillars
WaitForTrigger( ""Pillars - cue 3"" )
for i=1, #pillarsLarge do
	pillarsLarge[i]:Fade( 0, 2 )
end "
10076,Lorewalker 5.2 - S2: Thunder - Functions ,"--One off helper functions

function MoguMove(actor)
	actor:Fade( 1, 2 )
	actor:FollowRelativePathAtSpeed ( 5422, 2, true )
	actor:WaitMovementComplete()
	PlayOneShotSplitBodyAnim( actor, Animations.KneelStart )
	Wait(1.37)
	PlayLoopingSplitBodyAnim( actor, Animations.KneelLoop )
end

function Lightning(actor)
	--CastSpellAtActor(actor, actor, lightningSpell)
	actor:PlaySpellCastVisual(lightningSpellCastID)
end"
10077,[1] Lorewalker 5.2 - S2: Thunder - Init ,"-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
SendTrigger(""smoothPhaseComplete"")"
10078,Lorewalker 5.2 - S2: Thunder - Red Crane,"--Fade in Red Crane when Thunder King fades
WaitForTrigger( ""Red Crane - Fade"" )
redCrane:Fade( 1, 2 )
redCrane:PlaySpellCastVisual(windSpellCastID)
Wait(1)
SendTrigger( ""Sky - Fade"" )
Wait(2)
FadeIn(rainbow, 2)
FadeIn(rainbow2, 2)


--Fade out Red Crane
WaitForTrigger( ""Red Crane - Fade Out"" )
redCrane:Fade( 0, 2 )
rainbow:Fade( 0, 2 )
rainbow2:Fade( 0, 2 )
"
10079,Lorewalker 5.2 - S2: Thunder - Mogu2,"WaitForTrigger( ""mogu - cue 1"" )
MoguMove(mogu[2])
"
10080,Lorewalker 5.2 - S2: Thunder - Mogu3,"WaitForTrigger( ""mogu - cue 1"" )
MoguMove(mogu[3])
"
10081,Lorewalker 5.2 - S2: Thunder - Mogu4,"WaitForTrigger( ""mogu - cue 1"" )
MoguMove(mogu[4])
"
10082,Lorewalker 5.2 - S1: Zandalari - Rastakhan,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start
rastakhan:PlayLoopingAnimKit(3695)
rastakhan:PlaySpellStateVisual(eyeGlowStateID)
--rastakhan:PlaySpellStateVisual(24841)

--Fade In on cue
WaitForTrigger( ""Rastakhan - Cue 1"" )
FadeIn(rastakhan, 2)
FadeIn(throne, 2)

WaitForTrigger( ""Line 10"" )
FadeOut(rastakhan, 2)
FadeOut(throne, 2)

WaitForTrigger( ""Line 12"" )
FadeIn(rastakhan, 2)
FadeIn(throne, 2)

WaitForTrigger( ""Rastakhan - Cue 2"" )
FadeOut(rastakhan, 2)
FadeOut(throne, 2)
"
10083,Lorewalker 5.2 - S1: Zandalari - Zul,"local moveData = MoveData:Default()
moveData.pathID = 5426
moveData.speed = 2
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true
--moveData.animKitID = 1395

WaitForTrigger(""smoothPhaseComplete"")
--OnScene start
--zul:PlayLoopingAnimKit( 3725 )

--Fade In on cue
WaitForTrigger( ""Zul - Cue 1"" )
zul:Move(moveData)
FadeIn(zul, 2)
zul:WaitMovementComplete()

PlayOneShotSplitBodyAnim(zul, Animations.EmoteBow)
Wait(2.67)
PlayOneShotSplitBodyAnim(zul, Animations.EmoteTalk)

--Wait to despawn
WaitForTrigger( ""Line 4"" )
zul:Fade( 0, 2)

--Line 5 go
WaitForTrigger( ""Zul - Cue 2"" )
zul:Move(moveData)
FadeIn(zul, 2)
zul:WaitMovementComplete()

PlayOneShotSplitBodyAnim(zul, Animations.EmoteBeg)
Wait(2.67)
PlayOneShotSplitBodyAnim(zul, Animations.EmoteTalk)


--Wait to despawn
WaitForTrigger( ""Line 6"" )
zul:Fade( 0, 2)

--Line 7 go
WaitForTrigger( ""Line 7"" )
zul:Move(moveData)
FadeIn(zul, 2)
zul:WaitMovementComplete()

PlayLoopingSplitBodyAnim(zul, Animations.EmoteBeg)


--Wait to despawn
WaitForTrigger( ""Line 9"" )
--zul:Fade( 0, 2)
StopLoopingSplitBodyAnim(zul, Animations.EmoteBeg)
Wait(1)
PlayOneShotSplitBodyAnim(zul, Animations.EmoteBow)
Wait(2.67)
zul:SetFacing( 133.339 )
Wait(1)
RunToLocation( zul, 2, 1451.02, 373.148, 550.221, 133.339, true)

WaitForTrigger( ""Line 10"" )
FadeOut(zul, 2)

WaitForTrigger( ""Line 12"" )
FadeIn(zul, 2)

WaitForTrigger( ""Zul - Cue 3"" )
FadeOut(zul, 2)
"
10084,Lorewalker 5.2 - S1: Zandalari - Deathwing,"local moveData = MoveData:Default()
moveData.pathID = 5425
moveData.speed = 3
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = false
--moveData.animKitID = 1395

--Setup
WaitForTrigger( ""Line 3"" )
--deathwing:FollowPathAtSpeed(5424, 2)

--Circle globe
WaitForTrigger( ""Deathwing - Cue 1"" )
deathwing:Fade( .75, 2 )
deathwing:Move(moveData)
deathwing:WaitMovementComplete()


--Wait to despawn
WaitForTrigger( ""Line 4"" )
deathwing:Fade( 0, 2)
"
10085,Lorewalker 5.2 - S1: Zandalari - Globe of Azeroth,"WaitForTrigger( ""Line 3"" )
globe:Fade( .75, 2 )
globe:FollowPathAtSpeed(5424, 2)
globe:WaitMovementComplete()

SendTrigger( ""Deathwing - Cue 1"" )
PlayOneShotSplitBodyAnim( globe, Animations.Custom0 )
--Wait(33.21)
--PlayLoopingSplitBodyAnim( globe, Animations.Closed )

--Wait to despawn
WaitForTrigger( ""Line 4"" )
globe:Fade( 0, 2)"
10086,Lorewalker 5.2 - S1: Zandalari - Troll Guards,"WaitForTrigger(""smoothPhaseComplete"")
for i=1, #trollGuards do
	trollGuards[i]:SetScale( 2 )
end

--Fade In on cue
WaitForTrigger( ""Line 2"" )--( ""Rastakhan - Cue 1"" )
for i=1, #trollGuards do
	trollGuards[i]:Fade( .75, 2 )
end

WaitForTrigger( ""Line 10"" )
for i=1, #trollGuards do
	trollGuards[i]:Fade( 0, 2 )
end

WaitForTrigger( ""Line 12"" )
for i=1, #trollGuards do
	trollGuards[i]:Fade( .75, 2 )
end

WaitForTrigger( ""Peasants - Cue 1"" )
Wait(3)
for i=1, #trollGuards do
	Wait(.25)
	trollGuards[i]:FollowPathAtSpeed( 5445, 2, false )
	trollGuards[i]:Fade( 0, 4 )
end

WaitForTrigger( ""Rastakhan - Cue 2"" )
for i=1, #trollGuards do
	trollGuards[i]:Fade( 0, 2 )
end"
10087,Lorewalker 5.2 - S1: Zandalari - Fissure,"WaitForTrigger(""smoothPhaseComplete"")
PlayLoopingSplitBodyAnim(fissure, Animations.Opened)

WaitForTrigger( ""Line 5"" )
fissure:Fade( .75, 2 )
Wait(2)
StopLoopingSplitBodyAnim(fissure, Animations.Opened)
PlayOneShotSplitBodyAnim(fissure, Animations.Close)

WaitForTrigger( ""Line 6"" )
fissure:Fade( 0, 2 )"
10088,Lorewalker 5.2 - S1: Zandalari - Naga1,"WaitForTrigger(""smoothPhaseComplete"")


WaitForTrigger( ""Line 5"" )
nagaSpawner = 1
NagaController(1)

"
10089,Lorewalker 5.2 - S1: Zandalari - Functions,"nagaSquad = { }

function NagaController(nagaID)

	while (nagaSpawner == 1) do
		local naga = SpawnFadedActorAtPoint( nagaCreatureID, 5428, false )
		naga:SetScale(.25)
		Wait(1)
		nagaSquad[nagaID] =
		{
			actor = naga;
			id = nagaID
		}

		local pathID = nagaPaths[math.random(#nagaPaths)]

		while (nagaSquad[nagaID]) do
			scene:WaitTimer((math.random(0, 1.75)))
			local setupPaths = { 5434, 5435, 5436, 5437 }
			local setupPath = setupPaths[math.random(#setupPaths)]
			local setupPathData = MoveData:Default()
			setupPathData.pathID = setupPath
			setupPathData.teleportToFirstPoint = true
			

			local path = pathID
			local speed = math.random(2, 4)
			local moveData = MoveData:Default()
			moveData.pathID = path
			moveData.speed = speed
			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = true
			moveData.teleportToFirstPoint = false
			moveData.animKitID = 3698

			naga:Move( setupPathData )
			naga:Move( moveData )
			naga:Fade(1, 2)
			Wait(1)
			naga:Fade(0, 2)
			Wait(2)
		end
		
	end

end"
10090,Lorewalker 5.2 - S1: Zandalari - Naga2,"WaitForTrigger( ""Line 5"" )
NagaController(2)
"
10091,Lorewalker 5.2 - S1: Zandalari - Naga3,"WaitForTrigger( ""Line 5"" )
NagaController(3)
"
10092,Lorewalker 5.2 - S1: Zandalari - Naga4,"WaitForTrigger( ""Line 5"" )
NagaController(4)
"
10093,Lorewalker 5.2 - S1: Zandalari - Naga5,"WaitForTrigger( ""Line 5"" )
NagaController(5)
"
10094,Lorewalker 5.2 - S1: Zandalari - Naga6,"WaitForTrigger( ""Line 5"" )
NagaController(6)
"
10095,Lorewalker 5.2 - S1: Zandalari - Naga7,"WaitForTrigger( ""Line 5"" )
NagaController(7)
"
10096,Lorewalker 5.2 - S1: Zandalari - Naga Wrap-up,"WaitForTrigger( ""Line 6"" )

for i=1, #nagaSquad do
	if (nagaSquad[i].actor ~= nil) then
		nagaSquad[i].actor:Despawn()
		nagaSquad[i].id = nil
	end
end"
10097,Lorewalker 5.2 - S1: Zandalari - Tentacle,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start
for i=1, #tentacle do
	--local tentacleScale = math.random( 0.3, 0.7 )
	tentacle[i]:SetScale(.15)
end

WaitForTrigger( ""Line 5"" )
Wait(2)
for i=1, #tentacle do
	tentacle[i]:Fade( 0.75, 2)
end

WaitForTrigger( ""Line 6"" )
for i=1, #tentacle do
	tentacle[i]:Fade(0, 2)
end"
10098,Lorewalker 5.2 - S1: Zandalari - VisionBunny,"WaitForTrigger(""smoothPhaseComplete"")
--OnScene start

smallQuakeBunnies = { }

 
WaitForTrigger( ""Line 7"" )
Wait(3)
for i=1, #quakeBunnies do
	local waitTime = math.random( 0, 0.5 )
	Wait( waitTime )
	smallQuakeBunnies[i] =
	{
		actor = quakeBunnies[i];
		aura = quakeBunnies[i]:PlaySpellStateVisual( earthquakeStateID );
	}
end

--local earthquake1 = visionBunny:PlaySpellStateVisual( earthquakeStateID )

WaitForTrigger( ""Line 8"" )
for i=1, #smallQuakeBunnies do
	quakeBunnies[i]:ClearSpellVisual( smallQuakeBunnies[i].aura )
end
"
10099,Lorewalker 5.2 - S1: Zandalari - Huts,"WaitForTrigger(""smoothPhaseComplete"")
for i=1, #huts1 do
	huts1[i]:SetScale( 0.1 )
end
for i=1, #huts2 do
	huts2[i]:SetScale( 0.1 )
end
for i=1, #banners do
	banners[i]:SetScale( 0.1 )
end

WaitForTrigger( ""Line 8"" )
for i=1, #huts1 do
	huts1[i]:Fade( .75, 2 )
end
for i=1, #huts2 do
	huts2[i]:Fade( .75, 2 )
end
for i=1, #banners do
	banners[i]:Fade( .75, 2 )
end

WaitForTrigger( ""Village - Cue 1"" )
Wait(2)
for i=1, #huts1 do
	huts1[i]:Fade( 0, 2 )
end
for i=1, #huts2 do
	huts2[i]:Fade( 0, 2 )
end
for i=1, #banners do
	banners[i]:Fade( 0, 2 )
end"
10100,[1] Lorewalker 5.2 - S1: Zandalari - Init,"maelstromWaves = SpawnModelActorsAtPoints(maelstromWavesModelID, 5448, false)
for i=1, #maelstromWaves do
	maelstromWaves[i]:SetScale( 0.3 )
	maelstromWaves[i]:Fade(0, 0)
end


-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645, 1, true )  -- Lorewalker Cho spawns where the normal NPC is

--Sounds
gong = 12827

-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
SendTrigger(""smoothPhaseComplete"")"
10101,Lorewalker 5.2 - S1: Zandalari - Wave,"WaitForTrigger(""smoothPhaseComplete"")
PlayLoopingSplitBodyAnim( wave, Animations.Decay )
wave:SetScale(.5)

WaitForTrigger( ""Village - Cue 1"" )
PlayOneShotSplitBodyAnim( wave, Animations.InFlight )
wave:Fade( .75, 2 )
wave:FollowPathAtSpeed( 5443, 5 )
Wait(2)
PlayLoopingSplitBodyAnim( wave, Animations.Hold )
Wait(1)
wave:Fade( 0, 2 )"
10102,Lorewalker 5.2 - S1: Zandalari - Lights,"WaitForTrigger(""smoothPhaseComplete"")

WaitForTrigger( ""Rastakhan - Cue 1"" )
--light_ul:Fade( .75, 2)
light_uc:Fade( .75, 2)
--light_ur:Fade( .75, 2)

WaitForTrigger( ""Line 10"" )
FadeOut(light_uc, 2)

WaitForTrigger( ""Line 12"" )
light_uc:Fade( .75, 2)

WaitForTrigger( ""Rastakhan - Cue 2"" )
light_uc:Fade( 0, 2)
light_dc:Fade( .75, 2)
"
10103,Lorewalker 5.2 - S1: Zandalari - Peasants,"WaitForTrigger( ""Line 1"" )
for i=1, #peasants do
	Wait(.5)
	PlayLoopingSplitBodyAnim( peasants[i], Animations.EmoteBeg )
end

WaitForTrigger( ""Line 12"" )
for i=1, #peasants do
	peasants[i]:Fade( .75, 2 )
end

WaitForTrigger( ""Peasants - Cue 1"" )
for i=1, #peasants do
	StopLoopingSplitBodyAnim( peasants[i], Animations.EmoteBeg )
	peasants[i]:SetFacingToAbs(Vector:New(1451.02, 373.148, 550.221)) 
	Wait(.25)
	peasants[i]:FollowPathAtSpeed( 5445, 2, false )
	peasants[i]:Fade( 0, 4 )
end"
10104,Lorewalker 5.2 - S3: Mogu Origin - Terrorcotta Army,"--Terrorcotta fade in
WaitForTrigger( ""Line 6"" )
for i=1, #terrorcotta do
	terrorcotta[i]:Fade( .75, 2 )
	terrorcotta[i]:FollowRelativePathAtSpeed( 5452, 1 )
end

WaitForTrigger( ""Line 7"" )
for i=1, #terrorcotta do
	terrorcotta[i]:Fade( 0, 2 )
end"
10105,Lorewalker 5.2 - S1: Zandalari - Maelstrom,"WaitForTrigger( ""Line 11"" )
maelstromSky:Fade( .25, 2 )
maelstromFire:Fade( .75, 2 )
for i=1, #maelstromWaves do
	maelstromWaves[i]:Fade(.75, 2)
end

WaitForTrigger( ""Line 12"" )
maelstromSky:Fade( 0, 2 )
maelstromFire:Fade( 0, 2 )

WaitForTrigger( ""Line 14"" )
for i=1, #maelstromWaves do
	maelstromWaves[i]:Fade(0, 2)
end"
10106,Lorewalker 5.2 - S1: Zandalari - Deathwing - Large,"local moveData = MoveData:Default()
moveData.pathID = 5447
moveData.speed = 6
moveData.posControl = MovePosControl.ConstantSpeed
moveData.yawControl = MoveRotControl.Tangent
moveData.pitchControl = MoveRotControl.Tangent
moveData.rollControl = MoveRotControl.Angle
moveData.isRelative = false
moveData.teleportToFirstPoint = true
--moveData.animKitID = 1395

WaitForTrigger( ""Line 9"" )
deathwing:SetScale( .075 )
deathwing:MoveToRel(Vector:New(-200, -200, -200), .5)

--Circle globe
WaitForTrigger( ""Deathwing - Cue 2"" )
deathwing:Fade( .75, 2 )
deathwing:Move(moveData)
Wait(4)
deathwing:Fade( 0, 2)"
10107,Lorewalker 5.2 - S3: Mogu Origin - Wrynns ,"--Scene setup
WaitForTrigger( ""smoothPhaseComplete"" )

--Wait for appropriate Line
WaitForTrigger( ""Line 2"" )
light_cl:Fade( .75, 2 )
varian:Fade( 1, 2 )
Wait(1)
anduin:Fade( 1, 2 )
--Wait(1)
RunToLocation( anduin, 4, 1449.26, 363.719, 550.221, 249.85, true)
varian:PlayOneShotAnimKit( 3477 )

WaitForTrigger( ""Line 5"" )
light_cl:Fade( 0, 2 )
varian:Fade( 0, 2 )
anduin:Fade( 0, 2 )"
10108,Lorewalker 5.2 - S3: Mogu Origin - Dragons ,"--Scene setup
WaitForTrigger( ""smoothPhaseComplete"" )
--deathwing:SetScale( 0.35 )

--Wait for appropriate Line
WaitForTrigger( ""Line 3"" )
light_cc:Fade( .75, 2 )
deathwing:Fade( 1, 2 )
Wait(1)
wrathion:Fade( 1, 2 )

--Wait for Arthas
WaitForTrigger( ""Line 5"" )
light_cc:Fade( 0, 2 )
deathwing:Fade( 0, 2 )
wrathion:Fade( 0, 2 ) "
10109,Lorewalker 5.2 - S3: Mogu Origin - Frostwolves ,"--Scene setup
WaitForTrigger( ""smoothPhaseComplete"" )
PlayLoopingSplitBodyAnim( aggra, Animations.KneelLoop )

--Wait for appropriate Line
WaitForTrigger( ""Line 4"" )
thrall:Fade( 1, 2 )
aggra:Fade( 1, 2 )
babythrall:Fade( 1, 2 )
frostwolfBanner:Fade( 1, 2 )
light_cr:Fade( .75, 2 )

--Wait for Arthas
WaitForTrigger( ""Line 5"" )
thrall:Fade( 0, 2 )
aggra:Fade( 0, 2 )
babythrall:Fade( 0, 2 )
frostwolfBanner:Fade( 0, 2 )
light_cr:Fade( 0, 2 )
"
10110,[1] Lorewalker 5.2 - S3: Mogu Origin - Init ,"terenas, 0 )
FadeOut( arthasGood, 0 )
FadeOut( arthasEvil, 0 )
FadeOut( arthasLich, 0 )

-- Spawn Titans
titan1 = SpawnActor( radenCreatureID, 1460.79, 362.885, 551.808, 133.37, .75, false)
titan2 = SpawnActor( archaedasCreatureID, 1466.13, 366.147, 551.808, 152.721, 1, false)
titan3 = SpawnActor( freyaCreatureID, 1456.88, 357.716, 551.808, 101.35, .65, false)
titan1:Fade( 0, 0 )
titan2:Fade( 0, 0 )
titan3:Fade( 0, 0 )

titanClouds = SpawnModelActorsAtPoints( cloudModelID, 5451, false )
for i=1, #titanClouds do
	titanClouds[i]:Fade( 0, 0 )
end

-- Spawn Terrorcotta Army
terrorcotta = SpawnFadedActorsAtPoints ( terrorcottaCreatureID, 5446, true)

-- Spawn Active Terrorcotta
terrorcotta1 = SpawnActor( terrorcottaCreatureID, 1456.95, 371.09, 550.221, 68.7243, 1, true)
terrorcotta2 = SpawnActor( terrorcottaCreatureID, 1462.51, 371.127, 550.221, 93.9243, 1, true)
terrorcotta3 = SpawnActor( terrorcottaCreatureID, 1452.04, 363.407, 550.221, 176.498, 1, true)
tree = SpawnModelActor( treeModelID, 1448.7, 363.611, 550.221, 176.498, 1, true )
FadeOut( terrorcotta1, 0 )
FadeOut( terrorcotta2, 0 )
FadeOut( terrorcotta3, 0 )
FadeOut( tree, 0 )

--Spawn Trees
trees = SpawnModelActorsAtPoints( treeModelID, 5462, true )
for i=1, #trees do
	trees[i]:Fade( 0, 0 )
	trees[i]:SetScale( 0 )
end

-- Spawn Changers
changerTerrorcotta = SpawnActor( terrorcottaCreatureID, 1458.58, 364.596, 550.221, 131.499, 1, true)
changerMogu = SpawnActor( moguCivilianCreatureID, 1454.4, 369.434, 550.221, 128.349, 1.5, true)
FadeOut( changerTerrorcotta, 0 )
FadeOut( changerMogu, 0 )

-- Spawn Confused Mogu
confusedMogu = SpawnFadedActorsAtPoints( moguCivilianCreatureID, 5459, true )

--Spawn Thunder King
thunderKing = SpawnActor( thunderKingCreatureID, 1454.4, 369.434, 550.221, 128.349, .4, true)
FadeOut( thunderKing, 0 )

--Spawn Organized Mogu
organizedMogu = SpawnFadedActorsAtPoints( moguCasterCreatureID, 5446, true)
for i=1, #organizedMogu do
	organizedMogu[i]:SetScale(.75)
end

--Spawn Saurok
hackID = 61935
healID = 61934
tankID = 61933

saurok_hack = SpawnActor( hackID, 1444.99, 369.464, 550.221, 80.2635 ) -- Hacky saurok
saurok_heal = SpawnActor( healID, 1451.06, 366.152, 550.222, 125.206 ) -- Healy saurok
saurok_tank = SpawnActor( tankID, 1446.62, 363.511, 550.222, 100.456 ) -- Tank saurok

--Fade out until needed
FadeOut(saurok_hack, 0)
FadeOut(saurok_heal, 0)
FadeOut(saurok_tank, 0)

--Spawn and Hide Quillen
quilenCreatureID = 63627

quilen1 = SpawnActor( quilenCreatureID, 1459.3, 373.455, 550.222, 162.781, 2, true)
quilen2 = SpawnActor( quilenCreatureID, 1459.84, 376.878, 550.222, 162.781, 1.25, true) 
quilen3 = SpawnActor( quilenCreatureID, 1461.02, 379.266, 550.222, 180.549, 2, true)
quilen4 = SpawnActor( quilenCreatureID, 1456.29, 377.482, 550.222, 177.624, 1.25, true) 


--Fade out until needed
FadeOut(quilen1, 0)
FadeOut(quilen2, 0)
FadeOut(quilen3, 0)
FadeOut(quilen4, 0)

--Spawn final Constructs
terrorcottaFinal1 = SpawnActor( terrorcottaCreatureID, 1468.84, 372.477, 550.222, 131.952, 2, true )
terrorcottaFinal2 = SpawnActor( terrorcottaCreatureID, 1448.85, 354.507, 550.222, 131.952, 2, true )
FadeOut( terrorcottaFinal1, 0 )
FadeOut( terrorcottaFinal2, 0 )

--Sounds
gong = 12827

-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) "
10111,Lorewalker 5.2 - S3: Mogu Origin - Menethils ,"--Scene setup
WaitForTrigger( ""smoothPhaseComplete"" )

--Wait for appropriate Line
WaitForTrigger( ""Line 5"" )
light_dc:Fade( .75, 2 )
terenas:Fade( .75, 2 )
--Wait(2)
arthasGood:Fade( .75, 2 )
Wait(3)
arthasGood:Fade( 0, 1 )
arthasEvil:Fade( .75, 1 )
Wait(2)
terenas:Fade( 0, 2 )
arthasEvil:Fade( 0, 1 )
arthasLich:Fade( .75, 1 )

--Wait for Arthas
WaitForTrigger( ""Line 6"" )
arthasLich:Fade( 0, 2 )
light_dc:Fade( 0, 2 )
"
10112,Lorewalker 5.2 - S3: Mogu Origin - Titans,"WaitForTrigger( ""Line 1"" )
titan1:PlaySpellStateVisual( shadowSpellStateID )
titan2:PlaySpellStateVisual( shadowSpellStateID )
titan3:PlaySpellStateVisual( shadowSpellStateID )

WaitForTrigger( ""Line 6"" )
for i=1, #titanClouds do
	titanClouds[i]:Fade( 1, 2 )
end
Wait(3)
titan1:Fade( .75, 2 )
titan2:Fade( .75, 2 )
titan3:Fade( .75, 2 ) 

WaitForTrigger( ""Line 9"" )
titan3:Fade( 0, 5 ) 
Wait(2)
titan2:Fade( 0, 5 )
Wait(2)
titan1:Fade( 0, 5 )
for i=1, #titanClouds do
	titanClouds[i]:Fade( 0, 2 )
end"
10113,Lorewalker 5.2 - S3: Mogu Origin - Terrorcotta - Actives,"--Scene setup
WaitForTrigger( ""smoothPhaseComplete"" )
--PlayLoopingSplitBodyAnim( terrorcotta1, Animations.Ready2H )
PlayLoopingSplitBodyAnim( terrorcotta2, Animations.Ready2HL )
--PlayLoopingSplitBodyAnim( terrorcotta3, Animations.MonkHealChannelCastOmni )
PlayLoopingSplitBodyAnim( terrorcotta3, Animations.ChannelCastDirected )
tree:SetScale( .1 )
terrorcotta3:EquipWeapon( 1, 0 )

--Terrorcotta fade in
WaitForTrigger( ""Line 7"" )
terrorcotta1:Fade( .75, 2 )
terrorcotta2:Fade( .75, 2 )
terrorcotta3:Fade( .75, 2 )

WaitForTrigger( ""Actives - Cue 1"" )
tree:Fade( .75, 2 )
tree:SetScale( .2 )

--Terrorcotta fade out
WaitForTrigger( ""Line 8"" )
terrorcotta1:Fade( 0, 2 )
terrorcotta2:Fade( 0, 2 )
terrorcotta3:Fade( 0, 2 )
tree:Fade( 0, 2 )
"
10114,Lorewalker 5.2 - S3: Mogu Origin - Mantid Kill,"--Helper function
mantidLoop = 0

--Scene setup
WaitForTrigger( ""smoothPhaseComplete"" )

WaitForTrigger( ""Line 7"" )
-- tower waits random times to shoot at mantid
while true do

	Wait(math.random(0, 1))

	-- look for a random mantid
	local aliveMantid = { }
	for i,mantid in pairs(mantids) do
		if (mantid ~= nil) then
			table.insert(aliveMantid, mantid)
		end
	end

	local numAlive = #aliveMantid
	if (numAlive > 0) then

		local mantidDesc = aliveMantid[math.random(#aliveMantid)]
		local mantid = mantidDesc.actor

		local moveData2 = MoveData:Default()
		
		moveData2.pathID = mantidPaths[math.random(#mantidPaths)]
		moveData2.speed = 19 + math.random(0, 5)

		moveData2.posControl = MovePosControl.ConstantSpeed
		moveData2.yawControl = MoveRotControl.Tangent
		moveData2.pitchControl = MoveRotControl.Tangent
		moveData2.rollControl = MoveRotControl.Angle
		moveData2.isRelative = false
		moveData2.teleportToFirstPoint = true
		moveData2.animKitID = 1395

		mantid:Move( moveData2 )

		
		mantid:WaitMovementComplete()  

		-- kill the mantid!
		CastSpellAtActor( terrorcotta1, mantid, cleaveID, false )
		
		--Wait(1) This gives the spell time to visualy hit the target.
		MantidExplode(mantid)

		-- stop the mantid from moving (HACK by falling down quickly)
		mantid:MoveToRel(Vector:New(0,0,-2), 0.5)
		
		-- remove from list so it respawns
		mantids[mantidDesc.id] = nil
	end

end"
10115,Lorewalker 5.2 - S3: Mogu Origin - function,"mantids = { }

function MissilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, 10)
	local spot2 = math.random(-10, 10)
	local spot3 = math.random(-10, 10) 

	--print(""x="" .. spot1 .. "", y="" .. spot2 .. "", z="" .. spot3)

	local missilePos = casterPos + Vector:New(spot1, spot2, spot3)
	return missilePos
end

function MantidExplode(explodingMantid)
	local casterPos = explodingMantid:GetPosition()
	local missilePos1 = MissilePosRand(casterPos) 
	local missilePos2 = MissilePosRand(casterPos)
	local missilePos3 = MissilePosRand(casterPos)
	local missilePos4 = MissilePosRand(casterPos)
	local missilePos5 = MissilePosRand(casterPos)
	local missilePos6 = MissilePosRand(casterPos)
	local missilePos7 = MissilePosRand(casterPos)
	local pointList1 = {missilePos1}
	local pointList2 = {missilePos2}
	local pointList3 = {missilePos3} 
	local pointList4 = {missilePos4}
	local pointList5 = {missilePos5} 
	local pointList6 = {missilePos6}   
	local pointList7 = {missilePos6}
	explodingMantid:PlaySpellCastVisualAtPoints(headID, 5, false, pointList1)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList2)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList3)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList4)
	explodingMantid:PlaySpellCastVisualAtPoints(legID, 5, false, pointList5)
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList6) 
	explodingMantid:PlaySpellCastVisualAtPoints(pincerID, 5, false, pointList7)
	CastSpellAtActor( explodingMantid, explodingMantid, squibID, false )
--	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBaseID, false )
--	CastSpellAtActor( explodingMantid, explodingMantid, mantidExplosionBurstID, false )
	FadeOut(explodingMantid, 0.2)
end

function MantidController(mantidID)

	--while true do

		scene:WaitTimer(math.random(0.5, 2))

		local mantid = SpawnActor( mantidCreatureID, 0, 0, 0, 0, 1, false )
		mantids[mantidID] =
		{
			actor = mantid;
			id = mantidID
		}

		local speed = math.random(15,50)
		local pathID = mantidPathsCasual[math.random(#mantidPathsCasual)]

		
		while (mantids[mantidID]) do

			-- move on a looping path
			local moveData = MoveData:Default()

			moveData.pathID = pathID
			moveData.speed = speed

			moveData.posControl = MovePosControl.ConstantSpeed
			moveData.yawControl = MoveRotControl.Tangent
			moveData.pitchControl = MoveRotControl.Tangent
			moveData.rollControl = MoveRotControl.Angle
			moveData.isRelative = false
			moveData.teleportToFirstPoint = true
			moveData.animKitID = 1395

			mantid:Move( moveData )

			mantid:WaitMovementComplete()

		end
		
	--end

end"
10116,Lorewalker 5.2 - S3: Mogu Origin - Mantid Kill (1),"WaitForTrigger( ""Line 7"" )
MantidController(1)"
10117,Lorewalker 5.2 - S3: Mogu Origin - Mantid Kill (2),"WaitForTrigger( ""Line 7"" )
MantidController(2)"
10118,Lorewalker 5.2 - S3: Mogu Origin - Mantid Kill (3),"WaitForTrigger( ""Line 7"" )
MantidController(3)"
10119,Lorewalker 5.2 - S3: Mogu Origin - Mantid Kill (4) ,"WaitForTrigger( ""Line 7"" )
MantidController(4)"
10120,Lorewalker 5.2 - S3: Mogu Origin - Mantid Kill (5),"WaitForTrigger( ""Line 7"" )
MantidController(5)"
10121,Lorewalker 5.2 - S3: Mogu Origin - ChangerTerrorcotta,"--Terrorcotta fade in
WaitForTrigger( ""Line 8"" )
changerTerrorcotta:Fade( .75, 2 )
RunToLocation( changerTerrorcotta, 2, 1454.4, 369.434, 550.221, 128.349, true)

WaitForTrigger( ""Changer - Cue 1"" )
changerTerrorcotta:Fade( 0, 2 )
"
10122,Lorewalker 5.2 - S3: Mogu Origin - ChangerMogu,"WaitForTrigger( ""Changer - Cue 1"" )
changerMogu:Fade( .75, 2 )

WaitForTrigger( ""Changer - Cue 2"" )
changerMogu:Fade( 0, 2 )
"
10123,Lorewalker 5.2 - S3: Mogu Origin - ThunderKing,"WaitForTrigger( ""Changer - Cue 2"" )
thunderKing:PlaySpellCastVisual(staticShockCastID)
thunderKing:PlaySoundKit(thunderClapSound, true) -- Thunder strike
thunderKing:Fade( .75, 2 )

WaitForTrigger( ""Line 13"" )
thunderKing:Fade( 0, 2 )"
10124,Lorewalker 5.2 - S3: Mogu Origin - Confused Mogu,"WaitForTrigger( ""Line 10"" )

for i=1, #confusedMogu do
	Wait(.5)
	confusedMogu[i]:Fade( .75, 5 )
end

WaitForTrigger( ""Changer - Cue 2"" )
for i=1, #confusedMogu do
	confusedMogu[i]:Fade( 0, 2 )
end
"
10125,Lorewalker 5.2 - S3: Mogu Origin - Organized Mogu,"--Terrorcotta fade in
WaitForTrigger( ""Changer - Cue 2"" )
for i=1, #organizedMogu do
	organizedMogu[i]:Fade( .75, 2 )
	organizedMogu[i]:FollowRelativePathAtSpeed( 5464, 1 )
end

WaitForTrigger( ""Line 13"" )
for i=1, #organizedMogu do
	organizedMogu[i]:Fade( 0, 2 )
end"
10126,Lorewalker 5.2 - S3: Mogu Origin - Trees,"WaitForTrigger( ""Line 8"" )
--Grow and fade in trees
for i=1, #trees do
	trees[i]:Fade( .75, 5 )
	trees[i]:SetScale( .5 )
end

-- Transition Trees to alpha
WaitForTrigger( ""Line 9"" )
for i=1, #trees do
	trees[i]:PlaySpellStateVisual( 27432 ) --3 second, 75% desaturate
end

-- Fade trees
for i=1, #trees do
	Wait(.5)
	trees[i]:Fade( 0, 5 )
end"
10127,Lorewalker 5.2 - S3: Mogu Origin - Saurok,"WaitForTrigger(""smoothPhaseComplete"")
PlayLoopingSplitBodyAnim( saurok_hack, Animations.MountSelfIdle )
PlayLoopingSplitBodyAnim(saurok_heal, Animations.ReadyUnarmed)
PlayLoopingSplitBodyAnim( saurok_tank, Animations.ReadyRifle )


-- Wait for Saurok - Cue 1
WaitForTrigger( ""Saurok - Cue 1"" )
saurok_hack:Fade(.75, 2)
saurok_heal:Fade(.75, 2)
saurok_tank:Fade(.75, 2)

-- Wait for Line 13 to fade
WaitForTrigger( ""Line 13"" )
saurok_hack:Fade( 0, 2)
saurok_heal:Fade( 0, 2)
saurok_tank:Fade( 0, 2)"
10128,Lorewalker 5.2 - S3: Mogu Origin - Quilen,"WaitForTrigger(""smoothPhaseComplete"")
PlayLoopingSplitBodyAnim( quilen1, Animations.ReadyUnarmed )
PlayLoopingSplitBodyAnim( quilen2, Animations.ReadyUnarmed )
terrorcottaFinal1:PlayLoopingAnimKit(2461)
terrorcottaFinal2:PlayLoopingAnimKit(2461)

-- Wait for Saurok - Cue 1
WaitForTrigger( ""Quilen - Cue 1"" )
quilen1:Fade(.75, 2)
quilen2:Fade(.75, 2)
quilen3:Fade(.75, 2)
quilen4:Fade(.75, 2)
terrorcottaFinal1:Fade( .75, 2 )
terrorcottaFinal2:Fade( .75, 2 )

-- Wait for Line 13 to fade
WaitForTrigger( ""Line 13"" )
quilen1:Fade( 0, 2)
quilen2:Fade( 0, 2)
quilen3:Fade( 0, 2)
quilen4:Fade( 0, 2)
terrorcottaFinal1:Fade( 0, 2 )
terrorcottaFinal2:Fade( 0, 2 )
"
10187,[2] Lorewalker 5.2 - S3: Mogu Origin - Init ,"--Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
SendTrigger( ""smoothPhaseComplete"" )"
10188,[1] Lorewalker 5.2 - S1: Zandalari - Lorewalker Cho - MASTER,"Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72106) -- S1 011 [VO] 16.5
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 11"" )
Wait(3)
SendTrigger( ""Deathwing - Cue 2"" )
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.Cower )
Wait(1)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(4)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72107) -- S1 012 [VO] 15.5
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:FollowPathAtSpeed( 5507, 2, true )
SendTrigger( ""Line 12"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Peasants - Cue 1"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5.5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72108) -- S1 013 [VO] 8
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 13"" )

Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72109) -- S1 014 [VO] 6
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
SendTrigger( ""Line 14"" )
SendTrigger( ""Rastakhan - Cue 2"" )
Wait(2)
lorewalker:SetFacing(220.189)
Wait(1)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
SendTrigger( ""Zul - Cue 3"" )
Wait(.75)

--Final
--lorewalker:ClearFacing()
--RunToLocation(lorewalker, 2, 1447.18, 371.453, 550.221, 93.5645, true )
lorewalker:FollowPathAtSpeed( 5620, 2, true )
lorewalker:WaitMovementComplete()
lorewalker:SetFacing(93.5645)
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()
"
10189,[1] Lorewalker 5.2 - S2: Thunder - Lorewalker Cho - MASTER ,"Animations.EmoteTalk )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(5)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalk )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72118) -- S2 009 [VO] 4
--PlayOneShotSplitBodyAnim( thunderKing, Animations.EmoteTalkExclamation )
thunderKing:PlayOneShotAnimKit( 3933, false )
Wait(1)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteCheer )
Wait(3)
--PlayOneShotSplitBodyAnim( thunderKing, Animations.BattleRoar )
SendTrigger( ""Pillars - cue 2"" )

--Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

thunderKing:PlaySoundKit(thunderClapSound, true) -- Thunder strike
Wait(1)
SendTrigger( ""Pillars - cue 3"" )
Wait(2)
SendTrigger( ""Thunder King - Fade"" )

lorewalker:BroadcastText(BroadcastType.Say, 72119) -- S2 010 [VO] 12
--StopLoopingSplitBodyAnim( lorewalker, Animations.KneelLoop )
--PlayOneShotSplitBodyAnim( lorewalker, Animations.KneelEnd )
Wait(2.3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4.7)
lorewalker:PlayOneShotAnimKit( 1024 )
Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72120) -- S2 011 [VO] 12
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
SendTrigger( ""Red Crane - Fade"" )
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

SendTrigger( ""Red Crane - Fade Out"" )
lorewalker:BroadcastText(BroadcastType.Say, 72121) -- S2 012 [VO] 4
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )

Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Final
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
10190,[1] Lorewalker 5.2 - S3: Mogu Origin - Lorewalker Cho - MASTER ,")
lorewalker:PlayOneShotAnimKit( 1024 )
SendTrigger( ""Line 10"" )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(1)
SendTrigger( ""Changer - Cue 2"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(4)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(2)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72132) -- S3 011 [VO] 14
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Line 11"" )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(2)
SendTrigger( ""Quilen - Cue 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
SendTrigger( ""Saurok - Cue 1"" )
Wait(2)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(1)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72133) -- S3 012 [VO] 3
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 12"" )

Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72134) -- S3 013 [VO] 5
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 13"" )

Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 72135) -- S3 014 [VO] 10
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 14"" )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)

lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Final
RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.221, 93.5645, true)
--musichandle:Stop()
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
--WaitForTrigger(""Music - Stopped"")
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
10191,IotTK 5.2: zto - Ballista Fire on Alliance Camp,"--[[Helper Function
function FireBallista()
	local target = targets[(math.random(#targets))]
	local ballista = ballistae[(math.random(#ballistae))]
	local targetLoc = target:GetPosition()
	local ballistaLoc = ballista:GetPosition()
	ballista:SetFacingToAbs(Vector:New(targetLoc.x, targetLoc.y, targetLoc.z))
	target:SetFacingToAbs(Vector:New(ballistaLoc.x, ballistaLoc.y, ballistaLoc.z))
	ballista:PlaySpellCastVisualAtTargets(ballistaMissileVisualID, 20, false, { target })
	ballista:WaitMissilesImpacted(ballistaMissileVisualID)
	target:PlaySpellImpactVisual(ballistaImpactVisualID)
end]]--

--Helper Function
function MissilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, -5)
	local spot2 = math.random(-10, 10)
	--local spot3 = math.random(-10, 10) 
	local missilePos = casterPos + Vector:New(spot1, spot2, 0)
	return missilePos
end

function BallistaBounce(target) --Ricochettes the ballista off the shield when it hits.
	local targetLoc = target:GetPosition()
	local spot1 = math.random(1, 15)
	local spot2 = math.random(-15, 15)
	bounceTargetLoc = targetLoc + Vector:New(spot1, spot2, 0)
	bounceTargetLoc.z = 0
	bounceTarget = { bounceTargetLoc }
	target:PlaySpellCastVisualAtPoints( ballistaMissileBounceVisualID, 30, false, bounceTarget )
end

function FireBallista() -- Fire's a Ballista round at the ship
	local target = targets[(math.random(#targets))]
	local ballista = ballistae[(math.random(#ballistae))]
	local targetLoc = target:GetPosition()
	local ballistaLoc = ballista:GetPosition()
	ballista:SetFacingToAbs(Vector:New(targetLoc.x, targetLoc.y, targetLoc.z))
	target:SetFacingToAbs(Vector:New(ballistaLoc.x, ballistaLoc.y, ballistaLoc.z))
	local travelTime = 10
	local missileInstanceID = ballista:PlaySpellCastVisualAtTargets(ballistaMissileVisualID, travelTime, true, { target })
	Wait(travelTime)
	ballista:WaitMissilesImpacted(missileInstanceID)
	BallistaBounce(target)
end

--Spell Visual Kits (Impact)
ballistaImpactVisualID = 32976
ballistaCastVisualID = 33247
ballistaMissileVisualID = 31164
ballistaShieldAuraVisualID = 30916
ballistaShieldCastVisualID = 30510
ballistaMissileBounceVisualID = 31161

--Spells
ballistaSpellID = 138100

--Creatures
bunnyCreatureID = 62026
ballistaModelID = ""WORLD\\EXPANSION04\\DOODADS\\ZANDALARI\\Zandalari_SiegeWeapon_01.M2""


--Spawn Actors
targets = SpawnActorsAtPoints( bunnyCreatureID, 5475, false)
ballistae = SpawnActorsAtPoints ( bunnyCreatureID, 5474, false)
blockers = SpawnActorsAtPoints(bunnyCreatureID, 5473, false)

for i=1, #blockers do
	blockers[i]:PlaySpellCastVisual(ballistaShieldCastVisualID)
	blockers[i]:PlaySpellStateVisual(ballistaShieldAuraVisualID)
end

--[[while true do
	local waitTime
	waitTime = math.random(.5, 2)
	Wait(waitTime)
	FireBallista()
end]]--

--For the duration of the scene, Ballistas fire rounds at the shields
while true do
	local waitTime = math.random(0.5, 3) --Time between shots
	Wait(waitTime)
	scene:AddCoroutine(FireBallista)
end"
10192,IotTK 5.2: zto - Ballista Fire on Alliance Camp,"Wait(290)
scene:EndScene()"
10203,Legendary 5.2 - Chapter 06 - Secrets Intro - Main,"-- Wrathion's Actions


-- Set Up and Spawn in Actors
wrathionID = 69782
anduinID = 69257
bunnyCreatureID = 62026
wrathion = SmoothPhaseSpawnActor( wrathionID, 831.526, -166.76, 422.896, 254.603, 1, false ) 
wrathion:PlayLoopingAnimKit(547)
anduin = SmoothPhaseSpawnActor( anduinID, 832.62, -170.036, 423.091, 159.937, 1, false ) 
anduin:PlayLoopingAnimKit(3228)
diceTarget = SpawnActor( bunnyCreatureID, 832.094, -168.161, 423.911, 112.7, 1, true )
Wait(.2)


-- Here's Where He Begins Talking
wrathion:BroadcastText(BroadcastType.Say, 72311) -- ""The Thunder King...!""
wrathion:PlayMusic( 37053 ) -- DUCK OUT ZONE MUSIC
wrathion:PlaySoundKit ( 36877, true ) -- START MUSIC
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes)
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
wrathion:BroadcastText(BroadcastType.Say, 72312) -- ""Could you imagine...?""
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.2)
anduin:BroadcastText(BroadcastType.Say, 72313) -- ""I couldn't imagine...""
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteNo )
Wait(2.5)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(2.5)
wrathion:BroadcastText(BroadcastType.Say, 72314) -- ""Benevolence is a luxury...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3)
anduin:BroadcastText(BroadcastType.Say, 72315) -- ""I'm not so sure about that.""
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
Wait(2.7)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkExclamation )
Wait(2.0)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteNo )
Wait(1.5)
anduin:BroadcastText(BroadcastType.Say, 72316) -- ""Remember, the mogu were overthrown!""
PlayOneShotSplitBodyAnim( anduin, Animations.EmotePoint )
Wait(2)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
Wait(3)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteYes )
wrathion:BroadcastText(BroadcastType.Say, 72317) -- ""I worry you may be too soft...""
wrathion: PlayOneShotAnimKit(3772) --Wrathion throws the dice
Wait(.5)
wrathion:PlaySoundKit( 36622, true ) -- Play dice sound - click!
Wait(.5)
CastSpellAtActor( wrathion, diceTarget, 139519, false ) -- Dice throw spell effect
Wait(1)
wrathion:PlaySoundKit( 36626, true ) -- Play dice sound - Dice Roll!
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
anduin:BroadcastText(BroadcastType.Say, 72318) -- ""Are you lecturing me?""
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(2)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
Wait(3)
wrathion:BroadcastText(BroadcastType.Say, 72319) -- ""Two in DRAGON years!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(1)
anduin:BroadcastText(BroadcastType.Say, 72320) -- ""Hmmmm...""
Wait(2)

"
10205,IotTK 5.2: zto - Ballista Fire on Horde Ships,"--Helper Function
function FireBallista()
	local target = targets[(math.random(#targets))]
	local ballista = ballistae[(math.random(#ballistae))]
	local targetLoc = target:GetPosition()
	local ballistaLoc = ballista:GetPosition()
	ballista:SetFacingToAbs(Vector:New(targetLoc.x, targetLoc.y, targetLoc.z))
	target:SetFacingToAbs(Vector:New(ballistaLoc.x, ballistaLoc.y, ballistaLoc.z))
	ballista:PlaySpellCastVisualAtTargets(ballistaMissileVisualID, 20, false, { target })
	ballista:WaitMissilesImpacted(ballistaMissileVisualID)
	target:PlaySpellImpactVisual(ballistaImpactVisualID)
end

--Spell Visual Kits (Impact)
ballistaImpactVisualID = 32367
ballistaCastVisualID = 30728
ballistaMissileVisualID = 30498
ballistaShieldAuraVisualID = 30513
ballistaShieldCastVisualID = 30510

--Spells
ballistaSpellID = 138100

--Creatures
bunnyCreatureID = 62026

--[[Spawn Actors
targets = SpawnActorsAtPoints( bunnyCreatureID, 5479, false)
ballistae = SpawnActorsAtPoints ( bunnyCreatureID, 5478, false)
blockers = SpawnActorsAtPoints(bunnyCreatureID, 5411, false)

for i=1, #blockers do
	blockers[i]:PlaySpellCastVisual(ballistaShieldCastVisualID)
	blockers[i]:PlaySpellStateVisual(ballistaShieldAuraVisualID)
end

while true do
	local waitTime
	waitTime = math.random(.5, 2)
	Wait(waitTime)
	FireBallista()
end]]--"
10206,IotTK 5.2: zto - Ballista Fire on Horde Ships (timer),"Wait(120)
scene:EndScene()"
10207,IotTK 5.2: zto - Ballista Fire on Alliance Ships,"--Helper Function
function MissilePosRand(casterPos) --Random Coordinates
	local spot1 = math.random(-10, -5)
	local spot2 = math.random(-10, 10)
	--local spot3 = math.random(-10, 10) 
	local missilePos = casterPos + Vector:New(spot1, spot2, 0)
	return missilePos
end

function BallistaBounce(target) --Ricochettes the ballista off the shield when it hits.
	local targetLoc = target:GetPosition()
	local spot1 = math.random(1, 15)
	local spot2 = math.random(-15, 15)
	bounceTargetLoc = targetLoc + Vector:New(spot1, spot2, 0)
	bounceTargetLoc.z = 0
	bounceTarget = { bounceTargetLoc }
	target:PlaySpellCastVisualAtPoints( ballistaMissileBounceVisualID, 30, false, bounceTarget )
end

function FireBallista() -- Fire's a Ballista round at the ship
	local target = targets[(math.random(#targets))]
	local ballista = ballistae[(math.random(#ballistae))]
	local targetLoc = target:GetPosition()
	local ballistaLoc = ballista:GetPosition()
	ballista:SetFacingToAbs(Vector:New(targetLoc.x, targetLoc.y, targetLoc.z))
	target:SetFacingToAbs(Vector:New(ballistaLoc.x, ballistaLoc.y, ballistaLoc.z))
	local travelTime = 10
	local missileInstanceID = ballista:PlaySpellCastVisualAtTargets(ballistaMissileVisualID, travelTime, true, { target })
	Wait(travelTime)
	ballista:WaitMissilesImpacted(missileInstanceID)
	BallistaBounce(target)
end

--Spell Visual Kits (Impact)
ballistaImpactVisualID = 32976
ballistaCastVisualID = 33247
ballistaMissileVisualID = 31164
ballistaShieldAuraVisualID = 30916
ballistaShieldCastVisualID = 30510
ballistaMissileBounceVisualID = 31161

--Spells
ballistaSpellID = 138100

--Creatures
bunnyCreatureID = 62026
ballistaModelID = ""WORLD\\EXPANSION04\\DOODADS\\ZANDALARI\\Zandalari_SiegeWeapon_01.M2""

--Spawn Actors
targets = SpawnActorsAtPoints( bunnyCreatureID, 5480, false)
ballistae = SpawnModelActorsAtPoints ( ballistaModelID, 5481, false)
blockers = SpawnActorsAtPoints(bunnyCreatureID, 5482, false)

--Activate Shields
for i=1, #blockers do
	blockers[i]:PlaySpellCastVisual(ballistaShieldCastVisualID)
	blockers[i]:PlaySpellStateVisual(ballistaShieldAuraVisualID)
end

--For the duration of the scene, Ballistas fire rounds at the shields
while true do
	local waitTime = math.random(0.5, 3) --Time between shots
	Wait(waitTime)
	scene:AddCoroutine(FireBallista)
end
"
10208,IotTK 5.2: zto - Ballista Fire on Alliance Ships,"Wait(120)
scene:EndScene()"
10209,Scenario - Tear Down This Wall - Al'chukla - JSB,"alchukla:PlayLoopingFullBodyAnim(Animations.ReadyThrown)
alchukla:PlaySpellStateVisual(30420)
alchukla:PlaySpellStateVisual(31035)

Wait( 3 )

alchukla:ClearSpellVisual( 0)
alchukla:StopLoopingFullBodyAnim()

alchukla:BroadcastTextStereo(BroadcastType.Say, 72306)

alchukla:SetSnapToGround(false)

RunToLocation( alchukla, 18, 6611.18, 5324.01, 49.9852, 45.5095)

--RunToLocation( alchukla, 18, 6630.67, 5343.56, 49.9874, 11.182)
RunToLocation( alchukla, 18, 6617.58, 5330.82, 49.9874, 11.182)

--alchukla:WaitJumpToAbs(Vector:New(6603.82, 5372.19, 10.8305), 4) -- (target, time, gravity)
alchukla:WaitJumpToAbs(Vector:New(6657.34, 5369.71, 49.9704), 3) -- (target, time, gravity)

alchukla:ClearSpellVisual( 0)
FadeOut( alchukla, 0 )"
10210,Legendary 5.2 - Chapter 09 - Crown of Heaven Finale - Main,"-- Wrathion creates the Crown of Heaven
-- While the players and Anduin watch with awe


-- Set Up and Spawn in Actors
wrathionID = 70476
anduinID = 69257
wrathion = SpawnActor( wrathionID, 765.398, -523.648, 451.103, 308.142, 1, true ) 
anduin = SmoothPhaseSpawnActor( anduinID, 781.582, -538.872, 454.441, 70.1644, 1, false ) 
anduin:PlayLoopingAnimKit(3228)
wrathionLanceSheathe = wrathion:PlaySpellStateVisual(31119) -- Lance sheathed on back
Wait(1)

-- Wrathion approaches the summit
wrathion:BroadcastText(BroadcastType.Say, 72340) -- ""Truly a splendor...!""
music01 = wrathion:PlayMusic( 36888 ) -- BEGIN MUSIC
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
RunToLocation( wrathion, 1.5, 777.515, -538.159, 454.067, 309.118, true ) --Walk to Summit
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
anduin:BroadcastText(BroadcastType.Say, 72341) -- ""It's breathaking.""
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(3)
wrathion:BroadcastText(BroadcastType.Say, 72342) -- ""It's about to get...""
Wait(5)
RunToLocation( wrathion, 1.5, 777.515, -538.159, 454.067, 127.7, true )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 72343) -- ""Champion! Behold...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
wrathion:PlayOneShotAnimKit(3153)
Wait(.5)
wrathion:ClearSpellVisual( wrathionLanceSheathe) --Remove lance from sheathe
wrathionLance = wrathion:PlaySpellStateVisual(31120) -- Hold lance in hand
wrathion:PlaySoundKit( 32218, true )
-- Skybox
scene:ApplyScreenEffect(979) -- The Sky grows dark
-- Skybox
Wait(2)
RunToLocation( anduin, 1, 781.582, -538.872, 454.441, 156.496, 1, false )
anduin:PlayLoopingAnimKit(719)
Wait(1)


-- Wrathion begins his story
wrathion:BroadcastText(BroadcastType.Say, 72344) -- ""At the dawn of the world...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2.5)
wrathion:BroadcastText(BroadcastType.Say, 72345) -- ""They shivered...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(3.5)
wrathion:PlaySpellCastVisual( 31124 ) -- Lightning strikes the lance
wrathion:PlaySoundKit( 36453, true )
Wait(.5)
wrathion:PlayOneShotAnimKit(3804)
Wait(3)
RunToLocation( wrathion, 1.5, 777.515, -538.159, 454.067, 40.1236, true )
wrathion:BroadcastText(BroadcastType.Say, 72346) -- ""It rent a tree asunder...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
SendTrigger(""lightningStrike"")
CastSpellAtActor( wrathion, mainImpact, 140043, false ) -- Lightning Strikes the Tree!
anduin:PlayOneShotAnimKit(3802) -- Anduin reacts to lightning
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 72347) -- ""The mortals gathered...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2.5)
wrathion:PlayLoopingAnimKit(3803)
Wait(3)
wrathion:BroadcastText(BroadcastType.Say, 72348) -- ""They fed the fire...""
wrathion:PlayOneShotAnimKit(1530)
Wait(2.5)
wrathion:PlayOneShotAnimKit(3130)
Wait(2.5)
wrathion:PlayOneShotAnimKit(1880)
Wait(2.5)
wrathion:PlayOneShotAnimKit(1530)
SendTrigger(""drawFlame"")
Wait(1)
wrathion:PlaySpellCastVisual( 31158 )
wrathionFireHand = wrathion:PlaySpellStateVisual(31158) -- Wrathion holds the fire in his hand
Wait(1.5)
wrathion:StopAnimKit(3803)
Wait(3.5)
wrathion:BroadcastText(BroadcastType.Say, 72349) -- ""Truly, lightning is a gift...""
"
10212,[1] Legendary 5.2 - Chapter 09 - Crown of Heaven Finale - Main,"PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
wrathion:ClearSpellVisual( wrathionLance) --Sheathe Lance
wrathion:PlayOneShotAnimKit(3153)
wrathionLanceSheathe = wrathion:PlaySpellStateVisual(31119)
wrathion:PlayLoopingAnimKit(3806) -- Hold orb of power
Wait(2)
RunToLocation( wrathion, 1.5, 777.515, -538.159, 454.067, 127.7, true )
Wait(3)
SendTrigger(""clearFire"")

-- Next Sequence: Wrathion Talks About the Mogu
wrathion:BroadcastText(BroadcastType.Say, 72350) -- ""The mogu. Ah!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(3)
wrathion:BroadcastText(BroadcastType.Say, 72351) -- ""But they could have been...""
wrathion:PlayOneShotAnimKit(1872)
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(3.5)
wrathion:BroadcastText(BroadcastType.Say, 72352) -- ""They built an empire...""
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(3)
wrathion:BroadcastText(BroadcastType.Say, 72353) -- ""We will do better...""
music01:Stop() -- STOP MUSIC
music02 = wrathion:PlaySoundKit( 36890, true )
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(3)
wrathion:StopAnimKit(3806)
Wait(.5)
wrathion:PlaySpellCastVisual( 31171 ) -- Creates Crown of Heaven
wrathion:ClearSpellVisual( wrathionFireHand) -- Fire orb disappears
wrathionCrown = wrathion:PlaySpellStateVisual(31171) -- Holds the crown aloft
Wait(1)
wrathion:PlayOneShotAnimKit(3804)
Wait(2)
wrathion:PlayOneShotAnimKit(1530)
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 72354) -- ""You are the ember!""
wrathion:PlayOneShotAnimKit(3804)
Wait(2)
wrathion:PlayOneShotAnimKit(1530)
Wait(3)
wrathion:ClearSpellVisual( wrathionCrown) --Stops holding Crown
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2.7)
wrathion:BroadcastText(BroadcastType.Say, 72355) -- ""Come to me.""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)




-- Clean Up!
scene:ClearScreenEffect(979) -- Return sky to normal
--anduin:StopAnimKit(719)
--RunToLocation( anduin, 1, 781.582, -538.872, 454.441, 70.1644, 1, false )




"
10213,Legendary 5.2 - Chapter 09 - Crown of Heaven Finale - Lightning FX,"-- Spawn in some target bunnies and wait for the fireworks

bunnyCreatureID = 62026
mainImpact = SpawnActor( bunnyCreatureID, 783.667, -533.005, 455.223, 37.8747, 1, false ) 
smallFire1 = SpawnActor( bunnyCreatureID, 789.556, -534.386, 457.962, 97.3552, 1, false )
smallFire2 = SpawnActor( bunnyCreatureID, 784.472, -531.991, 457.169, 17.7502, 1, false )
smallFire3 = SpawnActor( bunnyCreatureID, 782.346, -529.842, 460.621, 258.456, 1, false )

WaitForTrigger(""lightningStrike"")
mainImpact:PlaySpellImpactVisual( 31176 )
RunToLocation( mainImpact, 4, 785.177, -531.731, 460.72, 343.776, false )
smallFire2:PlaySpellImpactVisual( 31176 )
mainFire = mainImpact:PlaySpellStateVisual(21004)
fire2 = smallFire2:PlaySpellStateVisual(31173)
Wait(2)
fire1 = smallFire1:PlaySpellStateVisual(31173)
Wait(1.5)
smallFire3:PlaySpellImpactVisual( 19267 )
fire3 = smallFire3:PlaySpellStateVisual(31173)

WaitForTrigger(""drawFlame"")
CastSpellAtActor( mainImpact, wrathion, 140083, false )
CastSpellAtActor( smallFire1, wrathion, 140083, false )
CastSpellAtActor( smallFire2, wrathion, 140083, false )
CastSpellAtActor( smallFire3, wrathion, 140083, false )

-- Clean Up
WaitForTrigger(""clearFire"")
smallFire2:ClearSpellVisual( fire2)
Wait(5)
mainImpact:ClearSpellVisual( mainFire)
Wait(2)
smallFire3:ClearSpellVisual( fire3)
Wait(3)
smallFire1:ClearSpellVisual( fire1)
"
10214,Legendary 5.2 - Chapter 07 - Forge Intro - Main,"-- Wrathion and Anduin Argue About the Forge
-- While the player dreams of delicious orange lewts


-- Set Up and Spawn in Actors
wrathionID = 69782
anduinID = 69257
whelpID = 70225
wrathion = SmoothPhaseSpawnActor( wrathionID, 831.526, -166.76, 422.896, 254.603, 1, false ) 
wrathion:PlayLoopingAnimKit(547)
anduin = SmoothPhaseSpawnActor( anduinID, 832.62, -170.036, 423.091, 159.937, 1, false ) 
anduin:PlayLoopingAnimKit(3228)
Wait(.2)


-- Start Music
music01 = wrathion:PlayMusic( 36883 )

-- Wrathion and Anduin Talk
wrathion:BroadcastText(BroadcastType.Say, 72324) -- ""Champion! Return now..."" :10 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes)
Wait(2.5)
wrathion:StopAnimKit(547)
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 217.322, true )
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(2)

anduin:BroadcastText(BroadcastType.Say, 72325) -- ""To What End?"" :03 sec
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteNo )
Wait(1)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(1)
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 300.346, true )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 72326) -- ""...world peace!"" :01.3 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)
anduin:BroadcastText(BroadcastType.Say, 72327) -- ""Using a mogu weapon...?"" :03.5 sec
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteNo )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 72328) -- ""My dear prince..."" :06 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 217.322, true )
Wait(1)

-- Shift Music
music01:Stop() -- STOP MUSIC
--music02 = wrathion:PlaySoundKit( 36887, true )

wrathion:BroadcastText(BroadcastType.Say, 72329) -- ""Come, hero!"" :04 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteCheer )
Wait(.3)
wrathion:PlaySpellCastVisual( 17302 )
whelp = SpawnActor( whelpID, 830.418, -167.633, 422.563, 216.722, 1, false ) 
Wait(.2)
wrathion:Fade( 0, .2 )
Wait(1)
RunToLocation( whelp, 4, 840.562, -174.177, 425.55, 343.548, false )
RunToLocation( whelp, 5, 846.287, -169.814, 426.507, 45.4223, false )
"
10215,Legendary 5.2 - Chapter 09 - Crown Intro - Main,"-- Wrathion invites you to Mason's Folly
-- Anduin is jealous and thinks you might be going there to make out.


-- Set Up and Spawn in Actors
wrathionID = 69782
anduinID = 69257
wrathion = SmoothPhaseSpawnActor( wrathionID, 831.526, -166.76, 422.896, 254.603, 1, false ) 
wrathion:PlayLoopingAnimKit(547)
anduin = SmoothPhaseSpawnActor( anduinID, 832.62, -170.036, 423.091, 159.937, 1, false ) 
anduin:PlayLoopingAnimKit(3228)
Wait(.2)


-- Wrathion and Anduin Talk
wrathion:BroadcastText(BroadcastType.Say, 72336) -- ""Meet me atop"" :03 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk)
Wait(2.5)
wrathion:StopAnimKit(547) -- Stand
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 217.322, true ) -- Step forward
Wait(.5)
anduin:BroadcastText(BroadcastType.Say, 72337) -- ""What are you two plotting?"" :01.25 sec
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion )
Wait(1.2)
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 300.346, true ) --Face Anduin
Wait(.8)
wrathion:BroadcastText(BroadcastType.Say, 72338) -- ""I keep no secrets!"" :06.5 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk)
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
RunToLocation( wrathion, 1, 831.526, -166.76, 422.896, 254.603, false )
wrathion:PlayLoopingAnimKit(547)

"
10216,Legendary 5.2 - Chapter 11 - Thunder King Finale - Main,"-- Wrathion eats the heart of the Thunder King
-- This is gross but I think Anduin is a little turned on by it.


-- Set Up and Spawn in Actors
wrathionID = 69782
anduinID = 69257
wrathion = SmoothPhaseSpawnActor( wrathionID, 831.526, -166.76, 422.896, 254.603, 1, false ) 
wrathion:PlayLoopingAnimKit(547)
anduin = SmoothPhaseSpawnActor( anduinID, 832.62, -170.036, 423.091, 159.937, 1, false ) 
anduin:PlayLoopingAnimKit(3228)
Wait(.2)

holdHeart = wrathion:PlaySpellStateVisual(31293) -- Wrathion Holds the Heart

-- Wrathion and Anduin Talk
wrathion:BroadcastText(BroadcastType.Say, 72379) -- ""The heart of a King...!"" :06.2 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk)
Wait(2.5)
wrathion:StopAnimKit(547) -- Stand
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 217.322, true ) -- Step forward
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion)
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation)
Wait(2)
anduin:BroadcastText(BroadcastType.Say, 72380) -- ""What are you doing?"" :03.3 sec
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion)
Wait(2)
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteNo )
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 72381) -- ""It is filled with Titan magic..."" :05.8 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk)
Wait(1.8)
RunToLocation( wrathion, 1, 827.729, -166.28, 422.934, 151.847, true ) -- Go to rail
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion)
Wait(4)

-- Wrathion Eats the Heart !
wrathion:PlayLoopingAnimKit(1372) -- Eating
Wait(1)
wrathion:ClearSpellVisual( holdHeart)
Wait(2)
wrathion:StopAnimKit(1372)
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.CombatWound)
Wait(1)
wrathion:PlayLoopingAnimKit(1878) --Stunned
Wait(2)
wrathion:BroadcastText(BroadcastType.Say, 72382) -- ""Oh! I see them..."" :15.6 sec
Wait(16)
wrathion:StopAnimKit(1878)

-- Wrathion has a vision from the Gods
spotlight = wrathion:PlaySpellStateVisual(25978) -- Spotlight FX
Wait(.5)
wrathion:PlayLoopingAnimKit(3846) -- Lean back, overcome with power
RunToLocation( wrathion, .5, 827.729, -166.28, 424.534, 151.847, false ) -- Float up
wrathion:BroadcastText(BroadcastType.Say, 72383) -- ""WE HAVE FALLEN"" :09.6 sec
Wait(11)
wrathion:ClearSpellVisual( spotlight)
wrathion:StopAnimKit(3846)
wrathion:PlayOneShotAnimKit(3567)
RunToLocation( wrathion, 3, 827.729, -166.28, 422.934, 151.847, true )
Wait(1)

-- Anduin is not impressed by your spotlights and your debauchery!
anduin:BroadcastText(BroadcastType.Say, 72384) -- ""What are you trying to pull?"" :01.8 sec
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteTalkQuestion)
Wait(2.5)
wrathion:BroadcastText(BroadcastType.Say, 72385) -- ""It is gone."" :10.0 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion)
Wait(2)
RunToLocation( wrathion, 1, 827.729, -166.28, 422.934, 328.232, true )
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk)
Wait(2)
wrathion:PlayOneShotAnimKit(1298)
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion)
Wait(3)
anduin:BroadcastText(BroadcastType.Say, 72386) -- ""What are you talking about?"" :03.2 sec
PlayOneShotSplitBodyAnim( anduin, Animations.EmoteNo )
Wait(4)
wrathion:BroadcastText(BroadcastType.Say, 72387) -- ""You are wise not to."" :01.3 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk)
Wait(1)
RunToLocation( wrathion, 1, 831.526, -166.76, 422.896, 254.603, false )
wrathion:PlayLoopingAnimKit(547)
wrathion:BroadcastText(BroadcastType.Say, 72388) -- ""Champion, I need time to ... digest."" :07.8 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion)
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, "
10217,[1] Legendary 5.2 - Chapter 11 - Thunder King Finale - Main,"Animations.EmoteTalk)
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint)
Wait(3)"
10218,Lorewalker 5.2 - S3: Mogu Origin - Music,"WaitForTrigger(""Music - Started"")
Wait(160)
--musichandle:Stop()
--SendTrigger(""Music - Stopped"")
"
10219,Lorewalker 5.2 - S1: Zandalari - Music,"WaitForTrigger(""Music - Started"")
Wait(170)
musichandle:Stop()
"
10220,Lorewalker 5.2 - S2: Thunder - Music,"WaitForTrigger(""Music - Started"")
Wait(114)
musichandle:Stop()
"
10221,Scenario - Tear Down This Wall - Intro - Music - JSB,"Wait( 0.5 )

local soundHandle = fxbunny:PlayMusic(36371)
"
10223,Brazie's PetBattle - Dispatcher - Visuals - Immune,"
-- Performs immunity when requested
--
function Dispatcher_PerformImmune( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	if ( victimActor and (victim.sessile == false) ) then
		victimActor:WaitMovementComplete()
	end

	if (feedbackActor) then
		local type = WorldText.Miss;
		local text = GetGlobalString( ""COMBAT_TEXT_IMMUNE"" ) or ""0""
		local useColor = false;
		local color = Color:New(255, 255, 0)

		feedbackActor:AddCustomWorldText( type, useColor, color, text ) 
		feedbackActor:PlaySoundKit(15928, true);
	end
end
"
10232,Test - Darren's Player Clone,"
local creatureID = 0

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(3, 2, 0), 180)
createData.creatureID = creatureID


local playerDisplay = scene:GetActivePlayerDisplay()

local actor1 = scene:SpawnActivePlayerCloneActor(createData, false)

createData.transform = Transform:New(Vector:New(3, -2, 0), 180)
local actor2 = scene:SpawnActivePlayerCloneActor(createData, true)

-- report the race of all the actors
local displayInfos = { }
table.insert(displayInfos, { name = ""player display""; display=playerDisplay; })
table.insert(displayInfos, { name = ""player clone [include transform]""; display=actor1; })
table.insert(displayInfos, { name = ""player clone [native form]""; display=actor2; })
for i,info in pairs(displayInfos) do
	local displayRaceID = info.display:GetRaceID(true)
	local nativeRaceID = info.display:GetRaceID(false)
	print(""Race ID of \"""" .. info.name .. ""\"" is: native="" .. nativeRaceID .. "" displayRaceID="" .. displayRaceID)
end


-- try and make some party actors
local tokenBase = ""party""
local partyActors = { }
for i = 1,4 do
	local token = tokenBase .. i
	
	createData.transform.position.x = createData.transform.position.x + 2
	local partyActor = scene:SpawnPlayerCloneActorByToken(token, createData, false);
	partyActors[i] = partyActor
	if (partyActor) then
		print(""Spawned player clone '"" .. token .. ""'"")
	else
		print(""FAILED to spawn player clone '"" .. token .. ""'"")
	end
end

while true do
	scene:WaitTimer(60)
end
"
10233,Reusable Scripts - Submerge with Adds,"function SubmergeWithAddsCreate(data)

	local ROID = data.ROID
	local isAura = data.isAura
	local aura = data.aura
	local auraInstanceID = data.auraInstanceID
	local turnsRemaining = data.turnsRemaining
	local auraAbilityID = data.auraAbilityID

	local enemyPad = ROIDTOUNIT( ROID );
	local padTransform = enemyPad.actor:GetTransform()
	local padLoc = padTransform.position
	local targetPad = ROIDTOUNIT( GETROIDFROMPLAYERIDANDSLOT( EnemyOf(enemyPad.playerID), enemyPad.slot ) );
	local targetLoc = targetPad.actor:GetPosition()

	local sons = {};
	local sonsCreateData = ActorCreateData:Default();
	
	sonsCreateData.name = data.name;
	sonsCreateData.creatureID = data.creatureID;
	sonsCreateData.transform = nil;
	sonsCreateData.scale = data.scale;
	sonsCreateData.groundSnap = true;

	-- Generate some points
	local points = {}
	local numPoints = 6;

	local offset=270
	local step= 360/numPoints;

	local elementalsRemaining = (aura.turnsRemaining+1) * 2;
	local startIndex = 	numPoints-elementalsRemaining+1;

	for i=startIndex, numPoints do 
		local angle = offset + i * step
		local sin = math.sin(angle/180*math.pi)*1.25
		local cos = math.cos(angle/180*math.pi)*1.25
		table.insert(points, Vector:New(sin, cos, 0));
	end

	for i=1,#points do
		local point = Vector:New() + padLoc + points[i] * 2

		sonsCreateData.transform = Transform:New(point, padTransform.yaw);
		local newActor = scene:SpawnActor(sonsCreateData);
		newActor:SetFacingToAbs(targetLoc)

		table.insert(sons, newActor);
	end

	local object, playerID, slot, transform = RegisterObject( EnemyOf( aura.playerID ), auraAbilityID, auraInstanceID)

	object.actor = sons[1];
	object.actors = sons;

	while ( aura.running ) do 
		scene:WaitTimer(0.1);
	end

	while ( not object.done ) do
		scene:WaitTimer(3);
	end

	for k,v in pairs ( sons ) do 
		v:Fade(0,0.1);
	end

	scene:WaitTimer(0.1);

	for k,v in pairs ( sons ) do 
		v:Despawn();
	end

	UnregisterObject(object.playerID, object.slot);
	
end

function SubmergeWithAddsAttack( ROID, isTurn, turn )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");

		return;
	end
	local caster = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject( turn.sourceAuraInstanceID ) -- FindObjectByAbilityID( caster.playerID, turn.abilityID )

	if ( not object ) then
		return
	end

	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

--print(""Object ROID: "",objectROID, "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);

	-- Make it mobile
	object.moveSpeed = 5;

	-- Lock the object
	object.done = false;

	for i=1, #turn.effects do
		object.actor = object.actors[1];
		object.moveSpeed = 5;
		object.actor:ClearFacing()

		local effect = turn.effects[i];
		DefaultTurnEffectMovement( objectROID, turn, effect )
		DefaultTurnOnEffectVisualHandler( objectROID, turn, effect, overrideSuccess, overrideFailure )

		object.moveSpeed = 0;

		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 

		object.actor:Fade(0, 0.5);
		-- Cycle to the next elemental
		table.remove(object.actors, 1);
		scene:WaitTimer(0.5);
	end

	-- Signal the objects to be destroyed
	object.done = true;
end"
10234,Test - Paul's Test Interactible Actor,"local creatureID = 3248

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = true
createData.floatingTooltip = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(4, 0, 0), 180)
createData.creatureID = creatureID

local offsetX = 0
local offsetY = 0
local rangeX = 40
local rangeY = 40
local respawnMin = 0.25
local respawnMax = 1
local minSpawnRange = 7

local maxKills = 25
local killCount = 0

local numProceduralCoroutines = 16
if (not Scene.AddCoroutine) then
	numProceduralCoroutines = nil
end

print(""Kill "" .. maxKills .. "" giraffes!"")

local spawnPoints = { }
function GiraffeBot(spawnID)
	local spawnTest = nil

	-- keep trying to find a spawn point each frame
	local found = false
	while (found == false) do
		found = true
		spawnPoint = Vector:New(
			(math.random()-0.5)*rangeX + offsetX,
			(math.random()-0.5)*rangeY + offsetY)

		for id, point in pairs(spawnPoints) do
			local offset = spawnPoint - point
			if (offset:Magnitude() < minSpawnRange) then
				found = false
				break;
			end
		end

		if (found == false) then
			scene:WaitTimer(0)
		end
	end

	spawnPoints[spawnID] = spawnPoint

	createData.transform.position.x = spawnPoints[spawnID].x
	createData.transform.position.y = spawnPoints[spawnID].y
	createData.facingOffset = 360*math.random()

	local actor = scene:SpawnActor(createData)

	actor:SetInteractCursor(""crosshairs"", CursorRange.RangeFromPlayer, 40, nil)

	actor:WaitRightClick()
	scene:TriggerServerEvent(""boom"")
	actor:PlaySpellTargetImpactVisual(1263)
	scene:WaitTimer(0.25)
	actor:PlayLoopingAnimKit(62)

	killCount = killCount + 1
	print(""Kills: "" .. killCount .. ""/"" .. maxKills)
	if (killCount >= maxKills) then
		print(""Grats!"")
		scene:EndScene()
	end

	scene:WaitTimer(2)

	-- free the spawn point
	spawnPoints[spawnID] = nil
	scene:WaitTimer(2)

	actor:Despawn()	
end

function RunSpawn(spawnID)
	while true do
		GiraffeBot(spawnID)
		local respawnTime = math.random()*(respawnMax - respawnMin) + respawnMin
		scene:WaitTimer(respawnTime)
	end
end

function ScriptCoroutine(spawnID)
	if (numProceduralCoroutines) then
		return
	end

	RunSpawn(spawnID)
end

if (numProceduralCoroutines and numProceduralCoroutines > 0) then

	-- spawn off coroutines
	for i = 1,numProceduralCoroutines do
		scene:AddCoroutineWithParams(RunSpawn, i)
	end

end


"
10243,Test - Paul's Interact Listener,"scene:SetRelativeCoords(true)

local creatureID = 60205
actorCreateData = ActorCreateData:Default()
actorCreateData.groundSnap = true
actorCreateData.interactible = true
actorCreateData.floatingTooltip = false
actorCreateData.aoiSettings.priority = ActorAOIPriority.Low
actorCreateData.aoiSettings.range = ActorAOIRange.Normal
actorCreateData.transform = Transform:New(Vector:New(10, 0, 0))
actorCreateData.scale = 0.4
actorCreateData.creatureID = creatureID

local actor = scene:SpawnActor(actorCreateData)
actor:SetInteractCursor(""pickup"", CursorRange.RangeFromPlayer, 20, nil)

local OnRightClick = function(clickedActor)
	print(""clicked!"")
	clickedActor:Despawn()
end

actor:AddOnRightClickListener(0, OnRightClick, actor)

--Wander settings
local wanderRadius = 15
local waitChance = 30
local waitTimeMin = 2
local waitTimeMax = 5

local spawn_X = actorCreateData.transform.position.x
local spawn_Y = actorCreateData.transform.position.y
local spawn_Z = actorCreateData.transform.position.z
local spawnLoc = Vector:New(spawn_X, spawn_Y, spawn_Z)
while (actor:IsDespawned() ~= true) do
	local currentLoc = actor:GetPosition()
	local targetRadius = wanderRadius*math.random()
	local targetAngle = 360*math.random()
	local targetLoc = Vector:New(spawn_X+targetRadius*math.cos(targetAngle), spawn_Y+targetRadius*math.sin(targetAngle), spawn_Z)
	local travel = targetLoc-currentLoc
	local length = math.sqrt(travel.x^2 + travel.y^2)
	actor:MoveToAbs(targetLoc, length/4)
	actor:WaitMovementComplete()
	if 100*math.random() < waitChance then
		scene:WaitTimer(math.random()*(waitTimeMax-waitTimeMin) + waitTimeMin)
	end
end
print(""despawned!"")
"
10245,Vector Math,"function BuildVector(facing, fwd, right)
	local facingRads = math.rad(facing)
	local facingX = math.cos(facingRads)
	local facingY = math.sin(facingRads)
	
	local absPos = Vector:New(
		(facingX*fwd - facingY*right) * battleScale,
		(facingY*fwd + facingX*right) * battleScale,
		0)
	
	if spawnFwdOffset then
		absPos.x = absPos.x + spawnFwdOffset
	end

	return absPos
end

-- 	baseLoc - the unit facing
--  faceLoc - the location being faced
--  offset  - the distance along the Base -> Face vector
function FastLocalFacingCoordinates( baseLoc, faceLoc, offset ) 
	local frontVector = baseLoc:UnitVectorFromAtoB(faceLoc)
	local upVector = Vector:New(0,0,1)
	local leftVector = frontVector:CrossProductOfUnitVectors(upVector)

	local newLoc = baseLoc
			+ frontVector * offset.x
			+ leftVector * offset.y
			+ upVector * offset.z;

	return newLoc;
end
"
10246,Pet Offsets,"
-- Replace Home Locations

HOME_LIST = {
	-- Weather
	[0] = Transform:New(Vector:New(  0, 0, 1), 180);
	-- Players
	[1] = Transform:New(Vector:New( -2, 0, 0), 0);
	[2] = Transform:New(Vector:New(  2, 0, 0), 180); 
};
MASTER_SPOTS = { 
	-- Weather
	[0] = Transform:New(Vector:New( 0, 0, 3), 180);
	-- Players
	[1] = Transform:New(Vector:New( -5, 0, 1), 0);
	[2] = Transform:New(Vector:New(  5, 0, 1), 180);
};

BACKROW_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1,  2, 0) , 0 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -2, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  2, 0) , 180 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1, -2, 0) , 180 );
	};
}

WILD_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -1, -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -16,  8, 0) , 0 ); 
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -16, -8, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  1,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  16,  8, 0) , 180 );
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  16, -8, 0) , 180 );
	};
}


FLEE_PET_OFFSETS = {
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11,  -1, 0) , 0 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11,  6, 0) , 0 );
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player1].position + Vector:New( -11, -6, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11,  1, 0) , 180 );
		[2] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11,  6, 0) , 180 );
		[3] = Transform:New( MASTER_SPOTS[PetBattlePlayerID.Player2].position + Vector:New(  11, -6, 0) , 180 );
	};
}


VICTORY_PET_OFFSETS = {
	Vector:New(-1, 0, 0 );
	Vector:New(-1, 2, 0 );
	Vector:New(-1, -2, 0 );
};


-- Locations
OBJECT_LOCATIONS = {
	[PetBattlePlayerID.Weather] = {
		[1] = Transform:New(Vector:New( 0, 0, 0), 0);
		[2] = Transform:New(Vector:New( 0, 1, 0), 0);
		[3] = Transform:New(Vector:New( 0, -1, 0), 0);
	};
	[PetBattlePlayerID.Player1] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1,  2, 0) , 0 );
		[2] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1, -2, 0) , 0 );
		[3] = Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New( -1,  0, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New(  1,  2, 0) , 180 );
		[2] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New(  1, -2, 0) , 180 );
		[3] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New( -1,  0, 0) , 180 );
	};
}

MAX_FIELD_OBJECTS = 3;

-- Wall Locations
WALL_LOCATIONS = {
	[PetBattlePlayerID.Weather] = {
		[1] = Transform:New(Vector:New( 0, 0, 0), 0);
	};
	[PetBattlePlayerID.Player1] = {
		[1] = "
10247,[1] Pet Offsets,"Transform:New( HOME_LIST[PetBattlePlayerID.Player1].position + Vector:New(  1.5,  0, 0) , 0 );
	};
	[PetBattlePlayerID.Player2] = {
		[1] = Transform:New( HOME_LIST[PetBattlePlayerID.Player2].position + Vector:New( -1.5,  0, 0) , 180 );
	};
}"
10248,State Variables,"

STATE_FLYING = 33;
STATE_STEALTHED = 84;
STATE_UNDERGROUND = 30;
STATE_WATER_BUBBLED = 85;
STATE_INVISIBLE = 67;
STATE_FLY_TIER = 128;
STATE_FETISH_RANDOM_COLOR = 129;
STATE_BIGGLESWORTH = 144;
STATE_CHAOS = 158;
STATE_TREASURE_GOBLIN = 176;

-- Grats Sen'jin Fetish is hard coded into the game!
FETISH_BASE_STATE = 11563;
FETISH_STATES = {11558, 11560, 11562 };

STATE_BLOCK_CHARGES = 74;
STATE_REDIRECT_AURA = 75;

STATE_CHARGING 	= 113;
STATE_RECOVERING= 114;
STATE_CLEANSE 	= 141;

STATE_CLONE_ACTIVE = 100;
STATE_CLONE_AURAID = 118;
STATE_CLONE_PBOID  = 101;
STATE_CLONE_HEALTH = 105;
STATE_CLONE_MAX_HP = 106;

STATE_LOOKUP = {
    STATE_Is_Dead = 1;
    STATE_maxHealthBonus = 2;
    STATE_speedBonus = 3;
    STATE_Stat_Kharma = 4;
    STATE_healthBonus = 17;
    STATE_Stat_Power = 18;
    STATE_Stat_Stamina = 19;
    STATE_Stat_Speed = 20;
    STATE_Mechanic_IsPoisoned = 21;
    STATE_Mechanic_IsStunned = 22;
    STATE_Mod_DamageDealtPercent = 23;
    STATE_Mod_DamageTakenPercent = 24;
    STATE_Mod_SpeedPercent = 25;
    STATE_Ramping_DamageID = 26;
    STATE_Ramping_DamageUses = 27;
    STATE_Condition_WasDamagedThisTurn = 28;
    STATE_untargettable = 29;
    STATE_Mechanic_IsUnderground = 30;
    STATE_Last_HitTaken = 31;
    STATE_Last_HitDealt = 32;
    STATE_Mechanic_IsFlying = 33;
    STATE_Mechanic_IsBurning = 34;
    STATE_turnLock = 35;
    STATE_swapLock = 36;
    STATE_Stat_CritChance = 40;
    STATE_Stat_Accuracy = 41;
    STATE_Passive_Critter = 42;
    STATE_Passive_Beast = 43;
    STATE_Passive_Humanoid = 44;
    STATE_Passive_Flying = 45;
    STATE_Passive_Dragon = 46;
    STATE_Passive_Elemental = 47;
    STATE_Passive_Mechanical = 48;
    STATE_Passive_Magic = 49;
    STATE_Passive_Undead = 50;
    STATE_Passive_Aquatic = 51;
    STATE_Mechanic_IsChilled = 52;
    STATE_Weather_BurntEarth = 53;
    STATE_Weather_ArcaneStorm = 54;
    STATE_Weather_Moonlight = 55;
    STATE_Weather_Darkness = 56;
    STATE_Weather_Sandstorm = 57;
    STATE_Weather_Blizzard = 58;
    STATE_Weather_Mud = 59;
    STATE_Weather_Rain = 60;
    STATE_Weather_Sunlight = 61;
    STATE_Weather_LightningStorm = 62;
    STATE_Weather_Windy = 63;
    STATE_Mechanic_IsWebbed = 64;
    STATE_Mod_HealingDealtPercent = 65;
    STATE_Mod_HealingTakenPercent = 66;
    STATE_Mechanic_IsInvisible = 67;
};
"
10249,Bit Operations,"function bit(p)
	return 2 ^ (p - 1)  -- 1-based indexing
end

-- Typical call:  if hasbit(x, bit(3)) then ...
function hasbit(x, p)
	return x % (p + p) >= p       
end

function setbit(x, p)
	return hasbit(x, p) and x or x + p
end

function clearbit(x, p)
	return hasbit(x, p) and x - p or x
end

function bitor(x, y)
	local p = 1; 
	local z = 0; 
	local limit = x > y and x or y
	while p <= limit do
		if hasbit(x, p) or hasbit(y, p) then
			z = z + p
		end
		p = p + p
	end
	return z
end

function bitand(x, y)
	local p = 1; 
	local z = 0; 
	local limit = x > y and x or y
	while p <= limit do
		if hasbit(x, p) and hasbit(y, p) then
			z = z + p
		end
		p = p + p
	end
	return z
end"
10250,Helper Functions,"function GetTeamByIndex(teamIndex)
	return teams[teamIndex]
end

function GetActivePetByIndex(teamIndex)
	local team = GetTeamByIndex(teamIndex)
	return team.pets[team.activePet]
end

function GetNaturalAlpha(ROID)
	local pet = ROIDTOUNIT( ROID ) 
	return GetNaturalAlphaForPet(pet)
end

function GetNaturalAlphaForPet(pet)
	if ( not pet ) then
		return 0
	elseif ( pet.underground ) then 
		return 0
	elseif ( pet.stealthed ) then 
		return 0.5
	elseif ( pet.isTrapped ) then
		return 0
	else
		return 1
	end
end

-- [ABrazie]: Created this function to handle the situation where dead creatures
-- 		Would continue to face their targets after death. 
-- 
function DefaultFacing( attackerROID, victimROID ) 
	local attacker = ROIDTOUNIT( attackerROID );
	local victim = ROIDTOUNIT( victimROID );

	if ( victim and attacker.currentHealth and attacker.currentHealth> 0 ) then
		attacker.actor:SetFacingToTarget( victim.actor, Vector:New() )
	end
end

function CreateAxisAtLoc(transform, scale)
	local scaleCreateData = ActorCreateData:Default()
	scaleCreateData.name = ""scaleAxis"" 
	scaleCreateData.model = ""SPELLS\\AxisTestObject.m2""
	scaleCreateData.scale = scale or 2.0
	scaleCreateData.transform = transform or Transform:New()
	scaleCreateData.interactible = false
	scaleCreateData.groundSnap = false
	local axis = scene:SpawnActor(scaleCreateData)

	return axis;
end

function EnemyOf( playerID )
	return 3 - playerID
end
"
10251,ROIDs,"
-- Responsible Object ID
ROID_TYPE_PLAYER_PET_SLOT_1 = 0x0001; 
ROID_TYPE_PLAYER_PET_SLOT_2 = 0x0002;
ROID_TYPE_PLAYER_PET_SLOT_3 = 0x0004;
ROID_TYPE_PLAYER_MASTER		= 0x0008;
ROID_TYPE_PLAYER_PAD		= 0x0010;
ROID_TYPE_PLAYER_PAD_OBJ_1	= 0x0020;
ROID_TYPE_PLAYER_PAD_OBJ_2	= 0x0040;
ROID_TYPE_PLAYER_PAD_OBJ_3	= 0x0080;

ROID_TYPE_WEATHER			= 0x0100;

ROID_TYPE_PLAYER_1 			= 0x1000;
ROID_TYPE_PLAYER_2 			= 0x2000; 

function ROIDISAPET( ROID ) 
	return (bitand(ROID,0x17) > 0)
end

function ROIDISAOBJECT ( ROID )
	return (bitand(ROID,0x0E0) > 0)
end

function ROIDISWEATHER ( ROID )
	return (bitand(ROID,ROID_TYPE_WEATHER) > 0)
end

function ROIDISUNIT( ROID )  
	return ( ROIDISAPET( ROID ) or ROIDISAOBJECT ( ROID ) )
end

function ROIDTOSTRING( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

	if ( not ROIDISAPET( ROID ) and not ROIDISAOBJECT( ROID ) ) then
		if ( ROID == ROID_TYPE_PLAYER_1 ) then
			return ""Player 1 - No Unit"";
		elseif ( ROID == ROID_TYPE_PLAYER_2 ) then
			return ""Player 2 - No Unit"";
		elseif ( ROID == ROID_TYPE_WEATHER ) then
			return ""Weather - No Unit"";
		end

		return ""Invalid ROID: ""..ROID;
			
	end



	local unit = ROIDTOUNIT(ROID);
	local playerID = unit.playerID;
	local slot = unit.slot;

	local castingTeamName = ""Unknown"";
	local castingPetSlotName = ""Unknown""; 

	for k,v in pairs(PetBattlePlayerID) do 
		if ( v == playerID ) then
			castingTeamName = k;
		end
	end


	if ( ROIDISAPET ( ROID ) ) then 
		castingPetSlotName = "" - Pet ""; 
		
		local pet = unit;
		for k,v in pairs(PetBattlePetID) do 
			if ( v == slot ) then
				castingPetSlotName = castingPetSlotName..k;
			end
		end
	elseif ( ROIDISAOBJECT ( ROID ) ) then 
		castingPetSlotName = "" - Object ""; 
		local sub = ( bitand(ROID,0x0E0) )

		if ( sub == ROID_TYPE_PLAYER_PAD_OBJ_1 ) then 
			castingPetSlotName = castingPetSlotName..'1';
		elseif ( sub == ROID_TYPE_PLAYER_PAD_OBJ_2 ) then 
			castingPetSlotName = castingPetSlotName..'2';
		elseif ( sub == ROID_TYPE_PLAYER_PAD_OBJ_3 ) then 
			castingPetSlotName = castingPetSlotName..'3';
		end
	end

	return castingTeamName..castingPetSlotName;
end

function ROIDTOPLAYER( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

	local playerID = 0;
	if ( bitand(ROID, ROID_TYPE_WEATHER) == ROID_TYPE_WEATHER ) then
		playerID = PetBattlePlayerID.Weather;
	elseif ( bitand(ROID, 0xF000) == ROID_TYPE_PLAYER_1 ) then
		playerID = PetBattlePlayerID.Player1;
	elseif ( bitand(ROID, 0xF000) == ROID_TYPE_PLAYER_2 ) then
		playerID = PetBattlePlayerID.Player2;
	else
		return nil;
	end

	return GetTeamByIndex(playerID)
end

function ROIDTOPET( ROID ) 
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOSTRING."");
		return nil;
	end

--print(ROID,"" p1: "",ROID_TYPE_PLAYER_1, "" p2: "",ROID_TYPE_PLAYER_2)
	local player = ROIDTOPLAYER( ROID );

	if ( player ) then
		local slot = nil;

		if ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_1 ) then
			slot = PetBattlePetID.Slot1
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_2 ) then
			slot = PetBattlePetID.Slot2
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PET_SLOT_3 ) then
			slot = PetBattlePetID.Slot3
		elseif ( bitand(ROID, 0x001F) == ROID_TYPE_PLAYER_PAD ) then
			slot = PetBattlePetID.Pad
		elseif ( bitand(ROID, ROID_TYPE_WEATHER) > 0 ) then
			slot = PetBattlePetID.Weather
		end

		if ( slot ) then
			return player.pets[slot]
		end
	end

	return nil;
end

function ROIDTOOBJ( ROID )
	if ( not ROID ) then
		warning(""ERROR: Nil passed in to ROIDTOOBJ."");
		return nil;
	end

	local player = ROIDTOPLAYER( ROID );

	if ( player ) then
		local slot = nil;

		if ( bitand(ROID, 0x0E0) == "
10252,[1] ROIDs,"ROID_TYPE_PLAYER_PAD_OBJ_1 ) then
			slot = 1
		elseif ( bitand(ROID, 0x0E0) == ROID_TYPE_PLAYER_PAD_OBJ_2 ) then
			slot = 2
		elseif ( bitand(ROID, 0x0E0) == ROID_TYPE_PLAYER_PAD_OBJ_3 ) then
			slot = 3
		end

		if ( slot ) then
			local object, playerID, slot, transform = GetObject(player.playerID, slot)

			return object;
		end
	end

	return nil;
end

function ROIDTOWEATHER ( ROID )
	if ( ROID == ROID_TYPE_WEATHER ) then 
		local player = ROIDTOPLAYER( ROID );

		return player.pets[0];
	else
		warning(""ERROR: Invalid ROID passed to ROIDTOWEATHER."");
	end
end

function ROIDTOUNIT( ROID )
	if ( ROIDISAPET( ROID ) ) then
		local pet = ROIDTOPET( ROID );
		return pet;
	elseif ( ROIDISAOBJECT ( ROID ) ) then
		local obj = ROIDTOOBJ( ROID );

		return obj;
	elseif ( ROIDISWEATHER ( ROID ) ) then
		return ROIDTOWEATHER ( ROID );
	else
		warning(""ERROR: Invalid ROID passed to ROIDTOUNIT, "", ROID);
	end
end
"
10253,ROIDs - Conversion,"
function GETROIDFROMPLAYERID( playerID )
	local roid = 0;
	if ( playerID == 0 ) then
		roid = roid + ROID_TYPE_WEATHER
	elseif ( playerID == 1 ) then
		roid = roid + ROID_TYPE_PLAYER_1
	elseif ( playerID == 2 ) then
		roid = roid + ROID_TYPE_PLAYER_2
	end
	return roid;

end

function GETROIDFROMPLAYERIDANDSLOT( playerID, petSlot )
	local roid = GETROIDFROMPLAYERID( playerID );
--print(""Getter: "",playerID, "" "", slot);

	if ( roid == ROID_TYPE_WEATHER ) then 
		return roid;
	end

	if ( petSlot == PetBattlePetID.Slot1 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_1
	elseif ( petSlot == PetBattlePetID.Slot2 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_2
	elseif ( petSlot == PetBattlePetID.Slot3 ) then
		roid = roid + ROID_TYPE_PLAYER_PET_SLOT_3
	elseif ( petSlot == PetBattlePetID.Pad ) then
		roid = roid + ROID_TYPE_PLAYER_PAD
	end

	return roid
end


function PETTOROID( pet ) 
	local roid  = GETROIDFROMPLAYERIDANDSLOT ( pet.playerID, pet.slot );

	return roid;
end

function GETROIDFORPLAYERPAD( playerID ) 
	local roid = GETROIDFROMPLAYERID( playerID )

	return roid + ROID_TYPE_PLAYER_PAD;
end


function GETOBJECTROIDFROMPLAYERIDANDSLOT( playerID, objectSlot )
	local roid = GETROIDFROMPLAYERID( playerID );

	if ( roid == ROID_TYPE_WEATHER ) then 
		return roid;
	end

	if ( objectSlot == 1 ) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_1
	elseif ( objectSlot == 2 ) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_2
	elseif ( objectSlot == 3) then
		roid = roid + ROID_TYPE_PLAYER_PAD_OBJ_3
	end

	return roid
end


function TurnToUserROID(turn)
	local userPlayerID = turn.playerID
	local userSlot = turn.petSlot

	local userROID = GETROIDFROMPLAYERIDANDSLOT( userPlayerID, userSlot )

	return userROID;
end

function EffectToROIDs(effect)

	local targets = {}
	
	for index,result in pairs(effect.results) do 
		local roid = ResultToTargetROID(result)
		
		if ( roid ) then
			targets[index] = roid;
		end
	end

	return targets;
end

function ResultToTargetROID(result)
	if ( result.targetPlayerID ) then 
		local targetPlayerID, targetSlot = result.targetPlayerID, result.targetPetSlot

		local roid = GETROIDFROMPLAYERIDANDSLOT( targetPlayerID, targetSlot );

		return roid;
	elseif ( result.swapPlayerID ) then 
		local targetPlayerID, targetSlot = result.swapPlayerID, result.newFrontPet

		local roid = GETROIDFROMPLAYERIDANDSLOT( targetPlayerID, targetSlot );

		return roid;
	else
		print(""ResultToTargetROID Error"");
		print(result);
	end

	return nil;
end

function PBOIDTOROID ( pboid ) 
	if ( pboid == 1 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_1;
	elseif ( pboid == 2 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_2;
	elseif ( pboid == 3 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PET_SLOT_3;
	elseif ( pboid == 4 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_1;
	elseif ( pboid == 5 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_2;
	elseif ( pboid == 6 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PET_SLOT_3;
	elseif ( pboid == 7 ) then 
		return ROID_TYPE_PLAYER_1 + ROID_TYPE_PLAYER_PAD;
	elseif ( pboid == 8 ) then 
		return ROID_TYPE_PLAYER_2 + ROID_TYPE_PLAYER_PAD;
	elseif ( pboid == 9 ) then
		return ROID_TYPE_WEATHER;
	end
end"
10254,Pet Movement,"

function PerformRelativeSlide( opponent, pet, front, left, up, duration ) 
	if ( opponent.moveSpeed <= 0 ) then
		return;
	end

	local newDrift = CalculateUnitFacingRelativeOffset(opponent, pet, front, left, up ) 

	local opponentDriftPoint = newDrift;
	local driftDistance = opponentDriftPoint:Dist( opponent.actor:GetPosition() )

	local speed = opponent.moveSpeed;

	if ( not speed ) then
		speed = 5;
	else
		speed = opponent.moveSpeed;
	end

	local duration = (duration or driftDistance/speed)

	opponent.actor:MoveToAbs(opponentDriftPoint, duration );

end

function BuildKnockbackSpline(petStartPosition, petFinalPoint, duration)
	local gravity = -9.8/2; -- M / sec / sec
	local points = 10;  

	local dx = petFinalPoint.x - petStartPosition.x;
	local dy = petFinalPoint.y - petStartPosition.y;
	local xVelocity = dx / duration;  -- M / sec
	local yVelocity = dy / duration;  -- M / sec

	local zVelocity = ( gravity * duration * duration ) * -2;

	local list = {};
	local timeStep = duration / points

	for i=0, points do 
		local time = timeStep * i; 
		local x = time * xVelocity;
		local y = time * yVelocity;
		local u = gravity*time*time + zVelocity*time;
--print(""t: "",time,"" x: "",x,""u: "",u);
		table.insert(list, 
			petStartPosition + Vector:New(x,y,u) 
			);
	end
	table.insert(list, petFinalPoint);
	table.remove(list, 1);

	return list;
end


function CalculateLocationFacingRelativeOffset(pet, location, front, left, up)
	--FastLocalFacingCoordinates ( pet.actor:GetPosition(), location, Vector:New(front, left, up) );

	return FastLocalFacingCoordinates ( pet.actor:GetPosition(), location, Vector:New(front, left, up) );
end

function CalculateUnitFacingRelativeOffset(opponent, pet, front, left, up ) 
	local opponentLocation = opponent.actor:GetPosition();

	return CalculateLocationFacingRelativeOffset(opponent, pet.actor:GetPosition(), front, left, up);
end"
10255,Pet Movement - Matrix Generation,"-- Returns functions to get a local coordinate transformation matrix from the source point to the target point

function GetStandardMatrixOps ( sourcePosition, targetPosition )
	local targetPosition = targetPosition or Vector:New(0,0,0);

	if ( sourcePosition:Dist( targetPosition ) < 0.1 ) then
		warning(""INVALID distances provided to GetStandardMatrixOps!"");

		targetPosition = Vector:New(0,0,0);
	end

	local M = LocalToWorldMatrix ( targetPosition, sourcePosition );
	local M1 = WorldToLocalMatrix ( targetPosition, sourcePosition );


	-- To Convert from Local to World:
	-- 	Rotate, then Translate

	-- To Convert, from World to Local:
	--  Translate, then Rotate

	local LocalToWorldCoords  = function( v )
		return ApplyMatrixToVectorPoint( M, v );
	end
	local WorldToLocalCoords  = function( v )
		return ApplyMatrixToVectorPoint( M1, v );
	end

	return LocalToWorldCoords, WorldToLocalCoords
end"
10256,Pet Movement - Spline Attack,"--
-- Spline_Attack2 - path = MoveData object
-- 
function Spline_Attack2(testFunc, successFunc, finishFunc, path, stretchPath, actor, attackPoint )

	-- Stretch
	if ( stretchPath ) then
	-- Convert to relative space
		local sourcePosition, targetPosition = actor:GetPosition(), attackPoint
		local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

		local dist = attackPoint:Dist( actor:GetPosition() );

		for _,vect in pairs( path.points)  do
			vect.pos.x = vect.pos.x * dist;
		end

		for _,vect in pairs( path.points ) do
			vect.pos = LocalToWorldCoords( vect.pos );
		end
	end

	actor:Move( path );

	local ranSuccess = false;
	local dist = actor:GetPosition():Dist( attackPoint );

	repeat  
		local keepGoing, succeeded = testFunc()
		
		if ( succeeded ) then

			successFunc();
			ranSuccess = true;
		end

		scene:WaitTimer(0.0001);

	until ( keepGoing == false );

	actor:WaitMovementComplete()
	actor:SetSnapToGround(true)

	finishFunc ( ranSuccess );
end

--
-- returns testFunc, successFunc, finishFunc
--
function Spline_Attack2_GetDefaultHandlers(turn, actor, attackPoint, successDistance)
	local successThreshold = successDistance or 2;

	-- Default Hit Test Function
	--
	--	returns:
	--		arg1 - keep testing
	--		arg2 - succeeded
	--
	local testFunc = testFunc or function()
		local dist = attackPoint:Dist( actor:GetPosition() );

		if ( actor:IsMoving() ) then

			dist = actor:GetPosition():Dist( attackPoint );

			if ( dist < successThreshold ) then 
				return false, true;
			end

			return true, false;
		else
			return false, false;
		end
	end

	-- When you pass the test the first time
	local successFunc = function()
		local effect = turn.effects[1];
		DefaultDoEffectProcessing( ROID, ""effect"", effect ); 
		DefaultEffectVisualHandler(ROID, effect, turn.turnVisualID)
	end
	
	-- Default Success Function
	-- 
	local finishFunc = function( ranSuccess )
		local start = 1;

		if ( ranSuccess ) then 
			start = 2;
		end

		-- Handle all effects
		for index=start,#turn.effects do 
			local effect = turn.effects[index];
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end 
	end

	return testFunc, successFunc, finishFunc;
end

-- Spline_Attack - path == array of bezier spline points
--

function Spline_Attack( testFunc, successFunc, finishFunc, path, isAbsolutePath, pathDuration, actor, targetROID )

	-- MY MOVEMENT START
	local opponent = ROIDTOPET(targetROID);

	local opponentLocation = opponent.actor:GetPosition()
	local frontVector = opponentLocation:UnitVectorFromAtoB(actor:GetPosition())
	local upVector = Vector:New(0,0,1)
	local leftVector = frontVector:CrossProductOfUnitVectors(upVector)

	actor:ClearFacing(); 

	local points = {}

	-- First calculate the bezier
	local dist = opponentLocation:Dist( actor:GetPosition() );
	local heightFloor = opponent.actor:GetPosition().z - actor:GetPosition().z;

	-- Transform the path into relative space
	if ( not isAbsolutePath ) then

		for k,v in pairs( path.points ) do 
			if ( v.leftArm ) then 
				v.leftArm.x = v.leftArm.x * dist;
				v.leftArm.z = heightFloor * math.max(0, math.min(v.leftArm.x, 1)) + v.leftArm.z;
			end
			if ( v.rightArm ) then 
				v.rightArm.x = v.rightArm.x * dist;
				v.rightArm.z = heightFloor * math.max(0, math.min(v.rightArm.x, 1)) + v.rightArm.z;
			end
			if ( v.basePoint ) then 
				v.basePoint.x = v.basePoint.x * dist;
				v.basePoint.z = heightFloor *  math.max(0, math.min(v.basePoint.x, 1)) + v.basePoint.z;
			end
		end
	end


	-- Start
	local relativeSpline = Brazie_SplineBuilder( path, ""x"", ""z"");
	local realSpline = {};

	for i=1, #relativeSpline  do 
		local relativeNode = relativeSpline[i];
		local newNode = FastLocalFacingCoordinates ( "
10257,[1] Pet Movement - Spline Attack,"actor:GetPosition(), opponent.actor:GetPosition(), relativeNode )

		table.insert( realSpline, newNode );
	end

	actor:SetSnapToGround( false )
	actor:MoveSplineAbs( realSpline, pathDuration )

	local ranSuccess = false;
	local dist = actor:GetPosition():Dist( opponent.actor:GetPosition() );

	repeat  
		local keepGoing, succeeded = testFunc()
		
		if ( succeeded ) then

			successFunc();
			ranSuccess = true;
		end

		scene:WaitTimer(0.0001);

	until ( keepGoing == false );

	actor:WaitMovementComplete()
	actor:SetSnapToGround(false)

	-- MY MOVEMENT END

	finishFunc ( ranSuccess );
end"
10258,Pet Movement - GetRoll,"
function LockToRollActor( petActor, rollOffset )

	-- Roll test:
	--  The procupine actor is made relative to a stalker that is rolling, and
	--  the stalkers movement path is offset by the pivot point of the roll

	local stalkerModel = fid(124640)
	--local stalkerModel = ""spells\\axistestobject.m2""

	local stalkerCreateData = ActorCreateData:Default()
	stalkerCreateData.modelFileID = stalkerModel
	stalkerCreateData.groundSnap = true
	local stalker = scene:SpawnActor(stalkerCreateData)


	-- move the stalker to the correct initial position, and make
	-- the actor relative to it
	stalker:SetHoverHeight(rollOffset)
	local transform = petActor:GetTransform()
	transform.position.z = transform.position.z + rollOffset
	stalker:SetTransform(transform)
	stalker:SetFacingTurnRate(petActor:GetFacingTurnRate())
	petActor:SetSnapToGround(false)
	petActor:SetRelativeTo(stalker)

	return stalker;
end

function UnlockRollActor( petActor, stalker, rollOffset ) 
	-- restore the actors position and groun snapping
	petActor:SetRelativeTo(nil)
	petActor:SetSnapToGround(true)
	local transform = stalker:GetTransform()
	transform.position.z = transform.position.z - rollOffset
	transform.roll = 0;
	petActor:SetTransform(transform)

end"
10259,Bezier Curve Generation,"local scaleCreateData = ActorCreateData:Default()
scaleCreateData.name = ""scaleAxis""
scaleCreateData.modelFileID = fid(397940)
scaleCreateData.scale = 1.0
scaleCreateData.interactible = false
scaleCreateData.groundSnap = false;


function Brazie_SplineBuilder( splineData, indexA, indexB ) 
	local finalSpline = {};

	for i=1,#splineData do
		local node = splineData[i];
		local nextNode = splineData[i+1];

		-- If there are spline arms specified, build a bSpline
		if ( nextNode and (node.rightArm and nextNode.leftArm ) ) then 
--print(""SEGMENT: ""..i.. "" handled as bSpline"");
			local bezierInput = {};

			table.insert(bezierInput, node.basePoint);
--[[
		scaleCreateData.transform = Transform:New( node.basePoint, 45 )
		scaleCreateData.scale = 2;
		actor = scene:SpawnActor( scaleCreateData )
--]]
			table.insert(bezierInput, node.rightArm);
			table.insert(bezierInput, nextNode.leftArm);
			table.insert(bezierInput, nextNode.basePoint);


			local output = Build_Bezier( bezierInput, 10 )

			for j=1,#output do 
				local newPoint = output[j];

				if ( #finalSpline > 0 and newPoint:Dist(finalSpline[#finalSpline]) < 0.01 ) then
				else
					table.insert(finalSpline, newPoint );
				end
			end
		-- Otherwise insert splines in a line
		else
			table.insert(finalSpline, node.basePoint);
		end
	end

	return finalSpline;
end

function Bezier_GetFactorial(n)
	if ( n < 0) then 
		print (""ERROR: Factorial < 0 requested in Bezier Curve Calculation"")
		return 1;
	elseif ( n > 32 ) then 
		print (""ERROR: Factorial > 32 requested. Not supported."");
		return 1;
	end

	return FACTORIAL_TABLE[n];
end

function Build_Bezier( arrayOfPoints, numPointsRequested )
	local bezier = {};

	local npts = #arrayOfPoints/2;
	local iCount, jCount;
	local step, t;

	-- Calculate the points on the curve

	iCount = 0;
	t = 0;
	step = 1 / (numPointsRequested-1);

	for i1 = 1, numPointsRequested do 
		if ( (1-t) < 0.00000005 ) then 
			t = 1;
		end

		local u = 1 - t;
		local tt = t * t;
		local uu = u * u;
		local uuu = uu * u;
		local ttt = tt * t;		

		local newPoint = arrayOfPoints[1] * uuu;
		newPoint = newPoint + ( arrayOfPoints[2] * t * uu * 3 );
		newPoint = newPoint + ( arrayOfPoints[3] * u * tt * 3 );
		newPoint = newPoint + ( arrayOfPoints[4] * ttt );

		table.insert(bezier, newPoint);
		
		t = t + step;
	end

	return bezier
end
"
10261,Init Pad,"--------------------------------------------------------------------------------
-- pad
padModel = fid(124640)
padAlpha = 1.0
padScale = 1.0


function InitPad(transform)
	-- spawn a pad for this team
	local padCreateData = ActorCreateData:Default();
	padCreateData.name = ""pad"";
	padCreateData.modelFileID = padModel;
	padCreateData.transform = transform;
	padCreateData.scale = padScale*battleScale;

	pad = scene:SpawnActor(padCreateData)
	pad:Fade(padAlpha, 0.5)
	pad:SetInteractible(false);

	return pad;
end"
10262,Init Player Team,"
allPlayers = { }

function WaitAllPetsLoaded()

	local waitCondition = function()
		-- all actors must be renderable
		for playerID, player in pairs( allPlayers ) do
			if ( player.pets ) then 
				for slot, pet in pairs ( player.pets ) do
					if not pet.actor:IsReadyToDisplay() then
						return false
					end
				end
			end
		end
		return true
	end
	scene:WaitCondition(waitCondition)

end

function FadeInAllPets( fadeInTime )

	for playerID, player in pairs( allPlayers ) do
		if (player.isWeather == false) then
			for slot, pet in pairs ( player.pets ) do
				if (pet.isPet == true) then
					pet.actor:SetHidden(false)
					local targetAlpha = GetNaturalAlphaForPet(pet)
					pet.actor:Fade(targetAlpha, fadeInTime)
				end
			end
		end
	end

	-- wait until faded in
	if fadeInTime > 0 then
		scene:WaitTimer( fadeInTime )
	end

	-- make everything interactible again
	for playerID, player in pairs( allPlayers ) do
		if (player.isWeather == false) then
			for slot, pet in pairs ( player.pets ) do
				if (pet.isPet == true) then
					pet.actor:SetInteractible( true )
					if (Actor.SetSelectable) then
						pet.actor:SetSelectable( true )
					end
				end
			end
		end
	end

end

function InitTeam(team)
	local playerID = team.playerID;

	-- Save the team
	allPlayers[playerID] = team;
	team.playerID = playerID;

	-- Spawn a Pad
	local homeTransform = HOME_LIST[playerID];
	team.pad = InitPad(homeTransform);

	-- Save the home loc
	team.home = homeTransform.position;

	-- Weather is neutral, so set it up then eject
	if (playerID == PetBattlePlayerID.Weather) then
		team.isWeather = true

		local padPet = { 
			isPad = true;
			actor = team.pad;
			auras = {}; 
			slot = petIndex; 
			--team = team.playerID; 
			playerID = team.playerID;
			moveSpeed = 1000;
		}; 
		team.pets = {};
		team.pets[PetBattlePetID.Weather] = padPet;
		team.pets[PetBattlePetID.Weather].actor = team.pad;

		InitStates( team.playerID, PetBattlePetID.Weather, team.petDescs[PetBattlePetID.Weather].states );
		InitAuras( team.playerID, PetBattlePetID.Weather, team.petDescs[PetBattlePetID.Weather].auras )

		return;
	else
		team.isWeather = false
	end

	-- Create the Master
	local masterTransform = MASTER_SPOTS[playerID];
	local masterLoc = masterTransform.position;
	local master
	
	-- Spawn an NPC if needed
	if (team.npcCreatureID and team.npcCreatureID > 0 and team.npcDisplayID) then
		local npcCreateData = ActorCreateData:Default();
		npcCreateData.creatureID = team.npcCreatureID;
		npcCreateData.creatureDisplayID = team.npcDisplayID;
		npcCreateData.interactible = false;
		npcCreateData.transform = masterTransform;
		npcCreateData.scale = battleScale;

		-- try and smooth phase the NPC to an actor
		npcCreateData.smoothPhase = true;
		local maxWait = 2.5
		local pingInterval = 0.25; -- quarter of a second ping
		local currentWait = 0.0;
		local phaseTimer = scene:Timer(pingInterval);
		while (scene:ShouldWaitForSmoothPhase(npcCreateData) and (currentWait < maxWait)) do
			phaseTimer:Reset();
			scene:Wait(phaseTimer);
			currentWait = currentWait + pingInterval
		end
		master = battleScene:SpawnNPC( playerID, npcCreateData );

		master:SetFacingToAbs(Vector:New());

		-- Assign the master to his team

		-- Darren's scripts required these two
		team.npcActor = master;
		team.playerDisplay = master;

		-- Mine is generic
		team.master = master;
	end

	if ( team.isNPC == true and team.npcActor == nil ) then 
		team.wildBattle = true;
	end

	-- Assign Pets to temporary data
	team.pets = {};

	mainPetLoc = homeTransform;
	
	local backLineCount = 0;

	local offsetTable = BACKROW_PET_OFFSETS;

	-- If it's a wild battle, make them run in from a distance.
	if ( team.wildBattle and initialBattleState.battleState == "
10263,[1] Init Player Team,"PetBattleState.WaitingPreBattle ) then
		offsetTable = WILD_PET_OFFSETS;
	end

	for slot,v in pairs( team.petDescs ) do 
		-- If its your pad object
		if ( slot == PetBattlePetID.Pad ) then
			local padPet = { 
				isPad = true;
				actor = team.pad;
				auras = {}; 
				slot = slot; 
				--team = team.playerID; 
				playerID = team.playerID;
				sessile = true;
			};
			team.pets[slot] =  padPet;

		-- Spawn the appropriate pet in front if the game is mid-session
		elseif ( slot == team.activePet ) then 
			local petLoc = mainPetLoc

			if ( initialBattleState.battleState == PetBattleState.WaitingPreBattle ) then

				petLoc = offsetTable[playerID][3]
			end

			team.pets[slot] = InitPet(team, slot, petLoc);
			team.pets[slot].backlineIndex = 3;
		else
			backLineCount = backLineCount + 1;

			-- Placed in master-relative coordinates
			local transform = offsetTable[playerID][backLineCount]   
			team.pets[slot] =  InitPet(team, slot, transform );
			team.pets[slot].backlineIndex = backLineCount;
		end
		

--[[
if ( id == PetBattlePetID.Pad ) then
	print(""DEBUG AURAS:""..#v.auras);
	DEBUG_TABLE(v.auras);
	print(""DEBUG STATES:""..#v.states);
	DEBUG_TABLE(v.states);
end
--]]
	end


	-- If the battle has already started
	-- Make them all face the guy in the center
	if ( initialBattleState.battleState ~= PetBattleState.WaitingPreBattle ) then 
		for k,v in pairs(team.pets) do
			if ( k ~= team.activePet ) then 
				v.actor:SetFacingToTarget(team.pets[team.activePet].actor, Vector:New());
			else
				local enemyTeam = teams [3-playerID];
				if ( enemyTeam.pets ) then 
					v.actor:SetFacingToTarget(enemyTeam.pets[enemyTeam.activePet].actor, Vector:New());
				end
			end
		end

	-- Otherwise, everyone faces the center of the game
	else
		for k,v in pairs(team.pets) do
			if ( k ~= team.activePet ) then 
				v.actor:SetFacingToAbs(Vector:New());
			end
		end
	end
end

-- You must initialize states and auras after all of the pet objects are created
function InitAurasAndStates ( team )
	for slot,v in pairs( team.petDescs ) do 
		InitStates( team.playerID, slot, v.states );
		InitAuras( team.playerID, slot, v.auras)
	end
end

function InitPet(team, petIndex, transform)
	local petData = team.petDescs[petIndex];
	local petCreateData = ActorCreateData:New(petData.creatureID, transform, battleScale);


	-- Blossoming Ancient Pet DisplayID Override 
	if (Scene.GetWorldState) and petData.creatureID == 71488 then
		-- Spring
		if (scene:GetWorldState(521) == 1) then
			petData.displayID = 48935
		end
		-- Summer
		if (scene:GetWorldState(522) == 1) then
			petData.displayID = 48934
		end
		--Fall
		if (scene:GetWorldState(523) == 1) then
			petData.displayID = 48932
		end
		--Winter
		if (scene:GetWorldState(524) == 1) then
			petData.displayID = 48933
		end
	end

	petCreateData.creatureDisplayID = petData.displayID or 0;
	local petActor = battleScene:SpawnPet(team.playerID, petIndex, petCreateData)

	local pet = { 
		isPet = true;
		actor = petActor; 
		moveSpeed = DEFAULT_MOVE_SPEED;
		turnRate = DEFAULT_TURN_RATE;
		auras = {}; 
		slot = petIndex; 
		playerID = team.playerID; 
		--team = team.playerID;
		creatureID = petData.creatureID;
		displayID = petData.displayID;
		teamFacing = team.teamFacing; -- Needed for Darren compat only
		health = petData.health;
		createData = petCreateData;
		sessile = false;
	};

	-- For Darren Compatibility only
	pet.currentRadius = backlineRadius
	pet.currentOffset = 0

	-- Initialize stuff
	SetXP(pet, petData.xp, petData.level, true)
	SetHealth(pet, petData.health, true)

	pet.status = petData.status

	if (pet.status.isTrapped == true) then
		-- player 1 is always the trapper in a wild battle
		AddTrapActor(allPlayers[PetBattlePlayerID.Player1], pet)
		"
10265,Core - Result Event Filtering,"	EVENT_DEBUG_MODE = false;
	DEBUG_EVENT_LOG = {};

-- Used for the Brazie Event Filtering System
function FilterResultEventsByType(event)
	local filteredEvent = FilteredEventMetaTable({});
	
	local eventType = event.eventType
	local effectType = event.effectType

	-- Mark the result as a result
	filteredEvent.class = ""result"";

	-- What kind of result
	filteredEvent.eventType = event.eventType;
	filteredEvent.resultType = event.effectType;
	filteredEvent.instanceID = event.instanceID;

	-- darren's fix
	filteredEvent.turnInstanceID = event.turnInstanceID;
	filteredEvent.effectID = event.effectID;
	filteredEvent.stackDepth = event.stackDepth;

	-- Massive Event Logging
	if ( EVENT_DEBUG_MODE ) then 
		local text = ""Unknown"";
		for name,id in pairs( PetBattleEffect ) do 
			if ( event.effectType == id ) then 
				text = name;
			end
		end

		DEBUG_EVENT_LOG[filteredEvent.instanceID] = text 
		print(filteredEvent.instanceID..""> ""..text);
	end

	-- Procs
	filteredEvent.procGroup = event.procGroup;
	filteredEvent.sourceAuraInstanceID = event.sourceAuraInstanceID;

	-- Targetting
	filteredEvent.targetPlayerID = event.targetPlayerID;
	filteredEvent.targetPetSlot = event.targetPetSlot;

	-- Failure reasons
	if ( event.failureReason and event.failureReason > 0 ) then
		filteredEvent.failureReason =  event.failureReason;
	end

	-- Always provide a flags table
	filteredEvent.flags = {}

	-- Only show true flags 
	if ( event.flags ) then
		for  k, v in pairs ( event.flags ) do 
			if ( v ) then
				filteredEvent.flags[k] = v;
			end
		end
	end

	-- battle round effects
	if ( effectType == PetBattleEffect.SetHealth)  then

		filteredEvent.value = event.value;

	elseif (
		effectType == PetBattleEffect.AuraApply or
		effectType == PetBattleEffect.AuraChange or
		effectType == PetBattleEffect.AuraCancel ) then

		filteredEvent.auraAbilityID = event.auraAbilityID
		filteredEvent.auraInstanceID = event.auraInstanceID
		filteredEvent.auraTurnsRemaining = event.auraTurnsRemaining

	elseif ( effectType == PetBattleEffect.PetSwap ) then

		filteredEvent.targetPlayerID = event.targetPlayerID;
		filteredEvent.targetPetSlot = event.targetPetSlot;

	elseif ( effectType == PetBattleEffect.SetState ) then

		filteredEvent.stateID = event.stateID
		filteredEvent.stateValue = event.value;

	elseif ( effectType == PetBattleEffect.StatusChange ) then
		filteredEvent.isTrapped = event.status.isTrapped;
		filteredEvent.isStunned = event.status.isStunned;
		filteredEvent.isSwapLocked = event.status.isSwapLocked;

	elseif ( effectType == PetBattleEffect.SetMaxHealth ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.SetSpeed ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.SetPower ) then 

		filteredEvent.value = event.value;

	elseif ( effectType == PetBattleEffect.NPCEmote ) then
		filteredEvent.value = event.value;
	end

	return filteredEvent;
end

function FilteredEventMetaTable(newTable)

	setmetatable(newTable, { __tostring = FilteredEventMetaTablePrinter })
	
	return newTable;
end
function FilteredEventMetaTablePrinter (tableRef, depth) 
	local output = ""{\n"";
	local indent = depth or 1;
	local indentText = """";

	-- Safety valve
	if ( indent > 2 ) then
		return ""Depth Error"";
	end

	for i=1,indent do 
		indentText = indentText..""  "";
	end

	for key,val in pairs( tableRef ) do 
		local text = tostring(val);
		if ( key == ""resultType"" ) then 
			for name,id in pairs( PetBattleEffect ) do 
				if ( val == id ) then 
					text = name;
				end
			end

		elseif ( key  == ""playerID"" or key  == ""targetPlayerID"" or key  == ""swapPlayerID"" ) then 
			text = tostring(val);
			for name,id in pairs( PetBattlePlayerID ) do 
				if ( val == id ) then 
					"
10266,[1] Core - Result Event Filtering,"text = name;
				end
			end

		elseif (key  == ""petSlot"" or key  == ""targetPetSlot"" or key == ""oldFrontPet"" or key == ""newFrontPet"" ) then 
			text = tostring(val);

			for name,id in pairs( PetBattlePetID ) do 
				if ( val == id ) then 
					text = name;
				end
			end			

		elseif (key  == ""stateID"" ) then 
			text = tostring(val);
			for name,id in pairs( STATE_LOOKUP ) do 
				if ( val == id ) then 
					text = name;
				end
			end			

		elseif ( type(val) == ""table"" ) then 
			text = FilteredEventMetaTablePrinter(val, indent + 1);
		else
			text = tostring(val);
		end
		output = output..indentText..""K: ""..key.."" V: ""..text..""\n"";
	end

	output = output..""}\n"";

	return output
end

--DEBUG_TABLE(event);
--[[
for k,v in pairs (PetBattleEffect) do 
	if ( v == effectType ) then 
		print("" ::"",k);
	end
end
--]]
"
10267,Core - Result Data,"function FindFirstPotentialFailingResult(effect)
	for r,effectResult in pairs(effect.results) do
		if (effectResult.resultType) then
			if ((effectResult.resultType == PetBattleEffect.SetHealth) or
				(effectResult.resultType == PetBattleEffect.AuraApply) or
				(effectResult.resultType == PetBattleEffect.PetSwap) or
                 (effectResult.resultType == PetBattleEffect.StatusChange))  then  --StatusChange = trap
				return effectResult
			end
		end
	end
	return nil
end

function DidItFail ( data )
	local result; 
	
	if ( data.class == ""turn"" ) then 
		-- Fix for Bug ID: 349879
		-- In the case where we are looking at the whole turn, find the
		-- first result that can miss
		for e,effect in pairs(data.effects) do
			if (not result) then
				result = FindFirstPotentialFailingResult(effect)
			end
		end

		if (not result) then
			-- fallback, pick the first result
			result = data.effects[1].results[1];
		end
	elseif ( data.class == ""effect"" ) then
		result = FindFirstPotentialFailingResult(data)
		if (not result) then
			-- fallback, pick the first result
			result = data.results[1];
		end
	elseif ( data.class == ""result"" ) then 
		result = data;
	end

	if ( result.flags ) then
		if ( result.flags.miss or result.flags.absorb or result.flags.parry or result.flags.immune or result.flags.dodge or result.flags.deflect or result.flags.blocked ) then 

			return true, result.flags;
		end
	end

	return false, result.flags;
end

function GetMoveToROIDForEffect( effect )
	local team = ROIDTOPLAYER ( effect.primaryTarget );

	if ( effect.redirectTarget ) then
		return effect.redirectTarget;
	end

	return effect.redirectTarget or effect.primaryTarget;
end

function GetMoveToROID( data ) 

	if ( data.class == ""turn"" ) then
		-- Fix for Bug ID: 349879
		-- In the case where we are looking at the whole turn, find the
		-- first result that can miss, it's effect should be the one that we target
		local moveToEffect
		for e,effect in pairs(data.effects) do
			if (not moveToEffect) then
				local result = FindFirstPotentialFailingResult(effect)
				if (result) then
--					print(""MoveToEffect "" .. e)
					moveToEffect = effect
				end
			end
		end
		
		if (not moveToEffect) then
			-- fallback, pick the first result
			moveToEffect = data.effects[1]
		end

		return GetMoveToROIDForEffect( moveToEffect )
	elseif ( data.class == ""effect"" ) then
		return GetMoveToROIDForEffect( data )
	elseif ( data.class == ""result"" ) then
		return ResultToTargetROID( data )
	else
		warning(""Undefined data class"")
	end
end"
10268,Core - Handle Turn,"function Dispatcher_HandleTurn(turn)
	-- Turn Package? Hand-off
	local userROID = GetActorROID(turn);

	-- Attempt to process the package
	local processed = Dispatcher_HandleSpellVisualPackage(userROID, turn.turnVisualID, ""turn"", turn)

	-- Baseline
	if ( not processed ) then 
		Dispatcher_DefaultTurnBehaviour(userROID, turn )
	end
end  

function Dispatcher_HandleSpellVisualPackage( ROID, turnVisualID, ...)
	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnVisualID) then
		turnVisual = petAbilityVisuals[turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		turnVisual.scriptFunction( ROID, ...)
		processed = true;
	end

	return processed
end

function HandleSpellVisualPackage(casterPlayerID, casterPetSlot, turnVisualID, ...)

	-- use a custom script handler if we have one
	local turnVisual = nil
	if (turnVisualID) then
		turnVisual = petAbilityVisuals[turnVisualID]
	end
	local processed = false
	if (turnVisual and turnVisual.scriptFunction) then
		Dispatcher_AddCommandToQueue(casterPlayerID, casterPetSlot, turnVisual.scriptFunction, ...)
		processed = true;
	end

	return processed
end

function GetActorROID ( turn )
	local userROID = TurnToUserROID(turn);

	local user = ROIDTOUNIT( userROID )
	local player = ROIDTOPLAYER ( userROID );
	
	if ( not player ) then 
		return userROID;
	end

	local pad = player.pets[PetBattlePetID.Pad]

--print(""Checking for clone ""..userROID);
--DEBUG_TABLE(user.states);

	-- Check if Clone Mode is turned on
	--if ( turn.cloned ) then
	if ( pad.states[STATE_CLONE_ACTIVE] and pad.states[STATE_CLONE_ACTIVE] > 0) then

		local cloneAuraID = pad.states[STATE_CLONE_AURAID];

		--print(""Clone Aura ID: "",cloneAuraID);

		-- [ABrazie]: 8/7/2012 - this should be changed to use FindObject( turn.sourceAuraInstanceID )
		-- Requires a code change from Pat MacKellar

		local object, playerID, slot, transform =  FindObjectByAbilityID( user.playerID, cloneAuraID ) 
		local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT ( playerID, slot );

		if (not objectROID or objectROID == 0) then
			return userROID;
		else
			return objectROID;
		end
	end

	return userROID;
end
"
10269,Core - Default Turn,"function Dispatcher_DefaultTurnBehaviour( ROID, turn, successOverride, failureOverride, isPeriodic )
	DefaultTurnBehaviour( ROID, ""turn"", turn, successOverride, failureOverride);
end 

function DefaultTurnBehaviour( ROID, isTurn, turn, successOverride, failureOverride, successEffectOverride, failureEffectOverride, isPeriodic )
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..turn.class.."" passed to DefaultTurnBehaviour"");

		if ( turn.class == ""effect"" ) then 
			warning(""WARNING: Calling Effect handling for Effect..."");

			DefaultEffectVisualHandler( ROID, turn, turn.effectVisualID, successEffectOverride, failureEffectOverride )
			DefaultDoEffectProcessing( userROID, ""effect"", turn ); 
		end

		return;
	end

	local visuals = true;
	local movementAllowed = true; -- Is used to handle the backline periodic case
	local isAuraUpdate = (turn.turnInstanceID == 0);

	-- If this is not being performed by a specific pet, skip the casting effects
	-- [ABrazie]: 6/25/2012 - I don't recall when this situation would occur.
	-- 			Making a note to review this later

	if ( not ROIDISUNIT( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Is an aura update package
	if ( isAuraUpdate or isPeriodic ) then 
		movementAllowed = false;
	else
--print("" Turn: "", turn.turnInstanceID);
	end

	local targetROID = GetMoveToROID( turn.effects[1] ); 

	-- Move into position
	if ( movementAllowed ) then 
		DefaultTurnPreEffectMovement( ROID, turn )
	end

	local turnVisualPlayed = false;

	if ( visuals and ( turn.turnVisualID and turn.turnVisualID > 0 ) ) then 
		turnVisualPlayed = DefaultTurnVisualHandler(ROID, turn, successOverride, failureOverride)
	end

	-- Handle all effects
	for index=1,#turn.effects do 
		local effect = turn.effects[index];
		local effectVisualPlayed

		-- Will cause the creature to walk into range of the next target
		local nextTargetROID = GetMoveToROID( effect ); 
		if ( nextTargetROID ~= targetROID and movementAllowed ) then 
			DefaultTurnEffectMovement( ROID, turn, effect )
			targetROID = nextTargetROID
		end

		-- Visuals
		if ( visuals ) then  
			effectVisualPlayed = DefaultDoEffect( ROID, effect, successEffectOverride, failureEffectOverride )

			if ( effectVisualPlayed and movementAllowed ) then 
				DefaultEffectCleanUp( ROID );
			end
		else
			DefaultDoEffectProcessing( nil, ""effect"", effect ); 
		end
	end

	if ( turnVisualPlayed and movementAllowed ) then 
		DefaultTurnCleanUp(ROID);
	end
end

--
--  Moves the unit into the right place
--
function DefaultTurnPreEffectMovement( attackerROID, turn )
	local turnVisualID = turn.turnVisualID ;

	local targetROID = GetMoveToROID( turn ); 
	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	-- Visual Data
	local turnVisual = petAbilityVisuals[turnVisualID]

	-- Stationary if undefined
	if ( not turnVisual ) then 
		warning(""ERROR: Turn PreEffect Movement - No turn ability visual!"",turn.abilityID)
		PerformMove( attackerROID, targetROID, PetBattleRange.InPlace, missed ); 

	-- Stationary if sessile
	else
		local attackerUnit = ROIDTOUNIT( attackerROID );
		if ( attackerUnit and attackerUnit.sessile ) then 
			warning(""WARNING: Sessile pet. (probably a construct). No movement."");
			return;
		else
			PerformMove( attackerROID, targetROID, turnVisual.range, missed ); 
		end
	end
end


--
--  Moves the unit into the right place
--
function DefaultTurnEffectMovement( attackerROID, turn, effect )
	local turnVisualID = turn.turnVisualID;
	local effectVisualID = effect.effectVisualID or effect.effectFallbackVisualID; 

	local targetROID = GetMoveToROID( effect ); 

	local failed, flags = DidItFail ( effect );
	local missed = flags.miss;

	-- Visual Data
	local effectVisual = "
10270,[1] Core - Default Turn,"petAbilityVisuals[effectVisualID]
	local turnVisual = petAbilityVisuals[turnVisualID]

	-- Stationary if undefined
	if ( not turnVisual and not effectVisual ) then 
		warning(""ERROR: Turn PreEffect Movement - No turn or effect ability visual!"",turn.abilityID)
		PerformMove( attackerROID, targetROID, PetBattleRange.InPlace, missed ); 

	-- Station if sessile
	else
		local attackerUnit = ROIDTOUNIT( attackerROID );
		if ( attackerUnit and attackerUnit.sessile ) then 
			warning(""WARNING: Sessile pet. (probably a construct). No movement."");
			return;

		-- Effect first
		elseif ( effectVisual ) then
			PerformMove( attackerROID, targetROID, effectVisual.range, missed ); 
		else
			PerformMove( attackerROID, targetROID, turnVisual.range, missed ); 
		end
	end

end

-- 
--  Resets the position after
-- 
function DefaultTurnCleanUp(ROID)
	local userPet = ROIDTOUNIT( ROID  );
	userPet.actor:WaitCastingComplete();

	--
	-- ABrazie: This was removed to allow pets to remain ""up front"" until both turns end
	--	 

	-- Reset/reposition
	--Dispatcher_PerformPostAttackCleanup(ROID);

	scene:WaitTimer(0.75);

end
"
10271,Core - Default Turn - Visuals,"
-- Play a visual and hit every involved unit
function DefaultTurnVisualHandler( ROID, turn, overrideSuccess, overrideFailure, overrideEffectSuccess, overrideEffectFailure )
	local turnVisualID = turn.turnVisualID ;

	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 
		
		-- Perform the Turn Visual
		local masterTargets = turn.primaryTargetList;

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		-- Face the first target
		if ( target ) then 
			DefaultFacing ( ROID, targetROID );
		end

		Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )
 
--		print(""Daz: turn visual="" .. tostring(turnVisualID) .. "", failed="" .. tostring(failed))

		if ( not failed ) then 
			local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
			success ( targetROID, ROID, turnVisualID, flags )
		else
			local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
			failure( targetROID, ROID, turnVisualID, flags )
		end

-- 
-- The TurnVisual Handler should not run the effects. Let the loop handle that.
--[[
		for index=1,#turn.effects do 
			local effect = turn.effects[index];			
			DefaultEffectVisualHandler(ROID, effect, turnVisualID, overrideEffectSuccess, overrideEffectFailure)
		end 
--]]
		return true;
	end

	return false;
end


-- Play a visual and hit every involved unit
function DefaultTurnOnEffectVisualHandler( ROID, turn, effect, overrideSuccess, overrideFailure )
	local turnVisualID = turn.turnVisualID ;
	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 

		local masterTargets = { effect.primaryTarget };


		-- [ABrazie]: Removed on 7/6/2012 to fire only at the primary target of the effect
		---= effect.targetList;
	
		-- [ABrazie]: Removed on 6/25 to support the premade target list
		-- This only took the first result into account. May cause bugs.
		-- May fix bugs. Please review later.
		--
		--[[
		local targets = {ResultToTargetROID(effect.results[1])}  --EffectToROIDs ( effect );

		for k,v in pairs(targets) do 
			table.insert(masterTargets, v);
		end
		-]]

		local targetROID = GetMoveToROID( turn ); 
		local target =  ROIDTOUNIT( targetROID );

		local failed, flags = DidItFail ( turn );
		local missed = flags.miss;

		-- Face the first target
		DefaultFacing ( ROID, targetROID );

		Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )

		if ( not failed ) then 
			local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
			success ( targetROID, ROID, turnVisualID, flags )
		else
			local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
			failure( targetROID, ROID, turnVisualID, flags )
		end

		return true;
	else
		print(""WARNING: NO turn visual provided to DefaultTurnOnEffectVisualHandler."");
	end

	return false;
end"
10272,Core - Default Turn - Variants - No Knockback,"function DefaultTurnBehaviour_NoKnockback( ROID, isTurn, turn )
	local turnSuccess, turnFailure, effectSuccess, effectFailure = Dispatcher_NoKnockbackSuccessVisual, nil, nil, nil
	local isPeriodic = false;
	DefaultTurnBehaviour( ROID, isTurn, turn, turnSuccess, turnFailure, effectSuccess, effectFailure, isPeriodic );
end

function DefaultTurnBehaviour_Periodic( ROID, isTurn, turn )
	local turnSuccess, turnFailure, effectSuccess, effectFailure = Dispatcher_NoKnockbackSuccessVisual, nil, nil, nil
	local isPeriodic = true;
	DefaultTurnBehaviour( ROID, isTurn, turn, turnSuccess, turnFailure, effectSuccess, effectFailure, isPeriodic );
end
 "
10273,Core - Default Effect,"function DefaultDoEffect(ROID, effect, overrideSuccess, overrideFailure)
	-- Attempt to process the package
	local processed = Dispatcher_HandleSpellVisualPackage( ROID, effect.effectVisualID, ""effect"", effect )

	-- fallback handling
	if (processed ~= true) then
		local targets = EffectToROIDs ( effect );

		local effectVisualID = effect.effectVisualID;

		-- Start the effect animation
		if ( effectVisualID and effectVisualID > 0 ) then 
			DefaultEffectVisualHandler( ROID, effect, effectVisualID, overrideSuccess, overrideFailure );
		end

		DefaultDoEffectProcessing( userROID, ""effect"", effect ); 

		-- End
		if ( effectVisualID ) then 
			return true;
		end
	end
end


function DefaultEffectCleanUp(ROID)
	local userPet = ROIDTOUNIT( ROID );
	userPet.actor:WaitCastingComplete();
	scene:WaitTimer(0.25);
end


-- Default Effect Handler

function DefaultEffectVisualHandler(ROID, effect, visualID, overrideSuccess, overrideFailure)
	local targetROID = GetMoveToROID( effect ); 
	local target =  ROIDTOUNIT( targetROID );

--	print(""Daz: HANDLER "" .. visualID)

	local failed, flags = DidItFail ( effect );

	if ( not failed ) then 
		local success = overrideSuccess or Dispatcher_DefaultSuccessVisual;
		success ( targetROID, ROID, visualID, flags )
	else
		local failure = overrideFailure or Dispatcher_DefaultFailureVisual;
		failure( targetROID, ROID, visualID, flags )
	end
end"
10274,Core - Default Do Effect Processing,"function DefaultDoEffectProcessing(userROID, isEffect, effect, handlerOverrides ) 
	-- Only handle ""effect"" objects
	if ( effect.class ~= ""effect"" ) then
		warning (""ERROR: Object of type ""..effect.class.."" passed to DefaultDoEffect"");
		return SignalEffectProcessed();
	end

	for index=1,#effect.results do 
		local result = effect.results[index];

		StartEffectProcessing(result)
		
		local handlerTable = GetDefaultHandlerTable(result, index);

		-- Allows you to blow away basic handling
		if ( handlerOverrides ) then
			for eventType,overrides in pairs(handlerOverrides) do 
				
				for k,v in pairs(overrides) do 
					if ( not handlerTable[eventType] ) then
						handlerTable[eventType] = {};
					end
					handlerTable[eventType][k] = v;
				end
			end
		end

		local eventType = result.eventType
		local effectType = result.resultType

		-- This should only occur in case of a bug...
		if eventType and not (eventType == PetBattleEvent.RoundResult ) then
			break;
		end
		
		SignalEffectProcessed()

		-- DoFunction
		if ( handlerTable[effectType] ) then 
			local success = handlerTable[effectType].successEffect
			local failure = handlerTable[effectType].failureEffect

			local victimROID = ResultToTargetROID ( result );
			local successFunc;
			local failureFunc;

			-- sometimes I get slotless effects...
			if ( victimROID ~= nil and userPet ) then 
				successFunc = function () success( victimROID, userROID ); end;
				failureFunc = function () failure( victimROID, userROID ); end;
			end

			DoResult(result, 
				handlerTable[effectType].dontWait, 
				successFunc,
				failureFunc,
				handlerTable[effectType].func, 
				unpack( handlerTable[effectType].args) )
		else
			DebugPrint(""UNHANDLED EFFECT TYPE: "",effectType);
		end

		if (result.procGroup) then
			Dispatcher_HandleTurn(result.procGroup)
		end
	end
end
"
10275,Core - Default Do Result Processing,"
function DoResult(result, dontWait, successEffect, failureEffect, func, ... )
	local targetROID = GetMoveToROID( result ); 

	local failed, flags = DidItFail ( result );
	local missed = flags.miss;

	if ( not failed ) then 
		if ( type(successEffect) == ""function"" ) then
			successEffect( targetROID, result );
		end
	else
		if ( type(failureEffect) == ""function"" ) then 
			failureEffect( targetROID, result );
		end
	end

	-- Do the special thing
	if ( type(func) == ""function"" ) then 
		func(targetROID, result, ...); 
	else
		print(""ERROR: DoResult - invalid result function. Type is: "",result)
	end

	-- [ABrazie]: Heavy duty debug mode
	if ( EVENT_DEBUG_MODE ) then 
		local currentEffectInstanceID = result.instanceID;

		if ( currentEffectInstanceID ) then
			print(""Signal ID: ""..currentEffectInstanceID.."" ""..DEBUG_EVENT_LOG[currentEffectInstanceID]);

			if ( LAST_SIGNAL_ID and currentEffectInstanceID < LAST_SIGNAL_ID ) then
				print(""You skipped some effects!"");

				print(result);

				for i=LAST_SIGNAL_ID, currentEffectInstanceID, -1 do 
					print ( i.."") ""..tostring(DEBUG_EVENT_LOG[i]) );
				end

				--afsaf11423();
			end

			if ( LAST_SIGNAL_ID 
					and currentEffectInstanceID > LAST_SIGNAL_ID + 1 
					and DEBUG_EVENT_LOG[LAST_SIGNAL_ID+1] ~= nil ) then

				print(""You skipped ""..(currentEffectInstanceID-LAST_SIGNAL_ID).."" effects!"");
				
				print(result);

				for i=currentEffectInstanceID, LAST_SIGNAL_ID+1, -1 do 
					print ( i.."") ""..tostring(DEBUG_EVENT_LOG[i]) );
				end

				--afsaf11423(); 
			end
			LAST_SIGNAL_ID = currentEffectInstanceID;
		end
	end

	-- signal the impact
	SignalEffectProcessed()


end"
10277,Brazie's PetBattle - Intro,"local cameraBunny

--------------------------------------------------------------------------------
local oldBattleMusicIDs = { 28753, 28754, 28755 }

local wildBattleMusicIDs = { 34084, 34085 }
local npcBattleMusicIDs = { 34088 }
local pvpBattleMusicIDs = { 34086, 34087 }

function PlayBattleMusic()
	if (isObserved == true) then
		local opponent = teams[3-observingPlayerIndex]

		local musicIDs = oldBattleMusicIDs
		if (opponent.npcCreatureID > 0 or opponent.npcDisplayID > 0) then
			musicIDs = npcBattleMusicIDs
		elseif (opponent.isNPC) then
			musicIDs = wildBattleMusicIDs
		else
			musicIDs = pvpBattleMusicIDs
		end

		battleScene:PlayPetBattleMusic(musicIDs[math.random(#musicIDs)]);
	end
end

function BattleIntro()

	PlayBattleMusic();

	Dispatcher_AddCommandToQueue(ROID_TYPE_WEATHER, Dispatcher_BattleIntro ); 	 
end

function Dispatcher_BattleIntro(ROID)

	SetCamera(1)
	scene:WaitTimer(1.0)
	SetCamera(2)
	scene:WaitTimer(0.3)
	StartCameraBunny(0.45)
	scene:WaitTimer(0.5)
	scene:SetCamera(0, 1.0, nil, nil)

	battleScene:SignalOpeningComplete()

	-- fade in the pets
	FadeInAllPets(initialFadeInTime)

end
"
10278,PreTurn - Selected - Move,"--------------------------------------------------------------------------------
-- MOVE (ability) SELECTED
function EventMoveAbilitySelected(abilityVisualID)
	-- print(""Move Selected: Ability Visual ID: "" .. abilityVisualID)
	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if (not abilityVisual) then
		return
	end

	local player = nil
	local pet = nil
	if (observingPlayerIndex > 0) then
		player = GetTeamByIndex(observingPlayerIndex)
		if (player) then
			pet = player.pets[player.activePet]
		end
	end

	if (not pet) then
		return
	end

	local casterPlayer = GetTeamByIndex(observingPlayerIndex)
	local casterFrontPet = casterPlayer.pets[casterPlayer.activePet]
	local opponentFrontPet = GetActivePetByIndex(3 - observingPlayerIndex)

	ReturnOrResetCheck (casterFrontPet, opponentFrontPet)
end
"
10279,Turn - Swap,"function EffectSwap(teamId, petIndex)
	local team = GetTeamByIndex(teamId)
	if team.activePet == petIndex then
		return
	end

	local lastPet = team.pets[team.activePet]
	local nextPet = team.pets[petIndex]
	if not nextPet then
		return
	end

	-- make the player or npc point
	if (team.master) then
		team.master:PlayAnimKit(AnimKits.OneShotUpperBody, true, Animations.EmotePoint)
	end

	local nextTeam = math.fmod(teamId,2)+1;
	local opponent = allPlayers[nextTeam].pets[ allPlayers[nextTeam].activePet ]

	-- Handle the cosmetic swap
	PerformSwap( lastPet, nextPet, opponent );

	--print(""NEW PET INDEX: ""..petIndex);
	team.activePet = petIndex
end

function PerformSwap ( pet, newPet, opponent )
	if ( pet.preSwapped or newPet.preSwapped ) then 
		return
	end

	local currentPetLoc = pet.actor:GetPosition();
	local currentBacklineLoc = newPet.actor:GetPosition();

--print(""Swapping "",pet.slot,"" with "",newPet.slot);

	-- Backline Index swap
	pet.backlineIndex, newPet.backlineIndex = newPet.backlineIndex, pet.backlineIndex


	local movePet = true;

	-- If pet picked was your pad, dont move it
	if ( pet.isPad ) then
		currentPetLoc = HOME_LIST[pet.playerID].position;
		movePet = false;

	elseif ( pet.currentHealth <= 0 or pet.moveSpeed == 0 ) then
		-- Send the pet into the ring, not to the corpse
		currentPetLoc = HOME_LIST[pet.playerID].position;
		movePet = false;
warning(""Swap - RealActor Fade 0,0.5"");
		pet.actor:Fade(0, 0.5);

		if ( pet.trap ) then 
			pet.trap:Fade(0, 0.5);
		end
		scene:WaitTimer(0.5)
	end

	-- Swap Locations
	if ( movePet and pet.moveSpeed > 0.01) then
		pet.actor:ClearFacing();
		local distance = pet.actor:GetPosition():Dist(currentBacklineLoc);
		pet.actor:MoveToAbs(currentBacklineLoc, distance/pet.moveSpeed)

	end

	-- New guy faces the enemy
	local distance = newPet.actor:GetPosition():Dist(currentPetLoc);
	local newPetMoved = false;
	if ( not newPet.isPad and newPet.currentHealth > 0 and newPet.moveSpeed > 0.01 ) then 
		newPet.actor:ClearFacing();
		newPet.actor:MoveToAbs(currentPetLoc, distance/newPet.moveSpeed)
		newPetMoved = true;
	end

	-- If dead, fade corpse in
	if ( pet.currentHealth <= 0 or pet.moveSpeed < 0.01 ) then 
warning(""Swap - RealActor Fade Backling,0"");
		pet.actor:MoveToAbs(currentBacklineLoc, 0)
		pet.actor:Fade(1.0, 1)

		if ( pet.trap ) then 
			pet.trap:MoveToAbs(currentBacklineLoc, 0)
			pet.trap:Fade(1.0, 1)
		end

	-- If alive wait for it to move to the end
	else
		pet.actor:WaitMovementComplete()
	end
	
	--pgm added this so that new pet doesn't move sideways when entering playfield
	if(newPetMoved) then
		newPet.actor:WaitMovementComplete();
	end
	newPet.actor:SetFacingToAbs( opponent.actor:GetPosition() )

	--ReturnOrResetCheck( newPet, opponent );


	-- Make all of your back-line pets look at the front pet
	for k,v in pairs( allPlayers[pet.playerID].pets ) do 
		if ( k ~= allPlayers[pet.playerID].activePet and (not v.currentHealth or v.currentHealth > 0 ) ) then 
			v.actor:SetFacingToTarget(newPet.actor, Vector:New());
		end
	end
end "
10280,Turn - Obtain Attack Point,"--
--	Gets the locations which specifies where the attack should start
--
--		Returns: Vector
--
function ObtainAttackPoint(attackerROID, victimROID, range, miss)
	local attacker = ROIDTOUNIT( attackerROID );
	local victim = ROIDTOUNIT( victimROID );

	-- Confirm the victim exists
	if ( not victim or attackerROID == victimROID ) then
		return Vector:New(0,0,0);
	end

	local sourcePosition, targetPosition = victim.actor:GetPosition(), attacker.actor:GetPosition();
	local distance = sourcePosition:Dist( targetPosition );

	-- Handle the flying case
	if ( victim and victim.states )  and 
		( victim.states[STATE_FLYING] and victim.states[STATE_FLYING] > 0 ) then
		local victimPlayer = ROIDTOPLAYER( victimROID );

		sourcePosition = victimPlayer.home;
	end

	local LocalToWorldCoords, WorldToLocalCoords =  GetStandardMatrixOps ( sourcePosition, targetPosition )

	local finalDestination = nil;

	-- Melee
	if ( range == PetBattleRange.Melee ) then 
		if ( miss ) then 
			if ( math.random(1,2) == 1 ) then 
				finalDestination = LocalToWorldCoords( Vector:New(1,1,0) );
			else
				finalDestination = LocalToWorldCoords( Vector:New(1,-1,0) );
			end
		else
			finalDestination = LocalToWorldCoords( Vector:New(1,0,0) );
		end

	-- Behind Melee
	elseif ( range == PetBattleRange.BehindMelee ) then 
		if ( miss ) then 
			if ( math.random(1,2) == 1 ) then 
				finalDestination = LocalToWorldCoords( Vector:New(-1,1,0) );
			else
				finalDestination = LocalToWorldCoords( Vector:New(-1,-1,0) );
			end
		else
			finalDestination = LocalToWorldCoords( Vector:New(-1,0,0) );
		end

	-- Ranged
	elseif ( range == PetBattleRange.Ranged ) then
		-- Max Range
		if ( distance > 4 ) then 
			finalDestination = LocalToWorldCoords( Vector:New(4,0,0) );
		-- Min Range
		elseif ( distance < 2 ) then 
			finalDestination = LocalToWorldCoords( Vector:New(2,0,0) );
		-- Don't Move
		else
			finalDestination = targetPosition;
		end
	-- Behind Ranged
	elseif ( range == PetBattleRange.BehindRanged ) then 
		finalDestination = LocalToWorldCoords( Vector:New(-3,0,0) );

	-- Stationary
	elseif (range == PetBattleRange.InPlace ) then 
		finalDestination = targetPosition;

	-- Stationary
	elseif (range == PetBattleRange.PointBlank ) then 
		finalDestination = sourcePosition;

	-- Do nothing
	else
		Print(""ERROR: ObtainAttackPoint - No movement range specified!"");
		finalDestination = Vector:New(0,0,0);
	end

	return finalDestination;
end"
10281,Turn - Perform Move,"
-- Moves the unit to the correct location based on the ability
function PerformMove(attackerROID, victimROID, range, miss)
	
	local player = ROIDTOPLAYER(attackerROID);
	local pet = ROIDTOUNIT(attackerROID);

	if ( not pet or (pet and pet.isPad) or (pet and pet.slot ~= player.activePet ) ) then
		return;
	end

	if ( victimROID == 0 ) then
		return;
	end

	local opponent = ROIDTOUNIT( victimROID )
	if ( not opponent or victimROID == attackerROID ) then 
		pet.actor:SetFacingToAbs( Vector:New() )
		return;
	end

	local finalDestination = ObtainAttackPoint(attackerROID, victimROID, range, miss)

	if ( finalDestination and pet.moveSpeed > 0 ) then 
		local distance = finalDestination:Dist( pet.actor:GetPosition() );

		if ( distance > 0.02 ) then 
			local moveTime = distance/battleScale/(pet.moveSpeed);
			if(range == 0 and miss) then
				pet.actor:ClearFacing();
				crashNextFacing = true;
			end
			pet.actor:WaitMoveToAbs(finalDestination, moveTime)
		end
	else
		-- ""You didnt need to go anywhere 
	end
end

"
10282,Turn - Perform Leap,"
-- Moves the unit to the correct location based on the ability
function PerformLeap(attackerROID, victimROID, range, miss, animation)
	local player = ROIDTOPLAYER( attackerROID );
	local pet = ROIDTOUNIT( attackerROID );
	if ( not pet or (pet and pet.isPad) or (pet and pet.slot ~= player.activePet ) ) then
		return;
	end
	local opponent =  ROIDTOUNIT( victimROID );
	if ( not opponent or victimROID == attackerROID ) then 
		pet.actor:SetFacingToAbs( Vector:New() )
		return;
	end

	local finalDestination = ObtainAttackPoint( attackerROID, victimROID, range, miss )

	if ( finalDestination and pet.moveSpeed > 0 ) then 
		local distance = finalDestination:Dist( pet.actor:GetPosition() );

		if ( distance > 0.02 ) then 
			PerformJump( pet, finalDestination, 0.5, animation )

		end
	else
		-- ""You didnt need to go anywhere
	end
end


function PerformJump( pet, dest, duration, animation )
	if ( not pet.moveSpeed or pet.moveSpeed <= 0 ) then
		return;
	end

	local moveTime = duration or 0.5
	local anim = animation or Animations.JumpLoop

	local kit;
	if ( anim ) then 
		-- This causes an animation to replace normal movement anims
		kit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, anim );
	end

	pet.actor:SetSnapToGround(false)
	pet.actor:MoveSplineAbs( 
			BuildKnockbackSpline(pet.actor:GetPosition(), dest, moveTime), moveTime )
	pet.actor:WaitMovementComplete()
	pet.actor:SetSnapToGround(true)

	if ( kit ) then 
		kit:Stop();
	end

end

"
10283,Turn - Trap Target,"function Trap_Target(ROID, isTurn, turn)
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		print (""ERROR: Object of type ""..isTurn.."" passed to Trap_Target"");

		return;
	end

	local visuals = true;

	-- If this is not being performed by a specific pet, skip the casting effects
	if ( not ROIDISAPET( ROID ) ) then
		visuals = false;
		userROID = nil;
	end

	-- Move into position
	--DefaultTurnPreEffectMovement(ROID, turn )

	local turnVisualPlayed = false;

	local turnVisualID = turn.turnVisualID ;
	local turnVisual = petAbilityVisuals[turnVisualID]

	if ( turnVisual ) then 
		
		-- Perform the Turn Visual
		local masterTargets = {}

		for index=1,#turn.effects do 
			local effect = turn.effects[index];
			local targets = EffectToROIDs ( effect );

			for k,v in pairs(targets) do 
				table.insert(masterTargets, v);
			end
		end

		--Dispatcher_PerformMultiTargetVisual(ROID, masterTargets, turnVisualID )
		local success = turn.effects[1].results[1].isTrapped;
--print(""Trap success:  ""..tostring(success),ROID);
		OwnerTrap( ROID, masterTargets[1], success, turn )

		return true;
	end
end"
10284,Turn - Trap Target - Throw Trap,"
function OwnerTrap( ROID, targetROID, success, turn )
	local player = ROIDTOPLAYER( ROID )
	local targetPet = ROIDTOPET( targetROID );

	if (player and player.playerDisplay) then
		

		local trapVisual = petAbilityVisuals[turn.turnVisualID]  --GetAuraAbilityVisual(player.trapAbilityID)
		local trapSpellVisualID = nil
		if (trapVisual) then
			trapSpellVisualID = trapVisual.spellVisualID
		end		

		if (not trapSpellVisualID) or (trapSpellVisualID == 0) then
			print(""ERROR: No trap turn visual! Ability ID: "",turn.turnAbilityID);
			return
		end

		--player.playerDisplay:PlayAnimKit(AnimKits.OneShotUpperBody, true, emote)
		
		-- Play a trap visual
		player.trapPrecastID = player.playerDisplay:PlaySpellPreCastVisual(trapSpellVisualID)

		scene:WaitTimer(trapVisual.castTime)

		player.playerDisplay:ClearSpellVisual(player.trapPrecastID)

		-- 
		if (targetPet) then
			castInstanceID = player.playerDisplay:PlaySpellCastVisualAtPoints(trapSpellVisualID, trapVisual.impactTime, true, { targetPet.actor:GetPosition() } )

			scene:WaitTimer(trapVisual.impactTime-.75)
			local missed = false;

			local waitCondition = function()
				return not player.playerDisplay:HasPendingOrInFlightMissiles(castInstanceID)
			end
			scene:WaitCondition(waitCondition)

			AddTrapActor(player, targetPet)
			local trapActor = targetPet.trap;

			if (success) then
				--print(""Succesful Trap"")
				--targetPet.trappedVisualInstance = targetPet.actor:PlaySpellStateVisual(trapSpellVisualID) 
	
				-- Don't move again.
				targetPet.moveSpeed = 0;
				targetPet.isTrapped = true;

				local kit = trapActor:PlayLoopingAnimKit(petBattleAnimKits.CloseClosed);

				scene:WaitTimer(1);
				targetPet.actor:SetScale(0.25);

				trapActor:PlaySpellImpactVisual( 26965 ) 

				targetPet.actor:Fade(0,2);
				scene:WaitTimer(2);

				Dispatcher_OwnerEmote( ROID, Animations.EmoteCheer )

				--trapActor:Despawn();
			else
				local kit = trapActor:PlayLoopingAnimKit(petBattleAnimKits.Custom0Custom1);

				scene:WaitTimer(1);

				if (isObserved == true) then
					local trapMissed = GetGlobalString(""BATTLE_PET_MESSAGE_TRAP_MISSED"")
					targetPet.actor:AddCustomWorldText(WorldText.Damage, true, Color:New(255, 255, 0), trapMissed)
				end
	
				scene:WaitTimer(2);
				trapActor:Despawn();
			end

			-- The pet either dodges or gets hit
			for index=1,#turn.effects do 
				local effect = turn.effects[index];

				DefaultDoEffectProcessing( nil, ""effect"", effect ); 
			end
		end
	end
end

function AddTrapActor( player, targetPet )
	if (not player or not targetPet) then
		return
	end

	local petTrapModel = fid(630755)
	if ( player.trapAbilityID == PET_TRAP_LEVEL_1 ) then
		petTrapModel = fid(630755)
	elseif ( player.trapAbilityID == PET_TRAP_LEVEL_2 ) then
		petTrapModel = fid(643996)
	-- elseif ( player.trapAbilityID == PET_TRAP_LEVEL_3 ) then
	else
		petTrapModel = fid(643998)
	end

	local t = targetPet.actor:GetTransform()
	local trapCreateData = ActorCreateData:NewModel(
		""Trap"",
		petTrapModel,
		t,
		1) -- scale
	print(trapCreateData)
	trapCreateData.groundSnap = true
	trapCreateData.interactible = false

	local trapActor = scene:SpawnActor(trapCreateData)

	targetPet.trap = trapActor;
end
"
10285,Post Turn,"function PostRoundCleanUp( event )

	SendEverybodyHome()

end"
10286,Post Turn - Reset,"backwardSpeedMulti = 0.7;

-- Reset after an attack if needed
function Dispatcher_PerformPostAttackCleanup( ROID )
	local pet = ROIDTOUNIT(ROID);
	if ( not pet ) then 
		print (""ERROR: Post-Attack Clean-up - Invalid ROID: ""..ROIDTOSTRING(ROID).."" || ""..ROID);
		return;
	end

	local opponent = GetActivePetByIndex(3 - pet.playerID)
		
	ReturnOrResetCheck( pet, opponent );
end

function ReturnOrResetCheck (pet, opponent)

	if ( not pet or not pet.playerID  ) then
		print(""ERROR: ReturnOrResetCheck - Pet has no player ID"");
		return;
	end

	if ( pet.isPad ) then 
		return;
	end
	local STATE_FLYING = 33;

	if ( pet.states and pet.states[STATE_FLYING] and pet.states[STATE_FLYING] > 0 ) then
		return;
	end

	if ( not opponent ) then 
		print(""ERROR: ReturnOrResetCheck - Opponent was not provided!"");
		return;
	end

	local opponentPos = opponent.actor:GetPosition()
	local newFrontVector = opponentPos:UnitVectorFromAtoB(pet.actor:GetPosition())
	local returnPoint = newFrontVector * 1.75*battleScale


	local petLoc = returnPoint;
	local petHome = HOME_LIST[pet.playerID].position;
	local newDist = petLoc:Dist ( petHome );

	local returnDistance = pet.actor:GetPosition():Dist(petLoc)

	if ( newDist > 1.75 * battleScale ) then 
		petLoc = HOME_LIST[pet.playerID].position;
		returnDistance = petHome:Dist(pet.actor:GetPosition());
	end

	if ( not pet.dead and not pet.isPad and pet.moveSpeed > 0 ) then 
		--pet.actor:WaitMoveToAbs( pet.home, returnDistance/ ( pet.speed*backwardSpeedMulti) );

		-- LAST MINUTE HACK: DWilliams. MoveToAbs is not rejecting distance if already at the home
		-- loc due to a zOffset when on slopes
		local currentLoc = pet.actor:GetPosition()
		local flatPetLoc = Vector:New(petLoc.x, petLoc.y, currentLoc.z)

		pet.actor:MoveToAbs( flatPetLoc, returnDistance/ ( pet.moveSpeed*backwardSpeedMulti) );
		pet.actor:WaitMovementComplete()
		--opponent.actor:WaitMovementComplete()
		pet.actor:SetFacingToAbs(opponent.actor:GetPosition())
		opponent.actor:SetFacingToAbs(pet.actor:GetPosition())
	end


end

"
10287,Post Turn - Clean Up,"function GetROIDHome( roid ) 
	local player1 = GetTeamByIndex(1);
	local player2 = GetTeamByIndex(2);

	local unit = ROIDTOUNIT( roid )

	if ( ROIDISAOBJECT ( roid ) ) then
		return OBJECT_LOCATIONS[unit.playerID][unit.slot]
	elseif ( unit.playerID == player1.playerID and unit.slot == player1.activePet ) then
		return HOME_LIST[1];
	elseif ( unit.playerID == player2.playerID and unit.slot == player2.activePet ) then
		return HOME_LIST[2];
	elseif ( ROIDISAPET ( roid ) ) then
		return BACKROW_PET_OFFSETS[unit.playerID][unit.backlineIndex];
	end
end 

function SendEverybodyHome()
	
	local roidList = {};
	local homeList = {};

	local player1 = GetTeamByIndex(1);
	local player2 = GetTeamByIndex(2);

	-- Always insert the current front pets
	table.insert( roidList, PETTOROID(GetActivePetByIndex(1)) );
	table.insert( homeList, GetROIDHome( PETTOROID(GetActivePetByIndex(1)) ) );

	table.insert( roidList, PETTOROID(GetActivePetByIndex(2)) );
	table.insert( homeList, GetROIDHome( PETTOROID(GetActivePetByIndex(2)) ) );

	-- Always insert the backline pets
	for playerId = 1,2 do 
		for i=1,2 do
			local player = GetTeamByIndex(playerId);
			local nextSlot = math.fmod(player.activePet+i-1,3)+1;
			local roid = GETROIDFROMPLAYERIDANDSLOT( playerId, nextSlot );
			local unit = ROIDTOUNIT( roid );
			
			if ( unit ) then 
				local homeSpot = GetROIDHome( roid ) 

				if ( homeSpot ) then 
					table.insert( roidList, roid );
					table.insert( homeList, homeSpot );
				end
			end
		end
	end

	-- Cycle through all of the objects too
	local objList = GetAllObjects()

	for team, teamObjects in pairs ( objList ) do
		for slot, objData in pairs ( teamObjects ) do
			-- Only move non-stationary objects
			if ( objData.moveSpeed and objData.moveSpeed > 0 ) then 
				local objRoid = GETOBJECTROIDFROMPLAYERIDANDSLOT( team, slot );
				table.insert( roidList, objRoid );
				table.insert( homeList, GetROIDHome( objRoid )  );
			end
		end
	end

	for i=1, #roidList do 
		local roid = roidList[i];
		local homeTransform = homeList[i];
			
		DoHomeLeash( roid, homeTransform );
	end

	for i=1, #roidList do 
		local roid = roidList[i];

		DoHomeWait( roid );
	end

	for i=1, #roidList do 
		local roid = roidList[i];

		DoFacingCleanUp( roid );
	end

end

local homeLeashMoveData = MoveData:Default(2)
homeLeashMoveData.isGroundSnapping = true
homeLeashMoveData.forceGroundSnapPositionZ = true
homeLeashMoveData.yawControl = MoveRotControl.Tangent

function DoHomeLeash( roid, homeTransform )
	local unit = ROIDTOUNIT( roid );

	if ( not unit ) then 
		return;
	end

	if ( unit.states and unit.states[STATE_FLYING] and unit.states[STATE_FLYING] > 0 ) then
		return;
	end

	if ( unit.isPad or unit.dead or unit.moveSpeed <= 0 or unit.deathAnimKit ) then
		return;
	end

	local actor = unit.actor;
	actor:ClearFacing();

	local homeLoc = homeTransform.position;
	local dist = homeLoc:DistXY( actor:GetPosition() );

	if ( dist > 1.75 ) then 

		local travelTime = dist / ( unit.moveSpeed*backwardSpeedMulti);

		if ( travelTime > 2 ) then
			travelTime = 2;
		end

		-- Fox fpr Bug ID: 351080 
		-- Add an extra point to the move path to hopefully get a succesful ground snap
		local actorPos = actor:GetPosition()
		homeLeashMoveData.points[1].pos = (actorPos + homeLoc)*0.5
		homeLeashMoveData.points[2].pos = homeLoc
		homeLeashMoveData.time = travelTime
		actor:Move(homeLeashMoveData)
	end
end

function DoHomeWait( roid )
	local unit = ROIDTOUNIT ( roid )

	if ( not unit ) then
		warning(""Invalid ROID provided to DoHomeWait: ""..roid.."" (probably a missing object)"" );
		return;
	end

	unit.actor:WaitMovementComplete()
end

function DoFacingCleanUp( roid )
	local team = ROIDTOPLAYER ( roid )
	local unit = ROIDTOUNIT ( roid )

	if ( not unit "
10288,[1] Post Turn - Clean Up,") then
		warning(""Invalid ROID provided to DoFacingCleanUp: ""..roid.."" (probably a missing object)"" );
		return;
	end

	if ( team.activePet == unit.slot or unit.clone ) then 
		local opponent = GetActivePetByIndex( EnemyOf( unit.playerID ) ) 

		DefaultFacing( roid, PETTOROID(opponent) );

	elseif ( unit.isPet ) then
		local ally = GetActivePetByIndex( unit.playerID );

		DefaultFacing( roid, PETTOROID(ally) );
	end
end"
10289,End Game - Flee,"function FleeCeremony ( winnerID )

	local playerID = (3-winnerID)

	Dispatcher_OwnerEmote( GETROIDFROMPLAYERID( playerID ), Animations.Cower )
	local player = GetTeamByIndex(playerID)

	if ( not player ) then 
		print(""Missing player!"");
		return 
	end
 
	for i=1,3 do 
		if ( player.pets[i] ) then 
			local playerPet = player.pets[i] 

			if ( playerPet.currentHealth > 0 ) then 
				playerPet.actor:Fade(1.0, 0.5)
				MoveToFleeLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local waitCondition = function()
		-- all actors must be renderable
		for i=1,3 do
			local pet = player.pets[i] 
			if pet and pet.actor:IsMoving() then
				return false
			end
		end
		return true
	end

	scene:WaitCondition(waitCondition)
end


function MoveToFleeLocation(pet)
	
	local team = GetTeamByIndex(pet.playerID)
	local spot = FLEE_PET_OFFSETS[pet.playerID][pet.slot].position;
	local distance = pet.actor:GetPosition():Dist(spot);

	if ( pet.moveSpeed > 0 ) then
		pet.actor:SetFacingToAbs(spot);
		pet.actor:MoveToAbs(spot, distance/pet.moveSpeed/2)
	end
end
"
10290,End Game - Victory,"function VictoryCeremony(winnerID)
	local player = GetTeamByIndex(winnerID)

	if ( not player ) then 
		return
	end

	-- Only dance in PvP games
	if (  ROIDTOPLAYER( GETROIDFROMPLAYERID( 3-winnerID ) ).playerDisplay ) then  
		Dispatcher_OwnerEmote( GETROIDFROMPLAYERID( winnerID ), Animations.EmoteDance )
	end

	for i=1,3 do 
		if ( player.pets[i] ) then 
			local playerPet = player.pets[i] 

			if ( playerPet.currentHealth > 0 ) then 
				playerPet.actor:Fade(1.0, 0.5)
				playerPet.actor:ClearFacing();
				MoveToVictoryLocation(playerPet);
			end
		end
	end

	-- wait until all pets have stopped moving
	local facingSet = { }
	local waitCondition = function()
		-- all actors must be renderable
		for i=1,3 do
			local pet = player.pets[i] 
			if pet and pet.actor:IsMoving() then
				return false
			elseif pet and not facingSet[i] then
				local team = GetTeamByIndex(pet.playerID)
				pet.actor:ClearFacing();
				pet.actor:SetFacing(team.teamFacing);
				facingSet[i] = true
			end
		end
		return true
	end

	scene:WaitCondition(waitCondition)
	if ( player.playerDisplay ) then 
		for i=1,3 do
			local pet = player.pets[i] 
			if ( pet ) then
				local team = GetTeamByIndex(pet.playerID)

				pet.actor:ClearFacing();
				pet.actor:SetFacing(team.teamFacing);
				--pet.actor:SetFacingToTarget(player.pets[0].actor, Vector:New());
			end
		end
	end
end

function MoveToVictoryLocation(pet)
	
	local team = GetTeamByIndex(pet.playerID)
	local spot = team.home + VICTORY_PET_OFFSETS[pet.backlineIndex] + Vector:New(1,0,0);
	local distance = pet.actor:GetPosition():Dist(spot);

	if ( pet.moveSpeed > 0 ) then
		pet.actor:MoveToAbs(spot, distance/pet.moveSpeed)
	end
end


function VictoryCeremonyCleanUp(winnerID)
	SignalEffectProcessed()
end"
10292,End Game - Victory - Rewards,"function EventReward(rewards)

	if ( #rewards < 1 ) then
		return;
	end 

	local pet = ROIDTOPET( GETROIDFROMPLAYERIDANDSLOT( rewards[1].playerID, rewards[1].petSlot )  );

	if ( rewards[1].awardedXP == 0 and pet.currentHealth == rewards[1].newHealth ) then
		return;
	end

	-- apply the rewards
	local reward = rewards[1];

	if not (reward.wasCaptured) then
		local rewardedPet =
		{
			pet = ROIDTOPET( GETROIDFROMPLAYERIDANDSLOT( reward.playerID, reward.petSlot )  );
			awardedXP = reward.awardedXP;
			newXP = reward.newXP;
			newLevel = reward.newLevel;
			newHealth = reward.newHealth;
		}

		if ( rewardedPet.newLevel > rewardedPet.pet.level ) then  
			SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
			scene:WaitTimer(0.5);
			rewardedPet.pet.actor:PlaySpellCastVisual(26429);

			if ( rewardedPet.newHealth and rewardedPet.newHealth ~= rewardedPet.pet.currentHealth ) then 
				rewardedPet.pet.actor:PlaySpellImpactVisual(26605);
				SetHealth(rewardedPet.pet,  rewardedPet.newHealth, false, {} )
				scene:WaitTimer(1.0);
			end
		elseif ( rewardedPet.awardedXP ) then 
			if ( rewardedPet.newHealth and rewardedPet.newHealth ~= rewardedPet.pet.currentHealth ) then 
				rewardedPet.pet.actor:PlaySpellImpactVisual(26605);
				SetHealth(rewardedPet.pet,  rewardedPet.newHealth, false, {} )
				scene:WaitTimer(1.0);
			end



			SetXP(rewardedPet.pet, rewardedPet.newXP, rewardedPet.newLevel, false)
			scene:WaitTimer(1.0);
		end


	end

	SignalEffectProcessed();

end"
10294,Object Manager,"local OBJECTS = {};

-- Create object managers
OBJECTS[PetBattlePlayerID.Weather] = {}
OBJECTS[PetBattlePlayerID.Player1] = {}
OBJECTS[PetBattlePlayerID.Player2] = {}

-- Standard Object Structure
-- {
--	playerID		= 1 | 2;
--	moveSpeed		= 0 | > 0;
--	auraID 			= 1234;
--	auraInstance 	= 3;
--	actor			= < Actor >;
--  actors			= { < Actor > }; -- Additional actors
--	location		= 1 to 3;
-- }


-- 
-- Register
-- 
--	Returns: object, playerID, slot, transform
-- 
function RegisterObject(playerID, auraID, auraInstanceID )
	local obj = {
		auraID = auraID;
		auraInstanceID = auraInstanceID;
		playerID = playerID;
	};

	local slot,location = FindNextObjectSlot( playerID );


	-- If there was no slot found
	if ( slot == 0 ) then 
		warning(""WARNING: Ran out of object slots in the PetBattle object manager. Add new locations."");
		return obj, playerID, nil;
	else
		obj.slot = slot;
		OBJECTS[playerID][slot] = obj;

		return obj, playerID, slot, location;
	end

end

--
-- Find the next empty slot
--
function FindNextObjectSlot( playerID ) 

	if ( not playerID ) then 
		warning(""ERROR: Invalid playerID: "",playerID,"" passed to RegisterObject."");
	else

		for slot=1,MAX_FIELD_OBJECTS do 
			if ( OBJECTS[playerID] ) then 
				if ( not OBJECTS[playerID][slot] ) then 
					return slot, OBJECT_LOCATIONS[playerID][slot]
				end
			else
				warning(""ERROR: Invalid playerID: "",playerID,"" passed to RegisterObject."");
			end
		end
	end

	return 0;
end

--  
--  Retrieve
-- 
--	Returns: object, playerID, slot, transform
--  
function GetObject(playerID, slot)
	return OBJECTS[playerID][slot], playerID, slot, OBJECT_LOCATIONS[playerID][slot];
end

--  
--  Find
-- 
--	Returns: object, playerID, slot, transform
--  
function FindObject( auraInstanceID )
	for playerID, playerObjects in pairs( OBJECTS ) do 
		for slot, obj in pairs( playerObjects ) do
			if ( obj.auraInstanceID == auraInstanceID ) then 
				return obj, playerID, slot, OBJECT_LOCATIONS[playerID][slot];
			end
		end
	end

	print(""WARNING: Invalid auraInstanceID passed to FindObject: "",auraInstanceID);
end




--  
--  Find
-- 
--	Returns: object, playerID, slot, transform
--  
function FindObjectByAbilityID(playerID, auraID )

--print(""Looking for: "",playerID, "","", auraID);
	if ( OBJECTS[playerID] ) then 
--print( #OBJECTS[playerID] );
		for slot, obj in pairs( OBJECTS[playerID] ) do
--print(""Slot: "",slot,"" Aura: "",obj.auraID);
			if ( obj.auraID == auraID ) then 
--print(""Found: "",playerID, "", "", slot);
				return obj, playerID, slot, OBJECT_LOCATIONS[playerID][slot];
			end
		end
	else
		print(""WARNING: Invalid player ID passed to FindObjectByAbilityID: "",playerID);
	end
end



--
-- Unregister
--
function UnregisterObject(playerID, slot)
	OBJECTS[playerID][slot] = nil;
end

--
-- Get All Objects
-- 
function GetAllObjects()
	return OBJECTS;
end"
10296,Dispatcher Main,"-- Responsible Object ID Tracking and Management
--
--ROID = 0xFFFF;

UNIT_ACTION_QUEUE = {
	--[ROID] = { 
	--  ROID = ROID;
	--  isProcessing = bool;
	--	commands = {
	--		{ func=function()end; args = {}; };
	--	};
	-- }
}

-- A global kill switch if I need it ??
BOT_KILL_SWITCH = false;

-- Parallel Mode Switch
PARALLEL_MODE = true;
local NUM_PARALLEL = 8;

function Dispatcher_AddCommandToQueue( responsibleObjectID, func, ...)

	if ( PARALLEL_MODE ) then
		if ( not UNIT_ACTION_QUEUE [responsibleObjectID] ) then
			UNIT_ACTION_QUEUE [responsibleObjectID] = {
				ROID = responsibleObjectID;
				isProcessing = false;
				commands = {};
			};
		end
		table.insert( UNIT_ACTION_QUEUE [responsibleObjectID].commands, 
			{
				func = func;
				args = {...};
			});

	else
		func(responsibleObjectID, ...);
	end
end

local ThreadBotMain = function(BOT_ID)

	local myROID;
	local myList=nil;

	local frameTimer = scene:Timer(0)
	while( not BOT_KILL_SWITCH ) do
		for k,v in pairs(UNIT_ACTION_QUEUE) do
			if ( v.isProcessing == false and #v.commands > 0 ) then 
				myROID = k;
				myList = v;
				break;
			end
		end

		if ( myROID ) then 
			--print( ""Bot ""..BOT_ID.."" Acquired Task for "", ROIDTOSTRING(myROID) );
			UNIT_ACTION_QUEUE[myROID].isProcessing = true;
			
			-- [ABrazie]: Bots will only handle one task at a time now, not managed according to who owns it.
			--while myList.commands[1] ~= nil do
				local task = myList.commands[1];
			--print( ""Mine: "", ROIDTOSTRING(myROID)  );
			--print(""Other: "",ROIDTOSTRING(task.args[1])); 
			--DEBUG_TABLE(task.args);

				table.remove(myList.commands,1);
			--end
		
			UNIT_ACTION_QUEUE[myROID].isProcessing = false;

			local result = task.func(myROID, unpack(task.args));

			--print(""Bot""..BOT_ID.."" Result: "",result)
			myROID = nil;
			myList = nil;
			--print( ""Bot ""..BOT_ID.."" Released Task"" );
		end

		-- Darren's Garbage Collector Optimization:
		--  always use the same timer, instead of
		--	scene:WaitTimer(0)
		frameTimer:Reset()
		scene:Wait(frameTimer)
	end

end

-- spawn dispatcher coroutines
for i=1,NUM_PARALLEL do
	scene:AddCoroutineWithParams(ThreadBotMain, i)
end
 "
10297,Visuals - Success / Fail,"--
-- This block of code is a list of the parallel process hand-offs which are used
-- primarily for results
--


function Dispatcher_DefaultSuccessVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	local victim = ROIDTOUNIT(victimROID)
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 

	-- Fix for Bug ID: 367618
	-- Moved from above Dispatcher_AddCommandToQueue
	if (flags.heal) then
		return;
	end
	
	if ( victim and not victim.isPad and (victimROID ~= attackerROID) ) then
		local distance = 3;
		
		if ( flags.strong ) then 
			distance = 4;
		elseif ( flags.weak ) then
			distance = 1;
		end

		Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactBump, attackerROID, distance ); 	 
	end

end


function Dispatcher_NoKnockbackSuccessVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 

end

function Dispatcher_DefaultFailureVisual( victimROID, attackerROID, visualID, flags )
	if ( not attackerROID ) then 
		warning(""ERROR: No Attacker ROID provided to Default Failure."");
		return;
	end

	DebugPrint(""Dispatcher_DefaultFailureVisual ""..attackerROID.."" v ""..victimROID); 

	if ( flags.blocked ) then 
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformBlock, attackerROID );
	elseif ( flags.immune ) then
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformImmune, attackerROID );
	elseif ( flags.miss ) then
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformMiss,  attackerROID );
	elseif ( flags.dodge ) then
		Dispatcher_AddCommandToQueue( victimROID, Dispatcher_PerformDodge, attackerROID );
	end

end

function GetDefaultFailActors( victimROID, attackerROID, debugText )

	DebugPrint(tostring(debugText) .. "" ""..attackerROID.."" v ""..victimROID); 

	local victim = ROIDTOUNIT( victimROID )
	if ((not victim) or not (victim.actor)) then
		victim = ROIDTOOBJ( victimROID )
	end
		
	local attacker = ROIDTOUNIT( attackerROID );

	local victimActor = nil
	if (victim) then
		victimActor = victim.actor
	else
		warning(""ERROR: "" .. tostring(debugText) .. ""missing victim"", ROIDTOSTRING(victimROID) );
	end

	local attackerActor = nil
	if (attacker) then
		attackerActor = attacker.actor
	else
		warning (""ERROR: "" .. tostring(debugText) .. "" missing attacker: "", ROIDTOSTRING(attackerROID) );
	end
	
	local feedbackActor = victimActor
	if (not feedbackActor) then
		feedbackActor = attackerActor
	end

	return victim, victimActor, attacker, attackerActor, feedbackActor
end
"
10298,Visuals - Cast / Impact,"--
-- Performs the effect visual for each target
--
function Dispatcher_PerformMultiTargetVisual( userROID, targetROIDs,  visualID )
	local user = ROIDTOUNIT( userROID );

	local targets = {};

--print(""CastVisual: "", ROIDTOSTRING(userROID),"" ? "",visualID );
	for i=1,#targetROIDs do 
		local targetROID = targetROIDs[i];
		local targetPet = ROIDTOUNIT( targetROID );
--print(""CastVisual@: "", ROIDTOSTRING(targetROID) );

		if ( targetPet and targetROID ~= userROID ) then 
			table.insert( targets, targetPet );
		elseif ( targetROID == userROID ) then 
			warning (""WARNING: MultiTargetVisual - Target is the caster and is being skipped. This is probably not a bug, but confirm."");
		else
			warning (""ERROR: MultiTargetVisual - Invalid target pet: "",ROIDTOSTRING(targetROID) );
		end 
	end

	if ( not user ) then 
		warning (""ERROR: MultiTargetVisual - Invalid pet. "",ROIDTOSTRING(userROID) );
		return;
	end

	PerformSpellVisualManyTargets( user, visualID, targets )
end 

-- Performs an impact visual whenever
--

function Dispatcher_PerformResultImpactVisual( victimROID, attackerROID, abilityVisualID )

	if ( not abilityVisualID ) then 
		warning( ""ERROR: No Spell Visual ID provided to Dispatcher_PerformResultImpactVisual"" );
		return;
	end
--print( ""ImpactVisual: "",ROIDTOSTRING(targetROID),"" "",abilityVisualID ); 


	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return
	end
	local spellVisualID = abilityVisual.spellVisualID
--print( ""ImpactVisual: "",ROIDTOSTRING(victimROID),"" Spell Vis ID: "",spellVisualID );

	local targetPet = ROIDTOPET(victimROID);
	if ( targetPet ) then 
		if ( victimROID == attackerROID ) then 
			targetPet.actor:PlaySpellImpactVisual(spellVisualID)
		else
			targetPet.actor:PlaySpellTargetImpactVisual(spellVisualID)
		end
	end
end
"
10299,Visuals - Knockbacks,"
-- Performs a bump when requested
--
function Dispatcher_PerformImpactBump( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		PerformBump( victim, attacker, distance, time ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactVerticalKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end
 
	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		--PerformKnockback( victim, attacker, d, t ) 
	
		PerformVerticalKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactHugeKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactHomeKnockback( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not "
10300,[1] Visuals - Knockbacks,"attacker ) then 
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformHomeKnockback( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end


-- Performs a bump when requested
--
function Dispatcher_PerformImpactSlide( victimROID, attackerROID, distance, time )
	local victim = ROIDTOUNIT( victimROID );
	local attacker = ROIDTOUNIT( attackerROID );

	-- If its not a proc, knock!
	local victimTeam = ROIDTOPLAYER(victimROID)
	local attackerTeam = ROIDTOPLAYER(attackerROID)

	if ( not attackerTeam ) then
		warning( ""ERROR: missing team. ""..ROIDTOSTRING(attackerROID) );
	end
	if ( not victim ) then 
		warning (""ERROR: ImpactKnockback missing victim: "", ROIDTOSTRING(victimROID) );
		return;
	end
	if ( not attacker ) then  
		warning (""ERROR: ImpactKnockback missing attacker: "", ROIDTOSTRING(attackerROID) );
		return;
	end

	-- Process independantly
	victim.actor:WaitMovementComplete()

	if ( attackerTeam and attacker.slot == attackerTeam.activePet ) then 
		local d, t = distance or 3, time or 1;
		PerformSlide( victim, attacker, d, t ) 
	else
		warning(""WARNING: Couldn't slide, attacker was not the team's active pet!! :"", attacker.slot,"" : "", attackerTeam.activePet);
	end
end

---

function PerformBump( victim, attacker, distance, time ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	local power = (distance or 3) * 10;

	local front = -math.random(power,power)*.025;
	local left = math.random(-power,power)*.025;
	local up = 0;

	DebugPrint(""slide"")		
	
	victim.actor:PlayOneShotSplitBodyAnim(Animations.CombatWound)

	PerformRelativeSlide( victim, attacker, front, left, up, time );

	victim.actor:WaitMovementComplete()
end


function PerformKnockback( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end
	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	--scene:WaitTimer(0.3)

	DebugPrint(""knock"")		
	--opponent.actor:AddDamageText(nil, damage, false, false)
	local opponentFinalPoint 	= CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;

	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveSplineAbs( 
			BuildKnockbackSpline( victim.actor:GetPosition(), opponentFinalPoint, time), time )
	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 

-- Performs a knockback from the victim's home point
function PerformHomeKnockback( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end
	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	--scene:WaitTimer(0.3)

--Print(""Home Based Knockback2"")		
	--opponent.actor:AddDamageText(nil, damage, false, false)
	local team = ROIDTOPLAYER(PETTOROID(victim));
	
	local opponentFinalPoint 	= CalculateLocationFacingRelativeOffset(victim, team.home, front, left, up);

--Print(""Home Based Knockback3"")		
	--CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;

--Print(""Home Based Knockback4"")		
--Print(""Por?""..time);
	victim.actor:SetSnapToGround(false)
	local "
10301,[2] Visuals - Knockbacks,"kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	local startPosition = victim.actor:GetPosition();

--Print ( startPosition );
--Print ( opponentFinalPoint );

--Print(""Home Based Knockback5"")		
	victim.actor:MoveSplineAbs( 
			BuildKnockbackSpline( startPosition, opponentFinalPoint, time), time )
	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 


function PerformSlide( victim, attacker, howHard, duration ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	local front = howHard or 0.75;
	local left = 0
	local up = 0;

	front = front * -1;

	DebugPrint(""knock"")		
 
	local opponentFinalPoint 	= CalculateUnitFacingRelativeOffset( victim, attacker, front, left, up );
	local driftDistance = 3

	local time = duration or 0.3 --driftDistance/battleScale/opponent.moveSpeed;
 
	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveToAbs(opponentFinalPoint, duration );
	victim.actor:WaitMovementComplete() 
 
	victim.actor:SetSnapToGround(true)
	kit:Stop();

end 

function PerformVerticalKnockback( victim, attacker, distance, time ) 
	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return;
	end

	victim.actor:SetSnapToGround(false)
	local kit = victim.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.Stand)

	victim.actor:MoveSplineAbs( BuildKnockbackSpline( victim.actor:GetPosition(), victim.actor:GetPosition(), time), time)

	victim.actor:WaitMovementComplete()
	victim.actor:SetSnapToGround(true)
	kit:Stop();
end

"
10302,Visuals - Dodge,"
-- Performs a dodge when requested
--
function Dispatcher_PerformDodge( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	-- Process independently
	local victimActorCanMove = false
	if ( victimActor and (victim.sessile == false) ) then
		victimActorCanMove = true
		victimActor:WaitMovementComplete()
	end

	DebugPrint(""dodge"") 
	if ( feedbackActor ) then
		feedbackActor:PlaySoundKit(15927, true);
		if (isObserved) then
			feedbackActor:AddWorldText( victim.actor, MissReasons.Dodged, false, false)
		end
	end

	if ( not victimActorCanMove ) then
		return
	end

	if ( not victim.moveSpeed or victim.moveSpeed <= 0 ) then
		return
	end

	local coin = math.random(0,1);
	if ( coin == 0 ) then 
		coin = -1;
	end

	local front = 0.01;
	local left = 0.75*coin;
	local up = 0; 

	victimActor:SetFacingToTarget( attackerActor, Vector:New() )

	PerformRelativeSlide( victim, attacker, front, left, up );

	victimActor:WaitMovementComplete()
end
"
10303,Visuals - Block,"
-- Performs a block when requested
--
function Dispatcher_PerformBlock( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	-- Process independently
	if ( victimActor and (victim.sessile == false) ) then
		victimActor:WaitMovementComplete()
	end

	if (feedbackActor) then
		feedbackActor:PlaySoundKit(27044, true)
	end

	DebugPrint(""block"") 

	if ( victimActor and (victim.sessile == false) ) then
		victimActor:SetFacingToTarget( attackerActor, Vector:New() )
	end

	if (feedbackActor and isObserved) then
		feedbackActor:AddWorldText( feedbackActor, MissReasons.Blocked, false, false)
	end

end
"
10304,Visuals - Miss,"
-- Performs a miss when requested
--
function Dispatcher_PerformMiss( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	if ( victimActor and (victim.sessile == false) ) then
		victimActor:WaitMovementComplete()
	end

	if (feedbackActor) then
		local type = WorldText.Miss;
		local text = GetGlobalString( ""BATTLE_PET_MESSAGE_MISS"" ) or ""Miss""
		local useColor = false;
		local color = Color:New(255, 255, 0)

		if (isObserved) then
			feedbackActor:AddCustomWorldText( type, useColor, color, text ) 
		end

		feedbackActor:PlaySoundKit(15928, true);
	end
end
"
10305,Visuals - Immune,"
-- Performs immunity when requested
--
function Dispatcher_PerformImmune( victimROID, attackerROID )

	local victim, victimActor, attacker, attackerActor, feedbackActor = GetDefaultFailActors(victimROID, attackerROID)

	if ( victimActor and (victim.sessile == false) ) then
		victimActor:WaitMovementComplete()
	end

	if (feedbackActor) then
		local type = WorldText.Miss;
		local text = GetGlobalString( ""COMBAT_TEXT_IMMUNE"" ) or ""0""
		local useColor = false;
		local color = Color:New(255, 255, 0)

		if (isObserved == true) then
			feedbackActor:AddCustomWorldText( type, useColor, color, text ) 
		end
		feedbackActor:PlaySoundKit(15928, true);
	end
end
"
10306,Pet Owner Emote,"function Dispatcher_OwnerEmote( ROID, emote )
	local player = ROIDTOPLAYER( ROID )

	if (player and player.playerDisplay) then
		player.playerDisplay:PlayAnimKit(AnimKits.OneShotFullBodyLow, true, emote) --OneShotUpperBody
	end
end"
10307,Display Damage,"function Dispatcher_SetHealth(ROID, newHealth, dontDraw, flags)
	local pet = ROIDTOPET( ROID )

	SetHealth(pet, newHealth, dontDraw, flags);
end

function SetHealth(pet, newHealth, dontDraw, flags)
	local oldHealth = pet.currentHealth
	pet.currentHealth = newHealth

	local change = 0;

	if ( oldHealth ) then
		change = newHealth - oldHealth

		if ( not dontDraw ) then
			DisplayHealthChange(pet, change, flags)
		end
	end
 
	--Dispatcher_AddCommandToQueue( PETTOROID(pet), Dispatcher_DeathAndRespawnCheck ); 

	return change, DeathAndRespawnCheck(pet);
end

function DisplayHealthChange(pet, change, flags)

	-- damage numbers feedback for observed battles
	if (isObserved) then
		if (change < 0 or flags.unkillable) then

			local type = WorldText.Damage;
			local useColor = false;
			local color = Color:New(255, 255, 0)

			-- Make it positive
			if (change < 0) then
				change = -change;
			else
				change = 0
			end

			local text = tostring(change)

			if ( flags.crit ) then 
				type = WorldText.Critical;
				local color = Color:New(255, 0, 0)
				useColor = true;
				local criticalText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_CRITICAL"" )
				text = string.format( criticalText or ""%1$s"", text );
			end

			if ( flags.strong ) then 
				local strongText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_STRONG"" )
			
				text = string.format( strongText or ""%1$s (Strong)"", text )
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			elseif ( flags.weak ) then 
				local weakText 		= GetGlobalString( ""BATTLE_PET_MESSAGE_WEAK"" )
 
				text = string.format( weakText or ""%1$s (Weak)"", text )
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			else
				pet.actor:AddCustomWorldText( type, useColor, color, text ) 
			end

		elseif (change > 0 or flags.heal) then
			local useColor = false;
			local type = WorldText.Healing;

			if ( flags.crit ) then 
				type =  WorldText.HealingCritical;
			end

			local color = Color:New(0, 255, 0)

			pet.actor:AddCustomWorldText( type, useColor, color, tostring(change) ) 
			--pet.actor:AddHealingText(nil, change, false, false)
		end
	end
end

"
10308,Display XP,"function Dispatcher_SetXP(ROID, ...)
	local pet = ROIDTOPET( ROID )

	return SetXP(pet, ...)
end

function SetXP(pet, xp, newLevel, dontDraw)
	local oldXP = pet.xp
	local oldLevel = pet.level
	pet.xp = xp
	pet.level = newLevel
	if (dontDraw) then
		return
	end
	
	-- Show XP bonus if it was a hard fight
	local enemyTeam = GetTeamByIndex( EnemyOf( pet.playerID ) ) ;
	local difficultFight = false;

	for k,v in pairs ( enemyTeam.pets ) do 
		if ( oldLevel and v.level and v.level > oldLevel ) then 
			difficultFight = true;
		end
	end


	local xpChange = pet.xp - oldXP
	local levelChange = pet.level - oldLevel
	ShowXPGains(pet, xpChange, levelChange, dontDraw, difficultFight )
end

function ShowXPGains(pet, xpChange, levelChange, dontDraw, difficultFight )		
	if (xpChange <= 0) and (levelChange <= 0) then
		return
	end

	if (xpChange > 0) and (pet.playerID == observingPlayerIndex) then
		local type = WorldText.XPGain;
		local useColor = false;
		local color = Color:New(255, 255, 0)
		local text = tostring(xpChange)
		local xpText = GetGlobalString( ""BATTLE_PET_MESSAGE_XP"" ) or ""%1$s XP"";

		if ( difficultFight ) then 
			xpText = GetGlobalString( ""BATTLE_PET_MESSAGE_XP_DIFFICULTY_BONUS"" ) or ""%1$s XP (Difficulty Bonus)"";
		end
		text = string.format( xpText or ""%1$s"", text );
		pet.actor:AddCustomWorldText( type, useColor, color, text ) 		
	end

	if (levelChange > 0) then
		pet.actor:ApplyLevelUpEffect()
	end
end"
10309,Death and Respawn Check,"function Dispatcher_DeathAndRespawnCheck(ROID)
	local pet = ROIDTOPET( ROID )
	if ( not pet ) then 
		warning (""ERROR: Dispatcher_DeathAndRespawnCheck - No pet!"");
		return;
	end
	return DeathAndRespawnCheck(pet);
end


--
-- Returns:
--
--		nil - no change
--		""died"" - pet just perished
--		""dead"" - pet was dead and remained dead
--		""respawn"" - pet was dead and is now alive
function DeathAndRespawnCheck(pet, forced)
	if (pet.currentHealth <= 0) and (not pet.dead or forced ) then
--warning(""Pet Killed"");

		-- HACKfix facing way off in the distance so as to effectively not rotate
		local lookAtPos = BuildVector( (pet.teamFacing or 0.0), idleRadius*1000, 0)
		pet.actor:SetFacingToAbs(lookAtPos)
		pet.restoreHoverHeight = pet.actor:GetHoverHeight()
		pet.actor:SetHoverHeight(0)
		if ( pet.realActor ) then 
			pet.realActor:SetFacingToAbs(lookAtPos)
			pet.realActor:SetHoverHeight(0)
			pet.restoreHoverHeight = pet.realActor:GetHoverHeight()
		end

		RemoveAllAuraVisuals(pet)

		-- play dead
		local deathKitID = 62
		if (fullUpdate == true) then
			-- already dead
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Dead, false, Animations.None)
			end
		else
			-- dieing
			pet.deathAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			if ( pet.realActor ) then 
				pet.deathAnimKit = pet.realActor:PlayAnimKit(petBattleAnimKits.Death, false, Animations.None)
			end
			
			-- Fix for Bug ID: 378886
			if (pet.states and pet.states[STATE_TREASURE_GOBLIN] == 1) then
				pet.actor:PlaySpellCastVisual(PET_BATTLES_TREASURE_GOBLIN_DEATH)
			end
			
			scene:WaitTimer(1.5)
		end

		return ""died""
	elseif (pet.currentHealth <= 0) and (pet.deathAnimKit or forced) then
--warning(""Pet Is Dead"");
		return ""dead""
	elseif (pet.currentHealth > 0) and (pet.deathAnimKit or forced) then
--warning(""Pet Revived"");
		-- resurrect
		if ( pet.deathAnimKit ) then 
			pet.deathAnimKit:Stop()
			pet.deathAnimKit = nil
			pet.dead = nil;
		end

		if (pet.flyTier == true) then
			pet.actor:SetHoverHeight(DEFAULT_FLY_HOVER_HEIGHT)
		elseif (pet.restoreHoverHeight) then
			pet.actor:SetHoverHeight(pet.restoreHoverHeight)
		end
		pet.restoreHoverHeight = nil
		pet.actor:Fade(1, 0.5)

		return ""respawn""
	end
end"
10310,Default Result Handlers,"
function GetDefaultHandlerTable(result, index)
	local handlerTable = {
		[PetBattleEffect.SetHealth] = {
			dontWait = false;

			func = set_health_func;
			args = { result.value };
		};
		[PetBattleEffect.AuraApply] = {
			dontWait = true;

			showSuccessOrFail = true;

			func = apply_aura_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID };
		};
		[PetBattleEffect.AuraCancel] = {
			dontWait = true;
			func = aura_change_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID, true };

		};	
		[PetBattleEffect.AuraChange] = {
			dontWait = true;
			func = aura_change_func;
			args = { result.auraInstanceID, result.auraTurnsRemaining, result.auraAbilityID, false };
		};	
		[PetBattleEffect.PetSwap] = {
			dontWait = false;

			func = swap_func;
			args = { result };
		};
		[PetBattleEffect.StatusChange] = {
			dontWait = false;
			func = status_change;
			args = { result };
		};
		[PetBattleEffect.SetState] = {
			dontWait = true;
			func = set_state_func;
			args = { result };
		};
		[PetBattleEffect.SetSpeed] = {
			dontWait = true;
			func = set_speed_func;
			args = { result };
		};
		[PetBattleEffect.SetPower] = {
			dontWait = true;
			func = set_power_func;
			args = { result };
		};
		[PetBattleEffect.NPCEmote] = {
			dontWait = false;
			func = npc_emote;
			args = { result };
		};
--[[
		[PetBattleEffect.LockEnabled] = {
			dontWait = true;
			func = spell_lock_enable_func;
			args = { result };
		};
		[PetBattleEffect.LockDisabled] = {
			dontWait = true;
			func = spell_lock_disable_func;
			args = { result };
		};
		[PetBattleEffect.LockModified] = {
			dontWait = true;
			func = spell_lock_modified_func;
			args = { result };
		};
		[PetBattleEffect.CooldownModified] = {
			dontWait = true;
			func = cooldown_modified_func;
			args = { result };
		};
--]]
	};


	return handlerTable;
end"
10311,Result - Set Health,"function set_health_func(targetROID, result, ...)
	local targetPet = ROIDTOPET(targetROID);

	local oldHealth = targetPet.currentHealth
	local newHealth = select(1,...)
	local hidden = false;

	local crit = false; 

	if ( result.flags and result.flags.crit ) then 
		crit = true;
	end 

	amountChanged, result = SetHealth(targetPet, newHealth, hidden, result.flags )

    -- Added this check to prevent a mechanical pet's failsafe showing a much 
    -- larger heal since the targetPet's data doesn't get updated until after 
    -- the heal is sent out. - pcross 7/23/18
    if (newHealth < 0) then
      targetPet.currentHealth = 0
    end

	-- This shouldn't be an inline response - convert to a dispatch later
	if ( result == ""died"" ) then
--print(""SetHealth - died""..targetROID);
		local targetMaster = GETROIDFROMPLAYERID(targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;
		local enemyMaster = GETROIDFROMPLAYERID(3-targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;

		Dispatcher_AddCommandToQueue( targetMaster, Dispatcher_OwnerEmote, Animations.EmoteCry )
		Dispatcher_AddCommandToQueue( enemyMaster, Dispatcher_OwnerEmote, Animations.EmoteCheer )

	elseif ( result == ""respawn"" ) then
--print(""SetHealth - respawn""..targetROID);
		local casterMaster = GETROIDFROMPLAYERID(targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;

		Dispatcher_AddCommandToQueue( casterMaster, Dispatcher_OwnerEmote, Animations.EmoteCheer )
	else
--print(""SetHealth ""..targetROID);

	end

end"
10312,Result - Set Speed,"function set_speed_func(targetROID, result, ...)
end"
10313,Result - Set Power,"function set_power_func(targetROID, result, ...)
end"
10314,Result - Create Aura,"function CreateAura(targetROID, auraInstanceID, turnsRemaining, auraAbilityID )
	local targetPet = ROIDTOPET(targetROID);

	if ( not targetPet ) then 
		warning(""ERROR: Invalid pet supplied to CreateAura: "", ROIDTOSTRING( targetROID ), result );
		return;
	end

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local aura = ApplyAura(targetPet, auraInstanceID, turnsRemaining, auraSpellVisualID);

	if ( aura and auraVisual and auraVisual.scriptFunction ) then 

--		if (auraAbilityID == 175) then
--			print(""VOLCANO "" .. auraVisual.ID .. "", "" .. auraVisual.scriptFunctionString)
--			auraVisual.scriptFunction( targetROID, ""aura"", aura, auraInstanceID, turnsRemaining, auraAbilityID ); 
--			return aura
--		end

		warning(""WARNING: Running custom script for Aura of ""..auraAbilityID);
		Dispatcher_AddCommandToQueue(targetROID, auraVisual.scriptFunction, ""aura"", aura, auraInstanceID, turnsRemaining, auraAbilityID ); 	 

		--scene:WaitTimer(0.01); 
	elseif ( not auraVisual ) then
		warning(""WARNING: AuraVisual record missing for ability "", auraAbilityID);
	else
		warning(""WARNING: Default visual being used for aura of "", auraAbilityID);
	end

	return aura;
end

--------------------------------------------------------------------------------
function ApplyAura(pet, auraInstanceID, turnsRemaining, spellVisualID, auraAbilityID)
	local aura = pet.auras[auraInstanceID]
	if (not aura) then
		aura = { }
		pet.auras[auraInstanceID] = aura
	end

	-- clear existing aura visual for this instance, if there is one
	if (aura.spellVisualID and aura.spellVisualInstanceID) then
		pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)
	end

	aura.spellVisualID = spellVisualID
	if (aura.spellVisualID) then
		aura.spellVisualInstanceID = pet.actor:PlaySpellStateVisual(spellVisualID)

		if ( pet.realActor ) then 
			aura.spellVisualInstanceID = pet.realActor:PlaySpellStateVisual(spellVisualID)
		end

	else
		aura.spellVisualInstanceID = nil
	end
	aura.playerID = pet.playerID;
	aura.petSlot = pet.slot;
	aura.turnsRemaining = turnsRemaining
	aura.running = true;

	return aura;
end

--------------------------------------------------------------------------------
function RemoveAura(pet, auraInstanceID)

	RemoveAuraVisual(pet, pet.auras[auraInstanceID])
	pet.auras[auraInstanceID].running = false;
	pet.auras[auraInstanceID] = nil
end

--------------------------------------------------------------------------------
function RemoveAuraVisual(pet, aura)

	if aura and aura.spellVisualInstanceID then
		pet.actor:ClearSpellVisual( aura.spellVisualInstanceID)

		if ( pet.realActor ) then 
			pet.realActor:ClearSpellVisual( aura.spellVisualInstanceID)

			-- GIANT HACK BECAUSE WE ARE OUT OF TIME
			pet.realActor:Fade(0,0);
		end
		--aura.spellVisualInstanceID = nil
	end

end

--------------------------------------------------------------------------------
function RemoveAllAuraVisuals(pet)

	for auraInstanceID, aura in pairs(pet.auras) do
		RemoveAuraVisual(pet, aura)
	end

end
"
10315,Result - Trigger Ability,"function trigger_ability_func(targetROID, result, ...)
end"
10316,Result - Spell Locked,"function spell_lock_enable_func(targetROID, result, ...)
	if (isObserved == true) then
		local target = ROIDTOPET ( targetROID );

		local type = WorldText.Damage;
		local useColor = false;
		local color = Color:New(0, 255, 0)

		local text = """" -- number of turns here

		local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_SPELL_LOCK"" )
		text = string.format( lockText or ""Spell Locked! (%1$s turns)"", text )
		target.actor:AddCustomWorldText( type, useColor, color, text )
	end
end

function spell_lock_disable_func(targetROID, result, ...)
end

function spell_lock_modified_func(targetROID, result, ...)
end"
10317,Result - Cooldown Modified,"function cooldown_modified_func()
	if (isObserved == true) then
		local target = ROIDTOPET ( targetROID );

		local type = WorldText.Damage;
		local useColor = false;
		local color = Color:New(0, 255, 0)

		local text = """" -- number of turns here

		local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_UP"" )
		--local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_DOWN"" )
		--local lockText 	= GetGlobalString( ""BATTLE_PET_MESSAGE_TRAP_COOLDOWN_RESET"" )
		text = string.format( lockText or ""Cooldown reduced!"", text )
		target.actor:AddCustomWorldText( type, useColor, color, text ) 
	end
end"
10318,Result - Aura Apply,"function apply_aura_func( targetROID, result, ... )
	local auraInstanceID, turnsRemaining, auraAbilityID = ...

	-- apply an aura, tracked by instance ID

	if (DidItFail(result)) then
		return
	end

--print(""Applying aura to "",targetROID, "" ("",targetPet.slot,"") of "",auraAbilityID,"" using spell visual ID: "",auraSpellVisualID);

	local auraSpellVisualID = 0
	local auraVisual = GetAuraAbilityVisual(auraAbilityID)
	if (auraVisual) then
		auraSpellVisualID = auraVisual.spellVisualID
	end

	local target = ROIDTOUNIT(targetROID);

	if ( target ) then 
		if (auraSpellVisualID) then
			target.actor:PlaySpellImpactVisual(auraSpellVisualID)
		end
	end

	aura = CreateAura( targetROID, auraInstanceID, turnsRemaining, auraAbilityID );

end
"
10319,Result - Aura Change,"function aura_change_func(targetROID, result, ...)
	local targetPet = ROIDTOPET( targetROID );

	if not targetPet then
		warning(""ERROR: Unknown pet provided to aura_change_func: "", ROIDTOSTRING(targetROID), result );
		return;
	end

	local auraInstanceID, turnsRemaining, auraAbilityID, cancel = ...
	local aura = targetPet.auras[auraInstanceID]

	if not aura then
		warning(""WARNING: Unknown aura instance ID. "", auraInstanceID, "" (You probably reloaded UI) "" )
--print(result);
		warning(""WARNING: Attempting to reapply aura: "", auraAbilityID);
		aura = CreateAura(targetROID, auraInstanceID, turnsRemaining, auraAbilityID);
	end

	if ( not turnsRemaining ) then
		warning(""ERROR: no turns remaining"");
	end

	if (cancel == true) or (turnsRemaining == 0 ) then

		RemoveAura(targetPet, auraInstanceID)
	else
		-- [ABrazie]: 7/25/2012
		-- Added this block so the spell impact visuals play when an aura
		-- Has its duration extendeded
		if ( turnsRemaining > aura.turnsRemaining ) then 
			local auraSpellVisualID = 0
			local auraVisual = GetAuraAbilityVisual(auraAbilityID)
			if (auraVisual) then
				auraSpellVisualID = auraVisual.spellVisualID
			end

			local target = ROIDTOUNIT(targetROID);

			if (auraSpellVisualID) then
				target.actor:PlaySpellImpactVisual(auraSpellVisualID)
			end
		end

		aura.turnsRemaining = turnsRemaining
	end
end
"
10320,Result - Swap ,"function swap_func(targetROID, result )
	if ( result.flags.invalidTarget ) then 
		return;
	end

	local casterPlayer 		= ROIDTOPLAYER( targetROID ) ;
	local casterNewFrontPet = ROIDTOPET( targetROID );
	local casterFrontPet 	= casterPlayer.pets[casterPlayer.activePet]

	local opponentPlayer 	= GetTeamByIndex(3-casterNewFrontPet.playerID)
	local opponentFrontPet 	= opponentPlayer.pets[opponentPlayer.activePet]

	local casterMasterROID = GETROIDFROMPLAYERID(casterPlayer.playerID) + ROID_TYPE_PLAYER_MASTER;

	if ( casterNewFrontPet.slot ~= casterFrontPet.slot ) then 
		Dispatcher_AddCommandToQueue( casterMasterROID, Dispatcher_OwnerEmote, Animations.EmotePoint )

		casterPlayer.activePet = casterNewFrontPet.slot

		-- This could probably be dispatched
		PerformSwap( casterFrontPet, casterNewFrontPet, opponentFrontPet );

	else
		casterPlayer.activePet = casterNewFrontPet.slot
	end
	-- Clean up also forces the pets to run forward.
	DefaultTurnCleanUp(targetROID);
end"
10321,Result - SetState,"function set_state_func(targetROID, result) 
	local targetPet = ROIDTOPET( targetROID );
	if not targetPet then
		warning(""ERROR: Unknown pet provided to set_state_func: "", ROIDTOSTRING(targetROID), result );
		return;
	end

	local label = ""Unknown State"";

	for k,v in pairs(STATE_LOOKUP) do
		if ( v == result.stateID ) then
			label = k;
			break;
		end
	end

	--Print(""*** State Update: "",label,"" = "",result.stateValue) 

	if ( not targetPet.states ) then
		targetPet.states = {};
	end

	targetPet.states[result.stateID]  = result.stateValue;

	-- stealth activated
	if ( result.stateID == STATE_STEALTHED ) then
		if ( result.stateValue > 0 ) then
			targetPet.stealthed = true;
		else
			targetPet.stealthed = false;
		end
		
		local stealthAlpha = GetNaturalAlpha( targetROID )
--		print(""STEALTH CHANGED, ALPHA = "" .. tostring(stealthAlpha))
		targetPet.actor:Fade(stealthAlpha, 0.5)
	end

	-- flight activated
	if ( result.stateID == STATE_FLY_TIER ) then

		if ( result.stateValue > 0 ) then
			targetPet.actor:SetHoverHeight(DEFAULT_FLY_HOVER_HEIGHT)
			targetPet.flyTier = true;
		else
			targetPet.actor:SetHoverHeight(0.0)
			targetPet.flyTier = false;
		end
		
	end

	-- stealth activated
	if ( result.stateID == STATE_INVISIBLE ) then
		if ( result.stateValue > 0 ) then
			targetPet.invisible = true;
		else
			targetPet.invisible = false;
		end
		
		targetPet.actor:Fade( GetNaturalAlpha( targetROID ) , 0.5)
	end


	-- Float custom text for those UI observing
	if (isObserved) then 
		if ( result.stateID == STATE_CHARGING ) then
			if ( result.stateValue > 0 ) then
				local type = WorldText.Damage;
				local useColor = false;
				local color = Color:New(255, 255, 0)
	 
				local text = GetGlobalString( ""BATTLE_PET_MESSAGE_CHARGING"" ) or ""Charging"";
				targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
			end
		end

		if ( result.stateID == STATE_CLEANSE ) then
			if ( result.stateValue > 0 ) then 
				local type = WorldText.Damage;
				local useColor = false;
				local color = Color:New(255, 255, 0)
	 
				local text = GetGlobalString( ""BATTLE_PET_MESSAGE_CLEANSED"" ) or ""Cleansed"";
				targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
			end
		end

		if ( result.stateID == STATE_RECOVERING ) then
			if ( result.stateValue > 0 ) then
				local type = WorldText.Damage;
				local useColor = false;
				local color = Color:New(255, 255, 0)

				local text = GetGlobalString( ""BATTLE_PET_MESSAGE_RECOVERING"" ) or ""Recovering"";
				targetPet.actor:AddCustomWorldText( type, useColor, color, text ) 
			end
		end
	end

	-- Clone Mode
	if ( result.stateID == STATE_CLONE_ACTIVE ) then
		if ( result.stateValue > 0 ) then 
			--print(""Clone Mode ACTIVATED!""..targetROID);
		else
			--print(""Clone Mode DEACTIVATED!""..targetROID);
		end
	end
end"
10322,Result - NPC Emote,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function npc_emote(targetROID, result)
	if (not result) then
		return
	end

	local player = ROIDTOPLAYER( targetROID );

	if ( player and player.playerDisplay ) then 
		player.playerDisplay:BroadcastText(BroadcastType.Say, result.value )
	end
end
"
10323,Result - ChangeStatus,"--------------------------------------------------------------------------------
-- STATUS CHANGE
function status_change(targetROID, result)
	if (not result) then
		return
	end

--[[
print(""Debugging Status Change Table"");
DEBUG_TABLE(result)
--]]

	local targetPet = ROIDTOPET( targetROID );
	
	-- Save the local state
	if ( result.isTrapped ) then 
		targetPet.isTrapped = result.isTrapped;
	end

	if ( result.isTrapped ) then 
		local enemyMasterRoid = GETROIDFROMPLAYERID(3-targetPet.playerID) + ROID_TYPE_PLAYER_MASTER;
	end
end
"
10334,Debug Messaging,"debugOn = false;

warningsEnabled = battleScene:WarningsEnabled();

function DebugPrint(...)
	if ( debugOn == true ) then
		print(...);
	end
end

function LocalDebugPrint(enabled, name)
	local debugPrint = function(data)
		if (debugOn == true) then
			DebugPrint(name .. "": "" .. tostring(data))
		end
	end
	return debugPrint
end

function warning (...)
	if ( warningsEnabled == true ) then
		print(...);
	end
end
"
10335,General,"--------------------------------------------------------------------------------
-- spawning options
battleScale    = 1.0
spawnFwdOffset = 0.0
initialFadeInTime = 0.5

--------------------------------------------------------------------------------
-- pet ranges and move speeds
playerRadius   = 5.0
idleRadius     = 2.0
readyRadius    = 1.25
rangedRadius   = 0.5
meleeRadius    = -0.5
backlineRadius = 4.0
forwardSpeed   = 7
backwardSpeed  = 8
backwardSpeedMulti = 0.7

DEFAULT_MOVE_SPEED = 5
DEFAULT_TURN_RATE = 15
DEFAULT_HOVER_HEIGHT_SPEED = 1.5

DEFAULT_FLY_HOVER_HEIGHT = 0.5

--------------------------------------------------------------------------------
-- backline
backlineSpacing = 2.0
backlineFadeTime = 0.25

--------------------------------------------------------------------------------
-- pad
padModel = fid(124640)
padAlpha = 1.0
padScale = 1.0

--------------------------------------------------------------------------------
-- arena
arenaRingModel = fid(606219)
arenaRingAlpha = 0.5
arenaRingScale = 1.0
arenaFadeTime = 5.0

--------------------------------------------------------------------------------
-- camera
freelookZoomMin = 5
freelookZoomMax = 15
freelookZoomStart = 10.0
useFreelookCamera = true
if (not Scene.SetGameCameraTarget) then
	useFreelookCamera = false
end

battleCameraIDs =
{
	intro = 336;
	idle = 335;
}

--------------------------------------------------------------------------------
-- animation
petBattleAnimKits =
{
	Stand 			= 2267;
	StandShark		= 3238;
	Death 			= 2268;
	Dead  			= 2269;
	StandHoldDecay 	= 2133;
	CloseClosed		= 2770;
	OpenOpened		= 2769;
	Custom0Custom1  = 2768;
	Closed			= 4135;
	WoundBump		= 5600;
	SpellDirected	= 18107;
}

--------------------------------------------------------------------------------
-- special visuals
PET_BATTLES_BIGGLESWORTH = 29438;
PET_BATTLES_SPRINT_TRAIL = 27365;
PET_BATTLES_WATER_BUBBLE = 27486;
PET_BATTLES_TREASURE_GOBLIN_DEATH = 37059;
PET_BATTLES_SPECTRAL_BLUE = 35212;

PET_TRAP_LEVEL_1 = 427;
PET_TRAP_LEVEL_2 = 77;
PET_TRAP_LEVEL_3 = 135;
"
10337,Init Static Ability Data,"
local petAbilities = { }
local petAbilityTurns = { }
local petAbilityEffects = { }
local petAbilityEffectTypes = { }
local petAbilityVisuals = { }

local debugStaticData = false
local debugEffectVisualSearch = false 

function InitStaticData(initialBattleState)
	if (debugStaticData) then
		print(""Init Static Data"")
	end

	for index,ability in pairs(initialBattleState.abilityDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY "" .. ability.ID)
		end
		petAbilities[ability.ID] = ability
	end

	for index,abilityTurn in pairs(initialBattleState.abilityTurnDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY TURN "" .. abilityTurn.ID)
		end
		petAbilityTurns[abilityTurn.ID] = abilityTurn
	end

	for index,abilityEffect in pairs(initialBattleState.abilityEffectDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY EFFECT "" .. abilityEffect.ID)
		end
		petAbilityEffects[abilityEffect.ID] = abilityEffect
	end

	for index,abilityEffectType in pairs(initialBattleState.abilityEffectTypeDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY EFFECT TYPE "" .. abilityEffectType.ID)
		end
		petAbilityEffectTypes[abilityEffectType.ID] = abilityEffectType
	end

	for index,abilityVisual in pairs(initialBattleState.abilityVisualDescs) do
		if (debugStaticData) then
			print(""Adding ABILITY VISUAL "" .. abilityVisual.ID)
		end

		petAbilityVisuals[abilityVisual.ID] = abilityVisual

		-- add any custom script function
		LoadCustomVisualScript(abilityVisual)
	end

end

function GetAbility(abilityID)
	if (abilityID) then
		return petAbilities[abilityID]
	end
end

function GetAbilityTurn(abilityTurnID)
	if (abilityTurnID) then
		return petAbilityTurns[abilityTurnID]
	end
end

function GetAbilityEffect(abilityEffectID)
	if (abilityEffectID) then
		return petAbilityEffects[abilityEffectID]
	end
end

function GetAbilityEffectType(abilityEffectTypeID)
	if (abilityEffectTypeID) then
		return petAbilityEffectTypes[abilityEffectTypeID]
	end
end

function GetAbilityVisual(abilityVisualID)
	if (abilityVisualID) then
		return petAbilityVisuals[abilityVisualID]
	end
end

function GetAllAbilityVisualsFromEffectID(effectID)
	local effectVisual = nil
	local turnVisual = nil
	local abilityVisual = nil
	local effectTypeVisual = nil

	local abilityEffect = GetAbilityEffect(effectID)
	if (abilityEffect) then
		effectVisual = GetAbilityVisual(abilityEffect.visualID)

		-- check parents: turn and then ability
		local abilityTurn = GetAbilityTurn(abilityEffect.turnID)
		if (abilityTurn) then
			turnVisual = GetAbilityVisual(abilityTurn.visualID)

			local ability = GetAbility(abilityTurn.abilityID)
			if (ability) then
				abilityVisual = GetAbilityVisual(ability.visualID)		
			end			
		end

		-- check fallback: effect properties
		local effectType = GetAbilityEffectType(abilityEffect.effectType)
		if (effectType) then
			effectTypeVisual = GetAbilityVisual(effectType.visualID)
		end
	end

	return effectVisual, turnVisual, abilityVisual, effectTypeVisual
end

function GetAbilityVisualFromEffectID(effectID)
	-- Priority rules for picking visuals for an EFFECT:
	--   1. Effect Visual
	--   2. Turn Visual (if not scripted)
	--   3. Ability Visual (if not scripted)
	--   4. Effect Type Visual
	local effectVisual = nil
	local turnVisual = nil
	local abilityVisual = nil
	local effectTypeVisual = nil
	effectVisual, turnVisual, abilityVisual, effectTypeVisual = GetAllAbilityVisualsFromEffectID(effectID)

	if (effectVisual) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" Visual: Using EFFECT Visual ID "" .. effectVisual.ID)
		end
		return effectVisual
	end

	if (turnVisual and turnVisual.scriptFunction == nil) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" "
10338,[1] Init Static Ability Data,"Visual: Using TURN Visual ID "" .. turnVisual.ID)
		end
		return turnVisual
	end

	if (abilityVisual and abilityVisual.scriptFunction == nil) then
		if (debugEffectVisualSearch) then
			print(""Effect "" .. effectID .. "" Visual: Using ABILITY Visual ID "" .. abilityVisual.ID)
		end
		return abilityVisual
	end

	if (debugEffectVisualSearch) then
		if (effectTypeVisual) then
			print(""Effect "" .. effectID .. "" Visual: Using EFFECT TYPE visual ID "" .. effectTypeVisual.ID)
		else
			print(""Effect "" .. effectID .. "" Visual: NONE FOUND"")
		end
	end

	return effectTypeVisual
end

function GetAuraAbilityVisualID(auraAbilityID)
	-- in the absence of any other info, search down to the first turn
	local visualID = nil
	local ability = petAbilities[auraAbilityID]
	if (not ability) then
		return visualID
	end

	if (ability.visualID and ability.visualID ~= 0) then
		visualID = ability.visualID
	end
	return visualID
end

function GetAuraAbilityVisual(auraAbilityID)
	local abilityVisualID = GetAuraAbilityVisualID(auraAbilityID)
	if (not abilityVisualID) then
		return nil
	end

	return petAbilityVisuals[abilityVisualID]
end
"
10341,PetBattle - 1. Handle Event,"
-- Helper Functions for processing effects
local currentEffectInstanceID = nil

function ProcessEvent(event)

	-- apply the different types of effects
	if not (event) then
		return true
	end

	local eventType = event.eventType

	StartEffectProcessing(event)

	if (eventType == PetBattleEvent.BattleOver) then

		return false, event.winnerID
	elseif (eventType == PetBattleEvent.BattleResultsBegin ) then

		if ( event.winnerID == 3 or event.abandoned ) then 
			FleeCeremony(event.winnerID);
		elseif ( event.winnerID == observingPlayerIndex ) then 
			VictoryCeremony(event.winnerID)
		end

	elseif (eventType == PetBattleEvent.BattleResults) then

		if ( event.winnerID == observingPlayerIndex ) then 
			EventReward(event.rewards)
		end

	elseif (eventType == PetBattleEvent.ObserverChange) then

		local newIsObserved = false
		local newObservingPlayerIndex = 0
		if (battleScene.GetUIObservingPlayer) then
			newObservingPlayerIndex = battleScene:GetUIObservingPlayer()
			if (observingPlayerIndex > 0) then
				newIsObserved = true
			end
		end

		if (newIsObserved ~= isObserved) or (newObservingPlayerIndex ~= newIsObserved) then
			isObserved = newIsObserved
			observingPlayerIndex = newObservingPlayerIndex
			if (observingPlayerIndex > 0) then
				SetCamera(3)
			else
				SetCamera(4)
			end
		end

	elseif (eventType == PetBattleEvent.MoveAbilitySelected) then
		EventMoveAbilitySelected(event.abilityVisualID)
	elseif (eventType == PetBattleEvent.MovePetSwapSelected) then
		EventMovePetSwapSelected(event.newFrontPet)
	elseif (eventType == PetBattleEvent.MoveTrapSelected) then
		EventMoveTrapSelected()
	elseif (eventType == PetBattleEvent.RoundEffect) then
		print(""WARNING: processing round result outside of RoundStart/End"")
	elseif (eventType == PetBattleEvent.RoundStart) then

		-- pull off all round effects
		local allEffects = { }
		local effectNum = 0
		local done = false
		while ((done ~= true) and (battleScene:HasPendingEffects() == true)) do
			event = battleScene:GetPendingEffect()
			eventType = event.eventType
			if (eventType == PetBattleEvent.RoundComplete) then
				done = true
			else
				effectNum = effectNum + 1
				allEffects[effectNum] = event
			end
		end
		
		-- if we have at least one effect or we're done, make sure
		-- process the round start then batch process effects
		-- NOTE: the event we are left with will be RoundComplete
		if (done == true or #allEffects > 0) then
			SignalEffectProcessed()
			ProcessAllRoundResults(allEffects)

			-- switch to the next pendign event
			StartEffectProcessing(event)
		end
	end

	-- Ensure the current effect was processed
	SignalEffectProcessed()

	if (eventType == PetBattleEvent.RoundComplete) then
		if ( PostRoundCleanUp ) then
			PostRoundCleanUp(event);
		end
	end

	return true
end

--local lastEvent = nil
function StartEffectProcessing(event)
--	lastEvent = event

	local instanceID = event.instanceID
	if ((instanceID ~= nil) and (processHistoryList ~= nil)) then
		local history = processHistoryList[instanceID]
		if (history ~= nil) then
			print(""ERROR: started processing old event ID "" .. instanceID .. "", in history as "" .. tostring(history))
			ForceStackError()
		else
			processHistoryList[instanceID] = ""STARTED""
		end
	end

	-- save the instance ID of the effect currently being processed
	currentEffectInstanceID = instanceID
end

function SignalEffectProcessed()
	if ((currentEffectInstanceID ~= nil) and (processHistoryList ~= nil)) then
		local history = processHistoryList[currentEffectInstanceID]
		if (history ~= ""STARTED"") then
			print(""ERROR: signaled processed old event ID "" .. instanceID .. "", in history as "" .. tostring(history))
			ForceStackError()			
		else
			processHistoryList[currentEffectInstanceID] = ""PROCESSED""
		end
	end
"
10342,[1] PetBattle - 1. Handle Event,"
	if currentEffectInstanceID and battleScene then
		battleScene:SignalEffectApplied(currentEffectInstanceID)
		currentEffectInstanceID = nil
	end
end

-- TODO: add a pcall for safety, but pcall where the function can yield requires
-- Lua 5.1 at least
local createFormatString = [[
return function(...)
  local customFunc = function(...)
    return %s
  end
  customFunc(...)
  return true
end
]]

function LoadCustomVisualScript(abilityVisual)
	if (not abilityVisual) then
		return
	end

	local customScriptString = abilityVisual.scriptFunctionString

	if (customScriptString and #customScriptString > 0) then
		local createString = string.format(createFormatString, customScriptString, abilityVisual.ID, customScriptString)
		local status, result = pcall(loadstring(createString))
		if (status == true) then
			setfenv(result, getfenv())
			abilityVisual.scriptFunction = result
		else
			print(""ERROR: loading script on BattlePetVisual ID="" .. abilityVisual.ID .. "" failed: "" .. createString)
			print(""ERROR: "" .. result)
		end
	end

end

"
10343,PetBattle - 2. Pre-Playback Processing,"--------------------------------------------------------------------------------
-- Group and process all round effects

local processDebug = false;

-- TODO: child proc groups were not being handled as expected
local flattenProcs = false; 

function ProcessAllRoundResults(allEvents)
	if ( processDebug ) then 
		DebugPrint(""== Round Result Grouping =="")
	end

	-- group on (turnInstanceID, effectID, stackDepth)

	-- build an effect tree, taking into account procs
	local turnGroups = { }
	local effectGroups = { }
	
	-- top level turns that we will process
	local topLevelTurnGroups = { }
	
	-- generate groups, and a  mapping from effectIndex
	local lastEffect = nil

	local currentFlatTurnKey = 1
	local currentFlatEffectKey = 1
	local lastGenKeyEvent = nil

	for eventIndex, event in pairs(allEvents) do
		local turnKey
		local effectKey

		if (flattenProcs == true) then
			-- flatten the turn structure for key generation, preserving order
			-- and maintaining group splits on visuals
			if (lastGenKeyEvent) then
				local turnGroupDiffers = false
				if (event.stackDepth ~= lastGenKeyEvent.stackDepth) or (event.turnInstanceID ~= lastGenKeyEvent.turnInstanceID) then
					turnGroupDiffers = true
					currentFlatTurnKey = currentFlatTurnKey + 1
				end

				if (turnGroupDiffers == true) or (event.turnInstanceID ~= lastGenKeyEvent.turnInstanceID) then
					currentFlatEffectKey = currentFlatEffectKey + 1
				end
			end

			turnKey = currentFlatTurnKey
			effectKey = currentFlatEffectKey
			lastGenKeyEvent = event

			if ( EVENT_DEBUG_MODE ) then 
				print(""FLATTENED: "" .. event.instanceID .. "", TK="" .. tostring(turnKey) .. "", EK="" .. tostring(currentFlatEffectKey))
			end
		else
			turnKey, effectKey = GenerateUniqueGroupKeys(event)

			if ( EVENT_DEBUG_MODE ) then 
				print(""PROCTREE: "" .. event.instanceID .. "", TK="" .. tostring(turnKey) .. "", EK="" .. tostring(currentFlatEffectKey))
			end
		end

		local abilityEffect 	
		local abilityEffectType 
		local abilityTurn 		
		local ability 			

		local abilityID
		local abilityVisualID 			
		local turnVisualID				
		local effectVisualID 			
		local effectFallbackVisualID

		-- Load up the relevant spell data
		abilityEffect 	= GetAbilityEffect(event.effectID);
		if ( abilityEffect ) then 
			abilityEffectType 	= GetAbilityEffectType(abilityEffect.effectType)
			abilityTurn 		= GetAbilityTurn(abilityEffect.turnID)
			ability 			= GetAbility(abilityTurn.abilityID)

			abilityID 				= ability.ID;
			abilityVisualID 		= ability.visualID
			turnVisualID			= abilityTurn.visualID
			effectVisualID 			= abilityEffect.visualID
			effectFallbackVisualID	= abilityEffectType.visualID
		end

		local filteredEvent = FilterResultEventsByType(event);
--print(""Turn Key: ""..turnKey.."" EffectID: ""..event.effectID);
		-- find or build a turn group as necessary
		local turnGroup = turnGroups[turnKey]
		if (not turnGroup) then
			turnGroup =
			{
				class = ""turn"";

				key = turnKey;
				turnInstanceID = event.turnInstanceID;
				firstEvent = filteredEvent;
				effects = { };

				turnVisualID = turnVisualID;
				abilityID = abilityID or event.trapAbilityID;
				playerID = event.casterPlayerID or event.targetPlayerID;
				petSlot = event.casterPetSlot or event.targetPetSlot;
				sourceAuraInstanceID = event.sourceAuraInstanceID;
			}
			turnGroup = FilteredEventMetaTable( turnGroup )
			turnGroups[turnKey] = turnGroup
			
			if (event.stackDepth <= 1) or (not lastEffect) then
				table.insert(topLevelTurnGroups, turnGroup)
			else
				DebugPrint ( ""PROC!!"", event.effectID, "" : "",abilityID )				
--print( ""Proc Detected ""..event.instanceID )
--				table.insert(topLevelTurnGroups, turnGroup)		
			
				-- this is a proc off of the last effect, and should be attached as a child
				"
10344,[1] PetBattle - 2. Pre-Playback Processing,"lastEffect.procGroup = turnGroup
			end
		
			if ( processDebug ) then 
				DebugPrint(""+ New Turn Group, turnID = "" .. event.turnInstanceID .. "", depth = "" .. event.stackDepth
					.."", ability: ""..tostring(abilityID));
			end
		end
		
		-- find or build an effect group as necessary
		local effectGroup = effectGroups[effectKey]
		if (not effectGroup) then
			effectGroup =
			{
				class = ""effect"";

				key = effectKey;
				firstEvent = filteredEvent;
				results = { };
				
				effectID				= event.effectID;
				effectVisualID 			= effectVisualID;
				effectFallbackVisualID 	= effectFallbackVisualID;
				targetPlayerID 			= event.targetPlayerID;
				targetPetSlot 			= event.targetPetSlot;
			}
			--effectGroup = FilteredEventMetaTable( effectGroup )

			effectGroups[effectKey] = effectGroup

		
			-- this is a new effect group, link it to the end of our parent turn group
			table.insert(turnGroup.effects, effectGroup)

			if ( processDebug ) then
				local effectName = ""Unknown"";

				for k,v in pairs(PetBattleEffect) do 
					if ( v == event.effectType ) then
						effectName = k;
					end
				end

				DebugPrint(""+   New Effect Group, effectID = "" .. event.effectID.."" effectType: ""..effectName)
			end
		end


		-- add this effect to the end of the group list
		table.insert(effectGroup.results, filteredEvent)

		if ( processDebug ) then

			local effectName = ""Unknown"";

			for k,v in pairs(PetBattleEffect) do 
				if ( v == event.effectType ) then
					effectName = k;
				end
			end

			local eventType = ""Unknown"";
			for k,v in pairs(PetBattleEvent) do 
				if ( v == event.eventType ) then
					eventType = k;
				end 
			end

			DebugPrint(""+     New Result, instanceID = "" .. event.instanceID.."" effectType: ""..effectName.."" eventType: ""..eventType)
		end
		
--		lastEffect = event
		lastEffect = filteredEvent
	end
	if ( processDebug ) then
		DebugPrint(""  "")
	end

	-- [ABrazie]: Heavy duty debug mode
	if ( EVENT_DEBUG_MODE ) then 
		for turnID, turn in pairs (topLevelTurnGroups) do 
			DebugTurnGroup(turnID, turn)
		end
	end

	PostProcessAllTurns( topLevelTurnGroups ) 

	PlaybackAllTurns(topLevelTurnGroups);

	if ( processDebug ) then
		DebugPrint(""  "")
	end
end

function DebugTurnGroup(turnID, turn)
	print(""turnKey = "" .. turn.key)
	for effectID, effect in pairs( turn.effects ) do
		print(""effectKey = "" .. effect.key)
		for resultID, result in pairs( effect.results ) do 
			print( ""  AA: T) ""..turnID.."" E) ""..effectID.."" R) ""..resultID.."" I)""..result.instanceID.."" - ""..DEBUG_EVENT_LOG[result.instanceID]  );
			if (result.procGroup) then
				DebugTurnGroup(""PROC"", result.procGroup)
			end
		end
	end
end
"
10345,PetBattle - 3. Post Processing,"function PostProcessAllTurns ( topLevelTurnGroups )

	if (debugOn == true) then
		print(""  "")
		print(""== Start Round Post-Processing =="")
	end 
	
	-- process top level turns in order
	for index, turn in pairs( topLevelTurnGroups ) do
		PostProcessTurn( turn )
	end

	if (debugOn == true) then
		print(""== End Round Post-Processing =="")
		print(""  "")
	end
end

-- The goal here is to analyze each turn
-- Determine useful information
function PostProcessTurn ( turn ) 

	-- Useful information to obtain
	--
	-- Turn:	Complete target list
	-- Effect: 	Primary Target, Secondary Targets
	--			Was It Redirected, Who was the redirect target
	--

	turn.targetList = {};
	turn.primaryTargetList = {};
	
	for effectIndex, effect in pairs( turn.effects ) do 

		effect.targetList = {};
		effect.firstPrimaryTarget = nil;
		effect.primaryTarget = nil;
		effect.redirectTarget = nil;

		for resultIndex, result in pairs ( effect.results ) do
			local roid = ResultToTargetROID(result)

			-- [ABrazie] 8/10/2012 - I added this to suppress errors.
			-- Generally, if this occurs its a sign of a server side
			-- Designer data issue, or an invalid target. 
			--if ( roid and roid > 0 ) then 
			effect.firstPrimaryTarget = effect.firstPrimaryTarget or roid;

			-- Fix for Bug ID: 349879: store the first primary target that
			-- will potentially have a 'meaningful' result
			if ((result.resultType == PetBattleEffect.SetHealth) or
				(result.resultType == PetBattleEffect.AuraApply) or
				(result.resultType == PetBattleEffect.PetSwap)) then
				effect.primaryTarget = effect.primaryTarget or roid;
			end

			if(result.resultType == PetBattleEffect.ReplacePet) then
				local position = BACKROW_PET_OFFSETS[result.targetPlayerID][result.targetPetSlot]
				local team = teams[result.targetPlayerID]
				team.pets[result.targetPetSlot].actor:Fade(0, 1)
				team.petDescs[result.targetPetSlot] = battleScene:GetPetData(result.targetPlayerID, result.targetPetSlot)
				team.pets[result.targetPetSlot] = ReInitPet(team, result.targetPetSlot, position)
			end
			
			table.insert( effect.targetList, roid );
			table.insert( turn.targetList, roid );
			--end
			if ( result.procGroup ) then 
				PostProcessTurn(result.procGroup)
			end

			if ( result.resultType == PetBattleEffect.SetState ) then
				if ( result.stateID == STATE_BLOCK_CHARGES ) then 
					local newValue = result.stateValue;

					local unit = ROIDTOUNIT ( roid ) 
--print(""Blocks Consumed: ""..ROIDTOSTRING( roid ) );
					-- If you blocked an attack
					if ( unit and unit.states[STATE_BLOCK_CHARGES] and unit.states[STATE_BLOCK_CHARGES] > newValue 
							  and unit.states[STATE_REDIRECT_AURA] and unit.states[STATE_REDIRECT_AURA] > 0) then 
						local auraID = unit.states[STATE_REDIRECT_AURA];
						local team = GetTeamByIndex( unit.playerID );

						local object, playerID, objectSlot, transform = FindObjectByAbilityID( unit.playerID, auraID )
						local redirectTargetROID = GETOBJECTROIDFROMPLAYERIDANDSLOT( playerID, objectSlot )
--print (""Redirect found: ""..ROIDTOSTRING(redirectTargetROID));
						--team.redirectTargetAuraID = nil;
						effect.redirectTarget = redirectTargetROID;
					end
				end
				if ( result.stateID == STATE_CLONE_ACTIVE ) then
					if ( result.stateID > 1 ) then 
						turn.cloned = true;
					end
				end
			elseif ( result.resultType == PetBattleEffect.PetSwap ) then
				turn.hasSwap = true;
			end
		end

		if (not effect.primaryTarget) then
			-- fallback
			effect.primaryTarget = effect.firstPrimaryTarget
		end

		table.insert( turn.primaryTargetList, effect.primaryTarget );
	end
end "
10346,PetBattle - 4. Playback Turn,"--------------------------------------------------------------------------------
-- Group and process all round effects
local debugOn = false
function PlaybackAllTurns(topLevelTurnGroups)

	if (debugOn == true) then
		print(""  "")
		print(""== Start Round Playback =="")
	end 
	
	-- process top level turns in order
	for index, turn in pairs(topLevelTurnGroups) do
		Dispatcher_HandleTurn( turn )
	end

	if (debugOn == true) then
		print(""== End Round Playback =="")
		print(""  "")
	end
end

--------------------------------------------------------------------------------
local maxStackDepth = 16          -- turn keys are not guaranteed unique above this stack depth
local maxTurnInstanceIDs = 100    -- effect keys are not guaranteed unique above this many actions a turn

local effectZeroCount = 0;
local turnInstanceZeroCount = 0;
 
--------------------------------------------------------------------------------
function GenerateUniqueGroupKeys(effect)	
	local stackDepth = effect.stackDepth or 0
	local turnInstanceID = effect.turnInstanceID or 0
	local effectID = effect.effectID or 0
	if (stackDepth > maxStackDepth) then
		print (""WARNING: stack depth exceeded "" .. maxStackDepth)
	end
	if (maxTurnInstanceIDs > maxTurnInstanceIDs) then
		print (""WARNING: max turn instanceIDs exceeded "" .. maxTurnInstanceIDs)
	end

	-- This is to handle non-data generated effects
	if ( turnInstanceID == 0 ) then 
		turnInstanceZeroCount = turnInstanceZeroCount + 1;
		turnInstanceID = turnInstanceZeroCount * -1;
	end
	
	if ( effectID == 0 ) then 
		effectZeroCount = effectZeroCount + 1;
		effectID = effectZeroCount * -1;
	end
	
	local turnKey = turnInstanceID*maxStackDepth + stackDepth
	local effectKey = effectID*maxTurnInstanceIDs*maxStackDepth + turnKey
	return turnKey, effectKey
end

"
10349,Play Spell Effect,"
-- Remapping his function to be more genericl
function PerformSpellVisual(casterCastingPet, abilityVisualID, targetPet)
	PerformSpellVisualManyTargets(casterCastingPet, abilityVisualID, {targetPet})
end

function PerformSpellVisualManyTargets(casterCastingPet, abilityVisualID, targetList, waitForMissiles)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
--print(""Cast Time: ""..abilityVisual.castTime);
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellVisual( preCastInstance)

	-- loop through all the targets
	local targetActors = {};
	for k, v in pairs(targetList) do
		table.insert(targetActors, v.actor);
	end

	local castInstanceID = 0
	if ( #targetActors > 1 or casterCastingPet.actor ~= targetActors[1] ) then
--print(""Missile Travel Time: ""..abilityVisual.impactTime);
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisualAtTargets(
			spellVisualID,
			abilityVisual.impactTime,
			true,
			targetActors)
	else
		-- self targeted
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisual(spellVisualID)
	end

	-- wait for impact
	local waitMissiles = ( waitForMissiles == nil or waitForMissiles == true );
	local missilesExist = casterCastingPet.actor:HasPendingMissiles(castInstanceID)

	if (waitMissiles == true and missilesExist ) then
		casterCastingPet.actor:WaitMissilesImpacted(castInstanceID)
	else
--	print(""Impact Time: ""..abilityVisual.impactTime);
		scene:WaitTimer(abilityVisual.impactTime)
	end

	return casterCastingPet, spellVisualID

end

function PerformSpellVisualManyPoints(casterCastingPet, abilityVisualID, pointList, waitForMissiles)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID == 0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellVisual( preCastInstance)

	local castInstanceID = 0
	if ( #pointList >= 1 ) then
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisualAtPoints(
			spellVisualID,
			abilityVisual.impactTime,
			true,
			pointList)
	else
		-- self targeted
		castInstanceID = casterCastingPet.actor:PlaySpellCastVisual(spellVisualID)
	end

	-- wait for impact
	local waitMissiles = ( waitForMissiles == nil or waitForMissiles == true );
	local missilesExist = casterCastingPet.actor:HasPendingMissiles(castInstanceID)

	if (waitMissiles == true and missilesExist ) then
		casterCastingPet.actor:WaitMissilesImpacted(castInstanceID)
	else
		scene:WaitTimer(abilityVisual.impactTime)
	end

	return casterCastingPet, spellVisualID

end

function PerformSpellChannelVisualManyTargets(casterCastingPet, abilityVisualID, targetList)
	--
	-- Actually cast
	--	

	local abilityVisual = petAbilityVisuals[abilityVisualID]
	if not abilityVisual then
		return casterCastingPet
	end
	local spellVisualID = abilityVisual.spellVisualID

	if (not abilityVisualID) or (abilityVisualID "
10350,[1] Play Spell Effect,"== 0) then
		print(""WARNING: no abilityVisual for PerformSpellVisual"")
	elseif (not spellVisualID) then
		print(""WARNING: no spellVisual found for BattlePetVisual ID="" .. abilityVisualID)
	end

	local preCastInstance = casterCastingPet.actor:PlaySpellPreCastVisual(spellVisualID)
	scene:WaitTimer(abilityVisual.castTime)
	casterCastingPet.actor:ClearSpellVisual( preCastInstance)

	-- loop through all the targets
	local targetActors = {casterCastingPet.actor};
	for k, v in pairs(targetList) do
		table.insert(targetActors, v.actor);
	end

	local instanceID;

	if ( #targetActors > 1 or casterCastingPet.actor ~= targetActors[1] ) then
		instanceID = casterCastingPet.actor:PlaySpellChannelVisualAtTargets(
			spellVisualID,
			targetActors)
	else
		-- self targeted
		instanceID = casterCastingPet.actor:PlaySpellChannelVisualAtTargets(spellVisualID, {})
	end

	return instanceID

end
"
10358,PreTurn - Selected - Pet Swap,"--------------------------------------------------------------------------------
-- MOVE (pet swap) SELECTED
function EventMovePetSwapSelected(petSlot)
	-- print(""Move Selected: Pet Swap Slot: "" .. petSlot)

end"
10359,PreTurn - Selected - Trap,"--------------------------------------------------------------------------------
-- MOVE (trap) SELECTED
function EventMoveTrapSelected()
	-- print(""Move Selected: Trap"")
end

"
10360,Battle Cameras,"
--------------------------------------------------------------------------------
-- camera
battleCameraIDs =
{
	intro = 336;
	idle = 335;
}

local cameraBunny = nil
function StartCameraBunny(transitionTime)
	if ( not isObserved ) or ( not useFreelookCamera ) then
		return
	end

	local player = teams[observingPlayerIndex]

	local cameraBunnyCreate = ActorCreateData:Default()
	cameraBunnyCreate.name = ""arenaCameraBunny""
	cameraBunnyCreate.modelFileID = padModel
	cameraBunnyCreate.transform.position = player.playerDisplay:GetPosition()
	cameraBunnyCreate.transform.facing = player.teamFacing
	cameraBunnyCreate.interactible = false

	cameraBunny = scene:SpawnActor(cameraBunnyCreate)
	cameraBunny:SetFacingToAbs(BuildVector(player.teamFacing, playerRadius, 0.0))

	if (PetBattleScene.SetPetBattleGameCameraTarget) then
		battleScene:SetPetBattleGameCameraTarget(cameraBunny, freelookZoomMin, freelookZoomMax)
	else
		scene:SetGameCameraTarget(cameraBunny, freelookZoomMin, freelookZoomMax)
	end
	
	cameraBunny:MoveToAbs(Vector:New(), transitionTime)
end

function StopCameraBunny(transitionTime)
	if ( not cameraBunny ) or ( not isObserved ) or ( not useFreelookCamera ) then
		return
	end

	-- return to the player
	local player = teams[observingPlayerIndex]

	if (PetBattleScene.ResetPetBattleGameCameraZoom) then
		battleScene:ResetPetBattleGameCameraZoom()
	else
		scene:ResetGameCameraZoom()
	end

	cameraBunny:MoveToAbs(player.playerDisplay:GetPosition(), transitionTime)
	scene:WaitTimer(transitionTime)
	scene:SetGameCameraTarget(nil, 0.0, 0.0)
end

function SetCamera(camera)
	if ( not isObserved or availableCamTransition == 0 ) then
		return
	end

	local observedTeam = teams[observingPlayerIndex]
	local otherTeam = teams[3 - observingPlayerIndex]
	local observedPadActor = observedTeam.pad.actor
	if (not observedPadActor) then
		observedPadActor = observedTeam.pad
	end

	if ( camera == 1 ) then 
		scene:SetCamera(battleCameraIDs.intro, 1.75, observedPadActor, arenaRing)
	elseif ( camera == 2 ) then 
		scene:SetCamera(battleCameraIDs.idle, 1.0, observedPadActor, arenaRing)
	elseif ( camera == 3 ) then 
		scene:SetCamera(battleCameraIDs.idle, 0.0, observedPadActor, arenaRing)
	elseif ( camera == 4 ) then
		scene:SetCamera(0, 0.75, nil, nil)
	end
end
"
10364,Arena,"
--------------------------------------------------------------------------------
-- Spawn Client Side Arena Visuals
local arenaCreateData = ActorCreateData:Default()
arenaCreateData.name = ""arenaRing""
arenaCreateData.modelFileID = arenaRingModel
arenaCreateData.scale = arenaRingScale
arenaCreateData.interactible = false
arenaRing = scene:SpawnActor(arenaCreateData)
arenaRing:Fade(0, 0)
arenaRing:PlayLoopingFullBodyAnim(Animations.Hold)

scene:WaitTimer(0.25)
--arenaRing:Fade(arenaRingAlpha, arenaFadeTime)
arenaRing:Fade(0, 0)

local debugScale = false

if ( debugScale ) then
	local scaleCreateData = ActorCreateData:Default()
	scaleCreateData.name = ""scaleAxis""
	scaleCreateData.modelFileID = fid(397940)
	scaleCreateData.scale = 2.0
	scaleCreateData.interactible = false
	axis = scene:SpawnActor(scaleCreateData)
end"
10365,Placeholder Players,"
--------------------------------------------------------------------------------
-- Placeholder opponents for cross-realm etc battles
--  - script runs in parallel and pings for a player to become valid

local placeHolderCreatureIDs =
{
	32695;
	32697;
	32700;
	32702;
	32704;
	32706;
	32708;
	32709;
	32710;
	32711;
	32712;
	32713;
	32714;
	32715;
	32716;
	32717;
	32718;
	32719;
	32720;
	32721;
	66865;
	66866;
	66871;
	66872;
}

local needPlaceHolder = true
--if not (PetBattleScene.GetActivePlayerDisplay) then
--	needPlaceHolder = false
--end

local placeHolderPingTime = 2.5
local placeHolderActors = { }

while (needPlaceHolder) do
--	needPlaceHolder = false
	for playerID, player in pairs(teams or { }) do
		if (playerID ~= PetBattlePlayerID.Weather) and (player.isNPC ~= true) then
			player.playerDisplay = battleScene:GetActivePlayerDisplay(playerID)
			if (not player.playerDisplay) then
				-- still need a placeholder
				--needPlaceHolder = true

				-- create it if we haven't already
				local placeHolderActor = placeHolderActors[playerID]
				if (not placeHolderActor) then
					local createData = ActorCreateData:Default()
					createData.creatureID = placeHolderCreatureIDs[math.random(#placeHolderCreatureIDs)]
					createData.name = ""placeHolder"" .. playerID
					createData.interactible = false
					createData.floatingTooltip = false

					local placeHolderFacing = player.teamFacing
--print(""Placeholder P"" .. playerID)

					local pos = BuildVector(placeHolderFacing, -playerRadius, 0.0)
					local transform = Transform:New(pos, placeHolderFacing)
					createData.transform = transform

					placeHolderActor = scene:SpawnActor(createData)
					placeHolderActors[playerID] = placeHolderActor
				end

				-- keep using the placeholder
				player.playerDisplay = placeHolderActor
			else
				-- done with this placeholder, despawn it
				local placeHolderActor = placeHolderActors[playerID]
				if (placeHolderActor) then
					placeHolderActor:Despawn()
				end

				placeHolderActors[playerID] = nil
			end
		end
	end
	scene:WaitTimer(placeHolderPingTime)
end

placeHolderActors = nil
"
10366,PetBattle - 0. Init and Main Loop,"
--------------------------------------------------------------------------------
-- battle constants
isObserved = false
observingPlayerIndex = 0
availableCamTransition = 0

--print(""BEGINNING PetBattleInit and Main Loop"")

if battleScene then
	initialBattleState = battleScene:GetBattleState()
	observingPlayerIndex = battleScene:GetUIObservingPlayer()
	if (observingPlayerIndex > 0) then
		isObserved = true
		availableCamTransition = battleScene:GetUICameraTransition()
	end
end

InitStaticData(initialBattleState)

--------------------------------------------------------------------------------
-- build ability and abilityVisual map
petAbilities = { }
for index,ability in pairs(initialBattleState.abilityDescs) do
	petAbilities[ability.ID] = ability
end

petAbilityVisuals = { }
for index,abilityVisual in pairs(initialBattleState.abilityVisualDescs) do
	local visualID = abilityVisual.ID
	petAbilityVisuals[visualID] = abilityVisual

	-- add any custom script function
	LoadCustomVisualScript(abilityVisual)
end

--------------------------------------------------------------------------------
-- spawn teams
initialBattleState.players[PetBattlePlayerID.Weather].teamFacing = 0
initialBattleState.players[PetBattlePlayerID.Player1].teamFacing = 0
initialBattleState.players[PetBattlePlayerID.Player2].teamFacing = 180

teams = { }
teams[PetBattlePlayerID.Weather] = initialBattleState.players[PetBattlePlayerID.Weather]
teams[PetBattlePlayerID.Player1] = initialBattleState.players[PetBattlePlayerID.Player1]
teams[PetBattlePlayerID.Player2] = initialBattleState.players[PetBattlePlayerID.Player2]

if (teams[1]) then
	teams[1].playerDisplay = battleScene:GetActivePlayerDisplay(1)
end
if (teams[2]) then
	teams[2].playerDisplay = battleScene:GetActivePlayerDisplay(2)
end

InitTeam(teams[PetBattlePlayerID.Weather])
--print(""initTeam 1"")
InitTeam(teams[PetBattlePlayerID.Player1])
--print(""initTeam 2"")
InitTeam(teams[PetBattlePlayerID.Player2])

InitAurasAndStates ( teams[PetBattlePlayerID.Weather] )
InitAurasAndStates ( teams[PetBattlePlayerID.Player1] )
InitAurasAndStates ( teams[PetBattlePlayerID.Player2] )

scene:SetCameraInterruptedByFreelook(true)

-- wait for teams to load
if (initialBattleState.battleState == PetBattleState.WaitingPreBattle) then
	BattleIntro()
else
	if isObserved then
		PlayBattleMusic()
		if (useFreelookCamera) then
			StartCameraBunny(0)
		else
			SetCamera(3)
		end
	end
	WaitAllPetsLoaded()
	FadeInAllPets(0)
end

-- Pet Battle loop
local inBattle = true
local winnerID

while (inBattle == true) do
	--print(""start of main loop"")
	local event = nil

	-- poll for battle events
	local waitForEvents = function()
		return battleScene:HasPendingEffects()
	end
	scene:WaitCondition(waitForEvents)

	event = battleScene:GetPendingEffect()

	inBattle, winnerID = ProcessEvent(event)
end

--print(""exited main loop"")
VictoryCeremonyCleanUp(winnerID)

if isObserved then
	if (useFreelookCamera) then
		StopCameraBunny(0.25)
	else
		SetCamera(4)
		scene:WaitTimer(0.75)
	end
end

battleScene:SignalBattleComplete()
"
10367,[2] Init Player Team,"pet.trap:PlayLoopingAnimKit(petBattleAnimKits.Closed);
	end

	-- Initially invisible?
	petActor:SetInteractible(false);
	petActor:SetFacingTurnRate(DEFAULT_TURN_RATE);
	if (Actor.SetHoverHeightSpeed) then
		petActor:SetHoverHeightSpeed(DEFAULT_HOVER_HEIGHT_SPEED);
	end
	--petActor:SetHidden(true);
	--petActor:Fade(0, 0); 
	pet.standAnimKit = pet.actor:PlayAnimKit(petBattleAnimKits.Stand, false, Animations.None)

	return pet;
end

function InitAuras(playerID, slot, auraList)
	-- apply initial auras
	for auraIndex, auraData in pairs(auraList or { }) do	
--print(""Aura initialized "",playerID,"":"",slot,"" InstanceID: "",auraData.instanceID,"" AuraID: "",auraData.abilityID );		
		local petROID = GETROIDFROMPLAYERIDANDSLOT( playerID, slot )
		local aura = CreateAura( petROID, auraData.instanceID, auraData.turnsRemaining, auraData.abilityID )
	end
end

function InitStates(playerID, slot, states)
	-- add visual rendering support in the future
	local petROID = GETROIDFROMPLAYERIDANDSLOT( playerID, slot )
	local pet = ROIDTOPET( petROID );
	local team = ROIDTOPLAYER( petROID );

	pet.states = pet.states or {};

	for index, stateData in pairs ( states ) do

		if ( stateData.ID == STATE_WATER_BUBBLED and stateData.value > 0 ) then 
			pet.bubbleStateVisual = pet.actor:PlaySpellStateVisual( PET_BATTLES_WATER_BUBBLE );
		end
		if ( stateData.ID == STATE_BIGGLESWORTH and stateData.value > 0 ) then 
			pet.BigglesworthStateVisual = pet.actor:PlaySpellStateVisual( PET_BATTLES_BIGGLESWORTH );
		end
		if ( stateData.ID == STATE_FETISH_RANDOM_COLOR and stateData.value > 0 ) then 


			pet.fetishBaseState = pet.actor:PlaySpellStateVisual( FETISH_BASE_STATE );

			local i = math.random(1, #FETISH_STATES );
		
			pet.fetishRandomState = pet.actor:PlaySpellStateVisual( FETISH_STATES[i] );
		end

		-- Initialize the state table
		pet.states[stateData.ID] = stateData.value;
	end
end"
10387,Test - Darren's Arbitrary Rotation,"
--local creatureID1 = 67761
--local creatureID2 = 68025
local creatureID2 = 67761
local creatureID1 = 68025

local createData = ActorCreateData:Default()
createData.groundSnap = false
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(5, 0, 5), 180)
createData.creatureID = creatureID1

local actor = scene:SpawnActor(createData)

scene:WaitTimer(2.5)

actor:HoldYawPitchRoll(15, 15, 15, 20, 5, 5)

scene:WaitTimer(60)
"
10388,[1] Global Functions - Actor Movement,"holdYawPitchRollMoveData.points[5].pos = transform.position
	holdYawPitchRollMoveData.points[5].yaw = transform.yaw
	holdYawPitchRollMoveData.points[5].pitch = transform.pitch
	holdYawPitchRollMoveData.points[5].roll = transform.roll

	if (blendInTime + blendOutTime > holdTime) then
		holdYawPitchRollMoveData.points[1].time = 0
		holdYawPitchRollMoveData.points[2].time = 0
		holdYawPitchRollMoveData.points[3].time = holdTime
		holdYawPitchRollMoveData.points[4].time = holdTime
		holdYawPitchRollMoveData.points[5].time = holdTime
	else
		holdYawPitchRollMoveData.points[1].time = 0.5*blendInTime
		holdYawPitchRollMoveData.points[2].time = blendInTime
		holdYawPitchRollMoveData.points[3].time = holdTime - blendOutTime
		holdYawPitchRollMoveData.points[4].time = holdTime - 0.5*blendOutTime
		holdYawPitchRollMoveData.points[5].time = holdTime
	end

	self:Move(holdYawPitchRollMoveData)
end
"
10389,Test - Darren's Remote Pet Battle Placeholder,"
print(""Is this a Pet Battle I see before me?"")

local creatureID1 = 68025

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(0, 0, 0), 180)
createData.creatureID = creatureID1

local actor = scene:SpawnActor(createData)

while true do
	scene:WaitTimer(60)
end
"
10391,Quest - 5.3 Legendary - Yu'lon Scene - Master - JSB,"
-- scene:SetFadeRegion(1, true) -- (radius, fadeActivePlayer)


-- scene:SetCamera(513,0,nil,nil) -- (camera, transition time, primary target, secondary target)

scene:SetFadeRegion(1000, true) -- (radius, fadeActivePlayer)
scene:SetCamera(516,0,nil,nil) -- (camera, transition time, primary target, secondary target)


scene:ApplyScreenEffect(951)
-- Wait( 5 )

-- WaitForTrigger( ""smoothPhaseComplete"" )


Wait( 1 )
SendTrigger( ""actorsMove"" )

scene:ClearScreenEffect(951) 

Wait( 2 )

SetCameraFollowPath( 368, 2, 5715, 5688, 10 ) -- (camera, transition time, spline, target spline, duration)

Wait( 5 )

SendTrigger( ""openDoor"" )
Wait( 3 )

SetCameraFollowPath( 368, 5, 5701, 5702, 8 ) -- (camera, transition time, spline, target spline, duration)
Wait( 7 )


SetCameraFollowPath( 368, 5, 5703, 5704, 10 ) -- (camera, transition time, spline, target spline, duration)
Wait( 9 )

scene:SetCamera(0,4,nil,nil) -- sets camera back to game-cam

Wait( 4 )

scene:EndScene()"
10393,Lorewalker Cho - 5.3: zto - S1: Loyalty - Init   ,"-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is
SendTrigger( ""smoothPhaseComplete"" )

-- Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, true )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, true )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, true )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, true )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, true )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, true )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, true )  -- Downstage Center bunny

--Sounds
gong = 12827

--Actors
varianCreatureID = 68921
moiraCreatureID = 70279
muradinCreatureID = 42928
falstadCreatureID = 42131
trollCreatureID = 70473
ztrollCreatureID = 70543
bannerCreatureID = 70789
scoutCreatureID = 66922
scout2CreatureID = 66919

--Models
throneModelID = ""WORLD\\KHAZMODAN\\IRONFORGE\\PASSIVEDOODADS\\THRONE\\DwarvenThrone01.M2""
snowEffectID = ""SPELLS\\ChristmasSnowRain.M2""
darkIronModelID = ""WORLD\\BLACKWINGV2\\PASSIVEDOODADS\\BlackwingV2_DarkIronDwarfStatue_01.M2""
bronzebeardModelID = ""WORLD\\KHAZMODAN\\IRONFORGE\\PASSIVEDOODADS\\STATUES\\IronforgeStatue_01.m2""
wildhammerModelID = ""WORLD\\GENERIC\\HUMAN\\PASSIVE DOODADS\\STATUES\\StatueKurdran.m2""
fogModelID = ""world\\environment\\doodad\\generaldoodads\\steamclouds\\generic_steam_cloud_deepholm.m2""


--Spawn Actors
falstad = SpawnActor( falstadCreatureID, 1448.59, 361.425, 550.221, 131.879, 1, true )
muradin = SpawnActor( muradinCreatureID, 1455.69, 368.003, 550.222, 131.879, 1, true )
moira = SpawnActor( moiraCreatureID, 1462.12, 373.79, 550.222, 131.879, 1, true )
varian = SpawnActor( varianCreatureID, 1460.5, 362.281, 550.221, 131.395, 1, true )

scout1 = SpawnActor( scoutCreatureID, 1452.36, 374.548, 550.221, 281.58, 1, true )
scout2 = SpawnActor( scout2CreatureID, 1450.13, 371.167, 550.221, 0.103983, 1, true )
troll = SpawnActor( ztrollCreatureID, 1455.68, 368.208, 554.169, 129.924, 1, false )
trolls = SpawnActorsAtPoints( trollCreatureID, 5790, false )
trollBanner1 = SpawnActor( bannerCreatureID, 1455.45, 362.879, 554.169, 122.049, .5, false )
trollBanner2 = SpawnActor( bannerCreatureID, 1462.31, 369.756, 554.169, 139.824, .5, false )
fog1 = SpawnModelActor( fogModelID, 1453.18, 362.639, 554.169, 122.049, 1, false )
fog2 = SpawnModelActor( fogModelID, 1459.38, 369.786, 554.169, 139.824, 1, false )

FadeOut( falstad, 0 )
FadeOut( muradin, 0 )
FadeOut( moira, 0 )
FadeOut( varian, 0 )
FadeOut( scout1, 0 )
FadeOut( scout2, 0 )
FadeOut( troll, 0 )
FadeOut( trollBanner1, 0 )
FadeOut( trollBanner2, 0 )
FadeOut( fog1, 0 )
FadeOut( fog2, 0 )

for i=1, #trolls do
	trolls[i]:Fade( 0, 0 )
end

--SpawnModels
throneLeft = SpawnModelActor( throneModelID, 1451.33, 358.142, 550.222, 221.653, 1, true )
throneCenter = SpawnModelActor( throneModelID, 1458.65, 364.706, 550.222, 221.653, 1, true )
throneRight = SpawnModelActor( throneModelID, 1465.12, 370.685, 550.222, 221.653, 1, true )
FadeOut( throneLeft, 0 )
FadeOut( throneCenter, 0 )
FadeOut( throneRight, 0 )

darkiron = SpawnModelActor( darkIronModelID, 1462.87, 373.425, 550.221, 191.51, .4, true )
ironforge = SpawnModelActor( bronzebeardModelID, 1457.83, 364.023, 550.222, 129.635, .5, true )
wildhammer = SpawnModelActor( wildhammerModelID, 1448.94, 360.499, 550.221, 79.6854, .75, true )
FadeOut( darkiron, 0 )
FadeOut( ironforge, 0 )
FadeOut( wildhammer, 0 )

snow = "
10394,Lorewalker Cho - 5.3: zto - S1: Loyalty - Lorewalker Cho - MASTER   ,"WaitForTrigger( ""smoothPhaseComplete"" )
--OnScene start

--SendTrigger(""Music - Started"")
--Wait(2)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
lorewalker:BroadcastText(BroadcastType.Say, 73220) -- S1: Loyalty 001 [VO] - 11.656
-- ""Once upon a time - moments ago, in fact - a great King sought the help from a trio of powerful dwarves: The Council of Three Hammers.""
musichandle = lorewalker:PlayMusic(37606) --Music Start 
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
SendTrigger( ""Line 1"" )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(2)
Wait(3)
SendTrigger( ""Line 1 - Dwarves"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 73221) -- S1: Loyalty 002 [VO] - 5.668
-- ""The King's scouts had discovered that Zandalari trolls threatened the dwarven capital.""
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 2"" )
--lorewalker:FollowPathAtSpeed( 5450, 2, false )
lorewalker:PlayOneShotAnimKit( 3229 )
Wait(4.5)
Wait(1.5)
lorewalker:StopAnimKit( 3229 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

lorewalker:BroadcastText(BroadcastType.Say, 73222) --  S1: Loyalty 003 [VO] - 8.811
-- ""Surely, the king thought, if he helped them with their troll problem, they would give him more troops for his campaign against the Horde.""
SendTrigger( ""Line 3"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(4.5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
--lorewalker:FollowPathAtSpeed( 5450, 2, false )
Wait(4.5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 73223) -- S1: Loyalty 004 [VO] - 6.328
-- ""But what the King did not realize is that the dwarves did not trust one another!""
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 4"" )
lorewalker:FollowPathAtSpeed( 5760, 2, false )
lorewalker:PlayOneShotAnimKit( 3229 )
Wait(3)
lorewalker:StopAnimKit( 3229 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(1.08) --3.33
Wait(2.25)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 73224) -- S1: Loyalty 005 [VO] - 11.008
-- ""We cannot help you,"" said the Bronzebeard dwarf, ""For if we turn our back on the Dark Irons, they will defeat the Wildhammer and take over Ironforge!""
musichandle:Stop()
musichandle = lorewalker:PlayMusic(37607) --Music Start 
SendTrigger( ""Line 5"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3)
Wait(.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(4.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 73225) -- S1: Loyalty 006 [VO] - 11.371
-- ""We cannot help you,"" said the Wildhammer dwarf. ""For if we turn our back on the Dark Irons, they will defeat the Bronzebeard and take over Ironforge!""
SendTrigger( ""Line 6"" )
lorewalker:FollowPathAtSpeed( 5761, 2, false )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(4.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 73226) -- S1: Loyalty 007 [VO] - 7.338
-- The King was furious. ""If none of you help, then Ironforge will fall under siege!""
SendTrigger( ""Line 7"" )
lorewalker:ClearFacing()
lorewalker:FollowPathAtSpeed( 5620, 2, true )
--lorewalker:FollowPathAtSpeed( 5450, 2, false )
PlayOneShotSplitBodyAnim( lorewalker, "
10395,[1] Lorewalker Cho - 5.3: zto - S1: Loyalty - Lorewalker Cho - MASTER   ,"Animations.EmoteNo )
Wait(3.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(3.67)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 73227) -- S1: Loyalty 008 [VO] - 13.362
-- Only one dwarf offered to help the King. ""We will lend you our strength,"" said Moira, of the Dark Iron. ""We will trust our dwarven brothers, and we will show them what loyalty means!""
SendTrigger( ""Line 8"" )
--lorewalker:FollowPathAtSpeed( 5450, 2, false )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
Wait(4)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(5)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 73228) -- S1: Loyalty 009 [VO] - 9.611
-- And so Moira and the High King set out into the snow to save the city, leaving the others to think about their actions.
SendTrigger( ""Line 9"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
Wait(4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


lorewalker:BroadcastText(BroadcastType.Say, 73229) -- S1: Loyalty 010 [VO] - 2.461
-- What happens next? I must know!
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Line 10"" )
--lorewalker:FollowPathAtSpeed( 5450, 2, false )
Wait(3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Final
--lorewalker:FollowPathAtSpeed( 5620, 2, true )
lorewalker:WaitMovementComplete()
lorewalker:SetFacing(93.5645)
--lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
10396,Lorewalker Cho - 5.3: zto - Warchief - Init,"Race =
{
	Human				=  1;
	Orc					=  2;
	Dwarf				=  3;
	NightElf			=  4;
	Undead				=  5;
	Tauren				=  6;
	Gnome				=  7;
	Troll				=  8;
	BloodElf			=  10;
	Draenei				=  11;
	PandarenHorde		=  2402;
	PandarenAlliance	=  2401;
}

AllianceRace =
{
	Human				=  1;
	Dwarf				=  3;
	NightElf			=  4;
	Gnome				=  7;
	Draenei				=  11;
	PandarenAlliance	=  2401;
}

AllianceRaces = { 1, 3, 4, 7, 11, 2401 }

HordeRace =
{
	Orc					=  2;
	Undead				=  5;
	Tauren				=  6;
	Troll				=  8;
	BloodElf			=  10;
	PandarenHorde		=  2402;
}


function GetFakeFaction( actor )
	local actorRace = actor:GetRaceID( true )
	local actorFaction = 0
	for i=1, #AllianceRaces do
		if (actorRace == AllianceRaces[i]) then
			actorFaction = 1
		end
	end
	return actorFaction
end

-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is
SendTrigger( ""smoothPhaseComplete"" )

-- Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, true )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, true )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, true )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, true )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, true )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, true )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, true )  -- Downstage Center bunny

--Actors
varianCreatureID = 68921
moiraCreatureID = 70279
muradinCreatureID = 42928
falstadCreatureID = 42131

gryphonCreatureID = 50612
drillModelID = ""WORLD\\GENERIC\\PASSIVEDOODADS\\BREWFEST\\Beerfest_MoleMachine.M2""
steamTankModelID = ""WORLD\\KHAZMODAN\\IRONFORGE\\PASSIVEDOODADS\\STEAMTANK\\IronForgeSteamTank.M2""

wildhammerCreatureID = 51468
ironforgeCreatureID = 42783
darkironCreatureID = 38839

--Horde Actors
throneModelID = ""WORLD\\KALIMDOR\\ORGRIMMAR\\PASSIVEDOODADS\\THRONE\\Orc_GrommashThrone_01.M2""
garroshCreatureID = 64629
goblinCreatureID = 67281

--Spawn Main Actors
falstad = SpawnActor( falstadCreatureID, 1458.85, 370.645, 550.221, 130.174, 1, true )
muradin = SpawnActor( muradinCreatureID, 1452.88, 365.104, 550.221, 130.174, 1, true )
moira = SpawnActor( moiraCreatureID, 1454.2, 372.002, 550.222, 103.276, 1, true )
varian = SpawnActor( varianCreatureID, 1452.34, 371.533, 550.222, 131.176, 1, true )
player = SpawnActivePlayerCloneActor( 1451.75, 369.811, 550.222, 150.076, 1, true )
FadeOut( falstad, 0 )
FadeOut( muradin, 0 )
FadeOut( moira, 0 )
FadeOut( varian, 0 )
FadeOut( player, 0 )

throne = SpawnModelActor( throneModelID, 1459.97, 363.138, 550.221, 129.474, 1, true )
garrosh = SpawnActor( garroshCreatureID, 1457.2, 366.089, 551.221, 130.374, 1, false )
goblins = SpawnFadedActorsAtPoints( goblinCreatureID, 5714, true )
FadeOut( throne, 0 )
FadeOut( garrosh, 0 )


--Spawn Extra Actors
darkironDwarf = SpawnFadedActorsAtPoints( darkironCreatureID, 5705, true)
ironforgeDwarf = SpawnFadedActorsAtPoints( ironforgeCreatureID, 5706, true)
wildhammerDwarf = SpawnFadedActorsAtPoints( wildhammerCreatureID, 5707, true)
gryphonRider = SpawnActorsAtPoints( gryphonCreatureID, 5712, false)
gryphonRiderDwarves = SpawnActorsAtPoints( wildhammerCreatureID, 5712, false )

steamTank1 = SpawnModelActor( steamTankModelID, 1463.74, 366.951, 550.221, 108.774, .75, true )
steamTank2 = SpawnModelActor( steamTankModelID, 1456.25, 359.405, 550.221, 157.824, .75, true )
FadeOut( steamTank1, 0 )
FadeOut( steamTank2, 0 )
"
10397,Lorewalker Cho - 5.3: zto - Warchief - Lorewalker Cho - MASTER,"WaitForTrigger( ""smoothPhaseComplete"" )
--OnScene start

--Wait(2)

--Line 1 (length: 7.446)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
lorewalker:BroadcastText(BroadcastType.Say, 73230) -- S2: Dark Heart of Pandaria 001 [VO]
musichandle = lorewalker:PlayMusic(37608) --Music Start 
-- The High King, his champions, and the Dark Iron dwarves worked together to save Ironforge.
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 1"" )
Wait(4.3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(2.9)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 2 (length: 9.681 )
lorewalker:BroadcastText(BroadcastType.Say, 73231) -- S2: Dark Heart of Pandaria 002 [VO]
-- The other dwarven leaders were ashamed of their behavior, and vowed never again to allow fear or distrust to cloud their judgment.
SendTrigger( ""Line 2"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(4.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 3  (length: 7.248 )
lorewalker:BroadcastText(BroadcastType.Say, 73232) --  S2: Dark Heart of Pandaria 003 [VO]
-- And so it was a human king who helped to unite the dwarven clans so long divided.
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 3"" )
--lorewalker:FollowPathAtSpeed( 5450, 2, false )
Wait(4.3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(2.9)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 4  (length: 8.040 )
lorewalker:BroadcastText(BroadcastType.Say, 73233) -- S2: Dark Heart of Pandaria 004 [VO]
-- Free to trust one another, all three dwarven leaders pledged their full strength to the Alliance cause.
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Line 4"" )
--lorewalker:FollowPathAtSpeed( 5450, 2, false )
Wait(4.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteCheer )
Wait(2.5)
lorewalker:WaitBroadcastSoundComplete()
Wait(1.75)

--Line 5  (length: 10.115 )
lorewalker:BroadcastText(BroadcastType.Say, 73234) -- S2: Dark Heart of Pandaria 005 [VO]
-- Meanwhile, in the city of Orgrimmar, Warchief Garrosh Hellscream sent goblin dig teams all across the continent of Pandaria.
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 5"" )
lorewalker:FollowPathAtSpeed( 5713, 2, true )
Wait(4.3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
Wait(4.33)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 6  (length: 11.799 )
lorewalker:BroadcastText(BroadcastType.Say, 73235) -- S2: Dark Heart of Pandaria 006 [VO]
-- He promised gold and riches to any who could discover for him the hidden secrets of this land that fill Pandaria such a dark and powerful energy.
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 6"" )
lorewalker:PlayOneShotAnimKit( 3229 )
Wait(4.33)
lorewalker:StopAnimKit( 3229 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkExclamation )
Wait(3.67)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3.33)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line  7  (length: 8.109 )
lorewalker:BroadcastText(BroadcastType.Say, 73236) -- S2: Dark Heart of Pandaria 007 [VO]
-- To my surprise, his people have found something! Right here, in the sacred vale! What will happen now?
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 7"" )
Wait(3.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(4.33)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 8  (length: 3.750 )
lorewalker:BroadcastText(BroadcastType.Say, 73237) --  S2: "
10399,Lorewalker Cho - 5.3: zto - Durotar - Init ,"function FaceActor( actor, target )
	actor:ClearFacing()
	local targetPos = target:GetPosition()
	actor:SetFacingToAbs( targetPos )
end

-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is
SendTrigger( ""smoothPhaseComplete"" )

--[[Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, true )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, true )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, true )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, true )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, true )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, true )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, true )  -- Downstage Center bunny

--Sounds
gong = 12827

-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual]]--

"
10400,Lorewalker Cho - 5.3: zto - Durotar - Lorewalker Cho - MASTER ,"WaitForTrigger( ""smoothPhaseComplete"" )
--OnScene start

--musichandle = lorewalker:PlayMusic(36866) --Music Start 2:39
--SendTrigger(""Music - Started"")
Wait(1)

--Line 1  (length: 8.6 )
lorewalker:BroadcastText(BroadcastType.Say, 73238) --  S3: A - Durotar 001 [VO]
-- So! Even as the Alliance binds itself ever closer together, the Horde is ripping itself apart. 
SendTrigger( ""Line 1"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4.5)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
Wait(3.33)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 2  (length: 12.847 )
lorewalker:BroadcastText(BroadcastType.Say, 73239) -- S3: A - Durotar 002 [VO]
-- My friend, something is about to give. I wish I could experience the next chapter of the story, but alas, I am just the storyteller. 
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Line 2"" )
Wait(4.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4.3)
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait(2.9)
Wait(1.37)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--[[

--Line 3 (length: 7.392 )
lorewalker:BroadcastText(BroadcastType.Say, 73240) --  S3: A - Durotar 003 [VO]
-- You, brave hero – you are strong enough to leap into the center of events as they transpire. 
SendTrigger( ""Line 3"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
Wait(2.67)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4.3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 4  (length: 7.196 )
lorewalker:BroadcastText(BroadcastType.Say, 73241) -- S3: A - Durotar 004 [VO]
-- Go now! Go to Durotar! Make your mark as history unfurls around you!
SendTrigger( ""Line 4"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmotePoint )
Wait(2.67)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
Wait(4.3)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


--Final
--lorewalker:FollowPathAtSpeed( 5620, 2, true )
--lorewalker:WaitMovementComplete()
--lorewalker:SetFacing(93.5645)
--lorewalker:PlaySoundKit(gong, true)

--]]

lorewalker:SetFacing( 93.5645 )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
10403,Quest - 5.3 Legendary - Yu'lon Scene - Init - JSB,"
-- spawn Temple Door
local doorCreatureID = 70974
door = SpawnActor( doorCreatureID, 909.359, -2623.19, 185.211, 69.473, 1.0, true )


-- spawn clone
local cloneCreatureID = 61833
clone = SpawnActivePlayerCloneActor( 919.096, -2600.33, 182.65, 251.042, 1.0, false )

-- spawn wrathion
local wrathionCreatureID = 70921
wrathion = SmoothPhaseSpawnActor( wrathionCreatureID, 914.85, -2599.04, 182.736, 251.042, 1.0, false )

-- spawn yulon
local yulonCreatureID = 70989
yulon = SmoothPhaseSpawnActor( yulonCreatureID, 885.455, -2686.65, 192.151, 70.7523, 1, false )

-- spawn gong
local gongCreatureID = 71029
gong = SpawnActor( gongCreatureID, 905.04, -2675.77, 185.184, 113.533, 1, false )

SendTrigger( ""smoothPhaseComplete"" ) 
"
10405,Quest - 5.3 Legendary - Yu'lon Scene - Clone - JSB,"
WaitForTrigger( ""actorsMove"" )

RunToLocation( clone, 3, 918.174, -2602.83, 185.126, 254.192 )

RunToLocation( clone, 3, 913.135, -2614.91, 185.125, 253.967 )

WaitForTrigger( ""openDoor"" )
Wait( 3 )

RunToLocation( clone, 2.5, 906.959, -2635.27, 185.181, 256.476 )


RunToLocation( clone, 2.5, 906.538, -2636.78, 184.408, 255 )


RunToLocation( clone, 2.5, 902.401, -2650.27, 184.409, 246.95 )"
10406,Quest - 5.3 Legendary - Yu'lon Scene - Wrathion - JSB,"
WaitForTrigger( ""actorsMove"" )

RunToLocation( wrathion, 3, 914.111, -2601.33, 185.126, 251.717 )

RunToLocation( wrathion, 3, 911.344, -2614.17, 185.125, 257.117 )

WaitForTrigger( ""openDoor"" )
Wait( 3 )

wrathion:PlayOneShotAnimKit(1529)
wrathion:BroadcastTextStereo(BroadcastType.Say, 73931)


RunToLocation( wrathion, 2.5, 903.127, -2634.12, 185.182, 246.675 )


RunToLocation( wrathion, 2.5, 902.591, -2636.25, 184.408, 255.9 )

wrathion:PlayOneShotAnimKit(1529)
wrathion:BroadcastTextStereo(BroadcastType.Say, 73733)

RunToLocation( wrathion, 2.5, 899.05, -2648.8, 184.409, 253.7 )

-- Wait( 2 )

wrathion:BroadcastTextStereo(BroadcastType.Say, 73734)"
10407,Quest - 5.3 Legendary - Yu'lon Scene - Door- JSB,"
WaitForTrigger( ""openDoor"" )

door:PlaySoundKitStereo(37634, true)
door:PlayOneShotAnimKit(4007)
Wait( 0.25 )

local shakeOrigin01 = Vector:New(909.359, -2623.19, 185.211)
shakeX = scene:AddCameraEffect( 46, shakeOrigin01, nil, 1 )
shakeY = scene:AddCameraEffect( 47, shakeOrigin01, nil, 1 )
shakeZ = scene:AddCameraEffect( 48, shakeOrigin01, nil, 1 )
"
10408,Lorewalker Cho - 5.3: zto - S1: Loyalty - Varian ,"WaitForTrigger( ""Line 1"" )
Wait(1)
varian:Fade( .9, 2 )
light_cc:Fade( .75, 2 )
varian:FollowPathAtSpeed( 5762, 2 ) --Cross to Center Stage
varian:WaitMovementComplete()
Wait(4)
varian:FollowPathAtSpeed( 5759, 2 ) --Cross to Center Stage
--varian:FollowPathAtSpeed( 5763, 2 ) --Cross to Center Stage
--RunToLocation( varian, 1453.77, 372.978, 550.221, 131.436, 2, false )

WaitForTrigger( ""Line 2"" )
light_cc:Fade( 0, 2 )
light_dc:Fade( .75, 2 )
--varian:SetFacing( 226.76 )

WaitForTrigger( ""Line 3"" )
varian:WaitMovementComplete()
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalk )

WaitForTrigger( ""Line 4"" )
light_dc:Fade( 0, 2 )
varian:FollowPathAtSpeed( 5694, 2 ) --Cross to Muradin

WaitForTrigger( ""Line 6"" )
varian:FollowPathAtSpeed( 5700, 2 ) --Cross to Falstad
--varian:SetFacing( 221.426 ) --Cross to Falstad

WaitForTrigger( ""Line 7"" )
light_dc:Fade( 1, 2 )
PlayOneShotSplitBodyAnim( varian, Animations.EmoteTalkExclamation )
varian:FollowPathAtSpeed( 5695, 2 ) --Cross to Muradin
Wait(2)
PlayOneShotSplitBodyAnim( varian, Animations.EmoteRoar )


WaitForTrigger( ""Line 8"" )
Wait(2)
varian:SetFacing( 9.69996 )

WaitForTrigger( ""Moira - Bow"" )
PlayOneShotSplitBodyAnim( varian, Animations.EmoteSalute )

WaitForTrigger( ""Line 9"" )
Wait(2)
light_dc:Fade( 0, 2 )
varian:FollowPathAtSpeed( 5698, 2 )
Wait(4)
varian:Fade( 0, 5 )"
10409,Lorewalker Cho - 5.3: zto - S1: Loyalty - Muradin ,"WaitForTrigger( ""Line 1"" )
muradin:SetScale( .9 )
throneCenter:SetScale( .9 )
muradin:EquipWeapon( WeaponSlot.MainHand, 0 )
muradin:EquipWeapon( WeaponSlot.OffHand, 0 )

WaitForTrigger( ""Line 4"" )
muradin:Fade( .5, 2 )
throneCenter:Fade( .5, 2 )

WaitForTrigger( ""Line 5"" )
muradin:SetScale( 1 )
throneCenter:SetScale( 1 )
muradin:Fade( 1, 2 )
throneCenter:Fade( 1, 2 )
light_uc:Fade( 1, 2 )
muradin:SetFacing( 192.861 )
Wait(1)
PlayOneShotSplitBodyAnim( muradin, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( muradin, Animations.EmoteTalk )
Wait(2)
muradin:SetFacing( 41.4264 )
Wait(1)
PlayOneShotSplitBodyAnim( muradin, Animations.EmotePoint )
Wait(3)
muradin:SetFacing( 132.776 )

WaitForTrigger( ""Line 6"" )
light_uc:Fade( 0, 2 )
muradin:Fade( .5, 2 )
throneCenter:Fade( .5, 2 )
muradin:SetScale( .9 )
throneCenter:SetScale( .9 )

WaitForTrigger( ""Line 9"" )
muradin:Fade( 0, 5 )
throneCenter:Fade( 0, 5 )"
10410,Lorewalker Cho - 5.3: zto - S1: Loyalty - Falstad ,"WaitForTrigger( ""Line 1"" )
falstad:SetScale( .9 )
throneLeft:SetScale( .9 )
falstad:EquipWeapon( WeaponSlot.MainHand, 0 )
falstad:EquipWeapon( WeaponSlot.OffHand, 0 )

WaitForTrigger( ""Line 4"" )
falstad:Fade( .5, 2 )
throneLeft:Fade( .5, 2 )

WaitForTrigger( ""Line 6"" )
falstad:SetScale( 1 )
throneLeft:SetScale( 1 )
falstad:Fade( 1, 2 )
throneLeft:Fade( 1, 2 )
light_ul:Fade( 1, 2 )
falstad:SetFacing( 87.7856 )
Wait(1)
PlayOneShotSplitBodyAnim( falstad, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( falstad, Animations.EmoteTalk )
Wait(2)
falstad:SetFacing( 41.4264 )
Wait(1)
PlayOneShotSplitBodyAnim( falstad, Animations.EmotePoint )
Wait(3)
falstad:SetFacing( 132.776 )

WaitForTrigger( ""Line 7"" )
light_ul:Fade( 0, 2 )
falstad:Fade( .5, 2 )
throneLeft:Fade( .5, 2 )
falstad:SetScale( .9 )
throneLeft:SetScale( .9 )

WaitForTrigger( ""Line 9"" )
falstad:Fade( 0, 5 )
throneLeft:Fade( 0, 5 )"
10411,Lorewalker Cho - 5.3: zto - S1: Loyalty - Moira ,"WaitForTrigger( ""Line 1"" )
moira:SetScale( .9 )
throneRight:SetScale( .9 )
moira:EquipWeapon( WeaponSlot.MainHand, 0 )
moira:EquipWeapon( WeaponSlot.OffHand, 0 )

WaitForTrigger( ""Line 4"" )
moira:Fade( .5, 2 )
throneRight:Fade( .5, 2 )

WaitForTrigger( ""Line 8"" )
moira:SetScale( 1 )
throneRight:SetScale( 1 )
moira:Fade( 1, 2 )
throneRight:Fade( 1, 2 )
light_ur:Fade( 1, 2 )
Wait(2)
PlayOneShotSplitBodyAnim( moira, Animations.EmoteTalk )
moira:FollowPathAtSpeed( 5696, 2 )
moira:WaitMovementComplete()
PlayOneShotSplitBodyAnim( moira, Animations.EmoteBow )
SendTrigger( ""Moira - Bow"" )

WaitForTrigger( ""Line 9"" )
light_ur:Fade( 0, 2 )
throneRight:Fade( 0, 2 )
Wait(2)
moira:FollowPathAtSpeed( 5697, 2 )
Wait(4)
moira:Fade( 0, 5)"
10412,Lorewalker Cho - 5.3: zto - S1: Loyalty - Thrones ,"WaitForTrigger( ""Line 1 - Dwarves"" )
darkiron:SetFacingToAbs( Vector:New( 1443.83, 369.548, 550.222 ) )
ironforge:SetFacingToAbs( Vector:New( 1449.71, 374.675, 550.222 ) )
wildhammer:SetFacingToAbs( Vector:New( 1448.77, 370.805, 550.222 ) )
darkiron:Fade( .8, 2 )
ironforge:Fade( .8, 2 )
wildhammer:Fade( .8, 2 )

WaitForTrigger( ""Line 4"" )
darkiron:FollowPathAtSpeed( 5765, 2 )
darkiron:SetScale( .3 )

ironforge:FollowPathAtSpeed( 5766, 2 )
ironforge:SetScale( .3 )

wildhammer:FollowPathAtSpeed( 5767, 2 )
wildhammer:SetScale( .55 )


WaitForTrigger( ""Line 9"" )
darkiron:Fade( 0, 2 )
ironforge:Fade( 0, 2 )
wildhammer:Fade( 0, 2 )

for i=1, #snow do
	snow[i]:Fade( 1, 2 )
end

WaitForTrigger( ""Line 10"" )
for i=1, #snow do
	snow[i]:Fade( 0, 2 )
end
"
10413,Lorewalker Cho - 5.3: zto - Warchief - Varian,"WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( varian, Animations.Ready1H )
Wait(1)
varian:Fade( .9, 2 )
light_dc:Fade( 1, 2 )

WaitForTrigger( ""Line 4"" )
light_ur:Fade( .75, 2 )
light_uc:Fade( .75, 2 )
light_ul:Fade( .75, 2 )
light_cc:Fade( .75, 2 )
light_cr:Fade( .75, 2 )
light_cl:Fade( .75, 2 )

WaitForTrigger( ""Line 5"" )
varian:Fade( 0, 2 )
light_dc:Fade( 0, 2 )
light_ur:Fade( 0, 2 )
light_uc:Fade( 0, 2 )
light_ul:Fade( 0, 2 )
light_cc:Fade( 0, 2 )
light_cr:Fade( 0, 2 )
light_cl:Fade( 0, 2 )"
10414,Lorewalker Cho - 5.3: zto - Warchief - PlayerClone,"WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( player, Animations.Ready1H )
Wait(1)
--If player is alliance
local playerFaction = GetFakeFaction( player )
if ( playerFaction == 1 ) then
	player:Fade( .9, 2 )
end

WaitForTrigger( ""Line 5"" )
player:Fade( 0, 2 )
"
10415,Lorewalker Cho - 5.3: zto - Warchief - Moira,"WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( moira, Animations.Ready1H )
Wait(1)
moira:Fade( .9, 2 )


WaitForTrigger( ""Line 5"" )
moira:Fade( 0, 2 )
"
10416,Lorewalker Cho - 5.3: zto - Warchief - Muradin,"WaitForTrigger( ""Line 2"" )
--PlayLoopingSplitBodyAnim( muradin, Animations.Ready1H )
Wait(1)
muradin:Fade( .9, 2 )
muradin:MoveToRel( Vector:New( 5, 0, 0 ), 5 )

WaitForTrigger( ""Line 5"" )
muradin:Fade( 0, 2 )
"
10417,Lorewalker Cho - 5.3: zto - Warchief - falstad,"WaitForTrigger( ""Line 2"" )
--PlayLoopingSplitBodyAnim( falstad, Animations.Ready1H )
Wait(1)
falstad:Fade( .9, 2 )
falstad:MoveToRel( Vector:New( 5, 0, 0 ), 5 )

WaitForTrigger( ""Line 5"" )
falstad:Fade( 0, 2 )
"
10418,Lorewalker Cho - 5.3: zto - Warchief - Tanks,"WaitForTrigger( ""Line 4"" )
Wait(2)
steamTank1:Fade( .9, 2 )
steamTank2:Fade( .9, 2 )
steamTank1:MoveToRel( Vector:New( 1, 0, 0 ), 5 )
steamTank2:MoveToRel( Vector:New( 1, 0, 0 ), 5 )

WaitForTrigger( ""Line 5"" )
steamTank1:Fade( 0, 2 )
steamTank2:Fade( 0, 2 )
"
10419,Lorewalker Cho - 5.3: zto - Warchief - Mole Machines,"WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( mole1, Animations.Closed )
PlayLoopingSplitBodyAnim( mole2, Animations.Closed )

WaitForTrigger( ""Line 4"" )
Wait(2)
mole1:Fade( .9, 2 )
mole2:Fade( .9, 2 )
PlayLoopingSplitBodyAnim( mole1, Animations.Stand )
PlayLoopingSplitBodyAnim( mole2, Animations.Stand )
PlayOneShotSplitBodyAnim( mole1, Animations.Spawn )
PlayOneShotSplitBodyAnim( mole2, Animations.Spawn )


WaitForTrigger( ""Line 5"" )
mole1:Fade( 0, 2 )
mole2:Fade( 0, 2 )
"
10420,Lorewalker Cho - 5.3: zto - Warchief - Dark Iron Soldiers,"WaitForTrigger( ""Line 4"" )

for i=1, #darkironDwarf do
	darkironDwarf[i]:Fade( .75, 2 )
	darkironDwarf[i]:MoveToRel( Vector:New( 2, 0, 0 ), 5 )
end


WaitForTrigger( ""Line 5"" )

for i=1, #darkironDwarf do
	darkironDwarf[i]:Fade( 0, 2 )
end"
10421,Lorewalker Cho - 5.3: zto - Warchief - Ironforge Soldiers,"WaitForTrigger( ""Line 4"" )

for i=1, #ironforgeDwarf do
	ironforgeDwarf[i]:Fade( .75, 2 )
	ironforgeDwarf[i]:MoveToRel( Vector:New( 2, 0, 0 ), 5 )
end


WaitForTrigger( ""Line 5"" )

for i=1, #ironforgeDwarf do
	ironforgeDwarf[i]:Fade( 0, 2 )
end"
10422,Lorewalker Cho - 5.3: zto - Warchief - Wildhammer Soldiers,"WaitForTrigger( ""Line 4"" )

for i=1, #wildhammerDwarf do
	wildhammerDwarf[i]:Fade( .75, 2 )
	wildhammerDwarf[i]:MoveToRel( Vector:New( 2, 0, 0 ), 5 )
end

WaitForTrigger( ""Line 5"" )

for i=1, #wildhammerDwarf do
	wildhammerDwarf[i]:Fade( 0, 2 )
end"
10423,Lorewalker Cho - 5.3: zto - Warchief - Gryphons,"WaitForTrigger( ""Line 1"" )
for i=1, #gryphonRiderDwarves do
	RideVehicleActor( gryphonRiderDwarves[i], gryphonRider[i] ) --Mount bat
	gryphonRiderDwarves[i]:Fade( .75, 2 )
end

local gryphonPaths = { 5708, 5709, 5710, 5711 }
for i=1, #gryphonRider do
	gryphonRider[i]:Fade( .75, 2 )
end

WaitForTrigger( ""Line 4"" )

for i=1, #gryphonRider do
	gryphonRider[i]:FollowPathAtSpeed( gryphonPaths[i], 19, true )
	Wait(1)
end

WaitForTrigger( ""Line 5"" )

for i=1, #gryphonRider do
	gryphonRider[i]:Fade( 0, 2 )
	gryphonRiderDwarves[i]:Fade( 0, 2 )
end"
10424,Lorewalker Cho - 5.3: zto - Warchief - Garrosh,"WaitForTrigger( ""Line 5"" )
Wait( 2 )

garrosh:Fade( .9, 2 )
throne:Fade( .9, 2 )
light_uc:Fade( 1, 2 )
PlayOneShotSplitBodyAnim( garrosh, Animations.EmoteLaugh )
Wait(3)
PlayOneShotSplitBodyAnim( garrosh, Animations.EmoteTalkNoSheathe )
Wait(2)
PlayOneShotSplitBodyAnim( garrosh, Animations.EmotePoint )
Wait(1)
SendTrigger( ""Garrosh - Point"" )

WaitForTrigger( ""Line 8"" )
garrosh:Fade( 0, 2 )
throne:Fade( 0, 2 )
light_uc:Fade( 0, 2 )
"
10425,[1] Lorewalker Cho - 5.3: zto - Warchief - Init,"
mole1 = SpawnModelActor( drillModelID, 1462.23, 377.486, 550.221, 172.9, .5, true )
mole2 = SpawnModelActor( drillModelID, 1445.31, 361.713, 550.221, 81.5482, .5, true )

FadeOut( mole1, 0 )
FadeOut( mole2, 0 )



--Sounds
gong = 12827

-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual

"
10426,Lorewalker Cho - 5.3: zto - Warchief - Goblins,"function goblinWaiter( actor )
	local waiter = math.random( .1, 1.9 )
	Wait( waiter )
	StopLoopingSplitBodyAnim( actor )
	actor:MoveToRel( Vector:New( -5, 0, 0 ), 1 )
	Wait(1)
	actor:Fade( 0, 2 )
end

WaitForTrigger( ""Line 5"" )
Wait( 4 )
for i=1, #goblins do
	PlayLoopingSplitBodyAnim( goblins[i], Animations.KneelLoop )
	goblins[i]:Fade( .75, 2 )
end

WaitForTrigger( ""Garrosh - Point"" )
for i=1, #goblins do
	scene:AddCoroutineWithParams( goblinWaiter, goblins[i] )
end

--[[Wait(1)
for i=1, #goblins do
	goblins[i]:Fade( 0, 2 )
end]]
"
10427,Kun-Lai Summit 5.3: zto - Emperor - Init  ,"-------------------
-- Configuration --
-------------------

--scene:SetRelativeCoords(true)
--scene:ApplyScreenEffect( 990 )

----------
-- Init --
----------

--Spell Visual IDs
windSpellCastID = 25671

--Creature IDs

shaohaoCreatureID = 61925
seerHaoCreatureID = 70980
xuenCreatureID = 65902
chijiCreatureID = 65898
nuixaoCreatureID =65895
yulonCreatureID = 65904

shaDoubtCreatureID = 64245
shaDespairCreatureID = 59651
shaAngerCreatureID = 60491
shaFearCreatureID = 60999
shaViolenceCreatureID = 56719
shaHatredCreatureID = 62541

--Sha Masks
maskAngerModelID = ""SPELLS\\ShaMask01.M2""
maskFearModelID = ""SPELLS\\ShaMask05.M2""
maskDoubtModelID = ""SPELLS\\ShaMask06.M2""
maskHatredModelID = ""SPELLS\\ShaMask02.M2""
maskViolenceModelID = ""SPELLS\\ShaMask03.M2""
maskDespairModelID = ""SPELLS\\ShaMask04.M2""

--Effects
jadeMistModelID = ""SPELLS\\Monk_Mist_Precast.M2""
particleGlowModelID = ""WORLD\\GENERIC\\PASSIVEDOODADS\\PARTICLEEMITTERS\\FeralasLightBlue.M2""
--""WORLD\\GENERIC\\PVP\\WARSONG\\NightElfCTFFlagPlaceGlow.m2""
haloModelID = ""WORLD\\EXPANSION03\\DOODADS\\DEEPHOLM\\GLOW\\DeepHolm_BluGrenBrtGlow_01.M2""
fog1ModelID = ""WORLD\\EXPANSION03\\DOODADS\\DARKSHOREREWORK\\Darkshore_WaterFall_Mist01.M2""
travelingMistModelID = ""SPELLS\\Monk_TravelingMist_Impact.M2""
soothingMistModelID = ""SPELLS\\Monk_SoothingMist_Impact.M2""
flowersModelID = ""WORLD\\EXPANSION04\\DOODADS\\TURTLEZONE\\TU_fallingPetals_White.M2""
jadeTornadoModelID = ""SPELLS\\Monk_RushingJadeWind_Missile.M2""

-- Spell preloads
meditationSpellID = 141923
colorSpellID = 75988
blastSpellID = 34944

--Spawn Creatures
seerHao = SmoothPhaseSpawnInteractibleActor( seerHaoCreatureID, 3485.782959, 2100.946289, 1084.045410, 142, 1, false )
shaohao = SpawnInteractibleActor( shaohaoCreatureID, 3485.782959, 2100.946289, 1084.045410, 142, 1.2, false )
FadeOut( shaohao, 0 )
SendTrigger( ""smoothPhaseComplete"" )

--Spawn lighting halo
halo = SpawnModelActor( haloModelID, 3485.782959, 2100.946289, 1084.045410, 142, 1, false )
halo:Fade( 0, 0 )
local haloPos = Vector:New( -1, 0, 0 )
RideVehicleActor( halo, shaohao, 1, AttachmentPoint.Head, haloPos )

--Spawn misc. visual effects
glow = SpawnModelActor( particleGlowModelID, 3485.782959, 2100.946289, 1084.045410, 142, 10, false )
glow:Fade( 0, 0 )

fog = SpawnModelActor( fog1ModelID, 3485.782959, 2100.946289, 1084.045410, 142, 3, true )
fog:Fade( 0, 0 )

tornado = SpawnModelActor( jadeTornadoModelID, 3485.782959, 2100.946289, 1084.045410, 142, 1, true )
tornado:Fade( 0, 0 )

--greenMists = SpawnModelActor( travelingMistModelID, 3485.782959, 2100.946289, 1085.045410, 142, 2, false )
--greenMists:Fade( 0, 0 )

--Spawn Sha Masks
doubt = SpawnFadedModelActorAtPoint( maskDoubtModelID, 5719, 1.5, false )
despair = SpawnFadedModelActorAtPoint( maskDespairModelID, 5721, 1.5, false )
fear = SpawnFadedModelActorAtPoint( maskFearModelID, 5718, 1.5, false )
hatred = SpawnFadedModelActorAtPoint( maskHatredModelID, 5717, 1.5, false )
violence = SpawnFadedModelActorAtPoint( maskViolenceModelID, 5720, 1.5, false )
anger = SpawnFadedModelActorAtPoint( maskAngerModelID, 5716, 1.5, false )

doubtSha = SpawnActorAtPoint( shaDoubtCreatureID, 5719, true )
despairSha = SpawnActorAtPoint( shaDoubtCreatureID, 5721, true )
fearSha = SpawnActorAtPoint( shaDoubtCreatureID, 5718, true )
hatredSha = SpawnActorAtPoint( shaDoubtCreatureID, 5717, true )
violenceSha = SpawnActorAtPoint( shaDoubtCreatureID, 5720, true )
angerSha = SpawnActorAtPoint( shaDoubtCreatureID, 5716, true )

doubtSha:Fade( 0, 0 )
despairSha:Fade( 0, 0 )
fearSha:Fade( 0, 0 )
hatredSha:Fade( 0, 0 )
violenceSha:Fade( 0, 0 )
angerSha:Fade( 0, 0 )

local shaScale = .005
doubtSha:SetScale( shaScale )
despairSha:SetScale( shaScale )
fearSha:SetScale( shaScale )
hatredSha:SetScale( shaScale )
violenceSha:SetScale( "
10428,Kun-Lai Summit 5.3: zto - Emperor - Seerhao - Master  ,"--Wait for the smooth phase to complete
WaitForTrigger( ""smoothPhaseComplete"" )

Wait(1)

--[[ Line 1 
seerHao:BroadcastText(BroadcastType.Say, 73299) --  Time: 
-- Here, set me down. Oh - oh, these old bones are tired. More than you can imagine.
PlayOneShotSplitBodyAnim( seerHao, Animations.EmoteTalk )
SendTrigger( ""Line 1"" )
Wait(8)
seerHao:WaitBroadcastSoundComplete()
Wait(1.75)

-- Line 2
seerHao:BroadcastText(BroadcastType.Say, 73300) --  Time: 
-- You surprised me. I expected a hero such as yourself to balk at the task of carrying an old man up a mountain. Most are too proud.
PlayOneShotSplitBodyAnim( seerHao, Animations.EmoteTalk )
SendTrigger( ""Line 2"" )
Wait(8)
seerHao:WaitBroadcastSoundComplete()
Wait(1.75)]]--

-- Line 3
seerHao:BroadcastText(BroadcastType.Say, 73301) --  Time: 15.341
-- I was going to teach you a lesson but instead, it is you who have taught me. You see when I was young, when I was young...
musichandle = seerHao:PlayMusic(37616) --Music Start 
PlayOneShotSplitBodyAnim( seerHao, Animations.EmoteTalk )
SendTrigger( ""Line 1"" )
SendTrigger( ""Line 3"" )
Wait(4.3)
PlayOneShotSplitBodyAnim( seerHao, Animations.CustomSpell03 )
Wait(2.9)
PlayOneShotSplitBodyAnim( seerHao, Animations.EmoteTalk )
Wait(3.841)
seerHao:Fade( .65, 3 )
SendTrigger( ""Line 3 - Effects"" )
PlayOneShotSplitBodyAnim( seerHao, Animations.EmoteYes )
Wait(4.3)
seerHao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 4
seerHao:BroadcastText(BroadcastType.Say, 73302) --  Time: 4.805
-- I was... EMPEROR.
--PlayOneShotSplitBodyAnim( seerHao, Animations.EmoteTalk )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
SendTrigger( ""Line 4"" )
Wait(1)
seerHao:SetScale( 1.1 )
Wait(.2)
seerHao:SetScale( 1.2 )
Wait(.2)
seerHao:SetScale( 1.3 )
Wait(.2)
seerHao:SetScale( 1.4 )
Wait(.2)
seerHao:SetScale( 1.5 )
Wait(.2)
seerHao:SetScale( 1.6 )
Wait(.2)
seerHao:SetScale( 1.7 )
Wait(.2)
seerHao:SetScale( 1.8 )
Wait(.2)
seerHao:SetScale( 1.9 )
Wait(.2)
seerHao:SetScale( 2 )
--shaohao:PlayLoopingAnimKit( 4085 )
Wait(1)
seerHao:WaitBroadcastSoundComplete()
Wait(.75)

--Transition to Shaohao

-- Line 5
shaohao:BroadcastText(BroadcastType.Say, 73303) --  Time: 5.654
-- The realm you see all around you was mine to command.
--shaohao:PlayOneShotAnimKit( 1530 )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
PlayOneShotSplitBodyAnim( seerHao, Animations.EmoteTalk )
SendTrigger( ""Line 5"" )
Wait(4.3)
shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 6
shaohao:BroadcastText(BroadcastType.Say, 73304) --  Time: 8.316
-- I conquered my doubts, my fears, my anger... I buried all of it within the land.
shaohao:PlayOneShotAnimKit( 1530 )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalkExclamation )
SendTrigger( ""Line 6"" )
Wait(3.67)
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteNo )
Wait(3.33)
Wait(1.346) --Remainder VO time
SendTrigger( ""Line 6 - Kill Sha"" )
shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 7
shaohao:BroadcastText(BroadcastType.Say, 73305) --  Time: 8.150
-- But I held on to one vice. The one sha I never conquered. PRIDE.
--shaohao:PlayOneShotAnimKit( 1530 )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalkQuestion )
SendTrigger( ""Line 7"" )
Wait(4.33)
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteNo )
Wait(3.33)
Wait(.49) --Remainder VO time
shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 8
shaohao:BroadcastText(BroadcastType.Say, 73306) --  Time: 8.399
-- My pride cloaked this land in mists! I thought we were better than the rest of the world.
shaohao:PlayOneShotAnimKit( 1530 )
PlayOneShotSplitBodyAnim( shaohao, Animations.CustomSpell03 )
SendTrigger( ""Line 8"" )
Wait(2.9)
Wait(2.169) --Remainder
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteNo )
Wait(3.33)
"
10429,[1] Kun-Lai Summit 5.3: zto - Emperor - Seerhao - Master  ,"shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 9
shaohao:BroadcastText(BroadcastType.Say, 73307) --  Time: 13.723
-- I thought we could solve our own problems. But for ten thousand years, we stagnated, our doubts and fears buried in the land, rising up to fester whenever we allowed them.
shaohao:PlayOneShotAnimKit( 1530 )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
SendTrigger( ""Line 9"" )
Wait(4.3)
shaohao:PlayOneShotAnimKit( 3229 )
Wait(4.3)
shaohao:StopAnimKit( 3229 )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalkQuestion )
Wait(4.33)
Wait(.793) --Remainder VO
shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 10
shaohao:BroadcastText(BroadcastType.Say, 73308) --  Time: 12.070
-- Pride. It is the most insidious of sha. It is good until it is bad. And then it is more dangerous than all the others combined.
shaohao:PlayOneShotAnimKit( 1530 )
SendTrigger( ""Line 10"" )
Wait(1)
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteYes )
Wait(4.33)
shaohao:PlayOneShotAnimKit( 3229 ) --Runs for 4.3 and then loops
Wait(6.74)
shaohao:StopAnimKit( 3229 )
shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 11
shaohao:BroadcastText(BroadcastType.Say, 73309) --  Time: 13.986
-- Beware of Pride! Be humble! The world is plunging into chaos. Old enemies must work together. Proud races must admit they need help.
shaohao:PlayOneShotAnimKit( 1530 )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
SendTrigger( ""Line 11"" )
Wait(4.3)
shaohao:PlayOneShotAnimKit( 1530 )
Wait(4.3)
shaohao:PlayOneShotAnimKit( 1530 )
Wait(4.3)
shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 12
shaohao:BroadcastText(BroadcastType.Say, 73310) --  Time: 8.996
-- Things are going to get worse before they get better. Only by working together can we overcome the darkness.
shaohao:PlayOneShotAnimKit( 1530 )
SendTrigger( ""Line 10"" )
Wait(1.796)
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
Wait(4.3)
PlayOneShotSplitBodyAnim( shaohao, Animations.CustomSpell03 )
Wait(2.9)
shaohao:WaitBroadcastSoundComplete()
Wait(.75)

-- Line 13
shaohao:BroadcastText(BroadcastType.Say, 73311) --  Time: 5.776
-- All that stands in our way... is pride.
shaohao:PlayOneShotAnimKit( 1530 )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
SendTrigger( ""Line 11"" )
Wait(3)
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteBow )
shaohao:PlayLoopingAnimKit( 4092 )
Wait(1)
SendTrigger( ""Line 11 - Shaohao Fade"" )
shaohao:Fade( 0, 5 )
halo:Fade( 0, 5 )
fog:Fade( 0, 5 )
Wait(5)
shaohao:WaitBroadcastSoundComplete()
scene:EndScene()"
10430,Kun-Lai Summit 5.3: zto - Emperor - shaohao  ,"WaitForTrigger( ""Line 1"" )
--shaohao:PlaySpellStateVisual(24841) --Lighting
--shaohao:PlayLoopingAnimKit( 4085 )
--shaohao:PlayLoopingAnimKit( 3227 )

WaitForTrigger( ""Line 4"" )
Wait(4)
--CastSpellAtActor(seerHao, seerHao, blastSpellID)
--CastSpellAtActor(shaohao, shaohao, blastSpellID)
seerHao:PlayLoopingAnimKit( 4085 )
shaohao:PlayLoopingAnimKit( 4085 )
Wait(1)
shaohao:PlaySpellCastVisual(windSpellCastID)
seerHao:Fade( 0, 2 )
shaohao:Fade( .75, 2 )
halo:Fade( .5, 2 )
--local meditateAuraVisual = shaohao:PlaySpellStateVisual(31921) --Medatation visual
shaohao:MoveToRel( Vector:New( 0, 0, 2 ), 30 )
Wait(1)
PlayLoopingSplitBodyAnim( shaohao, Animations.Hover )
"
10431,Kun-Lai Summit 5.3: zto - Emperor - Functions  ,"function SpawnFadedModelActorAtPoint( modelID, pointsPathID, scale, snapToGround )

	if not scale then
		scale = 1
	end

	local actors = SpawnModelActorsAtPoints( modelID, pointsPathID, snapToGround )
	actors[1]:SetScale( scale )
	actors[1]:Fade( 0, 0 )
	return actors[1]

end

"
10432,Kun-Lai Summit 5.3: zto - Emperor - Masks  ,"--[[function Sha( actor )
	StopLoopingSplitBodyAnim( actor, Animations.Submerged )
	PlayOneShotSplitBodyAnim( actor, Animations.Emerge )
end

WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( doubtSha, Animations.Submerged )
PlayLoopingSplitBodyAnim( despairSha, Animations.Submerged )
PlayLoopingSplitBodyAnim( fearSha, Animations.Submerged )
PlayLoopingSplitBodyAnim( hatredSha, Animations.Submerged )
PlayLoopingSplitBodyAnim( violenceSha, Animations.Submerged )
PlayLoopingSplitBodyAnim( angerSha, Animations.Submerged )

WaitForTrigger( ""Line 5"" )
doubtSha:Fade( .5, 2 )
despairSha:Fade( .5, 2 )
fearSha:Fade( .5, 2 )
hatredSha:Fade( .5, 2 )
violenceSha:Fade( .5, 2 )
angerSha:Fade( .5, 2 )


--Wait for Shaohao to reference the masks
WaitForTrigger( ""Line 6"" )

doubt:Fade( .75, 2 )
Sha( doubtSha )
Wait(.5)

despair:Fade( .75, 2 )
Sha( despairSha )
Wait(.5)

fear:Fade( .75, 2 )
Sha( fearSha )
Wait(.5)

violence:Fade( .75, 2 )
Sha( violenceSha )
Wait(.5)

hatred:Fade( .75, 2 )
Sha( hatredSha )
Wait(.5)

anger:Fade( .75, 2 )
Sha( angerSha )

--Wait(4)]]--

--[[doubt:MoveToRel( Vector:New( 0, 0, -20 ), 10 )
despair:MoveToRel( Vector:New( 0, 0, -20 ), 10 )
fear:MoveToRel( Vector:New( 0, 0, -20 ), 10 )
anger:MoveToRel( Vector:New( 0, 0, -20 ), 10 )
hatred:MoveToRel( Vector:New( 0, 0, -20 ), 10 )
violence:MoveToRel( Vector:New( 0, 0, -20 ), 10 )]]--

--[[WaitForTrigger( ""Line 7"" )
WaitForTrigger( ""Line 6 - Kill Sha"" )
doubtSha:PlayLoopingAnimKit( 3128 )
despairSha:PlayLoopingAnimKit( 3128 )
fearSha:PlayLoopingAnimKit( 3128 )
hatredSha:PlayLoopingAnimKit( 3128 )
violenceSha:PlayLoopingAnimKit( 3128 )
angerSha:PlayLoopingAnimKit( 3128 )

Wait(1)
doubt:Fade( 0, 2 )
despair:Fade( 0, 2 )
fear:Fade( 0, 2 )
anger:Fade( 0, 2 )
hatred:Fade( 0, 2 )
violence:Fade( 0, 2 )]]--"
10433,Test - Darren's Play Anim Kit,"
local creatureID1 = 65561 -- 68025

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(5, 0, 0), 180)
createData.creatureID = creatureID1

local actor = scene:SpawnActor(createData)

--[[
local actorAnimKitData = AnimKitData:Default()
actorAnimKitData.animKitID = AnimKits.LoopingFullBody
actorAnimKitData.isMaintained = true
actorAnimKitData.animOverride = Animations.EmoteTalkQuestion
actorAnimKitData.startTimeOverrideMS = 3500
actorAnimKitData.blendOverrideType = AnimKitBlendType.Set
actorAnimKitData.speedOverrideType = AnimKitSpeedType.Set
actorAnimKitData.boneSetIDOverride = AnimKitBoneSets.Head

while true do
	scene:WaitTimer(5)
	local kit = actor:PlayAnimKitEx(actorAnimKitData)
	scene:WaitTimer(10)
	kit:Stop()
end
]]

local actorAnimKitData = AnimKitData:Default()
actorAnimKitData.animKitID = AnimKits.LoopingFullBody
actorAnimKitData.isMaintained = true
actorAnimKitData.animOverride = Animations.EmoteDance
actorAnimKitData.speedOverrideType = AnimKitSpeedType.Set
actorAnimKitData.speedOverrideValue = 0.5
actorAnimKitData.variationOverride = 0

while true do
	local event = scene:WaitEvent()
	if (event == ""dance"") then
		local kit = actor:PlayAnimKitEx(actorAnimKitData)
		scene:WaitTimer(20)
		kit:Stop()
	end
end
"
10434,VoEB 5.3: zto - Taran Zhu and Dezco - Init - UNUSED,"-------------------
-- Creature Init --
-------------------

taranZhuCreatureID = 71065 
dezcoCreatureID = 64566
smokeBombSpellID = 7964

dezco = SmoothPhaseSpawnActor( dezcoCreatureID, 1563.298584, 936.248291, 473.590759, 187, 1, true )
taran = SmoothPhaseSpawnActor( taranZhuCreatureID, 1560.859375, 936.055542, 473.600006, 8, 1, true )

taran:BroadcastText( BroadcastType.Say, 73352 )
PlayOneShotSplitBodyAnim( taran, Animations.EmoteTalkQuestion )
Wait(4.33)
PlayOneShotSplitBodyAnim( taran, Animations.EmoteTalkExclamation )
Wait(3.67)

dezco:BroadcastText( BroadcastType.Say, 73353 )
PlayOneShotSplitBodyAnim( dezco, Animations.EmoteTalk )
Wait(2.93)
PlayOneShotSplitBodyAnim( dezco, Animations.EmoteTalk )
Wait(2.93)
PlayOneShotSplitBodyAnim( dezco, Animations.EmoteTalk )
Wait(2.93)

taran:BroadcastText( BroadcastType.Say, 73354 )
PlayOneShotSplitBodyAnim( taran, Animations.EmoteNo )
Wait(3.33)
taran:FollowPathAtSpeed( 5724, 2, true )
--PlayOneShotSplitBodyAnim( taran, Animations.EmoteTalk )
Wait(3.67)

dezco:BroadcastText( BroadcastType.Say, 73355 )
PlayOneShotSplitBodyAnim( dezco, Animations.EmoteTalk )
dezco:FollowPathAtSpeed( 5725, 2, true )
Wait(2.93)
PlayOneShotSplitBodyAnim( dezco, Animations.EmoteTalk )
Wait(4)

taran:BroadcastText( BroadcastType.Say, 73356 )
taran:SetFacing( 65.475 )
PlayOneShotSplitBodyAnim( taran, Animations.EmoteTalk )
Wait(4.3)
PlayOneShotSplitBodyAnim( taran, Animations.EmoteRude )
Wait(3.67)

dezco:BroadcastText( BroadcastType.Say, 73357 )
PlayOneShotSplitBodyAnim( dezco, Animations.EmoteTalk )
Wait(2.93)

taran:SetFacing( 189.45 )
Wait(1)
taran:BroadcastText( BroadcastType.Emote, 73358 )
Wait(3)

taran:BroadcastText( BroadcastType.Say, 73359 )
taran:SetFacing( 65.475 )
Wait(1)
PlayOneShotSplitBodyAnim( taran, Animations.EmoteYes )
Wait(4.33)

taran:BroadcastText( BroadcastType.Say, 73360 )
Wait(3)
PlayOneShotSplitBodyAnim( taran, Animations.EmoteBow )
Wait(1)

PlayOneShotSplitBodyAnim( dezco, Animations.EmoteBow )

Wait(3)
dezco:FollowPathAtSpeed( 5726, 2, true )

taran:FollowPathAtSpeed( 5727, 2, true )
taran:WaitMovementComplete()

CastSpellAtTarget( taran, taran, smokeBombSpellID )
taran:Fade( 0, 1 )
Wait(2)
scene:EndScene()"
10435,Global Constants - Attachments,"AttachmentPoint =
{
	None				= -1;
	MountMain			=  0;
	Shield				=  0;
	HandRight			=  1;
	HandLeft			=  2;
	ElbowRight			=  3;
	ElbowLeft			=  4;
	ShoulderRight		=  5;
	ShoulderLeft		=  6;
	KneeRight			=  7;
	KneeLeft			=  8;
	HipRight			=  9;
	HipLeft				= 10;
	Helm				= 11;
	Back				= 12;
	ShoulderFlapRight	= 13;
	ShoulderFlapLeft	= 14;
	ChestBloodFront		= 15;
	ChestBloodBack		= 16;
	Breath				= 17;
	PlayerName			= 18;
	Base				= 19;
	Head				= 20;
	SpellLeftHand		= 21;
	SpellRightHand		= 22;
	Special1			= 23;
	Special2			= 24;
	Special3			= 25;
	SheathMainHand		= 26;
	SheathOffHand		= 27;
	SheathShield		= 28;
	PlayerNameMounted	= 29;
	LargeWeaponLeft		= 30;
	LargeWeaponRight	= 31;
	HipWeaponLeft		= 32;
	HipWeaponRight		= 33;
	Chest				= 34;
	HandArrow			= 35;
	Bullet				= 36;
	SpellHandOmni		= 37;
	SpellHandDirected	= 38;
	VehicleSeat1		= 39;
	VehicleSeat2		= 40;
	VehicleSeat3		= 41;
	VehicleSeat4		= 42;
	VehicleSeat5		= 43;
	VehicleSeat6		= 44;
	VehicleSeat7		= 45;
	VehicleSeat8		= 46;
	LeftFoot			= 47;
	RightFoot			= 48;
	ShieldNoGlove		= 49;
	SpineLow			= 50;
	AlteredShoulderR	= 51;
	AlteredShoulderL	= 52;
	BeltBuckle			= 53;
	SheathCrossbow		= 54;
}

--
-- Actor Attachment Kit Data
--
if (not AttachmentData) then
	AttachmentData = { }
end

function AttachmentData:Default()
	local d =
	{
		parentActor = nil;
		parentAttachment = AttachmentPoint.None;
		useTargetOffset = false;
		targetOffset = Transform:New();
		transitionTime = 0;
	}

	setmetatable(d, self.__meta)
	return d
end"
10436,Test - Darren's Attachment,"
--
-- Create a cloud serpent
--
local mountID = 64977 -- serpent
local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(5, -15, 0), 90)
createData.creatureID = mountID
local mountActor = scene:SpawnActor(createData)


--
-- Create a couple of pandas
--
local riderID1 = 71065 -- taran
local riderID2 = 65561 -- cho
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(-10, -13, 0), 0)
createData.creatureID = riderID1
local riderActor1 = scene:SpawnActor(createData)


createData.creatureID = riderID2
createData.transform = Transform:New(Vector:New(15, 5, 0), 180)
local riderActor2 = scene:SpawnActor(createData)


--
-- Invisible camera bunny, for testing
--
local bunnyModel = ""CREATURE\\INVISIBLESTALKER\\InvisibleStalker.M2""
createData.groundSnap = false
createData.creatureID = 0
createData.model = bunnyModel
createData.transform = (scene:GetActivePlayerDisplay()):GetTransform()
local cameraBunnyActor = scene:SpawnActor(createData)


--
-- Set up camera
--
scene:SetGameCameraTarget(cameraBunnyActor, 5.0, 20.0)
scene:WaitTimer(1)
JumpRideVehicleActor(cameraBunnyActor, mountActor, 2.0, AttachmentPoint.Breath)
--RideVehicleActor(cameraBunnyActor, mountActor, 2.0, AttachmentPoint.Breath)


--
-- Panda1 - Run to jump on point
--
scene:WaitTimer(1)
riderActor1:WaitMoveToAbs(Vector:New(2, -14, 0), 1.5)


--
-- Panda1 - Ride on mount seat
--
WaitJumpRideVehicleActor(riderActor1, mountActor, 1.75)


--
-- Mount - Start flying
--
scene:WaitTimer(1)
mountActor:SetSnapToGround(false)

local circleSegmentAngle = 30
local circleRadius = 12
local circleTime = 12

local circleData = MoveData:Default(20)
circleData.isRelative = true
circleData.posControl = MovePosControl.PointTime;
circleData.yawControl = MoveRotControl.Tangent;
circleData.pitchControl = MoveRotControl.Tangent;
circleData.time = circleTime;

for i=1,#circleData.points do
	local rads = circleSegmentAngle*i*math.pi/180
	circleData.points[i].pos.x = math.sin(rads)*circleRadius
	circleData.points[i].pos.y = (math.cos(rads) - 1)*circleRadius
	circleData.points[i].time = math.acos(  1 - 2.0*(i / #circleData.points)) * circleTime / math.pi
--	circleData.points[i].time = (i / #circleData.points)*circleTime
end
mountActor:Move(circleData)
--mountActor:MoveToRel(Vector:New(60, -5, 2), 7.0)


--
-- Panda2 - Jump on back of serpent, behind panda1, while serpent moving
--
scene:WaitTimer(1)
WaitJumpRideVehicleActor(riderActor2, mountActor, 1.5, AttachmentPoint.Chest, Vector:New(-0.5, 0, 0.75))


--
-- Panda1 - Jump off
--
scene:WaitTimer(1)
local exitPos1 = mountActor:GetPosition() + Vector:New(5, 4, -4)
exitPos1.z = 0
JumpExitVehicleActor(riderActor1, exitPos1, 1.6)


--
-- Panda2 - Jump from back into drivers seat
--
scene:WaitTimer(0.5)
WaitJumpRideVehicleActor(riderActor2, mountActor, 0.75)


--
-- Panda 1 Jump onto Panda 2
--
scene:WaitTimer(1.5)
WaitJumpRideVehicleActor(riderActor1, riderActor2, 2.0, AttachmentPoint.Breath, Vector:New(-0.5, 0, 0.25))


--
-- Panda 2 Jump off
--
scene:WaitTimer(2)
local exitPos2 = mountActor:GetPosition() + Vector:New(-5, 4, -4)
exitPos2.z = 0
WaitJumpExitVehicleActor(riderActor2, exitPos2, 1.8)


--
-- Panda 1 Jump off
--
scene:WaitTimer(1)
local exitPos3 = riderActor2:GetPosition() + Vector:New(-3, 0, 0)
exitPos3.z = 0
JumpExitVehicleActor(riderActor1, exitPos3, 1.8)


--
-- Serpent Jump on Panda 2s right shoulder
--
scene:WaitTimer(1.5)
"
10437,Global Functions - Actor Vehicles,"--
-- Actor Vehicles
-- These Scripts have been added to SVN, if you make a change here, update it
-- also there \Object\ObjectClient\SceneScriptGlobal\
--

local jumpOntoOffsetZ = 0.25
local RideVehicleActorInternal
local VehicleSystemDebug

--------------------------------------------------------------------------------
function JumpRideVehicleActor(riderActor, vehicleActor, jumpTime, seatAttach, seatOffset, jumpOffset, seatAngles, riderAttach, useRiderAttachOrientation, useVehicleAsMount)
	if (not riderActor) then
		return 0
	end

	local jumpVehicleRideData = { }

	jumpVehicleRideData.jumpTime = jumpTime or 1.0
	jumpVehicleRideData.seatAttach = seatAttach or AttachmentPoint.MountMain
	jumpVehicleRideData.seatOffset = seatOffset or Vector:New()
	jumpVehicleRideData.seatAngles = seatAngles or Vector:New()
	jumpVehicleRideData.jumpOffset = jumpOffset or Vector:New(0, 0, jumpOntoOffsetZ)
	jumpVehicleRideData.riderAttach = riderAttach or AttachmentPoint.None
	jumpVehicleRideData.useRiderAttachOrientation = useRiderAttachOrientation or false
	jumpVehicleRideData.useVehicleAsMount = useVehicleAsMount or false
	jumpVehicleRideData.rideAnim = Animations.Mount
	
	-- NOTE: structured like this to avoid a tail call, which complicated getfenv in the internal function
	local attachTime = RideVehicleActorInternal(vehicleActor, riderActor, jumpVehicleRideData)
	return attachTime
end

--------------------------------------------------------------------------------
function WaitJumpRideVehicleActor(riderActor, ...)
	if (not riderActor) then
		return
	end

	local jumpTime = JumpRideVehicleActor(riderActor, ...)
	if (jumpTime > 0) then
		(riderActor:GetScene()):WaitTimer(jumpTime)
	end
end

--------------------------------------------------------------------------------
function JumpExitVehicleActor(riderActor, exitPoint, jumpTime)
	if (not riderActor) then
		return 0
	end

	local jumpExitVehicleRideData =	{ }
	jumpExitVehicleRideData.jumpTime = jumpTime or 1.0
	jumpExitVehicleRideData.jumpAbs = exitPoint or (riderActor:GetPosition() + Vector:New(0, 0, -jumpOntoOffsetZ))
	local attachTime = RideVehicleActorInternal(nil, riderActor, jumpExitVehicleRideData)
	return attachTime
end

--------------------------------------------------------------------------------
function WaitJumpExitVehicleActor(riderActor, ...)
	if (not riderActor) then
		return
	end

	local jumpTime = JumpExitVehicleActor(riderActor, ...)
	if (jumpTime > 0) then
		(riderActor:GetScene()):WaitTimer(jumpTime)
		riderActor:SetSnapToGround(true)
	end
end

--------------------------------------------------------------------------------
function RideVehicleActor(riderActor, vehicleActor, blendTime, seatAttach, seatOffset, seatAngles, rideAnim)
	local blendVehicleRideData = { }

	blendVehicleRideData.attachBlendTime = blendTime or 0.0
	blendVehicleRideData.seatAttach = seatAttach or AttachmentPoint.MountMain
	blendVehicleRideData.seatOffset = seatOffset or Vector:New()
	blendVehicleRideData.seatAngles = seatAngles or Vector:New()
	blendVehicleRideData.riderAttach = riderAttach or AttachmentPoint.None
	blendVehicleRideData.rideAnim = rideAnim or Animations.Mount

	local attachTime = RideVehicleActorInternal(vehicleActor, riderActor, blendVehicleRideData)
	return attachTime
end

--------------------------------------------------------------------------------
function WaitRideVehicleActor(riderActor, ...)
	local rideTime = RideVehicleActor(riderActor, ...)
	if (rideTime > 0) then
		(riderActor:GetScene()):WaitTimer(rideTime)
	end
end

--------------------------------------------------------------------------------
-- INTERNAL VEHICLE FUNCTIONS
--   Call the functions above, please contact Darren Williams if you need
--   additional functionality
"
10438,[1] Global Functions - Actor Vehicles,"--------------------------------------------------------------------------------

--
-- Vehicle Ride Data is a table with the following options
-- {
--	jumpTime
--	seatAttach
--	seatOffset
--  seatAngles
--  attachBlendTime
--  jumpAbs			:   world space location for the end of the jump
--  jumpOffset		:	if above not specified, world space offset for the jump to finish at from the target attach point
--  riderAttach		:   attachment point of the rider to attach to the seat attach, defaults to root
--  useRiderAttachOrientation : apply the orientation of the rider attachment point
--  rideAnim		:	animation to play while riding
--}
--

local rideVehicleAttachData
local rideVehicleMaxAttachBlendTime = 0.25
local GetVehicleSystem
local RideVehicleAttachValid
local RideVehicleActorStartAttach

--------------------------------------------------------------------------------
RideVehicleActorInternal = function(vehicleActor, riderActor, vehicleRideData)
	if (not vehicleRideData or type(vehicleRideData) ~= ""table"" ) then
		return 0
	end

	if (not riderActor) then
		return 0
	end

	-- stop current ride and remove from manager
	StopRidingVehicleActorInternal(riderActor)

	-- add to the manager
	local vehicleAttachment = { }
	vehicleAttachment.vehicleActor = vehicleActor
	vehicleAttachment.riderActor = riderActor
	vehicleAttachment.data = vehicleRideData

	local vehicleSystem = GetVehicleSystem()
	vehicleSystem.vehicleAttachments[riderActor] = vehicleAttachment

	-- set default values
	vehicleRideData.jumpTime		= vehicleRideData.jumpTime or 0
	vehicleRideData.seatAttach		= vehicleRideData.seatAttach or AttachmentPoint.None
	vehicleRideData.seatOffset		= vehicleRideData.seatOffset or Vector:New()
	vehicleRideData.seatAngles		= vehicleRideData.seatAngles or Vector:New()
	vehicleRideData.jumpOffset		= vehicleRideData.jumpOffset or Vector:New()
	vehicleRideData.riderAttach		= vehicleRideData.riderAttach or AttachmentPoint.None
	vehicleRideData.useRiderAttachOrientation = vehicleRideData.useRiderAttachOrientation or false
	vehicleRideData.useVehicleAsMount = vehicleRideData.useVehicleAsMount or false

	vehicleAttachment.riderActor:SetSnapToGround(false)

	-- start a jump if needed
	local jumpEndPos
	if (vehicleRideData.jumpTime > 0) then
		jumpEndPos = vehicleRideData.jumpAbs
		if (not jumpEndPos and vehicleAttachment.vehicleActor) then
			local offsetTransform = Transform:New(vehicleRideData.seatOffset)
			local mountAttachTransform = vehicleAttachment.vehicleActor:GetAttachmentTransform(vehicleRideData.seatAttach, offsetTransform, vehicleRideData.jumpTime)
			jumpEndPos = mountAttachTransform.position + vehicleRideData.jumpOffset
		end

		if (jumpEndPos) then
			-- contain attach blend time within the jump time
			vehicleAttachment.attachBlendTime = vehicleRideData.attachBlendTime or rideVehicleMaxAttachBlendTime
			if (vehicleAttachment.attachBlendTime > vehicleRideData.jumpTime) then
				vehicleAttachment.attachBlendTime = vehicleRideData.jumpTime*0.5
			end

			vehicleAttachment.riderActor:JumpToAbs(jumpEndPos, vehicleRideData.jumpTime)
		end
	elseif (vehicleRideData.attachBlendTime) then
		vehicleAttachment.attachBlendTime = vehicleRideData.attachBlendTime
	end

	-- delay the attachment if jumping
	if (vehicleAttachment.vehicleActor) then
		if (jumpEndPos) then
			-- queue up attaching
			(riderActor:GetScene()):AddCoroutineWithParams(RideVehicleActorStartAttach, vehicleAttachment)
		else
			-- start attachment immediately
			RideVehicleActorStartAttach(vehicleAttachment)
		end
	end

	if (vehicleRideData.jumpTime > 0) then
		return vehicleRideData.jumpTime
	else
		return (vehicleRideData.attachBlendTime or 0)
	end
end

--------------------------------------------------------------------------------
function "
10439,Durotar 5.3: zto - H - Battle of Razor Hill - Init,"----------------------
-- Helper Functions --
----------------------

--Changings an actor's facing to look at a target. Must Clear facing data to undo.
function FaceActor( actor, target )
	actor:ClearFacing()
	local targetPos = target:GetPosition()
	actor:SetFacingToAbs( targetPos )
end


------------------------
-- Creatures & Models --
------------------------

--Marquee Characters
thrallCreatureID = 71149
voljinCreatureID = 71148
chenCreatureID = 71150

--Generic units
senjinWatcherCreatureID = 70972 --Ranged Troll
senjinGuardianCreatureID = 70971 --Melee Troll
darkspearBatRiderCreatureID = 71172 --Passenger

darkspearBatCreatureID = 71173 --Mount/Vehicle
caravanKodoCreatureID = 71040 -- Passenger
caravanCartCreatureID = 71039 -- Mount/Vehicle
blueRaptorCreatureID = 71126
oliveRaptorCreatureID = 71127
orangeRaptorCreatureID = 71128
violetRaptorCreatureID = 12350

korkronWarmongerCreatureID = 70968
korkronVisionairyCreatureID = 71114

--Unique Trolls
bombayCreatureID = 10578
zuluDeBardCreatureID = 71132
zjolnirCreatureID = 7952
thrallWolfCreatureID = 36074 --Mount/Vehicle
voljinRaptorCreatureID = 33299 --Mount/Vehicle

--------------
-- Spawning --
--------------

--Marquee Characters
thrall = SmoothPhaseSpawnActor( thrallCreatureID, -780.307, -4946.61, 22.3297, 131.61, 1, true )
voljin = SmoothPhaseSpawnActor( voljinCreatureID,  -779.132, -4944.06, 22.3297, 158.241, 1, true )
chen = SmoothPhaseSpawnActor( chenCreatureID, -779.714, -4941.05, 22.3297, 261.938, 1, true )
SceneRadius( voljin, 300 ) --Players go more than specified radius away from vol'jin and the scene will cancel.

--Other Smooth Phase characters

SendTrigger( ""smoothPhaseComplete"" )

--Spawn non-smooth phase actors
bombay = SpawnActor( bombayCreatureID, -831.136, -4924.68, 20.211, 338.588, 1, true ) --Witch Doctor in Training
zjolnir = SpawnActor( zjolnirCreatureID, -833.13, -4910.33, 19.7987, 306.466, 1, true ) --Raptor Trainer
blueRaptor = SpawnActor( blueRaptorCreatureID, -831.631, -4903.68, 19.8094, 299.717, 1, true ) 
oliveRaptor = SpawnActor( oliveRaptorCreatureID, -837.616, -4905.01, 19.9789, 321.316, 1, true ) 
orangeRaptor = SpawnActor( orangeRaptorCreatureID, -841.728, -4908.41, 20.3428, 346.291, 1, true ) 
wolf = SpawnActor( thrallWolfCreatureID, -816.334, -4956.41, 15.8538, 103.74, 1, true )
raptor = SpawnActor( orangeRaptorCreatureID, -806.849, -4965.69, 18.0223, 113.203, 1, true )

deadRaptor = SpawnActor( violetRaptorCreatureID, -831.813, -4911.91, 19.7196, 35.5769, 1, true )

watchers = SpawnActorsAtPoints( senjinWatcherCreatureID, 5732, true )
guardians = SpawnActorsAtPoints( senjinGuardianCreatureID, 5733, true )

raptorRider1 = SpawnActor( senjinGuardianCreatureID, -843.295, -4910.69, 20.4859, 336.667, 1, true )
raptorRider2 = SpawnActor( senjinGuardianCreatureID, -841.854, -4904.82, 20.5709, 324.292, 1, true )
raptorRider3 = SpawnActor( senjinGuardianCreatureID, -834.613, -4898.72, 21.8247, 303.142, 1, true )


deadKorkron1 = SpawnActorsAtPoints( korkronWarmongerCreatureID, 5745, true )
deadKorkron2 = SpawnActorsAtPoints( korkronVisionairyCreatureID, 5746, true )

bat1 = SpawnActor( darkspearBatCreatureID, -856.189, -4925, 40.0568, 350.726, 1, false )
batrider1 = SpawnActor( darkspearBatRiderCreatureID, -856.189, -4925, 40.0568, 351.726, 1, false )
RideVehicleActor( batrider1, bat1 ) --Mount bat
--batrider1:SetRelativeTo( bat1 )

bat2 = SpawnActor( darkspearBatCreatureID, -847.361, -4907.48, 36.538, 328.677, 1, false )
batrider2 = SpawnActor( darkspearBatRiderCreatureID, -847.361, -4907.48, 37.538, 328.677, 1, false )
RideVehicleActor( batrider2, bat2 ) --Mount bat
--batrider2:SetRelativeTo( bat2 )

bat3 = SpawnActor( darkspearBatCreatureID, -832.582, -4888.85, 36.538, 290.877, 1, false )
batrider3 = SpawnActor( darkspearBatRiderCreatureID, -832.582, "
10440,Durotar 5.3: zto - H - Battle of Razor Hill - Vol'jin - MASTER,"WaitForTrigger( ""Scene Start"" )
Wait(1)

--Line 1 (length: 10.986)
voljin:BroadcastText(BroadcastType.Yell, 73374) --  Vol'jin 001 - To Player [VO]
-- Regroup! We press da advantage. Before the Warchief fortifies Razor Hill, we take it for da revolution, an' close off da road to da Barrens.
musichandle = voljin:PlayMusic(37611) --Music 1 Start 
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalk )
SendTrigger( ""Line 1"" )
voljin:FollowPathAtSpeed( 5734, 4 )
Wait(2.5)
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalk )
Wait(2.5)
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalk )
Wait(2.5)
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalk )
Wait(2.5)
voljin:WaitBroadcastSoundComplete()
Wait(.75)

--Line 2 (length: 4.105)
voljin:BroadcastText(BroadcastType.Yell, 73375) --  Vol'jin 002 - To All [VO]
-- Anyone who can still fight, come wit' me!
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalk )
SendTrigger( ""Line 2"" )
Wait(2.5)
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalkExclamation )
Wait(1.5)
--PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalk )
--Wait(2.5)
voljin:WaitBroadcastSoundComplete()
Wait(.75)

--Line 3
SendTrigger( ""Line 3"" ) --To Thrall
Wait(1)
FaceActor( chen, thrall )
voljin:SetFacing( 277.667 )
WaitForTrigger( ""Line 3 - done"" ) --Sent by Thrall

--Line 4 (length: 1.483)
voljin:BroadcastText(BroadcastType.Say, 73377) --  Vol'jin 003 - To Thrall [VO]
-- We need ya, mon.
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalkQuestion )
SendTrigger( ""Line 4"" )
Wait(1.783)
voljin:WaitBroadcastSoundComplete()
Wait(.75)

--Line 5
SendTrigger( ""Line 5"" ) --To Thrall
--FaceActor( chen, thrall )
WaitForTrigger( ""Line 5 - done"" ) --Sent by Thrall

--Line 6
SendTrigger( ""Line 6"" ) --To Thrall
WaitForTrigger( ""Line 6 - done"" ) --Sent by Thrall

--Line 7
SendTrigger( ""Line 7"" ) --To Thrall
--FaceActor( chen, thrall )
WaitForTrigger( ""Line 7 - done"" ) --Sent by Thrall

--Line 7 (length: 5.029)
voljin:BroadcastText(BroadcastType.Say, 73380) --  Vol'jin 003 - To Thrall [VO]
FaceActor( chen, voljin )
-- You set one foot in Orgrimmar, Hellscream gonna bury a knife in ya neck!
SendTrigger( ""Line 8"" )
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteNo )
Wait(1.67)
voljin:PlayOneShotAnimKit( 4059 ) --Knife in neck
Wait(3)
voljin:WaitBroadcastSoundComplete()
Wait(.75)

--Line 8
SendTrigger( ""Line 8a"" ) --To Thrall
FaceActor( chen, thrall )
WaitForTrigger( ""Line 8a - done"" ) --Sent by Thrall


--Line 9 (length: 2.507)
voljin:BroadcastText(BroadcastType.Say, 73382) --  Vol'jin 005 - To Thrall [VO]
-- I won't hear ya say such tings.
FaceActor( chen, voljin )
SendTrigger( ""Line 9"" )
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteNo )
Wait(1.67)
--PlayOneShotSplitBodyAnim( voljin, Animations.EmoteTalk )
--Wait(2.5)
voljin:WaitBroadcastSoundComplete()
Wait(.75)

--Line 10
SendTrigger( ""Line 10"" ) --To Thrall
FaceActor( chen, thrall )
WaitForTrigger( ""Line 10 - done"" ) --Sent by Thrall
Wait(2)
voljin:FollowPathAtSpeed( 5738, 2 )
WaitForTrigger( ""Line 10 - mounted"" )


--Line 11 (length: 2.086)
voljin:BroadcastText(BroadcastType.Say, 73384) --  Vol'jin 006 - To Thrall [VO]
FaceActor( chen, thrall )
-- For da Horde.
SendTrigger( ""Line 11"" )
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteSalute )
Wait(2.2)
voljin:WaitBroadcastSoundComplete()
Wait(1.75)

--Line 12
SendTrigger( ""Line 12"" ) --To Thrall
WaitForTrigger( ""Line 12 - done"" ) --Sent by Thrall
Wait(1)
voljin:SetFacing( 76.7464 )
SendTrigger( ""Line 13"" )
FaceActor( chen, voljin )
Wait(1)
voljin:SetFacing( 158.196 )
--Wait(1)

--Line 13 (length: 5.475)
-- Darkspear, with me! We ride! No sleep 'til Orgrimmar!
WaitForTrigger( ""To Voljin - Raptor In Place"" )
voljin:FollowPathAtSpeed( 5741, 8 )
"
10441,Durotar 5.3: zto - H - Battle of Razor Hill - Thrall,"--Line 1
WaitForTrigger( ""Line 1"" )
Wait(2)
thrall:FollowPathAtSpeed( 5735, 4 )

--Line 3 (7.167)
WaitForTrigger( ""Line 3"" )
thrall:EquipWeapon( WeaponSlot.MainHand, 0 )
thrall:BroadcastText(BroadcastType.Say, 73376) --  Thrall 001 - To Vol'jin [VO]
-- Wait Vol'jin. Horde is spilling Horde blood. It is tearing me apart.
PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
Wait(6.5)
thrall:WaitBroadcastSoundComplete()
Wait(.75)
SendTrigger( ""Line 3 - done"" )

--Line 5 (7.079)
WaitForTrigger( ""Line 5"" )
thrall:BroadcastText(BroadcastType.Say, 73378) --  Thrall 002 - To Vol'jin [VO]
-- I know. I trust you to lead the siege. I am needed elsewhere.
musichandle:Stop()
musichandle2 = thrall:PlayMusic(37612) --Music 2 Start 
PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
Wait(6.5)
thrall:WaitBroadcastSoundComplete()
Wait(.75)
SendTrigger( ""Line 5 - done"" )

--Line 6 (4.353)
WaitForTrigger( ""Line 6"" )
thrall:BroadcastText(BroadcastType.Say, 73379) --  Thrall 003 - To Vol'jin [VO]
-- I refuse to believe that all of my brethren support Garrosh.
PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
--Wait(6.5)
Wait(4.353)
thrall:WaitBroadcastSoundComplete()
Wait(.75)
SendTrigger( ""Line 6 - done"" )

--Line 8 (11.493)
WaitForTrigger( ""Line 7"" )
thrall:BroadcastText(BroadcastType.Say, 73381) --  Thrall 004 - To Vol'jin [VO]
-- I am going to Orgrimmar, alone. Eitrigg, Saurfang, surely they are standing against Garrosh. I must find others.
PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
Wait(6.5)
PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
Wait(4.5)
thrall:WaitBroadcastSoundComplete()
Wait(.75)
SendTrigger( ""Line 7 - done"" )

--Line 8a (8.403)
WaitForTrigger( ""Line 8a"" )
thrall:BroadcastText(BroadcastType.Say, 73895) --  Thrall 004a - To Vol'jin [VO]
-- It is a risk I have to take. If I am killed, please watch over Aggra and my boy.
PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
Wait(6.5)
thrall:WaitBroadcastSoundComplete()
Wait(.75)
SendTrigger( ""Line 8a - done"" )

--Line 10 (10.089)
WaitForTrigger( ""Line 10"" )
thrall:BroadcastText(BroadcastType.Say, 73383) -- Thrall 005 - To Vol'jin [VO]
-- It has to be said. Vol'jin. If we do not make it through this - I want you to know. You have always been my friend. My brother.
PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
Wait(6.5)
thrall:FollowPathAtSpeed( 5736, 3 )
Wait(1.75)
SendTrigger( ""Line 10 - done"" )
thrall:WaitMovementComplete()
PlayOneShotSplitBodyAnim( thrall, Animations.Mount )
WaitJumpRideVehicleActor( thrall, wolf, .5, AttachmentPoint.MountMain ) --Mounts the Wolf
thrall:WaitBroadcastSoundComplete()
--thrall:SetRelativeTo( wolf )
Wait(2)
SendTrigger( ""Line 10 - mounted"" )


--Line 12 (1.785)
WaitForTrigger( ""Line 12"" )
thrall:BroadcastText(BroadcastType.Say, 73385) -- Thrall 006 - To Vol'jin [VO]
-- For the Horde.
--PlayOneShotSplitBodyAnim( thrall, Animations.EmoteTalk )
--Wait(6.5)
Wait(1.785)
thrall:WaitBroadcastSoundComplete()
Wait(.75)
SendTrigger( ""Line 12 - done"" )

"
10442,Cinematic Framework - Companion Behavior,"--Checks the range of the player to a specific actor. If the distance exceeds the checkRadius then it will send the client trigger ""Range Cancel""
function RangeCheck( actor, checkRadius )
	while true do
		local actorPos = actor:GetPosition()
		local playerData = scene:GetActivePlayerDisplay()
		local playerPos = playerData:GetPosition()
		local distance = Vector.Dist( actorPos, playerPos )
		if ( distance > checkRadius ) then
			--scene:TriggerServerEvent( ""Range Cancel"" )
			scene:CancelScene()
			return
		end
		Wait(1)
	end
end

--Wrapper function for RangeCheck. Use this to declare an actor that the player must remain within the checkRadius of. On Fail the scene should cancel.
function SceneRadius( actor, checkRadius )
	scene:AddCoroutineWithParams( RangeCheck, actor, checkRadius )
end"
10447,[2] Global Functions - Actor Vehicles,"StopRidingVehicleActorInternal(riderActor)
	local vehicleSystem = GetVehicleSystem()
	if (not riderActor or not vehicleSystem) then
		return
	end

	local vehicleAttachment = vehicleSystem.vehicleAttachments[riderActor]

	-- remove from the current managed list if it is in there
	if (vehicleAttachment) then
		if (vehicleAttachment.rideAnimKit) then
			vehicleAttachment.rideAnimKit:Stop()
		end
		vehicleSystem.vehicleAttachments[riderActor] = nil
	end

	riderActor:SetRelativeTo(nil)
end

--------------------------------------------------------------------------------
RideVehicleActorStartAttach = function(vehicleAttachment)
	if (RideVehicleAttachValid(vehicleAttachment) ~= true) then
		return
	end

	if (not vehicleAttachment.riderActor) then
		return
	end

	local attachBlendTime = vehicleAttachment.attachBlendTime or 0
	local delayTime = (vehicleAttachment.data.jumpTime or 0) - attachBlendTime
	if (delayTime > 0) then
		(vehicleAttachment.riderActor:GetScene()):WaitTimer(delayTime)

		if (RideVehicleAttachValid(vehicleAttachment) ~= true) then
			return
		end
	end

	if (not rideVehicleAttachData) then
		rideVehicleAttachData = AttachmentData:Default()
	end
	rideVehicleAttachData.parentActor = vehicleAttachment.vehicleActor
	rideVehicleAttachData.parentAttachment = vehicleAttachment.data.seatAttach
	rideVehicleAttachData.childAttachment = vehicleAttachment.data.riderAttach
	rideVehicleAttachData.useChildAttachOrientation = vehicleAttachment.data.useRiderAttachOrientation
	rideVehicleAttachData.useTargetOffset = true
	rideVehicleAttachData.useParentAsMount = vehicleAttachment.data.useVehicleAsMount
	rideVehicleAttachData.targetOffset = Transform:New(vehicleAttachment.data.seatOffset, vehicleAttachment.data.seatAngles.x, vehicleAttachment.data.seatAngles.y, vehicleAttachment.data.seatAngles.z)
	rideVehicleAttachData.transitionTime = attachBlendTime
	vehicleAttachment.riderActor:SetAttachedTo(rideVehicleAttachData)

	-- play a ride anim if necessary
	if (vehicleAttachment.data.rideAnim) then
		vehicleAttachment.rideAnimKit = vehicleAttachment.riderActor:PlayAnimKit(AnimKits.LoopingSplitBodyRide, false, vehicleAttachment.data.rideAnim)
	end
end

--------------------------------------------------------------------------------
RideVehicleAttachValid = function(vehicleAttachment)
	if (not vehicleAttachment or type(vehicleAttachment) ~= ""table"") then
		return false
	end
	if (not vehicleAttachment.riderActor) then
		return false
	end

	local vehicleSystem = GetVehicleSystem()
	if (not vehicleSystem) then
		return false
	end

	local currentRiderAttachment = vehicleSystem.vehicleAttachments[vehicleAttachment.riderActor]
	if (currentRiderAttachment ~= vehicleAttachment) then
		return false
	end

	return true
end

--------------------------------------------------------------------------------
GetVehicleSystem = function()
	-- return or create a vehicle system for this environment

	-- iterate up the stack until we get an environment that is not global
	local stackLevel = 1
	local myEnv = getfenv(stackLevel)
	local env
	while ((not env) or (env == myEnv)) do
		stackLevel = stackLevel + 1
		env = getfenv(stackLevel)
	end

	local vehicleSystem
	if (not env) then
		VehicleSystemDebug(""ERROR: couldn't find environment for vehicle system"")
	elseif (not env._VehicleSystem) then
		VehicleSystemDebug(""Adding vehicle system to environment"")
		vehicleSystem = 
		{
			vehicleAttachments = { };
		}
		env._VehicleSystem = vehicleSystem
	else
		vehicleSystem = env._VehicleSystem
	end
	return vehicleSystem
end

--------------------------------------------------------------------------------
local debugEnabled = false
VehicleSystemDebug = function(msg)
	if (debugEnabled == true) then
		print(""VEHCILE_SYS: "" .. tostring(msg))
	end
end

"
10448,Durotar 5.3: zto - H - Battle of Razor Hill - Wolf,"WaitForTrigger( ""Line 10"" )
Wait(5)
wolf:FollowPathAtSpeed( 5737, 7, true )

WaitForTrigger( ""Line 10 - mounted"" )
wolf:SetFacing( 9.23867 )

WaitForTrigger( ""Line 12 - done"" )
wolf:FollowPathAtSpeed( 5739, 16, true )
wolf:WaitMovementComplete()
thrall:Despawn()
wolf:Despawn()
"
10449,Durotar 5.3: zto - H - Battle of Razor Hill - Voljin's Raptor,"WaitForTrigger( ""Line 13"" )

raptor:FollowPathAtSpeed( 5740, 8 )
raptor:WaitMovementComplete()
SendTrigger( ""To Voljin - Raptor In Place"" )

WaitForTrigger( ""WE RIDE"" )
raptor:FollowPathAtSpeed( 5739, 8.1, true )

raptor:WaitMovementComplete()
SendTrigger( ""WE ARRIVE"" )
"
10450,Durotar 5.3: zto - H - Battle of Razor Hill - Flavor,"WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( deadRaptor, Animations.Dead )
"
10451,Durotar 5.3: zto - H - Battle of Razor Hill - zjolnir,"WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( zjolnir, Animations.EmoteCry )

WaitForTrigger( ""Line 13"" )
StopLoopingSplitBodyAnim( zjolnir, Animations.EmoteCry )
PlayOneShotSplitBodyAnim( zjolnir, Animations.EmoteCheer )

WaitForTrigger( ""WE RIDE"" )
--zjolnir:FollowPathAtSpeed( 5743, 7, true )
Wait(10)
zjolnir:BroadcastText(BroadcastType.Say, 73619) --  Durotar 5.3: zto - Battle of Razor Hill - War Cries - Zjolnir at the Kor'kron

"
10452,Durotar 5.3: zto - H - Battle of Razor Hill - Generic Raptors,"WaitForTrigger( ""WE RIDE"" )
WaitJumpRideVehicleActor( raptorRider3, blueRaptor, 1, AttachmentPoint.MountMain ) --Mounts the Wolf
WaitJumpRideVehicleActor( raptorRider1, orangeRaptor, 1, AttachmentPoint.MountMain ) --Mounts the Wolf
local sideSaddle = Vector:New( -1, 0, 0 )
WaitJumpRideVehicleActor( raptorRider2, orangeRaptor, 1, AttachmentPoint.MountMain, sideSaddle ) --Mounts the Wolf
WaitJumpRideVehicleActor( zjolnir, oliveRaptor, 1, AttachmentPoint.MountMain ) --Mounts the Wolf
blueRaptor:FollowPathAtSpeed( 5739, 7.8, true )
orangeRaptor:FollowPathAtSpeed( 5748, 7.8, true )
oliveRaptor:FollowPathAtSpeed( 5749, 7.8, true )
"
10453,Durotar 5.3: zto - H - Battle of Razor Hill - Darkspear Watchers,"paths = { 5743, 5747, 5748, 5749 }
cheers = { 2871, 2859 }
function RandomPathToRazorHill( actor )
	PlayOneShotSplitBodyAnim( actor, Animations.EmoteCheer )
	actor:PlaySoundKit( cheers[ ( math.random( #cheers ) ) ], true )
	local randomWait = math.random( .5, 1.5 )
	Wait( randomWait )
	local randomPath = paths[math.random(#paths)]
	local randomSpeed = math.random( 7.8, 8 )
	actor:FollowPathAtSpeed( randomPath, randomSpeed, true )
	actor:WaitMovementComplete()
	actor:Fade( 0, 2 )
end

WaitForTrigger( ""Line 13"" )
--[[for i=1, #watchers do
	scene:AddCoroutineWithParams( RandomPathToRazorHill, watchers[i] )
end]]--

WaitForTrigger( ""WE RIDE"" )
for i=1, #watchers do
	scene:AddCoroutineWithParams( RandomPathToRazorHill, watchers[i] )
end

for i=1, #guardians do
	scene:AddCoroutineWithParams( RandomPathToRazorHill, guardians[i] )
end"
10454,Durotar 5.3: zto - H - Battle of Razor Hill - bombay,"WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( bombay, Animations.EmoteDance )

WaitForTrigger( ""Line 13"" )
StopLoopingSplitBodyAnim( bombay, Animations.EmoteDance )
PlayOneShotSplitBodyAnim( bombay, Animations.EmoteCheer )

WaitForTrigger( ""WE RIDE"" )
bombay:FollowPathAtSpeed( 5743, 8, true )
Wait(3)
bombay:BroadcastText(BroadcastType.Yell, 73622) --  Durotar 5.3: zto - Battle of Razor Hill - War Cries - Zjolnir at the Kor'kron

"
10455,Durotar 5.3: zto - H - Battle of Razor Hill - Chen,"
--Line 1
WaitForTrigger( ""Line 1"" )
Wait(4)
chen:FollowPathAtSpeed( 5750, 4 )

--Line 11
WaitForTrigger( ""Line 11"" )
PlayOneShotSplitBodyAnim( chen, Animations.EmoteBow )

--Line 13
WaitForTrigger( ""WE RIDE"" )
chen:FollowPathAtSpeed( 5751, 8 )
"
10456,Durotar 5.3: zto - H - Battle of Razor Hill - Bat Riders,"WaitForTrigger( ""WE RIDE"" )
Wait(2)
bat1:FollowPathAtSpeed( 5752, 7.8, true )
Wait(1)
bat2:FollowPathAtSpeed( 5753, 8.2, true )
Wait(1)
bat3:FollowPathAtSpeed( 5754, 8.1, true )

"
10457,[1] Test - Darren's Attachment,"mountActor:SetScale(0.15)
JumpRideVehicleActor(mountActor, riderActor2, 1.8, AttachmentPoint.ShoulderRight, Vector:New(0, -0.25, 0))

--
-- Panda 2 walk towards player
--
scene:WaitTimer(1.2)
riderActor2:MoveToAbs((scene:GetActivePlayerDisplay()):GetTransform().position, 5)


--
-- Return the camera
--
scene:WaitTimer(3)
WaitJumpExitVehicleActor(cameraBunnyActor, (scene:GetActivePlayerDisplay()):GetTransform().position, 1.2)
scene:SetGameCameraTarget(nil, 0, 0)


-- IDLE FOREVER
while true do
	scene:WaitTimer(10)
end
"
10458,Kun-Lai Summit 5.3: zto - Emperor - Effects  ,"function Mist()

	local mists = SpawnModelActorsAtPoints( jadeMistModelID, 5757, false )
	for i=1, #mists do
		mists[i]:Fade( 0, 0 )
	end
	local randomMist = math.random(#mists)
	--local mist = SpawnModelActor( jadeMistModelID, 0, 0, 0, 0, false ) --mists[randomMist]
	local mist = mists[randomMist]
	mist:Fade( 0, 0 )
	local rotation = math.random( 0, 350 )
	mist:SetFacing( rotation )
	local mistSpd = math.random( .5, 1 )
	local moveData = MoveData:Default()
	moveData.pathID = 5756
	moveData.speed = mistSpd
	moveData.forceGroundSnapPositionZ = false
	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Angle
	moveData.isRelative = true
	moveData.teleportToFirstPoint = false

	mist:Fade( .5, 3 )
	--mist:FollowPathAtSpeed( 5757, mistSpd, true )
	--mist:Move( moveData )
	mist:MoveToRel( Vector:New( 0, 0, 5 ), 10 )
	mist:WaitMovementComplete()
	mist:Fade( 0, 2 )
	--Wait(2)
	--mist:Despawn()
	for i=1, #mists do
		mists[i]:Despawn()
	end
end

WaitForTrigger( ""Line 3 - Effects"" )
fog:Fade( 1, 5 )

WaitForTrigger( ""Line 4"" )
--glow:Fade( .75, 10 )

--while true do
--	scene:AddCoroutine( Mist )
--	Wait( 1 )
--end

-- Nixed on grounds of being dumb
--[[scene:AddCoroutine( Mist )
Wait( 1 )
scene:AddCoroutine( Mist )
scene:AddCoroutine( Mist )
Wait( 1 )
scene:AddCoroutine( Mist )
scene:AddCoroutine( Mist )
scene:AddCoroutine( Mist )
Wait( 1 )
scene:AddCoroutine( Mist )
Wait( 1 )
scene:AddCoroutine( Mist )
Wait( 1 )
scene:AddCoroutine( Mist )
Wait( 1 )
scene:AddCoroutine( Mist )
Wait( 1 )]]--
"
10459,Northern Barrens 5.3 - Spirit Drum - Setup - PRK,"scene:SetRelativeCoords(true)
local creatureID = 71224
actorCreateData = ActorCreateData:Default()
actorCreateData.groundSnap = true
actorCreateData.interactible = true
actorCreateData.floatingTooltip = false
actorCreateData.aoiSettings.priority = ActorAOIPriority.Low
actorCreateData.aoiSettings.range = ActorAOIRange.Normal
actorCreateData.transform = Transform:New(Vector:New(3, -1, 0))
actorCreateData.scale = .5
actorCreateData.facingOffset = 180
actorCreateData.creatureID = creatureID

actorA = scene:SpawnActor(actorCreateData)

actorCreateData.transform = Transform:New(Vector:New(3, 0, 0))
actorCreateData.scale = .375
actorB = scene:SpawnActor(actorCreateData)

actorCreateData.transform = Transform:New(Vector:New(3, .75, 0))
actorCreateData.scale = .25
actorC = scene:SpawnActor(actorCreateData)


actorA:Fade(.65, 0)
actorB:Fade(.65, 0)
actorC:Fade(.65, 0)

scene:WaitTimer(30)
actorA:Despawn()
actorB:Despawn()
actorC:Despawn()"
10460,Northern Barrens 5.3 - Spirit Drum A - Big Drum - PRK,"local soundKit = 37112
actorA:SetInteractCursor(""interact"", CursorRange.RangeFromPlayer, 20, nil)

while (true) do
	actorA:WaitRightClick()
	actorA:PlaySoundKitStereo(soundKit, true)
end"
10461,[1] Durotar 5.3: zto - H - Battle of Razor Hill - Init,"-4888.85, 37.538, 290.877, 1, false )
RideVehicleActor( batrider3, bat3 ) --Mount bat
--batrider3:SetRelativeTo( bat3 )

for i=1, #deadKorkron1 do
	PlayLoopingSplitBodyAnim( deadKorkron1[i], Animations.Dead )
end

for i=1, #deadKorkron2 do
	PlayLoopingSplitBodyAnim( deadKorkron2[i], Animations.Dead )
end

--Supply Kodos
kodoCart = SpawnActorsAtPoints( caravanCartCreatureID, 5789, true )
kodo = SpawnActorsAtPoints( caravanKodoCreatureID, 5789, true )
trollCartRider1 = SpawnActorsAtPoints( senjinGuardianCreatureID, 5789, true )
trollCartRider2 = SpawnActorsAtPoints( senjinWatcherCreatureID, 5789, true )
trollCartDriver = SpawnActorsAtPoints( senjinWatcherCreatureID, 5789, true )

for i=1, #kodoCart do
	RideVehicleActor( kodo[i], kodoCart[i], 1, AttachmentPoint.VehicleSeat3 ) --Mount Kodos
	RideVehicleActor( trollCartDriver[i], kodoCart[i], 1, AttachmentPoint.MountMain ) --Mount Kodos
	RideVehicleActor( trollCartRider1[i], kodoCart[i], 1, AttachmentPoint.VehicleSeat1 ) --Mount Kodos
	RideVehicleActor( trollCartRider2[i], kodoCart[i], 1, AttachmentPoint.VehicleSeat7 ) --Mount Kodos
end

--Cavalry Raptors
raptorCavalryLeft = SpawnActorsAtPoints( oliveRaptorCreatureID, 5799, true )
raptorCavalryRiderLeft = SpawnActorsAtPoints( senjinWatcherCreatureID, 5799, true )

raptorCavalryRight = SpawnActorsAtPoints( oliveRaptorCreatureID, 5800, true )
raptorCavalryRiderRight = SpawnActorsAtPoints( senjinWatcherCreatureID, 5800, true )

for i=1, #raptorCavalryLeft do
	RideVehicleActor( raptorCavalryRiderLeft[i], raptorCavalryLeft[i] ) --Mount Raptor
end

for i=1, #raptorCavalryRight do
	RideVehicleActor( raptorCavalryRiderRight[i], raptorCavalryRight[i] ) --Mount Raptor
end



-----------------
-- Cue Actions --
-----------------
--scene:SetFadeRegion( 100, false )
SendTrigger( ""Scene Start"" )"
10462,Test - Darren's Client Bombing Run,"
local enableCamera = true

local introCameraID = 518
local createData = ActorCreateData:Default()
local initialPlayerTransform = (scene:GetActivePlayerDisplay()):GetTransform()

--
-- Invisible camera bunny, for testing
--
local bunnyModel = ""CREATURE\\INVISIBLESTALKER\\InvisibleStalker.M2""
createData.groundSnap = false
createData.creatureID = 0
createData.model = bunnyModel
createData.transform = initialPlayerTransform
local cameraBunnyActor = scene:SpawnActor(createData)

--
-- Create a cloud serpent
--
local mountID = 64977 -- serpent
createData.groundSnap = true
createData.creatureID = mountID
createData.model = """"
createData.transform = Transform:New(Vector:New(25, -25, 35), 90)
local mountActor = scene:SpawnActor(createData)

cameraBunnyActor:MoveToRel(Vector:New(-40, 0, 50), 12)

scene:WaitTimer(0.125)
mountActor:SetSnapToGround(false)



-- intro path for mount
local introMountMove = MoveData:Default(7)
introMountMove.isRelative = false
introMountMove.isGroundSnapping = false
introMountMove.teleportToFirstPoint = false		
introMountMove.posControl = MovePosControl.PointSpeed
introMountMove.yawControl = MoveRotControl.Tangent
introMountMove.pitchControl = MoveRotControl.Tangent


introMountMove.points[1].pos = Vector:New(20, -5, 25)
introMountMove.points[1].speed = 20.0

introMountMove.points[2].pos = Vector:New(12, -4, 10)
introMountMove.points[2].speed = 10.0

introMountMove.points[3].pos = Vector:New(5, 0, 3)
introMountMove.points[3].speed = 8.0

introMountMove.points[4].pos = Vector:New(12, 4, 10)
introMountMove.points[4].speed = 10.0

introMountMove.points[5].pos = Vector:New(20, 5, 50)
introMountMove.points[5].speed = 20.0

introMountMove.points[6].pos = Vector:New(50, 0, 100)
introMountMove.points[6].speed = 40.0

introMountMove.points[7].pos = Vector:New(200, 0, 150)
introMountMove.points[7].speed = 50.0

mountActor:Move(introMountMove)


--mountActor:MoveToAbs(Vector:New(0, -5, 5), 6)

scene:WaitTimer(0.125)

if (enableCamera == true) then
	scene:SetCamera(introCameraID, 5.0, cameraBunnyActor, mountActor)
end

scene:WaitTimer(1.0)

scene:SetFadeRegion(100, true)

createData.transform = (scene:GetActivePlayerDisplay()):GetTransform()
local playerActor = scene:SpawnActivePlayerCloneActor(createData, true)
scene:WaitTimer(2.0)

WaitJumpRideVehicleActor(playerActor, mountActor, 1.2)

if (enableCamera == true) then
	scene:SetGameCameraTarget(mountActor, 10, 50)
end

scene:WaitTimer(1)

--mountActor:MoveToAbs(Vector:New(25, 0, 200), 10)

scene:WaitTimer(1.0)

if (enableCamera == true) then
	scene:SetCamera(0, 1.25, nil, nil)
end


while true do
	scene:WaitTimer(30)
end

"
10463,Lorewalker Cho - 5.3: zto - S1: Loyalty - Scouts ,"--Wait for Line 1 - prepare
WaitForTrigger( ""Line 1"" )
PlayLoopingSplitBodyAnim( scout1, Animations.EmoteTalk )
PlayLoopingSplitBodyAnim( scout2, Animations.EmoteReadLoop )
PlayLoopingSplitBodyAnim( troll, Animations.KneelLoop )
scout2:PlaySpellStateVisual( 20291 )

--Wait for Line 2
WaitForTrigger( ""Line 2"" )
scout1:Fade( .75, 2 )
scout2:Fade( .75, 2 )
troll:Fade( .75, 2 )

--Wait for Line 2
WaitForTrigger( ""Line 3"" )
scout1:Fade( 0, 2 )
scout2:Fade( 0, 2 )
troll:Fade( 0, 2 )"
10464,[1] Lorewalker Cho - 5.3: zto - S1: Loyalty - Init   ,"SpawnModelActorsAtPoints( snowEffectID, 5699, false )
for i=1, #snow do
	snow[i]:Fade( 0, 0 )
	snow[i]:SetScale( 2 )
end

-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual

"
10465,[1] Lorewalker Cho - 5.3: zto - Warchief - Lorewalker Cho - MASTER,"Dark Heart of Pandaria 008 [VO]
-- The story is still being written...
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
SendTrigger( ""Line 8"" )
lorewalker:FollowPathAtSpeed( 5620, 2, true )
Wait(2.9)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)


--Final
lorewalker:WaitMovementComplete()
lorewalker:SetFacing(93.5645)
--lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
10466,Lorewalker Cho - 5.3: zto - S1: Loyalty - Lorewalker Cho - ALT   ,"WaitForTrigger( ""Line 7"" )

lorewalker:WaitMovementComplete()
lorewalker:SetFacing( 93.5645 )
"
10468,Elaglo Arrives Camera,"scene:SetCamera(0,0,nil,nil)
SetCameraFollowPath(368, 2, 5768, 5770, 5) --(camera, transition time, spline, target spline, duration)

scene:WaitTimer(23) --Controls the duration of the scene
scene:SetCamera(0,2,nil,nil)
scene:WaitTimer(2)
scene:EndScene()

--[[
raceCam = 368

--scene:SetCamera(0,0,nil,nil)
scene:SetCamera(raceCam, 5, nil, nil)
SetCameraFollowPath( genericFOV90, 2, 3971, 3972, 5)
scene:WaitTimer(5) --Controls the duration of the scene
scene:SetCamera(0,2,nil,nil)
scene:WaitTimer(2)
scene:EndScene()
--]]"
10469,Durotar 5.3: zto - H - Battle for Sen'jin - Init,"--Cameras and Paths

cameraPath0 = 5771
cameraPath1 = 5772

cameraTargetVoljin = 5773
cameraTargetWide = 5774

korKronPaths = { 5777, 5778, 5779, 5780, 5781 }

------------------------
-- Creatures & Models --
------------------------

--Marquee Characters
thrallCreatureID = 71149
voljinCreatureID = 71148
chenCreatureID = 71150
 

--Generic units
senjinWatcherCreatureID = 70972 --Ranged Troll
senjinGuardianCreatureID = 70971 --Melee Troll
darkspearBatRiderCreatureID = 71172 --Passenger

darkspearBatCreatureID = 71173 --Mount/Vehicle
caravanKodoCreatureID = 71040 -- Passenger
caravanCartCreatureID = 71039 -- Mount/Vehicle
blueRaptorCreatureID = 71126
oliveRaptorCreatureID = 71127
orangeRaptorCreatureID = 71128
violetRaptorCreatureID = 12350

korkronWarmongerCreatureID = 70968
korkronVisionairyCreatureID = 71114
korkronBattleWolfCreatureID = 71116
shamanWolvesCreatureID = 3524
korkronWindRiderCreatureID = 68773

korKronTypes = { korkronWarmongerCreatureID, korkronVisionairyCreatureID }

--Unique Trolls
bombayCreatureID = 10578
zuluDeBardCreatureID = 71132
zjolnirCreatureID = 7952
thrallWolfCreatureID = 36074 --Mount/Vehicle
voljinRaptorCreatureID = 33299 --Mount/Vehicle

--------------
-- Spawning --
--------------

--Marquee Characters
thrall = SmoothPhaseSpawnActor( thrallCreatureID, -780.307, -4946.61, 22.3297, 131.61, 1, true )
voljin = SmoothPhaseSpawnActor( voljinCreatureID,  -779.132, -4944.06, 22.3297, 158.241, 1, true )
chen = SmoothPhaseSpawnActor( chenCreatureID, -779.714, -4941.05, 22.3297, 261.938, 1, true )

--Other Smooth Phase characters

SendTrigger( ""smoothPhaseComplete"" )

--Kor'kron
wolves = SpawnActorsAtPoints( korkronBattleWolfCreatureID, 5775, true )
wolfRiders = SpawnActorsAtPoints( korkronWarmongerCreatureID, 5775, true )

for i=1, #wolves do
	RideVehicleActor( wolfRiders[i], wolves[i] )
end

shamanWolves = SpawnActorsAtPoints( shamanWolvesCreatureID, 5776, true )

wyverns = SpawnActorsAtPoints( korkronWindRiderCreatureID, 5783, false )
windRiders = SpawnActorsAtPoints( korkronWarmongerCreatureID, 5783, false )

for i=1, #wyverns do
	RideVehicleActor( windRiders[i], wyverns[i] )
end


-----------------
-- Cue Actions --
-----------------
SendTrigger( ""Scene Start"" )
musichandle = voljin:PlayMusic(37610) --Music Start 
Wait( 23 )
musichandle:Stop()
"
10470,Durotar 5.3: zto - H - Battle for Sen'jin - Cameras - MASTER,"--Cameras
local genericFOV90 = 368 
WaitForTrigger( ""Scene Start"" )
scene:SetCamera(0,0,nil,nil)

SetCameraFollowPath( genericFOV90, 6, cameraPath0, cameraTargetVoljin, 1 )
Wait(2)
SetCameraFollowPath( genericFOV90, 3, cameraPath1, cameraTargetWide, 20 )
Wait(15)
SetCameraFollowPath( genericFOV90, 3, cameraPath0, cameraTargetVoljin, 1 )
Wait(2)
scene:SetCamera(0,3,nil,nil)
Wait(3)
scene:EndScene()"
10471,Durotar 5.3: zto - H - Battle for Sen'jin - Vol'jin,"WaitForTrigger( ""Scene Start"" )
Wait(1)
voljin:BroadcastTextStereo(BroadcastType.Yell, 73371) --Length: 4.507
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteRoar ) -- Duration 2.67
thrall:FollowPathAtSpeed( 5782, 9, true )
chen:FollowPathAtSpeed( 5782, 7, true )
Wait(4.507)
voljin:WaitBroadcastSoundComplete()
Wait(1.75)
voljin:BroadcastTextStereo(BroadcastType.Yell, 73372) --Length: 4.701

"
10472,Durotar 5.3: zto - H - Battle for Sen'jin - wolves,"--Wait until everything has started
WaitForTrigger( ""Scene Start"" )
Wait(5)
for i=1, #wolves do
	wolves[i]:MoveToRel( Vector:New( 100, 0, 0 ), 20 )
end"
10473,Durotar 5.3: zto - H - Battle for Sen'jin - shamanWolves,"--Wait until everything has started
WaitForTrigger( ""Scene Start"" )
Wait(5)
for i=1, #shamanWolves do
	shamanWolves[i]:MoveToRel( Vector:New( 50, 0, 0 ), 20 )
end"
10474,Durotar 5.3: zto - H - Battle for Sen'jin - korkron,"--Helper function

function KorKronDispenser()
	local mobType = korKronTypes[(math.random(#korKronTypes))]
	local korKron = SpawnActor( mobType, 0, 0, 0, 0, 1, true )
	local pathID = math.random(#korKronPaths)
	local moveData = MoveData:Default()
	moveData.pathID = korKronPaths[pathID]
	moveData.speed = math.random(7, 8)
	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Angle
	moveData.isRelative = false
	moveData.teleportToFirstPoint = true

	--Actions
	korKron:Move( moveData )
	korKron:WaitMovementComplete()
	PlayLoopingSplitBodyAnim( korKron, Animations.Ready2H )
end

--On Scene start
WaitForTrigger( ""Scene Start"" )
Wait(5)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
Wait(1)
scene:AddCoroutine( KorKronDispenser )
"
10475,Durotar 5.3: zto - H - Battle for Sen'jin - Windriders,"--Wait until everything has started
WaitForTrigger( ""Scene Start"" )
for i=1, #wyverns do
	wyverns[i]:PlayLoopingAnimKit( 4061 )
end
Wait(4)
for i=1, #wyverns do
	wyverns[i]:MoveToRel( Vector:New( 100, 0, 0 ), 20 )
end"
10476,[1] Durotar 5.3: zto - H - Battle of Razor Hill - Vol'jin - MASTER,"voljin:BroadcastText(BroadcastType.Yell, 73386) --  Vol'jin 007 - To Troops [VO]
musichandle2:Stop()
musichandle3 = chen:PlayMusic(37613) --Music 2 Start 
SendTrigger( ""Music - Battle March Start"" )
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteShout )
chen:ClearFacing()
Wait(1)
WaitJumpRideVehicleActor( voljin, raptor, 1, AttachmentPoint.MountMain ) --Mounts the Wolf
--voljin:SetRelativeTo( raptor )
Wait(2)
PlayOneShotSplitBodyAnim( voljin, Animations.EmoteRoar )
Wait(1.67)
voljin:WaitBroadcastSoundComplete()
Wait(1.75)
SendTrigger( ""WE RIDE"" )

WaitForTrigger( ""WE ARRIVE"" )
scene:EndScene()"
10477,Durotar 5.3: zto - H - Battle of Razor Hill - kodoCarts,"WaitForTrigger( ""WE RIDE"" )
Wait(10)
for i=1, #kodoCart do
	kodo[i]:PlayLoopingAnimKit( 1132 )
	kodoCart[i]:MoveToRel( Vector:New( 100, 0, 0 ), 60 )
end"
10478,Lorewalker Cho - 5.3: zto - S1: Loyalty - Trolls ,"--Prep in Line 1
WaitForTrigger( ""Line 1"" )
for i=1, #trolls do
	PlayLoopingSplitBodyAnim( trolls[i], Animations.EmoteCheer )
	trolls[i]:SetScale( .5 )
	Wait(.3)
end


--Wait for Line 2
WaitForTrigger( ""Line 2"" )
Wait(.5)
fog1:Fade( .75, 2 )
fog2:Fade( .75, 2 )
Wait(.5)
troll:Fade( .75, 2 )
trollBanner1:Fade( .75, 2 )
trollBanner2:Fade( .75, 2 )
for i=1, #trolls do
	trolls[i]:Fade( .75, 2 )
end

--Wait for Line 2
WaitForTrigger( ""Line 3"" )
troll:Fade( 0, 2 )
trollBanner1:Fade( 0, 2 )
trollBanner2:Fade( 0, 2 )
fog1:Fade( 0, 2 )
fog2:Fade( 0, 2 )
for i=1, #trolls do
	trolls[i]:Fade( 0, 2 )
end
"
10479,Durotar 5.3: zto - A - Zen'tabra - Init,"----------------------
-- Helper Functions --
----------------------

function AttackPath( actor, path )
	--Inits
	local moveData = MoveData:Default()
	moveData.pathID = path
	moveData.speed = math.random(19, 24)
	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.Tangent
	moveData.rollControl = MoveRotControl.Angle
	moveData.isRelative = false
	moveData.teleportToFirstPoint = true

	--Actions
	actor:Move( moveData )
	actor:WaitMovementComplete()
	MoveWithinCertainDistanceOfPlayer( actor, 10, 12 )
	local playerData = scene:GetActivePlayerDisplay()
	local sceneLoc = playerData:GetPosition()
	actor:SetFacingToAbs( Vector:New( sceneLoc.x, sceneLoc.y, sceneLoc.z ) )
	PlayLoopingSplitBodyAnim( actor, Animations.FlyStand )
end

function BatCleanUp( actor, passenger )
	actor:ClearFacing()
	actor:FollowRelativePathAtSpeed( relativePath, 20, true )
	actor:WaitMovementComplete()
	actor:Fade( 0, 2 )
	passenger:Fade( 0, 2 )
	PlayLoopingSplitBodyAnim( passenger, Animations.Mount )
end


------------------------
-- Creatures & Models --
------------------------

--Bat Riders
darkspearBatCreatureID = 71173 --Mount/Vehicle
senjinWatcherCreatureID = 70972 --Ranged Troll

bats = SpawnActorsAtPoints( darkspearBatCreatureID, 5791, false )
darkspear = SpawnActorsAtPoints( senjinWatcherCreatureID, 5791, false )
paths = { 5794, 5793, 5792, 5795 }
relativePath = 5796

-------------
-- Actions --
-------------

--Riders mount bats, bats follow splines, after riding splines fly to player.
for i=1, #bats do
	RideVehicleActor( darkspear[i], bats[i] ) --Mount Bat
	scene:AddCoroutineWithParams( AttackPath, bats[i], paths[i] )
	darkspear[i]:EquipWeapon( WeaponSlot.OffHand, 5870 )
	--PlayLoopingSplitBodyAnim( darkspear[i], Animations.ReadyThrown )
end

Wait(1)
darkspear[4]:BroadcastTextStereo( BroadcastType.Yell, 73903)
Wait(10)

--Clean up bats
for i=1, #bats do
	scene:AddCoroutineWithParams( BatCleanUp, bats[i], darkspear[i] )
end
--bats[3]:WaitMovementComplete()
Wait(10)
scene:EndScene()"
10480,[1] Cinematic Framework ,"moveData.rollControl = MoveRotControl.None
	end

	if (animKitID) then
		moveData.animKitID = animKitID
	end

	self:Move( moveData )

end


function Actor:FollowRelativePathAtSpeed ( pathID, speed, actorRelative, animKitID )

	local moveData = MoveData:Default()
	moveData.pathID = pathID
	moveData.speed = speed

	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None -- MoveRotControl.Angle

	if (actorRelative == false) then
		moveData.isRelative = false
	else
		moveData.isRelative = true
	end

	if (animKitID) then
		moveData.animKitID = animKitID
	end

	self:Move( moveData )

end

function Actor:FollowPathReverse( pathID, time, roll, animKitID)
	local moveData = MoveData:Default()
	moveData.time = time

	moveData.posControl = MovePosControl.TotalTime
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.None

	if ( roll == true ) then
		moveData.rollControl = MoveRotControl.Angle
	else
		moveData.rollControl = MoveRotControl.None
	end

	if (animKitID) then
		moveData.animKitID = animKitID
	end
	moveData.points = {}
	path = scene:LoadPath(pathID).nodes
	for k,v in pairs(path) do
		local movePoint = MovePoint:Default()
		movePoint.pos = v.pos
		movePoint.yaw = v.rot.z
		movePoint.pitch = v.rot.y
		movePoint.roll = v.rot.x
		table.insert(moveData.points, 1, movePoint)
	end
	self:Move( moveData )

end


function Actor:FollowPathReverseAtSpeed( pathID, speed, roll, animKitID)
	local moveData = MoveData:Default()
	moveData.speed = speed

	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.Tangent
	moveData.pitchControl = MoveRotControl.None

	if ( roll == true ) then
		moveData.rollControl = MoveRotControl.Angle
	else
		moveData.rollControl = MoveRotControl.None
	end

	if (animKitID) then
		moveData.animKitID = animKitID
	end
	moveData.points = {}
	path = scene:LoadPath(pathID).nodes
	for k,v in pairs(path) do
		local movePoint = MovePoint:Default()
		movePoint.pos = v.pos
		movePoint.yaw = v.rot.z
		movePoint.pitch = v.rot.y
		movePoint.roll = v.rot.x
		table.insert(moveData.points, 1, movePoint)
	end
	self:Move( moveData )

end"
10481,Durotar 5.3: zto - H - Battle of Razor Hill - Cavalry Raptors - Left,"WaitForTrigger( ""WE RIDE"" )
cavalryPathsLeft = { 5801, 5802 }
Wait(10)
for i=1, #raptorCavalryLeft do
	local path = cavalryPathsLeft[math.random( #cavalryPathsLeft )]
	raptorCavalryLeft[i]:FollowPathAtSpeed( path, 8, true )
	Wait(.75)
end
"
10482,Durotar 5.3: zto - H - Battle of Razor Hill - Cavalry Raptors - Right,"WaitForTrigger( ""WE RIDE"" )
cavalryPathsRight = { 5803, 5804 }
Wait(10)
for i=1, #raptorCavalryRight do
	local path = cavalryPathsRight[math.random( #cavalryPathsRight )]
	raptorCavalryRight[i]:FollowPathAtSpeed( path, 8, true )
	Wait(.75)
end"
10483,Durotar 5.3: zto - H - Battle of Razor Hill - Bat Squads,"function BatSquads()
	--[[Bat Path
	local moveData = MoveData:Default()
	moveData.pathID = 5806
	moveData.speed = 12
	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.None;
	moveData.pitchControl = MoveRotControl.None;
	moveData.rollControl = MoveRotControl.None;
	moveData.isRelative = false
	moveData.teleportToFirstPoint = false]]--


	--Bat Squads
	local squadBats = SpawnActorsAtPoints( darkspearBatCreatureID, 5805, false )
	local squadBatRiders = SpawnActorsAtPoints( darkspearBatRiderCreatureID, 5805, false )

	for i=1, #squadBats do
		RideVehicleActor( squadBatRiders[i], squadBats[i] ) --Mount Bats
		if not (i == 1) then
			squadBats[i]:SetRelativeTo( squadBats[1] )
		end
	end

	squadBats[1]:FollowPathAtSpeed( 5806, 12, true )
	squadBats[1]:WaitMovementComplete()

	for i=1, #squadBats do
		squadBats[i]:Fade( 0, 2 )
		squadBatRiders[i]:Fade( 0, 2 )
	end

	Wait(2)

	for i=1, #squadBats do
		squadBats[i]:Despawn( )
		squadBatRiders[i]:Despawn( )
	end

end

WaitForTrigger( ""WE RIDE"" )

Wait(10)

while true do
	local time = math.random( 10, 20 )
	Wait( time )
	scene:AddCoroutine( BatSquads )
end"
10484,Legendary 5.3 - Chapter 13 - Celestials Intro - Main,"-- Wrathion wants you to visit some dirty animals


-- Set Up and Spawn in Actors
wrathionID = 69782
whelpID = 70225
wrathion = SmoothPhaseSpawnActor( wrathionID, 831.526, -166.76, 422.896, 254.603, 1, false ) 
wrathion:PlayLoopingAnimKit(547)
Wait(.2)


-- Start Music
music01 = wrathion:PlayMusic( 37627 )

-- Wrathion Talks
wrathion:BroadcastText(BroadcastType.Say, 74018) -- ""I will meet you..."" :03.4 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes)

Wait(2.5)
wrathion:StopAnimKit(547)
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 217.322, true )
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(1)

wrathion:BroadcastText(BroadcastType.Say, 74019) -- ""Remember, we must visit..."" :07 sec
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkQuestion )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)

wrathion:BroadcastText(BroadcastType.Say, 74020) -- ""Choose the challenge..."" :04.6 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(4)

-- Wrathion turns into a Whelp
wrathion:PlaySpellCastVisual( 17302 )
whelp = SpawnActor( whelpID, 830.418, -167.633, 422.563, 216.722, 1, false ) 
Wait(.2)
wrathion:Fade( 0, .2 )
Wait(3.5)


whelp:BroadcastText(BroadcastType.Say, 74021) -- ""Good luck."" :01 sec
Wait(2)

RunToLocation( whelp, 4, 840.562, -174.177, 425.55, 343.548, false )
RunToLocation( whelp, 5, 846.287, -169.814, 426.507, 45.4223, false )
"
10485,Kun-Lai Summit 5.3: zto - Emperor - prideSha ,"--[[WaitForTrigger( ""Line 7"" )
Wait( 4 )

prideSha:Fade( .5, 2 )

WaitForTrigger( ""Line 9"" )
prideSha:Fade( 0, 2 )
]]--"
10486,Kun-Lai Summit 5.3: zto - Emperor - tornado,"WaitForTrigger( ""Line 4"" )
tornado:Fade( .75, 4 )
Wait(1)
tornado:SetScale( 1.1 )
Wait(.2)
tornado:SetScale( 1.2 )
Wait(.2)
tornado:SetScale( 1.3 )
Wait(.2)
tornado:SetScale( 1.4 )
Wait(.2)
tornado:SetScale( 1.5 )
Wait(.2)
tornado:SetScale( 1.6 )
Wait(.2)
tornado:SetScale( 1.7 )
Wait(.2)
tornado:SetScale( 1.8 )
Wait(.2)
tornado:SetScale( 1.9 )
Wait(.2)
tornado:SetScale( 2 )

WaitForTrigger( ""Line 5"" )
tornado:Fade( 0, 2 )
"
10487,[1] Kun-Lai Summit 5.3: zto - Emperor - Init  ,"shaScale )
angerSha:SetScale( shaScale )

--Sha of Pride
prideSha = SpawnActor( shaDoubtCreatureID,  3494.96, 2092.84, 1078.81, 136.426, .075, false )
prideSha:PlaySpellStateVisual( 9033 )
FadeOut( prideSha, 0 )

--RideVehicleActor( greenMists, shaohao, 1, AttachmentPoint.Chest )

--Flower Petals
petals = SpawnModelActorsAtPoints( flowersModelID, 5810, false )
for i=1, #petals do
	petals[i]:PlayLoopingAnimKit( 753 )	
	petals[i]:Fade( 0, 0 )
end

"
10488,Kun-Lai Summit 5.3: zto - Emperor - Petals,"--Flower Petals
WaitForTrigger( ""Line 5"" )
for i=1, #petals do
	petals[i]:Fade( .75, 2 )
	petals[i]:StopAnimKit( 753 )	
	petals[i]:PlayLoopingAnimKit( 4091 )	
end

WaitForTrigger( ""Line 11 - Shaohao Fade"" )
for i=1, #petals do
	petals[i]:Fade( 0, 2 )
	petals[i]:StopAnimKit( 4091 )	
	petals[i]:PlayLoopingAnimKit( 753 )	
end
"
10489,[1] Flying - Meteor - Lift-Off & Attack,"pet.actor:SetSnapToGround(true)
	scene:WaitTimer(0.2);

	-- Always remember to clean up after yourself
	DefaultTurnCleanUp(ROID);
end"
10490,Northern Barrens 5.3 - Spirit Drum C - Small Drum - PRK,"local soundKit = 37544
actorC:SetInteractCursor(""interact"", CursorRange.RangeFromPlayer, 20, nil)

while (true) do
	actorC:WaitRightClick()
	actorC:PlaySoundKitStereo(soundKit, true)
end"
10491,Northern Barrens 5.3 - Spirit Drum B - Medium Drum - PRK,"local soundKit = 37574
actorB:SetInteractCursor(""interact"", CursorRange.RangeFromPlayer, 20, nil)
actorB:PlaySpellStateVisual(32204)

while (true) do
	actorB:WaitRightClick()
	actorB:PlaySoundKitStereo(soundKit, true)
end"
10493,Lorewalker Cho - 5.3: zto - S1: Loyalty - Lorewalker Cho - Music  ,"WaitForTrigger( ""Line 5"" )
Wait( 60 )
musichandle:Stop()
"
10495,Lorewalker Cho - 5.3: zto - Warchief - Music,"WaitForTrigger( ""Line 1"" )
Wait( 39 )
musichandle:Stop()
musichandle2 = lorewalker:PlayMusic(37609) --Music 2 Start 
Wait( 43.464 )
musichandle2:Stop()"
10497,Durotar 5.3: zto - H - Battle of Razor Hill - Music - Battlemarch,"WaitForTrigger( ""Music - Battle March Start"" )
Wait( 136.128 )
musichandle3:Stop()
musichandle4 = voljin:PlayMusic(515) --Music Clear
"
10498,Quest - 5.3 Legendary - Yu'lon Scene - Music - JSB,"
Wait (1)
local soundHandle = yulon:PlayMusic(37628) -- music

"
10513,Test - JLeCraft Visual Kit,"--[[

local creatureID1 = 65561 -- 68025

local createData = ActorCreateData:Default()
createData.groundSnap = true
createData.interactible = false
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Normal
createData.transform = Transform:New(Vector:New(5, 0, 0), 180)
createData.creatureID = creatureID1

local actor = scene:SpawnActor(createData)
--]]

--[[
local actorAnimKitData = AnimKitData:Default()
actorAnimKitData.animKitID = AnimKits.LoopingFullBody
actorAnimKitData.isMaintained = true
actorAnimKitData.animOverride = Animations.EmoteTalkQuestion
actorAnimKitData.startTimeOverrideMS = 3500
actorAnimKitData.blendOverrideType = AnimKitBlendType.Set
actorAnimKitData.speedOverrideType = AnimKitSpeedType.Set
actorAnimKitData.boneSetIDOverride = AnimKitBoneSets.Head

while true do
	scene:WaitTimer(5)
	local kit = actor:PlayAnimKitEx(actorAnimKitData)
	scene:WaitTimer(10)
	kit:Stop()
end
]]

--[[
local actorAnimKitData = AnimKitData:Default()
actorAnimKitData.animKitID = AnimKits.LoopingFullBody
actorAnimKitData.isMaintained = true
actorAnimKitData.animOverride = Animations.EmoteDance
actorAnimKitData.speedOverrideType = AnimKitSpeedType.Set
actorAnimKitData.speedOverrideValue = 0.5
actorAnimKitData.variationOverride = 0

while true do
	local event = scene:WaitEvent()
	if (event == ""dance"") then
		local kit = actor:PlayAnimKitEx(actorAnimKitData)
		scene:WaitTimer(20)
		kit:Stop()
	end
end
--]]"
10514,Pipe Transition,"	SetCameraFollowPath( 522, 1, 5838, 5839, 2 )
	Wait(1)
	scene:TriggerServerEvent(""teleport"")
	Wait(2)
	scene:SetCamera(0,1,nil,nil)
	Wait(1)"
10516,Pipe Transition,"	SetCameraFollowPath(522,1,5843,5844,2)
	Wait(1)
	scene:TriggerServerEvent(""teleport"")
	Wait(2)
	scene:SetCamera(0,1,nil,nil)
	Wait(2)"
10518,Test - Darren's Selection,"
--scene:SetAxisAlignedCoords(true)

--
-- Create a panda
--
local creatureID = 71065 -- taran
local createData = ActorCreateData:Default()
createData.name = GetGlobalString(""DUNGEON_FLOOR_DRAGONSOUL5"")
createData.groundSnap = true
createData.interactible = false
createData.selectable = true
createData.aoiSettings.priority = ActorAOIPriority.Low
createData.aoiSettings.range = ActorAOIRange.Infinite
createData.transform = Transform:New(Vector:New(5, -0, 0), 180)
createData.creatureID = creatureID

-- to see bug, stand at
-- worldport 1, -10093.9, 170.787, 80.1193, 85.184
--scene:SetRelativeCoords(false)
--createData.transform = Transform:New(Vector:New(-10057.6, 636.233, 54.1517), 268.785)

local actor = scene:SpawnActor(createData)


-- IDLE FOREVER
actor:SetMaxHealth(1000)
while true do
	actor:SetHealth(0)
	scene:WaitTimer(2.0)
	for i=1,1000 do
		actor:SetHealth(i)
		scene:WaitTimer(0.01)
	end
end
"
10583,Pipe Transition,"	SetCameraFollowPath( 522, 1, 5979, 5978, 2 )
	Wait(1)
	scene:TriggerServerEvent(""teleport"")
	Wait(2)
	scene:SetCamera(0,1,nil,nil)
	Wait(1)"
10614,Pipe Transition,"	local cameraMode 			= 522
	local cameraPositionPath 	= 6059
	local cameraTargetPath		= 6060

	MoveCameraToPathStart(cameraMode, 1, cameraPositionPath, cameraTargetPath)
	Wait(1)
	scene:TriggerServerEvent(""teleport"")
	Wait(.5)
	SetCameraFollowPath(cameraMode, .25, cameraPositionPath, cameraTargetPath, 1)

	Wait(1.5)

	scene:SetCamera(0,1,nil,nil)
	Wait(1)"
10615,Pipe Transition,"	local cameraMode 			= 522
	local cameraPositionPath 	= 6061
	local cameraTargetPath		= 6062

	MoveCameraToPathStart(cameraMode, 1, cameraPositionPath, cameraTargetPath)
	Wait(1.25)
	
	SetCameraFollowPath(cameraMode, .25, cameraPositionPath, cameraTargetPath, 1)
	scene:TriggerServerEvent(""teleport"")

	Wait(2)

	scene:SetCamera(0,1,nil,nil)
	Wait(1)"
10638,Turn Package - Stampede With Specific,"function Dispatcher_Stampede_Specific( clonesPerRow, cloneID, ROID, isTurn, turn )

	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		warning (""ERROR: Object of type ""..isTurn.."" passed to Dispatcher_Stampede"");

		return;
	end 

	local radius = 3; 
	local cloneSpeed = 10;
	local effectTime = 2;

	local chargeWithClones = true;

	local cols = clonesPerRow
	local rows = #turn.effects

--print(""ROWS = "" .. rows .. "", COLS = "" .. cols)

	if ( chargeWithClones ) then 
		rows = rows - 1;
	end

	-- protect against a divide by zero
	if (rows < 1) then
		rows = 1;
	end
	if (cols < 1) then
		cols = 1;
	end

	local frontSpread = radius*2 / rows; 
	local leftSpread = radius*2 / cols; 

	local objectTable = {};

	for i=1,rows do
		for j=1,cols do			
			local col = j
			local row = i;
			
			table.insert(objectTable, {
					index = (i-1)*rows+(j);
					f = -radius + row*frontSpread + math.random( -frontSpread*75,frontSpread*75 )/100, 
					l = -radius + col*leftSpread + math.random( -leftSpread*75,leftSpread*75 )/100
			});
		end
	end

	local pet = ROIDTOUNIT(ROID);
	local targetROID = GetMoveToROID( turn ); 
	local target =  ROIDTOUNIT( targetROID );

	local failed, flags = DidItFail ( turn );
	local missed = flags.miss;

	local targetLocation =  ObtainAttackPoint(ROID, targetROID, PetBattleRange.PointBlank, missed )


	local name = ""Clone"";
	-- local creatureID = pet.creatureID; 
	local creatureID = cloneID or pet.creatureID;
	local scale = 1;

	local createData = ActorCreateData:Default();
	createData.creatureID = creatureID;
	createData.scale = scale;
	createData.interactible = false;

	local petStartingPoint = pet.actor:GetPosition()
	local centerStartingPoint = FastLocalFacingCoordinates( petStartingPoint, target.actor:GetPosition(), Vector:New(-8,0,0) );
	local centerEndingPoint   = FastLocalFacingCoordinates( target.actor:GetPosition(), petStartingPoint, Vector:New(-8,0,0) );

	local cleanUpCheck=function(remove)
		local empty = true
		for i,v in pairs(objectTable) do
			if ( v.actor ) then
				if (remove) then
					v.actor:Despawn()
					v.actor = nil
				else
					local refPos = v.actor:GetPosition()
					refPos.z = v.destination.z
					local remainder = refPos:Dist( v.destination );

					if ( remainder < 2 or not v.actor:IsMoving() ) then 
						v.actor:Despawn();
						v.actor = nil
					else
						-- keep tracking this actor
						empty = false

						-- start fading if we are close to reaching the goal
						if ( remainder < 4 and not v.fading ) then
							v.actor:Fade(0, 0.25);
							v.fading = true
						end
					end
				end
			end	
		end
		return empty
	end

	-- Wave Stuff
	local timeSpent = 0;
	local waveDelay = effectTime/rows;
	local effectDelay = ( target.actor:GetPosition():Dist(petStartingPoint) / cloneSpeed ) + waveDelay;

--	print(""effectDelay = "" .. effectDelay .. "", waveDelay = "" .. waveDelay)

	local petDelay = 0;

	local nextWave = 0

	local waveIndex = 1;
	local effectIndex = 1;

	local delay = 0.05;

	-- Get the pet to charge
	local petStarted = false;
	local petFirstHit = false;
	local petArrived = false;
	local petTeleport = false;
	local petReturned = false;	
	local petDone = false;

	local doEffect = function(updateDelay)
		local effect = turn.effects[effectIndex];
		-- Use this to cap the number of effects rendered
		if ( effectIndex <= 99 ) then 
			-- Attempt to process the package
			local processed = HandleSpellVisualPackage( ROID, effect.firstEvent.abilityVisualID, ""effect"", effect)

			-- fallback handling
			if (processed ~= true) then
				-- Start the effect animation
				DefaultDoEffect(ROID, effect, nil, nil ); 
				-- End
			end
		else
			for index, result in pairs(effect.results) do
				StartEffectProcessing(result)
				"
10639,[1] Turn Package - Stampede With Specific,"SignalEffectProcessed()
			end
		end

		effectIndex = effectIndex + 1;

		if ( updateDelay ) then 
			effectDelay = timeSpent + waveDelay	/ 2
		end
	end

	-- Play the Cast Visual
	pet.actor:PlaySpellCastVisual(28897)

	while effectIndex <= #turn.effects do

--		print(""Effect Index = "" .. effectIndex)

		if ( timeSpent >= petDelay and not pet.actor:IsCasting()) then 
			if ( not petStarted ) then 
				petStarted = true;
				pet.actor:ClearFacing(); 
				pet.actor:MoveToAbs( centerEndingPoint,  petStartingPoint:Dist( centerEndingPoint ) / cloneSpeed );
				petDelay = 0.1
			elseif ( not petFirstHit ) then  
				local remainder = pet.actor:GetPosition():Dist( target.actor:GetPosition() );
				if ( remainder < 1 ) then
					petFirstHit = true;
					doEffect(false);
					petDelay = timeSpent + petStartingPoint:Dist( centerEndingPoint ) / cloneSpeed;
				else
					petDelay = 0.1;
				end
			elseif ( not petArrived ) then 

				local remainder = pet.actor:GetPosition():Dist( centerEndingPoint );

				if ( remainder < 4 or not pet.actor:IsMoving() ) then 
					--pet.actor:Fade(0,0.5); 
					petArrived = true;
					petDelay = timeSpent + 0.05
				else
					petDelay = timeSpent + 0.05
				end
			elseif ( not petTeleport ) then 

				pet.actor:MoveToAbs(centerStartingPoint, 0);
				petTeleport = true;
				petDelay = timeSpent + 0.05
			elseif ( pet.actor:GetPosition():Dist( centerStartingPoint ) < 1 and not pet.actor:IsMoving() ) then 
				pet.actor:MoveToAbs(petStartingPoint,  2);				
			end
		end

		if ( timeSpent >= nextWave ) then
--			print(""timeSpent = "" .. timeSpent)
			for j = 1, cols do 
				local v = objectTable[(waveIndex-1)*#turn.effects+j];

				if ( v ) then
				--	print(""Actor"")
					if ( v.actor) then
						if (not v.fading) then
							v.actor:Fade(0, 0.25);
							v.fading = true
						end

						v.actor:Despawn()
						v.actor = nil
					--	print(""Leak averted"")
					end

					createData.transform = Transform:New(centerStartingPoint + Vector:New(v.f,v.l,0),0);
					local actor = scene:SpawnActor(createData);

					v.actor = actor;
					v.destination = FastLocalFacingCoordinates( target.actor:GetPosition(), petStartingPoint, Vector:New(-8+v.f,v.l,0) );
					v.actor:Fade(1,0.5);

					local moveTime = v.actor:GetPosition():Dist( v.destination ) / cloneSpeed;

					v.actor:MoveToAbs( v.destination, moveTime )
				else
				--	print(""NO Actor"")
				end
			end

			waveIndex = waveIndex + 1;
			nextWave = timeSpent + waveDelay			
		end
	

		-- Used to filter effects
		if ( timeSpent > effectDelay ) then
			doEffect(true);
		end

		scene:WaitTimer(delay)
		timeSpent = timeSpent + delay;
		cleanUpCheck(false);
	end

	pet.actor:MoveToAbs( petStartingPoint, pet.actor:GetPosition():Dist( petStartingPoint ) / cloneSpeed );
	
	while (cleanUpCheck(true) == false) do
		scene:WaitTimer(0.1)
	end

	-- Wait until the pet is home
	pet.actor:WaitMovementComplete()
	pet.actor:SetFacingToAbs( target.actor:GetPosition() )
	pet.actor:Fade(1,0);

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end "
10649,Lorewalker Cho - 5.4: zto - Legendary - Init     ,"--------------
-- Spawning --
--------------

-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SmoothPhaseSpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is
SceneRadius( lorewalker, 400 )

-- Spawn Stage Light bunnies
bunnyID = 62026
light_ul = SpawnActor( bunnyID, 1449.33, 358.926, 550.221, 317.347, 1, false )  -- Upstage Left bunny
light_uc = SpawnActor( bunnyID, 1457.57, 365.7, 550.221, 221.947, 1, false )  -- Upstage Center bunny
light_ur = SpawnActor( bunnyID, 1464.86, 372.255, 550.221, 130.822, 1, false )  -- Upstage Right bunny
light_cl = SpawnActor( bunnyID, 1446.53, 362.14, 550.222, 317.347, 1, false )  -- Center Left bunny
light_cc = SpawnActor( bunnyID, 1454.55, 369.578, 550.222, 221.947, 1, false )  -- Center Stage bunny
light_cr = SpawnActor( bunnyID, 1461.54, 376.063, 550.222, 130.822, 1, false )  -- Center Right bunny
light_dc = SpawnActor( bunnyID, 1451.5, 372.967, 550.222, 221.947, 1, false )  -- Downstage Center bunny

--Sounds
gong = 12827
thunderClapSound = 35065

--Spells
readSpellState = 20291
staticShockCastID = 29651
wingStateID = 36130

capeEffectXuen = 33636
capeEffectYulon = 33637
capeEffectNuizhao = 33638
capeEffectChiji = 33639

capeGlowsID = 33433

beachExplosion = 133571


--Creature Models
wrathionCreatureID = 72723

--Models
waterModelID = ""WORLD\\EXPANSION02\\DOODADS\\GENERIC\\WATERFALLS\\WaterFalls_Set1_Med_Ripples.m2""

--Spawn Actors
wrathion = SmoothPhaseSpawnActor( wrathionCreatureID, 1448.486084, 372.413208, 550.285461, 170 )  
SendTrigger( ""smoothPhaseComplete"" )

--SpawnModels
water = SpawnModelActor( waterModelID, 1417.86, 388.087, 549.437, 343.224, 1, false )
water2 = SpawnModelActor( waterModelID, 1438.45, 406.249, 549.72, 273.474, 1, false )
FadeOut( water, 0 )
FadeOut( water2, 0 )

-- Fog Wall
fogwallID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\SPIRITWALL\\PA_SpiritWall_Wide.M2""
fogwall = SpawnModelActor( fogwallID, 1460.82, 361.962, 550.222, 132.452, 3, false )
FadeOut(fogwall, 0)

---- Jinyu and Hozen ----
-- Hozen Village
hozenFireID = ""world\\expansion04\\doodads\\Hozu\\hz_camp_fire_01.m2""
hozenTotemID = ""world\\expansion04\\doodads\\Hozu\\Totem\\hz_totem_feralhozu.m2""
hozenTorchID = ""world\\expansion04\\doodads\\Hozu\\Torches\\hz_torchjungle_03.m2""

hozenTotem1 = SpawnModelActor( hozenTotemID, 1469.7, 372.571, 550.221, 170.198, 5, true)
hozenTotem2 = SpawnModelActor( hozenTotemID, 1447.58, 354.253, 550.222, 87.6232, 5, true)
hozenFire1 = SpawnModelActor( hozenFireID, 1452.03, 363.351, 550.222, 108.098, 1, true)
hozenFire2 = SpawnModelActor( hozenFireID, 1463.54, 369.6, 550.222, 160.973, 1, true)
hozenTorch1 = SpawnModelActor( hozenTorchID, 1445.77, 360.969, 550.222, 53.4232, 1, true)
hozenTorch2 = SpawnModelActor( hozenTorchID, 1460.34, 378.032, 550.221, 201.248, 1, true)
hozenTotem1:Fade( 0, 0)
hozenTotem2:Fade( 0, 0)
hozenFire1:Fade( 0, 0)
hozenFire2:Fade( 0, 0)
hozenTorch1:Fade( 0, 0)
hozenTorch2:Fade( 0, 0)

-- Hozen Actors
hozenID = 61906

---- Forgotten Vaults ----
-- Spawn Northgate
mogugateID = 65961
gate = SpawnActor( mogugateID, 1459.95, 363.063, 550.223, 132.849, 0.5, true ) -- Spawn Northgate
gate:Fade( 0, 0 )


---- Mantid ----
-- CreatureIDs
mantidCreatureID = 66036
mantidWingSpellStateID = 24803
mantidQueenCreatureID = 62837

-- Spawning
mantidGround = SpawnFadedActorsAtPoints( mantidCreatureID, 6289, true )
mantidFlyers = SpawnFadedActorsAtPoints( mantidCreatureID, 6290, false )
mantidQueen = SpawnFadedActorsAtPoints( mantidQueenCreatureID, 6291, true )
shekzeer = mantidQueen[1]
shekzeer:SetScale(.4)

-- Cape visual effects
vortexModelID = ""WORLD\\EXPANSION03\\DOODADS\\GENERIC\\MAELSTROM\\MaelstromMagicVortex.M2""
twilightSkyModelID = "
10651,Lorewalker Cho - 5.4: zto - Legendary - MASTER ,"WaitForTrigger( ""smoothPhaseComplete"" )
--OnScene start
--This page is mostly intended to handle audio back and forth between Wrathion and Cho.
--See their respective script pages for addtional behaviors.

--SendTrigger(""Music - Started"")
--Wait(2)
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
PlayLoopingSplitBodyAnim( lorewalker, Animations.EmoteReadLoop )
local reading = lorewalker:PlaySpellStateVisual( readSpellState )
Wait(2)

--[[Line 1
wrathion:BroadcastText(BroadcastType.Say, 75045) -- Legendary 5.4 - Lorewalker Finale 01 - Wrathion 001 - ZTO [VO]
--
-- ""Here! My champion arrives!""
--PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
SendTrigger( ""Line 1"" )
wrathion:WaitBroadcastSoundComplete()
Wait(.75)]]--

--[[Line 2
lorewalker:BroadcastText(BroadcastType.Say, 75046) -- Legendary 5.4 - Lorewalker Finale 02 - Cho 001 - ZTO [VO] 
-- 5.425
-- ""Ah, of course! My old friend from the Jade Forest!""
--musichandle = lorewalker:PlayMusic(37606) --Music Start 
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
Wait( 5.425 )
SendTrigger( ""Line 2"" )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)]]--

--Line 3
lorewalker:BroadcastText(BroadcastType.Say, 75047) -- Legendary 5.4 - Lorewalker Finale 03 - Cho 002 - ZTO [VO]
-- 4.806
-- ""Wait wait wait - let me make sure I get the story right.""
musichandle1 = lorewalker:PlayMusic(38838) --Music 1 Start 
--scene:TriggerServerEvent( ""MUSIC_01"" ) --Calls a spell to play music 1
SendTrigger( ""Line 3"" )
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteReadStart )
lorewalker:PlayLoopingAnimKit( 1581 )
Wait( 1.3 )
--PlayLoopingSplitBodyAnim( lorewalker, Animations.EmoteReadLoop )
Wait( 3.506 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 4
lorewalker:BroadcastText(BroadcastType.Say, 75050) -- Legendary 5.4 - Lorewalker Finale 04 - Cho 003 - ZTO [VO]
-- 4.171
-- ""Pandaren will tell this tale for generations!""
SendTrigger( ""Line 4"" )
--PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
lorewalker:PlayOneShotAnimKit( 1530 )
Wait( 4.171 ) --Emote is 4.3
lorewalker:ClearSpellVisual( reading )
StopLoopingSplitBodyAnim( lorewalker, Animations.EmoteReadLoop )
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteReadEnd )
lorewalker:WaitBroadcastSoundComplete()
lorewalker:StopAnimKit( 1581 )
lorewalker:StopAnimKit( 1530 )
Wait(.75)

--Line 5
wrathion:WaitMovementComplete()
wrathion:BroadcastText(BroadcastType.Say, 75052) -- Legendary 5.4 - Lorewalker Finale 05 - Wrathion 002 - ZTO [NEED VO]
-- 2.605
-- ""It starts with a hero.""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
SendTrigger( ""Line 5"" )
Wait(2.5)
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 6
lorewalker:BroadcastText(BroadcastType.Say, 75054) -- Legendary 5.4 - Lorewalker Finale 06 - Cho 004 - ZTO [VO]
-- 3.383
-- ""An outsider, from beyond the mists!""
PlayOneShotSplitBodyAnim( lorewalker, Animations.CustomSpell03 )
SendTrigger( ""Line 6"" )
Wait(3.4)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 7
wrathion:BroadcastText(BroadcastType.Say, 75056) -- Legendary 5.4 - Lorewalker Finale 07 - Wrathion 003 - ZTO [NEED VO]
-- 2.997
-- ""Conquering a strange new land!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation ) -- 2.00
SendTrigger( ""Line 7"" )
Wait(3) 
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 8
lorewalker:BroadcastText(BroadcastType.Say, 75058) -- Legendary 5.4 - Lorewalker Finale 08 - Cho 005 - ZTO [VO]
-- 2.576
-- ""Must we use the word, ""Conquer?""""
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Line 8"" )
Wait( 2.576 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 9
wrathion:BroadcastText(BroadcastType.Say, 75059) -- Legendary 5.4 "
10652,[1] Lorewalker Cho - 5.4: zto - Legendary - MASTER ,"- Lorewalker Finale 09 - Wrathion 004 - ZTO [NEED VO]
-- 2.988
-- ""Venturing into forgotten vaults...""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk ) -- 2.00
SendTrigger( ""Line 9"" )
Wait(2)
Wait(1)
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 10
lorewalker:BroadcastText(BroadcastType.Say, 75061) -- Legendary 5.4 - Lorewalker Finale 10 - Cho 006 - ZTO [VO]
-- 6.160
-- ""Mantid and mogu alike were brought low by the hero's fury.""
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalk )
SendTrigger( ""Line 10"" )
Wait(6.160) --Placeholder Wait time
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 11
wrathion:BroadcastText(BroadcastType.Say, 75064) -- Legendary 5.4 - Lorewalker Finale 11 - Wrathion 005 - ZTO [NEED VO]
-- 4.761
-- ""Their power and wisdom seized for a greater glory!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
SendTrigger( ""Line 11"" )
Wait(4.8) 
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 12
lorewalker:BroadcastText(BroadcastType.Say, 75066) -- Legendary 5.4 - Lorewalker Finale 12 - Cho 007 - ZTO [VO]
-- 5.679
-- ""When war came to Pandaria's shores, our hero was ready.""
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Line 12"" )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 13
wrathion:BroadcastText(BroadcastType.Say, 75067) -- Legendary 5.4 - Lorewalker Finale 13 - Wrathion 006 - ZTO [NEED VO]
-- 6.353
-- ""A faction standard-bearer, beloved by the people and feared by their foes.""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes )
SendTrigger( ""Line 13"" )
Wait( 2 )
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait( 2 )
Wait( 2.5 )
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 14
lorewalker:BroadcastText(BroadcastType.Say, 75068) -- Legendary 5.4 - Lorewalker Finale 14 - Cho 008 - ZTO [VO]
-- 4.897
-- ""Even the mighty Thunder King fell before our champion's might.""
musichandle1:Stop()
musichandle2 = lorewalker:PlayMusic(38839) --Music 2 Start 
--scene:TriggerServerEvent( ""MUSIC_02"" ) --Calls a spell to play music 1
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
SendTrigger( ""Line 14"" )
Wait( 4.9 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 15
wrathion:BroadcastText(BroadcastType.Say, 75069) -- Legendary 5.4 - Lorewalker Finale 15 - Wrathion 007 - ZTO [NEED VO]
-- 6.716
-- ""One by one the secrets of an ancient empire were laid bare.""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
SendTrigger( ""Line 15"" )
Wait( 2 )
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait( 2 )
Wait( 2.7 )
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 16
lorewalker:BroadcastText(BroadcastType.Say, 75070) -- Legendary 5.4 - Lorewalker Finale 16 - Cho 009 - ZTO [VO]
-- 4.341
-- ""Knowledge uncovered for the benefit of the world.""
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteYes )
SendTrigger( ""Line 16"" )
Wait( 4.34 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 17
wrathion:BroadcastText(BroadcastType.Say, 75071) -- Legendary 5.4 - Lorewalker Finale 17 - Wrathion 008 - ZTO [NEED VO]
-- 4.258
-- ""POWER acquired for WAR and CONQUEST!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
SendTrigger( ""Line 17"" )
Wait( 4 ) 
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 18
lorewalker:BroadcastText(BroadcastType.Say, 75074) -- Legendary 5.4 - Lorewalker Finale 18 - Cho 010 - ZTO [VO]
-- 5.942
-- ""Let us stop for a moment - what kind of hero are we talking about?""
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteNo )
SendTrigger( ""Line 18"" )
Wait(3.33)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
Wait(2.6)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 19
"
10653,[2] Lorewalker Cho - 5.4: zto - Legendary - MASTER ,"wrathion:BroadcastText(BroadcastType.Say, 75078) -- Legendary 5.4 - Lorewalker Finale 19 - Wrathion 009 - ZTO [NEED VO]
-- 7.757
-- ""An agent of destruction, forged by my will to forever change the face of Azeroth.""
--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteRoar )
SendTrigger( ""Line 19"" )
Wait(3.33)
--PlayLoopingSplitBodyAnim( wrathion, Animations.UseStandingLoop )
--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(2) 
Wait(2)
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 20
wrathion:BroadcastText(BroadcastType.Say, 75085) -- Legendary 5.4 - Lorewalker Finale 20 - Wrathion 010 - ZTO [NEED VO]
-- 11.158
-- ""Behold! Latent Titan power, imbued with my own draconic essence, tempered by the wisdom of the Pandaren celestials.""
musichandle2:Stop()
musichandle3 = lorewalker:PlayMusic(38840) --Music 3 Start 
--scene:TriggerServerEvent( ""MUSIC_03"" ) --Calls a spell to play music 3

--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
SendTrigger( ""Line 20"" )
Wait(2)
--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2) 
--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2) 
--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2) 
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 21
wrathion:BroadcastText(BroadcastType.Say, 75089) -- Legendary 5.4 - Lorewalker Finale 21 - Wrathion 011 - ZTO [NEED VO]
-- 8.363
-- ""Overwhleming power. Use it to heal or destroy! To protect or annihilate!""
SendTrigger( ""Line 21"" )
--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteRoar )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )
Wait(2)
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 22
lorewalker:BroadcastText(BroadcastType.Say, 75083) -- Legendary 5.4 - Lorewalker Finale 22 - Cho 011 - ZTO [VO]
-- 5.942
-- ""My friend, please think carefully about the legacy you will leave behind.""
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Line 22"" )
Wait( 5.942 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 23
wrathion:BroadcastText(BroadcastType.Say, 75093) -- Legendary 5.4 - Lorewalker Finale 23 - Wrathion 012 - ZTO [NEED VO]
-- 4.857
-- ""Come to me, champion! Collect your well-earned reward!""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
SendTrigger( ""Line 23"" )
Wait(4.5) 
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Line 24
lorewalker:BroadcastText(BroadcastType.Say, 75105) -- Legendary 5.4 - Lorewalker Finale 24 - Cho 012 - ZTO [VO]
-- 2.093
-- ""How will the story end?""
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteTalkQuestion )
SendTrigger( ""Line 24"" )
Wait(2.093)
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 25
wrathion:BroadcastText(BroadcastType.Say, 75111) -- Legendary 5.4 - Lorewalker Finale 25 - Wrathion 013 - ZTO [NEED VO]
-- 3.697
-- ""There is only one way to find out.""
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
SendTrigger( ""Line 25"" )
Wait(3.5)
wrathion:WaitBroadcastSoundComplete()
Wait(.75)

--Final
--lorewalker:FollowPathAtSpeed( 5620, 2, true )
lorewalker:WaitMovementComplete()
lorewalker:SetFacing(93.5645)
lorewalker:PlaySoundKit(gong, true)
PlayOneShotSplitBodyAnim( lorewalker, Animations.EmoteBow )
Wait(2)
SendTrigger( ""endScene"" )
lorewalker: Despawn()
scene:EndScene()"
10654,Lorewalker Cho - 5.4: zto - Legendary - clone1 ,"--On Line 4, prep player scale
WaitForTrigger( ""Line 4"" )
clone1:SetScale( 1.25 )

--Wait for Wrathion to introduce
WaitForTrigger( ""Line 5"" )
light_cc:Fade( .75, 2 )
Wait(2)
clone1:Fade( .75, 2 )
halo:Fade( .25, 2 )
clone1:MoveToRel( Vector:New( 4, 0, 0 ), 2 )

--Line 7
WaitForTrigger( ""Line 7"" )
PlayLoopingSplitBodyAnim( clone1, Animations.Ready1H )

-- Line 13
WaitForTrigger( ""Line 13"" )
local flag = clone1:PlaySpellStateVisual( flagSpellStateID )

-- Line 14
WaitForTrigger( ""Line 14"" )
clone1:ClearSpellVisual( flag )

--Line 20
WaitForTrigger( ""Line 20"" )
StopLoopingSplitBodyAnim( clone1, Animations.Ready1H )
--clone1:PlaySpellPreCastVisual( 33403 )
light_cc:Fade( 1, 2 )
Wait( .5 )
--local capeGlow = clone1:PlaySpellStateVisual( capeGlowsID )
--Wait(1.5)

WaitForTrigger( ""Wing Impact"" )
PlayOneShotSplitBodyAnim( clone1, Animations.EmoteRoar )
-- Xuen Wings
clone1:PlaySpellImpactVisual( 46 )
wingVisual = clone1:PlaySpellStateVisual( capeEffectXuen )
Wait(6)
clone1:ClearSpellVisual( wingVisual )

-- Yulon Wings
clone1:PlaySpellImpactVisual( 46 )
wingVisual = clone1:PlaySpellStateVisual( capeEffectYulon )
Wait(6)
clone1:ClearSpellVisual( wingVisual )

-- Nuizhao Wings
clone1:PlaySpellImpactVisual( 46 )
wingVisual = clone1:PlaySpellStateVisual( capeEffectNuizhao )
Wait(6)
clone1:ClearSpellVisual( wingVisual )

-- Chiji Wings
clone1:PlaySpellImpactVisual( 46 )
wingVisual = clone1:PlaySpellStateVisual( capeEffectChiji )
Wait(6)
clone1:ClearSpellVisual( wingVisual )

--Line 23
WaitForTrigger( ""Line 23"" )
clone1:Fade( 0, 2 )
halo:Fade( 0, 2 )
light_cc:Fade( 0, 2 )"
10655,Lorewalker Cho - 5.4: zto - Legendary - wrathion,"--Wait for Wrathion to introduce
WaitForTrigger( ""Line 3"" )
Wait(3)
wrathion:FollowPathAtSpeed( 6285, 2 )

--Line 7
WaitForTrigger( ""Line 7"" )
wrathion:FollowPathAtSpeed( 6405, 2 )

--Mantid scene
WaitForTrigger( ""Line 10"" )
FaceActor( wrathion, clone1 )

--Wrathion getting crazy
WaitForTrigger( ""Line 17"" )
wrathion:MoveToRel( Vector:New( 1, 0, 0 ), 1 )

--Wrathion casting energies on the player
WaitForTrigger( ""Line 19"" )
wrathion:ClearFacing()
wrathion:FollowPathAtSpeed( 6406, 2 )
wrathion:WaitMovementComplete()
SendTrigger( ""Craft Cloak"" )
--Wait(2)
--CastSpellAtActor( wrathion, clone1, 141534)
--Wait(2)
--CastSpellAtActor( wrathion, clone1, 141534)
--wrathion:WaitMovementComplete()

--Wrathion Casts the player sequence of cloaks
--WaitForTrigger( ""Line 20"" )
--StopLoopingSplitBodyAnim( wrathion, Animations.UseStanding )
WaitForTrigger( ""Wing Impact"" )
--Wait(2)
--FaceActor( wrathion, clone1 )
Wait(.5)
--local clonePos = { clone1:GetPosition(); } 
--local missileVisualID = 11565
--local missileSpeed = 5
--wrathion:PlaySpellCastVisualAtPoints(missileVisualID, missileSpeed, false, clonePos) 
--CastSpellAtActor( wrathion, clone1, 141534)
--PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalkExclamation )

WaitForTrigger( ""Line 23"" )
wrathion:ClearFacing()
RunToLocation( wrathion, 2, 1448.49, 372.413, 550.369, 170.008, true )"
10656,Lorewalker Cho - 5.4: zto - Legendary - lorewalker,"--Wait for Wrathion to introduce
WaitForTrigger( ""Line 3"" )
Wait(2)
lorewalker:FollowPathAtSpeed( 6286, 2 )

--Turn to face wrathion
WaitForTrigger( ""Line 8"" )
lorewalker:FollowPathAtSpeed( 6404, 2 )
FaceActor( lorewalker, wrathion )

--Turn back to front
WaitForTrigger( ""Line 9"" )
lorewalker:ClearFacing()
lorewalker:SetFacing( 119 )

--Mantid scene
WaitForTrigger( ""Line 10"" )
Wait(2)
FaceActor( lorewalker, clone1 )

--Wrathion getting crazy
WaitForTrigger( ""Line 18"" )
FaceActor( lorewalker, wrathion )
lorewalker:MoveToRel( Vector:New( 1, 0, 0 ), 2 )

--Return gaze to player
WaitForTrigger( ""Line 20"" )
lorewalker:ClearFacing()
FaceActor( lorewalker, clone1 )

--Face the player at where they are in teh world
WaitForTrigger( ""Line 22"" )
lorewalker:ClearFacing()
FacePlayer( lorewalker, 6 )

WaitForTrigger( ""Line 23"" )
--RunToLocation( lorewalker, 2, 1447.18, 371.453, 550.221, 93.5645, true )
lorewalker:FollowPathAtSpeed( 5620, 2, true )"
10661,Lorewalker Cho - 5.4: zto - Legendary - fogwall,"--Wait for Line 4
WaitForTrigger( ""Line 5"" )
fogwall:Fade( .75, 4 )

--Clean up on Line 6
WaitForTrigger( ""Line 7"" )
fogwall:Fade( 0, 2 )"
10662,Lorewalker Cho - 5.4: zto - Legendary -Helper Functions ,"----------------------
-- Helper Functions --
----------------------

Race =
{
    RACE_HUMAN = 1;
    RACE_ORC =	2;
    RACE_DWARF = 3;
    RACE_NIGHT_ELF = 4;
    RACE_UNDEAD = 5;
    RACE_TAUREN = 6;
    RACE_GNOME = 7;
    RACE_TROLL = 8;
    RACE_GOBLIN = 9;
    RACE_BLOODELF = 10;
    RACE_DRAENEI = 11;
    RACE_FEL_ORC = 12;
    RACE_NAGA = 13;
    RACE_BROKEN = 14;
    RACE_SKELETON = 15;
    RACE_WORGEN = 22;
    RACE_GILNEAN = 23;
	RACE_PANDAREN_N = 24;
	RACE_PANDAREN_A = 25;
	RACE_PANDAREN_H = 26;
}

AllianceRace =
{
    RACE_HUMAN = 1;
    RACE_DWARF = 3;
    RACE_NIGHT_ELF = 4;
    RACE_GNOME = 7;
    RACE_DRAENEI = 11;
    RACE_WORGEN = 22;
    RACE_GILNEAN = 23;
	RACE_PANDAREN_A = 25;
}

HordeRace =
{
    RACE_ORC =	2;
    RACE_UNDEAD = 5;
    RACE_TAUREN = 6;
    RACE_TROLL = 8;
    RACE_GOBLIN = 9;
    RACE_BLOODELF = 10;
    RACE_PANDAREN_H = 26;
}

--AllianceRaces = { 1, 3, 4, 7, 11, 2401 }
--HordeRaces = { 2, 5, 6, 8, 10, 2204, 2402 }
AllianceRaces = { 1, 3, 4, 7, 11, 22, 23, 25 }
HordeRaces = { 2, 5, 6, 8, 9, 10, 26 }

-- Returns 0 if actor is Horde and 1 if actor is Alliance
function GetFakeFaction( actor )
	local actorRace = actor:GetRaceID( true )
	local actorFaction = 0
	--print( actorRace )
	for i=1, #AllianceRaces do
		if (actorRace == AllianceRaces[i]) then
			actorFaction = 1
		end
	end
	return actorFaction
end

--Changings an actor's facing to look at a target. Must Clear facing data to undo.
function FaceActor( actor, target )
	actor:ClearFacing()
	local targetPos = target:GetPosition()
	actor:SetFacingToAbs( targetPos )
end

--Changings an actor's facing to look at the caster of the scene. Does not update.
function FacePlayerOnce( actor )
	actor:ClearFacing()
	local playerData = scene:GetActivePlayerDisplay()
	local playerPos = playerData:GetPosition()
	actor:SetFacingToAbs( playerPos )
end

function FacePlayerLoop( actor, duration )
	while ( duration > 0 ) do
		FacePlayerOnce( actor )
		Wait(1)
		duration = duration - 1
	end
end

function FacePlayer( actor, duration )
	scene:AddCoroutineWithParams( FacePlayer, actor, duration )
end

--
-- SpawnModelActor( modelFileName, pointsPathID, snapToGround [=true] )
--   Spawn an uninteractible actor
--
function SpawnModelActorAtPoint( modelFileName, pointsPathID, snapToGround )

	if not scale then
		scale = 1
	end

	local createData = ActorCreateData:Default()
	createData.model = modelFileName
	createData.groundSnap = (snapToGround ~= false)
	createData.interactible = false

	local actors = scene:SpawnActorsAtPoints( createData, pointsPathID )
	return actors[1]

end"
10663,Lorewalker Cho - 5.4: zto - Legendary - mantid ,"
--Wait for line 5 to execute all prep work
WaitForTrigger( ""Line 5"" )
for i=1, #mantidGround do
	FaceActor( mantidGround[i], clone1)
	PlayLoopingSplitBodyAnim( mantidGround[i], Animations.ReadyUnarmed )
end

for i=1, #mantidFlyers do
	FaceActor( mantidFlyers[i], clone1)
	PlayLoopingSplitBodyAnim( mantidFlyers[i], Animations.FlyReadyUnarmed )
end

FaceActor( shekzeer, clone1 ) 

--Wait for Cho to call line 10
WaitForTrigger( ""Line 10"" )
light_ur:Fade( .75, 2 )
light_cr:Fade( .75, 2 )
for i=1, #mantidGround do
	mantidGround[i]:Fade( .75, 2)
end

for i=1, #mantidFlyers do
	mantidFlyers[i]:Fade( .75, 2)
end

shekzeer:Fade( .75, 2)

--Clean up on line 12
WaitForTrigger( ""Line 12"" )
light_ur:Fade( 0, 2 )
light_cr:Fade( 0, 2 )

for i=1, #mantidGround do
	mantidGround[i]:Fade( 0, 2)
end

for i=1, #mantidFlyers do
	mantidFlyers[i]:Fade( 0, 2)
end

shekzeer:Fade( 0, 2)"
10664,Lorewalker Cho - 5.4: zto - Legendary - clone2,"--[[Prep actor
WaitForTrigger( ""Line 9"" )
PlayLoopingSplitBodyAnim( clone2, Animations.Ready1H )

--Reveal actor
WaitForTrigger( ""Line10"" )
--clone2:Fade( .75, 2 )
--light_cl:Fade( .75, 2 )

--Fade Out actor
WaitForTrigger( ""Line10"" )
clone2:Fade( 0, 2 )
light_cl:Fade( 0, 2 )
]]--"
10665,Lorewalker Cho - 5.4: zto - Legendary - clone3,"--[[Prep actor
WaitForTrigger( ""Line 9"" )
PlayLoopingSplitBodyAnim( clone3, Animations.Ready1H )

--Reveal actor
WaitForTrigger( ""Line10"" )
Wait(2)
--light_cr:Fade( .75, 2 )
--clone3:Fade( .75, 2 )


--Fade Out actor
WaitForTrigger( ""Line10"" )
clone3:Fade( 0, 2 )
light_cr:Fade( 0, 2 )]]--
"
10666,Lorewalker Cho - 5.4: zto - Legendary - mogu,"--Wait for line 5 to execute all prep work
WaitForTrigger( ""Line 5"" )
for i=1, #moguSoldiers do
	FaceActor( moguSoldiers[i], clone1)
	PlayLoopingSplitBodyAnim( moguSoldiers[i], Animations.Ready2HL )
end

for i=1, #quilen do
	FaceActor( quilen[i], clone1)
	PlayLoopingSplitBodyAnim( quilen[i], Animations.ReadyUnarmed )
end

for i=1, #moguCaster do
	FaceActor( moguCaster[i], clone1)
	PlayLoopingSplitBodyAnim( moguCaster[i], Animations.ChannelCastOmni )
	moguCaster[i]:SetScale( 1.5 )
end


--Wait for line 10 to reveal
WaitForTrigger( ""Line 10"" )
Wait(2)
light_ul:Fade( .75, 2 )
light_cl:Fade( .75, 2 )
for i=1, #moguSoldiers do
	moguSoldiers[i]:Fade( .75, 2 )
end

for i=1, #quilen do
	quilen[i]:Fade( .75, 2 )
end

for i=1, #moguCaster do
	moguCaster[i]:Fade( .75, 2 )
end

--Wait for line 12 to conceal
WaitForTrigger( ""Line 12"" )
light_ul:Fade( 0, 2 )
light_cl:Fade( 0, 2 )
for i=1, #moguSoldiers do
	moguSoldiers[i]:Fade( 0, 2 )
end

for i=1, #quilen do
	quilen[i]:Fade( 0, 2 )
end

for i=1, #moguCaster do
	moguCaster[i]:Fade( 0, 2 )
end
"
10667,Lorewalker Cho - 5.4: zto - Legendary - Init - Faction Specific ,"--Set Faction for Scene. 
-- 0 = Horde
-- 1 = Alliance
-- faction = GetFakeFaction( clone1 ) --Declared on Init Page

WaitForTrigger( ""Faction Prep"" )

enemyFaction = { }

-----------
-- Horde --
-----------

--If player is Horde, then display Alliance as enemy units. And vice versa.

if ( faction == 0 ) then

	--Alliance
	enemyOfficerID = 67801
	enemySoldierID = 67304
	enemySiegeID = 67967
	enemyBoatModelID = ""WORLD\\EXPANSION04\\DOODADS\\ALLIANCE\\BOAT\\Transport_Alliance_Battleship.M2""
	
	--Horde
	friendlyOfficerID = 67461
	friendlySoldierID = 67334
	friendlySiegeID = 67395
	friendlyMarqueeID = 68084
	friendlyFlagModelID = ""WORLD\\EXPANSION02\\DOODADS\\ISLEOFCONQUEST\\IsleofConcquest_Horde_Banner_01.m2""

	--FlagType
	flagSpellStateID = 6823

--end

--------------
-- Alliance --
--------------

--If player is alliance, then display horde as enemy units. And vice versa.

elseif ( faction == 1 ) then

	--Horde
	enemyOfficerID = 67461
	enemySoldierID = 67334
	enemySiegeID = 67395
	enemyBoatModelID = ""WORLD\\EXPANSION03\\DOODADS\\GENERIC\\Horde_Ship01.M2""
	
	--Alliance
	friendlyOfficerID = 67801
	friendlySoldierID = 67304
	friendlySiegeID = 67967
	friendlyMarqueeID = 68108
	friendlyFlagModelID = ""WORLD\\EXPANSION02\\DOODADS\\GENERIC\\HUMAN\\FLAGS\\Alliance_Banner_01.M2""

	--FlagType
	flagSpellStateID = 6824

else
	print(""Error - Wrong faction"")
	return
end

-------------------------
-- Spawn Faction Units --
-------------------------
boat = SpawnModelActorsAtPoints( enemyBoatModelID, 6298, false )
boatMover = SpawnActorsAtPoints( bunnyID, 6298, false )

--Changes facing of boats based on faction since the different boats have different default facings.
if (faction == 0) then
	for i=1, #boat do
		boat[i]:SetFacing( 133.013 ) --41.4379 )
	end
elseif (faction == 1) then
	for i=1, #boat do
		boat[i]:SetFacing( 41.4379 )
	end
else
	return
end

--Sets starting scale and movement for boats
for i=1, #boat do
	boat[i]:Fade( 0, 0 )
	boat[i]:SetRelativeTo( boatMover[i] )
	boat[i]:SetScale( .5 )
end

--Spawn Enemy soldiers and officers
enemyOfficer = SpawnActorAtPoint( enemyOfficerID, 6303, true )
enemyOfficer:Fade( 0, 0 )

enemySoldiers = SpawnFadedActorsAtPoints( enemySoldierID, 6302, true )

-- Spawn Friendlies
friendlyOfficer = SpawnActorAtPoint( friendlyOfficerID, 6331, true )
friendlyOfficer:Fade( 0, 0 )

friendlyMarquee = SpawnActorAtPoint( friendlyMarqueeID, 6335, true )
friendlyMarquee:Fade( 0, 0 )

friendlySoldiers = SpawnFadedActorsAtPoints( friendlySoldierID, 6334, true )

friendlyFlags = SpawnModelActorsAtPoints( friendlyFlagModelID, 6336, false )

for i=1, #friendlyFlags do
	friendlyFlags[i]:Fade( 0, 0 )
end

cannonTargets = SpawnActorsAtPoints( bunnyID, 6420, true )"
10668,[1] Lorewalker Cho - 5.4: zto - Legendary - Init     ,"""WORLD\\EXPANSION03\\DOODADS\\GENERIC\\TwilightCloudVortex.M2""
energyTrailModelID = ""WORLD\\DUNGEON\\CAVERNSOFTIME\\PASSIVEDOODADS\\ENERGYTRAILS\\EnergyTrailHourglassRed.m2""
fireballModelID = ""CREATURE\\TITANORB\\TitanOrb_02.M2""
--fireballModelID = ""SPELLS\\FirelandsSky_Fireball01_Spell.M2""
fireballModel2ID = ""WORLD\\EXPANSION03\\DOODADS\\FIRELANDS\\SKY_FIREBALL\\FirelandsSky_Fireball01.M2""
shaVortexModelID = ""WORLD\\EXPANSION04\\DOODADS\\MANTID\\Sha_Vortex.M2""
fireWingsModelID = ""SPELLS\\Deathwing_Body_Fire.M2""

--oxEffectID = ""SPELLS\\Monk_ClashingOxCharge_State_Base.M2""
oxEffectID = ""SPELLS\\Monk_ChargingOxWave_Missile.M2""
dragonEffectID = ""SPELLS\\Monk_FlyingDragonKick_Base.M2""
craneEffectID = ""CREATURE\\SPELLS\\Monk_Chiji_Low.M2""
tigerEffectID = ""CREATURE\\MONK_XUEN_LOW\\Monk_Xuen_Low.M2""
tigerEffect2ID = ""SPELLS\\Monk_InvokeXuen_Impact_Base.M2""
dragonWingsModelID = ""SPELLS\\FotF_Wings_Slow.M2""

oxCreatureID = 71439
oxVisualID = 32121
tigerCreatureID = 71434
tigerVisualID = 32124
craneCreatureID = 71441
craneVisualID = 32126
dragonCreatureID = 71435
dragonVisualID = 32121

--[[vortex = SpawnModelActorAtPoint( vortexModelID, 6419, false )
--SpawnModelActor( vortexModelID, 1456.47, 374.163, 550.285, 131.827, .25, false )
vortex:Fade( 0, 0 )
vortex:SetScale( .15 )
vortex:MoveToRel( Vector:New( 0, 0, -2 ), 1 )

twilight = SpawnModelActorAtPoint( twilightSkyModelID, 6609, false )
twilight:Fade( 0, 0 )
twilight:SetScale( .5 )
twilight:MoveToRel( Vector:New( 0, 0, 5 ), 1 )

fireball = SpawnModelActorAtPoint( fireballModelID , 6609, false )
fireball:Fade( 0, 0 )
fireball:SetScale( .15 )
fireball:MoveToRel( Vector:New( 1, 0, 1 ), 1 )]]--

ox = SpawnActorAtPoint( oxCreatureID, 6617, false )
ox:Fade( 0, 0 )
ox:PlaySpellStateVisual( oxVisualID )
oxEffectModelID = ""SPELLS\\LegendaryCloak_Ox_Impact_Base.M2""
oxEffect = SpawnModelActorAtPoint( oxEffectModelID, 6617, false )
oxEffect:Fade( 0, 0 )
--ox:MoveToRel( Vector:New( 0, 0, -.25 ), 1 )
ox:SetFacing(259.666)


tiger = SpawnActorAtPoint( tigerCreatureID, 6613, false )
tiger:Fade( 0, 0 )
tiger:PlaySpellStateVisual( tigerVisualID )
--tiger:SetScale(.5)
tigerEffectModelID = ""SPELLS\\LegendaryCloak_tiger_Impact_Base.M2""
tigerEffect = SpawnModelActorAtPoint( tigerEffectModelID, 6613, false )
tigerEffect:Fade( 0, 0 )
--tiger:MoveToRel( Vector:New( 0, 0, -.1 ), 1 )
tiger:SetFacing(174.024)

crane = SpawnActorAtPoint( craneCreatureID, 6614, false )
crane:Fade( 0, 0 )
crane:PlaySpellStateVisual( craneVisualID )
--crane:SetScale(.5)
craneEffectModelID = ""SPELLS\\LegendaryCloak_crane_Impact_Base.M2""
craneEffect = SpawnModelActorAtPoint( craneEffectModelID, 6614, false )
craneEffect:Fade( 0, 0 )
--crane:MoveToRel( Vector:New( 0, 0, .1 ), 1 )
crane:SetFacing(89.5787)

dragon = SpawnActorAtPoint( dragonCreatureID, 6615, false )
dragon:Fade( 0, 0 )
--dragon:SetScale( .75 )
dragon:PlaySpellStateVisual( dragonVisualID )
dragonEffectModelID = ""SPELLS\\LegendaryCloak_jadeserpent_Impact_Base.M2""
dragonEffect = SpawnModelActorAtPoint( dragonEffectModelID, 6615, false )
dragonEffect:Fade( 0, 0 )
--dragon:MoveToRel( Vector:New( 0, 0, .25 ), 1 )
dragon:SetFacing(105.957)

dragonWings = SpawnModelActorAtPoint( dragonWingsModelID, 6419, false )
dragonWings:Fade( 0, 0 )
dragonWings:MoveToRel( Vector:New( 1, 0, 1 ), 1 )

--[[vortexSha = SpawnModelActorAtPoint( shaVortexModelID, 6419, false )
vortexSha:Fade( 0, 0 )
vortexSha:SetScale( .5 )
vortexSha:MoveToRel( Vector:New( 1, 0, 1 ), 1 )]]--

fireWings = SpawnModelActorAtPoint( fireWingsModelID, 6419, false )
fireWings:Fade( 0, 0 )
fireWings:SetScale( 2 )
fireWings:MoveToRel( Vector:New( 1, 0, 1 ), 1 )

fxBunny = SpawnActorAtPoint( bunnyID, 6419, false )
fxBunny:MoveToRel( Vector:New( 1, 0, 1 ), 1 )

---- Mogu ----
-- CreatureIDs
moguPolearmCreatureID = 61899
"
10669,Lorewalker Cho - 5.4: zto - Legendary - factions - Set,"--This is for the factions set pieces specifically.

WaitForTrigger( ""Line 12"" )
water:Fade( .75, 2 )
water2:Fade( .75, 2 )

for i=1, #boat do
	boat[i]:Fade( .75, 2 )
	boatMover[i]:MoveToRel( Vector:New( 5, 0, 0 ), 5 )
end

--Clean Up
WaitForTrigger( ""Line 14"" )
water:Fade( 0, 2 )
water2:Fade( 0, 2 )

for i=1, #boat do
	boat[i]:Fade( 0, 2 )
end
"
10670,Lorewalker Cho - 5.4: zto - Legendary - factions - Enemy Troops,"--This is for the factions set pieces specifically.
WaitForTrigger( ""Line 10"" )
enemyOfficer:SetScale( .8 )

WaitForTrigger( ""Line 12"" )
enemyOfficer:Fade( .75, 2 )
enemyOfficer:MoveToRel( Vector:New( 3, 0, 0 ), 5 )

for i=1, #enemySoldiers do
	enemySoldiers[i]:Fade( .75, 2 )
	enemySoldiers[i]:MoveToRel( Vector:New( 5, 0, 0 ), 5 )
	PlayLoopingSplitBodyAnim( enemySoldiers[i], Animations.Ready2H )
	FaceActor( enemySoldiers[i], clone1 )
end


--Clean Up
WaitForTrigger( ""Line 14"" )
enemyOfficer:Fade( 0, 2 )

for i=1, #enemySoldiers do
	enemySoldiers[i]:Fade( 0, 2 )
end
"
10677,Lorewalker Cho - 5.4: zto - Legendary - factions - Friendly Troops,"--This is for the factions set pieces specifically.
--Set Up on line 10
WaitForTrigger( ""Line 10"" )
friendlyOfficer:SetScale( .8 )
friendlyOfficer:SetFacing( 132.541 )

friendlyMarquee:SetFacing( 132.541 )

for i=1, #friendlySoldiers do
	friendlySoldiers[i]:SetFacing( 132.541 )
end

--Enter on Line 13
WaitForTrigger( ""Line 12"" )
Wait(5)
light_ul:Fade( .5, 2 )
light_uc:Fade( .5, 2 )
light_ur:Fade( .5, 2 )

friendlyOfficer:Fade( .75, 2 )
friendlyOfficer:MoveToRel( Vector:New( 5, 0, 0 ), 2 )
friendlyMarquee:Fade( .75, 2 )
friendlyMarquee:MoveToRel( Vector:New( 5, 0, 0 ), 2 )

for i=1, #friendlyFlags do
	friendlyFlags[i]:Fade( .75, 2 )
end

for i=1, #friendlySoldiers do
	friendlySoldiers[i]:Fade( .75, 2 )
	friendlySoldiers[i]:MoveToRel( Vector:New( 5, 0, 0 ), 2 )
	PlayLoopingSplitBodyAnim( friendlySoldiers[i], Animations.Ready2H )
end


--Clean Up
WaitForTrigger( ""Line 14"" )
--light_ul:Fade( 0, 2 )
--light_uc:Fade( 0, 2 )
--light_ur:Fade( 0, 2 )

friendlyOfficer:Fade( 0, 2 )
friendlyMarquee:Fade( 0, 2 )

for i=1, #friendlySoldiers do
	friendlySoldiers[i]:Fade( 0, 2 )
end

for i=1, #friendlyFlags do
	friendlyFlags[i]:Fade( 0, 2 )
end
"
10678,Lorewalker Cho - 5.4: zto - Legendary - thunderking,"-- Use Line 10 as setup
WaitForTrigger( ""Line 10"" )
thunderKing:SetFacing( 132.541 )


-- Enter on Line 14
WaitForTrigger( ""Line 14"" )
thunderKing:PlaySpellCastVisual(staticShockCastID)
thunderKing:PlaySoundKit(thunderClapSound, true) -- Thunder strike
thunderKing:Fade( .75, 2 )

-- Enter on Line 16
WaitForTrigger( ""Line 18"" )
thunderKing:Fade( 0, 1 )
light_ul:Fade( 0, 1 )
light_uc:Fade( 0, 1 )
light_ur:Fade( 0, 1 )
"
10679,Lorewalker Cho - 5.4: zto - Legendary - thunderking - organizedMogu,"WaitForTrigger( ""Line 14"" )
Wait(1)
for i=1, #organizedMogu do
	organizedMogu[i]:Fade( .75, 2 )
	organizedMogu[i]:FollowRelativePathAtSpeed( 5464, 1 )
end
Wait(1)
dino:Fade( .75, 2 )
twin1:Fade( .75, 2 )
twin2:Fade( .75, 2 )
Wait(1)
PlayOneShotSplitBodyAnim( dino, Animations.EmoteRoar )

WaitForTrigger( ""Line 18"" )
for i=1, #organizedMogu do
	organizedMogu[i]:Fade( 0, 1 )
end
dino:Fade( 0, 1 )
twin1:Fade( 0, 1 )
twin2:Fade( 0, 1 )
"
10680,Lorewalker Cho - 5.4: zto - Legendary - Hozen Village,"--Wait for Scene 7
WaitForTrigger( ""Line 7"" )
hozenTotem1:Fade(.75, 2)
hozenTotem2:Fade(.75, 2)
hozenFire1:Fade(.75, 2)
hozenFire2:Fade(.75, 2)
hozenTorch1:Fade(.75, 2)
hozenTorch2:Fade(.75, 2)



--Wait for Scene 9
WaitForTrigger( ""Line 9"" )
FadeOut( hozenTotem1, 2)
FadeOut( hozenTotem2, 2)
FadeOut( hozenFire1, 2)
FadeOut( hozenFire2, 2)
FadeOut( hozenTorch1, 2)
FadeOut( hozenTorch2, 2)
"
10681,Lorewalker Cho - 5.4: zto - Legendary - Gate,"-- Cue gate
WaitForTrigger( ""Line 7"" )
--gate:PlayLoopingAnimKit(4358)


WaitForTrigger( ""Line 9"" )
gate:Fade( 0.75, 2 )
gate:PlayLoopingAnimKit(4358)

--Scene 4
WaitForTrigger( ""Line 10"" )
--PlayOneShotSplitBodyAnim( gate, Animations.Open )
--Wait(20)
gate:Fade( 0, 2 )
"
10682,Legendary 5.4 - Chapter 16 - Timeless Intro - Main,"-- Wrathion is excited to visit the Timeless Isle. He will meet you there!


-- Set Up and Spawn in Actors
wrathionID = 69782
whelpID = 70225
wrathion = SmoothPhaseSpawnActor( wrathionID, 831.526, -166.76, 422.896, 254.603, 1, false ) 
wrathion:PlayLoopingAnimKit(547)
Wait(.2)


-- Start Music
music01 = wrathion:PlayMusic( 39590 )

-- Wrathion Talks
wrathion:BroadcastText(BroadcastType.Say, 75502) -- ""An opportunity..."" :10.2 sec
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteYes)

Wait(2.5)
wrathion:StopAnimKit(547)
RunToLocation( wrathion, 1, 830.418, -167.633, 422.963, 217.322, true )
Wait(.5)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteNo )
Wait(3)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteTalk )
Wait(2.5)

wrathion:BroadcastText(BroadcastType.Say, 75504) -- ""Power! Glory! Loot!"" :2.8 sec
Wait(1)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmotePoint )
Wait(2)
PlayOneShotSplitBodyAnim( wrathion, Animations.EmoteCheer )
Wait(.5)
-- Wrathion turns into a Whelp
wrathion:PlaySpellCastVisual( 17302 )
whelp = SpawnActor( whelpID, 830.418, -167.633, 422.563, 216.722, 1, false ) 
Wait(.2)
wrathion:Fade( 0, .2 )
Wait(.5)

whelp:BroadcastText(BroadcastType.Say, 75505) -- ""Ours for the taking..."" :4.6 sec
Wait(5.5)

RunToLocation( whelp, 4, 840.562, -174.177, 425.55, 343.548, false )

RunToLocation( whelp, 5, 846.287, -169.814, 426.507, 45.4223, false )

Wait(4)
"
10683,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale INIT,"---------------
-- Functions --
---------------
function LightAdjust( actor )
	while true do
		local randVariance = math.random( 5, 20 )
		local randScale = randVariance/10
		local randWait = math.random( 1, 3 )
		actor:SetScale( randScale )
		local randVariance2 = math.random( 5, 10 )
		local randFade = randVariance2/10
		actor:Fade( randFade, randWait )
		Wait( randWait )
	end
end

--Changings an actor's facing to look at a target. Must Clear facing data to undo.
function FaceActor( actor, target )
	actor:ClearFacing()
	local targetPos = target:GetPosition()
	actor:SetFacingToAbs( targetPos )
end

----------
-- Init --
----------

--Spell Visual IDs
windSpellCastID = 25671

--------------
-- Spawning --
--------------

--Creature Actors
bunnyID = 62026
lightBunny = SpawnFadedActorAtPoint( bunnyID, 6345, true )
xuenCreatureID = 73126
chijiCreatureID = 73127
niuzaoCreatureID = 73130
monkeyKingCreatureID = 73133
shaohaoCreatureID = 73134
lorewalkerCreatureID = 73136
taranCreatureID = 71065
yulonCreatureID = 73128

lorewalker = SmoothPhaseSpawnActor( lorewalkerCreatureID, 1176.316040, 772.286438, 382.849365, 81, 1, true )
--taran = SmoothPhaseSpawnActor( taranCreatureID, 1184.347290, 792.234375, 382.326050, 0, 1, true )
SendTrigger( ""Smooth Phase Complete"" )

shaohao = SpawnActorAtPoint( shaohaoCreatureID, 6353, false )
--SpawnActor( shaohaoCreatureID, 1182.486084, 782.197937, 382.929779, 80, 1, false )
shaohao:Fade( 0, 0 )

--Model Actors
treeID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_ForestTree01.M2""
tree2ID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\GRAVESTONE\\PA_GraveStone_NoBase_03.M2""
lightShaftModelID = ""WORLD\\NODXT\\GENERIC\\PASSIVEDOODADS\\VOLUMETRICLIGHTS\\COT_lightshaftA.m2""
lightShaftModelID2 = ""WORLD\\ENVIRONMENT\\DOODAD\\ANQUIRAJ\\LIGHTSHAFT\\Hive_lightshaft01.m2""
glowModelID = ""WORLD\\EXPANSION03\\DOODADS\\DEEPHOLM\\GLOW\\DeepHolm_BluGrenBrtGlow_01.M2""
glowModelID2 = ""WORLD\\KALIMDOR\\SILITHUS\\PASSIVEDOODADS\\AHNQIRAJGLOW\\QuirajGlow.m2""
treeSappling1ID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_saplingDead01.M2""
treeSappling2ID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_saplingDead02.M2""
jadeSeedID = ""SPELLS\\Monk_Jade_Precast.M2""
shrineModelID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\BELL\\PA_Bell_01.M2""
shrineJadeVisualID = ""SPELLS\\Monk_TravelingMist_Impact.M2""
treeSparklesModelID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\veb_sparkle_01.M2""
jadeSpiritHighModelID = ""SPELLS\\JadeSpirit_High.M2""
haloModelID = ""WORLD\\EXPANSION03\\DOODADS\\DEEPHOLM\\GLOW\\DeepHolm_BluGrenBrtGlow_01.M2""

--Glowing Sphere
sphereModelID = ""Spells\\Enchantments\\YellowGlow_High.mdx""
sphereModelID2 = ""Spells\\ArcaneForceShield_Yellow.mdx""

sphere1 = SpawnModelActorAtPoint( sphereModelID, 6353, false )
sphere2 = SpawnModelActorAtPoint( sphereModelID2, 6353, false )
sphere1:Fade(0, 0)
sphere2:Fade(0, 0)
sphere1:SetScale( .3 )
sphere2:SetScale( .1 )

sphere1Offset = Vector:New( -.1, 0, 0 )
sphere2Offset = Vector:New( -.1, 0, -.1 )

RideVehicleActor( sphere1, shaohao, 0, AttachmentPoint.HandLeft, sphere1Offset )
RideVehicleActor( sphere2, shaohao, 0, AttachmentPoint.HandLeft, sphere2Offset )

--sphere1:SetRelativeTo( sphere2 )


--Shrub Models
shrubModel1 = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\GOLDENBUSH\\VEB_goldenbush01.M2""
shrubModel2 = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\GOLDENBUSH\\VEB_goldenbush02.M2""

--Shrine
shrine = SpawnModelActor( shrineModelID, 1198.95, 765.025, 382.268, 153.652, 1, false )

--Shrine Effects
shrineGlow = SpawnModelActor( glowModelID, 1193.741333, 770.125000, 383.542, 179, 1, false )
shrineGlow:Fade( 0, 0 )
shrineGlowJade = SpawnModelActor( shrineJadeVisualID, 1193.741333, 770.125000, 383.542, "
10684,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Tree Glow,"-- Tree Growing sequence
-- Starts with small tree growing at the emperor's touch.
-- Then during white out becomes big sparkly tree.
WaitForTrigger( ""Grow Tree"" )
treeFX:PlaySpellImpactVisual( 34398 )
StopLoopingSplitBodyAnim( tree, Animations.Stand )
PlayOneShotSplitBodyAnim( tree, Animations.Open )

Wait(5.53)
PlayLoopingSplitBodyAnim( tree, Animations.Opened )

WaitForTrigger( ""White Out"" )
--Wait(1)
tree:Fade( 0, 0 )
tree2:Fade( 1, 0 )
treeSparkles:Fade( .75, 0 )

for i=1, #shrubs do
	shrubs[i]:Fade(1, 0)
end


--WaitForTrigger( ""Tree Glow"" )
for i=1, #glows do
	scene:AddCoroutineWithParams( LightAdjust, glows[i] )
end
"
10698,[1] Vale of Eternal Blossoms 5.4: zto - Garrosh Finale INIT,"179, 1, false )
shrineGlowJade:Fade( 0, 0 ) 
shaohaoGlow = SpawnModelActor( jadeSpiritHighModelID, 0, 0, 0, 0, false )
shaohaoGlow:Fade( 0, 0 )
RideVehicleActor( shaohaoGlow, shaohao, 0, AttachmentPoint.Chest )
--RideVehicleActor( shrineGlow, shaohao, 0, AttachmentPoint.Base )
--RideVehicleActor( shrineGlowJade, shaohao, 0, AttachmentPoint.Base )

--Spawn lighting halo
halo = SpawnModelActor( haloModelID, 1193.741333, 770.125000, 383.542, 179, 1, false )
halo:Fade( 0, 0 )
local haloPos = Vector:New( -1, 0, 0 )
RideVehicleActor( halo, shaohao, 1, AttachmentPoint.Head, haloPos )

--Spawn Trees
tree2 = SpawnModelActor( treeID, 1185.194458, 796.005188, 382.226013, 359, .5, false )
tree2:Fade( 0, 0 )
tree = SpawnModelActor( tree2ID, 1185.194458, 796.005188, 382.226013, 359, 1, false )
PlayLoopingSplitBodyAnim( tree, Animations.Stand )
treeFX = SpawnActor( bunnyID, 1185.194458, 796.005188, 382.226013, 359, 1, false )

--Spawn tree Effects
light1 = SpawnModelActor( lightShaftModelID2, 1184.92, 795.91, 382.34, 95.4044, 1, false )
light1:Fade( 0, 0 )

glows = SpawnModelActorsAtPoints( glowModelID2, 6346, false )
for i=1, #glows do
	glows[i]:Fade( 0, 0 )
end


treeSparkles = SpawnModelActor( treeSparklesModelID, 1184.92, 795.91, 382.34, 95.4044, 1, true )
treeSparkles:Fade( 0, 0 )

--Spawn Player Clone
local playerData = scene:GetActivePlayerDisplay()
local playerPos = playerData:GetPosition()
clone = SpawnActivePlayerCloneActor ( playerPos.x, playerPos.y, playerPos.z, 221.428, 1, true )
clone:Fade( 0, 0 )

--Spawn Celestials
yulon = SpawnActorAtPoint( yulonCreatureID, 6381, false )
yulon:Fade( 0, 0 )

monkeyKing = SmoothPhaseSpawnActor( monkeyKingCreatureID, 1137.26, 771.993, 378.878, 1, 1, true )
monkeyKing:Fade( 0, 0 )

nuizhao = SmoothPhaseSpawnActor( niuzaoCreatureID, 1151.88, 806.552, 378.761, 0, 1, true )
nuizhao:Fade( 0, 0 )

chiji = SmoothPhaseSpawnActor( chijiCreatureID, 1225.23, 794.929, 379.883, 0, 1, true )
chiji:Fade( 0, 0 )

xuen = SmoothPhaseSpawnActor( xuenCreatureID, 1197.55, 831.865, 379.109, 0, 1, true )
xuen:Fade( 0, 0 )

--Spawn Shrubs
shrubs = SpawnModelActorsAtPoints( shrubModel1, 6394, false )

for i=1, #shrubs do
	shrubs[i]:Fade(0, 0)
end

--[[Jade Tornado Effect --NOT USED
jadeTornadoModelID = ""SPELLS\\Monk_RushingJadeWind_Missile.M2""
tornado = SpawnModelActor( jadeTornadoModelID, 1184.92, 795.91, 382.34, 359.229, 1, true )
tornado:Fade( 0, 0 )
]]--

-------------
-- Actions --
-------------
SendTrigger( ""Begin Scene"" )

while true do
	Wait( 300 )
end
"
10699,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Shaohao - Actions,"--Line 0
WaitForTrigger( ""Shaohao Arrives"" )
shaohao:PlayLoopingAnimKit( 1896 )
FaceActor( shaohao, clone )
Wait(1)
shaohao:FollowPathAtSpeed( 6352, 1, false )
shaohao:Fade( .75, 2 )
halo:Fade( .5, 2 )
SendTrigger( ""Shaohao Arrival Done"" )

--Line 1
WaitForTrigger( ""Line 1"" )
Wait(1)
halo:Fade( .25, 2 )


--Line 8
WaitForTrigger( ""Line 8"" )
FaceActor( shaohao, clone )
Wait(1)

--Line 12
WaitForTrigger( ""Line 12"" )
shaohao:Fade( 0, 0 )
halo:Fade( 0, 0 )
local moveData = MoveData:Default()
moveData.pathID = 6384
moveData.speed = 2
moveData.teleportToFirstPoint = true

shaohao:Move( moveData )

shaohao:WaitMovementComplete()
shaohao:Fade( .75, 2 )
halo:Fade( .5, 2 )
FaceActor( shaohao, tree )

--WaitForTrigger( ""Line 13"" )


----Tree Planting Scene ----
WaitForTrigger( ""Line 14"" )
sphere2:SetRelativeTo( sphere1 )
sphere1:Fade( 1, 2 )
sphere2:Fade( 1, 2 )
shaohao:PlayOneShotAnimKit( 4500 )
Wait(2)
shaohao:StopAnimKit( 1896 )
--PlayOneShotSplitBodyAnim( shaohao, Animations.Loot )
--Wait(1)
WaitJumpRideVehicleActor( sphere1, tree, 1, AttachmentPoint.Base )

SendTrigger( ""Grow Tree"" )
sphere1:Fade( 0, 1 )
sphere2:Fade( 0, 1 )

WaitForTrigger( ""White Out"" )
shaohao:Fade( 0, 1 )
"
10700,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Lorewalker,"WaitForTrigger( ""Begin Scene"" )
lorewalker:FollowPathAtSpeed( 6372, 2, true )
Wait(2)
SendTrigger( ""Begin Dialogue"" )
lorewalker:WaitMovementComplete()
FaceActor( lorewalker, shaohao )
PlayOneShotSplitBodyAnim( lorewalker, Animations.KneelStart )
SendTrigger( ""Begin Dialogue"" )
Wait( 2 )
PlayLoopingSplitBodyAnim( lorewalker, Animations.KneelLoop )


WaitForTrigger( ""Shaohao Arrives"" )
--FaceActor( taran, shaohao )


WaitForTrigger( ""Line 11"" )
StopLoopingSplitBodyAnim( lorewalker, Animations.KneelLoop )
lorewalker:ClearFacing()
lorewalker:FollowPathAtSpeed( 6383, 2, true )
local lorewalkermoveData = MoveData:Default()
lorewalkermoveData.pathID = 6383
lorewalkermoveData.speed = 2
lorewalkermoveData.teleportToFirstPoint = true

--lorewalker:Move( lorewalkermoveData )

lorewalker:WaitMovementComplete()
FaceActor( lorewalker, tree )

WaitForTrigger( ""Grow Tree"" )
FaceActor( lorewalker, tree )
--FaceActor( taran, tree )
"
10701,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Shaohao - MASTER,"WaitForTrigger( ""Begin Dialogue"" )
--Line 
lorewalker:BroadcastTextStereo(BroadcastType.Say, 75772) 
-- Dear Emperor. It is done. The darkness that you once struggled against has been purged from Pandaria - forever.
SendTrigger( ""Line -1"" )
Wait( 7 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)

--Line 
lorewalker:BroadcastTextStereo(BroadcastType.Say, 75773) 
-- But the cost... such a terrible cost.
SendTrigger( ""Line -2"" )
Wait( 5 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)
--Wait( .25 ) --Extra spacer to give the emperor time to arrive cause he's a boss yo

SendTrigger( ""Shaohao Arrives"" )

WaitForTrigger( ""Shaohao Arrival Done"" )
--Line 
-- 4.735
shaohao:BroadcastTextStereo(BroadcastType.Say, 75706) 
-- Do not despair the damage that was done here, Lorewalker.
SendTrigger( ""Line 1"" )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk ) --4.3
Wait( 4.33 )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteYes ) --4.33
shaohao:WaitBroadcastSoundComplete()
Wait(.5)

--Line 
-- 5.358
shaohao:BroadcastTextStereo(BroadcastType.Say, 75713) 
-- Yet you triumphed over the darkness I had locked away.
SendTrigger( ""Line 8"" )
shaohao:PlayLoopingAnimKit( 3229 )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteYes ) --4.33
Wait( 4.33 )
shaohao:WaitBroadcastSoundComplete()
shaohao:StopAnimKit( 3229 )
Wait(.5)

--Line 
-- 6.730
shaohao:BroadcastTextStereo(BroadcastType.Say, 75714) 
-- You have shown Pandaria the power of a true hero.
SendTrigger( ""Line 9"" )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk ) --4.3
shaohao:PlayLoopingAnimKit( 3229 )
Wait( 4 )
shaohao:WaitBroadcastSoundComplete()
shaohao:StopAnimKit( 3229 )
Wait(.5)

--Line 
-- 5.879
shaohao:BroadcastTextStereo(BroadcastType.Say, 75715) 
-- But the question still remains ... why do we fight?
SendTrigger( ""Line 10"" )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalkQuestion )
Wait( 4 )
shaohao:WaitBroadcastSoundComplete()
Wait(.5)

---- On Line 11 cue the Celestials ----

--Line 
-- 9.740
shaohao:BroadcastTextStereo(BroadcastType.Say, 75797) 
-- I trust you have learned: To fight out of fear or anger is to fight a war that never ends.
SendTrigger( ""Line 11"" )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
Wait( 8 )
shaohao:WaitBroadcastSoundComplete()
Wait(.5)

--Line 
-- 4.470
shaohao:BroadcastTextStereo(BroadcastType.Say, 75716) 
-- Face your fears.  Calm your hatreds.
SendTrigger( ""Line 12"" )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
Wait( 4 )
shaohao:WaitBroadcastSoundComplete()
Wait(.5)

--Line 
-- 8.301
shaohao:BroadcastTextStereo(BroadcastType.Say, 75717) 
-- Find peace within yourself, so that you may share it with the world around you.
SendTrigger( ""Line 13"" )
PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteTalk )
Wait( 4.3 )
PlayOneShotSplitBodyAnim( shaohao, Animations.CustomSpell03 )
Wait(2.9)
shaohao:WaitBroadcastSoundComplete()
Wait(.5)

---- On Line 14 cue the tree ----

--Line 
-- 4.150
shaohao:BroadcastTextStereo(BroadcastType.Say, 75718) 
-- These are the greatest treasures in life.
SendTrigger( ""Line 14"" )
--PlayOneShotSplitBodyAnim( shaohao, Animations.EmoteYes )
Wait( 4 )
shaohao:WaitBroadcastSoundComplete()
Wait(.5)

--Line 
-- 5.385
shaohao:BroadcastTextStereo(BroadcastType.Say, 75719) 
-- Surely they ... are worth fighting for.
SendTrigger( ""Line 15"" )
shaohao:PlayOneShotAnimKit( 4392 )
Wait( 4 )
shaohao:WaitBroadcastSoundComplete()
Wait(.5)
Wait(2)

--Line 
lorewalker:BroadcastTextStereo(BroadcastType.Say, 76063) 
-- Thank you, dear emperor
SendTrigger( ""Line 16"" )
PlayOneShotSplitBodyAnim( lorewalker, Animations.KneelStart )
Wait( 2 )
PlayLoopingSplitBodyAnim( lorewalker, Animations.KneelLoop )
Wait( 2 )
lorewalker:WaitBroadcastSoundComplete()
Wait(.75)
"
10703,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Camera,"--Camera Init
genericFOV90 = 368

--Begin scene
WaitForTrigger( ""Begin Scene"" )
scene:SetFadeRegion( 50, true )
scene:SetCamera(0, 0, nil, nil)
scene:TriggerServerEvent( ""PLAYER_TELEPORT"" )
SetCameraFollowPath( genericFOV90, 2, 6373, 6374, 20 )--Camera 1
--SetCameraFollowPath( genericFOV90, 2, 6355, 6356, 20 )--Camera 1
Wait(1)
scene:SetFadeRegion( 50, true )

WaitForTrigger( ""Line 1"" )
SetCameraFollowPath( genericFOV90, 5, 6385, 6386, 20 )--Camera 0a

--Line 11
WaitForTrigger( ""Line 10"" )
--Wait(2)
SetCameraFollowPath( genericFOV90, 4, 6379, 6380, 22 )--Camera 2

-- Line 14
WaitForTrigger( ""Line 13"" )
SetCameraFollowPath( genericFOV90, 4, 6387, 6388, 8 )--Camera 2

--Line 15
WaitForTrigger( ""Line 15"" )
Wait(2)
SendTrigger( ""White Out"" )
scene:ApplyScreenEffect( 1001 )
Wait(2)
SetCameraFollowPath( genericFOV90, 0, 6391, 6392, 8 )--Camera 2
scene:ClearScreenEffect( 1001 )

--Scene Ender
WaitForTrigger( ""Scene Wrap Up"" )
scene:SetCamera(0, 2, nil, nil)

"
10704,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - clone,"--WaitForTrigger( ""Line -1"" )
WaitForTrigger( ""Begin Scene"" )
clone:EquipWeapon( WeaponSlot.MainHand, 0 )
clone:EquipWeapon( WeaponSlot.OffHand, 0 )
Wait(1)
clone:Fade( 1, 2 )
clone:FollowPathAtSpeed( 6375, 2, true )
clone:WaitMovementComplete()
clone:PlayLoopingAnimKit( 3647 )

--Line 11
WaitForTrigger( ""Line 11"" )
clone:StopAnimKit( 3647 )
clone:FollowPathAtSpeed( 6382, 2, true )
local clonemoveData = MoveData:Default()
clonemoveData.pathID = 6382
clonemoveData.speed = 2
clonemoveData.teleportToFirstPoint = true

--clone:Move( clonemoveData )

clone:WaitMovementComplete()
FaceActor( clone, tree )"
10705,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Yulon,"WaitForTrigger( ""Line 9"" )

yulon:Fade( 1, 2 )
yulon:FollowPathAtSpeed( 6378, 24, false )
	
while true do
	yulon:FollowPathAtSpeed( 6365, 14, false )
	yulon:WaitMovementComplete()
end"
10706,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - monkeyKing,"WaitForTrigger( ""Line 20"" ) --Deprecated

monkeyKing:Fade( 1, 2 )

monkeyKing:FollowPathAtSpeed( 6366, 3, true )
monkeyKing:WaitMovementComplete()
RunToLocation( monkeyKing, 3, 1174.217041, 783.901062, 382.772522, 45, true )
monkeyKing:WaitMovementComplete()
PlayOneShotSplitBodyAnim( monkeyKing, Animations.SitGroundDown )
Wait(1.7)
PlayLoopingSplitBodyAnim( monkeyKing, Animations.SitGround )"
10707,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - nuizhao,"WaitForTrigger( ""Line 10"" )

nuizhao:Fade( 1, 2 )

nuizhao:FollowPathAtSpeed( 6369, 3, true )
nuizhao:WaitMovementComplete()
RunToLocation( nuizhao, 3, 1175.746582, 803.111145, 381.168152, 322, true )"
10708,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - chiji,"WaitForTrigger( ""Line 10"" )
chiji:Fade( 1, 2 )
chiji:FollowPathAtSpeed( 6370, 3, true )
chiji:WaitMovementComplete()
RunToLocation( chiji, 3, 1191.796875, 787.241333, 383.034302, 127, true )"
10709,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - xuen,"WaitForTrigger( ""Line 10"" )
xuen:Fade( 1, 2 )
xuen:FollowPathAtSpeed( 6371, 3, true )
xuen:WaitMovementComplete()
RunToLocation( xuen, 3, 1192.401001, 805.807312, 382.276764, 235, true )
xuen:WaitMovementComplete()
PlayOneShotSplitBodyAnim( xuen, Animations.SitGroundDown )
Wait(1)
PlayLoopingSplitBodyAnim( xuen, Animations.SitGround )"
10710,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - shrineGlow,"WaitForTrigger( ""Line -2"" )
shrineGlow:Fade( 1, 5 )
Wait(2)
shrineGlowJade:Fade( 1, 2 )
Wait(2)
shaohaoGlow:Fade( .5, 2 )"
10711,Vale of Eternal Blossoms 5.4: zto - Tree Final Ambience - INIT,"---------------
-- Functions --
---------------
function LightAdjust( actor )
	while true do
		local randVariance = math.random( 5, 20 )
		local randScale = randVariance/10
		local randWait = math.random( 1, 3 )
		actor:SetScale( randScale )
		local randVariance2 = math.random( 5, 10 )
		local randFade = randVariance2/10
		actor:Fade( randFade, randWait )
		Wait( randWait )
	end
end

--Changings an actor's facing to look at a target. Must Clear facing data to undo.
function FaceActor( actor, target )
	actor:ClearFacing()
	local targetPos = target:GetPosition()
	actor:SetFacingToAbs( targetPos )
end

--------------
-- Spawning --
--------------

--Model Actors
treeID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_ForestTree01.M2""
tree2ID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\GRAVESTONE\\PA_GraveStone_NoBase_03.M2""
lightShaftModelID = ""WORLD\\NODXT\\GENERIC\\PASSIVEDOODADS\\VOLUMETRICLIGHTS\\COT_lightshaftA.m2""
lightShaftModelID2 = ""WORLD\\ENVIRONMENT\\DOODAD\\ANQUIRAJ\\LIGHTSHAFT\\Hive_lightshaft01.m2""
glowModelID = ""WORLD\\EXPANSION03\\DOODADS\\DEEPHOLM\\GLOW\\DeepHolm_BluGrenBrtGlow_01.M2""
glowModelID2 = ""WORLD\\KALIMDOR\\SILITHUS\\PASSIVEDOODADS\\AHNQIRAJGLOW\\QuirajGlow.m2""
treeSappling1ID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_saplingDead01.M2""
treeSappling2ID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\TREES\\VEB_saplingDead02.M2""
jadeSeedID = ""SPELLS\\Monk_Jade_Precast.M2""
shrineModelID = ""WORLD\\EXPANSION04\\DOODADS\\PANDAREN\\BELL\\PA_Bell_01.M2""
shrineJadeVisualID = ""SPELLS\\Monk_TravelingMist_Impact.M2""
treeSparklesModelID = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\veb_sparkle_01.M2""
jadeSpiritHighModelID = ""SPELLS\\JadeSpirit_High.M2""
haloModelID = ""WORLD\\EXPANSION03\\DOODADS\\DEEPHOLM\\GLOW\\DeepHolm_BluGrenBrtGlow_01.M2""

--Shrub Models
shrubModel1 = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\GOLDENBUSH\\VEB_goldenbush01.M2""
shrubModel2 = ""WORLD\\EXPANSION04\\DOODADS\\VALEOFETERNALBLOSSOMS\\GOLDENBUSH\\VEB_goldenbush02.M2""

--Spawn tree Effects
light1 = SpawnModelActor( lightShaftModelID2, 1184.92, 795.91, 382.34, 95.4044, 1, false )
light1:Fade( .75, 0 )

glows = SpawnModelActorsAtPoints( glowModelID2, 6346, false )
for i=1, #glows do
	glows[i]:Fade( 0, 0 )
end

treeSparkles = SpawnModelActor( treeSparklesModelID, 1184.92, 795.91, 382.34, 95.4044, 1, true )
treeSparkles:Fade( .75, 0 )

shrubs = SpawnModelActorsAtPoints( shrubModel1, 6394, false )


-------------
-- Actions --
-------------

treeSparkles:PlaySoundKit( 39641, false ) --Tree ambient sound
--ClientScene_54_ValeHealing_Tree_State (39641)

--WaitForTrigger( ""Tree Glow"" )

for i=1, #glows do
	scene:AddCoroutineWithParams( LightAdjust, glows[i] )
end

while true do
	Wait( 300 )
end"
10714,Generic - Fade to Black - ZTO,"scene:SetCamera(0, 0, nil, nil)
scene:SetCamera(368, 0, nil, nil)
scene:ApplyScreenEffect( 827 )

while true do
	Wait(10)
end"
10727,Legendary 5.4 - Finale - Cloak Reveal - Xuen - ZTO,"----------
-- Init --
----------

bunnyID = 62026

--Camera Init
genericFOV90 = 368

--Cloak Effects
capeEffectXuen = 33636
capeEffectYulon = 33637
capeEffectNuizhao = 33638
capeEffectChiji = 33639

capeGlowsID = 33433

--Fireworks
fireworks = { 26964, 26971, 26972 }
allianceFirework = 28390
hordeFirework = 28390

--------------
-- Spawning --
--------------
fireworkBunnies = SpawnActorsAtPoints( bunnyID, 6422, false )
factionBunnies = SpawnActorsAtPoints( bunnyID, 6423, false )

clone = SpawnActivePlayerCloneActor (1396.24, 431.185, 601.399, 132, 10, false )
clone:PlaySpellStateVisual( 146731 )
clone:Fade(0, 0 )
wingVisual = clone:PlaySpellStateVisual( capeEffectXuen )

glowModelID = ""world\\expansion04\\doodads\\mantid\\mantid_beaconlight.mdx""
glow = SpawnModelActor( glowModelID, 1396.24, 431.185, 601.399, 132, 6, false )
glow:Fade( 0, 0 )

------------
-- Action --
------------
SetCameraFollowPath( genericFOV90, 3, 6416, 6417, 5 )--Camera 1
Wait(5)
scene:SetCamera( 537, 5, nil, nil )
clone:Fade( .9, 5 )
glow:Fade( .6, 5 )
SendTrigger( ""Begin Scene"" )
Wait(2)
SendTrigger( ""Fireworks"" )
Wait(8)
scene:SetCamera( 0, 5, nil, nil )
Wait(5)
scene:EndScene()
"
10729,Lorewalker Cho - 5.4: zto - Legendary - cloak crafting effects,"--[[Line 19
--WaitForTrigger( ""Line 1"" )
local wrathionFistPos = Vector:New( 0, -.5, 0 )
--RideVehicleActor( fireball, wrathion, 0, AttachmentPoint.SpellHandDirected, wrathionFistPos )
--fireball:HoldYawPitchRoll( 0, 270, 0, 100000, 0, 0 )

WaitForTrigger( ""Craft Cloak"" )
--vortex:Fade( .75, 2 )
--energyTrail = SpawnModelActorAtPoint( energyTrailModelID, 6419, false )
--fireWings:MoveToRel( Vector:New( 1, 0, 1 ), 1 )
--energyTrail:SetScale( .5 )
CastSpellAtActor( wrathion, wrathion, 146428 )
Wait(2.5)
--PlayLoopingSplitBodyAnim( wrathion, Animations.ChannelCastDirected )
--fxBunny:PlaySpellPreCastVisual( 33400 )
--fxBunny:PlaySpellCastVisual( 33400 )
--vortexSha:Fade( .75, 2 )
fireball:Fade( 1, 1 )

--Line 20
WaitForTrigger( ""Line 20"" )
--StopLoopingSplitBodyAnim( wrathion, Animations.ChannelCastDirected )
--StopLoopingSplitBodyAnim( wrathion, Animations.ChannelCastOmni )
Wait(1)

--Black Dragon
dragonWings:Fade(1, 1)
PlayOneShotSplitBodyAnim( dragonWings, Animations.Birth)
Wait(1)
PlayOneShotSplitBodyAnim( dragonWings, Animations.Despawn)
Wait(1)
dragonWings:Fade(0, 1)

--Ox
ox:Fade(1, 1)
PlayOneShotSplitBodyAnim( ox, Animations.Stand)
Wait(1)
--PlayOneShotSplitBodyAnim( ox, Animations.Decay)
--Wait(.33)
ox:Fade(0, 1)

--Tiger
tiger:Fade(.75, 1)
PlayOneShotSplitBodyAnim( tiger, Animations.MountSpecial)
Wait(1)
tiger:Fade(0, 1)

--crane
crane:Fade(.75, 1)
PlayOneShotSplitBodyAnim( crane, Animations.MountSpecial)
Wait(1)
crane:Fade(0, 1)

--dragon
dragon:Fade(1, 1)
PlayLoopingSplitBodyAnim( dragon, Animations.Hold)
Wait(1)
dragon:Fade(0, 1)


--fireball:Fade( 0, 1 )
--fireWings:Fade( 1, 1 )
fireball:SetRelativeTo( fireWings )

--fxBunny:PlaySpellCastVisual( 33750 )
--vortexSha:Fade( 0, 2 )
vortex:Fade( 0, 2 )
twilight:Fade( 0, 2 )
WaitForTrigger( ""Line 21"" )
JumpRideVehicleActor( fireWings, clone1, 2, AttachmentPoint.ChestBloodBack )
StopLoopingSplitBodyAnim( wrathion, Animations.ChannelCastDirected )
Wait(2)
fireWings:Fade( 0, 1 )
fireball:Fade( 0, 1 )
clone1:PlaySpellCastVisual( 33400 )
SendTrigger( ""Wing Impact"" )]]--"
10730,[2] Lorewalker Cho - 5.4: zto - Legendary - Init     ,"moguMaceCreatureID = 62427
moguFistCreatureID = 62428
moguCasterCreatureID = 61898
terrorcottaCreatureID = 62639
moguCivilianCreatureID = 70116
quilenCreatureID = 63627

-- Spawning
moguSoldiers = SpawnFadedActorsAtPoints( moguPolearmCreatureID, 6295, true )
quilen = SpawnFadedActorsAtPoints( quilenCreatureID, 6296, true )
moguCaster = SpawnFadedActorsAtPoints( moguCasterCreatureID, 6297, true )

---- Thunderking ----
-- Creature IDs
thunderKingCreatureID = 69654
dinoCreatureID = 69161
twin1CreatureID = 68905
twin2CreatureID = 68904

-- Spawning
thunderKing = SpawnActorAtPoint( thunderKingCreatureID, 6337, true )
thunderKing:Fade( 0, 0 )
thunderKing:SetScale( .5 )

--Spawn Organized Mogu
organizedMogu = SpawnFadedActorsAtPoints( moguCasterCreatureID, 6338, true)
for i=1, #organizedMogu do
	organizedMogu[i]:SetScale(.75)
end

-- Spawn Dinosaur
dino = SpawnActorAtPoint( dinoCreatureID, 6339, true )
dino:Fade( 0, 0 )
dino:SetScale( .25 )

twin1 = SpawnActorAtPoint( twin1CreatureID, 6340, true )
twin2 = SpawnActorAtPoint( twin2CreatureID, 6341, true )
twin1:Fade( 0, 0 )
twin2:Fade( 0, 0 )
twin1:SetScale( .5 )
twin2:SetScale( .5 )

-------------------
-- Player Clones --
-------------------

--SpawnPlayerClones
clone1 = SpawnActivePlayerCloneActor (1457.27, 365.981, 550.285, 131.948, 1, true )
FadeOut( clone1, 0 )

haloModelID = ""WORLD\\EXPANSION03\\DOODADS\\DEEPHOLM\\GLOW\\DeepHolm_BluGrenBrtGlow_01.M2""
halo = SpawnModelActor( haloModelID, 1457.27, 365.981, 551.285, 131.548, .5, false )
halo:Fade( 0, 0 )
local haloPos = Vector:New( -.5, 0, 0 )
RideVehicleActor( halo, clone1, 1, AttachmentPoint.Head, haloPos )


--[[clone2 = SpawnActivePlayerCloneActor (1463.39, 371.432, 550.284, 18.1214, 1, true )
FadeOut( clone2, 0 )

clone3 = SpawnActivePlayerCloneActor (1450.81, 359.435, 550.284, 245.822, 1, true )
FadeOut( clone3, 0 )]]--

---------------
-- Constants --
---------------

--Set Faction for Scene. 
-- 0 = Horde
-- 1 = Alliance
faction = GetFakeFaction( clone1 )
SendTrigger( ""Faction Prep"" )


----------
-- Prep --
----------

-- Fade Out until called
FadeOut( light_ul,0 )
FadeOut( light_uc,0 )
FadeOut( light_ur,0 )
FadeOut( light_cl,0 )
FadeOut( light_cc,0 )
FadeOut( light_cr,0 )
FadeOut( light_dc,0 )
Wait(1)
-- Setup light
light_ul:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_uc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_ur:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cl:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_cr:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual
light_dc:PlaySpellStateVisual(24841) --Cast Stage Dressing Visual

"
10731,Lorewalker Cho - 5.4: zto - Legendary - factions - cannons,"WaitForTrigger( ""Line 12"" )
for i=1, #cannonTargets do
	local actor = cannonTargets[i]
	CastSpellAtActor(actor, actor, beachExplosion)
	local rand = math.random( 1, 10 )
	local waitTime = rand/10
	Wait( waitTime )
end"
10732,Legendary 5.4 - Finale - Cloak Reveal - Fireworks - ZTO,"----------------------
-- Helper Functions --
----------------------

Race =
{
	Human				=  1;
	Orc					=  2;
	Dwarf				=  3;
	NightElf			=  4;
	Undead				=  5;
	Tauren				=  6;
	Gnome				=  7;
	Troll				=  8;
	BloodElf			=  10;
	Draenei				=  11;
	PandarenHorde		=  2402;
	PandarenAlliance	=  2401;
}

AllianceRace =
{
	Human				=  1;
	Dwarf				=  3;
	NightElf			=  4;
	Gnome				=  7;
	Draenei				=  11;
	PandarenAlliance	=  2401;
}

HordeRace =
{
	Orc					=  2;
	Undead				=  5;
	Tauren				=  6;
	Troll				=  8;
	BloodElf			=  10;
	PandarenHorde		=  2402;
}

AllianceRaces = { 1, 3, 4, 7, 11, 2401 }
HordeRaces = { 2, 5, 6, 8, 10, 2402 }

function GetFakeFaction( actor )
	local actorRace = actor:GetRaceID( true )
	local actorFaction = 0
	for i=1, #AllianceRaces do
		if (actorRace == AllianceRaces[i]) then
			actorFaction = 1
		end
	end
	return actorFaction
end

function Fireworks()
	while true do
		local randBunny = fireworkBunnies[math.random(#fireworkBunnies)]
		local firework = fireworks[math.random(#fireworks)]
		randBunny:PlaySpellCastVisual( firework )
		--randBunny:PlaySoundKitStereo( 2549, true ) 
		Wait(1)
	end
end

--Wait for Fireworks cue
WaitForTrigger( ""Fireworks"" )
local cloneFaction = GetFakeFaction( clone )
scene:AddCoroutine( Fireworks )
--Wait(2)
local factionFirework
if (cloneFaction == 0) then
	factionFirework = 28390
else
	factionFirework = 28391
end	

--allianceFirework = 28390
--hordeFirework = 28391
for i=1, #factionBunnies do
	factionBunnies[i]:PlaySpellCastVisual( factionFirework )
	factionBunnies[i]:PlaySoundKitStereo( 2549, true ) 
end"
10735,Legendary 5.4 - Finale - Cloak Reveal - Nuizhao - ZTO,"----------
-- Init --
----------

bunnyID = 62026

--Camera Init
genericFOV90 = 368

--Cloak Effects
capeEffectXuen = 33636
capeEffectYulon = 33637
capeEffectNuizhao = 33638
capeEffectChiji = 33639

capeGlowsID = 33433

--Fireworks
fireworks = { 26964, 26971, 26972 }
allianceFirework = 28390
hordeFirework = 28390

--------------
-- Spawning --
--------------
fireworkBunnies = SpawnActorsAtPoints( bunnyID, 6422, false )
factionBunnies = SpawnActorsAtPoints( bunnyID, 6423, false )

clone = SpawnActivePlayerCloneActor (1396.24, 431.185, 601.399, 132, 10, false )
clone:PlaySpellStateVisual( 146731 )
clone:Fade(0, 0 )
wingVisual = clone:PlaySpellStateVisual( capeEffectNuizhao )

glowModelID = ""world\\expansion04\\doodads\\mantid\\mantid_beaconlight.mdx""
glow = SpawnModelActor( glowModelID, 1396.24, 431.185, 601.399, 132, 6, false )
glow:Fade( 0, 0 )

------------
-- Action --
------------
SetCameraFollowPath( genericFOV90, 3, 6416, 6417, 5 )--Camera 1
Wait(5)
scene:SetCamera( 537, 5, nil, nil )
clone:Fade( .9, 5 )
glow:Fade( .6, 5 )
SendTrigger( ""Begin Scene"" )
Wait(2)
SendTrigger( ""Fireworks"" )
Wait(8)
scene:SetCamera( 0, 5, nil, nil )
Wait(5)
scene:EndScene()
"
10736,Legendary 5.4 - Finale - Cloak Reveal - Fireworks - ZTO,"----------------------
-- Helper Functions --
----------------------

Race =
{
	Human				=  1;
	Orc					=  2;
	Dwarf				=  3;
	NightElf			=  4;
	Undead				=  5;
	Tauren				=  6;
	Gnome				=  7;
	Troll				=  8;
	BloodElf			=  10;
	Draenei				=  11;
	PandarenHorde		=  2402;
	PandarenAlliance	=  2401;
}

AllianceRace =
{
	Human				=  1;
	Dwarf				=  3;
	NightElf			=  4;
	Gnome				=  7;
	Draenei				=  11;
	PandarenAlliance	=  2401;
}

HordeRace =
{
	Orc					=  2;
	Undead				=  5;
	Tauren				=  6;
	Troll				=  8;
	BloodElf			=  10;
	PandarenHorde		=  2402;
}

AllianceRaces = { 1, 3, 4, 7, 11, 2401 }
HordeRaces = { 2, 5, 6, 8, 10, 2402 }

function GetFakeFaction( actor )
	local actorRace = actor:GetRaceID( true )
	local actorFaction = 0
	for i=1, #AllianceRaces do
		if (actorRace == AllianceRaces[i]) then
			actorFaction = 1
		end
	end
	return actorFaction
end

function Fireworks()
	while true do
		local randBunny = fireworkBunnies[math.random(#fireworkBunnies)]
		local firework = fireworks[math.random(#fireworks)]
		randBunny:PlaySpellCastVisual( firework )
		--randBunny:PlaySoundKitStereo( 2549, true ) 
		Wait(1)
	end
end

--Wait for Fireworks cue
WaitForTrigger( ""Fireworks"" )
local cloneFaction = GetFakeFaction( clone )
scene:AddCoroutine( Fireworks )
--Wait(2)
local factionFirework
if (cloneFaction == 0) then
	factionFirework = 28390
else
	factionFirework = 28391
end	

--allianceFirework = 28390
--hordeFirework = 28391
for i=1, #factionBunnies do
	factionBunnies[i]:PlaySpellCastVisual( factionFirework )
	factionBunnies[i]:PlaySoundKitStereo( 2549, true ) 
end"
10737,Legendary 5.4 - Finale - Cloak Reveal - Chiji - ZTO,"----------
-- Init --
----------

bunnyID = 62026

--Camera Init
genericFOV90 = 368

--Cloak Effects
capeEffectXuen = 33636
capeEffectYulon = 33637
capeEffectNuizhao = 33638
capeEffectChiji = 33639

capeGlowsID = 33433

--Fireworks
fireworks = { 26964, 26971, 26972 }
allianceFirework = 28390
hordeFirework = 28390

--------------
-- Spawning --
--------------
fireworkBunnies = SpawnActorsAtPoints( bunnyID, 6422, false )
factionBunnies = SpawnActorsAtPoints( bunnyID, 6423, false )

clone = SpawnActivePlayerCloneActor (1396.24, 431.185, 601.399, 132, 10, false )
clone:PlaySpellStateVisual( 146731 )
clone:Fade(0, 0 )
wingVisual = clone:PlaySpellStateVisual( capeEffectChiji )

glowModelID = ""world\\expansion04\\doodads\\mantid\\mantid_beaconlight.mdx""
glow = SpawnModelActor( glowModelID, 1396.24, 431.185, 601.399, 132, 6, false )
glow:Fade( 0, 0 )

------------
-- Action --
------------
SetCameraFollowPath( genericFOV90, 3, 6416, 6417, 5 )--Camera 1
Wait(5)
scene:SetCamera( 537, 5, nil, nil )
clone:Fade( .9, 5 )
glow:Fade( .6, 5 )
SendTrigger( ""Begin Scene"" )
Wait(2)
SendTrigger( ""Fireworks"" )
Wait(8)
scene:SetCamera( 0, 5, nil, nil )
Wait(5)
scene:EndScene()
"
10738,Legendary 5.4 - Finale - Cloak Reveal - Chiji - Fireworks - ZTO,"----------------------
-- Helper Functions --
----------------------

Race =
{
	Human				=  1;
	Orc					=  2;
	Dwarf				=  3;
	NightElf			=  4;
	Undead				=  5;
	Tauren				=  6;
	Gnome				=  7;
	Troll				=  8;
	BloodElf			=  10;
	Draenei				=  11;
	PandarenHorde		=  2402;
	PandarenAlliance	=  2401;
}

AllianceRace =
{
	Human				=  1;
	Dwarf				=  3;
	NightElf			=  4;
	Gnome				=  7;
	Draenei				=  11;
	PandarenAlliance	=  2401;
}

HordeRace =
{
	Orc					=  2;
	Undead				=  5;
	Tauren				=  6;
	Troll				=  8;
	BloodElf			=  10;
	PandarenHorde		=  2402;
}

AllianceRaces = { 1, 3, 4, 7, 11, 2401 }
HordeRaces = { 2, 5, 6, 8, 10, 2402 }

function GetFakeFaction( actor )
	local actorRace = actor:GetRaceID( true )
	local actorFaction = 0
	for i=1, #AllianceRaces do
		if (actorRace == AllianceRaces[i]) then
			actorFaction = 1
		end
	end
	return actorFaction
end

function Fireworks()
	while true do
		local randBunny = fireworkBunnies[math.random(#fireworkBunnies)]
		local firework = fireworks[math.random(#fireworks)]
		randBunny:PlaySpellCastVisual( firework )
		--randBunny:PlaySoundKitStereo( 2549, true ) 
		Wait(1)
	end
end

--Wait for Fireworks cue
WaitForTrigger( ""Fireworks"" )
local cloneFaction = GetFakeFaction( clone )
scene:AddCoroutine( Fireworks )
--Wait(2)
local factionFirework
if (cloneFaction == 0) then
	factionFirework = 28390
else
	factionFirework = 28391
end	

--allianceFirework = 28390
--hordeFirework = 28391
for i=1, #factionBunnies do
	factionBunnies[i]:PlaySpellCastVisual( factionFirework )
	factionBunnies[i]:PlaySoundKitStereo( 2549, true ) 
end"
10739,Legendary 5.4 - Finale - Cloak Reveal - Yulon - ZTO,"----------
-- Init --
----------

bunnyID = 62026

--Camera Init
genericFOV90 = 368

--Cloak Effects
capeEffectXuen = 33636
capeEffectYulon = 33637
capeEffectNuizhao = 33638
capeEffectChiji = 33639

capeGlowsID = 33433

--Fireworks
fireworks = { 26964, 26971, 26972 }
allianceFirework = 28390
hordeFirework = 28390

--------------
-- Spawning --
--------------
fireworkBunnies = SpawnActorsAtPoints( bunnyID, 6422, false )
factionBunnies = SpawnActorsAtPoints( bunnyID, 6423, false )

clone = SpawnActivePlayerCloneActor (1396.24, 431.185, 601.399, 132, 10, false )
clone:PlaySpellStateVisual( 146731 )
clone:Fade(0, 0 )
wingVisual = clone:PlaySpellStateVisual( capeEffectYulon )

glowModelID = ""world\\expansion04\\doodads\\mantid\\mantid_beaconlight.mdx""
glow = SpawnModelActor( glowModelID, 1396.24, 431.185, 601.399, 132, 6, false )
glow:Fade( 0, 0 )

------------
-- Action --
------------
SetCameraFollowPath( genericFOV90, 3, 6416, 6417, 5 )--Camera 1
Wait(5)
scene:SetCamera( 537, 5, nil, nil )
clone:Fade( .9, 5 )
glow:Fade( .6, 5 )
SendTrigger( ""Begin Scene"" )
Wait(2)
SendTrigger( ""Fireworks"" )
Wait(8)
scene:SetCamera( 0, 5, nil, nil )
Wait(5)
scene:EndScene()
"
10740,Legendary 5.4 - Finale - Cloak Reveal - Yulon - Fireworks - ZTO,"----------------------
-- Helper Functions --
----------------------

Race =
{
	Human				=  1;
	Orc					=  2;
	Dwarf				=  3;
	NightElf			=  4;
	Undead				=  5;
	Tauren				=  6;
	Gnome				=  7;
	Troll				=  8;
	BloodElf			=  10;
	Draenei				=  11;
	PandarenHorde		=  2402;
	PandarenAlliance	=  2401;
}

AllianceRace =
{
	Human				=  1;
	Dwarf				=  3;
	NightElf			=  4;
	Gnome				=  7;
	Draenei				=  11;
	PandarenAlliance	=  2401;
}

HordeRace =
{
	Orc					=  2;
	Undead				=  5;
	Tauren				=  6;
	Troll				=  8;
	BloodElf			=  10;
	PandarenHorde		=  2402;
}

AllianceRaces = { 1, 3, 4, 7, 11, 2401 }
HordeRaces = { 2, 5, 6, 8, 10, 2402 }

function GetFakeFaction( actor )
	local actorRace = actor:GetRaceID( true )
	local actorFaction = 0
	for i=1, #AllianceRaces do
		if (actorRace == AllianceRaces[i]) then
			actorFaction = 1
		end
	end
	return actorFaction
end

function Fireworks()
	while true do
		local randBunny = fireworkBunnies[math.random(#fireworkBunnies)]
		local firework = fireworks[math.random(#fireworks)]
		randBunny:PlaySpellCastVisual( firework )
		--randBunny:PlaySoundKitStereo( 2549, true ) 
		Wait(1)
	end
end

--Wait for Fireworks cue
WaitForTrigger( ""Fireworks"" )
local cloneFaction = GetFakeFaction( clone )
scene:AddCoroutine( Fireworks )
--Wait(2)
local factionFirework
if (cloneFaction == 0) then
	factionFirework = 28390
else
	factionFirework = 28391
end	

--allianceFirework = 28390
--hordeFirework = 28391
for i=1, #factionBunnies do
	factionBunnies[i]:PlaySpellCastVisual( factionFirework )
	factionBunnies[i]:PlaySoundKitStereo( 2549, true ) 
end"
10750,Legendary 5.4 - Finale - Cloak Reveal - Lorewalker,"----------
-- Init --
----------

-- Spawn Lorewalker Cho
lorewalkerChoID = 61897
lorewalker = SpawnActor( lorewalkerChoID, 1447.18, 371.453, 550.221, 93.5645 )  -- Lorewalker Cho spawns where the normal NPC is
lorewalker:Fade(0, 0)

WaitForTrigger( ""Begin Scene"" )
lorewalker:BroadcastTextStereo(BroadcastType.Yell, 75115) "
10751,Garrosh Raid - Siege Engineer - Wing Intro Scene - Main,"ironStarID 			= 73059
blackfuseID 		= 72694
moiraID				= 70279
grizzleID			= 73564
molemachineID 		= 73569
genericFOV90 		= 368
ironforgeGuardID 	= 42783
gorodanID			= 72964
aggronID			= 72981
shannaID			= 72986
korkronID			= 73098
goblinTrash1ID		= 73091
goblinTrash2ID		= 73095
suitID				= 71504


scene:ApplyScreenEffect(827)

ironstar = SpawnActorAtPoint( ironStarID, 6445, true)
ironstar:PlayLoopingAnimKit(4397)
blackfuse	= SpawnActorAtPoint( blackfuseID, 6446, true)
blackfuseChannel	= blackfuse:PlaySpellChannelVisualAtTargets(34048, {ironstar})
blackfuseState		= blackfuse:PlaySpellStateVisual(34048)
blackfuse:PlayLoopingAnimKit(4512)
--if (scene:GetWorldState(4485) == 1) then
goblinTrash1 = SpawnActorsAtPoints( goblinTrash1ID, 6581, true )
goblinTrash2 = SpawnActorsAtPoints( goblinTrash2ID, 6582, true )
aggron = SpawnActorsAtPoints( aggronID , 6583, true )
gorodan = SpawnActorsAtPoints( gorodanID , 6586, true )
shanna = SpawnActorAtPoint( shannaID , 6587, false )
shannaState = shanna:PlaySpellStateVisual(33375)

suit = SpawnActorAtPoint( suitID, 6588, true)
suit:PlayLoopingAnimKit(4499)
scene:SetFadeRegion(2000, true)

raid = SpawnPlayerGroupAtPoints(6608, 1, true)
Wait(1)
scene:ClearScreenEffect(827)
SendTrigger(""SceneStart"")

--end"
10752,Garrosh Raid - Siege Engineer - Wing Intro Scene - Blackfuse,"WaitForTrigger(""Blackfuse001"")
blackfuse:ClearSpellVisual( blackfuseState)
ironstar:ClearSpellChannelVisual(34048, blackfuseChannel)
blackfuse:StopAnimKit(4512)
blackfuse:SetFacing(124)
SayText(blackfuse, 74626)
blackfuse:PlayMusic(39628)
blackfuse:WaitPlayOneShotFullBodyAnim(Animations.EmotePoint)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
blackfuse:WaitBroadcastSoundComplete()
SendTrigger(""Blackfuse001Done"")
SayTextWithAnim(blackfuse, 74625, Animations.EmoteTalk)
Wait(3.5)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
MoveCameraToPathStart( genericFOV90, 3, 6554, 6555)
blackfuse:WaitBroadcastSoundComplete()
Wait(1)
SendTrigger(""Blackfuse002Done"")


WaitForTrigger(""IronStarGoGoGo"")
Wait(2)
MoveCameraToPathStart( genericFOV90, 0, 6554, 6555)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmotePoint)
ironstar:StopAnimKit(1267)
ironstar:PlayOneShotFullBodyAnim(Animations.Custom1)
Wait(1.4)
SetCameraFollowPath( genericFOV90, 0, 6554, 6555, 1)
ironstar:StopAnimKit(AnimKits.OneShotFullBody)
ironstar:FollowPathAtSpeed ( 6472, 18, false, 4402)
Wait(1.5)
ironstar:PlayLoopingAnimKit(4485)
Wait(.2)
ironstar:StopMovement()
SendTrigger(""IronStarExplode"")
Wait(2)
ironstar:Despawn()


WaitForTrigger(""BlackfuseLaugh"")
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
SayTextWithAnim(blackfuse, 75813, Animations.EmoteLaugh)
blackfuse:WaitBroadcastSoundComplete()
Wait(1)
SendTrigger(""BlackfuseLaughDone"")


WaitForTrigger(""BlackfuseEscape"")
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
blackfuse:FollowPathAtSpeed( 6560, 14, false)
blackfuse:WaitMovementComplete()
local jumpPoint = scene:LoadPath(6561).nodes[1].pos
blackfuse:JumpToAbs(jumpPoint, 2, 20)
Wait(3)
destPoint = scene:LoadPath(6563).nodes[1]
destPointTransform = {	position	= destPoint.pos,
						roll		= destPoint.rot.x,
						pitch		= destPoint.rot.y,
						yaw			= destPoint.rot.z,
}
blackfuse:StopMovement()
blackfuse:SetTransform(destPointTransform)
MoveCameraToPathStart( genericFOV90, 0, 6564, 6566 )
blackfuse:PlaySoundKit(39527, true)

local jumpPoint2 = scene:LoadPath(6562).nodes[1].pos
blackfuse:JumpToAbs(jumpPoint2, 2, 20)
Wait(4.5)
blackfuse:StopMovement()
SetCameraFollowPath( genericFOV90, 0, 6564, 6566, 5)
blackfuse:FollowPathAtSpeed( 6562, 14, false)
Wait(1)
SayText(blackfuse, 74656)
blackfuse:WaitMovementComplete()
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
local pipePoints = scene:LoadPath(6589).nodes
aggron = SpawnActorAtVector(aggronID, pipePoints[2].pos)
trash1 = SpawnActorAtVector(goblinTrash1ID, pipePoints[1].pos) 
trash2 = SpawnActorAtVector(goblinTrash2ID, pipePoints[3].pos)
aggron:JumpToAbs(pipePoints[5].pos, 2,25)
trash1:JumpToAbs(pipePoints[4].pos, 2,25)
trash2:JumpToAbs(pipePoints[6].pos, 2,25)
aggron:PlaySoundKit(39527, true)
Wait(.5)
trash1:PlaySoundKit(39527, true)
aggron:WaitMovementComplete()
korkron = SpawnActorAtVector(korkronID, pipePoints[2].pos)
trash3 = SpawnActorAtVector(goblinTrash1ID, pipePoints[1].pos) 
trash4 = SpawnActorAtVector(goblinTrash2ID, pipePoints[3].pos)
korkron:JumpToAbs(pipePoints[5].pos, 2, 25)
trash3:JumpToAbs(pipePoints[4].pos, 2, 25)
trash4:JumpToAbs(pipePoints[6].pos, 2, 25)
korkron:PlaySoundKit(39527, true)
Wait(.5)
trash3:PlaySoundKit(39527, true)
aggron:PlayLoopingAnimKit(4514)
trash1:PlayLoopingAnimKit(4514)
trash2:PlayLoopingAnimKit(4514)
aggron:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash1:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash2:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
korkron:WaitMovementComplete()
korkron:FollowRelativePathAtSpeed ( 6471,24, true, 4514)
trash3:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash4:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
"
10753,Garrosh Raid - Siege Engineer - Wing Intro Scene - Alliance,"	WaitForTrigger(""SceneStart"")
	MoveCameraToPathStart( genericFOV90, 0, 6516, 6524)
	blackfuse:PlayMusic(39594)

	local raidPoints2 = scene:LoadPath(6612)
	for k,v in pairs(raid) do
		local raidPoint2 = raidPoints2.nodes[k].pos
		RunToLocation( v, 7, raidPoint2.x, raidPoint2.y, raidPoint2.z, 305.7, true )		
	end
	Wait(2)
	SetCameraFollowPath( genericFOV90, 0, 6516, 6524, 8)
	Wait(2)
	dirt = SpawnModelActorAtPoint( ""spells\\BurrowEarth_Brown_Missile_V3.M2"", 6450, true, 3)
	crack = SpawnModelActorAtPoint( ""spells\\GroundCrack_Physical_State.M2"", 6450, true)
	dirt:PlayLoopingAnimKit(2807)
	crack:PlayLoopingAnimKit(2807)
	Wait(2)
	moleMachine = SpawnActorAtPoint( molemachineID, 6450, true)
	moleMachine:PlayOneShotFullBodyAnim(Animations.Spawn)
	moleMachine:PlaySoundKit(39524, true)
	dirt:Despawn()
	crack:Despawn()
	Wait(4)
	ifGuards = SpawnActorsAtPoints( ironforgeGuardID, 6466, true )
	for k,v in pairs(ifGuards) do
		v:FollowRelativePathAtSpeed ( 6468, 7, true)
	end
	moira = SpawnActorAtPoint( moiraID , 6450, true)
	moira:FollowPathAtSpeed( 6451, 7, false)
	Wait(2)
	SayTextWithAnim(moira, 76178, Animations.EmoteRoar, true)
	SendTrigger(""MoleMachineOutro"")
	Wait(4)
	MoveCameraToPathStart( genericFOV90, 0, 6533, 6526)
	moira:FollowPathAtSpeed( 6454, 7, false)
	Wait(2)
	for k,v in pairs(raid) do
		v:PlayOneShotFullBodyAnim(Animations.EmoteSalute)
	end
	moira:WaitMovementComplete()
	SayTextWithAnim(moira, 76179, Animations.EmoteSalute)
	Wait(2)
	SetCameraFollowPath( genericFOV90, 0, 6534, 6540, 3)
	moira:WaitBroadcastSoundComplete()
	Wait(1)
	SendTrigger(""Blackfuse001"")
	moira:FollowPathAtSpeed( 6465, 7, false)
	guardPoints = scene:LoadPath(6469)
	for k,v in pairs(ifGuards) do
		local point = guardPoints.nodes[k].pos
		RunToLocation( v, 7, point.x, point.y, point.z, guardPoints.nodes[k].rot.z, true )		
	end
	moira:WaitMovementComplete()
	for k,v in pairs(ifGuards) do
		v:SetFacing(guardPoints.nodes[k].rot.z)
	end
	WaitForTrigger(""Blackfuse002Done"")
	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)
	local raidPoints3 = scene:LoadPath(6616)
	for k,v in pairs(raid) do
		local raidPoint3 = raidPoints3.nodes[k].pos
		RunToLocation( v, 7, raidPoint3.x, raidPoint3.y, raidPoint3.z, 305.7, true )		
	end
	SayTextWithAnim(moira, 76180, Animations.EmotePoint)
	Wait(3)
	moira:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
	if (raid[1]) then
		raid[1]:WaitMovementComplete()
	end
	for k,v in pairs(raid) do
		v:PlayLoopingAnimKit(2923)
	end
	moira:WaitBroadcastSoundComplete()
	for k,v in pairs(ifGuards) do
		if (k < #ifGuards) then 
			v:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
		else
			v:WaitPlayOneShotFullBodyAnim(Animations.EmoteCheer)
		end
	end
	SendTrigger(""IronStarGoGoGo"")
	for k,v in pairs(ifGuards) do
		v:FollowRelativePathAtSpeed ( 6471, 10, true)
	end
	WaitForTrigger(""IronStarExplode"")
	for k,v in pairs(ifGuards) do
		v:StopMovement()
		v:PlayLoopingAnimKit(1669)
	end
	Wait(1)
	SendTrigger(""BlackfuseLaugh"")
	moira:FollowPathAtSpeed( 6496, 7, false)
	WaitForTrigger(""BlackfuseLaughDone"")
	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)

	moira:PlayOneShotAnimKit(4486)
	SayText(moira,76181)
	moira:WaitBroadcastSoundComplete()
	SendTrigger(""BlackfuseEscape"")
	for k,v in pairs(raid) do
		v:Despawn()
	end
	moira:Despawn()
"
10757,Garrosh Raid - Siege Engineer - Wing Intro Scene - Alliance - Mole Machine Outro,"	WaitForTrigger(""MoleMachineOutro"")
	moleMachine:PlaySoundKit(39525, true)
	moleMachine:PlayLoopingAnimKit(4483)
	Wait(4)
	moleMachine:Fade(0,0)
	moleMachine:Despawn()
"
10775,Mechanical - SMACKTHAT,"function Mechanical_SMACKTHAT(ROID, isTurn, turn)
	print(""We are in SMACKTHAT"")
	if (turn.class ~= ""turn"") then 
		print(""Error: Mechanical_SMACKTHAT only supports turn objects"");
	end

	local pet = ROIDTOPET(ROID);
	if (not pet or (pet and pet.isPad)) then
		return;
	end

	local turnVisualID = turn.turnVisualID;

	pet.actor:BroadcastTextStereo(BroadcastType.Say, 76568)

	-- Handle all effects
	for index=2,#turn.effects do 
		local effect = turn.effects[index];

		-- Default Visual 
		DefaultEffectVisualHandler(ROID, effect, turnVisualID);
		DefaultDoEffectProcessing(ROID, ""effect"", effect); 
	end 

	-- Pause
	DefaultTurnCleanUp(ROID);
end"
10776,Lorewalker Cho - 5.4: zto - Legendary - Cloak Effects,"function CelestialRoundUp( actor, celestialVisual )
	actor:Fade( .75, 1 )
	actor:PlayLoopingAnimKit( 4517 )
	local actorPos = actor:GetPosition()
	actorPos.z = actorPos.z + 1
	local bunnyVehicle = SpawnActor( bunnyCreatureID, actorPos.x, actorPos.y, actorPos.z, 0, 1, false )
	FaceActor( bunnyVehicle, cloakMaster )
	WaitForTrigger( ""Celestial Temper"" )
	--actor:SetRelativeTo( bunnyVehicle )
	PlayOneShotSplitBodyAnim( actor, Animations.EmoteRoar )
	bunnyVehicle:PlaySpellCastVisual( 34068 )
	local visual = bunnyVehicle:PlaySpellStateVisual( celestialVisual )
	local cloakLoc = cloakMaster:GetPosition()
	bunnyVehicle:SetScale( .01 )
	--RunToLocation( bunnyVehicle, 1, cloakLoc.x, cloakLoc.y, cloakLoc.z, 0, false )
	--bunnyVehicle:FollowPathAtSpeed( 6609, 2, false )
	--bunnyVehicle:WaitMovementComplete()
	actor:Fade( 0, 1 )
	JumpRideVehicleActor( bunnyVehicle, cloakMaster, 2, AttachmentPoint.Base )
	WaitForTrigger( ""Wing Impact"" )
	bunnyVehicle:ClearSpellVisual( visual )
	bunnyVehicle:Fade( 0, 0 )
end

-- A bunch of stuff will zoop at some stuff
-- And then some stuff will happen.
-- Wrathion will be like, ""aw yah.""

-- Main Spell Effect and Wrathion's Location
bunnyCreatureID = 62026
spellEffectModelID = ""World\\Dungeon\\CavernsOfTime\\PassiveDoodads\\ArcaneOrb\\cot_arcaneorb_01.mdx""
spellEffect = SpawnActorAtPoint( bunnyCreatureID, 6609, false )
spellEffect:SetScale( .5 )
cloakMaster = SpawnModelActorAtPoint( spellEffectModelID, 6609, false )
cloakMaster:Fade(0, 0)
cloakMaster:SetScale( .75 )
local baseOffset = Vector:New( 0, 0, -1 )
RideVehicleActor( spellEffect, cloakMaster, 0, AttachmentPoint.Base, baseOffset )

-- Bunnies for Power
originPointsA = SpawnActorsAtPoints( bunnyCreatureID, 6610, false )

-- Bunnies for Wisdom
originPointsB = SpawnActorsAtPoints( bunnyCreatureID, 6611, false )

-- Wait a Moment until Wrathion is ready
WaitForTrigger( ""Craft Cloak"" )
CastSpellAtActor( wrathion, wrathion, 146428 )
--Wait(2.5)
Wait(1)
-- ""Behold! The Power of the Foes You've Vanquished!""
for i=1, #originPointsA do
	originPointsA[i]:PlaySpellCastVisual( 28243 )
end

for i=1, #originPointsA do
	CastSpellAtActor( originPointsA[i], spellEffect, 126718, false )
end

Wait(1.5)
local fireHands = wrathion:PlaySpellStateVisual( 34060 )
--PlayLoopingSplitBodyAnim( wrathion, Animations.ChannelCastDirected )

local redAura = spellEffect:PlaySpellStateVisual(28245) 
cloakMaster:Fade(1, 1)

--Wait(2)

-- ""...And the wisdom of those you've outsmarted...""
for i=1, #originPointsB do
	originPointsB[i]:PlaySpellCastVisual( 28247 )
end

for i=1, #originPointsB do
	CastSpellAtActor( originPointsB[i], spellEffect, 126719, false )
end

Wait(1.5)
cloakMaster:SetScale( 1 )
local goldAura = spellEffect:PlaySpellStateVisual(28248) 

Wait(.5)
spellEffect:ClearSpellVisual( redAura)
--local magmaBall = spellEffect:PlaySpellStateVisual(28250)

-- Line 20 - ""Behold...""
WaitForTrigger( ""Line 20"" )
spellEffect:PlaySpellCastVisual( 21508 )
spellEffect:ClearSpellVisual( goldAura)
Wait(2)
--Cue Celestials
oxEffect:Fade(1, 1)
tigerEffect:Fade(1, 1)
craneEffect:Fade(1, 1)
dragonEffect:Fade(1, 1)

Wait(.5)

scene:AddCoroutineWithParams( CelestialRoundUp, ox, 33638 )
scene:AddCoroutineWithParams( CelestialRoundUp, tiger, 33636 )
scene:AddCoroutineWithParams( CelestialRoundUp, crane, 33639 )
scene:AddCoroutineWithParams( CelestialRoundUp, dragon, 33637 )
Wait(1.5)

oxEffect:Fade(0, 1)
tigerEffect:Fade(0, 1)
craneEffect:Fade(0, 1)
dragonEffect:Fade(0, 1)
--spellEffect:ClearSpellVisual( magmaBall)
--local magmaBallSmall = spellEffect:PlaySpellStateVisual(28251)
local wrathionWings = wrathion:PlaySpellStateVisual(146428)
Wait(2)

wrathion:ClearSpellVisual( wrathionWings )
Wait(2)

SendTrigger( "
10781,Garrosh Encounter - Enter Heart Realm Camera,"
	local cameraDummyDefaultPos = scene:GetPosition()
	local cameraDummyModel = ""creature\\invisiblestalker\\invisiblestalker.m2""
	local cameraDummyCreateData = ActorCreateData:Default()
	cameraDummyCreateData.model = cameraDummyModel
	cameraDummyCreateData.transform.position = cameraDummyDefaultPos
	cameraDummyCreateData.groundSnap = false
	cameraDummyCreateData.interactible = false
	cameraDummyCreateData.floatingTooltip = false

	local posStartDummy = scene:SpawnActor(cameraDummyCreateData)
	local tgtStartDummy = scene:SpawnActor(cameraDummyCreateData)
	local transform = scene:GetTransform()
	transform.position.z = transform.position.z + 20
	posStartDummy:SetTransform( transform )
	CameraDummySetAtPathStart( tgtStartDummy, 6621 )
	scene:SetCamera( 522, 2, posStartDummy, tgtStartDummy )
	scene:WaitTimer(2)"
10782,Elemental - Birth Evil,"local DebugPrint = function(data)
	-- print(""Debug Turret Build/Fire: "" .. tostring(data))
end

function BuildGlobule(ROID, isTurn, turn)
	-- Only handle ""effect"" objects
	if ( isTurn ~= ""turn"" ) then
		DebugPrint(""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");
		return;
	end

	local caster = ROIDTOUNIT(ROID)

	-- Skitter around building the object
	if (turn.firstEvent.resultType == PetBattleEffect.AuraApply) then
		local numPoints = 4;
		local doEffectsOnPoint = 2;
		local visual = 152;

		local slot, transform = FindNextObjectSlot(caster.playerID) 
		local location = transform.position;

		Dispatcher_BuildThingAtLocation(location, numPoints, doEffectsOnPoint, visual, ROID, isTurn, turn)

		scene:WaitTimer(1);
		return;
	else
		DefaultTurnBehaviour(ROID, isTurn, turn)
	end 

	-- Reset/reposition
	DefaultTurnCleanUp(ROID);

end

function CreateObject_Globule(ROID, isAura, aura, auraInstanceID, turnsRemaining, auraAbilityID)
	local pad = ROIDTOPET(ROID);

	print(""Makin a turret "",auraAbilityID,  "", player "",aura.playerID ); 
	-- local groundModel = ""CREATURE\\SPELLS\\FlameTurret.M2"";
	local groundModel = fid(853120);
	local object, playerID, slot, transform = RegisterObject(aura.playerID, auraAbilityID, auraInstanceID)
	local centerPosition = transform.position + Vector:New(0,0,-5)
	
	local baseScale = 0.5;
	local bonusScalePerRoundRemaining = 0;
	local startingScale = baseScale + bonusScalePerRoundRemaining * aura.turnsRemaining;

	local rocket, killFunction =  CreatePadObject(
		groundModel, 
		startingScale,
		Transform:New(centerPosition, 0), 
		false)

	object.actor = rocket;

	rocket:WaitMoveToAbs ( transform.position, 2 );
	rocket:SetSnapToGround(true);

	while (aura.running) do 
		scene:WaitTimer(0.1);
	end

	DebugPrint(""Turret Aura Finished"");

	scene:WaitTimer(1)

	-- wait for any animation to complete
	while ( object.firing == true ) do
		scene:WaitTimer(0.1)
	end

	DebugPrint(""Object Done"");

	rocket:Fade(0,0.1);
	--print(""Killed the turret! "",q);

	killFunction();

	UnregisterObject(object.playerID, object.slot);
end

function FireGlobule(ROID, isTurn, turn)
	-- Only handle ""effect"" objects
	if (isTurn ~= ""turn"") then
		DebugPrint(""ERROR: Object of type ""..isTurn.."" passed to DefaultDoEffect"");
		return;
	end

	local caster = ROIDTOUNIT( ROID )
	
	local object, playerID, slot, transform = FindObject(turn.sourceAuraInstanceID)
	if(not object) then
		--pattymack added this incase reflect bounces back a turret fire.
		return;
	end
	
	local objectROID = GETOBJECTROIDFROMPLAYERIDANDSLOT(playerID, slot);

	--print(""Object ROID: "",objectROID,"" STR: "",ROIDTOSTRING(objectROID), "" Ability: "",turn.abilityID, "" PlayerID: "", playerID, "" Slot: "",slot);

	-- Make it sessile
	object.moveSpeed = 0;

	DebugPrint(""Fire Effects Start"");
	
	object.firing = true;
	Dispatcher_OnlyTurnAnimateTheEffects1toN(3, objectROID, isTurn, turn)
	object.firing = false;

	DebugPrint(""Fire Effects End"");
end"
10783,[1] Lorewalker Cho - 5.4: zto - Legendary - Cloak Effects,"""Celestial Temper"" )
	
Wait(1)


cloakMaster:SetScale( 1.25 )
--CastSpellAtActor( cloakMaster, cloakMaster, 46551 )
cloakMaster:PlaySpellCastVisual( 34068 )

Wait(2)
wrathion:ClearSpellVisual( fireHands )
--StopLoopingSplitBodyAnim( wrathion, Animations.ChannelCastDirected )
PlayLoopingSplitBodyAnim( wrathion, Animations.ChannelCastOmni )
local wrathionHandOffset = Vector:New( 0, 0, .75 )
JumpRideVehicleActor( cloakMaster, wrathion, .5, AttachmentPoint.Head, wrathionHandOffset )


WaitForTrigger( ""Line 21"" )
FaceActor( wrathion, clone1 )
Wait(1)
JumpRideVehicleActor( cloakMaster, clone1, 2, AttachmentPoint.ChestBloodBack )
StopLoopingSplitBodyAnim( wrathion, Animations.ChannelCastOmni )
Wait(2)
--fireWings:Fade( 0, 1 )
--fireball:Fade( 0, 1 )
clone1:PlaySpellCastVisual( 33400 )
--spellEffect:ClearSpellVisual( magmaBallSmall)
cloakMaster:Fade(0, 1)
SendTrigger( ""Wing Impact"" )


"
10784,Garrosh Encounter - Enter Heroic Phase Camera,"scene:SetFadeRegion(2000, true)
garroshID = 73462
garrosh	= SpawnActorAtPoint( garroshID, 6626, true)
scene:SetCamera(368, 10,nil,nil) -- (camera, transition time, primary target, secondary target)
MoveCameraToPathStart( 368, 0, 6624, 6625)
MoveCameraToPathStart( 368, 20, 6625, 6628)
Wait(1)
garroshpos = scene:LoadPath(6624).nodes[1].pos
garrosh:BroadcastTextStereo(BroadcastType.Yell, 75821)
Wait(8)
garrosh:PlayOneShotFullBodyAnim(Animations.BattleRoar)
Wait(2)"
10785,Lorewalker Cho - 5.4: zto - Legendary - Cloak Effects - Test Stuff,"WaitForTrigger( ""smoothPhaseComplete"" )


SendTrigger(""Craft Cloak"")
SendTrigger(""Line 20"")
SendTrigger(""Line 21"")"
10786,[1] Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Shaohao - MASTER,"Wait( 2)
SendTrigger( ""Scene Wrap Up"" )
Wait(2)
scene:EndScene()
"
10787,Garrosh Raid - Siege Engineer - Wing Intro Scene - Main,"ironStarID 			= 73059
blackfuseID 		= 72694
moiraID				= 70279
grizzleID			= 73564
molemachineID 		= 73569
genericFOV90 		= 368
ironforgeGuardID 	= 42783
diggerID			= 71589
gorodanID			= 72964
aggronID			= 72981
shannaID			= 72986
korkronID			= 73098
goblinTrash1ID		= 73091
goblinTrash2ID		= 73095
suitID				= 71504


scene:ApplyScreenEffect(827)

ironstar = SpawnActorAtPoint( ironStarID, 6445, true)
ironstar:PlayLoopingAnimKit(4397)
blackfuse	= SpawnActorAtPoint( blackfuseID, 6446, true)
blackfuseChannel	= blackfuse:PlaySpellChannelVisualAtTargets(34048, {ironstar})
blackfuseState		= blackfuse:PlaySpellStateVisual(34048)
blackfuse:PlayLoopingAnimKit(4512)
--if (scene:GetWorldState(4485) == 1) then
goblinTrash1 = SpawnActorsAtPoints( goblinTrash1ID, 6581, true )
goblinTrash2 = SpawnActorsAtPoints( goblinTrash2ID, 6582, true )
aggron = SpawnActorsAtPoints( aggronID , 6583, true )
gorodan = SpawnActorsAtPoints( gorodanID , 6586, true )
shanna = SpawnActorAtPoint( shannaID , 6587, false )
shannaState = shanna:PlaySpellStateVisual(33375)

suit = SpawnActorAtPoint( suitID, 6588, true)
suit:PlayLoopingAnimKit(4499)
scene:SetFadeRegion(2000, true)

raid = SpawnPlayerGroupAtPoints(6608, 1, true)
Wait(1)
scene:ClearScreenEffect(827)
SendTrigger(""SceneStart"")

--end"
10788,Garrosh Raid - Siege Engineer - Wing Intro Scene - Horde,"	WaitForTrigger(""SceneStart"")
	MoveCameraToPathStart( genericFOV90, 0, 6516, 6524)
	blackfuse:PlayMusic(39594)

	local raidPoints2 = scene:LoadPath(6612)
	for k,v in pairs(raid) do
		local raidPoint2 = raidPoints2.nodes[k].pos
		RunToLocation( v, 7, raidPoint2.x, raidPoint2.y, raidPoint2.z, 305.7, true )		
	end
	Wait(2)
	SetCameraFollowPath( genericFOV90, 0, 6516, 6524, 8)
	Wait(4.5)
	
	teleport	= SpawnModelActorsAtPoints(""spells\\teleport.m2"", 6640, true)
	diggers		= SpawnActorsAtPoints(diggerID, 6640, true)
	diggers[1]:PlaySoundKit(39526, true)
	table.insert(teleport, SpawnModelActorAtPoint(""spells\\teleport.m2"", 6641, true))
	grizzle = SpawnActorAtPoint( grizzleID , 6641, true)
	Wait(1)
	SayText(grizzle, 76183, true)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
	Wait(.5)
	for k,v in pairs(teleport) do
		v:Fade(0,0)
		v:Despawn()
	end
	Wait(2.1)
	grizzle:PlayOneShotUpperBodyAnim(Animations.EmoteNo)
	grizzle:WaitBroadcastSoundComplete()
	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)
	local raidPoints3 = scene:LoadPath(6616)
	for k,v in pairs(raid) do
		local raidPoint3 = raidPoints3.nodes[k].pos
		RunToLocation( v, 7, raidPoint3.x, raidPoint3.y, raidPoint3.z, 305.7, true )		
	end
	diggerPoints = scene:LoadPath(6469)
	for k,v in pairs(diggers) do
		local point = diggerPoints.nodes[k].pos
		RunToLocation( v, 7, point.x, point.y, point.z, diggerPoints.nodes[k].rot.z, true )		
	end
	grizzle:FollowPathAtSpeed(6646, 10, false)
	grizzle:WaitMovementComplete()
	grizzle:SetFacing(305.7)
	for k,v in pairs(diggers) do
		v:SetFacing(diggerPoints.nodes[k].rot.z)
	end
	SayText(grizzle, 76182, true)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmotePoint)
	Wait(1.5)
	SetCameraFollowPath( genericFOV90, 0, 6534, 6540, 3)
	grizzle:WaitBroadcastSoundComplete()
	Wait(.5)
	SendTrigger(""Blackfuse001"")
	

	WaitForTrigger(""Blackfuse002Done"")
	for k,v in pairs(raid) do
		v:PlayLoopingAnimKit(2923)
	end

	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)
	SayTextWithAnim(grizzle, 76184, Animations.EmotePoint, true)
	Wait(2.3)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
	Wait(2.7)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmoteRude)
	for k,v in pairs(diggers) do
		if (k < #diggers) then 
			v:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
		else
			v:WaitPlayOneShotFullBodyAnim(Animations.EmoteCheer)
		end
	end
	grizzle:WaitBroadcastSoundComplete()
	SendTrigger(""IronStarGoGoGo"")
	for k,v in pairs(diggers) do
		v:FollowRelativePathAtSpeed ( 6471, 10, true)
	end
	WaitForTrigger(""IronStarExplode"")
	for k,v in pairs(diggers) do
		v:StopMovement()
		v:PlayLoopingAnimKit(1669)
	end
	Wait(1)
	SendTrigger(""BlackfuseLaugh"")

	WaitForTrigger(""BlackfuseLaughDone"")
	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)
	grizzle:PlayLoopingUpperBodyAnim(Animations.Cower)
	SayText(grizzle,76185, true)
	Wait(2)
	local moveData = MoveData:Default()
	moveData.pathID = 6647
	moveData.speed = 2

	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.None
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None 

	grizzle:Move( moveData )
	grizzle:WaitMovementComplete()
	grizzle:FollowPathAtSpeed(6648, 10, false)
	Wait(2)
	SendTrigger(""BlackfuseEscape"")
	grizzle:WaitMovementComplete()
	grizzle:Despawn()
	for k,v in pairs(raid) do
		v:Despawn()
	end
"
10789,Garrosh Raid - Siege Engineer - Wing Intro Scene - Blackfuse,"WaitForTrigger(""Blackfuse001"")
blackfuse:ClearSpellVisual( blackfuseState)
ironstar:ClearSpellChannelVisual(34048, blackfuseChannel)
blackfuse:StopAnimKit(4512)
blackfuse:SetFacing(124)
SayText(blackfuse, 74626)
blackfuse:PlayMusic(39628)
blackfuse:WaitPlayOneShotFullBodyAnim(Animations.EmotePoint)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
blackfuse:WaitBroadcastSoundComplete()
SendTrigger(""Blackfuse001Done"")
SayTextWithAnim(blackfuse, 74625, Animations.EmoteTalk)
Wait(3.5)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
MoveCameraToPathStart( genericFOV90, 3, 6554, 6555)
blackfuse:WaitBroadcastSoundComplete()
Wait(1)
SendTrigger(""Blackfuse002Done"")


WaitForTrigger(""IronStarGoGoGo"")
Wait(2)
MoveCameraToPathStart( genericFOV90, 0, 6554, 6555)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmotePoint)
ironstar:StopAnimKit(1267)
ironstar:PlayOneShotFullBodyAnim(Animations.Custom1)
Wait(1.4)
SetCameraFollowPath( genericFOV90, 0, 6554, 6555, 1)
ironstar:StopAnimKit(AnimKits.OneShotFullBody)
ironstar:FollowPathAtSpeed ( 6472, 18, false, 4402)
Wait(1.5)
ironstar:PlayLoopingAnimKit(4485)
Wait(.2)
ironstar:StopMovement()
SendTrigger(""IronStarExplode"")
Wait(2)
ironstar:Despawn()


WaitForTrigger(""BlackfuseLaugh"")
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
SayTextWithAnim(blackfuse, 75813, Animations.EmoteLaugh)
blackfuse:WaitBroadcastSoundComplete()
Wait(1)
SendTrigger(""BlackfuseLaughDone"")


WaitForTrigger(""BlackfuseEscape"")
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
blackfuse:FollowPathAtSpeed( 6560, 14, false)
blackfuse:WaitMovementComplete()
local jumpPoint = scene:LoadPath(6561).nodes[1].pos
blackfuse:JumpToAbs(jumpPoint, 2, 20)
Wait(3)
destPoint = scene:LoadPath(6563).nodes[1]

destPointTransform = {	position	= destPoint.pos,
						roll		= destPoint.rot.x,
						pitch		= destPoint.rot.y,
						yaw			= destPoint.rot.z,
}
blackfuse:StopMovement()
blackfuse:SetTransform(destPointTransform)
MoveCameraToPathStart( genericFOV90, 0, 6564, 6566 )
blackfuse:PlaySoundKit(39527, true)

local jumpPoint2 = scene:LoadPath(6562).nodes[1].pos
blackfuse:JumpToAbs(jumpPoint2, 2, 20)
Wait(4.5)
blackfuse:StopMovement()
SetCameraFollowPath( genericFOV90, 0, 6564, 6566, 5)
blackfuse:FollowPathAtSpeed( 6562, 14, false)
Wait(1)
SayText(blackfuse, 74656)
blackfuse:WaitMovementComplete()
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
local pipePoints = scene:LoadPath(6589).nodes
aggron = SpawnActorAtVector(aggronID, pipePoints[2].pos)
trash1 = SpawnActorAtVector(goblinTrash1ID, pipePoints[1].pos) 
trash2 = SpawnActorAtVector(goblinTrash2ID, pipePoints[3].pos)
aggron:JumpToAbs(pipePoints[5].pos, 2, 25)
trash1:JumpToAbs(pipePoints[4].pos, 2, 25)
trash2:JumpToAbs(pipePoints[6].pos, 2, 25)
aggron:PlaySoundKit(39527, true)
Wait(.5)
trash1:PlaySoundKit(39527, true)
aggron:WaitMovementComplete()
korkron = SpawnActorAtVector(korkronID, pipePoints[2].pos)
trash3 = SpawnActorAtVector(goblinTrash1ID, pipePoints[1].pos) 
trash4 = SpawnActorAtVector(goblinTrash2ID, pipePoints[3].pos)
korkron:JumpToAbs(pipePoints[5].pos, 2, 25)
trash3:JumpToAbs(pipePoints[4].pos, 2, 25)
trash4:JumpToAbs(pipePoints[6].pos, 2, 25)
korkron:PlaySoundKit(39527, true)
Wait(.5)
trash3:PlaySoundKit(39527, true)
aggron:PlayLoopingAnimKit(4514)
trash1:PlayLoopingAnimKit(4514)
trash2:PlayLoopingAnimKit(4514)
aggron:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash1:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash2:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
korkron:WaitMovementComplete()
korkron:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash3:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash4:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
"
10792,Garrosh Raid - Corrupted Vale Intro - Main,"	scene:ApplyScreenEffect(827)

	genericFOV90 		= 368

	goblins = SpawnActorsAtPoints( 71718, 6661)

	for k,v in pairs(goblins) do
		v:PlayLoopingFullBodyAnim(Animations.EmoteWorkNoSheathe)
	end
	playerSpawnPoints = scene:LoadPath(6670).nodes
	raid = {}
	for k,v in pairs(playerSpawnPoints) do
		table.insert(raid, SpawnPlayerCloneActorByToken( ""raid""..(k), v.pos.x, v.pos.y, v.pos.z, v.rot.z, 1, true ))
	end

	door1 = SpawnModelActorAtPoint( ""DOODADS\\MOGU\\Mogu_Ancient_Doorway03.M2"", 6665, false, 1.5569)
	door2 = SpawnModelActorAtPoint( ""DOODADS\\MOGU\\Mogu_TitanVault_Door_01.M2"", 6655, false, .391)
	Wait(2)
	scene:ClearScreenEffect(827)
	MoveCameraToPathStart( genericFOV90, 0, 6667, 6669)
	door1:PlayLoopingAnimKit(2452)
	Wait(3)
	scene:ApplyScreenEffect(827)
	Wait(1)

	SetCameraFollowPath( genericFOV90, 0, 6650, 6652, 20)
	scene:ClearScreenEffect(827)
	Wait(16)
	door2:PlayLoopingAnimKit(2452)
	Wait(6.5)
	shabreath = SpawnModelActorAtPoint(""SPELLS\\Sha_Breath_02.M2"", 6656, false, 2)
	Wait(1)
	scene:ApplyScreenEffect(1010)
	Wait(1)
	shabreath:Despawn()
	scene:TriggerServerEvent(""normalPhase"")
	for k,v in pairs(goblins) do
		v:StopLoopingFullBodyAnim()
		v:PlaySpellStateVisual(33282)
	end
	shredderActive = false
	zeal = SpawnActorAtPoint(72661,6660)

	Wait(2)
	scene:ClearScreenEffect(1010)
	Wait(2)
	SetCameraFollowReversePath(genericFOV90, 0, 6650, 6652, 20)
	Wait(16.5)
	zeal:WaitPlayOneShotFullBodyAnim(Animations.Emerge)
	Wait(2)
	scene:EndScene()"
10794,[1] Cinematic Framework - Camera,"CameraDummySetAtPathNode( cameraDummy, pathID, pathNodeIndex )
	local path = scene:LoadPath( pathID )
	if #path.nodes >= pathNodeIndex then
		-- snap to the specified point
		local transform = cameraDummy:GetTransform()
		transform.position = path.nodes[pathNodeIndex].pos
		cameraDummy:SetTransform( transform )
	else
		-- snap to the last point
		local transform = cameraDummy:GetTransform()
		transform.position = path.nodes[#path.nodes].pos
		cameraDummy:SetTransform( transform )

	end
end"
10795,Garrosh Raid - Corrupted Vale Intro - Shredder,"shredder = SpawnActorAtPoint(72886, 6663)
shredderActive = true
Wait(1)
while(shredderActive) do
	shredder:FollowPathAtSpeed(6664, 5)
	shredder:WaitMovementComplete()
	shredder:FollowPathReverseAtSpeed(6664, 5)
	shredder:WaitMovementComplete()
end

shredder:PlaySpellStateVisual(33282)"
10816,Pipe Transition,"	local cameraMode 			= 522
	local cameraPositionPath 	= 6699
	local cameraTargetPath		= 6696
	
	MoveCameraToPathStart(cameraMode, 0, cameraPositionPath, cameraTargetPath)
	scene:TriggerServerEvent(""teleport"")

	Wait(2)

	scene:SetCamera(0,1,nil,nil)
	Wait(1)"
10824,[3] Cinematic Framework - Spawning,"
	end
	
	return actors

end

function SpawnPlayerCloneAtPoint( pathID, scale, snapToGround )
	local path = scene:LoadPath( pathID )
	local pos = path.nodes[1].pos
	local x = pos.x
	local y = pos.y
	local z = pos.z
	local facing = pos.facing
	
	local player = SpawnActivePlayerCloneActor( x, y, z, facing, scale, snapToGround )
	return player
end
"
10825,[1] Garrosh Raid - Siege Engineer - Wing Intro Scene - Blackfuse,"korkron:PlayLoopingAnimKit(4514)
trash3:PlayLoopingAnimKit(4514)
trash4:PlayLoopingAnimKit(4514)
Wait(1)"
10826,[1] Garrosh Raid - Siege Engineer - Wing Intro Scene - Blackfuse,"korkron:PlayLoopingAnimKit(4514)
trash3:PlayLoopingAnimKit(4514)
trash4:PlayLoopingAnimKit(4514)
Wait(1)"
10828,Timeless Isle 5.4 - Story Progression - Scene 1 - Main,"screenEffectFadeToBlack			= 1012
screenEffectFlashback			= 1011
genericFOV90 		= 368
scene:SetFadeRegion(1000, true)
scene:ApplyScreenEffect(screenEffectFlashback)
Wait(3)
scene:TriggerServerEvent(""teleport"")
MoveCameraToPathStart(genericFOV90, 0, 6757, 6758)
Wait(5)
thrall		= SpawnActorAtPoint( 71149, 6759, true)
saurfang	= SpawnActorAtPoint( 73716, 6760, true)
korkron		= SpawnActorsAtPoints( 72546, 6763, true)
thrall:EquipWeapon(WeaponSlot.MainHand, 0)
saurfang:EquipWeapon(WeaponSlot.MainHand, 0)
thrall:PlayMusic(39757)
thrall:PlaySoundKitStereo(39754, false)
SetCameraFollowPath(genericFOV90, 0, 6757, 6758, 8)

thrall:FollowRelativePathAtSpeed( 6761, 7, true)
saurfang:FollowRelativePathAtSpeed( 6761, 7, true)
thrall:WaitMovementComplete()
thrall:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
Wait(4)
korkron[3]:PlayOneShotFullBodyAnim(Animations.EmoteNo)
Wait(2)
korkron[3]:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
nazgrim	= SpawnActorAtPoint( 61682, 6764, true)
nazgrim:FollowPathAtSpeed(6775, 7)
nazgrim:WaitMovementComplete()
nazgrim:SetFacing(242.36)
Wait(2)
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
Wait(2)
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalkQuestion)
Wait(2)
saurfang:PlayOneShotFullBodyAnim(Animations.EmoteSalute)
Wait(2)
saurfang:PlayOneShotFullBodyAnim(Animations.EmotePoint)
Wait(3)
saurfang:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
Wait(4)
nazgrim:PlayLoopingAnimKit(4614)
Wait(4)
nazgrim:FollowPathAtSpeed(6788, 3)
nazgrim:WaitMovementComplete()
Wait(2)
nazgrim:StopAnimKit(4614)
nazgrim:SetFacingToTarget(korkron[3], Vector:New())
nazgrim:WaitPlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
Wait(1)
for k,v in pairs(korkron) do
	v:SetFacingToTarget(nazgrim, Vector:New())
end
Wait(1)
nazgrim:ClearFacing()
nazgrim:SetFacing(300)
nazgrim:WaitPlayOneShotFullBodyAnim(Animations.EmotePoint)
Wait(1)
korkron[3]:PlayOneShotFullBodyAnim(Animations.EmoteTalkQuestion)
Wait(2)
nazgrim:SetFacingToTarget(korkron[3], Vector:New())
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
Wait(2)
for k,v in pairs(korkron) do
	v:ClearFacing()
	v:FollowPathAtSpeed(6793, 7)
end
Wait(4)
nazgrim:FollowPathAtSpeed(6794, 3)
nazgrim:WaitMovementComplete()
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteNo)
Wait(2)
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
Wait(2)
nazgrim:SetFacingToTarget(thrall, Vector:New())
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteSalute)
Wait(1.5)
nazgrim:PlayOneShotFullBodyAnim(Animations.EmoteTalk)
saurfang:PlayOneShotFullBodyAnim(Animations.EmoteSalute)
thrall:PlayOneShotFullBodyAnim(Animations.EmoteSalute)
Wait(2)
scene:ApplyScreenEffect(screenEffectFadeToBlack)
Wait(1)
scene:ClearScreenEffect(screenEffectFlashback)

Wait(2)"
10847,Vale of Eternal Blossoms 5.4: zto - Garrosh Finale - Music & Sound,"WaitForTrigger( ""Line -1"" )
musichandle = lorewalker:PlayMusic(39637) --Music Start 


WaitForTrigger( ""Line -2"" )
--WaitForTrigger( ""Shaohao Arrives"" )
shaohao:PlaySoundKitStereo( 39638, false ) --Shaohao is arriving, looping
--ClientScene_54_ValeHealing_ShaoHao_Bamf_Loop 


WaitForTrigger( ""Shaohao Arrival Done"" )
shaohao:PlaySoundKit( 39642, true ) --Shaohao arrives, shabang
--ClientScene_54_ValeHealing_ShaoHao_Bamf_Impact 
Wait(2)
shaohao:StopSoundKit( 39638 ) --Stops the looping sound from above

WaitForTrigger( ""Grow Tree"" )
tree:PlaySoundKitStereo( 39640, true ) --Tree is growing. 
--ClientScene_54_ValeHealing_Tree_Growing (39640) 


WaitForTrigger( ""White Out"" )
tree:PlaySoundKitStereo( 39639, true ) --Tree has arrived. Woosh!
--ClientScene_54_ValeHealing_Trailer_WhiteOut (39639)


Wait(2)
tree:PlaySoundKitStereo( 39641, false ) --Tree ambient sound
--ClientScene_54_ValeHealing_Tree_State (39641)"
10849,Timeless Isle 5.4 - Story Progression - Scene 2 - Main,"screenEffectFadeToBlack			= 1012
screenEffectFlashback			= 1011
genericFOV90 		= 368
scene:SetFadeRegion(1000, true)
scene:ApplyScreenEffect(screenEffectFlashback)
Wait(3)
scene:TriggerServerEvent(""teleport"")
kovok = SpawnActorAtPoint( 72927, 6808, true) 
skirmishers = SpawnActorsAtPoints(73012, 6811, false)
guard = SpawnActorsAtPoints(72954, 6815, true)
ambershapers = SpawnActorsAtPoints(72929, 6812, true)
thrall = SpawnActorAtPoint(71149, 6816, true)
Wait(2) -- Fix for Bug ID: 375210
thrall:PlaySoundKitStereo(39754, false)
thrall:PlayMusic(39758)
saurfang = SpawnActorAtPoint(73716, 6817, true)
for k,v in pairs(guard) do
	v:PlayLoopingFullBodyAnim(Animations.Ready1H)
	v:SetFacing(35)
end
for k,v in pairs(skirmishers) do
	v:PlayLoopingFullBodyAnim(Animations.Ready1H)
	v:SetFacing(35)
end
for k,v in pairs(ambershapers) do
	v:PlayLoopingFullBodyAnim(Animations.Ready2HL)
	v:SetFacing(35)
end


SetCameraFollowReversePath(genericFOV90, 0, 6804, 6805, 10)
Wait(13)
SetCameraFollowPath(genericFOV90, 0, 6806, 6807, 10)
Wait(5)
kovok:PlayOneShotFullBodyAnim(Animations.BattleRoar)
Wait(5)
MoveCameraToPathStart(genericFOV90, 0, 6813, 6814)
thrall:FollowPathAtSpeed(6819, 7)
saurfang:FollowPathAtSpeed(6820, 7)
thrall:WaitMovementComplete()

Wait(1)
thrall:SetFacing(125)
saurfang:SetFacing(305)
saurfang:WaitPlayOneShotFullBodyAnim(Animations.EmoteYes)
thrall:SetFacing(215)
saurfang:SetFacing(215)
Wait(1)
thrall:PlaySpellPreCastVisual(7967)
saurfang:WaitPlayOneShotFullBodyAnim(Animations.EmoteRoar)
saurfang:FollowPathAtSpeed(6821, 9)
scene:ApplyScreenEffect(screenEffectFadeToBlack)
Wait(1)
scene:ClearScreenEffect(screenEffectFlashback)
Wait(2)"
10850,Timeless Isle 5.4 - Story Progression - Scene 3 - Main,"screenEffectFadeToBlack			= 1012
screenEffectFlashback			= 1011
genericFOV90 		= 368
scene:ApplyScreenEffect(screenEffectFlashback)
scene:SetFadeRegion(300000, true) 
Wait(3)
scene:TriggerServerEvent(""teleport"")
MoveCameraToPathStart(genericFOV90, 0, 6823, 6824)
Wait(1)
garrosh = SpawnActorAtPoint(71865, 6825, true)
garrosh:PlayLoopingAnimKit(4623)
garrosh:SetScale(.75)
garrosh:EquipWeapon(WeaponSlot.MainHand, 0)
garrosh:PlayMusic(39759)
garrosh:PlaySoundKitStereo(39754, false)
thrall		= SpawnActorAtPoint(71149, 6826, true)
thrall:PlayLoopingAnimKit(947)
wrynn		= SpawnActorAtPoint(73592, 6827, true)
wrynn:PlayLoopingAnimKit(947)
voljin		= SpawnActorAtPoint(73942, 6828, true)
voljin:PlayLoopingAnimKit(947)
jaina		= SpawnActorAtPoint(73598, 6832, true)
jaina:PlayLoopingAnimKit(947)
baine		= SpawnActorAtPoint(73603, 6836, true)
baine:PlayLoopingAnimKit(947)
gallywix	= SpawnActorAtPoint(73604, 6831, true)
gallywix:PlayLoopingAnimKit(947)
genn		= SpawnActorAtPoint(68235, 6837, true)
genn:PlayLoopingAnimKit(947)
lorthemar	= SpawnActorAtPoint(73605, 6829, true)
lorthemar:PlayLoopingAnimKit(947)
mekkatorque	= SpawnActorAtPoint(73927, 6835, true)
mekkatorque:PlayLoopingAnimKit(947)
moira		= SpawnActorAtPoint(70279, 6834, true)
moira:PlayLoopingAnimKit(947)
sylvanas	= SpawnActorAtPoint(73606, 6830, true)
sylvanas:PlayLoopingAnimKit(947)
tyrande		= SpawnActorAtPoint(73962, 6833, true)
tyrande:PlayLoopingAnimKit(947)
kairoz		= SpawnActorAtPoint(72870, 6838, true)
kairoz:PlayLoopingAnimKit(947)
taranzhu	= SpawnActorAtPoint(73593, 6842, true)
taranzhu:PlayLoopingAnimKit(2312)
MoveCameraToPathStart(genericFOV90, 0, 6823, 6824)
Wait(2)
SetCameraFollowPath(genericFOV90, 0, 6823, 6824, 10)
Wait(12)
MoveCameraToPathStart(genericFOV90, 12, 6841, 6824)
Wait(9)
garrosh:PlayMusic(39763)
Wait(2.74)
garrosh:PlayMusic(39764)
Wait(1)
scene:ApplyScreenEffect(screenEffectFadeToBlack)
Wait(1)
scene:ClearScreenEffect(screenEffectFlashback)
Wait(2)"
10851,Timeless Isle 5.4 - Story Progression - Scene 4 - Main,"screenEffectFadeToBlack			= 1012
screenEffectFlashback			= 1011
genericFOV90 		= 368
scene:SetFadeRegion(3000000, true)
scene:ApplyScreenEffect(screenEffectFlashback)
Wait(3)
scene:TriggerServerEvent(""teleport"")
MoveCameraToPathStart(genericFOV90, 0, 6843, 6844)
anduin		= SpawnActorAtPoint(73607, 6847, false)
anduin:PlayLoopingAnimKit(4377)
anduin:SetScale(1.9)
anduin:PlayMusic(39760)
anduin:PlaySoundKitStereo(39754, false)
baine		= SpawnActorAtPoint(73603, 6848, false)
baine:PlayLoopingAnimKit(4377)
baine:SetScale(2)
jaina		= SpawnActorAtPoint(73598, 6849, false)
jaina:PlayLoopingAnimKit(4378)
jaina:SetScale(2.25)
lorthemar	= SpawnActorAtPoint(73605, 6850, false)
lorthemar:PlayLoopingAnimKit(4377)
lorthemar:SetScale(2)
sylvanas	= SpawnActorAtPoint(73606, 6851, false)
sylvanas:PlayLoopingAnimKit(4380)
sylvanas:SetScale(2.25)
taranzhu	= SpawnActorAtPoint(73593, 6852, false)
taranzhu:PlayLoopingAnimKit(4377)
taranzhu:SetScale(2)
thrall		= SpawnActorAtPoint(71149, 6854, false)
thrall:PlayLoopingAnimKit(4376)
thrall:SetScale(2)
thrall:EquipWeapon(WeaponSlot.MainHand, 0)
tyrande		= SpawnActorAtPoint(73962, 6855, false)
tyrande:PlayLoopingAnimKit(4381)
tyrande:SetScale(2.25)
voljin		= SpawnActorAtPoint(73942, 6856, false)
voljin:PlayLoopingAnimKit(4379)
voljin:SetScale(2.25)
voljin:EquipWeapon(WeaponSlot.MainHand, 0)
wrynn		= SpawnActorAtPoint(73592, 6846, false)
wrynn:PlayLoopingAnimKit(4377)
wrynn:SetScale(2)
Wait(5)
MoveCameraToPathStart(genericFOV90, 0, 6857, 6858)
Wait(5)
SetCameraFollowPath(genericFOV90, 0, 6857, 6858, 25)
Wait(30)"
10852,Timeless Isle 5.4 - Story Progression - Scene 6 - Main,"screenEffectFadeToBlack			= 1012
screenEffectFlashback			= 1011
genericFOV90 		= 368

scene:ApplyScreenEffect(screenEffectFlashback)
scene:SetFadeRegion(1000, true)
Wait(3)
scene:TriggerServerEvent(""teleport"")

MoveCameraToPathStart(genericFOV90, 0, 6859, 6860)
soridormi = SpawnActorAtPoint(55395, 6861, true)
soridormi:PlayMusic(39762)
soridormi:PlaySoundKitStereo(39754, false)
Wait(3)
SetCameraFollowPath(genericFOV90, 0, 6859, 6860, 12)
soridormi:PlayLoopingAnimKit(4627)
kairoz = SpawnActorAtPoint(72870, 6865, true)
kairoz:FollowPathAtSpeed(6866, .3, false)
kairoz:PlayLoopingAnimKit(4628)
Wait(13)
MoveCameraToPathStart(genericFOV90, 3, 6863, 6864)
Wait(3)
SetCameraFollowPath(genericFOV90, 0, 6863, 6864, 4)
scene:ApplyScreenEffect(screenEffectFadeToBlack)
Wait(1)
scene:ClearScreenEffect(screenEffectFlashback)

Wait(2)"
10853,Timeless Isle 5.4 - Story Progression - Scene 5 - Main,"screenEffectFadeToBlack			= 1012
screenEffectFlashback			= 1011
genericFOV90 		= 368
scene:SetFadeRegion(1000, true)
scene:ApplyScreenEffect(screenEffectFlashback)
Wait(3)
cagebase = SpawnModelActorAtPoint( ""WORLD\\GOOBER\\G_CageBase.m2"", 6868, false, 4)
cage	 = SpawnModelActorAtPoint( ""WORLD\\GOOBER\\G_Cage_Arcane.m2"", 6868, false, 4)
garrosh = SpawnActorAtPoint(74130, 6869, false)
garrosh:PlayLoopingFullBodyAnim(Animations.SitGround)
garrosh:PlaySoundKitStereo(39754, false)
garrosh:PlayMusic(39761)
rat = SpawnActorAtPoint(4075, 6872, false)
shadopan1	= SpawnActorAtPoint(64473, 6874, true)
shadopan2	= SpawnActorAtPoint(63196, 6875, true)
anduin		= SpawnActorAtPoint(73607, 6876, true)
MoveCameraToPathStart(genericFOV90, 0, 6870, 6871)
Wait(2)
rat:FollowPathAtSpeed(6873, 7)
anduin:FollowPathAtSpeed(6877, 3)
SetCameraFollowPath(genericFOV90, 0, 6870, 6871, 10)
anduin:WaitMovementComplete()
anduin:WaitPlayOneShotFullBodyAnim(Animations.EmoteTalk)
shadopan1:WaitPlayOneShotFullBodyAnim(Animations.EmoteTalk)
anduin:WaitPlayOneShotFullBodyAnim(Animations.EmoteYes)
shadopan1:FollowPathAtSpeed(6885, 3)
shadopan2:FollowPathAtSpeed(6886, 3)
SetCameraFollowPath(genericFOV90, 4, 6888, 6889, 10)
anduin:FollowPathAtSpeed(6887, 3)
garrosh:StopLoopingFullBodyAnim()
garrosh:FollowPathAtSpeed(6890, 3)
Wait(9)
garrosh:WaitPlayOneShotFullBodyAnim(Animations.EmoteTalk)
anduin:WaitPlayOneShotFullBodyAnim(Animations.EmoteTalk)
scene:ApplyScreenEffect(screenEffectFadeToBlack)
Wait(1)
scene:ClearScreenEffect(screenEffectFlashback)

Wait(2)"
10854,Garrosh Raid - Siege Engineer - Wing Intro Scene - Main,"ironStarID 			= 73059
blackfuseID 		= 72694
moiraID				= 70279
grizzleID			= 73564
molemachineID 		= 73569
genericFOV90 		= 368
ironforgeGuardID 	= 42783
diggerID			= 71589
gorodanID			= 72964
aggronID			= 72981
shannaID			= 72986
korkronID			= 73098
goblinTrash1ID		= 73091
goblinTrash2ID		= 73095
suitID				= 71504


scene:ApplyScreenEffect(827)

ironstar = SpawnActorAtPoint( ironStarID, 6445, true)
ironstar:PlayLoopingAnimKit(4397)
blackfuse	= SpawnActorAtPoint( blackfuseID, 6446, true)
blackfuseChannel	= blackfuse:PlaySpellChannelVisualAtTargets(34048, {ironstar})
blackfuseState		= blackfuse:PlaySpellStateVisual(34048)
blackfuse:PlayLoopingAnimKit(4512)
--if (scene:GetWorldState(4485) == 1) then
goblinTrash1 = SpawnActorsAtPoints( goblinTrash1ID, 6581, true )
goblinTrash2 = SpawnActorsAtPoints( goblinTrash2ID, 6582, true )
aggron = SpawnActorsAtPoints( aggronID , 6583, true )
gorodan = SpawnActorsAtPoints( gorodanID , 6586, true )
shanna = SpawnActorAtPoint( shannaID , 6587, false )
shannaState = shanna:PlaySpellStateVisual(33375)

suit = SpawnActorAtPoint( suitID, 6588, true)
suit:PlayLoopingAnimKit(4499)
scene:SetFadeRegion(2000, true)

raid = SpawnPlayerGroupAtPoints(6608, 1, true)
Wait(1)
scene:ClearScreenEffect(827)
SendTrigger(""SceneStart"")

--end"
10855,Garrosh Raid - Siege Engineer - Wing Intro Scene - Horde,"	WaitForTrigger(""SceneStart"")
	MoveCameraToPathStart( genericFOV90, 0, 6516, 6524)
	blackfuse:PlayMusic(39594)

	local raidPoints2 = scene:LoadPath(6612)
	for k,v in pairs(raid) do
		local raidPoint2 = raidPoints2.nodes[k].pos
		RunToLocation( v, 7, raidPoint2.x, raidPoint2.y, raidPoint2.z, 305.7, true )		
	end
	Wait(2)
	SetCameraFollowPath( genericFOV90, 0, 6516, 6524, 8)
	Wait(4.5)
	
	teleport	= SpawnModelActorsAtPoints(""spells\\teleport.m2"", 6640, true)
	diggers		= SpawnActorsAtPoints(diggerID, 6640, true)
	diggers[1]:PlaySoundKit(39526, true)
	table.insert(teleport, SpawnModelActorAtPoint(""spells\\teleport.m2"", 6641, true))
	grizzle = SpawnActorAtPoint( grizzleID , 6641, true)
	Wait(1)
	SayText(grizzle, 76183, true)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
	Wait(.5)
	for k,v in pairs(teleport) do
		v:Fade(0,0)
		v:Despawn()
	end
	Wait(2.1)
	grizzle:PlayOneShotUpperBodyAnim(Animations.EmoteNo)
	grizzle:WaitBroadcastSoundComplete()
	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)
	local raidPoints3 = scene:LoadPath(6616)
	for k,v in pairs(raid) do
		local raidPoint3 = raidPoints3.nodes[k].pos
		RunToLocation( v, 7, raidPoint3.x, raidPoint3.y, raidPoint3.z, 305.7, true )		
	end
	diggerPoints = scene:LoadPath(6469)
	for k,v in pairs(diggers) do
		local point = diggerPoints.nodes[k].pos
		RunToLocation( v, 7, point.x, point.y, point.z, diggerPoints.nodes[k].rot.z, true )		
	end
	grizzle:FollowPathAtSpeed(6646, 10, false)
	grizzle:WaitMovementComplete()
	grizzle:SetFacing(305.7)
	for k,v in pairs(diggers) do
		v:SetFacing(diggerPoints.nodes[k].rot.z)
	end
	SayText(grizzle, 76182, true)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmotePoint)
	Wait(1.5)
	SetCameraFollowPath( genericFOV90, 0, 6534, 6540, 3)
	grizzle:WaitBroadcastSoundComplete()
	Wait(.5)
	SendTrigger(""Blackfuse001"")
	

	WaitForTrigger(""Blackfuse002Done"")
	for k,v in pairs(raid) do
		v:PlayLoopingAnimKit(2923)
	end

	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)
	SayTextWithAnim(grizzle, 76184, Animations.EmotePoint, true)
	Wait(2.3)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
	Wait(2.7)
	grizzle:PlayOneShotFullBodyAnim(Animations.EmoteRude)
	for k,v in pairs(diggers) do
		if (k < #diggers) then 
			v:PlayOneShotFullBodyAnim(Animations.EmoteCheer)
		else
			v:WaitPlayOneShotFullBodyAnim(Animations.EmoteCheer)
		end
	end
	grizzle:WaitBroadcastSoundComplete()
	SendTrigger(""IronStarGoGoGo"")
	for k,v in pairs(diggers) do
		v:FollowRelativePathAtSpeed ( 6471, 10, true)
	end
	WaitForTrigger(""IronStarExplode"")
	for k,v in pairs(diggers) do
		v:StopMovement()
		v:PlayLoopingAnimKit(1669)
	end
	Wait(1)
	SendTrigger(""BlackfuseLaugh"")

	WaitForTrigger(""BlackfuseLaughDone"")
	MoveCameraToPathStart( genericFOV90, 0, 6552, 6553)
	grizzle:PlayLoopingUpperBodyAnim(Animations.Cower)
	SayText(grizzle,76185, true)
	Wait(2)
	local moveData = MoveData:Default()
	moveData.pathID = 6647
	moveData.speed = 2

	moveData.posControl = MovePosControl.ConstantSpeed
	moveData.yawControl = MoveRotControl.None
	moveData.pitchControl = MoveRotControl.None
	moveData.rollControl = MoveRotControl.None 

	grizzle:Move( moveData )
	grizzle:WaitMovementComplete()
	grizzle:FollowPathAtSpeed(6648, 10, false)
	Wait(2)
	SendTrigger(""BlackfuseEscape"")
	grizzle:WaitMovementComplete()
	grizzle:Despawn()
	for k,v in pairs(raid) do
		v:Despawn()
	end
"
10856,Garrosh Raid - Siege Engineer - Wing Intro Scene - Blackfuse,"WaitForTrigger(""Blackfuse001"")
blackfuse:ClearSpellVisual( blackfuseState)
ironstar:ClearSpellChannelVisual(34048, blackfuseChannel)
blackfuse:StopAnimKit(4512)
blackfuse:SetFacing(124)
SayText(blackfuse, 74626)
blackfuse:PlayMusic(39628)
blackfuse:WaitPlayOneShotFullBodyAnim(Animations.EmotePoint)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
blackfuse:WaitBroadcastSoundComplete()
SendTrigger(""Blackfuse001Done"")
SayTextWithAnim(blackfuse, 74625, Animations.EmoteTalk)
Wait(3.5)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmoteTalkExclamation)
MoveCameraToPathStart( genericFOV90, 3, 6554, 6555)
blackfuse:WaitBroadcastSoundComplete()
Wait(1)
SendTrigger(""Blackfuse002Done"")


WaitForTrigger(""IronStarGoGoGo"")
Wait(2)
MoveCameraToPathStart( genericFOV90, 0, 6554, 6555)
blackfuse:PlayOneShotFullBodyAnim(Animations.EmotePoint)
ironstar:StopAnimKit(1267)
ironstar:PlayOneShotFullBodyAnim(Animations.Custom1)
Wait(1.4)
SetCameraFollowPath( genericFOV90, 0, 6554, 6555, 1)
ironstar:StopAnimKit(AnimKits.OneShotFullBody)
ironstar:FollowPathAtSpeed ( 6472, 18, false, 4402)
Wait(1.5)
ironstar:PlayLoopingAnimKit(4485)
Wait(.2)
ironstar:StopMovement()
SendTrigger(""IronStarExplode"")
Wait(2)
ironstar:Despawn()


WaitForTrigger(""BlackfuseLaugh"")
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
SayTextWithAnim(blackfuse, 75813, Animations.EmoteLaugh)
blackfuse:WaitBroadcastSoundComplete()
Wait(1)
SendTrigger(""BlackfuseLaughDone"")


WaitForTrigger(""BlackfuseEscape"")
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
blackfuse:FollowPathAtSpeed( 6560, 14, false)
blackfuse:WaitMovementComplete()
local jumpPoint = scene:LoadPath(6561).nodes[1].pos
blackfuse:JumpToAbs(jumpPoint, 2, 20)
Wait(3)
destPoint = scene:LoadPath(6563).nodes[1]

destPointTransform = {	position	= destPoint.pos,
						roll		= destPoint.rot.x,
						pitch		= destPoint.rot.y,
						yaw			= destPoint.rot.z,
}
blackfuse:StopMovement()
blackfuse:SetTransform(destPointTransform)
MoveCameraToPathStart( genericFOV90, 0, 6564, 6566 )
blackfuse:PlaySoundKit(39527, true)

local jumpPoint2 = scene:LoadPath(6562).nodes[1].pos
blackfuse:JumpToAbs(jumpPoint2, 2, 20)
Wait(4.5)
blackfuse:StopMovement()
SetCameraFollowPath( genericFOV90, 0, 6564, 6566, 5)
blackfuse:FollowPathAtSpeed( 6562, 14, false)
Wait(1)
SayText(blackfuse, 74656)
blackfuse:WaitMovementComplete()
MoveCameraToPathNodeIndex(genericFOV90, 0, 6534, 2, 6540, 2)
local pipePoints = scene:LoadPath(6589).nodes
aggron = SpawnActorAtVector(aggronID, pipePoints[2].pos)
trash1 = SpawnActorAtVector(goblinTrash1ID, pipePoints[1].pos) 
trash2 = SpawnActorAtVector(goblinTrash2ID, pipePoints[3].pos)
aggron:JumpToAbs(pipePoints[5].pos, 2, 25)
trash1:JumpToAbs(pipePoints[4].pos, 2, 25)
trash2:JumpToAbs(pipePoints[6].pos, 2, 25)
aggron:PlaySoundKit(39527, true)
Wait(.5)
trash1:PlaySoundKit(39527, true)
aggron:WaitMovementComplete()
korkron = SpawnActorAtVector(korkronID, pipePoints[2].pos)
trash3 = SpawnActorAtVector(goblinTrash1ID, pipePoints[1].pos) 
trash4 = SpawnActorAtVector(goblinTrash2ID, pipePoints[3].pos)
korkron:JumpToAbs(pipePoints[5].pos, 2, 25)
trash3:JumpToAbs(pipePoints[4].pos, 2, 25)
trash4:JumpToAbs(pipePoints[6].pos, 2, 25)
korkron:PlaySoundKit(39527, true)
Wait(.5)
trash3:PlaySoundKit(39527, true)
aggron:PlayLoopingAnimKit(4514)
trash1:PlayLoopingAnimKit(4514)
trash2:PlayLoopingAnimKit(4514)
aggron:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash1:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash2:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
korkron:WaitMovementComplete()
korkron:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash3:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
trash4:FollowRelativePathAtSpeed ( 6471, 24, true, 4514)
"
10857,[1] Garrosh Raid - Siege Engineer - Wing Intro Scene - Blackfuse,"korkron:PlayLoopingAnimKit(4514)
trash3:PlayLoopingAnimKit(4514)
trash4:PlayLoopingAnimKit(4514)
Wait(1)"
11156,Humanoid - Blessed Hammer,"function Humanoid_BlessedHammer(ROID, isTurn, turn)
	-- Only handle ""effect"" objects
	if (isTurn ~= ""turn"") then
		warning(""ERROR: Bad object type passed to DefaultDoEffect"", isTurn);
		return;
	end
 
	-- If this is not being performed by a specific pet, skip the casting effects
	if (not ROIDISAPET(ROID)) then
		userROID = nil;
	end

	-- Move into position
	DefaultTurnPreEffectMovement(ROID, turn);

	-- MY MOVEMENT START
	local pet = ROIDTOPET(ROID);
	if (not pet or (pet and pet.isPad)) then
		return;
	end

	-- Use the first result from each effect
	local targetROID = GetMoveToROID(turn); 

	local _, flags = DidItFail(turn);
	local missed = flags.miss;

	local attackPoint = ObtainAttackPoint(ROID, targetROID, PetBattleRange.Melee, missed);
	
	-- We weren't using the return results from this function call, so commenting it out.
	-- Spline_Attack2_GetDefaultHandlers(turn, pet.actor, attackPoint);

	-- When you pass the test the first time
	local success = function()
		local overrideFailure, overrideEffectSuccess, overrideEffectFailure = nil, nil, nil;
		DefaultTurnVisualHandler(ROID, turn, nil, overrideFailure,
			overrideEffectSuccess, overrideEffectFailure);

		-- Handle all effects
		for index = 1, #turn.effects do 
			local effect = turn.effects[index];

			-- Default Visual 
			DefaultDoEffectProcessing(ROID, ""effect"", effect); 
		end 
	end

	-- pet.actor:PlaySpellCastVisual(34732);

	
	-- scene:WaitTimer(1);
	
	pet.actor:WaitMoveToAbs(attackPoint,
		attackPoint:Dist(pet.actor:GetPosition()) / pet.moveSpeed / 2);

	pet.actor:CastSpell(121650, pet.actor);
	
	success();

	-- 34732

	DefaultTurnCleanUp(ROID);
end"
14844,[1] Humanoid - Whirlwind,"victimROID, attackerROID, visualID ) 

	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformResultImpactVisual, attackerROID, visualID ); 	 
	Dispatcher_AddCommandToQueue(victimROID, Dispatcher_PerformImpactVerticalKnockback, attackerROID, 2, 0.75); 
end"
21925,Global Functions - Table Wrappers,"--
-- Table Wrappers
-- These Scripts have been added to SVN, if you make a change here, update it
-- also there \Object\ObjectClient\SceneScriptGlobal\
--

-- Dummy functions that simply return the passed value back.
-- These are used by the editor to indicate which table type a magic number is
-- e.g. sid(1234) is spell 1234, cid(1234) is creature 1234

local wrappers =
{
    animationData = 'adid',
    animKit = 'akid',
    broadcastText = 'btid',
    cameraEffect = 'ceid',
    cameraMode = 'cmid',
    creature = 'cid',
    creatureDisplayInfo = 'cdiid',
    decalProperties = 'dpid',
	fileData = 'fid',
	gameObjectDisplayInfo = 'gdi',
	item = 'iid',
    movie = 'mid',
    screenEffect = 'seid',
    soundKit = 'skid',
	spell = 'sid',
    spellVisual = 'svid',
    uiCamera = 'uicid',
	weather = 'wid',
}

local env = getfenv();
for t, shortcut in pairs(wrappers) do
	env[shortcut] = function(id) return id end;
end"
44023,[1] Cinematic Framework - Fake Spellcasting,"channel
--
function ClearChannelSpellVisual( channel )
	ClearChannelFuncInternal(channel)
end
"
60866,[1] Global Functions - Actor,"_displayID or c.creatureDisplayID
	c.scale = _scale or c.scale
	c.transform = _trans

	return c
end

function ActorCreateData:NewModel(_name, _modelFile, _trans, _scale)
	local c = ActorCreateData:Default()

	if type(_modelFile) == ""number"" then
		c.modelFileID = _modelFile
	else
		c.model = _modelFile
	end
	c.scale = _scale or c.scale
	c.name = _name
	c.transform = _trans

	return c
end
"
61088,<unnamed>,
