ID,Name,ScriptBody,Flags,MissileCount
13,Parabola,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
19,Spiral Vortex,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,7
20,Drunken Missiles,"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
",0,5
22,Metawheel,"local outerWheelSpinRate = 600
local outerWheelMag = 1.5
local innerWheelSpinRate = 800
local innerWheelMagBase = .75
local innerWheelMagVariance = .25
local innerWheelOscillateRate = 300

transAngle = time * outerWheelSpinRate
transMag = outerWheelMag * (1 - progress)
local innerMag = innerWheelMagBase + (innerWheelMagVariance * sin(time * innerWheelOscillateRate))
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount - 1)
	transRight = innerMag * cos((time * innerWheelSpinRate) + (missileIndex * anglePerMissile))
	transUp = innerMag * sin((time * innerWheelSpinRate ) + (missileIndex * anglePerMissile))
end",0,4
23,Forward Spin,"local spinRate = 720

modelPitch = time * spinRate",0,1
24,Boomerang,"local angle = 90
local maxMagnitude = startDistance * .2
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
25,Spinning Wave,"local startAngle = 0
local finalAngle = 720
local wavesPerSec = 2
local maxMagnitude = 3

transAngle = startAngle + ((finalAngle - startAngle) * progress)
transMag = sin(time * wavesPerSec * 360) * maxMagnitude",0,1
26,Wave Beam,"local waveHeight = .8
local wavesPerSec = 4

transUp = waveHeight * sin(time * wavesPerSec * 360)",0,1
35,Glaive,"local spinRate = 360
local angle = 90
local maxMagnitude = startDistance * .1

modelYaw = 90
modelRoll = time * spinRate
modelPitch = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
",0,1
36,Meteor Strike,"local magnitude = totalDistance * .5

transUp = magnitude * ( 1 - progress )
",0,1
37,Orbital Strike (Meteor High),"local magnitude = totalDistance * 2

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
38,Forward Spin + Parabola,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
39,Spirit Fountain,"--
-- This is actually more like a heat-seeking missile
-- That always misses. 
-- However, if you use it with a Nearby-Circumference (Dest)
-- It looks awesome! 
-- Check out 37099 for an example.
--
local angle = 0
local maxMagnitude = startDistance*.75

transAngle = angle

if ( progress > .5 ) then
	transFront = (progress) / 2
else
	transFront = ((progress) * 1.5 - 0.5 )
end

transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
	
transFront = transFront * totalDistance",0,1
40,Fountain,"local angle = 0
local maxMagnitude = startDistance * .75

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)",0,1
41,Rocket Spiral,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

-- Add Upward Arc
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * startDistance * .15

transFront = transFront + -distanceToFirePos * (1 - progress)",0,7
61,Shrink (1.0x to 0.001x),"scale = math.max(1 - progress,0.001)",0,1
62,Grow,scale = progress,0,1
81,Spiral Vortex (3 Missiles),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,3
101,Roll (Clockwise),"local spinRate = 720

modelRoll = time * spinRate",0,1
121,Snake,"local waveHeight = .8
local wavesPerSec = 2

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
122,Snake (half frequency),"local waveHeight = .8
local wavesPerSec = 1

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
123,Spiral Vortex (2 Missiles),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,2
124,Parabola (-90 Pitch),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
125,Parabola (-90 to -45) (Flag Throw),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -90 + 45 * progress

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

faceImpactPos = 0",0,1
141,Grow (x3),scale = 3 * progress,0,1
142,Booterang,"local angle = 90
local maxMagnitude = startDistance * .2
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate
modelPitch = 90",0,1
161,Spin Around Caster,"local outerWheelSpinRate = 360 	-- 1 spin / sec
local outerWheelMag = 2			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	--local anglePerMissile = 360 / (missileCount - 1)
	--missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
transUp = -distanceToFirePos",0,1
162,Spin Around Caster  (3),"local outerWheelSpinRate = 360 	-- 1 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
transUp = -distanceToFirePos",0,3
163,Spin Around Caster Slow (3),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
transUp = -distanceToFirePos",0,3
181,Spiral (3 Missiles),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
",0,3
182,Spiral Inward (3 Missiles),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2
transRight = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2
",0,3
201,Axe Boomerang,"local angle = -90
local maxMagnitude = startDistance * .2
local spinRate = 720

modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
202,Axe Boomerang Return,"local angle = 90
local maxMagnitude = startDistance * .2
local spinRate = 720

modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate

transFront = distanceToImpactPos - distanceToFirePos",0,1
221,Black Temple - Glaive Throw (Illidan),modelRoll = time * 90,0,1
222,Black Temple - Glaives Return (Illidan),modelRoll = time * 90,0,1
223,Rotation Test,"local angle = 90
local maxMagnitude = startDistance * .2
local yawSpin = 1080

transAngle = angle
--transMag = (progress * 2) - 1
--transMag = (1 - (transMag * transMag)) * maxMagnitude
--modelYaw = time * yawSpin
--modelRoll = progress * 90
modelRoll = time * 500",0,1
224,Parabola (High),"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
225,Spiral,"local spinRate = 720

modelRoll = time * spinRate",0,1
226,Soul Vortex (3 Missiles),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,3
227,Black Temple - Akama Soul Retrieve (Do Not Reuse),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transUp = distanceToImpactPos - distanceToFirePos
transMag = 10 * (1-progress) * (1-progress)

transFront = distanceToImpactPos * (1 - progress) * (1 - progress)",0,3
241,Multi-shot Parabola (8 Missiles),"local angle = 0
local maxMagnitude = startDistance * .50
local spread = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transRight = (rand1 - 0.5) * spread * progress
transUp = (rand2 - 0.5) * spread * progress",0,8
261,Grow (1 -> 3),scale = 1 + 2 * progress,0,1
321,Grow (1 -> 3) - Model Reversed,"scale = 1 + 2 * progress
modelYaw = 180",0,1
341,Forward Spin + Parabola (High),"local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
361,Parabola (Top Spin),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
362,Parabola (Pitch Spin),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
381,Test Missile - LAB,"local startAngle = 0
local degreesPerSec = 720
local maxMagnitude = 1
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,1
382,Possessed Knives,"speedScalar = 0.1 + 35 * progress * progress
transUp  = (1.4 - 2 * rand1) * (1 - progress)
transRight  = (1 - 2 * rand2) * (1 - progress)",0,1
383,Twin Wave - Horizontal,"
local waveHeight = 1.5
local wavesPerSec = 0.7

if (missileIndex == 0) then
transRight = waveHeight * sin(time * wavesPerSec * 360)
end

if (missileIndex == 1) then
transRight = - waveHeight * sin(time * wavesPerSec * 360)
end",0,2
384,Twin Waves - Double,"
local waveHeight = 1.5
local wavesPerSec = 0.7

if (missileIndex == 0) then
transRight = waveHeight * sin(time * wavesPerSec * 360)
end

if (missileIndex == 1) then
transRight = - waveHeight * sin(time * wavesPerSec * 360)
end
--[[
if (missileIndex == 2) then
transUp = waveHeight * sin(time * wavesPerSec * 360) /2
end

if (missileIndex == 3) then
transUp = - waveHeight * sin(time * wavesPerSec * 360) /2
end ]]",0,4
385,Split Four Ways,"
local spread = 1.2
local distanceToFireMin = 5
local distanceToFireMax = 7
local spreadSpeed = 0.1
local finalSpeed = 1.5

if ( distanceToFirePos > distanceToFireMin and distanceToFirePos < distanceToFireMax ) then
   speedScalar = spreadSpeed
   if (missileIndex == 0) then
   transUp = spread * ( distanceToFirePos - distanceToFireMin ) / ( distanceToFireMax - distanceToFireMin )
   end
   if (missileIndex == 1) then
   transUp = -spread * ( distanceToFirePos - distanceToFireMin   ) / ( distanceToFireMax - distanceToFireMin )
   end
   if (missileIndex == 2) then
   transRight = spread * ( distanceToFirePos - distanceToFireMin   ) / ( distanceToFireMax - distanceToFireMin )
   end
   if (missileIndex == 3) then
   transRight = -spread * ( distanceToFirePos - distanceToFireMin    ) / ( distanceToFireMax - distanceToFireMin )
   end
end

if ( distanceToFirePos > distanceToFireMax ) then
   speedScalar = finalSpeed
   if (missileIndex == 0) then
   transUp = spread
   end
   if (missileIndex == 1) then
   transUp = -spread
   end
   if (missileIndex == 2) then
   transRight = spread
   end
   if (missileIndex == 3) then
   transRight = -spread
   end
end
",0,4
386,Possessed Knives x8,"speedScalar = 0.1 + 35 * progress * progress
transUp  = (1.4 - 2 * rand1) * (1 - progress)
transRight  = (1 - 2 * rand2) * (1 - progress)",0,8
401,Spin (Roll) - 1080,"local spinRate = 1080

modelRoll = time * spinRate",0,1
421,Zul'Aman - Skull Throw,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
441,Forward Spin + Parabola (Very High),"local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
482,"Soul Vortex (3 Missiles - No Kickback, 180 deg/sec)","local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 2.5
local maxKickBack = 0

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,3
501,Parabola (Low),"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
521,"Parabola (Top Spin, High)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate",0,1
541,Crazy Launch (1 Missile),"local outerWheelSpinRate = 1     -- 180 = 1 spin / sec
local outerWheelMag = 1
local missileAngle = 1

outerWheelSpinRate = 360 - 400 * (progress)
speedScalar = sin(100 * progress) + 0.1
missileAngle = outerWheelSpinRate * time
outerWheelMag = 10 * sin (500 * progress)
transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
",0,1
542,Parabola (Very High),"local angle = 0
local maxMagnitude = startDistance * .60

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
561,Meandering Missile (1),"local maxMagnitude = 1.0
local minSpeedScalar = 1.0
local maxSpeedScalar = 1.0
local randscalar = 100
local timescalar = 50
 
local angle = 0
local maxArcMagnitude = startDistance * .35

local magnitude = (progress * 1.9) - 1

magnitude = 1 

transRight = (sin((rand1 * randscalar * progress) + (time * randscalar)) + sin((rand2 * randscalar * progress) + (time * timescalar))) * magnitude
transUp = (sin((rand2 * randscalar * progress) + (time * randscalar)) + sin((rand1 * randscalar * progress) + (time * timescalar))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxArcMagnitude
",0,1
581,Meandering Missile Soul (1),"local maxMagnitude = 1.0
local minSpeedScalar = 1.0
local maxSpeedScalar = 1.0
local randscalar = 100
local timescalar = 50
 
local angle = 0
local maxMagnitude = startDistance * .35

local magnitude = (progress * 1.9) - 1

local Xmagnitude = 4 
local Ymagnitude = 2

transRight = (sin((rand1 * randscalar * progress)+ (time * randscalar)) + sin((rand2 * randscalar * progress))) * Xmagnitude
transUp = (sin((rand2 * randscalar * progress) + (time * randscalar)) + sin((rand1 * randscalar * progress) + (time * timescalar))) * Ymagnitude
transUp = transUp - 0
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
601,Time-Warped Shot,"
local slowProgressStart = 0.4
local slowProgressEnd = 0.65
local slowSpeed = 0.3
local finalSpeed = 6

speedScalar = finalSpeed

if ( progress > slowProgressStart and progress < slowProgressEnd ) then
   speedScalar = slowSpeed
end

",0,1
621,"Parabola (Pitch and Yaw Spin, High Altitude)","local angle = 0
local maxMagnitude = startDistance * 1
local spinRateP = 180
local spinRateY = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
641,Multi-Shot (3 Missiles),"-- spread out as the missiles travel
local outerWheelMag = 1.5 * progress
local missileAngle


if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

transMag = outerWheelMag
",0,3
661,Big to Small to Big Scale,"local m1x=0.4    --the first progress point where the missile is smallest
local m1y=0.4    --the scale of the missile at the point above

local m2x=0.6    --the first progress opint where the missile begins growing again
local m2y=0.4    --the scale of the missile at the point above


local slope
local intercept
if (progress <m1x) then
                slope=(1-m1y)/(0-m1x)
                intercept=1
elseif (progress<m2x) then
                slope=(m1y-m2y)/(m1x-m2x)
                intercept=m1y-slope*m1x
else
                slope=(m2y-1)/(m2x-1)
                intercept=1-slope
end
scale=slope*progress+intercept
",0,1
681,Creature - Drain Power Effect (Malacrass),"local startAngle = 0
local degreesPerSec = 720
local maxMagnitude = 1
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,5
701,Forward Spin (Fast),"local spinRate = 1440

modelPitch = time * spinRate",0,1
721,Triple Parabola (Low),"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
progress = math.fmod(progress * 3, 1)
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
722,"Triple Parabola (Low, Falloff) ","local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
progress = math.fmod(progress * 3, 1)
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transMag = transMag * (1 - progress)",0,1
741,Grow (1 -> 10),scale = 10 * progress,0,1
761,"Paper Airlplane, Flying Machine ","
local minSpeedScalar = 1.0
local maxSpeedScalar = 1.0
local randscalar = 100
local timescalar = 50
 
local angle = 0
local maxMagnitude = startDistance * .20

local magnitude = (progress * 1.9) - 1

local Xmagnitude = 4 
local Ymagnitude = 2


local modProgress = 4*(-1*(progress*progress) + progress)

transRight = (sin((rand1 * randscalar * modProgress)+ (time * randscalar * modProgress)) + sin((rand2 * randscalar * modProgress))) * Xmagnitude
transUp = (sin((rand2 * randscalar * modProgress) + (time * randscalar)) + sin((rand1 * randscalar * modProgress) + (time * timescalar))) * Ymagnitude
transUp = transUp - 0
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
781,"Paper Airlplane, Zeppelin","local randscalar = 100
local timescalar = 100
local wavefreqscalar = 50
local yawlimit = 60
local rolllimit = 25
local minSpeedScalar = 1.0
local maxSpeedScalar = 1.0

local angle = 0
local maxMagnitude = startDistance * .10

local Ymagnitude = 1
local Xmagnitude = 3

local modProgress = 4*(-1*(progress*progress) + progress)

modelYaw = sin(time*timescalar*rand1) * yawlimit * rand2
modelRoll = sin(time*timescalar*rand2) * rolllimit * rand1
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
transUp = (sin((rand3 * randscalar * modProgress) + (time * randscalar)) + sin((rand1 * randscalar * modProgress) + (time * wavefreqscalar))) * Ymagnitude

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
801,Always Miss,"transRight = progress * 2
transUp = progress * 4
transFront = progress * 20",0,1
821,Orbital Strike (Reverse),"local magnitude = totalDistance * 2.0

transUp = totalDistance + -magnitude * ( progress )
transFront = distanceFromImpactPos

-- speedScalar = 0.8",0,1
841,Drunken Missiles Slow,"local maxMagnitude = 0.5
local minSpeedScalar = .9
local maxSpeedScalar = 1.1

local angle = 0
local maxArcMagnitude = startDistance * .75


local magnitude = (progress * 1.9) - 1
magnitude = (1 - (magnitude * magnitude * magnitude * magnitude)) * maxMagnitude

transRight = (sin((rand1 * 1000) + (time * 700)) + cos((rand2 * 1000) + (time * 100))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxArcMagnitude",0,5
861,Multi-shot Parabola (4 Missiles),"local angle = 0
local maxMagnitude = startDistance * .50
local spread = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transRight = (rand1 - 0.5) * spread * progress
transUp = (rand2 - 0.5) * spread * progress",0,4
881,Forward Spin (med) + Parabola (Random low),"local angle = 0
local randomMagnitudeScalar = rand1

if (randomMagnitudeScalar <= 0.33)then
	randomMagnitudeScalar = 0.20
elseif (randomMagnitudeScalar <= 0.66)then
	randomMagnitudeScalar = 0.30
elseif (randomMagnitudeScalar <= 0.99)then
	randomMagnitudeScalar = 0.40
end

local maxMagnitude = startDistance * randomMagnitudeScalar
local spinRate = 540

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
901,"Midsummer - Juggle Torch, Self","local missileSpeed = 0.42
local startSpeed = 20
local p0 = 0.5

local travelTime = (startDistance / missileSpeed) - 2.5
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

local spinRate = 1080
modelPitch = time * spinRate
",0,1
921,Midsummer - Juggle Torch (Quest),"local angle = 0
local maxMagnitude = (distanceToImpactPos) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local spinRate = 1080
modelPitch = time * spinRate

speedScalar = 1",0,1
922,Creature - Encapsulate (Felblaze),"scale = 0.10 + 1 * progress * progress
--speedScalar = 3 * progress",0,1
941,"Midsummer - Juggle Torch, Slow","local missileSpeed = 3.9
local startSpeed = 20
local p0 = 0

local travelTime = (startDistance / missileSpeed)
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

--transFront = -distanceToFirePos

local spinRate = 1420
modelPitch = time * spinRate
",0,1
942,"Midsummer - Juggle Torch, Medium","local missileSpeed = 6
local startSpeed = 15
local p0 = 0

local travelTime = (startDistance / missileSpeed)
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

--transFront = -distanceToFirePos

local spinRate = 1500
modelPitch = time * spinRate
",0,1
943,"Midsummer - Juggle Torch, Fast","local missileSpeed = 9
local startSpeed = 20
local p0 = 0

local travelTime = (startDistance / missileSpeed)
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

--transFront = -distanceToFirePos

local spinRate = 1600
modelPitch = time * spinRate
",0,1
961,Creature - Summon Void Sentinel (M'uru),"local degreesPerSec = 720
local maxMagnitude = 4

transAngle = (missileIndex / missileCount) * 360 + (time * degreesPerSec)
transMag = 1- progress
transMag = transMag * maxMagnitude
transUp = 5 * progress",0,5
981,Creature - Transform Visual Missile (M'uru),"local sideMagnitude = startDistance * .3
local frontMagnitude = startDistance
local minAngle = -135
local maxAngle = -45
local collapseAngle = -90

speedScalar = .4 + (progress * 1.2)

transAngle = minAngle + (rand1 * (maxAngle - minAngle))
transAngle = (transAngle * (1 - progress)) + (collapseAngle * progress)
transMag = sin(progress * 480) * (1 - progress) * sideMagnitude
transUp = (rand2 - 0.5) * (15 * progress) - 2

transFront = sin(progress * 240) * (1 - progress) * frontMagnitude",0,1
1001,Parabola (Very VERY High),"local angle = 0
local maxMagnitude = startDistance * .90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
1041,Drunken Missiles (High Parabolic),"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,5
1061,Parabola - Tree Tumble,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 120

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
modelRoll = time * spinRate/2
modelPitch = time * spinRate/4",0,1
1101,"Spiral + Parabola (Low, Random)","local angle = 0
local maxMagnitude = startDistance * .05
local spinRate = 720

if ( rand1 > 0.5 ) then
	spinRate = spinRate * -1
end

modelRoll = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
1141,"Parabola (Pitch Spin, High)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
1161,"Parabola (Spin, High)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
1181,"Parabola (Top Spin, Very High)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
1183,Big to Small to Big Scale (shifted upwards),"local m1x=0.4    --the first progress point where the missile is smallest
local m1y=0.4    --the scale of the missile at the point above

local m2x=0.6    --the first progress opint where the missile begins growing again
local m2y=0.4    --the scale of the missile at the point above


local slope
local intercept
if (progress <m1x) then
                slope=(1-m1y)/(0-m1x)
                intercept=1
elseif (progress<m2x) then
                slope=(m1y-m2y)/(m1x-m2x)
                intercept=m1y-slope*m1x
else
                slope=(m2y-1)/(m2x-1)
                intercept=1-slope
end
scale=slope*progress+intercept

transUp=1.6",0,1
1201,Creature - Summon Telestra Clone (Telestra),"local angle = 0
local maxMagnitude = startDistance * .90

transAngle = angle
transMag = (progress * 2) - 1
transMag = 2*(1 - (transMag * transMag)) * maxMagnitude",0,1
1221,Spiral Cyclone (Slow),"local numSpirals = 5
local radius = 5 * progress * (rand1 + .5)

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = 1.5 * progress

speedScalar = .2",0,1
1241,Shrink (1.0x to 0.25x),scale = ((1 - progress) * (0.75)) + (0.25),0,1
1242,"Parabola (Pitch Spin, VERY VERY HIGH)","local angle = 0
local maxMagnitude = startDistance * 6
local spinRateP = 60

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
",0,1
1261,Creature - Spirit Burst Extra Visual (Ymiron),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (rand1*30) * time
transRight = outerWheelMag * sin ( missileAngle ) * (rand2*30) * time

transUp = distanceToFirePos*10",0,10
1262,Creature - Spirit Burst (Ymiron),"local angle = 0
local maxMagnitude = startDistance * .60

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
1281,Creature - Summon Avenging Spirit Visual (Ymiron),"
	transUp = (1 - progress) * 8


",0,1
1301,Grizzly Hills - Quest - Burning Oil,"
local angle = 0
local maxMagnitude = 4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


local spread = 1
local distanceToFireMin = 5
local distanceToFireMax = 30
local spreadSpeed = 1
local finalSpeed = 1.5

if ( distanceToFirePos > distanceToFireMin and distanceToFirePos < distanceToFireMax ) then
   speedScalar = spreadSpeed
   if (missileIndex == 0) then
   transUp = spread * ( distanceToFirePos - distanceToFireMin ) / ( distanceToFireMax - distanceToFireMin )
   end
   if (missileIndex == 1) then
   transUp = -spread * ( distanceToFirePos - distanceToFireMin   ) / ( distanceToFireMax - distanceToFireMin )
   end
   if (missileIndex == 2) then
   transRight = spread * ( distanceToFirePos - distanceToFireMin   ) / ( distanceToFireMax - distanceToFireMin )
   end
   if (missileIndex == 3) then
   transRight = -spread * ( distanceToFirePos - distanceToFireMin    ) / ( distanceToFireMax - distanceToFireMin )
   end
end

if ( distanceToFirePos > distanceToFireMax ) then
   speedScalar = finalSpeed
   if (missileIndex == 0) then
   transUp = spread
   end
   if (missileIndex == 1) then
   transUp = -spread
   end
   if (missileIndex == 2) then
   transRight = spread
   end
   if (missileIndex == 3) then
   transRight = -spread
   end
end",0,4
1321,"Tumbling Debris (Spin, Very High)","local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 1440

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate *rand1
modelYaw = time * spinRate
",0,1
1322,Tumbling Debris (Very High),"local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 1440

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
1341,Forward Spin (Med) + Grow (1->3),"local spinRate = 540

modelPitch = time * spinRate

scale = 1 + 2 * progress",0,1
1361,Parabola (Grow),"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = progress +.01",0,1
1381,Upper Deck - Ethereal Pet OnKill Give Essence,"local maxHeight = 10

transUp = progress * (1 - progress) * maxHeight

--transFront = startDistance - 2 * distanceToFirePos  --this would reverse the direction of the missile
",0,1
1401,Scale to 0 early in life,"scale = 1 - (progress * progress) - 0.5
if scale < 0 then
	scale = 0
end",0,1
1421,"Parabola (Top Spin, Very VERY High)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
1422,Missile Swarm,"local maxMagnitude = 0.5
local minSpeedScalar = 0.7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 100)) + cos((rand2 * 1000) + (time * 200))) * magnitude * (1-progress)
--transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

",0,5
1441,zzOLDCreature - Glare of the Tribunal (Tribunal),"
	if missileIndex == 1 then
		transRight =  (1 - progress) * 3
	else
		transRight =  (1 - progress) * -3
	end",0,2
1461,"Always Miss (Revised, Random)","transRight = 5 * (1 - progress * 2 * rand2)
transUp = 2 * (1 - progress * 2 * rand1)
transFront = 80 * progress",0,1
1462,Reverse Direction,"--this would reverse the direction of the missile

--warning, doesn't work at all if the missiles start at different heights
--(eg. missile is moving from a short target's chest to a tall target's chest)
--as a workaround, you can fire from base to base and manually adjust heights
--in the missile script - JJS

transFront = startDistance - 2 * distanceToFirePos
",0,1
1481,"Parabola (Fast Spin, High)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 1440

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate",0,1
1501,Accelerated Missile  (I don't think this does what you think),"transFront = 0-distanceToFirePos+(math.pow(progress, 1)*startDistance)
",0,1
1502,Soul Vortex (7 Missiles),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,7
1503,Soul Vortex (7 Missiles - Resyncced),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10
speedscalar = 0.5

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,7
1521,Machine Gun,"if (missileIndex > 0) then
    transFront = progress * (3 - 2 * missileIndex)
end

",0,3
1522,Rocket Spiral (x3),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

-- Add Upward Arc
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * startDistance * .15

transFront = transFront + -distanceToFirePos * (1 - progress)",0,3
1541,Parabola (Pitch and Yaw Spin),"local angle = 0
local maxMagnitude = startDistance * 0.5
local spinRateP = 180
local spinRateY = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
1542,"Parabola (Pitch and Yaw Spin, Low)","local angle = 0
local maxMagnitude = startDistance * 0.25
local spinRateP = 180
local spinRateY = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
1561,Dark Animus - Siphon Anima,"--reverse the direction of the missile and apply manual offsets to
--counteract the problem of reverse direction to targets of different sizes

transFront = startDistance - 2 * distanceToFirePos
transUp = 2 + progress * 17",0,1
1581,"Parabola (Pitch Spin, slow, low)","local angle = 0
local maxMagnitude = startDistance * .1
local spinRate = 120

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
1601,Creature - Raise Dead Effect (Anub'ar Necromancer),"local maxMagnitude = startDistance * .5
local spinRate = 360


transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = (rand1 * 5) * (time * spinRate)
speedScalar = (rand1 + 1)/2.5

transUp = rand1 * progress
transFront = rand2 * progress
transRight = rand3 * progress
",0,5
1621,Parabola (Yaw Spin),"local angle = 0
local maxMagnitude = startDistance * 0.25
local spinRateY = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRateY",0,1
1641,Missile Swarm (1 Missile),"local maxMagnitude = 0.5
local minSpeedScalar = 0.7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 100)) + cos((rand2 * 1000) + (time * 200))) * magnitude * (1-progress)
--transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
",0,1
1661,Multi-Shot (2 Missiles),"-- spread out as the missiles travel
local outerWheelMag = 1.5 * progress
local missileAngle


if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

transMag = outerWheelMag
",0,2
1662,Missile - 2,,0,2
1663,"Forward Spin (Med, Scale = 2)","scale = 2
local spinRate = 540

modelPitch = time * spinRate",0,1
1664,Shrink (Less),"scale = math.max(1 - (progress / 2),0.001)",0,1
1684,Creature - Ritual Strike (Svala),"local spinRate = 360

modelRoll = time * spinRate

transUp = progress * 3",0,1
1704,Drunken Missiles (2 Missiles),"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
",0,2
1724,Twin Waves - Double - Large,"
local waveHeight = 15
local wavesPerSec = 0.3

if (missileIndex == 0) then
transRight = waveHeight * sin(time * wavesPerSec * 360)
end

if (missileIndex == 1) then
transRight = - waveHeight * sin(time * wavesPerSec * 360)
end

if (missileIndex == 2) then
transUp = waveHeight * sin(time * wavesPerSec * 360) /2
end

if (missileIndex == 3) then
transUp = - waveHeight * sin(time * wavesPerSec * 360) /2
end",0,4
1725,Creature - Magic Sickle,"local angle = 0
local maxMagnitude = startDistance * .20
local spinRate = -3600

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
1726,Creature - Summon Harpoon (Skadi),"local angle = 0
local maxMagnitude = startDistance * 2
local spinRate = 1080

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
1744,Creature - Arcane Swarm (Malygos),"local angle = 0
local maxMagnitude = startDistance * 3

transAngle = angle	

if progress < 0.3 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 15
	speedScalar = .5
else
	transMag = (1 - (progress*1.43) +0.43) * 15
	speedScalar = 20 * progress * progress * progress
end


if progress <= .3 then
	transRight = (cos(progress*3000)) * 2 * (1-progress)
	transUp = (sin(progress*3000)) * 2 * (1-progress)
end",0,3
1764,"Always Miss (Random, JZB)","transRight = progress * ( 5 * rand1)
transUp = progress * ( 4 * rand2)
transFront = progress * 10


",0,1
1784,Creature - Rock Shards (Archavon),"	
	modelPitch = -90
--	scale = progress

--	transRight = (missileIndex * 5) * (1-progress)",0,1
1804,"Flip Coin, Self","--[[

--Old script, was based on 

local missileSpeed = 10
local startSpeed = 20
local p0 = 0.5

local travelTime = (startDistance / missileSpeed)  -- - 2.5
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

--transUp = -acc*time*time + v0*time + p0

]]--

local spinRate = 1080
modelPitch = time * spinRate


-- distance = X (totalDistance / 2)
-- acceleration due to gravity = -9.8
-- velocity = v0 + a * t
-- position = p0 + v0 * t + 0.5 a * t * t

local initialPosition = 0;
local initialVelocity = 9.8; 
local initialDistance = startDistance - initialPosition;

local travelTime = initialDistance / initialVelocity;

local t = travelTime * progress

transUp = initialPosition + initialVelocity * t + -9.8 * t * t
transFront = 0",0,1
1824,Creature - Shadow Crash (Forgotten One),"local angle = 0
local maxMagnitude = startDistance * .40

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000",0,1
1825,Engineering - Rocket Turret,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 12

--progress = 1 - progress
if ( rand1 < 0.5 ) then
	missileIndex = 1;
else
	missileIndex = 2;
end

transAngle = startAngle + ( missileIndex / 2 * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,1
1844,Creature - Ember Shower (Sandoval),"local angle = 0
local maxMagnitude = startDistance * .10 + (rand1 * 5)
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 3000",0,1
1864,"Parabola (Very VERY high, -45 to -0) (bunny jump)","local angle = 0
local maxMagnitude = startDistance * .90
modelPitch = -45 + 45 * progress

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
",0,1
1865,"Parabola (Pitch Spin, Very High)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
1884,"Multi-Shot (7 Missiles, Rolling, Tight, Drunken)","-- spread out as the missiles travel
local outerWheelMag =  progress / 3
local missileAngle


local maxMagnitude = 1.0
local minSpeedScalar = .8
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = (1 - (magnitude * magnitude * magnitude * magnitude)) / 3

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)


if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

modelRoll = (missileIndex + 2) * progress * 360

transMag = outerWheelMag
",0,7
1904,Creature - Arcane Swarm (Malygos),"local angle = 0
local maxMagnitude = startDistance * 3

transAngle = angle	

if progress < 0.3 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 15
	speedScalar = .5

else
	transMag = (1 - (progress*1.43) +0.43) * 15
	speedScalar = 20 * progress * progress * progress
end


if progress <= .3 then
	transRight = (cos(progress*3000)) * 2 * (1-progress)
	transUp = (sin(progress*3000)) * 2 * (1-progress)
end",0,3
1905,Creature - Solar Flare (Elder Brightleaf),"local angle = 0
local maxMagnitude = startDistance * 1

transAngle = angle	

if progress < .3 then	
transMag = (1 - (((progress*3.33)-1)^2)) * 10
	speedScalar = .3
else
	transMag = (1 - (progress*1.43) +0.33) * 10
	speedScalar = 20 * progress * progress * progress
end
",0,1
1924,Spiral + Spin (4 Missiles),"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 180

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,4
1964,Spiral Inward (3 Missiles),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2
transRight = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2
",0,3
1965,Creature - Acivate Construct (Ignis),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2 * progress
transRight = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2 * progress


local angle = 0
local maxMagnitude = startDistance * .50

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,3
1984,Creature - Summon Proximity Mines (Mimiron - P1),"local angle = 0
local maxMagnitude = startDistance * .8
local spinRate = 540

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
1985,Creautre - Rocket Strike (Mimiron),"local angle = 0
local maxMagnitude = 20

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = ((progress + .05)^1.5) * startDistance * .2",0,1
2004,Creature - Laser Barrage (Mimiron),"
	if missileIndex == 1 then
		transRight = (progress * (rand1 - .50) * 10) + .75
		transUp = progress * (rand2 - .70) * 10
	elseif missileIndex == 2 then
		transRight = (progress * (rand2 - .50) * 10) - .75
		transUp = progress * (rand3 - .70) * 10
	else
		transRight = progress * (rand2 - .50) * 10
		transUp = progress * ((rand1 - .70) * 10) + .75
	end

transFront = progress * 3",0,3
2024,Forward Spin (fast) + Parabola,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 1080

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2025,Creature - Rapid Burst Effect (Mimiron),"	if missileIndex == 1 then
		speedScalar = rand1/1.5 + 1
	elseif missileIndex == 2 then
		speedScalar = rand2/1.5 + 1
	else
		speedScalar = rand3/1.5 + 1
	end

	if missileIndex == 1 then
		transRight = progress * (rand1 - .50) + .5
		transUp = progress * (rand2 - .50)
	elseif missileIndex == 2 then
		transRight = progress * (rand2 - .50) - .5
		transUp = progress * (rand3 - .50)
	else
		transRight = progress * (rand2 - .50)
		transUp = progress * (rand1 - .50) + .5
	end",0,3
2044,Missile - 3,,0,3
2064,Morgan Test,"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,3
2084,Creature - Flame Leviathan - Rockets (Spiral),"local maxHeight = 5 + (startDistance * .08)

local newness = 1 - (progress * progress)

transAngle = (rand1 * 360) + (time * 400)

if progress < 0.05 then
	transMag = progress * 40
elseif progress < .1 then
	transMag = 2
elseif progress < .433333333 then
	transMag = 2 * (1 - ((progress - .1) * 3))
end

local transUp1 = (progress * 3.33) - 1
transUp1 = (1 - (transUp1 * transUp1)) * maxHeight

local transUp2 = (1.43 - (progress * 1.43)) * maxHeight

if progress < .2 then
	transUp = transUp1
elseif progress < .4 then
	transUp = transUp1 + ((transUp2 - transUp1) * ((progress - .2) * 5))
else
	transUp = transUp2
end

local accel = progress + .23
speedScalar = .05 + (8 * accel * accel * accel)",0,1
2104,Boomerang (Return),"local angle = -90
local maxMagnitude = startDistance * .2
local spinRate = 720

progress = 1 - progress

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate


transFront = distanceToImpactPos - distanceToFirePos
",0,1
2124,Creature - Laser Barrage,"
	if missileIndex == 1 then
		transRight = (progress * (rand1 - .50) * 10) + .75
		transUp = progress * (rand2 - .70) * 10
	elseif missileIndex == 2 then
		transRight = (progress * (rand2 - .50) * 10) - .75
		transUp = progress * (rand3 - .70) * 10
	else
		transRight = progress * (rand2 - .50) * 10
		transUp = progress * ((rand1 - .70) * 10) + .75
	end

transFront = progress",0,3
2144,Creature - Summon Magnetic Core (Mimiron - P3),"local angle = 0
local maxMagnitude = startDistance * .4
local spinRate = 540

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
2164,Dan's Test Motion,transUp = 5,0,1
2184,Isle of Conquest - Place Seaforium Charge,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 1080

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2204,Isle of Conquest - Glaive,"local spinRate = 1080

modelYaw = time * spinRate",0,1
2224,Fountain (Flaming Cinder),"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)",0,1
2244,Snake (3 Missiles),"local waveHeight = .8
local wavesPerSec = 2

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,3
2264,NPC - Glaive,"local spinRate = 1080

modelYaw = time * spinRate

local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2284,Isle of Conquest - Blade Salvo (Glaive Thrower),"modelPitch = 90
local spinRate = 1080

modelYaw = time * spinRate",0,1
2304,Isle of Conquest - Dagger Throw (Generals),"local spinRate = 1080

modelPitch = time * spinRate",0,1
2324,Parabola (2 missiles),"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,2
2344,"Parabola (High, Pitch Spin)","local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
2384,Spiral Cyclone JS,"local numSpirals = 2
local radius = 5 * progress * (rand1 + 0.5)

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = 2 * progress",0,2
2404,Spiral Flat 10yd min JS ,"local numSpirals = 5
local minRadius = 10
local radius = minRadius + (10 * progress * (rand1 * 5))

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2 * 5",0,3
2424,Drunken Fountain (5 Missiles),"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,5
2444,Creature - Summon Ice Ring (Arthas Encounter),"local angle = 0
local maxMagnitude = startDistance * .8
--local spinRate = 1080

--transAngle = angle
--transMag = (progress * 2) - 1
--transMag = (1 - (transMag * transMag)) * maxMagnitude
--transUp = progress * 1.1
transUp = 20 + (progress * -19)
transFront = 3 + (progress * -3)

--modelPitch = time * spinRate
",0,1
2464,Forward Spin (fast) + Parabola + Grow (1 -> 3),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 1080

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1 + 2 * progress",0,1
2484,Soul Vortex (10 Missiles - No Kickback),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 2.5
local maxKickBack = 0

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,10
2504,Creature - Soul Reaper Effect (Arthas Encounter),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 1			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2
transRight = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2
",0,3
2524,Parabola (-90 Pitch),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2525,Parabola (90 Pitch),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2526,Parabola (-90 Yaw),"local angle = 0
local maxMagnitude = startDistance * .15
modelYaw = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2544,Stinger Missile (always arrive in ~7 sec),"
transAngle = 0	

if (time < 7) then
	speedAbs = distanceToImpactPos / (7 - time)
else
	speedAbs = 100000
end

if progress < 0.4 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 20
	speedAbs = speedAbs * 0.4
elseif progress < 0.9 then
	transMag = (1 - (progress*1.43) +0.43) * 20
	speedAbs = speedAbs * (progress^2)
else
	transMag = (1 - (progress*1.43) +0.43) * 20
end

",0,3
2564,Spiral + Spin (2 Missiles),"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 180

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,2
2584,Fast Spiral + Spin (4 Missiles),"local spread = .5

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,4
2624,Drunken Fountain (1 Missile),"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
2644,Creature - Gunship Cannon Fire (Arthas Dungeon),"transUp = (progress * (rand1 - .5)) * 20
transRight = (progress * (rand2 - .5)) * 20

",0,1
2645,Creature - Ice Bomb (Sindragosa),"local angle = 0
local maxMagnitude = 20

local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
speedAbs = totalDistance/5.5",0,1
2664,Spiral + Spin,"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 180

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,1
2684,"Icecrown Dungeon - Destroy Wall, Sylvanas","transUp = ((progress * (rand1 - .5)) * 5) + (progress * 5)
transRight = (progress * (rand2 - .5)) * 20",0,1
2704,Fast Spiral + Spin (1 Missile),"local spread = .5

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,1
2724,Twin Wave - Horizontal - Large,"
local waveHeight = 5
local wavesPerSec = 0.7

if (missileIndex == 0) then
transRight = waveHeight * sin(time * wavesPerSec * 360)
end

if (missileIndex == 1) then
transRight = - waveHeight * sin(time * wavesPerSec * 360)
end",0,2
2744,Triple Parabola (Medium),"local angle = 1
local maxMagnitude = startDistance * .20

transAngle = angle
progress = math.fmod(progress * 3, 1)
transMag = (progress * 2) - 1
transMag = (.85 - (transMag * transMag)) * maxMagnitude",0,1
2764,Stinger Missile (No speed mod),"
transAngle = 0	

--speedAbs = startDistance / 7.5

if progress < 0.4 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 20
	speedAbs = speedAbs * .5
else
	transMag = (1 - (progress*1.43) +0.43) * 20
	speedAbs = speedAbs * (1.2+progress)^3
end

",0,3
2784,Parabola (Medium),"local angle = 0
local maxMagnitude = startDistance * .20

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2804,Forward Spin + Triple Parabola (Low),"local angle = 1
local maxMagnitude = startDistance * .20
local spinRate = 360


transAngle = angle
progress = math.fmod(progress * 3, 1)
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch = time * spinRate",0,1
2824,Drunken Fountain (3 Missiles),"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude
",0,3
2825,Spiral + Parabola,"local waveHeight = 1
local wavesPerSec = 2
local angle = 2
local maxMagnitude = startDistance * .15
local spinRate = 720

modelRoll = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2828,Drunken Missiles (1 Missile),"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
",0,1
2829,Parabola (Back Spin),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = -720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
2830,Creature - Nightmares (Green Dragon Encounter),modelPitch = 90,0,3
2831,Spiral (Small) Flat,"local radius = (progress * 8)

local curAngle = progress * 90

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
2832,"Spiral Vortex (4 Missiles, Tight, Don't Spiral)","local startAngle = 45
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 5

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,4
2833,Festergut - Malleable Ooze (Putricide),"local throwHeight = 32.5;
local progressAtFirstBounce = .45;
local heightOfFirstBounce = 10;
local progressAtSecondBounce = .75;
local heightOfSecondBounce = 7;
local spinRate = 360

modelPitch = time * spinRate
transUp = throwHeight * progress;

if (progress < progressAtFirstBounce) then

	local normalizedProgress = progress / progressAtFirstBounce;
	transUp = transUp - ((normalizedProgress * normalizedProgress) * throwHeight);

elseif (progress < progressAtSecondBounce) then

	local normalizedProgress = (progress - progressAtFirstBounce) /
		(progressAtSecondBounce - progressAtFirstBounce);

	local curHeight = (normalizedProgress * 2) - 1;
	curHeight = (1 - (curHeight * curHeight)) * heightOfFirstBounce;

	transUp = (transUp - throwHeight) + curHeight;

else

	local normalizedProgress = (progress - progressAtSecondBounce) /
		(1.0 - progressAtSecondBounce);

	local curHeight = (normalizedProgress * 2) - 1;
	curHeight = (1 - (curHeight * curHeight)) * heightOfSecondBounce;

	transUp = (transUp - throwHeight) + curHeight;

end",0,1
2834,Creature - Broken Frostmourne Soul Missiles (Arthas Enc,"local numSpirals = 5
local minRadius = 10
local radius = minRadius + (10 * progress * (rand1 * 2))

local curAngle = numSpirals * progress * -360

transFront = ((sin(curAngle) * radius * rand3)) * progress
transRight = (cos(curAngle) * radius * rand3) * progress

transUp = (rand2 * 5)* progress

scale = (rand2 + 1) * 2",0,3
2835,Random Scale (1->2),scale = 1 + 1*rand1,0,1
2836,"Creature - Player Wins, Frostmourne Room - Missiles","local angle = 0
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,3
2837,Icecrown Raid - Arthas - Frostmoune Breaks,"local angle = 0
local maxMagnitude = startDistance * .75
local spinRate = 540

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate *rand1
modelYaw = time * spinRate
",0,1
2838,Grow (1 -> 15),scale = 1 + 14 * progress,0,1
2839,"Snake (half amp, rand wave)","local waveHeight = .2
local wavesPerSec = 2 + (rand1 * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
2840,Stinger Missile (always arrive in ~5 sec),"
transAngle = 0	

if (time < 5) then
	speedAbs = distanceToImpactPos / (5 - time)
else
	speedAbs = 100000
end

if progress < 0.4 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 20
	speedAbs = speedAbs * 0.4
elseif progress < 0.9 then
	transMag = (1 - (progress*1.43) +0.43) * 20
	speedAbs = speedAbs * (progress^2)
else
	transMag = (1 - (progress*1.43) +0.43) * 20
end

",0,3
2841,Creature - Meteor Strike (Halion),"local angle = 0
local maxMagnitude = 20

local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
speedAbs = totalDistance/6.5",0,1
2842,Fast Spiral + Spin (1 Missile) (+180),"local spread = .5

local startAngle = 360 * missileIndex / missileCount + 180;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,1
2843,Fast Spiral + Spin (1 Missile) (Tightens) (+180),"local spread = .5

local startAngle = 360 * missileIndex / missileCount + 180;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread * (1-progress);

local pause = 0.2	

if ( progress < pause ) then 
	transFront = 0;
else
	progress = progress - pause + pause * progress
    transFront = progress*progress*progress
end

local spinRate = 360
modelRoll = time * spinRate
",0,1
2844,Fast Spiral + Spin (1 Missile) (Tightens),"local spread = .5

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread * (1-progress);

local pause = 0.2

if ( progress < pause ) then 
	transFront = 0;
else
	progress = progress - pause + pause * progress
    transFront = progress*progress*progress
end

local spinRate = 360
modelRoll = time * spinRate
",0,1
2845,Grow (1 -> 10),scale = 1 + 9 * progress,0,1
2846,Spiral + Spin (12 Missiles),"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 180

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,12
2847,Bubble Blast,"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec) 
transMag = spread * missileIndex / missileCount;

local spinRate = 360
modelRoll = time * spinRate

transFront = distanceToImpactPos * progress * missileIndex / missileCount;

if ( math.fmod(missileIndex,2) == 1 ) then
    transAngle = transAngle + 180;
end",0,24
2848,Gear Toss,"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle  -- + (time * degreesPerSec) 
transMag = spread * missileIndex / missileCount;

local spinRate = 360
--modelRoll = time * spinRate

transFront = distanceToImpactPos * progress * missileIndex / missileCount;

if ( math.fmod(missileIndex,2) == 1 ) then
    transAngle = transAngle + 180;
end

if ( math.fmod(missileIndex,3) == 1 ) then
    transAngle = transAngle + 30 * rand1;
elseif ( math.fmod(missileIndex,3) == 2 ) then
    transAngle = transAngle + 90 * rand2;
end",0,24
2849,Always Miss (Down),"transRight = progress * 2
transUp = progress * -4
transFront = progress * 20",0,1
2850,Fast Spiral + Spin (4 Missile) (Tightens) (+180),"local spread = .5

local startAngle = 360 * missileIndex / missileCount + 180;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread * (1-progress);

local pause = 0.2	

if ( progress < pause ) then 
	transFront = 0;
else
	progress = progress - pause + pause * progress
    transFront = progress*progress*progress
end

local spinRate = 360
modelRoll = time * spinRate
",0,4
2851,Fast Spiral + Spin (4 Missile) (Tightens),"local spread = .5

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread * (1-progress);

local pause = 0.2

if ( progress < pause ) then 
	transFront = 0;
else
	progress = progress - pause + pause * progress
    transFront = progress*progress*progress
end

local spinRate = 360
modelRoll = time * spinRate
",0,4
2852,Spiral Opposite,"local spinRate = -720

modelRoll = time * spinRate",0,1
2853,Creature - Tsunami (Throne of Tides),	scale = (1/(progress+.2)),0,1
2854,Parabola (Roll),"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000",0,1
2855,"Forward Spin (Fast, 2 Missiles)","local spinRate = 1440

modelPitch = time * spinRate",0,2
2856,Creature - Consuming Flames (Dragon Alch),,0,2
2857,Creature - Throw Blue Bottle (Dragon Alch),"local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2858,Accelerated Missile (Faster),speedScalar = 0.2 + 3 * progress,0,1
2859,Grow (1 -> 10) and Accelerate,"scale = 1 + 9 * progress
speedScalar = 0.2 + 3 * progress",0,1
2860,Creature - Spikes (Bouncer Encounter),"
	modelPitch = (progress * 360) * 2

	modelRoll = 90	
	modelYaw = 90

	local dist = 60

	if missileIndex == 0 then
		transFront = progress * -dist
	elseif missileIndex == 1 then
		transFront = progress * -dist/2
		transRight = progress * dist/2
	elseif missileIndex == 2 then
		transRight = progress * dist
	elseif missileIndex == 3 then
		transFront = progress * dist/2
		transRight = progress * dist/2
	elseif missileIndex == 4 then
		transFront = progress * dist
	elseif missileIndex == 5 then
		transFront = progress * dist/2
		transRight = progress * -dist/2
	elseif missileIndex == 6 then
		transRight = progress * -dist
	elseif missileIndex == 7 then
		transFront = progress * -dist/2
		transRight = progress * -dist/2
	end

	transAngle = 0
	transMag = progress * ((rand1-.5) * 10)",0,8
2861,"Always Miss - Random Angle, Miss by 5-10 yd","transAngle = 360*rand1
transMag = progress*(5+5*rand2)
transFront = progress*1.3",0,1
2862,"Always Miss - Random Angle, Miss by 5-10 yd, Parabola","local maxMagnitude = startDistance * .15
transAngle = 360*rand1
transMag = (5+5*rand2) * progress

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude
transFront = 1.3 * progress

",0,1
2863,Creature - Magma Erruption Summon Effect (Deepholm),"local angle = 0
local maxMagnitude = startDistance * .60

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2864,Mekkatorque-Missiles,"local maxMagnitude = 3
local minSpeedScalar = .5
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

--stolen from stinger missiles, it starts the missiles higher up
transAngle = 0	

if progress < 0.4 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 5
	speedAbs = speedAbs * .5
else
	transMag = (1 - (progress*1.43) +0.43) * 5
	speedAbs = speedAbs * (1.2+progress)^3
end",0,22
2865,Quest - White Mist Expel,"local startAngle = 0
local degreesPerSec = 20
local maxMagnitude = 3
local maxKickBack = 0

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)

transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,2
2866,Quest - Mist Retrieve,"local startAngle = 0
local degreesPerSec = 20
local maxMagnitude = 3
local maxKickBack = 0

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transUp = distanceToImpactPos - (distanceToFirePos +2)
transMag = 10 * (1-progress) * (1-progress)

transFront = distanceToImpactPos * (1 - progress) * (1 - progress)",0,1
2867,Creature - Stalactite,"
	modelRoll = 270
	modelYaw = 90

	modelPitch = progress * 180",0,1
2868,Drunken Fountain (3 Missiles) (High),"local angle = 0
local maxMagnitude = startDistance * 1.5
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
2869,Missile Swarm (Nefarian),"local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 100)) + cos((rand2 * 1000) + (time * 200))) * magnitude * (1-progress)


local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = 0.5;

local spinRate = 360
modelRoll = time * spinRate


if missileIndex == 0 then
	speedScalar = 1.5
elseif missileIndex == 1 then
	speedScalar = 1.6
elseif missileIndex == 2 then
	speedScalar = 1.7
else
	speedScalar = 1.8
end",0,4
2870,Spiral (Nefarian Meteor),"local outerWheelSpinRate = 360
local outerWheelMag
local missileAngle = outerWheelSpinRate * time

if missileIndex == 1 then
	transUp = 0.75
	outerWheelMag = 1.1
	scale = 0.4
elseif missileIndex == 2 then
	transUp = 5.5
	outerWheelMag = 0.3
	scale = 0.4
elseif missileIndex == 3 then
	transUp = 6.8
	outerWheelMag = 0.4
	scale = 0.48
elseif missileIndex == 4 then
	transUp = 2.5
	outerWheelMag = 0.7
	scale = 0.6
elseif missileIndex == 5 then
	transUp = 3.5
	outerWheelMag = 1.25
	scale = 0.5
elseif missileIndex == 6 then
	transUp = 7.4
	outerWheelMag = 0.2
	scale = 0.4
end

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount - rand2)
	missileAngle = missileAngle + anglePerMissile * missileIndex

	transFront = outerWheelMag * cos ( missileAngle )
	transRight = outerWheelMag * sin ( missileAngle )
end

",0,7
2871,Creature - Crystal Barrage (Deepholm Dungeon - Ring W,"
	modelPitch = 90",0,1
2872,"Always Miss - Left or Right, Miss by 1-2 yd","transAngle = -90+math.floor(rand1*2)*180
transMag = progress*(1+1*rand2)
transFront = progress*1.5",0,1
2873,Blow Dart,"local angle = 25
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2874,Forward Spin (Fast),"local spinRate = 1440

modelPitch = time * spinRate",0,1
2875,Deepholm - Stone Spike,"

modelPitch = 90",0,1
2876,King Mukla - Barrel Toss,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 60

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = math.fmod(modelPitch,360);

transUp = math.sin(modelPitch/180*3.14)*3;
transFront = math.cos(modelPitch/180*3.14)*3;

-- transUp = math.sin(modelPitch/180)*4;

-- force the missile to always face the impact position
faceImpactPos = 1;

",0,1
2877,Shuriken Toss,"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle  -- + (time * degreesPerSec) 
transMag = spread * missileIndex / missileCount;

local spinRate = 360
modelRoll = time * spinRate + 360*rand1

transFront = distanceToImpactPos * progress * missileIndex / missileCount;

if ( math.fmod(missileIndex,2) == 1 ) then
    transAngle = transAngle + 180;
end

if ( math.fmod(missileIndex,3) == 1 ) then
    transAngle = transAngle + 30 * rand1;
elseif ( math.fmod(missileIndex,3) == 2 ) then
    transAngle = transAngle + 90 * rand2;
end",0,24
2878,Banana Toss,"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle  -- + (time * degreesPerSec) 
transMag = spread * missileIndex / missileCount;

local spinRate = 360
modelYaw = time * spinRate + 360*rand1
modelRoll = time * spinRate + 360*rand2

transFront = distanceToImpactPos * progress * missileIndex / missileCount;

if ( math.fmod(missileIndex,2) == 1 ) then
    transAngle = transAngle + 180;
end

if ( math.fmod(missileIndex,3) == 1 ) then
    transAngle = transAngle + 30 * rand1;
elseif ( math.fmod(missileIndex,3) == 2 ) then
    transAngle = transAngle + 90 * rand2;
end",0,24
2879,Parabola (Very Very VERY High),"local angle = 0
local maxMagnitude = startDistance * 1.4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2881,Grow (1 -> 2.5),scale = 1 + (1.5 * progress),0,1
2882,Accelerated Missile (Based on Time),speedScalar = 0.1 + (5 * time * time * time * time),0,1
2883,Parabola (Pitch Spin) Grow 1->3,"scale = 1 + 2 * progress

local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
2884,Spin (Roll) (Pitch 90),"
modelPitch = 90

modelRoll = progress * 600",0,1
2885,Spiral Flat JS (Howling Gale 16),"local numSpirals = 4

if missileIndex == 0 then
	radius = 5
elseif missileIndex == 1 then
	radius = 10
else
	radius = 16
end

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2 * 5

-- spin them a little so they look good from the side
modelRoll = 30",0,3
2886,Spiral Flat JS (Howling Gale 10),"local numSpirals = 3

if missileIndex == 1 then
	radius = 10
else
	radius = 5
end

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2 * 5

-- spin them a little so they look good from the side
modelRoll = 30",0,2
2887,Spiral Flat JS (Howling Gale 5),"local numSpirals = 2

radius = 5

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2 * 5

-- spin them a little so they look good from the side
modelRoll = 30",0,1
2889,"Parabola (Roll) (3 Missiles, Grow)","local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000

scale = progress",0,3
2890,Crystal Upheaval,"    disk = 10;
	mag = 30 * rand2;
	angle = 360 * rand1;

	transFront = mag * math.cos(angle);
	transRight = mag * math.sin(angle);
    transUp = disk * rand3;

    modelYaw = 360 * time + 180 * missileIndex / missileCount;",0,20
2891,"Start slow, End Fast, Slow roll based on speed","local spinRate = 60
modelRoll = time * spinRate
speedScalar = 0.1 + 35 * progress * progress
transUp  = (1.4 - 2 * rand1) * (1 - progress)
transRight  = (1 - 2 * rand2) * (1 - progress)",0,1
2892,Parabola (SPECIAL - UNIQUE - DO NOT REUSE),"local angle = 0
local maxMagnitude = startDistance * .60

transUp = (1 - progress) * 50
transFront = - (1 - progress) * 100
transRight = (1 - progress) * 100

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
2893,Parabola (90 Pitch) (High),"local angle = 0
local maxMagnitude = startDistance * .35
modelPitch = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2894,"Creature - Crystal Storm, Heroic (Slabhide Encounter)",transFront = progress * 30,0,1
2895,Creature - Crystal Storm (Slabhide Encounter),modelPitch = -90,0,1
2896,Creature - Throw Black Bottle (Extra Missile Vis) (Dragon,"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = 180",0,1
2897,Creature - Cursed Bullets (Lord Godfrey Encounter),"
	if missileIndex == 1 then
		transRight = -0.4 * (1-progress)
		transFront = -1 * (1-progress)
	end",0,2
2898,Grow (1 -> 2.5)(Pitch -90),"scale = 1 + (1.5 * progress)
modelPitch = -90",0,1
2899,Spiral Swarm (Nefarian Meteor Flat),"local outerWheelSpinRate = 360
local outerWheelMag
local missileAngle = outerWheelSpinRate * time

if missileIndex == 1 then
	outerWheelMag = 1.1
	scale = 0.4
elseif missileIndex == 2 then
	outerWheelMag = 0.3
	scale = 0.4
elseif missileIndex == 3 then
	outerWheelMag = 0.4
	scale = 0.48
elseif missileIndex == 4 then
	outerWheelMag = 0.7
	scale = 0.6
elseif missileIndex == 5 then
	outerWheelMag = 1.25
	scale = 0.5
elseif missileIndex == 6 then
	outerWheelMag = 0.2
	scale = 0.4
end

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount - rand2)
	missileAngle = missileAngle + anglePerMissile * missileIndex

	transFront = outerWheelMag * cos ( missileAngle )
	transRight = outerWheelMag * sin ( missileAngle )
end
",0,7
2900,Left Yaw Spin,"local spinRate = 720

modelYaw = time * spinRate",0,1
2901,"Parabola (Pitch Spin, Slow Reverse)","local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = -360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
2902,Summon Wings of Aviana,"local minSpeedScalar = .7
local maxSpeedScalar = 1.5

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200)))
transFront = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300)))

speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)",0,9
2903,Parabola (Very Low),"local angle = 0
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2904,Test - Explosion (NOT a Missile!),"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transAngle = 90
transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
",0,8
2905,Spiral Swarm (Nefarian Meteor Parabola),"local outerWheelSpinRate = 360
local outerWheelMag
local missileAngle = outerWheelSpinRate * time

local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

if missileIndex == 1 then
	outerWheelMag = 1.1
	scale = 0.4
elseif missileIndex == 2 then
	outerWheelMag = 0.3
	scale = 0.4
elseif missileIndex == 3 then
	outerWheelMag = 0.4
	scale = 0.48
elseif missileIndex == 4 then
	outerWheelMag = 0.7
	scale = 0.6
elseif missileIndex == 5 then
	outerWheelMag = 1.25
	scale = 0.5
elseif missileIndex == 6 then
	outerWheelMag = 0.2
	scale = 0.4
end

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount - rand2)
	missileAngle = missileAngle + anglePerMissile * missileIndex

	transFront = outerWheelMag * cos ( missileAngle )
	transRight = outerWheelMag * sin ( missileAngle )
end",0,7
2906,Living Meteor (Explosion of Missiles),"
	modelPitch = (progress * 360) * 2

	modelRoll = 90	
	modelYaw = 90

	local dist = 60


	if missileIndex == 0 then
		transFront = progress * -dist
	elseif missileIndex == 1 then
		transFront = progress * -dist/2
		transRight = progress * dist/2
	elseif missileIndex == 2 then
		transRight = progress * dist
	elseif missileIndex == 3 then
		transFront = progress * dist/2
		transRight = progress * dist/2
	elseif missileIndex == 4 then
		transFront = progress * dist
	elseif missileIndex == 5 then
		transFront = progress * dist/2
		transRight = progress * -dist/2
	elseif missileIndex == 6 then
		transRight = progress * -dist
	elseif missileIndex == 7 then
		transFront = progress * -dist/2
		transRight = progress * -dist/2
	end
	local angle = 0
	local maxMagnitude = 10

	transUp = (progress * 2) - 1
	transUp = (1 - (transUp * transUp)) * maxMagnitude
",0,7
2907,"Reverse Direction, Parabola","
local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = startDistance - 2 * distanceToFirePos  --this would reverse the direction of the missile",0,1
2908,Test - HW,"local angle = 0
local maxMagnitude = startDistance * .90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2909,Shriek of the Highborne - CRT,"local angle = 0
local maxMagnitude = startDistance * 3

transAngle = angle	

if progress < 0.3 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 10
else
	transMag = (1 - (progress*1.43) +0.43) * 10
end


if progress <= .3 then
	transRight = (cos(progress*3000)) * 1 * (1-progress)
	transUp = (sin(progress*3000)) * 1 * (1-progress)
end",0,3
2910,"Parabola (High), Reversed - Experimental","local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = startDistance - 2 * distanceToFirePos",0,1
2913,Spin (Yaw) (Pitch 90),"
modelPitch = 90

modelYaw = progress * 600",0,1
2914,Grow (1 -> 3) and Rotate,"local spinRate = 90
scale = 1 + 2 * progress
modelRoll = time * spinRate",0,1
2915,Blue Dragon - Arcane Missile Barrage,"local missileSpread =  (360 / (missileCount)) 

local maxVertical = 4
local maxHorizontal = 8
local waitTime = 1
transUp = sin(missileSpread * missileIndex) * maxVertical * rand1
transRight = cos(missileSpread * missileIndex) * maxHorizontal * rand2

speedScalar = ((1 - progress) * rand3) + (progress * (missileIndex+1))
if time > waitTime then
	if speedScalar < 2 then
		speedScalar = 3
	end 
end
		


	

",0,10
2916,"Parabola (Pitch and Yaw Spin, Very Low)","local angle = 0
local maxMagnitude = startDistance * 0.1
local spinRateP = 180
local spinRateY = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
2917,Drunken Fountain (3 Missiles) (low),"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
2918,Spear Thrust,"	speedScalar = 1 - progress
end",0,1
2919,"Parabola (Roll Spin, High)","local angle = 0
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 3000",0,1
2920,Hagara Stinger Missile,"
transAngle = 0	

if (time > 7) then
--	speedAbs = distanceToImpactPos / (7 - time)
--else
	speedAbs = 100000
end
--

if progress < 0.4 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 20
--	speedAbs = speedAbs * 0.4
elseif progress < 0.9 then
	transMag = (1 - (progress*1.43) +0.43) * 20
--	speedAbs = speedAbs * (progress^2)
else
	transMag = (1 - (progress*1.43) +0.43) * 20
end

",0,3
2921,Spinning Staff Missile,"local spinRate = 360
local angle = 90
local maxMagnitude = startDistance * .1

modelYaw = time * spinRate
modelRoll = 90
modelPitch = time * spinRate

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
",0,1
2922,"Parabola (Roll Spin, Medium)","local angle = 0
local maxMagnitude = startDistance * .20

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 3000",0,1
2923,Spiral Flat (Sha Boss) JS UNUSED,"local numSpirals = -4
local minRadius = 1
local radius = minRadius + (3 * progress * (rand1 * 1.5))

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2",0,1
2924,"Parabola, 4 Missiles in Rapid Succession","local angle = 0
local maxMagnitude = startDistance * .50
local spread = 5

speedScalar = 1 + (missileIndex * .2)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transUp = (rand2 - 0.5) * spread * progress",0,4
2925,Parabola (-180 Pitch),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -180

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2926,Morchok Spike Throw,"local angle = 0
local maxMagnitude = startDistance * .15

modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
",0,1
2927,"Parabola (Roll Spin, Very High)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = time * spinRate
",0,1
2928,"Parabola (Roll Spin, Very, Very High)","local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = time * spinRate
",0,1
2929,"Parabola (Intense Spin, High)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = time * spinRate * .5
modelYaw = time * spinRate * .75",0,1
2930,"Parabola (-90 Pitch, Accelerate)","local angle = 0
local maxMagnitude = startDistance * .25
modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = .1 + (time*time*time*time*time)/2000",0,1
2931,"Parabola (Pitch and Yaw Spin, Crazy)","local angle = 0
local maxMagnitude = startDistance * 0.35
local spinRateP = 360
local spinRateY = 100

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
2932,Parabola (-180 Pitch),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -180

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2933,Soul Vortex (10 Missiles - No Kickback) Reverse,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 2.5
local maxKickBack = 0

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
transFront = startDistance - 2 * distanceToFirePos  --this would reverse the direction of the missile

--transUp = distanceToImpactPos - distanceToFirePos",0,10
2934,"Parabola (Pitch Spin, High, 12 Random Size)","local angle = 0
local maxMagnitude = startDistance * .30 * (0.8 + 0.4*rand1)
local spinRate = 720 * (1 - 0.6*rand2)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelYaw = time * spinRate * (rand1-rand3)

scale = 1 + 2*rand2
speedScalar = 0.8 + 0.4*rand3",0,12
2935,Quest - Catch! - Throw Ball,"local angle = 0
local maxMagnitude = (distanceToImpactPos)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local spinRate = 45
modelPitch = time * spinRate

speedScalar = 1.2",0,1
2936,Meteor Strike (15 Yards),"local magnitude = 15

transUp = magnitude * ( 1 - progress )

-- Fix for Bug ID: 335353
faceImpactPos = 1
",0,1
2937,Meteor Strike (25 Yards),"local magnitude = 25

transUp = magnitude * ( 1 - progress )
",0,1
2938,Creature - Weapon Toss,"local angle = 0
local maxMagnitude = startDistance * 0.1
local spinRateP = 180
local spinRateY = 10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
2941,Ring JS (10-15yd),"local percentOfCircle = 0.5
local startAngle = 0

if missileIndex == 0 then
	radius = 10
elseif missileIndex == 1 then
	radius = 10.5
	startAngle = 60
elseif missileIndex == 2 then
	radius = 12
	startAngle = 120
elseif missileIndex == 3 then
	radius = 13
	startAngle = 180
elseif missileIndex == 4 then
	radius = 14.5
	startAngle = 240
else
	radius = 15
	startAngle = 300
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2

-- spin them a little so they look good from the side
modelRoll = 60 * rand3",0,5
2942,"Drunken Fountain (5 Missiles, High)","local angle = 0
local maxMagnitude = startDistance * 1.5
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,5
2943,Execution Sentence Hammer Strike,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
faceImpactPos = 1
-- modelPitch = 270
",0,1
2944,Execution Sentence Hammer Strike visual 2,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
faceImpactPos = 1

",0,1
2945,Warlock - Glyph - Shadow Bolt (A),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 1
local maxKickBack = 1

transAngle = startAngle + (120) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

transFront = transFront + -distanceToFirePos * (1 - progress)",0,1
2946,Warlock - Glyph - Shadow Bolt (B),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 1
local maxKickBack = 1

transAngle = startAngle + (240) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

transFront = transFront + -distanceToFirePos * (1 - progress)",0,1
2947,Warlock - Glyph - Shadow Bolt (C),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 1
local maxKickBack = 1

transAngle = startAngle + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

transFront = transFront + -distanceToFirePos * (1 - progress)",0,1
2948,"Parabola (Counter-Pitch, Spinning)","local angle = 0
local maxMagnitude = startDistance * .30


transUp = sin(progress*180)*maxMagnitude
modelPitch = cos(progress*180)*60



",0,1
2949,Parabola copy,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2950,Parabola (U Shape),"local angle = 180
local maxMagnitude = startDistance * .6

transAngle = angle
transMag = (progress * 2) - 1
transMag = 1 - ((transMag * transMag) * maxMagnitude)",0,1
2951,Forward Spin (fast) + Parabola (Very High),"local angle = 0
local maxMagnitude = startDistance * .6
local spinRate = 1080

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2952,Ring JS Gandling,"local percentOfCircle = 0.75
local startAngle = 0

if missileIndex == 0 then
	radius = 9.5 * (1.5-progress)
elseif missileIndex == 1 then
	radius = 10 * (1-progress)
	startAngle = 60
elseif missileIndex == 2 then
	radius = 10.5 * (1.5-progress)
	startAngle = 120
elseif missileIndex == 3 then
	radius = 11 * (1.5-progress)
	startAngle = 180
elseif missileIndex == 4 then
	radius = 11.5 * (1.5-progress)
	startAngle = 240
else
	radius = 12 * (1.5-progress)
	startAngle = 300
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = -rand2 * 2

-- spin them a little so they look good from the side
modelRoll = 60 * rand3",0,6
2953,"Parabola (Spin, Medium)","local angle = 0
local maxMagnitude = startDistance * .20
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
2954,Drunken Fountain (1 Missile) (Med),"local angle = 0
local maxMagnitude = startDistance * 1.2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
2955,Parabola (High) (Accelerate),"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = 0.7 + 2 * progress",0,1
2956,Parabola (Grow More),"local angle = 0
local maxMagnitude = startDistance * .25

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = progress + .01
if (progress > 0.75) then
	scale = scale + 1.5*(progress-0.75)
end",0,1
2957,Warlock - Soul Fire,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local outerWheelSpinRate = 360 	-- 1 spin / sec
local outerWheelMag = 1.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if ( rand1 > 0.5 ) then
	missileAngle = missileAngle * -1
end

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount-1)
	missileAngle = missileAngle + anglePerMissile * missileIndex

	if ( progress < 0.5 ) then 
		outerWheelMag = outerWheelMag * 0.5 + progress 
	else
		outerWheelMag = outerWheelMag * ( 0.25 + 0.75*(1-progress ))
	end

	transUp = outerWheelMag * cos ( missileAngle )
	transRight = outerWheelMag * sin ( missileAngle )
	transFront = -1.5 + 0.75 * progress
	scale = 0.25
	faceImpactPos = 1
else
	scale = 1
end



",0,3
2958,Monk Scenario - Panda Weapon Parabola,"local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 1440
modelPitch = 90
modelYaw = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
2959,Kramer Arrow Cone Test,"transUp = .5+ ((progress * (rand1 - 2)) * 2) + (progress * 2)

transRight = (progress * (rand2 - .5)) * 1

--speedOffset = 1 + missileIndex * .5",0,6
2960,Creature - Cleansing Waters Missile,transUp = progress * -2,0,1
2961,"Circle around caster (1 Missile, 4yd)","local percentOfCircle = 1
local startAngle = 0
local radius = 4

if missileIndex == 0 then
	startAngle = 0
--elseif missileIndex == 1 then
--	startAngle = 180
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
",0,1
2962,"Multi-Shot (3 Missiles, Slow Spin)","-- spread out as the missiles travel
local outerWheelMag = 1.5 * progress
local missileAngle


if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

modelPitch = progress * 500 * (0.7 + 0.3*rand1)
modelRoll = progress * 100 * (-0.5 + rand2)

transMag = outerWheelMag
",0,3
2963,Terrie's test missile script,"local radius = (progress * 35)

local curAngle = progress * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

	local dist = distanceToFirePos

	local a = 1.01 --Smoothness
	local b = 25 --Horizontal Shift
	local c = 2 --Horizontal Scale
	local d = 0.95 --Vertical Scale
	local e = 0.05 --Vertical Shift
	local f = 4 --Tightness
	local g = 0.015 --Linear Scale by Dist

--	scale = d * math.pow(a, -math.pow((dist-b)/c,f)) + e + g*dist
scale = progress * 2.2",0,8
2964,SZS - Water Splash,"local magnitude = 5
local angle = 0
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1 + 3 * time
speedScalar = 0.1 + 35 * progress * progress * progress * progress
transUp = magnitude * ( 1 - progress )",0,1
2965,Multi-Shot (7 Missiles),"-- spread out as the missiles travel
local outerWheelMag = 2.5 * progress
local missileAngle


if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

transMag = outerWheelMag
",0,7
2966,Volley (Fountain + Multi Shot),"local angle = 0
local maxMagnitude = startDistance * 0.5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local noise = 2;
local outerWheelMag = 4 * (progress)

if ( missileIndex > 12 ) then 
	outerWheelMag = outerWheelMag * 2;
end

local count = missileCount / 2 

local smallAngle = (360/count ) * missileIndex 
local transRight = math.cos(smallAngle) * outerWheelMag + rand1*noise ;
local transFront = math.sin(smallAngle) * outerWheelMag + rand2*noise ;",0,24
2967,Elemental Blast (Missile A),"local startAngle = 90
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 3

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

if progress < 0.5 then
	scale = 0.75 + 0.5 * progress
end",0,1
2968,Elemental Blast (Missile B),"local startAngle = 0
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 5

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack+(1-progress)*2
transMag = transMag * maxMagnitude

if progress < 0.5 then
	scale = 0.75 + 0.5 * progress
end",0,1
2969,Elemental Blast (Missile C),"local startAngle = 270
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 3

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

if progress < 0.5 then
	scale = 0.75 + 0.5 * progress
end",0,1
2970,Paladin - Denounce,"local angle = 0
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local outerWheelSpinRate = 360 	-- 1 spin / sec
local outerWheelMag = 1.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if ( rand1 > 0.5 ) then
	missileAngle = missileAngle * -1
end

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount-1)
	missileAngle = missileAngle + anglePerMissile * missileIndex

	if ( progress < 0.5 ) then 
		outerWheelMag = outerWheelMag * 0.5 + progress 
	else
		outerWheelMag = outerWheelMag * ( 0.25 + 0.75*(1-progress ))
	end

	transUp = outerWheelMag * cos ( missileAngle )
	transRight = outerWheelMag * sin ( missileAngle )
	transFront = -1.5 + 0.75 * progress
	scale = 0.25
else
	scale = 1
end

faceImpactPos = 1


",0,4
2971,Spin (Pitch 90),"local spinRate = 90

modelPitch = time * spinRate",0,1
2972,Dark Shaman - Shadow Storm Visual - SLG,"local percentOfCircle = 0.5
local startAngle = 0
local radius = 12

if missileIndex == 1 then
	startAngle = 60
elseif missileIndex == 2 then
	startAngle = 120
elseif missileIndex == 3 then
	startAngle = 180
elseif missileIndex == 4 then
	startAngle = 240
elseif missileIndex == 5 then
	startAngle = 300
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) 
transRight = (cos(curAngle) * radius)
",0,6
2973,"Parabola (Grow, Pitch -90)","local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -90
scale = 1 + (1.5 * progress)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
2974,Dread Spray (Shotgun) JS,"-- creates a shotgun spray of missiles for use in cone spells
-- the missiles will have some randomness to their spread and speed
-- this version contains special logic for dread spray that allows the missiles near the edges
-- of the cone to stop in midair at some fixed distance to simulate hitting a wall

local wallDist = 17.8					-- in yards
local targetDist = 35					-- in yards
local spreadAmt = 16					-- max distance two missiles can be from each other (correlates to spread angle)
local percentWall = 0.6				-- the percent of the cone spread that should travel the full targetDist (0-1)
local spreadRND = (rand2 - 0.5) / 10	-- how much randomness to add to the each missile's angle
local offsetLeft = 2					-- distance to move the missile impact points left (allows fine tuning of cone direction)

local spread = (-0.5 + (missileIndex / missileCount) + spreadRND) * (spreadAmt * 2)
transRight = progress * (spread + offsetLeft)

if (math.abs(spread + offsetLeft) > (percentWall * spreadAmt)) and (progress >= (wallDist/targetDist)) then
	transFront = (-targetDist * progress) + wallDist
	transRight = (wallDist/targetDist) * (spread + offsetLeft)
end

speedOffset = 1 + missileIndex * 2

--21
--0.6",0,10
2975,Gordoth Intro - Dark Channeling - SLG,"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)
",0,1
2976,Spin (Roll) - 720,"local spinRate = 720

modelRoll = time * spinRate",0,1
2977,Monk - Soothing Mists,"local startAngle = 0
local degreesPerSec = -180
local maxMagnitude = 1.2
local maxKickBack = 3

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

speedScalar = .2 + 3 * progress * progress",0,3
2978,"Snake (half amp, rand wave, half freq)","local waveHeight = 0.3 + (rand2 * 0.2)
local wavesPerSec = 1.0 + (rand2 * 0.5)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
2979,Priest - Halo Old,"local angle = -90
local maxMagnitude = startDistance * .2
local spinRate = 720

modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate


	local dist = distanceToFirePos

	local a = 1.01 --Smoothness
	local b = 25 --Horizontal Shift
	local c = 2 --Horizontal Scale
	local d = 0.9 --Vertical Scale
	local e = 0.1 --Vertical Shift
	local f = 4 --Tightness

	scale = d * math.pow(a, -math.pow((dist-b)/c,f))+e
",0,20
2981,Priest - Halo Cosmetic,"local radius = (progress * 35)

local curAngle = progress * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(0.001, progress*2.2)",0,8
2982,Sha of Fear - 3 Missiles in Rapid Succession,"local angle = 0
local maxMagnitude = startDistance * .2
local spread = 2

-- lower is closer
local distBetweenMissiles = 0.4


speedScalar = 1 - (missileIndex * distBetweenMissiles)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

-- missile impact location variance left/right/up/down. don't mess with the first impact
if missileIndex > 0 then
	transUp = (rand2 - 0.5) * spread * progress
	transRight = (rand2 - 0.5) * spread * progress
end

if missileIndex == 0 then
	scale = 2
elseif missileIndex == 1 then
	scale = 1.25
else
	scale = 0.75
end",0,3
2983,"Circle around caster (1 Missile, 2yd)","local percentOfCircle = 1
local startAngle = 0
local radius = 2

if missileIndex == 0 then
	startAngle = 0
--elseif missileIndex == 1 then
--	startAngle = 180
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
",0,1
2984,Monk - Eminence Heal,"


local waveHeight = .8
local wavesPerSec = 2

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
2985,Self-Pitch and Hit,"if time < .1 then transUp = 0 end
if time <= .5 then 
	transUp = transUp + .25
	speedAbs = .1
	transMag = .1 
else 
	local maxMagnitude = startDistance * .1
	speedAbs = time*30+(time-1)
	transAngle = 0
	transMag = (progress * 2) - 1
	transMag = (1 - (transMag * transMag)) * maxMagnitude
end
",0,1
2986,Priest - Cascade,"local angle = -90
local maxMagnitude = startDistance * .2
local spinRate = 720

--modelRoll = 90

--transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
--modelPitch = time * spinRate

if (distanceToFirePos>30) then 
	scale = 1
else
	scale = 0.1 + 0.9*distanceToFirePos/30
end

--scale = distanceToFirePos/40

--[[
	local dist = distanceToFirePos

	local a = 1.01 --Smoothness
	local b = 25 --Horizontal Shift
	local c = 2 --Horizontal Scale
	local d = 0.9 --Vertical Scale
	local e = 0.1 --Vertical Shift
	local f = 4 --Tightness

	scale = d * math.pow(a, -math.pow((dist-b)/c,f))+e
--]]",0,1
2987,3 Missiles in Rapid Succession,"-- lower is closer
local distBetweenMissiles = 0.1
-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

speedScalar = 1 - (missileIndex * distBetweenMissiles)

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

transMag = outerWheelMag
",0,3
2988,Rogue - Shuriken Toss,"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle  -- + (time * degreesPerSec) 

transMag = spread * (missileCount - missileIndex) / missileCount;

local spinRate = 360
modelRoll = time * spinRate + 360*rand1

transFront = distanceToImpactPos * progress * missileIndex / missileCount;

if ( math.fmod(missileIndex,2) == 1 ) then
    transAngle = transAngle + 180
end

if ( math.fmod(missileIndex,3) == 1 ) then
    transAngle = transAngle + 30 * rand1;
elseif ( math.fmod(missileIndex,3) == 2 ) then
    transAngle = transAngle + 90 * rand2;
end",0,3
2989,Divine Star,"local waveHeight = -0.3 - (rand2 * 0.2)
local wavesPerSec = 1.0 + (rand2 * 0.5)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2

modelRoll = 1.2 * time * 360

if (time>1.0) then
	local expectedProgress = (6/30) + ((time-1)*24/30)
	local actualProgress = 1-(distanceToImpactPos/totalDistance)
	local missingProgress = expectedProgress-actualProgress
	local distanceToCatchUp = missingProgress*totalDistance	

	speedOffset = distanceToCatchUp * 10 * (time-1)

	----Also tried this way and seemed to be slightly off, 
	----due to it basically being laggy if your speed changes
	--speedAbs = totalDistance
end
",0,1
2990,Glaive Toss Left,"local glaiveCurveWidth = 8
transRight = cos(progress * 90) * (progress * glaiveCurveWidth)

if (startDistance>0) then
	speedAbs = 24 * (totalDistance / startDistance)
end",0,1
2991,Glaive Toss Right,"local glaiveCurveWidth = -8
transRight = cos(progress * 90) * (progress * glaiveCurveWidth)

if (startDistance>0) then
	speedAbs = 24 * (totalDistance / startDistance)
end
",0,1
2992,Drunken Fountain (3 Missiles - Reverse) ,"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--transFront = distanceFromImpactPos* (1-progress)
--transFront = -distanceToFirePos * (1 - progress)
transFront = startDistance - 2 * distanceToFirePos 

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
2993,Spiral (Small) Flat Reverse,"local radius = (progress * 8)

local curAngle = progress * 90

transFront = startDistance - (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
2994,Glaive Toss Left Return,"local angle = -90
local maxMagnitude = startDistance * .2
local spinRate = 720

progress = 1 - progress

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate


transFront = distanceToImpactPos - distanceToFirePos
",0,1
2995,Glaive Toss Right Return,"local angle = -90
local maxMagnitude = -startDistance * .2
local spinRate = -720

progress = 1 - progress

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate


transFront = distanceToImpactPos - distanceToFirePos
",0,1
2996,Whirling Blade,"local spinRate = 1440
--local modelRoll = 90

local modelYaw = time * spinRate

--if (time>1.0) then
--	local expectedProgress = (6/30) + ((time-1)*24/30)
--	local actualProgress = 1-(distanceToImpactPos/totalDistance)
--	local missingProgress = expectedProgress-actualProgress
--	local distanceToCatchUp = missingProgress*totalDistance	

--	speedOffset = distanceToCatchUp * 10 * (time-1)
--end
",0,1
2997,"Parabola (Pitch Spin Slow, Model Rolled 90)","local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 90
",0,1
2998,Whirling Blade 2,"--local spinRate = 1440
--local modelRoll = 90

--local modelYaw = time * spinRate

--if missileIndex = 1 then
--	trans
	

if (time>1.0) then
	local expectedProgress = (6/30) + ((time-1)*24/30)
	local actualProgress = 1-(distanceToImpactPos/totalDistance)
	local missingProgress = expectedProgress-actualProgress
	local distanceToCatchUp = missingProgress*totalDistance	

	speedOffset = distanceToCatchUp * 10 * (time-1)
end
",0,2
2999,Monk - Expel Harm,"local waveHeight = .8
local wavesPerSec = 2

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
3000,Rogue - Shuriken Toss v2,"-- lower is closer
local distBetweenMissiles = 0.3
-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

speedScalar = 1 + ((missileIndex) * distBetweenMissiles)

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

transMag = outerWheelMag",0,3
3001,"Parabola (Pitch Spin, slow, low, accelerating)","local angle = 0
local maxMagnitude = startDistance * .1
local spinRate = 120

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

speedScalar = 0.75 + 0.5 * progress
",0,1
3002,Grow (1 -> 3) and Accelerate,"scale = 1 + 2 * progress
speedScalar = 0.2 + 3 * progress",0,1
3003,Jade Forest - Water Vortex - SLG,"local percentOfCircle = 3
local startAngle = 0
local radius = 1.5


if missileIndex == 1 then
	startAngle = 120
elseif missileIndex == 2 then
	startAngle = 240
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) 
transRight = (cos(curAngle) * radius)
",0,1
3004,Grow (0.9 -> 1.5),scale = 0.9 + (1.3 * progress),0,1
3005,Grow (0.8 -> 1.1) copy,scale = 0.8 + (0.5 * progress),0,1
3006,Mantid Siege - Blade Rush,"local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = 80
modelPitch = time * spinRate
",0,1
3007,Meteor Strike (50 Yards),"local magnitude = 50

transUp = magnitude * ( 1 - progress )
",0,1
3008,"Meteor Strike (50 Yards, Spin)","local magnitude = 50
local spinRate = 1440

transUp = magnitude * ( 1 - progress )
modelPitch = time * spinRate
",0,1
3009,Brewmoon Festival - Brew Strike Reverse,"local magnitude = 0
local spinRate = 1440

transUp = magnitude * ( 1 - progress )
modelPitch = time * spinRate",0,1
3010,Chi Wave,"local angle = 0
local maxMagnitude = startDistance * .35

local waveHeight = .8
local wavesPerSec = 2*(0.5+rand1)

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = waveHeight * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,1
3011,Rolling Barrel,"local spinRate = 120

modelPitch = time * spinRate",0,1
3012,Spiral Vortex (5 Missiles),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,5
3013,Spiral + Parabola (5 Missiles),"local waveHeight = 1
local wavesPerSec = 2
local angle = 2
local maxMagnitude = startDistance * .15
local spinRate = 720

modelRoll = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,5
3014,Spiral Vortex (5 Missiles) Wide + Parabola,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 5

local maxMagnitude = startDistance * .13
scale = 1 + (1.3 * progress)


transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
transUp = 15 * 4 * progress * (1-progress)",0,5
3015,Spiral Vortex (5 Missiles) Wide,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 5

local maxMagnitude = startDistance * .13
scale = 1 + (1.3 * progress)


transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,5
3016,Malefic Grasp,"local spread = 1.5

local startAngle = 360 * missileIndex / missileCount + rand1 * 60;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;
if (distanceToFirePos<3) then
	transMag = transMag * math.sqrt(distanceToFirePos/3);
end
if (distanceToImpactPos<6) then
	transMag = transMag * math.sqrt(distanceToImpactPos/6);
end
if (distanceToImpactPos>6 and distanceToFirePos>3) then
	local distToEdge = math.abs(distanceToImpactPos-6)-(distanceToFirePos-3)
	transMag = transMag * math.abs(distToEdge / (totalDistance-9))
end

local spinRate = 360
modelRoll = time * spinRate

transFront = transFront + 2 * distanceToImpactPos * progress * progress

faceImpactPos = 1",0,3
3017,Shen-zin Su - Ruk-Ruk Ooskplosion Rockets,"local angle = 0
local maxMagnitude = startDistance * .50

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
if(missileIndex==1) then transRight = 0 else transRight = -2 end
",0,2
3018,Ring of Blood - Fish Star,"local maxMagnitude = 0.5
local minSpeedScalar = 0.7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 100)) + cos((rand2 * 1000) + (time * 200))) * magnitude * (1-progress)

speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

local spinRate = 720+180*rand1
modelYaw = spinRate * time

local angle = 0
local maxMagnitude = startDistance * 0.1
local spinRateP = 180
local spinRateY = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transUp = 2*rand2*transMag",0,1
3019,Demonic Slash,"transRight = 0.8 * (progress * 2 - 1)
transUp = 0.2 * (progress * 2 - 1)
transFront = -1.8 --* (progress * 2 - 1)
transFront = transFront + sin(progress*180)*totalDistance
transFront = transFront - distanceToFirePos
--speedScalar = (progress * 2 - 1)",0,1
3020,Arcane Explosion - Frost,"local radius = progress * totalDistance

local curAngle = progress * 90

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
3021,"Random Speed Scalar, Small",speedScalar = 0.8 + 0.4*rand3,0,1
3022,Multi-shot Parabola Low (3 Missiles),"local angle = 0
local maxMagnitude = startDistance * .10
local spread = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transRight = (rand1 - 0.5) * spread * progress
transUp = (rand2 - 0.5) * spread * progress",0,3
3023,Astral Communion,"local numSpirals = -2
local minRadius = 1.3
local radius = minRadius + (1 * progress * (rand1 * 1.5))

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos - 1.2
transRight = (cos(curAngle) * radius)

transUp = rand2+5

modelPitch = 90",0,1
3024,Rolling Barrel (Sideways),"local spinRate = 520

modelRoll = time * spinRate
modelYaw = 90
",0,1
3025,Multi-shot Parabola Low (3 Missiles),"local angle = 0
local maxMagnitude = startDistance * .10
local spread = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transRight = (rand1 - 0.5) * spread * progress
transUp = (rand2 - 0.5) * spread * progress",0,3
3026,Multi-shot Parabola Low (7 Missiles),"local angle = 0
local maxMagnitude = startDistance * .10
local spread = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transRight = (rand1 - 0.5) * spread * progress
transUp = (rand2 - 0.5) * spread * progress",0,7
3027,Monk - Grapple Weapon,"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 650",0,1
3028,"Spiral Vortex (4 Missiles, Tight, Don't Spiral, P 90)","local startAngle = 45
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 5
modelPitch = 90

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,4
3029,1001 Needles (Circular Shotgun) JJS,"local startAngle = 45
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 1
local numCenterMiss = 3
modelPitch = 90


if missileIndex < numCenterMiss then
	transMag = 0.25
	transAngle = startAngle + ((missileIndex / numCenterMiss) * 360) + (time * degreesPerSec)
else
	transAngle = startAngle + ((missileIndex / (missileCount - numCenterMiss)) * 360) + (time * degreesPerSec)
	transMag = 0.5
end

transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = (transMag * -maxKickBack) + (progress * 2)
transMag = transMag * maxMagnitude
",0,10
3030,Parabola (Very High),"local angle = 0
local maxMagnitude = startDistance * .50

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3032,Spin (Roll) (Pitch 180),"
modelPitch = 180

modelRoll = progress * 600",0,1
3033,"Parabola (High, Slight Back Spin)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = -45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3034,Spiral Flat - Tall,"local numSpirals = 4

if missileIndex == 0 then
	radius = 15
elseif missileIndex == 1 then
	radius = 35
else
	radius = 50
end

local curAngle = numSpirals * progress * 180

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = 15 + rand2 * 75

-- spin them a little so they look good from the side
modelRoll = 30",0,3
3035,Spin (Roll 600),modelRoll = progress * 600,0,1
3036,Parabola (Lower),"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transMag = transMag - 3

if (rand1>0.6) then
	transRight = 2
elseif (rand1>0.3) then
	transRight = -2
end

transFront = progress * 5",0,1
3037,Power Word: Solace,"local mult = 2.5
transFront = mult*progress
faceImpactPos = 1",0,1
3038,Raft Spray,"modelPitch = 90
transRight = (progress+.2) * 15 * (missileIndex-0.5)
",0,2
3039,"Drunken Missiles (3, 1-2 miss)","local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

if (missileIndex == 1) then
	transRight = transRight + (5*progress*progress*progress)*sin(rand1 * 1000)
	transUp = transRight + (5*progress*progress*progress)*cos(rand1 * 1000)
elseif (missileIndex == 2) then
	if rand3>0.35 then
		transRight = transRight + (7*progress*progress*progress)*sin(rand2 * 1000)
		transUp = transRight + (7*progress*progress*progress)*cos(rand2 * 1000)
	end
end",0,3
3040,Forward Spin + Parabola (2 Missiles),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,2
3041,Spinning Wooden Planks,"local angle = 0
local maxMagnitude = startDistance * 0.35
local spinRateP = 1000
local spinRateY = 1000
local spinRateR = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY
modelRoll = time * spinRateR",0,1
3042,Meander (2),"local maxMagnitude = 1.0
local minSpeedScalar = 1.0
local maxSpeedScalar = 1.0
local randscalar = 100
local timescalar = 50
 
local angle = 0
local maxArcMagnitude = startDistance * .35

local magnitude = (progress * 1.9) - 1

magnitude = 1 

transRight = (sin((rand1 * randscalar * progress) + (time * randscalar)) + sin((rand2 * randscalar * progress) + (time * timescalar))) * magnitude
",0,1
3043,"Parabola (Pitch Spin, med speed, low) copy","local angle = 0
local maxMagnitude = startDistance * .1
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
3044,"Parabola (Roll 600, Very High)","local angle = 0
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 600
",0,1
3045,Rockets With Afterburners (7 yd drop),"local angle = 160+40*missileIndex
local maxDrop = 7

if (progress <= 0.1) then
	transMag = maxDrop*10*progress
	modelPitch = -8*maxDrop
elseif (progress <= 0.3) then
	transMag = maxDrop
	modelPitch = -2*maxDrop
else
	transMag = -maxDrop*progress/0.7 + (maxDrop/0.7)
end

transAngle = angle

speedScalar = 0.1 + (5 * time * time * time * time)",0,2
3046,"Forward Spin + Parabola (Very High, 90 Degree Roll)","local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 360

modelRoll = 90
modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3047,"Parabola (High, Yaw Spin)","local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
3048,Parabola (Fish),"local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = 90
modelRoll = time * spinRate
",0,1
3049,Creature - Magma Erruption Low,"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3050,Rockets With Afterburners (5 yd drop),"local angle = 160+40*missileIndex
local maxDrop = 5

if (progress <= 0.1) then
	transMag = maxDrop*10*progress
	modelPitch = -8*maxDrop
elseif (progress <= 0.3) then
	transMag = maxDrop
	modelPitch = -2*maxDrop
else
	transMag = -maxDrop*progress/0.7 + (maxDrop/0.7)
end

transAngle = angle

speedScalar = 0.1 + (5 * time * time * time * time)

",0,2
3051,Orbital Strike (Upwards From Caster),"local magnitude = totalDistance * 2

transUp = 0.99 * magnitude * ( progress )
",0,1
3052,Meteor Strike (15 Yards) Falls Straight Down,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3053,"Parabola (Roll 600, High)","local angle = 0
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 600
",0,1
3054,Orbital Strike (No Rotation),"local magnitude = totalDistance * 2

transUp = magnitude * ( 1 - progress )
",0,1
3055,Jade Forest - Twinspire Keep - Demolitionist - Dynamite,"local angle = 0
local maxMagnitude = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3056,Jade Forest - Thunder Hold - Sha Shooter - Sha Burst,"transUp = 2.5
transAngle = 0
transFront = (time/3)*35",0,1
3057,Ring JS Mantid Siege,"local percentOfCircle = 0.5
local startAngle = 0
local maxRadius = 20
local offset = 1
local radius

-- start missiles in a circle maxRadius distance from the caster, decreasing by offset with each missile
-- missile count can be adjusted safely without changing this script

radius = (maxRadius - (offset * missileIndex)) * (1.5 - progress)
startAngle = missileIndex * (360 / missileCount)


local curAngle = (percentOfCircle * progress * 360) + startAngle

--transFront = (sin(curAngle) * radius)
transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

--transUp = -rand2 * 2

-- spin them a little so they look good from the side
modelRoll = 45 * rand3
modelYaw = 45 * rand3",0,3
3058,Murder of Crows Fly In,"

local radius = 10*math.pow((1-sin(progress*90)),0.30+rand3/5)


local curAngle = (progress * (rand2/5+0.9)) * 222.5 --+ 360 * (missileIndex + rand1/3) / missileCount


--transFront = startDistance - (sin(curAngle) * radius) - distanceToFirePos
transFront = -(sin(curAngle) * radius)
transRight = (cos(curAngle) * radius)
transUp = 10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25

modelYaw = progress * 35
",0,1
3059,Warlock - Chaos Bolt v2,"transMag = (1 - math.pow(progress * 2 - 1,2)) * startDistance * .1",0,1
3060,Mel'jarak - Rain of Blades,"local spinRate = 720
local angle = 0
local maxMagnitude = startDistance * .15

modelRoll = time * spinRate

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3062,Sha of Fear - Transfer Light JS,"-- normal low parabola, with special speed adjustment
local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

-- reduce missile speed to make it appear to land right as the aura applies
speedScalar = 1 - 0.99999
",0,1
3066,Sha of Fear - Huddle in Terror,"local magnitude = totalDistance * 2

if missileIndex == 0 then
	transUp = -magnitude * ( 1 - progress )
else
	transUp = magnitude * ( 1 - progress )
end

transFront = distanceToImpactPos
",0,2
3096,Orbital Strike 3 Missiles JS (Sha of Fear),"local magnitude = 10
local radius = 5
local startAngle = missileIndex * (360 / missileCount)


local curAngle = (progress * 360) + startAngle

-- to work from the target location instead of the caster's location, we need to add
-- distanceToImpactPos to transFront. For the height the best we can do is a manual offset
-- from the caster (fired from base, for example)

transFront = distanceToImpactPos + ((sin(curAngle) * radius) * (1 - progress))
transRight = (cos(curAngle) * radius) * (1 - progress)
transUp = magnitude * ( 1 - progress )
",0,3
3105,Orbital Strike using Static Model JS,"local magnitude = totalDistance * 2

transUp = totalDistance + -magnitude * ( progress )
modelPitch = 180

--stops crazy twitching motion caused by purely vertical movement
faceImpactPos = 1",0,1
3106,Dragon Turtle Boss - Rockfall Secondary,"local angle = 0
local magScalar = (rand1 / 5) + 0.05
local maxMagnitude = startDistance * magScalar

modelPitch = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 2.5 - progress",0,1
3107,Lei Shen - Decapitate (Distance Based Spin Rate),"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

if startDistance < 20 then
	spinRate = 2440
elseif startDistance > 20 and startDistance < 40 then
	spinRate = 720
elseif startDistance > 40 then
	if distanceToImpactPos > 40 then
		spinRate = 2440
	elseif distanceToImpactPos <= 40 and distanceToImpactPos > 20 then
		spinRate = 720
	elseif distanceToImpactPos <= 20 then
		spinRate = 0
	end
end

modelPitch = time * spinRate",0,0
3108,Spiral Vortex (Drain the Weak) JJS,"local startAngle = -60

transAngle = startAngle + ((missileIndex / (missileCount * 2)) * 360)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))

transFront = (progress * progress * progress) - (progress * progress)
",0,3
3109,Glaive Boomerang,"local angle = -90
local maxMagnitude = startDistance * .2
local spinRate = 720

modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = time * spinRate",0,1
3110,Cluster Rockets (No speed mod),"
transAngle = 0	

local splitPoint = 0.5
local spreadX = (rand1-.5)*2
local spreadY = (rand2-.5)*2
local spreadAmt = 5
local height = 6.5

--speedAbs = startDistance / 7.5

if progress < splitPoint then
	transMag = (1 - (((progress*3.33)-1)^2)) * height
	speedAbs = speedAbs * .5
else
	transRight = spreadAmt*spreadX*(progress-splitPoint)/(1-splitPoint)
	transFront = spreadAmt*spreadY*(progress-splitPoint)/(1-splitPoint)
    transMag = (1 - (progress*1.43) +0.43) * height
	speedAbs = speedAbs * (1.2+progress)^3
end

",0,12
3111,Lei Shen - Eye of the Storm Missile,"local radius = (progress * 45) +5

local curAngle = progress * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(0.001, progress * 2.475/1) +.274",0,8
3112,Priest - Halo Cosmetic BUG EXAMPLE,,0,8
3113,Rogue - Shuriken Toss (One Missile - MH),"-- lower is closer
local distBetweenMissiles = 0.3
-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress

--speedScalar = 1 + ((index ) * distBetweenMissiles)

transAngle = 0

transMag = outerWheelMag",0,1
3114,Emperor's Shield - Electro Pulse Missile,"local radius = (progress * 30) +5

local curAngle = progress * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(0.001, progress * 2.475/1) +.274",0,8
3115,Thunder King Raid - Phoenix - Quills - Cosmetic,"--speedScalar = ((progress - 1)*(progress - 1))*math.random(1,3)
modelPitch=math.sin(progress*1080*math.pi/180)*math.random(8,27)
modelRoll=progress*1080",0,1
3116,5.2 Legendary Scenario - Throw Axes,"local axeCurveWidth = 8
local transAmount = cos(progress * 90) * (progress * axeCurveWidth)

local initialAxeOffset = 3

local negMod = -1

if(missileIndex == 1) then
negMod = 1
end

transRight = negMod * (transAmount + initialAxeOffset*(1-progress))
transUp = 1

--modelRoll = negMod * -30

modelPitch = 780 * progress",0,2
3117,5.2 Legendary Scenario - Throw Axes (Lightning Version),"local axeCurveWidth = 8
local transAmount = cos(progress * 90) * (progress * axeCurveWidth)

local initialAxeOffset = 3

local negMod = -1

if(missileIndex == 1) then
negMod = 1
end

transRight = negMod * (transAmount + initialAxeOffset*(1-progress))
transUp = 1

--modelRoll = negMod * -30

local angle = 780 * progress

local axeLength = 0.8

transFront = cos(-angle) * axeLength
transUp = transUp + sin(-angle) * axeLength",0,2
3118,Thunder King Raid - Phoenix - Juvenile Drop Bomb,"speedScalar = 0.1 + (5 * time * time * time * time)
modelPitch=90",0,1
3119,Thunder King Raid - Phoenix - Achievement - Throw Egg,"local angle = 0
local maxMagnitude = startDistance * .10
local YawRate = 1440
modelYaw = progress*YawRate
modelPitch=math.cos(modelYaw*math.pi/180)*90
modelRoll=math.sin(modelYaw*math.pi/180)*90
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3120,Chaos Wave,"scale = 1+2*progress

speedAbs = .1+500*progress*progress*progress

transUp = 1.5
transFront = 7*progress",0,1
3121,"Snake (half amp, rand wave) HIGH","local waveHeight = .3
local wavesPerSec = 2 + (rand1 * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
3122,"Parabola (Pitch and Yaw Spin, Crazy, Low)","local angle = 0
local maxMagnitude = startDistance * 0.1
local spinRateP = 180
local spinRateY = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1 + 2*rand2
modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
3123,5.2 Legendary Scenario -  Huge Halo,"local radius = (progress * 90)

local curAngle = progress * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(0.001, progress*2.2)",0,8
3124,Pitch Model -90,"modelPitch = -90
modelRoll = 0
modelYaw = 0",0,1
3125,Creature - Shadow Crash (Lower Trajectory),"local angle = 0
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000",0,1
3126,"Parabola (High, Yaw Spin) Grow 0.5->2","scale = 0.5 + 1.5 * progress

local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate",0,0
3127,Parabola (Roll) (3 Missiles),"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000",0,3
3128,"3 Missiles in Rapid Succession, Pitch Spin","-- lower is closer
local distBetweenMissiles = 0.1
-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle
local spinRate = 720

speedScalar = 1 - (missileIndex * distBetweenMissiles)

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

transMag = outerWheelMag
modelPitch = time * spinRate",0,3
3129,"Straight, Drop At Last 10%","if progress < .9 then
   transUp=0
else
   transUp=-1*(progress-.89)
end",0,0
3130,High Seas Shotgun,"-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

local bulletLayers = 3
local bulletsPerLayer = missileCount / bulletLayers
local anglePerMissile = 360 / bulletsPerLayer
local variationAmt = anglePerMissile * 0.3

if (missileIndex > 0) then
	transAngle = anglePerMissile * missileIndex
    transAngle = transAngle + rand1 * variationAmt
end

local curLayer = 0

while missileIndex > bulletsPerLayer * curLayer do
    curLayer = curLayer + 1
end

transMag = outerWheelMag * (curLayer+1)/bulletLayers + rand2*0.1",0,30
3131,Chaotic,"
local progressMult = math.min(0.6,sin(progress*180))*(1-progress)


local t1 = (time+rand1)*90
local noise1 = sin(t1)*sin(t1*3)*sin(t1*.54)*sin(t1*7)*sin(t1*12)*sin(t1*.5)

local t2 = (time+rand2)*90
local noise2 = sin(t2)*sin(t2*3)*sin(t2*.54)*sin(t2*7)*sin(t2*10)*sin(t2*.5)

local t3 = (time+rand3)*90
local noise3 = sin(t3)*sin(t3*3)*sin(t3*.54)*sin(t3*7)*sin(t3*10)*sin(t3*.5)

local factor = 0.62
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*8*factor 
transFront = progressMult*noise3*14*factor ",0,1
3132,Chaotic Missile,"
local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 3.81
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*8*factor 
transFront = progressMult*noise3*14*factor ",0,0
3133,Parabola (Grow/time),"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1+time/2",0,1
3134,Parabola (Banana),"local angle = 0
local maxMagnitude = startDistance * .25
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = (rand2-0.5)*45-60
modelYaw = time * spinRate",0,1
3135,Wraith,"
local progressMult = sin(progress*180)*(1-progress)*2

local t1 = (time/15 + rand1) * 360
local t2 = (time/15 + rand2) * 360
local wave1 = sin(t1)

local factor = startDistance/10
transRight = progressMult * wave1 * factor

if (startDistance  < 6) then
	transUp = 0
	modelPitch = progressMult *5

else
	transUp = progressMult
	modelPitch = progressMult *30
end

modelRoll = transRight*6

faceImpactPos = 1

transFront = startDistance*progress*(progress-1)",0,1
3136,Right Yaw Spin,"local spinRate = -720

modelYaw = time * spinRate",0,1
3137,Long Spiral In,"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.5
",0,1
3138,"Snake (2 Missiles, rand wave)","local waveHeight = 1.2
local wavesPerSec = 2 + (rand1 * missileIndex * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,2
3139,"Snake (1 Missile, rand wave)","local waveHeight = 1.2
local wavesPerSec = 2 + (rand1 * missileIndex * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
3140,"Snake (3 Missiles, rand wave)","local waveHeight = 1.2
local wavesPerSec = 2 + (rand1 * missileIndex * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,3
3141,Fountain (Fast Climb),"local angle = 0
local maxMagnitude = startDistance * .75

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

speedScalar = .5*(progress+0.1) + .35
",0,1
3142,Garrosh Raid - Paragons - Xaril - Explosive Ring - A,"local radius = (progress * 22)+5

local curAngle = 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(.75,progress*2.)",0,12
3143,Garrosh Raid - Paragons - Xaril - Explosive Ring - B,"local radius = (progress * 16) + 5

local curAngle = 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(.5, progress*1.25)",0,12
3144,Garrosh Raid - Paragons - Xaril - Explosive Ring - C,"local radius = (progress * 11) + 5.5

local curAngle = 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(.5, progress*1.25)",0,12
3145,Garrosh Raid - Paragons - Xaril - Explosive Ring - D,"local radius = (progress * 16) + 5.5

local curAngle = 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(.75, progress*1.25)",0,12
3146,Garrosh Raid - Paragons - Xaril - Explosive Ring - E,"local radius = (progress * 26) + 5.5

local curAngle = 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(.6, progress*2)",0,12
3147,Garrosh Raid - Arsenal - Titan Essence to Crate,"local waveHeight = 1+(rand2*missileIndex)
local wavesPerSec = rand1 * missileIndex

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2

local minHeight = 15
local distanceWeight = 1.5
local upMagnitude = ((10-((startDistance-20)/10))*distanceWeight)+(minHeight)

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * upMagnitude ",0,1
3148,Soul Vortex (7 Missiles - Resynced) (Parabola),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = startDistance * .65
local maxUpMagnitude = startDistance * .5
speedscalar = 0.5
local arcAngle = 30*rand1-30

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude


transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp )) * maxUpMagnitude",0,7
3149,Garrosh Raid - Golden Lotus - Vengeful Strikes Main - KJD,"--Change these vars based on your desired needs
--Minimum 2 missiles
--Do not make a >=180 degree cone 

	local coneWidth = 60
	local coneRotation = 95
	local coneNoiseFactor = 0.75


	local coneOffset
	local resultWidthAtDist = math.tan(math.rad(coneWidth/2))*startDistance

	if (missileCount%2)==0 then
		local offsetBase = ((resultWidthAtDist*2)/(missileCount-1))
		if (missileIndex+1)<=(missileCount/2) then
			if missileIndex+1==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*missileIndex)
			end
			transAngle = coneRotation
		else
			if (missileIndex+1)-(missileCount/2)==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*((missileIndex)-(missileCount/2)))
			end
			transAngle = 360 - coneRotation
		end
	else
		if (missileIndex+1)<=(missileCount/2) then
			coneOffset = (resultWidthAtDist) * ((missileIndex+1)/math.floor(missileCount/2))
			transAngle = coneRotation
		elseif (missileIndex+1)>=(missileCount/2) and (missileIndex+1)~=missileCount then
			coneOffset = (resultWidthAtDist) * ( ((missileIndex+1)-math.floor(missileCount/2)) / math.floor(missileCount/2) )
			transAngle = 360 - coneRotation
		else
			coneOffset = 0
			transAngle = 0
		end
	end


	transMag = progress * coneOffset
	transUp = coneNoiseFactor * rand2 * progress",0,2
3150,Long Spiral In - low altitude,"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


--transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.5
",0,1
3151,Pitch 270 Yaw 270 no spin,"modelPitch = 270
modelYaw = 270",0,1
3152,Ken's Test Missile - KJD,"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


--transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.2
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.1",0,1
3153,Garrosh Raid - Golden Lotus - Rogue Uber AOE Throw - KJD,"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


--transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *180)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.05
transRight = sin(progressSpeed *180)*startDistance*math.pow(1-progressSpeed ,.7)*.0.5",0,1
3155,Garrosh Raid - Golden Lotus - Priest Uber Tank Missile - KJD,"local function sinapprox(v)
     local t1 = v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = sinapprox(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sinapprox(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sinapprox(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.5
",0,1
3156,Garrosh Raid - Golden Lotus - Vengeful Strikes Random - KJD,"--Change these vars based on your desired needs
--Minimum 2 missiles
--Do not make a >=180 degree cone 

	local coneWidth = 60
	local coneRotation = 95
	local coneNoiseFactor = rand1 * 0.75


	local coneOffset
	local resultWidthAtDist = math.tan(math.rad(coneWidth/2))*startDistance

	if (missileCount%2)==0 then
		local offsetBase = ((resultWidthAtDist*2)/(missileCount-1))
		if (missileIndex+1)<=(missileCount/2) then
			if missileIndex+1==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*missileIndex)
			end
			transAngle = coneRotation
		else
			if (missileIndex+1)-(missileCount/2)==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*((missileIndex)-(missileCount/2)))
			end
			transAngle = 360 - coneRotation
		end
	else
		if (missileIndex+1)<=(missileCount/2) then
			coneOffset = (resultWidthAtDist) * ((missileIndex+1)/math.floor(missileCount/2))
			transAngle = coneRotation
		elseif (missileIndex+1)>=(missileCount/2) and (missileIndex+1)~=missileCount then
			coneOffset = (resultWidthAtDist) * ( ((missileIndex+1)-math.floor(missileCount/2)) / math.floor(missileCount/2) )
			transAngle = 360 - coneRotation
		else
			coneOffset = 0
			transAngle = 0
		end
	end


	transMag = progress * coneOffset * rand3 * 0.9
	transUp = coneNoiseFactor * rand2 * progress",0,4
3157,Chaotic + Parabola,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)


local t1 = (time+rand1)*90
local noise1 = sin(t1)*sin(t1*3)*sin(t1*.54)*sin(t1*7)*sin(t1*12)*sin(t1*.5)

local t2 = (time+rand2)*90
local noise2 = sin(t2)*sin(t2*3)*sin(t2*.54)*sin(t2*7)*sin(t2*10)*sin(t2*.5)

local t3 = (time+rand3)*90
local noise3 = sin(t3)*sin(t3*3)*sin(t3*.54)*sin(t3*7)*sin(t3*10)*sin(t3*.5)

local factor = 0.62
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*8*factor 
transFront = progressMult*noise3*14*factor ",0,1
3158,Garrosh Encounter - Whirling Corruption,"local radius = progress * 100 

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1*anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

scale = 4*(1-progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,8
3159,Garrosh Raid - Paragons - Xaril - Bottles,"local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 1080

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * spinRate",0,1
3160,Garrosh Raid - Keeper - Extract Corruption - Missiles,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local angle = (rand1*180)-90
local maxMagnitude = startDistance * (.25+(rand2/4))

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
speedOffset = rand1/2

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*4*factor
transFront = progressMult*noise3*14*factor ",0,1
3164,Garrosh Raid - Siege Engineer - Shockwave Missile,"
transAngle = 70

--speedAbs = startDistance / 7.5

if progress < 0.4 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 20
	speedAbs = speedAbs * .5
else
	transMag = (1 - (progress*1.43) +0.43) * 20
	speedAbs = speedAbs * (1.2+progress)^3
end

",0,1
3165,Garrosh Raid - Siege Engineer - Missile Turret - Fire 3. Missile,"local angle = 0
local maxMagnitude = startDistance * .3

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * 20",0,1
3166,"Parabola (Very High, 180 Pitch)","local angle = 0
local maxMagnitude = startDistance * .50
modelPitch = -180

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3167,Back Spin,"local spinRate = -1080

modelPitch = time * spinRate",0,0
3168,Garrosh Raid - Golden Lotus - Corrupted Brew Missile,"local angle = 0
local maxMagnitude = 1 + ( (startDistance/3) * 1.5 )
local spinRate = 500

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * spinRate
",0,1
3171,Chaotic Missile 2,"progress = math.pow(progress,rand1*.4+.8)


local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*8*factor 
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor ",0,0
3176,Garrosh Raid - Golden Lotus - Rogue Uber Single Throw - KJD,"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


--transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.2
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.1
",0,1
3177,Meteor Strike (15 Yards) Falls Straight Down + Roll,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelPitch = (progress+rand1)*360",0,1
3178,Garrosh Raid - Keeper - Quarantine Safety Measures,"local radius = (progress * 80)

local curAngle = progress * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
scale = math.max(0.001, progress*5.0285714285714285714285714285714)",0,8
3179,Garrosh Raid - Keeper - Quarantine Safety Measures - Offset Up,"local radius = (progress * 80)

local curAngle = progress * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
transUp = 40
scale = math.max(0.001, progress*5.0285714285714285714285714285714)",0,8
3180,Garrosh Raid - Sha of Pride - Sha Vortex - SLG,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local angle = (rand1*180)-90
local maxMagnitude = startDistance * (.25+(rand2/4))

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
speedOffset = rand1/2

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*4*factor
transFront = progressMult*noise3*14*factor ",0,6
3181,Missile - 1s Delay,speedScalar = .5*(progress+0.1)+1,0,0
3182,Meteor Strike (15 Yards) Left Side Diagonal Down + Roll,"local magnitude = 15

transRight = magnitude/2 * (1-progress)
transUp = magnitude * ( .8 - progress )
transFront = distanceToImpactPos

modelYaw = (progress+rand1)*360",0,1
3183,Meteor Strike (15 Yards) Right Side Diagonal Down,"local magnitude = 15

transRight = magnitude/-2 * (1-progress)
transUp = magnitude * ( .8 - progress )
transFront = distanceToImpactPos",0,1
3184,Garrosh Raid - Arsenal - Spinning Kick Missiles - KJD,"scale = 1-(progress/2)

local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude

transFront = startDistance - 2 * distanceToFirePos",0,1
3185,Garrosh Raid - Arsenal - Titan Essence to Crate 2,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*46
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*46
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*46
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local angle = (rand1*90)-45
local maxMagnitude = startDistance * (.25+(rand2/4))

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
speedOffset = rand1*.5

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*4*factor+(40*(progress*(1-progress)))
transFront = progressMult*noise3*14*factor",0,1
3186,Garrosh Raid - Arsenal - Brewmaster Buff Ring - KJD,"local percentOfCircle = 0.9
local radius = 3
local startAngle = missileIndex*(360/missileCount)
local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius)
transRight = (cos(curAngle) * radius)

-- spin them a little so they look good from the side
modelRoll = 60 * rand3",0,4
3187,"Holy Spark (2 Missiles, Vortex)","local startAngle = 0
local degreesPerSec = 120
local maxMagnitude = 1.5
local maxKickBack = 10

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,2
3188,Adam's Test Missile,transRight = sin(progress * 720) * 35,0,0
3189,Garrosh Encounter - Phase 3 De-Transform Missile,"progress = progress*progress

local transFront1 = (sin((progress+rand1)*1440)) * (progress * (5*rand2) + 13) - distanceToFirePos
local transRight1 = -(cos((progress+rand1)*1440)) * (progress * (5*rand1) + 13)
transUp = cos((progress+rand2)*(1600 + 1600*rand2)) * (progress + 2) + 4

local progressmult = 1
if progress > 0.6 then
    local p = progress - 0.6
    p = p/0.4
    p = math.pow(p,4)
    transUp = transUp + p*30
    progressmult = 1 - p
end

transFront = transFront1 * progressmult
transRight = transRight1 * progressmult
",0,0
3190,Garrosh Encounter - Manifestation Missile (Arcane Swarm),"local angle = 0
local maxMagnitude = startDistance * 3

transAngle = angle	

if progress < 0.3 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 35
	speedScalar = .3
else
	transMag = (1 - (progress*1.43) +0.43) * 35
	speedScalar = 20 * progress * progress * progress * progress
end


if progress <= .3 then
	transRight = (cos(progress*3000)) * 2 * (1-progress)
	transUp = (sin(progress*3000)) * 2 * (1-progress)
end",0,1
3191,Drunken Fountain (low),"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
3192,"Lightning Spark (3 Missiles, Pull out and fire)","local startAngle = -90
local degreesPerSec = 0
local maxMagnitude = 2.5
local maxKickBack = 5

progress = 1 - progress

transAngle = startAngle + 180*rand1
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,3
3193,Garrosh Encounter - Whirling Corruption Dmg,"local radius = (progress * distanceToFirePos)

local ratio = distanceToFirePos/100

local curAngle = progress * 90

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle + 180) * radius)
scale = 4*(1-progress*ratio)
faceImpactPos = 1
modelYaw = curAngle-60",0,0
3194,Flak Cannon,"local SPREAD = 7
local SPEED = 50

transRight = (2 + time*SPREAD) * (rand1 - 0.5)
transUp = (1 + time*SPREAD) * (rand2 - 0.5)

transFront = -distanceToFirePos + SPEED*time

scale = 3 - time*1.0",0,20
3195,Rain of Frogs (meteor),"local magnitude = 15

local distFront = (rand1 - .5) * 8
local distSide = (rand2 - .5) * 8

scale = rand3 + 2

modelRoll = (progress+rand1)*360
modelYaw = (progress+rand1)*360

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos + distFront
transRight = distSide
",0,2
3196,Garrosh Raid - Arsenal - Matter Scramble Warning - KJD,"scale = 1 + 19 * progress

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.4
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.4",0,1
3197,Forward Spin (Slower),"local spinRate = 360

modelPitch = time * spinRate",0,1
3198,Item - 5.4 Legendary Cloak - Caster DPS - Essence Periodic,"scale = math.min(1,progress*5)
modelPitch=-90

local maxMagnitude = startDistance * .10
transAngle = 0
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3199,Item - 5.4 Legendary Cloak - Caster DPS - Essence Periodic Fire,"scale = math.min(1,progress*2)

local maxMagnitude = startDistance * .10
transAngle = 0
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3200,Icicle,"speedAbs = math.min(120, math.pow(0.3+progress * 3, 3) * 100) ",0,0
3201,Parabola (High) (Accelerate) - 3xMissiles,"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = 0.7 + 2 * progress
if missileIndex==1 then
   transRight=rand1*2
elseif missileIndex==2 then
   transRight=rand1*3
end
",0,3
3202,Garrosh Raid - Arsenal - Shadow AOE Dummy Missile - KJD,"local radius = progress * 50

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1*anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

scale = 2*(progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,16
3203,Garrosh Raid - Arsenal - Shadow AOE Missile - KJD,scale = 2*(progress),0,1
3204,Garrosh Raid - Arsenal - Fire AOE Missile - KJD,"local maxAngle = 30
local direction
local angle 

scale = 4*(((1-progress)/2)+0.5)

if (rand3-0.5)>0 then
	direction = 1
else
	direction = -1
end


if progress<(0.5) then 
	angle = progress*(rand1*maxAngle)*direction
else
	angle = (1-progress)*(rand1*maxAngle)*direction
end

transRight = angle*(startDistance/25)",0,1
3205,Blink Trail Frost/Fire,"local spread = 0.75
spread = spread * 2 * math.min(.5, 3 * (0.5 - math.abs(progress - 0.5)))

local startAngle = 360 * missileIndex / missileCount;
local maxRotation = 540

transAngle = startAngle + (progress * maxRotation)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,3
3206,"Parabola (Very, Very High, Very Slow Reverse Spin)","local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = -160

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
3207,7.0 Suramar Raid - Gul'dan - Liquid Hellfire Cosmetic - KJD,"local function pmap(func)
	return func(progress)
end

transFront = -distanceToFirePos
transFront = 2 + 4 * progress
transUp = 2 + 6 * pmap(function(x) return (math.tanh((8*x)-3)/2)+0.5 end)
scale = 0.001 + 1 + progress * 3
--faceImpactPos = 1
modelPitch = -90",0,1
3208,"Parabola (Pitch Spin Fast, Very High)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 1080

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3209,"Parabola (Pitch Spin Slow, Roll Spin Fast, Very High)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 20
local rollSpinRate = -1080

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = time * rollSpinRate",0,1
3210,Pitch Model 90,"modelPitch = 90
modelRoll = 0
modelYaw = 0",0,1
3211,Fountain (Very High),"local angle = 0
local maxMagnitude = startDistance * 1.5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)",0,1
3212,ak coin test,"progress = progress

--local transFront1 = (sin((progress+rand1)*1440)) * (progress * (5*rand2) + 13) - distanceToFirePos
--local transRight1 = -(cos((progress+rand1)*1440)) * (progress * (5*rand1) + 13)
--transUp = cos((progress+rand2)*(1600 + 1600*rand2)) * (progress + 2) + 4
--local progressmult = 1
--if progress > 0.5 then
--    local p = progress - 0.5
--    p = p/0.5
--    p = math.pow(p,4)
--    progressmult = 1 - p
--end


--transFront = progress-distanceToFirePos * .5
--transRight = transRight1 
 ",0,0
3213,Draenor: (DLA) - Ogre - Magic - Boulderbolt Backfire,modelPitch = -90,0,0
3214,Garrosh Raid - Arsenal - Lever State Ring 5 - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local radius = 2
local offset = totalDistance/2.5
local angle = (progress*360) + (rand1*360)
local factor = 1.5

noise1 = (noise1 * factor * 1)
transRight = ( cos(angle) * radius ) + noise1 + (progress*offset)
noise2 = (noise2 * factor * 2)
transFront = ( sin(angle) * radius ) + noise2

scale = ((1-progress)*5)*(progress*1)
speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,5
3215,Garrosh Raid - Arsenal - Lever State Ring 4 - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local radius = 2
local offset = totalDistance/2.5
local angle = (progress*360) + (rand1*360)
local factor = 1.5

noise1 = (noise1 * factor * 1)
transRight = ( cos(angle) * radius ) + noise1 + (progress*offset)
noise2 = (noise2 * factor * 2)
transFront = ( sin(angle) * radius ) + noise2

scale = ((1-progress)*5)*(progress*1)
speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,4
3216,Garrosh Raid - Arsenal - Lever State Ring 3 - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local radius = 2
local offset = totalDistance/2.5
local angle = (progress*360) + (rand1*360)
local factor = 1.5

noise1 = (noise1 * factor * 1)
transRight = ( cos(angle) * radius ) + noise1 + (progress*offset)
noise2 = (noise2 * factor * 2)
transFront = ( sin(angle) * radius ) + noise2

scale = ((1-progress)*5)*(progress*1)
speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,3
3217,Garrosh Raid - Arsenal - Lever State Ring 2 - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local radius = 2
local offset = totalDistance/2.5
local angle = (progress*360) + (rand1*360)
local factor = 1.5

noise1 = (noise1 * factor * 1)
transRight = ( cos(angle) * radius ) + noise1 + (progress*offset)
noise2 = (noise2 * factor * 2)
transFront = ( sin(angle) * radius ) + noise2

scale = ((1-progress)*5)*(progress*1)
speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,2
3218,Garrosh Raid - Arsenal - Lever State Ring 1 - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local radius = 2
local offset = totalDistance/2.5
local angle = (progress*360) + (rand1*360)
local factor = 1.5

noise1 = (noise1 * factor * 1)
transRight = ( cos(angle) * radius ) + noise1 + (progress*offset)
noise2 = (noise2 * factor * 2)
transFront = ( sin(angle) * radius ) + noise2

scale = ((1-progress)*5)*(progress*1)
speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,1
3219,Garrosh Raid - Arsenal - Lever State Ring 6 - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local radius = 2
local offset = totalDistance/2.5
local angle = (progress*360) + (rand1*360)
local factor = 1.5

noise1 = (noise1 * factor * 1)
transRight = ( cos(angle) * radius ) + noise1 + (progress*offset)
noise2 = (noise2 * factor * 2)
transFront = ( sin(angle) * radius ) + noise2

scale = ((1-progress)*5)*(progress*1)
speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,6
3220,Garrosh Raid - Arsenal - Lever Missiles to Machine - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function direction() local d=1 if (rand3-0.5)>0 then d=-1 end return d end

local startAngle
local maxAngle = 5
local minAngle = 3

scale = parabola(1,1.5,4)

local maxMagnitude = startDistance * 0.35
local angle = (direction()*(progress*180)) + (rand1*180)
local factor = 2

local noise1 = 4 * factor * noise((time+rand1*4)*50)
local noise2 = 5 * factor * noise((time+rand2*4)*50)
local noise3 = 2 * factor * noise((time+rand3*4)*50)

transRight = direction() * parabola(1,2,noise1+(5+5*rand2))
transUp = parabola(1,1,maxMagnitude) + parabola(1,1,noise2)
transFront = parabola(1,1,noise3)",0,1
3221,Garrosh Raid - Arsenal - Final Missiles from Boxes - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressSpeed = math.pow(progress,3) 
local progressMult = sinapprox(progress*180)*(1-progress)*2

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local angle = (rand1*180)-90
local maxMagnitude = startDistance * (.25+(rand2/4))

transAngle = angle
speedOffset = (3*rand3) * (((1-progress)/2)+1)
local factor = 2

noise1 = (noise1 * factor * 4)
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,0.7)*0.5 + noise1
noise2 = (noise2 * factor * 6) + (((1 - progress) * 10) * (progress * 5))
transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult + noise2
noise3 = (noise3 * factor * 4)
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,0.7)* 0.5 + noise3
",0,2
3222,Garrosh Raid - Arsenal - Console Halo - KJD,"local radius = (progress * totalDistance)
local curAngle = (missileIndex/missileCount)*360

transFront = (sin(curAngle) * radius)
transRight = (cos(curAngle) * radius)
transFront = transFront - distanceToFirePos
scale = math.max(0.001, progress*(totalDistance*(5.5/35)))
speedAbs = (totalDistance/35)*10",0,8
3223,Garrosh Raid - Arsenal - Crate Energy to Lever Missiles - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function direction() local d=1 if (rand3-0.5)>0 then d=-1 end return d end

local factor = 3
local noise1 = 2 * factor * noise((time+rand1*4)*50)
local noise2 = 1 * factor * noise((time+rand2*4)*50)
local noise3 = 4 * factor * noise((time+rand3*4)*50)
local progressSpeed = math.pow( (1-math.pow(progress,1.5)) , math.max(1,startDistance/5) )
local progressMult = sinapprox((1-progress)*180)*((progress))*2

progress = exp(1)

transFront = parabola(1,2,noise1)
transRight = rand1 * direction() * parabola(2,1,1.25) + noise2
transUp = parabola(2,1,startDistance/15) + (noise3*(1-progress)) + parabola(1,1,parabola(1,1,1))

scale = 0.5+parabola(5,1,0.25)
speedOffset = (startDistance/10 * exp(2))",0,1
3224,"Spiral Vortex (2 Missiles, Tight Spiral)","local amp = math.pow(1-progress,1.2)*3


local p = 0
if time < 0.2 then
    p = 1-(time*5)
end

local u = 0
if time < 1 then
    u = 1-(time) 
end

local q = 0
if time < 0.25 then
    q = sin((time/0.25)*180)
end

local t = math.pow(progress,0.5)
local transFrontA = math.pow(progress,3)*distanceToFirePos-distanceToFirePos
local transFrontB = (sin(-time*180)*3-distanceToFirePos) * p 
transFront = t * transFrontA + (1-t) * transFrontB

transUp = (1-u)*(missileIndex*2-1)*cos(time*720)*amp*0.75 + q*1
transRight = (missileIndex*2-1)*sin(time*720)*amp

transUp = transUp + sin(progress*180)*1",0,2
3225,Garrosh Raid - Arsenal - Forcefield Missiles - KJD,"local function sinapprox(v)
	local t1 = 1.1*v/360
	local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
	return -4*(t2 - t2 * math.abs(t2))
end

local function parabola(a,b,m)
	return (4*m*((1-progress)*a)*((progress)*b))
end

local function noise(a)
	return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5))
end

local direction 
if (rand3-0.5)>0 then direction = -1 else direction = 1 end

local distAdj = startDistance/10
local maxUp = startDistance/30
local radius = math.max(-startDistance,-15)
local rotation = (360*1.5) + (0.5*rand1*360)
local scaler = 1
local expIncrease,expReduction = 1.5,0.25
local factor = 2
local noise1 = 4 * factor * noise((time+rand1*4)*50)
local noise2 = 4 * factor * noise((time+rand2*4)*50)
local noise3 = 6 * factor * noise((time+rand3*4)*50)

speedScaler = 1/math.max(1,distAdj)
--local progressSpeed = math.pow( (1-math.pow(progress,expIncrease)) , math.max(1,distAdj) )
--local progressMult = sinapprox((1-progress)*180)*((progress))*2

--transRight = (direction * sin(progressSpeed*rotation)) * math.pow(1-progress,expReduction)
--transRight = (transRight * radius * math.pow(1-progressSpeed,expReduction) * scaler) + parabola(1,1.25,noise1)

--transFront = (-cos(progressSpeed*rotation)+1) * math.pow(1-progress,expReduction)
--transFront = (transFront * radius * math.pow(1-progressSpeed,expReduction) * scaler) + parabola(1,1.25,noise2)

transUp = parabola(1.25,2,maxUp) + (2*(1-(progress*progress))) --+ parabola(1,1,noise3) ",0,1
3226,Garrosh Raid - Arsenal - Heroic Spark Missile - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local maxMagnitude = 30
local angle = (progress*360) + (rand1*360)

transUp = (maxMagnitude * 4 * ((1-progress)*1.5) * ((progress)))",0,1
3227,Garrosh Raid - Arsenal - Heroic Spark Missile 2 - KJD,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)
local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)
local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local maxMagnitude = 30
local angle = (progress*360) + (rand1*360)

transAngle = angle
transMag = 1
transUp = (maxMagnitude * 4 * ((1-progress)*1.5) * ((progress)))",0,1
3228,Item - 5.4 Legendary Cloak - Physical DPS - Flurry Hunt,"local radius = 6
speedScalar = 0.2 + 1.6 * rand1

transRight = progress * rand3 * radius  * sin(rand2*360)
transFront = progress * rand3 * radius  * cos(rand2*360)
transUp = sin(progress*180)*0.5",0,15
3229,Garrosh Raid - Arsenal - Mogu Ritualist Summon - KJD,"local startAngle = 0
local degreesPerSec = 180

transFront = (5 * ((progress)*1) * ((1-progress)*2))
transUp = (1 * ((progress)*1) * ((1-progress)*30))
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = (4 * ((progress)*1) * ((1-progress)*1))
scale = math.max((4*((progress)*1) * ((1-progress)*2)),0.75)",0,3
3230,Garrosh Raid - Arsenal - Console Halo Reverse - KJD,"local radius = ((1-progress) * totalDistance)

local curAngle = (1-progress) * 0
if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	curAngle = curAngle + anglePerMissile * missileIndex
end

transFront = ((sin(curAngle) * radius) - distanceToFirePos)
transRight = (cos(curAngle) * radius)
scale = math.max(0.001, (1-progress)*(totalDistance*(5.5/35)))
speedAbs = (totalDistance/35)*10
modelYaw = 180",0,8
3231,Event - AO - Trial Start,"scale = 4

if missileIndex == 1 then
    transFront = 3
elseif missileIndex == 2 then
    transFront = 6
else
    transFront = 9
end

modelYaw = 0
modelRoll = 0
modelPitch = -90

if time > 8 then
    scale = 0.001
end",0,3
3232,Garrosh Raid - Arsenal - Crate Energy to Lever Missiles XL - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function direction() local d=1 if (rand3-0.5)>0 then d=-1 end return d end

local mag = startDistance * 0.15
local factor = 5
local scaler = 1
local noise1 = 2 * factor * noise((time+rand1*4)*50)
local noise2 = 1 * factor * noise((time+rand2*4)*50)
local noise3 = 2 * factor * noise((time+rand3*4)*50)
local radius = math.max(-startDistance/3,-5)
local rotation = (360*1.5) + (0.5*rand1*360)
local distAdj = startDistance/10
local expGrowth = 1.5
local expShrink = expGrowth/5
local progressSpeed = math.pow( (1-math.pow(progress,expGrowth)) , math.max(1,distAdj) )
local progressMult = sinapprox((1-progress)*180)*((progress))*2

transUp = parabola(1,1,mag) + (noise3 * math.pow(parabola(1,1,1),2))

transFront = (-cos(progressSpeed*rotation)+1) * math.pow(1-progress,expShrink) * math.max(1,parabola(10,1,0.25))
transFront = (transFront * radius * math.pow(1-progressSpeed,expShrink) * scaler) + parabola(1,1.25,noise1) + (noise1*exp(1))

transRight = (direction() * sin(progressSpeed*rotation)) * math.pow(1-progress,expShrink) * math.max(1,parabola(10,1,0.25))
transRight = (transRight * radius * math.pow(1-progressSpeed,expShrink) * scaler) + parabola(1,1.25,noise2) + (noise2*exp(1))

scale = parabola(5,1,0.25)
speedOffset = 0.75+(progress * progress)",0,1
3233,Highmaul Raid - Twins - Arcane Fragment - KJD,"local p,p2 = progress,progress^2
local function parabola(m) m=m or 1 return (m*4*p*(1-p)) end

local degreesPerSec = 40
local height = 15
local radius = 2

transAngle = time * (degreesPerSec + (6 * degreesPerSec * p2))
transMag = parabola(radius)
transUp = parabola(height)^(1/2)",0,1
3234,Blackrock Train Depot - Bombing Run - Explosive Spear - KJD,"local p = progress
local function parabola(m) m=m or 1 return (m*4*p*(1-p)) end
local maxUp = startDistance * 0.1
transUp = parabola(maxUp)
modelRoll = 360 * p
modelPitch = -20 + (30 * p)",0,1
3235,"Ring (10-15yd wide, 10yd tall, 10 Missiles) - MRN","local percentOfCircle = 0.5
local startAngle = 0

if missileIndex == 0 then
	radius = 10
    transUp = .5
elseif missileIndex == 1 then
	radius = 10.5
	startAngle = 60
    transUp = 1
elseif missileIndex == 2 then
	radius = 12
	startAngle = 120
    transUp = 1.5
elseif missileIndex == 3 then
	radius = 13
	startAngle = 180
    transUp = 2
elseif missileIndex == 4 then
	radius = 14.5
	startAngle = 240
    transUp = 2.5
elseif missileIndex == 5 then
	radius = 15
	startAngle = 300
    transUp = 3
elseif missileIndex == 6 then
	radius = 10.5
	startAngle = 30
    trasnUp = 3.5
elseif missileIndex == 7 then
	radius = 12
	startAngle = 90
    transUp = 4
elseif missileIndex == 8 then
	radius = 13
	startAngle = 150
    transUp = 4.5
elseif missileIndex == 9 then
	radius = 14.5
	startAngle = 210
    transUp = 5
elseif missileIndex == 9 then
	radius = 14.5
	startAngle = 270
    transUp = 5
elseif missileIndex == 10 then
	radius = 14.5
	startAngle = 330
    transUp = 5
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
transUp = transUp/2

-- spin them a little so they look good from the side
modelRoll = 60 * rand3",0,11
3237,Vorka Cannonball,"local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3238,Battle Pet - Spin Around Caster (3),"local outerWheelSpinRate = 360 	-- 1 spin / sec
local outerWheelMag = 1			-- 2.5 is one yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
transUp = 0",0,3
3239,Parabola (Low) with tumble,"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * 540
modelRoll = progress * 720
modelYaw = progress * 360

modelScale = .8",0,1
3240,Blackrock Shotgun Smoke,"modelPitch = 0
modelRoll = 0
modelYaw = 0

local smokeDist = 8

transFront = (smokeDist  - totalDistance) * progress
transUp = (smokeDist  - totalDistance ) * progress
transUp = 2*progress",0,1
3241,Blackrock Shotgun,"-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

local bulletLayers = 3
local bulletsPerLayer = missileCount / bulletLayers
local anglePerMissile = 360 / bulletsPerLayer
local variationAmt = anglePerMissile * 0.3

if (missileIndex > 0) then
	transAngle = anglePerMissile * missileIndex
    transAngle = transAngle + rand1 * variationAmt
end

local curLayer = 0

while missileIndex > bulletsPerLayer * curLayer do
    curLayer = curLayer + 1
end

transMag = outerWheelMag * (curLayer+1)/bulletLayers + rand2*0.1

transUp = 2*progress",0,30
3242,Vorka Cannonball (Karabor),"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 150 --How high parabola
frontP = HorizontalSCurve(progress,1.25)
upP    = HorizontalSCurve(progress,1.25)
--transRight = -((1 - frontP) * 250) --Distance to start from dest
transFront = -((1 - frontP) * 150) --Distance to start from dest
transUp    = (-1 *(parabolicFactor * (upP * upP))) + parabolicFactor",0,1
3243,Razorfen Kraul 6.x - Earthen Barrage - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end

local radius = 2
local maxUp = math.min(radius,startDistance/10)
local rotation = 360
local noise1,noise2,noise3 = noise((time+2)*50), noise((time+2)*50)*2, noise((time+2)*50)*3

speedScalar = 1+5*progress
progress = math.pow(1-progress,2)
transRight = sin((progress*parabola(1,1.25,noise1))*rotation)
transFront = (-cos((progress*parabola(1,1.25,noise2))*rotation)+1)
transUp = parabola(1.25,0.5,maxUp*noise3) + parabola(1,1,maxUp)
transAngle = ((missileIndex / missileCount) * 360) + (time * 540)
transMag = (1-(math.pow((progress*progress*2)-1,2))) * maxUp
",0,3
3244,Meandering Missile (1) - Low,"local maxMagnitude = 1.0
local minSpeedScalar = 1.0
local maxSpeedScalar = 1.0
local randscalar = 100
local timescalar = 50
 
local angle = 0
local maxArcMagnitude = startDistance * .35

local magnitude = (progress * 1.9) - 1

magnitude = 1

transRight = (sin((rand1 * randscalar * progress) + (time * randscalar)) + sin((rand2 * randscalar * progress) + (time * timescalar))) * magnitude
transUp = (sin((rand2 * randscalar * progress) + (time * randscalar)) + sin((rand1 * randscalar * progress) + (time * timescalar))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxArcMagnitude
",0,1
3245,Razorfen Kraul 6.x - Bind Frost Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function HorizontalSCurve(pow)
     local val = (math.pow((2*progress)-1,pow)+1)/2
     if (pow%2==0) and (progress<0.5) then
           val = 1-val
     end
     return val
end

--local maxUp = 6
local offset = 5

scale = math.max(0.001,math.pow(progress,1.5))

progress = math.pow(progress,3)
transFront = parabola(1,0.75,HorizontalSCurve(4)*-5)
--transUp = maxUp * (1-math.pow(progress,3))
--transFront = parabola(1,1,distanceToImpactPos - (offset * (1-progress)))",0,1
3246,6.0 Ogre Mines - Forge Boss - Shatter Earth,"local angle = 0
local maxMagnitude = startDistance * 1.00

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = progress * 1200

progress = math.pow((2 * progress - 1), 3)
progress = (progress + 1)/2",0,1
3247,Razorfen Kraul 6.x - Solarshard Totem Beam Missile - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end

local angleVariance = 30
local maxMagnitude = 5

for i=1,missileCount-1 do
	transAngle = rand1 * angleVariance
end

--(4*1*(math.max(1-progress,0.25))*(progress*progress))
--transFront = (1-progress) * (distanceToImpactPos * progress)
transFront = (progress * distanceToImpactPos) 
progress = math.pow(1-progress,3)
transFront = transFront + ((1-progress)*(10*progress))
transMag = parabola(maxMagnitude,1,1)
scale = math.max(0.5,parabola(0.75,0.75,1.50))
speedScalar = 0.5+parabola(1,1,1)",0,3
3248,StoneBolt - Lift and Launch - Right Side,"faceImpactPos = 1
local phaseTwoStart = .7
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = -3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
     
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    --faceImpactPos = 1
    transRight = -3*(1-p)
    
end

modelYaw = (1-progress)*20+10

transRight = transRight+cos(rand1*180+90)*2*(1 - p)
transFront = transFront+sin(rand1*180+90)*2*(1 - p)
",0,0
3249,Volley Small (Fountain + Multi Shot),"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local noise = 2;
local outerWheelMag = 2 * (progress)

if ( missileIndex > 6 ) then 
	outerWheelMag = outerWheelMag * 2;
end

local count = missileCount / 2

local smallAngle = (360/count ) * missileIndex 
local transRight = math.cos(smallAngle) * outerWheelMag + rand1*noise ;
local transFront = math.sin(smallAngle) * outerWheelMag + rand2*noise ;",0,12
3250,Razorfen Kraul 6.x - Spirit Protected Wall Missiles - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function direction() local d=1 if (rand3-0.5)>0 then d=-1 end return d end

local factor = 0.75
local noise1 = 1 * factor * noise((time+rand1*4)*50)
local noise2 = 2 * factor * noise((time+rand2*4)*50)
local radius = 1
local offset = 0.01
local angle = (progress*360) + (rand1*360)

transRight = ( cos(angle) * radius ) + noise1 + (progress*offset)
transFront = ( sin(angle) * radius ) + noise2

scale = math.max(0.001,((1-progress)*2)*(progress*0.5))
speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,3
3251,Razorfen Kraul 6.x - Woven Elements Missile 1 - KJD,"local startAngle = 0
local degreesPerSec = math.min(360,(startDistance/10)*360)
local maxMagnitude = 1

transAngle = startAngle + (time * degreesPerSec)
transMag = (((1-progress)*(1-progress)*2)-1)
transMag = 1-(transMag*transMag)
transMag = transMag * maxMagnitude
",0,1
3252,Razorfen Kraul 6.x - Woven Elements Missile 2 - KJD,"local startAngle = 120
local degreesPerSec = math.min(360,(startDistance/10)*360)
local maxMagnitude = 1

transAngle = startAngle + (time * degreesPerSec)
transMag = (((1-progress)*(1-progress)*2)-1)
transMag = 1-(transMag*transMag)
transMag = transMag * maxMagnitude
",0,1
3253,Razorfen Kraul 6.x - Woven Elements Missile 3 - KJD,"local startAngle = 240
local degreesPerSec = math.min(360,(startDistance/10)*360)
local maxMagnitude = 1

transAngle = startAngle + (time * degreesPerSec)
transMag = (((1-progress)*(1-progress)*2)-1)
transMag = 1-(transMag*transMag)
transMag = transMag * maxMagnitude
",0,1
3254,Frostfire Ridge - Gorr'thog - Unleashed Magma,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 40

if progress <=  parabolaStart then
	transFront = sin(progress * 1530) * 20 - distanceToFirePos
	transRight = cos(progress * 1530) * ((1 - progress) * 20)
	transUp = (progress) * 20 + randomFactor * (cos( progress * (360*2) ) *3)
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * 1530) * 20 - distanceToFirePos
	transRight = cos(parabolaStart * 1530) * ((1 - parabolaStart) * 20)
	transUp = (parabolaStart) * 20 + randomFactor * (cos( parabolaStart * (360*2) ) * 3)

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3255,Razorfen Kraul 6.x - Volley Arrow - KJD,transUp = ((1-progress)*(progress)*4)*7,0,1
3256,Razorfen Kraul 6.x - Fan of Knives - KJD,"local radius = progress * totalDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1*anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

faceImpactPos = 1
modelYaw = curAngle-75
modelRoll = 90",0,12
3258,StoneBolt - Lift and Launch - Left Side,"faceImpactPos = 1
local phaseTwoStart = .6
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = 3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    --faceImpactPos = 1
    transRight = 3*(1-p)
    
end

modelYaw = -(1-progress)*20-10

transRight = transRight-cos(rand1*180+90)*2*(1 - p)
transFront = transFront+sin(rand1*180+90)*2*(1 - p)
",0,0
3259,Frostfire Ridge - Gorr'thog - Earthshard Missile,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end


local phaseTwoStart = .6 + (rand2 * .2)
progress = HorizontalSCurve(progress,5)
local p = progress - phaseTwoStart
local rightOffset
if (rand3 >= .5) then
   rightOffset = 5 + ((rand3 -.5) * 20)
else
   rightOffset = -5 - (rand3 * 20)
end

faceImpactPos=1
if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*3 + (rand2 * 4)
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = rightOffset
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*3 + (rand2 * 4)
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = rightOffset *(1-p)
    
end

modelYaw = -(math.deg(math.atan2(rightOffset, startDistance)))
",0,0
3260,Razorfen Kraul 6.x - Ramtusk - Spirit Link Totem Up - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local progressMult = -cos(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,3) 
local distOffset = startDistance*math.pow(1-progressSpeed ,.7)*.5
local missileRotation = 360*missileIndex/missileCount

transFront = cos(progressSpeed * (360 + missileRotation)) * distOffset
transFront = parabola(1,1,transFront)
transRight = sin(progressSpeed * (360 + missileRotation)) * distOffset
transRight = parabola(1,1,transRight)
transUp = parabola(1,1,3)",0,1
3261,Razorfen Kraul 6.x - Ramtusk - Spirit Link Totem Down - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local progressMult = -cos(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,3) 
local distOffset = startDistance*math.pow(1-progressSpeed ,.7)*.5
local missileRotation = 360*missileIndex/missileCount

transFront = cos(progressSpeed * (360 + missileRotation)) * distOffset
transFront = parabola(1,1,transFront)
transRight = sin(progressSpeed * (360 + missileRotation)) * distOffset
transRight = parabola(1,1,transRight)
transUp = parabola(1,1,3)",0,1
3262,Razorfen Kraul 6.x - Spirit Bolt Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local startAngle = 360 * (missileIndex/missileCount)
local revolutions = 2

progress = math.pow(progress,3)
transFront = math.min(parabola( (1-parabola(1,1,1))*(math.min(3,startDistance/4)) ,1,3) , parabola(1,1,distanceToImpactPos*(1-progress)) )
transAngle = startAngle + (time * 360 * revolutions)
transMag = 1-math.pow((2*math.pow(1-progress,2))-1,2)",0,2
3263,Razorfen Kraul 6.x - Harness Crystals - KJD,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
	if (exponent >= 2 or progress >= .5) then
		returnValue = math.pow((2 * progress - 1), exponent)
		returnValue = (returnValue + 1)/2
		if (exponent%2 == 0) then
			if progress < .5 then
				returnValue = 1 - returnValue 
			end
        end
    elseif (exponent < 2) then
		if progress < .5 then
			returnValue = math.pow((-2 * progress + 1), exponent)
			returnValue = 1 - ((returnValue + 1)/2)
		end
	end

	return returnValue
end

local phaseTwoStart = .6 + (rand2 * .2)
progress = HorizontalSCurve(progress,5)
local p = progress - phaseTwoStart
local maxUp = math.pow(progress,.3)*3

faceImpactPos=1
if progress <= phaseTwoStart then
	transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
	transUp = maxUp--math.pow(progress,.3)*3 + (rand2 * 4)
	modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
else
	transFront = -distanceToFirePos
	transUp = maxUp--math.pow(progress,.3)*3 + (rand2 * 4)
	p = p/(1 - phaseTwoStart)
	transFront = ((1 - p) * transFront)
	transUp = ((1 - p) * transUp)
	modelPitch = 110
end

--modelPitch = 0--90 * math.pow(progress,3)",0,1
3264,Razorfen Kraul 6.x - Spirit Axe Spirit Missile - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local progressMult = sin(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,3) 
local revolutions = 1+(rand1*(missileIndex/missileCount))
local power = 0.7
local scalar = 0.5
local radius = 10
local factor = 2
local noise1 = 1 * factor * noise((time+rand1*4)*50)
local noise2 = 2 * factor * noise((time+rand2*4)*50)
local noise3 = 2 * factor * noise((time+rand3*4)*50)

transUp = parabola(1,1,3) + parabola(1,1,noise1)
transFront = (-cos(progressSpeed*(revolutions*360))+1) * radius * math.pow(1-progressSpeed,power) * scalar
transFront = transFront + parabola(1,1,noise2)
transRight = sin(progressSpeed*(revolutions*360)) * radius * math.pow(1-progressSpeed,power) * scalar
transRight = transRight + parabola(1,1,noise3)
speedScalar = 1+(1.5*rand1)
scale = math.max(0.001,parabola(1,1,1.5))",0,5
3265,Razorfen Kraul 6.x - Sonic Field Missile - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local factor = 1
local noise1 = 1 * factor * noise((time+rand1*4)*50)
local noise2 = 1.25 * factor * noise((time+rand2*4)*50)
local noise3 = 1.25 * factor * noise((time+rand3*4)*50)

transUp = parabola(1,1,5) + parabola(1,1,noise1)
transFront = parabola(1,1,noise2)
transRight = parabola(1,1,noise3)
scale = math.max(1,parabola(1,1,2))",0,1
3266,"Parabola (High, Slight Forward Spin)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 32

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3267,"6.0 Ogre Mines - Volcanic Eruption - Boomerang, no spin","local angle = 90
local maxMagnitude = startDistance * .2
local spinRate = 0

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3268,Razorfen Kraul 6.x - Molten Inferno Fireball - KJD,"local up = 5 + (rand1 * (startDistance/10))

transUp = (4 * (1-progress) * (progress)) * up",0,1
3269,Razorfen Downs 6.x - Boss - Ammenar - Frozen Bolt - MRN,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 10
local totalSpiralDegrees = 900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)
	transUp = (progress) * 10
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)
	transUp = (parabolaStart) * 10

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3270,Razorfen Downs 6.x - Boss - Ammenar - Frozen Bolt - CCW - MRN,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 10
local totalSpiralDegrees = 900

if progress <=  parabolaStart then
	transFront = (sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos) * 1
	transRight = (cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)) * -1
	transUp = (progress) * 10
end

if progress > parabolaStart then
	transFront = (sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos)  * 1
	transRight = (cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)) * -1
	transUp = (parabolaStart) * 10

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3271,Razorfen Krual 6.x - Kraul Blast - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local startAngle = 360 * (missileIndex/missileCount)
local revolutions = 3

progress = math.pow(progress,3)
transFront = math.min(parabola( (1-parabola(1,1,1))*(math.min(3,startDistance/4)) ,1,3) , parabola(1,1,distanceToImpactPos*(1-progress)) )
transAngle = startAngle + (time * 360 * revolutions)
transMag = 1-math.pow((2*math.pow(1-progress,2))-1,2)",0,3
3272,"Parabola (Fast in/out, High)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 4*distanceToFirePos
frontP = HorizontalSCurve(progress,1.2)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)",0,1
3273,Parabola (Fast in/out),"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = distanceToFirePos
frontP = HorizontalSCurve(progress,1.2)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)",0,1
3274,Parabola (Random),"local maxMagnitude = startDistance * (0.5*(0.5+(rand2/2)))

transUp = (1-math.pow((progress*2)-1,2)) * maxMagnitude",0,1
3275,Razorfen Kraul 6.x - Venemous Discharge Slime Missile A - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local magnitude = startDistance * 0.3

transUp = parabola(1,1,magnitude)",0,1
3276,Razorfen Kraul 6.x - Venemous Discharge Slime Missile B - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local magnitude = startDistance * 0.3

transUp = parabola(1,1,magnitude)
scale = math.max(0.5,parabola(1,1,1))",0,1
3277,Razorfen Kraul 6.x - Select Element Missile - KJD,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end

local progressSpeed = math.pow(progress,3) 
local progressMult = sinapprox(progress*180)*(1-progress)*2

--speedOffset = (3*rand3) * (((1-progress)/2)+1)

local scaler = 0.5
local maxUp = 1

transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,0.7)* scaler
transUp = (maxUp*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,0.7)* scaler",0,1
3278,Shadowmoon Valley - Commander Vorka - Grapeshot Blast Missile,"local maxSpread = 6
if missileIndex ~= 1 then
transAngle = 360 * rand1
transMag = progress * rand2 * maxSpread
end
progress = math.pow(progress, 1.5)

transFront = (progress * startDistance) - distanceToFirePos
if missileIndex == 1 then
 scale = 5
end",0,25
3279,Parabola (Slow Back Spin),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = -60

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
3280,Shotgun Spray Distance 7,"-- creates a shotgun spray of missiles for use in cone spells
-- the missiles will have some randomness to their spread and speed
-- this version contains special logic for dread spray that allows the missiles near the edges
-- of the cone to stop in midair at some fixed distance to simulate hitting a wall

local wallDist = 3.56					-- in yards
local targetDist = 7					-- in yards
local spreadAmt = 3.2     				-- max distance two missiles can be from each other (correlates to spread angle)
local percentWall = 0.12				-- the percent of the cone spread that should travel the full targetDist (0-1)
local spreadRND = (rand2 - 0.5) / 10	-- how much randomness to add to the each missile's angle
local offsetLeft = .4					-- distance to move the missile impact points left (allows fine tuning of cone direction)

local spread = (-0.5 + (missileIndex / missileCount) + spreadRND) * (spreadAmt * 2)
transRight = progress * (spread + offsetLeft)

if (math.abs(spread + offsetLeft) > (percentWall * spreadAmt)) and (progress >= (wallDist/targetDist)) then
	transFront = (-targetDist * progress) + wallDist
	transRight = (wallDist/targetDist) * (spread + offsetLeft)
end

speedOffset = 1 + missileIndex * 2

--21
--0.6",0,10
3282,Shield Cannon (Shotgun),"transRight = (progress * (rand2 - .5)) * 8

speedOffset = 1 + missileIndex * .5",0,20
3283,Meteor Strike (25 Yards),"local magnitude = 25

transUp = magnitude * ( 1 - progress )

-- Fix for Bug ID: 335353
-- faceImpactPos = 1
",0,1
3284,Meteor Blackfathom Deeps - Falling Debris,"progress = progress * progress

scale = 1 + rand3

local magnitude = 15 + rand3 * 7

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos + -3 + rand1 * 6 
transRight = -3 + rand2 * 6

modelPitch = (progress+rand1)*360",0,8
3285,Event - AO - Drunken Missile,"--here's the drunken part

local maxMagnitude = 1.05
local minSpeedScalar = .98
local maxSpeedScalar = 1.02

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude / 10
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude / 10
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

--here's the arcing part
local angle = 0
local maxAngleMagnititude = startDistance * .45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxAngleMagnititude ",0,1
3286,Quest - Gorgrond (Free Yrel: Escape! - D'kaan's Kill Shot 01),"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

if missileIndex == 0 then
  transRight = 0
  transUp = 0
end

if missileIndex == 1 then
  transRight = progress*(rand1*4-2)
  transUp = 0
end

if missileIndex == 2 then
  transUp = progress*(rand1*4-2)
  transRight = 0
end",0,3
3287,Shadowmoon Valley - Shadowmoon Gronn - Halo Missile Test,"local curAngle = 0
if (missileIndex > 0) then
    local anglePerMissile = 360 / (missileCount)
    curAngle = anglePerMissile * missileIndex
end

transFront = sin(curAngle) * progress
transRight = cos(curAngle) * progress
scale = (progress * totalDistance*(5.5/35))
speedAbs = (totalDistance/35)*10
",0,8
3288,Auchindoun Dungeon 6.0 - Summoner - Soul Vessel Ribbon - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local r1 = 5
local r2 = 15 + (5*(rand1+rand2)/2)
local rev  = 360 + (math.pow((2*progress*(rand3*rand2)/2),3)*360)

local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 3
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 3
local noiseUp = noise((time+rand2*4)*50) * 1.5
local noiseScale = noise((time+(rand3/rand2)*4)*50)/2

progress = math.pow(progress,1)
local p1 = (math.max(distanceToImpactPos/(math.max(progress*4,1.5)),r1)/r1)
local p2 = math.pow(r2/math.max(distanceToImpactPos,r2),3)

if distanceToImpactPos >= r1 then
	transFront = p2 * (p1 * sin(progress * rev) * ((1 - progress) * startDistance) + distanceToImpactPos)
	transRight = p2 * (p1 * cos(progress * rev) * ((1 - progress) * startDistance))
else
	transFront = p1 * sin(progress * rev) * r1 + distanceToImpactPos
	transRight = p1 * cos(progress * rev) * r1
end

transFront = transFront + noiseFront
transRight = transRight + noiseRight
transUp = (noiseUp * (1-math.pow(progress,3)))
speedScalar = 1.5
scale = 1 + noiseScale",0,1
3289,Auchindoun Dungeon 6.0 - Demon Vanguard - Boss - Summon Felguard,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .8
local parabolicScalar = 10
local firstPhaseVertical = 15
local totalSpiralDegrees = 1200

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)
	transUp = (progress) * firstPhaseVertical
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)
	transUp = (parabolaStart) * firstPhaseVertical

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3290,Shadowmoon Valley - Iron Horde - Mokrik - Splatter Shot,"-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

local bulletLayers = 3
local bulletsPerLayer = missileCount / bulletLayers
local anglePerMissile = 360 / bulletsPerLayer
local variationAmt = anglePerMissile * 0.3

if (missileIndex > 0) then
	transAngle = anglePerMissile * missileIndex
    transAngle = transAngle + rand1 * variationAmt
end

local curLayer = 0

while missileIndex > bulletsPerLayer * curLayer do
    curLayer = curLayer + 1
end

transMag = outerWheelMag * (curLayer+1)/bulletLayers + rand2*0.1

transUp = 2*progress",0,8
3291,Shadowmoon Valley -  Splatter Shot 2. Missile,"transUp = 6 * ((1-progress) * progress)
transRight = progress * (-2.5 + (rand1 * 5))
transFront = progress * (-2.5 + (rand2 * 5))

",0,3
3292,Parabola (Up and Right),"local angle = -65
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3293,Shadowmoon Valley - Shotgun Blast Visual Missile,"local maxSpread = 5
transAngle = 360 * rand1
progress = math.pow(progress, 1.5)
transMag = progress * rand2 * maxSpread
transFront = (progress * startDistance) - distanceToFirePos",0,50
3294,Drunken Missiles Slow (1 Missile),"local maxMagnitude = 0.5
local minSpeedScalar = .9
local maxSpeedScalar = 1.1

local angle = 0
local maxArcMagnitude = startDistance * .75


local magnitude = (progress * 1.9) - 1
magnitude = (1 - (magnitude * magnitude * magnitude * magnitude)) * maxMagnitude

transRight = (sin((rand1 * 1000) + (time * 700)) + cos((rand2 * 1000) + (time * 100))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxArcMagnitude",0,1
3295,Auchindoun Dungeon 6.0 - Summoner - Torn Souls Precast - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local rev  = 360 + (math.pow(progress*rand1*rand2,3)*180) + (rand1*360)
local radius = 5
local maxUp = 5

local f = 2.25
local noiseFront = 1 * f * noise((time+rand1*4)*50) * (1-(math.pow(progress,2)))
local noiseRight = 1 * f * noise((time+rand3*4)*50) * (1-(math.pow(progress,2)))
local noiseUp = 1.5 * f * noise((time+rand2*4)*50) + parabola(maxUp)

progress = math.pow(progress,1.5+(progress/2))

local radius = parabola(10)

transFront = radius * sin(progress * rev) + noiseFront + distanceToImpactPos
transRight = radius * cos(progress * rev) + noiseRight
transUp = math.max(parabola(maxUp+noiseUp)*1.5,progress*1.25) - 1
scale = clamp(parabola(progress^3),0.1,1)",0,1
3296,Shadowmoon Valley - Iron Barrage Missile,"local angle = 0
local maxMagnitude = startDistance * .50
local spinRate = 1440

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate",0,1
3297,Fast Out - Straight Missile - KJD,"local factor = 3
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
3298,Fast Out - Hook Left or Right - KJD,"local factor = 3
local maxWidth = 5
local direction = 1

if rand1>0.5 then
	direction = -1
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * rand2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
3299,Fast Out - Hook Left or Right (Starts Scaled Down) - KJD,"local factor = 3
local maxWidth = 5
local direction = 1

if rand1>0.5 then
	direction = -1
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * rand2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

scale = math.max(math.pow(progress,factor*2),progress)",0,1
3300,Ring HMC Ner'zhul,"local outerWheelSpinRate = 90 	-- 1 spin / sec
local outerWheelMag = 10			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2
transRight = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2",0,6
3301,Auchindoun Dungeon 6.0 - Demon Vanguard - Cackling Pyromaniac - ,"local outerWheelSpinRate = 360
local outerWheelMag = 2

local p 
if progress > .5 then
   p = (1 - progress)* 2
else
   p = progress * 2
end

local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transUp = outerWheelMag * math.sqrt(p) * cos ( missileAngle )
transRight = outerWheelMag * math.sqrt(p) * sin ( missileAngle )
transFront = -distanceToFirePos + ( (progress * progress) * (distanceToFirePos))",0,3
3302,Shadowmoon Valley 6.x - Leafreader - Nuke Precast,"local radius = sin(progress*180) * .5

local curAngle = progress * 720

if (missileIndex == 0) then
    transFront = (sin(curAngle) * radius)
    transRight = -(cos(curAngle) * radius)
else
    transFront = (sin(curAngle) * radius)
    transRight = (cos(curAngle) * radius)
end",0,2
3303,Clusterpult Shot,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 360
local endHeight = 10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transUp = progress * endHeight

modelPitch = time * spinRate
",0,1
3304,Auchindoun Dungeon 6.0 - Summoner - Warden Hammer Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local angle = 0
local maxDistThresholdMult = 3
local distTreshold = 5
local maxMagnitude = 3 + (math.max(math.min(distTreshold/startDistance,maxDistThresholdMult),distTreshold)/distTreshold)
local rotation = 360 + 230

modelPitch = progress * rotation
transUp = parabola(1,1,maxMagnitude)",0,1
3305,Ring HMC Ner'zhul - ALT (Gandling),"local outerWheelSpinRate = 5 	-- 1 spin / sec
local percentOfCircle = 0.75
local startAngle = 0

if missileIndex == 0 then
	radius = 9.5 * (1.5-progress)
elseif missileIndex == 1 then
	radius = 10 * (1.5 -progress)
	startAngle = 60
elseif missileIndex == 2 then
	radius = 10.5 * (1.5-progress)
	startAngle = 120
elseif missileIndex == 3 then
	radius = 11 * (1.5-progress)
	startAngle = 180
elseif missileIndex == 4 then
	radius = 11.5 * (1.5-progress)
	startAngle = 240
else
	radius = 12 * (1.5-progress)
	startAngle = 300
end

local curAngle = outerWheelSpinRate *(percentOfCircle * progress * 360) + startAngle


transFront = (sin(curAngle) * radius)
transRight = (cos(curAngle) * radius)

transUp = -rand2 * 2

-- spin them a little so they look good from the side
modelRoll = 60 * rand3",0,4
3306,Ring HMC Ner'zhul - ALT (Fountain),"local angle = 0
local maxMagnitude = startDistance * 10
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * 0.5

transRight = (sin((rand1 * 1000) + (time * 400))  ) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) ) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) ) * magnitude

speedScalar = 1 - (progress * .1)",0,5
3307,Auchindoun Dungeon 6.0 - Summoner - Soul Vessel Ring - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local r1 = 5
local rev  = 1440

local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 1
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1
local noiseUp = noise((time+rand2*4)*50) 

progress = math.pow(progress,1)

transFront = sin(progress * rev) * r1 + noiseFront + distanceToImpactPos
transRight = cos(progress * rev) * r1 + noiseRight
transUp = 0.5 + parabola(noiseUp) + (noiseUp/2)

scale = clamp(parabola(progress^3),0.1,1)
progress = math.pow(progress,1.5)",0,1
3308,Auchindoun Dungeon 6.0 - Construct - Shield Lowering - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function cosa(v) return sina(v+1.57079632) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local f1,f2 = 200,2
local noiseFront =	noise(time+rand1*f1) * f2
local noiseRight =	noise(time+rand3*f1) * f2
local noiseUp =	noise(time+rand2*f1) 
local noiseScale =	noise(time+(rand3/rand2)*f1)

local rev = 1440
local radius = 7
local offset = 360 * (missileIndex/missileCount)

transFront = sin((progress * rev) + offset) * (radius * progress) + noiseFront
transRight = cos((progress * rev) + offset) * (radius * progress) + noiseRight
transUp = parabola(5,1,2)

transFront = (transFront * math.pow(1-progress,1.15))  - (distanceToFirePos * math.pow(1-progress,1.15))
transRight = (transRight * math.pow(1-progress,1.15))",0,1
3309,Auchindoun Dungeon 6.0 - Summoner - Mind Control - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local radius = 3
local rev  = 360 * 10

local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) 
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) 
local noiseUp = noise((time+rand2*4)*50) 
local noiseScale = noise((time+(rand3/rand2)*4)*50)/1.5

local p = progress^3

--spin motion controller
local p1 = (radius/math.max(distanceToImpactPos*2,radius))
p1 = p1 * clamp(parabola(1,1,radius^2),0.01,1)

--forward motion controller
local p2 = progress

transFront = noiseFront + sin(p * rev) * radius * p1 + (distanceToImpactPos * p2)
transRight = noiseRight + cos(p * rev) * radius * p1 
transUp = 0.01 + (noiseUp * (1-math.pow(progress,3)))
",0,1
3310,Incoming Iron Horde Capsule,"local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.max(0, 2.5*progress-1.5)

local t1 = (time+rand1)*140
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*140
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*140
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 0.15


local angle = 0
local maxMagnitude = startDistance * .1
local startSpinRate = 230
local spinRateStop = 2
faceImpactPos = 1


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude 
--transUp = progress*progress*0.2*( math.sin(progress * 150) + math.sin(progress * 103) )
--transRight = progress*progress*0.2*( math.sin(progress * 126) + math.sin(progress * 88) )
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*8*factor 
transFront = progressMult*noise3*14*factor 

modelPitch = 40+(time * startSpinRate * math.max(0, (1-progress/(2*spinRateStop))))
",0,1
3311,Foundry Raid - Shaman - Ultimate - Missile - MRN,"local function HorizontalSCurve(progress, exponent)
  local returnValue = 0
  if (exponent >= 2 or progress >= .5) then
     returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end
	return returnValue
end

local rate = 1080
local totalDegrees = 2160
if rand3 > .5 then
   totalDegrees = totalDegrees + 180
end
local releaseTime = totalDegrees/rate

local parabolicScalar = 5
local function randSinCos1(value)
  if rand3 > .5 then
     return sin(value)
  else
     return cos(value)
  end
end

local function randSinCos2(value)
  if rand3 > .5 then
     return cos(value)
  else
     return sin(value)
  end
end

if rate*time <= totalDegrees then
  transFront = 5*(progress+.5)*randSinCos1(rate*time)-distanceToFirePos
  transRight = 5*(progress+.5)*randSinCos2(rate*time)
  transUp = .5+progress*2
else
  local speed =distanceToFirePos/time
  local tTime =totalDistance/speed
  local parabolaStart =releaseTime/tTime
  transFront = 5.5*(parabolaStart+.5)*randSinCos1(totalDegrees)-distanceToFirePos
  transRight = 5.5*(parabolaStart+.5)*randSinCos2(totalDegrees)
  transUp = .5 + (parabolaStart) * 2
  local p = progress-parabolaStart
  p = p/(1 - parabolaStart)
  p = HorizontalSCurve(p, 1.2)
  transRight = ((1-p)*transRight)
  transUp = ((1-p)*transUp)
  transFront = ((1-p)*transFront)
  local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
  transUp = transUp + (verticalParabola)
  transRight = transRight + (verticalParabola * 10)
  if rand3 < .5 then
     transRight = transRight * -1 
  end
end",0,0
3312,Auchindoun Dungeon 6.0 - Construct - Holy Shield - KJD,"local p2 = progress^1.5
local function parabola(m) return (4*m*(1-p2)*p2) end
local maxUp = 30

transUp = parabola(maxUp) + (progress * 5)
transRight = -(progress * 0.5)

modelYaw = -90 + (progress * 205)
modelPitch = 180
modelRoll = 90 + (progress * -270)
--progress * 180
scale = 5 --+ (progress * 0.5)
faceImpactPos = 1
speedScalar = 1-progress",0,1
3313,Foundry Raid - Shaman - Molten Torrent - Cosmetic Meteor Missile,"
if missileIndex == 0 then
   startAngle = 45
elseif missileIndex == 1 then
   startAngle = 135
elseif missileIndex == 2 then
   startAngle = 225
else
   startAngle = 315
end

local curAngle = (progress*1440) + startAngle
local loopStart = .2
local orbitStartZ = 0

if missileIndex%2 == 0 then
   orbitStartZ = (15 * (1 - loopStart)) + (sin(curAngle) * 5*(1-loopStart)+.3)
else
   orbitStartZ = (15 * (1 - loopStart)) + (cos(curAngle) * 5*(1-loopStart)+.3)
end

if (1 + progress - loopStart) * orbitStartZ < orbitStartZ then
   transUp = (5 * progress)*orbitStartZ
else
   if missileIndex%2 == 0 then
      transUp = (15 * (1 - progress)) + (sin(curAngle) * 5*(1-progress)+.3)
   else
      transUp = (15 * (1 - progress)) + (cos(curAngle) * 5*(1-progress)+.3)
   end
end

transRight = sin(curAngle) * ((8 * (1-progress)) + 2)
transFront = cos(curAngle) * ((8 * (1-progress)) + 2)",0,4
3314,Chaotic Missile Arcane 3 shots (Missile Arcane Streak),"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor*(1-progress)",0,3
3315,Talador - Shattrath Scenario - Throw Dynamite,"local angle = 0
local maxMagnitude = startDistance * .45
local spinRate = 540

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3316,Chakram Boomerang Loop,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local phaseTwoStart = .5
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transRight = sin(progress*360)*10 
    --transFront = 0-distanceToFirePos-distanceToImpactPos
    transFront = 0-distanceToFirePos+progress*2*totalDistance--distanceToImpactPos
    --transFront = 0-distanceToFirePos
else
    transRight = sin(progress*360)*10
    --transFront = progress*-distanceToFirePos
    transFront = 0-distanceToFirePos+totalDistance-(progress-.5)*totalDistance*2

end


--transFront = 0-distanceToFirePos+sin(progress*180)*startDistance*2
--+sin(progress*180)*distanceToFirePos*2


--[[
local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor*(1-progress)
--]]

",0,2
3317,Chakram Boomerang Overthrow .5,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local phaseTwoStart = .5
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transRight = sin(progress*360)*5 
    transFront = 0-distanceToFirePos+progress*2*totalDistance--distanceToImpactPos
else
    transRight = -sin(progress*720)*10
    --transFront = 0-distanceToFirePos+totalDistance-(progress-.5)*totalDistance*2
    transFront = (0-distanceToFirePos+progress*2*totalDistance)-math.pow((progress-.5)*2,4)*totalDistance*2
    
    

end


--transFront = 0-distanceToFirePos+sin(progress*180)*startDistance*2
--+sin(progress*180)*distanceToFirePos*2


--[[
local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor*(1-progress)
--]]

",0,2
3318,Chakram Hourglass Throw,"
local phaseTwoStart = .25
local progressMult
local p = (progress - phaseTwoStart)/(1-phaseTwoStart)
local m = missileIndex*2-1


if progress <= phaseTwoStart then
    transRight = sin(progress*720)*5*m*(rand1*.75+.25)
    transFront = 0-distanceToFirePos+progress*4*totalDistance
else
    transRight = sin(progress*720)*10*(1-progress)*m*(rand1*.75+.25)
    transFront = 0-distanceToFirePos+progress*4*totalDistance-math.pow(p,2)*totalDistance*4
    --math.pow((progress-.25)*2,4)*totalDistance*2

end

transUp = sin(progress*720)",0,2
3319,Meteor Strike (45 Yards) Falls Straight Down,"local magnitude = 45

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3320,Chakram Double Stack Toss,"if missileIndex == 1 then

    progress = ((progress - .1)/(.9))
    if progress < 0 then
        scale = .0001
    end    

    
end

--Someone figure out how to make this not start a trail behind you awkwardly--

local phaseTwoStart = .25
local progressMult
local p = (progress - phaseTwoStart)/(1-phaseTwoStart)
local m = missileIndex*2-1


if progress <= phaseTwoStart then
    transRight = sin(progress*720)*10*(rand1*.5+.5)
    transFront = 0-distanceToFirePos+progress*4*totalDistance
    transUp = sin(progress*720)*-.5
else
    transRight = -sin(p*360)*20*(1-p)*(rand1*.5+.5)
    transFront = 0-distanceToFirePos+progress*4*totalDistance-math.pow(p,2)*totalDistance*4
    --math.pow((progress-.25)*2,4)*totalDistance*2
    transUp = sin(progress*720)+20*(1-p)*p

end



",0,2
3321,Chakram Tandem Spin,"
local m = missileIndex*2-1

local p = progress
if missileIndex == 1 then
    p = math.pow(progress,.7)

else
    p = math.pow(progress,1.4)

end

transFront = sin(p*1440)*5*sin(p*180)*m
transRight = cos(p*1440)*5*sin(p*180)*m

-- do this with a boomerang flag now",0,2
3322,Chakram Butterfly Throw,"
local phaseTwoStart = .25
local progressMult
local p = (progress - phaseTwoStart)/(1-phaseTwoStart)
local m = missileIndex*2-1


if progress <= phaseTwoStart then
    transRight = m*.3 --sin(progress*720)*5*m*(rand1*.75+.25)
    transFront = 0-distanceToFirePos+progress*4*totalDistance
else
    transRight = sin(math.pow(p,2)*180)*20*(1-p)*(rand1*.5+.5)*p*m*2+.3*m
    transFront = 0-distanceToFirePos+progress*4*totalDistance-math.pow(p,2)*totalDistance*4
    --math.pow((progress-.25)*2,4)*totalDistance*2
    transUp = sin(math.pow(p,2)*360)*(1-p)*5
end

",0,2
3323,Foundry Raid - Shaman - Pre Combat Molten Missile - MRN,"if missileIndex == 0 then
   startAngle = 45
elseif missileIndex == 1 then
   startAngle = 135
elseif missileIndex == 2 then
   startAngle = 225
else
   startAngle = 315
end

local curAngle = (progress*1440) + startAngle

if progress > .5 then
   transRight = sin(curAngle) * ((8 * (1-progress)) + 2)
   transFront = cos(curAngle) * ((8 * (1-progress)) + 2)
   if missileIndex%2 == 0 then
      transUp = (15 * (1 - progress)) + (sin(curAngle) * (5 * (1-progress)))
   else
      transUp = (15 * (1 - progress)) + (cos(curAngle) * (5 * (1-progress)))
   end
else
   transRight = sin(curAngle) * ((8 * progress) + 2)
   transFront = cos(curAngle) * ((8 * progress) + 2)
   if missileIndex%2 == 0 then
      transUp = (15 * (1 - progress)) + (sin(curAngle) * (5 * progress))
   else
      transUp = (15 * (1 - progress)) + (cos(curAngle) * (5 * progress))
   end   

end





",0,4
3324,Foundry Raid - Iron Maidens - Rogue - Withering Shadows 3. Area,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .6
local parabolicScalar = 6
local firstPhaseVertical = 2
local totalSpiralDegrees = 1200
local radius = 2

if progress < .2 then
   radius = radius * (progress/.2)
end

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * radius - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * radius)
	transUp = (HorizontalSCurve(progress,2)) * firstPhaseVertical
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * radius - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * radius)
	transUp = (parabolaStart) * firstPhaseVertical

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3325,Foundry Raid - Shaman - Prefight Cosmetics - Missile - MRN,"local p = progress

transRight = 8 * sin(p*180)

if rand3 < .5 then
   transRight = transRight * -1 
end",0,0
3326,Foundry Raid - Trains - Shotgun Missile - KJD,"-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

local bulletLayers = 2
local bulletsPerLayer = missileCount / bulletLayers
local anglePerMissile = 360 / bulletsPerLayer
local variationAmt = anglePerMissile * 0.5

if (missileIndex > 0) then
	transAngle = anglePerMissile * missileIndex
    transAngle = transAngle + rand1 * variationAmt
end

local curLayer = 0

while missileIndex > bulletsPerLayer * curLayer do
    curLayer = curLayer + 1
end

transMag = outerWheelMag * (curLayer+1)/bulletLayers + rand2*0.1",0,4
3327,Foundry Raid - Trains - Artillery Fire Missile - KJD,"local angle = 0
local maxMagnitude = 18

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3328,"Parabola (High, Spin pitch fast. roll 90, Yaw 90)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 90
modelYaw = 90",0,0
3329,Blackhand - Explosive Shot Smoke,"modelPitch = 0
modelRoll = 0
modelYaw = 0
speedScalar = .1

local smokeDist = 8
local smokeHeight = 16

transFront = (0-distanceToFirePos) + smokeDist * progress
transUp = smokeHeight * progress;
",0,1
3330,Auchindoun Dungeon 6.0 - Construct - Void Missile - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function cosa(v) return sina(v+1.57079632) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local f1,f2 = 200,2
local noiseFront =	noise(time+rand1*f1) * f2
local noiseRight =	noise(time+rand3*f1) * f2
local noiseUp =	noise(time+rand2*f1) 
local noiseScale =	noise(time+(rand3/rand2)*f1)

local rev = 1440
local radius = 9
local offset = 360 * (missileIndex/missileCount)

if missileIndex < (missileCount/2) then
	sina = sin
	cosa = cos
end

transFront = sina((progress * rev) + offset) * parabola(1,1,radius) + noiseFront + distanceToImpactPos
transRight = cosa((progress * rev) + offset) * parabola(1,1,radius) + noiseRight
transAngle = (360 * progress) + ((rand1/rand3) * 360)
transMag = -1*parabola(1,1,radius/2)
scale = math.max(0.01,parabola(1,1,noiseScale+1.5))",0,2
3331,Long Spiral In - Many Spirals,"n = math.floor(rand1*2)*2-1

local r = rand2*.7+.3
local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 
local swingSpiral = 1

if progress < .333 then
    transFront = progress*distanceToFirePos*6
else
    --transFront = ((-cos(progressSpeed *2160))+startDistance*(1-progress))--*startDistance*math.pow(1-progressSpeed ,1)*.1
    transFront = ((-cos(progressSpeed *2160))*startDistance*math.pow(1-progressSpeed ,1)*.15*r+startDistance*(1-progress))--*startDistance*math.pow(1-progressSpeed ,1)*.1
end

transRight = sin(progressSpeed *2160)*startDistance*math.pow(1-progressSpeed ,1)*.15*n*r





local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t2 = (time+rand2)*30
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local factor = 3.81
transUp = progressMult*noise2*3*factor 
",0,1
3332,Blackhand - Demolision Missile,"
modelYaw = rand1 * 360
modelPitch = rand3 * 360

if missileIndex == 1 then
	transUp = 0.75
	scale = rand1 * .2 + .4 
elseif missileIndex == 2 then
	transUp = 5.5
	scale = rand1 * .2 + 0.4
elseif missileIndex == 3 then
	transUp = 6.8
	scale = rand1 * .2 + 0.48
elseif missileIndex == 4 then
	transUp = 2.5
	scale = rand1 * .2 + 0.6
elseif missileIndex == 5 then
	transUp = 3.5
	scale = rand1 * .2 + 0.5
elseif missileIndex == 6 then
	transUp = 7.4
	scale = rand1 * .2 + 0.4
end


transUp = transUp - (math.pow(progress,.5)) * 10 * rand2
transFront = 50 --cos ( rand3*360 ) * 50
transRight = 50 --sin ( rand3*360 ) * 50",0,7
3333,Paladin - Talent - Hand of Insight - Jump Visual,"local angle = -90
local maxMagnitude = startDistance * .2
local spinRate = 720

if rand1>0.5 then
    maxMagnitude = -1 * maxMagnitude 
end

modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3334,Sorcerer King - Force Nova,"local d = progress+10/91
local radius = (d * totalDistance)
local angle = (missileIndex / missileCount) * 360
transFront = (sin(angle) * radius) - distanceToFirePos
transRight = (cos(angle) * radius)
scale = math.max(0.001, d*(totalDistance*(5.5/35)))",0,8
3335,Test - Ken - Halo Override - KJD,"local offset = 10
local ratio = (5.5/35)
local radius = (progress * (totalDistance-offset)) + offset
local angle = (missileIndex / missileCount) * 360

transFront = (sin(angle) * radius) - distanceToFirePos
transRight = (cos(angle) * radius)

scale = (ratio * offset) + (progress * ratio * (totalDistance-offset))
scale = math.max(0.001,scale) --prevent scale from ever being 0",0,8
3336,Shaman - Talent - Spew Lava - Damage OLD,"local angle = 0
local maxMagnitude = math.max(10, math.pow(startDistance,1/3) * 5)

transAngle = angle
transMag = (math.pow(progress,2/3) * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3337,Parabola (Fixed Height - 3-5 yards) - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(height)",0,1
3338,"Parabola (Fixed Height - 3-5 yards, Fast Out) - KJD","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
3339,Auchindoun Dungeon 6.0 - Construct - Spawn Ribbon Missile - KJD,"local p = progress
local p2,ip2 = (p^2),1-(p^2)
local rand4,rand5,rand6 = (rand1/rand2),(rand2/rand3),(rand3/rand1)

local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function cosa(v) return sina(v+1.57079632) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(v,m) m=m or p return (4*v*(1-m)*m) end
local function clamp(v,min,max) min,max=min or 0,max or 1 return math.min(math.max(v,min),max) end
local function flip(v,b,c,x,y) if v<b then return x elseif v>c then return y else return x+(y-x)*v end end

local function varcurve(v,a,b,c,d,e) return ((((a*v-b)^c)+d)/e) end
local function pcurve(v,m) m=m or 1 return varcurve(v,m,1,3,1,1) end
local function scurve(v,m) m=m or 2 return clamp(varcurve(v,m,1,3,1,2)) end

local n1 = 300
local n2 = 5

local noiseFront	= parabola(noise(time+rand1*n1) * n2)
local noiseRight	= parabola(noise(time+rand3*n1) * n2)
local noiseUp		= parabola(noise(time+rand2*n1))

local d = 1	
if rand1-0.5>0 then d = -1 end
local rev = 1440
local radius = 10 * ip2

local forwardMotion = clamp(pcurve(progress,2.1)*totalDistance,0,totalDistance) - (distanceToFirePos)

local spinMotionRight = (cos(d * progress * rev) * radius)
local spinMotionFront = (sin(d * progress * rev) * radius)
 
transRight = parabola(spinMotionRight) + noiseRight
transFront = parabola(spinMotionFront) + noiseFront + forwardMotion + (ip2 * -15)-- + (p2 * -3)
transUp = parabola(-15 * (1-p)) + (ip2 * 0)",0,1
3340,Auchindoun Dungeon 6.0 - Summoner - Cosmetic Halo - KJD,"local offset = 0
local ratio = (5.5/35)
--local radius = (progress * (totalDistance-offset)) + offset
local radius = (progress * totalDistance)
local angle = (missileIndex / missileCount) * 360

transFront = (sin(angle) * radius) - distanceToFirePos
transRight = (cos(angle) * radius)

--scale = ratio * (offset + (progress * (totalDistance-offset)))
scale = ratio * (progress * totalDistance)
scale = math.max(0.001,scale)",0,8
3341,Stand Still,transFront = -distanceToFirePos,0,1
3342,Arrow,"transFront = 0-distanceToFirePos
faceImpactPos = 1",0,0
3343,Foundry Raid - Trains - Fan of Knives - KJD,"local p = progress
local p2,ip2 = (p^2),1-(p^2)
local rand4,rand5,rand6 = (rand1/rand2),(rand2/rand3),(rand3/rand1)

local function parabola(v,m) m=m or p return (4*v*(1-m)*m) end
local function clamp(v,min,max) min,max=min or 0,max or 1 return math.min(math.max(v,min),max) end
local function flip(v,b,c,x,y) if v<b then return x elseif v>c then return y else return x+(y-x)*v end end

local function varcurve(v,a,b,c,d,e) return ((((a*v-b)^c)+d)/e) end
local function pcurve(v,m) m=m or 1 return varcurve(v,m,1,3,1,1) end
local function scurve(v,m) m=m or 2 return clamp(varcurve(v,m,1,3,1,2)) end

local radius = p * totalDistance
local angle = (missileIndex * (720 / missileCount)) + (p * (720 / missileCount))

modelYaw = angle - (75 * (1-progress))
modelRoll = -90

if missileIndex > (missileCount/2) then
	radius = radius / 1.5
	scale = clamp(ip2,0.01,1)
	angle = angle + (360 / missileCount)
	modelYaw = modelYaw + (progress * 720)
end

transFront = (sin(angle) * radius) - distanceToFirePos
transRight = -(cos(angle) * radius)

faceImpactPos = 1
",0,20
3344,Nether Tempest Secondary,"local angle = 0
local maxMagnitude = startDistance * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,1
3347,Monk - Talent - Hurricane Strike - Damage Missile,"local radius = 10
transFront = radius * (1-progress) * math.cos(360*rand1) + distanceToImpactPos
transRight = radius * (1-progress) * math.sin(360*rand1)",0,1
3348,6.2 Hellfire Raid - Iron Reaver - Firebomb Rubble B - KJD,"modelPitch = 90
modelPitch = -10 + (20 * rand3) + modelPitch

modelRoll = -10 + (20 * rand1) 
modelRoll = sin(progress * 100) * modelRoll

modelYaw = -10 + (20 * rand2)
modelYaw = sin(progress * 100) * modelYaw

transUp = progress * 0.75
scale = 0.5 + ((1-progress)*(1/2))",0,1
3349,Shaman - Spew Lava - Damage,"local LOB_DISTANCE = 5
if distanceToFirePos < LOB_DISTANCE then
    transUp = 0.1 + 2 * sin(180 * distanceToFirePos/LOB_DISTANCE)
else
	transUp = 0.1
end

transRight = (1-progress) * rand1 * 3 * sin(10 * (rand2 + distanceToFirePos*rand3))
if rand1+rand2+rand3>1.5 then
	transRight = transRight * -1
end",0,0
3350,6.2 Hellfire Raid - Iron Reaver - Firebomb Rubble A - KJD,"modelPitch = 90
modelPitch = -10 + (20 * rand3) + modelPitch

modelRoll = (20 * rand1) - 10
modelRoll = sin(progress * 1000) * modelRoll

modelYaw = (20 * rand2) - 10
modelYaw = sin(progress * 1000) * modelYaw

transUp = progress * -0.5
scale = 0.25 + ((1-progress)* (3/4))",0,1
3351,6.2 Hellfire Raid - Siegeyard - Hellfire Round (Cos1b) - KJD,"local function parabola() return (progress * (1-progress) * 4) end
local maxMagnitude = startDistance * 0.15

transMag = maxMagnitude * parabola()
modelPitch = progress * 3 * 360
transUp = -1",0,1
3352,Highmaul Raid - Twins - Arcane Twisted - KJD,"local p,p2 = progress,progress^2
local function parabola(m) m=m or 1 return (m*4*p*(1-p)) end

local startAngle = 0
local degreesPerSec = 60
local maxRadius = 10
local minRadius = 2
local height = 5
local kickback = 5

local factor = 5
transFront = (p^factor) * distanceToFirePos --New forward motion
transFront = (-kickback * (3 * p) * (1-(p2))) + transFront --Kickback
transFront = transFront - distanceToFirePos --Subtract default motion

transAngle = startAngle + ((missileIndex / missileCount) * 360)
transAngle = transAngle + (time * (degreesPerSec + (4 * degreesPerSec * p2)))
transMag = 1 - ((parabola(p2) * maxRadius) + minRadius) --simplify magnitude

transUp = parabola(height) -- arc slightly upwards",0,7
3353,6.2 Hellfire Raid - Iron Reaver - Unstable Shot Fake Missile - K,"transFront = 5 * (1-progress)
transUp = 3 * (1-progress)

local function parabola(m) return 4 * m * (1 - progress) * progress end

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local progressMult = math.pow(sinapprox(progress*180)*(1-progress),1)

function noise(time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end

local t1 = (time+rand1*400)*10
local noise1 = noise(t1)

local t2 = (time+rand2*400)*10
local noise2 = noise(t2)

local t3 = (time+rand3*400)*10
local noise3 = noise(t3)

local factor = 40
transRight = parabola(progressMult*noise1*2*factor) + transRight
transUp = parabola(progressMult*noise2*1*factor) + transUp
transFront = parabola(progressMult*noise3*2*factor) + transFront",0,1
3354,6.2 Hellfire Raid - Siegeyard - Hellfire Round (MainA) - KJD,"local function parabola() return (progress * (1-progress) * 4) end
local maxMagnitude = startDistance * 0.15

transMag = maxMagnitude * parabola()
transUp = transUp + (-15 * parabola())",0,1
3355,7.0 Suramar Raid - Scorpion - LOS Blocker Spawn Missile - KJD,"transFront = -distanceToFirePos
scale = math.max(0.1,10 * progress)
modelPitch = -90
transUp = -3",0,1
3356,Long Spiral In (Stop the Flow: Soul Ribbons) - ELM,"local progressMult = sin(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,3) 

transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (0-distanceToFirePos)+(cos(progress*1440)+1)*startDistance*(1-progress)
transRight = sin(progress*1440)*startDistance*(1-progress)


local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time*.3+rand1)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time*.3+rand2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time*.3+rand3)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 3.81
transRight = transRight+progressMult*noise1*2*factor 
transUp = transUp+progressMult*noise2*3*factor 
transFront = transFront+progressMult*noise3*2*factor ",0,1
3357,Pitch Spin,"local spinRate = 720
modelPitch = time * spinRate",0,1
3358,Creature - Fallen Arakkoa - Hurl Weapon - Reverse,"local spinRate = 720
if time <= .5 then
   transFront=-distanceToFirePos
else
   transFront=1-(3.5-(time-.5))
end
modelPitch = time * spinRate",0,1
3359,Highmaul Raid - Twins - Throw Weapon - KJD,"local revolutions = 360 * 1 + 75
modelPitch = 0 + (revolutions * progress)
transUp = progress * 3",0,1
3361,Chaotic Missile Custom - CRT,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*6*factor 
transFront = progressMult*noise3*14*factor*(1-progress)



local progressMult = sin(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,3) 
transUp = (5*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult",0,5
3363,Goren Shrapnel - Lift and Launch - Left Side,"faceImpactPos = 1
local phaseTwoStart = .6
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = .5
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = .5*(1-p)
    
end

modelYaw = -(1-progress)*20-10

transRight = transRight-cos(rand1*180+90)*.25*(1 - p)
transFront = transFront+sin(rand1*180+90)*.5*(1 - p)
",0,0
3364,Goren Shrapnel - Lift and Launch - Right Side,"faceImpactPos = 1
local phaseTwoStart = .7
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = -.5
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
     
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = -.5*(1-p)
    
end

modelYaw = (1-progress)*20+10

transRight = transRight+cos(rand1*180+90)*.5*(1 - p)
transFront = transFront+sin(rand1*180+90)*.25*(1 - p)
",0,0
3365,"Fountain (Lower, Accellerate)","local angle = 0
local maxMagnitude = startDistance * .45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

speedScalar = .6*(progress+0.1) + .35
",0,7
3366,Parabola (Up and Left),"local angle = 65
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3367,"Parabola (Low, Up and Right)","local angle = -65
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3368,"Parabola (Low, Up and Left)","local angle = 65
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3369,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 1 ,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .11
local parabolicScalar = 1
local totalSpiralDegrees = 900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)
	transUp = (progress) * 4
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)
	transUp = (parabolaStart) * 4

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3370,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 2,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 4
local totalSpiralDegrees = 900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 2)
	transUp = (progress) * 3
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 2)
	transUp = (parabolaStart) * 3

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3371,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 3,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .4
local parabolicScalar = 4
local totalSpiralDegrees = 900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 2)
	transUp = (progress) * 4
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 2)
	transUp = (parabolaStart) * 4

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3372,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 4,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 3)
local parabolaStart = .2
local parabolicScalar = 2
local totalSpiralDegrees = 900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 2)
	transUp = (progress) * 2
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 2)
	transUp = (parabolaStart) * 2

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3373,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 5,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 3)
local parabolaStart = .2
local parabolicScalar = 3
local totalSpiralDegrees = -900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 2)
	transUp = (progress) * 2
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 2)
	transUp = (parabolaStart) * 2

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3374,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 6,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 6
local totalSpiralDegrees = -900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 2)
	transUp = (progress) * 3
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 2)
	transUp = (parabolaStart) * 3

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3375,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 7,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .4
local parabolicScalar = 4
local totalSpiralDegrees = -900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 2)
	transUp = (progress) * 4
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 2)
	transUp = (parabolaStart) * 4

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3376,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile 8,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 3)
local parabolaStart = .2
local parabolicScalar = 2
local totalSpiralDegrees = -900

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 2)
	transUp = (progress) * 2
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 2 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 2)
	transUp = (parabolaStart) * 2

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3377,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile X ,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolaStart = .9
local parabolicScalar = 5
local totalSpiralDegrees = 900

if progress <=  parabolaStart then
	transFront = (progress) * sin((rand1)* progress * totalSpiralDegrees) *  4 - distanceToFirePos
	transRight = (progress) * cos((rand2)* progress * totalSpiralDegrees) * ((1 - progress) * 4)
	transUp = (progress) * sin((rand3)* progress * totalSpiralDegrees)*((1 - progress) * 4)
end

if progress > parabolaStart then
	transFront = (progress) * sin((rand1)*parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = (progress) * cos((rand2)*parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)
	transUp = (parabolaStart) * sin((rand3)* progress * totalSpiralDegrees)*((1 - progress) * 4)

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola *  2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,3
3378,6.2 Hellfire Raid - Siegeyard - Hellfire Round (MainB) - KJD,"local function parabola() return (progress * (1-progress) * 4) end
local maxMagnitude = startDistance * 0.15

transMag = maxMagnitude * parabola()
transUp = 4.5
transUp = transUp + (-15 * parabola())
modelPitch = -90 + -45 + (90 * parabola())",0,1
3379,6.2 Hellfire Raid - Iron Reaver - Firebomb v2 Missile - KJD,"modelPitch = 90
--modelYaw = progress * 360
transUp = (startDistance * 0.1) * (4 * progress * (1-progress))",0,1
3380,6.2 Hellfire Raid - Iron Reaver - Parabola (Low) Shrink -KJD,"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1 + (2 * (1-progress))",0,1
3381,Creature - Iconic - Archmage Khadgar - Arcane Cyclone Missile Y,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolaStart = .8
local parabolicScalar = rand2*10
local totalSpiralDegrees = 7200

if progress <=  parabolaStart then
	transFront = progress * sin((rand1-.5)* progress * totalSpiralDegrees ) * 5 - distanceToFirePos
	transRight = (progress) * cos((rand1-.5)* progress * totalSpiralDegrees ) * 5
	transUp = progress *((rand3-.1)*5)
end

if progress > parabolaStart then
	transFront = progress * sin((rand1-.5)* parabolaStart * totalSpiralDegrees ) * 5  - distanceToFirePos
	transRight = (progress) * cos((rand1-.5)* parabolaStart * totalSpiralDegrees ) * 5
	transUp = parabolaStart *((rand3-.1)*5)

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

   	local p = progress - parabolaStart
   	p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


   	local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
   	transUp = transUp + (verticalParabola *  2)
	transRight = transRight + (rightSign * verticalParabola * 2)
end
",0,2
3382,Spires of Arak - Solar Storm - Impact,"	local DesiredHeight=10
	transFront=-distanceToFirePos
	transUp=progress*DesiredHeight
",0,0
3383,Blackrock Foundry - Oregorger the Devourer Boss - Blackrock Barr,"local radius = progress * 50

local anglePerMissile = 360 / (missileCount)
local curAngle = anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = ((sin(curAngle) * radius) * (rand2 +.25))- distanceToFirePos
transRight = -(cos(curAngle) * radius)

scale = 1
faceImpactPos = 1
modelYaw = curAngle-75

local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch = (progress -.40) * 90",0,16
3384,Iron Horde - Disengaging Mortar Missile,"local angle = 0
local maxMagnitude = startDistance * 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)",0,0
3385,Foundry Raid - Blast Furnace - Melt - Cover Missile,"local angle = 0
local maxMagnitude = startDistance * .75

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3386,Highmaul Raid - Minion Hurler - Mauling Brew 2. Missile,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3387,Foundry Raid - Iron Maidens - Warrior - Blood Ritual 3. Closest ,"modelPitch = 120
",0,0
3388,Broodmother Shard Salvo - Lift and Launch - Left Side,"faceImpactPos = 1
local phaseTwoStart = .6
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*5
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = 2
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*5
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = 2*(1-p)
    
end

modelYaw = -(1-progress)*20-10

transRight = transRight-cos(rand1*180+90)*.25*(1 - p)
transFront = transFront+sin(rand1*180+90)*2*(1 - p)
",0,0
3389,Broodmother Shard Salvo - Lift and Launch - Right Side,"faceImpactPos = 1
local phaseTwoStart = .7
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*5
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = -2
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*5
     
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = -2*(1-p)
    
end

modelYaw = (1-progress)*20+10

transRight = transRight+cos(rand1*180+90)*.5*(1 - p)
transFront = transFront+sin(rand1*180+90)*.25*(1 - p)
",0,0
3390,Foundry Raid - Trains - Siege Bomb Fire - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(value,min,max) return math.min(math.max(value,min),max) end
local function remap(value,min1,max1,min2,max2,func)
	value = (value - min1) / (max1 - min1)
	if func then value = func(value) end
	return (value * (max2 - min2)) + min2
end

local height = 5
height = height + remap(clamp(totalDistance,0,40),0,40,0,5)

transUp = parabola(height)
scale = 0.5 + (0.5 * (1-progress))",0,1
3391,Foundry Raid - Trains - Siege Bomb - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(value,min,max) return math.min(math.max(value,min),max) end
local function remap(value,min1,max1,min2,max2,func)
	value = (value - min1) / (max1 - min1)
	if func then value = func(value) end
	return (value * (max2 - min2)) + min2
end

local height = 5
height = height + remap(clamp(totalDistance,0,40),0,40,0,5)

transUp = parabola(height)
modelPitch = 360 * progress",0,1
3392,Tanaan Jungle Intro - Candle Flame,"local spread = 1+3*rand1

local startAngle = 360*rand2;
local degreesPerSec = 180+180*rand3

local flip = 1
if rand1+rand2+rand3<1.5 then
	flip = -1
end

degreesPerSec = degreesPerSec * flip

transAngle = startAngle + (time * degreesPerSec)
transMag = spread * progress * (1-progress);


-- Add Upward Arc
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * startDistance * .15

transFront = transFront + -distanceToFirePos * (1 - progress)",0,1
3393,Itano Circus/Macross Missiles,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 60

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 16
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor 

scale = 3 * (arcProg)",0,8
3394,"Drunken Missiles (1 Missile, Parabolic)","local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3395,Meteor Strike (10 Yards) Falls Straight Down + Rotate,"local magnitude = 10

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*720",0,1
3396,Engineering Missile Swarm - Itano Circus/Macross Missiles,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(40)
local maxAngle = math.rad(200)
local maxArc = 8

local p = math.pow(progress,6)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg * .8

local progressMult = math.pow( math.abs(math.sin(progress*math.rad(720)) * (1-progress)), .2)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 3
transRight = transRight + progressMult*noise1*2.5*factor 
ransUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*3*factor ",0,4
3397,Drunken Fountain (3 Missiles - Reverse) (Low),"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--transFront = distanceFromImpactPos* (1-progress)
--transFront = -distanceToFirePos * (1 - progress)
transFront = startDistance - 2 * distanceToFirePos 

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
3398,Chi Wave Low,"local angle = 0
local maxMagnitude = startDistance * .125

local waveHeight = .8
local wavesPerSec = 2*(0.5+rand1)

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = waveHeight * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,1
3399,Auchindoun Dungeon 6.0 - Intro - Nyami nukes Tuulani - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end

local degreesPerSec = 180
local maxMagnitude = 2.5
local p = progress

transAngle = ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = (2*p^2)-1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transUp = parabola(5)",0,5
3400,Hand of Gul'dan,"local magnitude = 2
faceImpactPos = 1

transUp    = magnitude * 12 * (1-progress)
transFront = magnitude * -2 * (1-progress) + distanceToImpactPos
transRight = magnitude *  3 * (1-progress)",0,1
3401,7.0 Helheim Dungeon - Utility - Non Hostile Aura Missile - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local noise1 = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 1
local noise2 = noise((time+rand2*4)*50) * (1-(math.pow(progress,2))) * 1
local noise3 = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1

local angle = (rand1*180)-90
local maxMagnitude = startDistance * (.25+(rand2/4))
local progressSpeed = math.pow(progress,3) 
local progressMult = sina(progress*180)*(1-progress)*2

--[[
transAngle = angle
speedOffset = (3*rand3) * (((1-progress)/2)+1)

local factor = 6

transMag = (math.pow((1-sin(progress* 90)),0.3+rand1/3) + 0.25) * progressMult
transRight = parabola(-(factor/2) + (factor * rand1)) + noise1
transFront = parabola(-(factor/2) + (factor * rand2)) + noise2
transUp = parabola(-(factor/2) + (factor * rand3)) + noise3

modelRoll = 1.5 * (rand1*rand2) * 360 * progress
--]]

transAngle = progress * (rand1 * 360) + (360 * 2)
transMag = parabola(1)",0,1
3402,Scene - Tanaan Jungle Intro - Draw Flame - PRK,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = 80*progress*(1-progress)*(1-progress)*(1-progress)
transFront = progressMult*noise3*14*factor*(1-progress)",0,3
3403,Foundry Raid - Blast Furnace - Fury Transition - Missiles - A,"local outerWheelSpinRate = 100 	-- 2 spin / sec
local outerWheelMag = 4			-- 4 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2
transRight = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2
",0,6
3404,Foundry Raid - Blast Furnace - Fury Transition - Missiles - B,"local outerWheelSpinRate = 100 	-- 2 spin / sec
local outerWheelMag = 4			-- 4 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2
transUp = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2
",0,6
3405,Foundry Raid - Blast Furnace - Fury Transition - Missiles - C,"local outerWheelSpinRate = 100	
local outerWheelMag = 4			
local missileAngle = outerWheelSpinRate * time


if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + (anglePerMissile * missileIndex)
end

--transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 5
--transUp = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 5
transAngle=missileAngle
transMag=outerWheelMag *(1 - progress) * 2

",0,5
3406,Tanaan Jungle Intro - Rune Missile,"local spread = 1+3*rand1

local startAngle = 360*rand2;
local degreesPerSec = 180+180*rand3

local runeRadius = 3



local flip = 1
if rand1+rand2+rand3<1.5 then
	flip = -1
end

degreesPerSec = degreesPerSec * flip

transAngle = startAngle + (time * degreesPerSec)
transMag = spread * progress * (1-progress);

-- Add Upward Arc
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * startDistance * .15

transFront = transFront + -distanceToFirePos * (1 - progress)

-- Add random start position on rune
local startRadius = runeRadius * math.sqrt(rand1)
transFront = transFront + startRadius*math.cos(startAngle)*(1-progress)
transRight = transRight + startRadius*math.sin(startAngle)*(1-progress)
",0,3
3407,Tanaan Jungle Intro - Portal Missile,"local spread = 1+3*rand1

local startAngle = 360*rand2;
local degreesPerSec = 180+180*rand3

local runeRadius = 3



local flip = 1
if rand1+rand2+rand3<1.5 then
	flip = -1
end

degreesPerSec = degreesPerSec * flip

transAngle = startAngle + (time * degreesPerSec)
transMag = spread * progress * (1-progress);

-- Add Upward Arc
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * startDistance * .15

transFront = transFront + -distanceToFirePos * (1 - progress)

-- Add random start position on portal
local startRadius = runeRadius * math.sqrt(rand1)
transUp = transUp + startRadius*math.cos(startAngle)*(1-progress)
transRight = transRight + startRadius*math.sin(startAngle)*(1-progress)
",0,4
3408,Foundry Raid - Blast Furnace - Fury Transition - Lava Splash,"--Likely not using...
local Offsets={
{ 0,1,1 },
{ 0,1,-1 },
{ 0,1,0 },
{ 0,-1,1 },
{ 0,-1,-1 },
{ 0,-1,0 },
{ 0,0,1 },
{ 0,0,-1 },
{ 0,0,0 },
{ 1,1,1 },
{ 1,1,-1 },
{ 1,1,0 },
{ 1,-1,1 },
{ 1,-1,-1 },
{ 1,-1,0 },
{ 1,0,1 },
{ 1,0,-1 },
{ 1,0,0 },
{ -1,1,1 },
{ -1,1,-1 },
{ -1,1,0 },
{ -1,-1,1 },
{ -1,-1,-1 },
{ -1,-1,0 },
{ -1,0,1 },
{ -1,0,-1 },
{ -1,0,0 }
}
local Scale=3

if missileIndex>0 then
	transFront=Offsets[missileIndex][1]*(time)*Scale
	transRight=Offsets[missileIndex][2]*(time)*Scale
	transUp=Offsets[missileIndex][3]*(time)*Scale
end
",0,27
3409,Vorka Cannonball (Karabor) - Orphan Version,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 100 --How high parabola
frontP = HorizontalSCurve(progress,1.25)
upP    = HorizontalSCurve(progress,1.25)
--transRight = -((1 - frontP) * 250) --Distance to start from dest
--transFront = -((1 - frontP) * 150) --Distance to start from dest
transUp    = (-1 *(parabolicFactor * (upP * upP))) + parabolicFactor",0,1
3410,Grow (1.5 -> 2.5),scale = 1.5 + (1.0 * progress),0,1
3411,6.2 Hellfire Raid - Siegeyard - Felfire Volley Missile - KJD,"local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 2 + (0.5 * missileIndex)


transRight = ((waveHeight * sin((time + (0.5 * missileIndex)) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2",0,2
3412,Incoming Iron Horde Capsule (Krull),"local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.max(0, 2.5*progress-1.5)

local t1 = (time+rand1)*140
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*140
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*140
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 0.15


local angle = 0
local maxMagnitude = startDistance * .2
local startSpinRate = 230
local spinRateStop = 2
faceImpactPos = 1


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude 
--transUp = progress*progress*0.2*( math.sin(progress * 150) + math.sin(progress * 103) )
--transRight = progress*progress*0.2*( math.sin(progress * 126) + math.sin(progress * 88) )
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*8*factor 
transFront = progressMult*noise3*14*factor 

modelPitch = 40+(time * startSpinRate * math.max(0, (1-progress/(2*spinRateStop))))
",0,1
3413,Blackrock Train Depot - Assault - Incoming Fire - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end

startDistance = math.max(math.min(startDistance,50),20)
local height = startDistance * 0.1
local variance = startDistance * 0.01
height = height + (rand1 * variance)

transUp = (parabola(height)/4)
scale = 0.5 + (0.5 * (1-progress))",0,1
3414,"Fountain (Very High, slow spin)","local angle = 0
local maxMagnitude = startDistance * 0.6
local spinRate = -260

modelPitch = time * spinRate


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--transFront = -distanceToFirePos * (1 - progress)
",0,1
3415,Foundry Raid - Shaman - Summon Fiery Orb - 03 Missile - MRN,"local function HorizontalSCurve(progress, exponent)
  local returnValue = 0
  if (exponent >= 2 or progress >= .5) then
     returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end
	return returnValue
end

local rate = 360
local totalDegrees = 490

local releaseTime = totalDegrees/rate

local parabolicScalar = 5
local function randSinCos1(value)
  if rand3 > .5 then
     return sin(value)
  else
     return cos(value)
  end
end

local function randSinCos2(value)
  if rand3 > .5 then
     return cos(value)
  else
     return sin(value)
  end
end

if rate*time <= totalDegrees then
  transFront = 5*(progress+.5)*randSinCos1(rate*time)-distanceToFirePos
  transRight = 5*(progress+.5)*randSinCos2(rate*time)
  transUp = .5+progress*2
else
  local speed =distanceToFirePos/time
  local tTime =totalDistance/speed
  local parabolaStart =releaseTime/tTime
  transFront = 5*(parabolaStart+.5)*randSinCos1(totalDegrees)-distanceToFirePos
  transRight = 5*(parabolaStart+.5)*randSinCos2(totalDegrees)
  transUp = .5 + (parabolaStart) * 2
  local p = progress-parabolaStart
  p = p/(1 - parabolaStart)
  p = HorizontalSCurve(p, 1.2)
  transRight = ((1-p)*transRight)
  transUp = ((1-p)*transUp)
  transFront = ((1-p)*transFront)
  local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
  transUp = transUp + (verticalParabola)
  transRight = transRight + (verticalParabola * 10)
  if rand3 < .5 then
     transRight = transRight * -1 
  end
end",0,0
3416,Grow (0 -> 1),scale = progress,0,1
3417,Grow (.2 -> 1),scale = .2+(.8*progress),0,1
3418,Creature - Hydra - Exploding Spit - Missile,"if progress < .5 then
	scale = .2+(.8*progress)
else
	scale = .2+(.8*progress)
	transUp= -6*((progress-.5))
end",0,1
3419,Itano Circus/Macross Missiles (1 Missile),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(80)
local maxAngle = math.rad(120)
local maxArc = 10

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 2
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor 

scale = 3 * (arcProg)",0,1
3420,"Blackrock Depot - Rocket Blossom (1 Missile, Left)","local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(40)
local maxAngle = math.rad(200)
local maxArc = 12

local p = math.pow(progress,8)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = math.rad((rand1 * 50) + 40)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( math.abs(math.sin(progress*math.rad(720)) * (1-progress)), .8)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 3
transRight = transRight + progressMult*noise1*2.5*factor 
ransUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*3*factor ",0,1
3421,"Blackrock Depot - Rocket Blossom (1 Missile, Right)","local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local maxArc = 12

local p = math.pow(progress,8)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = math.rad((rand1 * 40) + 90)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( math.abs(math.sin(progress*math.rad(720)) * (1-progress)), .8)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 3
transRight = transRight + progressMult*noise1*2.5*factor 
ransUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*3*factor 



",0,1
3422,"Grow (1 -> 10), Motionless on Target","transFront = distanceToImpactPos
scale = 1 + 9 * progress
faceImpactPos = 1",0,20
3423,Blackhand - Falling Debris Missile,"local magnitude = 50
modelYaw = rand1 * 360
modelPitch = rand3 * 360

if missileIndex == 1 then
	transUpAdd = 0.75
	scale = rand1 * .2 + .8 
elseif missileIndex == 2 then
	transUpAdd = 5.5
	scale = rand1 * .2 + 1.4
elseif missileIndex == 3 then
	transUpAdd = 6.8
	scale = rand1 * .2 + 0.88
elseif missileIndex == 4 then
	transUpAdd = 2.5
	scale = rand1 * .2 + 0.6
elseif missileIndex == 5 then
	transUpAdd = 3.5
	scale = rand1 * .2 + 0.5
elseif missileIndex == 6 then
	transUpAdd = 7.4
	scale = rand1 * .2 + 0.2
end


transUp = magnitude * ( 1 - progress ) + transUpAdd",0,6
3424,Talador 6.x - No'lash - Wild Arcana - 02 Missile - MRN,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end

local progressMult = math.pow( math.abs(math.sin(progress*math.rad(360)) * (1-progress)), .2)

local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 7
transRight = transRight + progressMult*noise1*2.5*factor 
ransUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*3*factor ",0,0
3425,Client Scene - Tanaan Jungle Intro - Khadgar - Front Orb - PRK,"local missileTime = 6
local riseTime = 1.5
local shotTime = .75
local upness = 5.6

local phaseOneStop = riseTime/missileTime
local phaseTwoStart = 1-shotTime/missileTime
local hoverHeight = 2
local frontOffset = 3

local p = progress - phaseTwoStart

if progress <= phaseOneStop then
    transFront = 0-distanceToFirePos+frontOffset*progress/phaseOneStop
    transUp = hoverHeight*progress/phaseOneStop
    
elseif progress <= phaseTwoStart then
	local waitTime = progress-phaseOneStop
	transFront = 0-distanceToFirePos+frontOffset*(phaseTwoStart-phaseOneStop-waitTime)/(phaseTwoStart-phaseOneStop)
	transUp = hoverHeight-upness*waitTime
	
else
    transFront = -distanceToFirePos
    p = p/(1 - phaseTwoStart)
    transFront = transFront * (1-p)
    transUp = hoverHeight * (1-p)
    local upnessDelta = -upness*(phaseTwoStart-phaseOneStop)
    transUp = transUp + upnessDelta * (1-p)
end

scale = 1+5*progress

--TURBULENCE
local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.max(0, 2.5*progress-1.5)

local t1 = (time+rand1)*140
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*140
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*140
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 0.15

transRight = transRight + progressMult*noise1*14*factor 
transUp = transUp + progressMult*noise2*8*factor 
transFront = transFront + progressMult*noise3*14*factor 

",0,0
3426,Client Scene - Tanaan Jungle Intro - Khadgar - Center Orb - PRK,"local missileTime = 7.5
local riseTime = 1.5
local shotTime = .75
local upness = 5.6

local phaseOneStop = riseTime/missileTime
local phaseTwoStart = 1-shotTime/missileTime
local hoverHeight = 2
local frontOffset = 0

local p = progress - phaseTwoStart

if progress <= phaseOneStop then
    transFront = 0-distanceToFirePos+frontOffset*progress/phaseOneStop
    transUp = hoverHeight*progress/phaseOneStop
    
elseif progress <= phaseTwoStart then
	local waitTime = progress-phaseOneStop
	transFront = 0-distanceToFirePos+frontOffset
	transUp = hoverHeight-upness*waitTime
	
else
    transFront = -distanceToFirePos
    p = p/(1 - phaseTwoStart)
    transFront = transFront * (1-p)
    transUp = hoverHeight * (1-p)
    local upnessDelta = -upness*(phaseTwoStart-phaseOneStop)
    transUp = transUp + upnessDelta * (1-p)
end

scale = 1+3*progress

--TURBULENCE
local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.max(0, 2.5*progress-1.5)

local t1 = (time+rand1)*140
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*140
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*140
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 0.15

transRight = transRight + progressMult*noise1*14*factor 
transUp = transUp + progressMult*noise2*8*factor 
transFront = transFront + progressMult*noise3*14*factor 

",0,0
3427,Client Scene - Tanaan Jungle Intro - Khadgar - Back Orb - PRK,"local missileTime = 9
local riseTime = 1.5
local idleTime = 3.0
local shotTime = .75
local upness = 5.6

local phaseOneStop = riseTime/missileTime
local phaseTwoStop = (riseTime+idleTime)/missileTime
local phaseThreeStop = 1-shotTime/missileTime
local hoverHeight = 2
local frontOffset = -3

local p = progress - phaseThreeStop

--Rising
if progress <= phaseOneStop then
    transFront = 0-distanceToFirePos+frontOffset*progress/phaseOneStop
    transUp = hoverHeight*progress/phaseOneStop

--Idling
elseif progress <= phaseTwoStop then
	local waitTime = progress-phaseOneStop
	transFront = 0-distanceToFirePos+frontOffset
	transUp = hoverHeight-upness*waitTime
--Joining    
elseif progress <= phaseThreeStop then
	local riseTime = progress-phaseOneStop
	local backTime = progress-phaseTwoStop
	transFront = 0-distanceToFirePos+frontOffset*(phaseThreeStop-phaseTwoStop-backTime)/(phaseThreeStop-phaseTwoStop)
	transUp = hoverHeight-upness*riseTime

--Shooting	
else
    transFront = -distanceToFirePos
    p = p/(1 - phaseThreeStop)
    transFront = transFront * (1-p)
    transUp = hoverHeight * (1-p)
    local upnessDelta = -upness*(phaseThreeStop-phaseOneStop)
    transUp = transUp + upnessDelta * (1-p)
end

scale = 1

--TURB.
local function sa(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.max(0, 2.5*progress-1.5)

local t1 = (time+rand1)*140
local noise1 = sa(t1)*sa(t1*3)*sa(t1*.54)*sa(t1*7)*sa(t1*12)*sa(t1*.5)

local t2 = (time+rand2)*140
local noise2 = sa(t2)*sa(t2*3)*sa(t2*.54)*sa(t2*7)*sa(t2*10)*sa(t2*.5)

local t3 = (time+rand3)*140
local noise3 = sa(t3)*sa(t3*3)*sa(t3*.54)*sa(t3*7)*sa(t3*10)*sa(t3*.5)

local factor = 0.15

transRight = transRight + progressMult*noise1*14*factor 
transUp = transUp + progressMult*noise2*8*factor 
transFront = transFront + progressMult*noise3*14*factor ",0,0
3428,Highmaul Raid - Earth Fury - Pale Shaman Add - Earthen Flechette,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end


local phaseTwoStart = .6 --+ math.min(((1 - (totalDistance/100)) * .3), .3)
progress = HorizontalSCurve(progress,5)
local p = progress - phaseTwoStart
local rightOffset
if (rand3 >= .5) then
   rightOffset = 2 + ((rand3 -.5) * 5)
else
   rightOffset = -2 - (rand3 * 5)
end

faceImpactPos=1
if progress <= phaseTwoStart then
    
    noise = .3 * (math.sin(1.25*math.pi * (HorizontalSCurve(progress, 1/5)/phaseTwoStart)))
    transUp = math.pow(progress,.3)*3 + (rand2 * 4) + noise
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = rightOffset
    
else
    
    transUp = math.pow(progress,.3)*3 + (rand2 * 4)
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
	modelPitch = ((phaseTwoStart-progress) /(1 - phaseTwoStart))*-45
    transRight = rightOffset *(1-p)
    
end

modelYaw = -(math.deg(math.atan2(rightOffset, startDistance)))
",0,0
3429,Grow (1 -> 4),"scale = 1 + (3.0 * math.pow(progress, 0.666))
speedOffset = (progress-0.1)*400
--speedScalar = 3*progress*progress--+0.5 --(progress+0.8)*(progress+0.8)",0,1
3430,"Lava Missile (1 Missile, Left)","local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(30)
local maxAngle = math.rad(-30)
local maxArc = 12

local p = math.pow(progress,8)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = math.rad(60 + (-60 * rand1))
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( math.abs(math.sin(progress*math.rad(720)) * (1-progress)), .8)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 3
transRight = transRight + progressMult*noise1*2.5*factor 
ransUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*3*factor ",0,1
3431,"Drunken Fountain (5 Missiles, Low)","local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,5
3432,Spires of Arak - Solar Zone - Missile Telegraph,"	local DesiredHeight=17
	transFront=-distanceToFirePos
	transUp=DesiredHeight-(progress*DesiredHeight+4)
	scale=progress*3
",0,0
3433,"Fountain (Even Lower, Accellerate)","local angle = 0
local maxMagnitude = startDistance * .25

if (progress <= 0.1) then
	transMag = (progress *2) - 1
elseif (progress > 0.1) then
	angle = 0
	
else
	angle = 0
end


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

speedScalar = .6*(progress+0.1) + .45
",0,7
3434,Meteor Strike (50 Yards) Right Side Diagonal Down,"local magnitude = 50

transRight = magnitude/-2 * (1-progress)
transUp = magnitude * ( .8 - progress )
transFront = distanceToImpactPos",0,1
3435,Doug Test Script,"--transRight = 5.0 * math.sin( 2 * math.pi * launchProgress )
--transUp = 5.0 * math.sin( 2 * math.pi * progress ) + 1.0 * math.sin( 4 * math.pi * launchProgress )

--transUp = 5.0 * math.sin( 2 * math.pi * progress )",0,1
3436,Druid - Stellar Flare A,"local offset = progress+rand1
local spins = 3+rand2

transRight = 3*cos(360*offset*spins) * (1-progress*progress)
transFront = 3*sin(360*offset*spins) * (1-progress*progress)



transFront = transFront + distanceToImpactPos
scale = progress",0,3
3437,Druid - Stellar Flare B,"local offset = progress+rand1
local spins = 3+rand2

transRight = 3*-cos(360*offset*spins) * (1-progress*progress)
transFront = 3*-sin(360*offset*spins) * (1-progress*progress)



transFront = transFront + distanceToImpactPos
scale = progress",0,3
3438,Druid - Stellar Flare C,transFront = distanceToImpactPos,0,3
3439,Forward Fast Spin + Parabola,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3440,Twin Wave - Converge,"
local waveHeight = 2.3
local wavesPerSec = 2.2

if (missileIndex == 0) then
transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)
end

if (missileIndex == 1) then
transRight = -waveHeight * (1-progress) * sin(time *wavesPerSec * 360)
end

local angle = 0
local maxMagnitude = startDistance * .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,2
3441,Sin Wave - Converge,"
local waveHeight = 1.2
local wavesPerSec = 1.6


transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

",0,1
3442,Creature - Hydra - Draenor - Earthquake - Cosmetic Ring,"local radius=(progress*15.1)
local curAngle=0
local anglePerMissile = 360/missileCount
curAngle=curAngle+anglePerMissile*missileIndex
transFront=(sin(curAngle)*radius)-distanceToFirePos
transRight=(cos(curAngle)*radius)
scale=math.max(0.001,progress*1.0)
",0,45
3443,Creature - Hydra - Draenor - Dirty Storm - Impact,"transFront=distanceToImpactPos
transUp=progress*10",0,1
3444,"Ring (1yd wide, 1yd tall, 1 Missile, Sin Curve Z motion) - MRN","
local radius = 1
local curAngle = progress * 1080

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
transUp = sin(720 * progress) * .25

",0,1
3445,Spiral + Spin (2 Missiles) (Gorgrond),"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 180

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate
",0,2
3446,Chakram at Target (Probably shouldn't use),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

if progress<=.5 then
    transRight = sin(progress*2*360)*5 
    transFront = 0-distanceToFirePos+(remap(progress,0,.5,0,.4)*totalDistance)
else
    transRight = -sin(progress*1*360)*10 
    transFront = 0-distanceToFirePos+(remap(progress,.5,1,.4,1)*totalDistance)
end
",0,1
3447,Grow (.5 -> 1),scale = .5+(.5*progress),0,1
3448,Creature - Arakkoa - Piercing Rush - Pre - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=missileIndex*.5
if missileIndex<5 then
	transFront=remap(missileIndex,1,5,.75,1.5)
else
	transFront=remap(missileIndex,5,12,2.2,5.5)
end
",0,7
3449,Spires of Arak - Piercing Rush - Pre - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=missileIndex*.5
if missileIndex<5 then
	transFront=remap(missileIndex,1,5,.75,1.5)
else
	transFront=remap(missileIndex,5,12,2.2,5.5)
end
",0,12
3450,Chakram 9 pattern - Start out Right,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

local FirstLeg=.3333333

if progress<FirstLeg then
	transRight = -sin(remap(progress,0,FirstLeg,0,180))*remap(progress,0,FirstLeg,startDistance/2,0)
    transFront = (startDistance*sin(remap(progress,0,FirstLeg,0,90))) - distanceToFirePos
else
	transRight = sin(remap(progress,FirstLeg,1,0,360))*remap(progress,FirstLeg,1,startDistance/2,startDistance/2)
    transFront = (startDistance)+(sin(remap(progress,FirstLeg,1,0,180))*startDistance)-distanceToFirePos
end",0,1
3451,Blackrock Train Depot - Bombing Run - Spinning Spear Trail - KJD,"local p,p2 = progress,progress^2
local function parabola(m) m=m or 1 return (m*4*p*(1-p)) end

local startAngle = 0
local degreesPerSec = 180

transAngle = startAngle + ((missileIndex / missileCount) * 360)
transAngle = transAngle + (time * (degreesPerSec + (4 * degreesPerSec * p2)))
local radius = 0.7
--transMag = math.max(0.01,math.min(parabola(radius)^2,radius))
transMag = radius
transFront = 2",0,2
3452,Grow (1 -> 15) and Accelerate,"scale = 1 + 14 * progress
speedScalar = 0.2 + 3 * progress",0,1
3453,Highmaul Raid - Trash - The Butcher - Boar's Rush - Charge,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=missileIndex*.75

if missileIndex<6 then
	transFront=remap(missileIndex,1,5,.5,1)
else
	transFront=remap(missileIndex,6,9,1,1.5)
end",0,9
3454,Overgrown Outpost - Boss 3 - Firebloom - Expanding Ring,"local radius=(progress*30.2)
local curAngle=0
local anglePerMissile = 360/missileCount
curAngle=curAngle+anglePerMissile*missileIndex
transFront=(sin(curAngle)*radius)-distanceToFirePos
transRight=(cos(curAngle)*radius)
scale=math.max(0.1,progress*.75)
",0,60
3455,Spires of Arak - Chakram - Four Winds - Missiles as Visual - CCW,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local function Rotate_XY(PassedX, PassedY, Theta)
	local x = (PassedX * cos(Theta)) - (PassedY * sin(Theta))
	local y = (PassedX * sin(Theta)) + (PassedY * cos(Theta))
	return x,y
end

local TotalRotation=108
local RotationPerTime=TotalRotation/13
local Rotation=RotationPerTime*(time-2)
--transMag=1/time
local TempX,TempY
transUp=1
missileIndex=missileIndex+1
missileCount=missileCount+1
if time < 2 then
	scale=remap(time,0,2,.1,4)
	if missileIndex<7 then
		TempX=(missileIndex*remap(time,0,2,1,5))
		TempY=(sin(TempX*.075*180/math.pi)*7.5)
	elseif missileIndex<13 then
		TempY=remap(missileIndex,7,12,1,6)*remap(time,0,2,1,5)
		TempX=sin(TempY*.075*180/math.pi)*-7.5
	elseif missileIndex<19 then
		TempX=remap(missileIndex,13,18,-1,-6)*remap(time,0,2,1,5)
		TempY=sin(TempX*.075*180/math.pi)*7.5
	else
		TempY=remap(missileIndex,19,24,-1,-6)*remap(time,0,2,1,5)
		TempX=sin(TempY*.075*180/math.pi)*-7.5
	end
	transFront,transRight=Rotate_XY(TempX,TempY,Rotation)
else
	scale=4
	if missileIndex<7 then
		TempX=(missileIndex*5)
		TempY=(sin(TempX*.075*180/math.pi)*7.5)
	elseif missileIndex<13 then
		TempY=remap(missileIndex,7,12,1,6)*5
		TempX=sin(TempY*.075*180/math.pi)*-7.5
	elseif missileIndex<19 then
		TempX=remap(missileIndex,13,18,-1,-6)*5
		TempY=sin(TempX*.075*180/math.pi)*7.5
	else
		TempY=remap(missileIndex,19,24,-1,-6)*5
		TempX=sin(TempY*.075*180/math.pi)*-7.5
	end
	transFront,transRight=Rotate_XY(TempX,TempY,Rotation)
end
modelYaw,modelPitch,modelRoll=0,0,0
	",0,24
3456,Spires of Arak - Chakram - Four Winds - Missiles as Visual - CW,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local function Rotate_XY(PassedX, PassedY, Theta)
	local x = (PassedX * cos(Theta)) - (PassedY * sin(Theta))
	local y = (PassedX * sin(Theta)) + (PassedY * cos(Theta))
	return x,y
end

local TotalRotation=-108
local RotationPerTime=TotalRotation/13
local Rotation=RotationPerTime*(time-1)
--transMag=1/time
local TempX,TempY
transUp=1
missileIndex=missileIndex+1
missileCount=missileCount+1
if time < 2 then
	scale=remap(time,0,2,.1,4)
	if missileIndex<7 then
		TempX=(missileIndex*remap(time,0,2,1,5))
		TempY=-(sin(TempX*.075*180/math.pi)*7.5)
	elseif missileIndex<13 then
		TempY=remap(missileIndex,7,12,1,6)*remap(time,0,2,1,5)
		TempX=-sin(TempY*.075*180/math.pi)*-7.5
	elseif missileIndex<19 then
		TempX=remap(missileIndex,13,18,-1,-6)*remap(time,0,2,1,5)
		TempY=-sin(TempX*.075*180/math.pi)*7.5
	else
		TempY=remap(missileIndex,19,24,-1,-6)*remap(time,0,2,1,5)
		TempX=-sin(TempY*.075*180/math.pi)*-7.5
	end
	transFront,transRight=Rotate_XY(TempX,TempY,Rotation)
else
	scale=4
	if missileIndex<7 then
		TempX=(missileIndex*5)
		TempY=-(sin(TempX*.075*180/math.pi)*7.5)
	elseif missileIndex<13 then
		TempY=remap(missileIndex,7,12,1,6)*5
		TempX=-sin(TempY*.075*180/math.pi)*-7.5
	elseif missileIndex<19 then
		TempX=remap(missileIndex,13,18,-1,-6)*5
		TempY=-sin(TempX*.075*180/math.pi)*7.5
	else
		TempY=remap(missileIndex,19,24,-1,-6)*5
		TempX=-sin(TempY*.075*180/math.pi)*-7.5
	end
	transFront,transRight=Rotate_XY(TempX,TempY,Rotation)
end
modelYaw,modelPitch,modelRoll=0,0,0
	",0,24
3457,Auchindoun Dungeon 6.0 - Summoner - Soul Vessel New - KJD,"local p,p2 = progress,progress^2
local angle = 360 * (1-p)
local radius_min = 6
local radius_max = startDistance - radius_min
local startAngle = ((missileIndex / missileCount) * 360)

transFront = (sin((progress*angle)+startAngle))
transRight = -(cos((progress*angle)+startAngle))

transFront = transFront * ((progress * radius_max) + radius_min)
transRight = transRight * ((progress * radius_max) + radius_min)

transFront = transFront - distanceToFirePos

modelRoll = p * angle * 6
scale = 0.5
transUp = progress * 10",0,10
3458,Overgrown Outpost - Boss 3 - Firebloom - Missile,"

transUp=15*sin(progress*180)",0,0
3459,Test - Ken - Arcane Missile - KJD,"local factor = 3
local maxWidth = 1

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

scale = math.max(math.pow(progress,factor*2),progress)",0,4
3460,Arcane Missiles (New),"local factor = 1.25
local maxWidth = 1

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

--scale = math.max(math.pow(progress,factor*2),progress)",0,4
3461,Highmaul Raid - Void Storm,"local magnitude = 25

transRight = magnitude/-2 * (1-progress)
transUp = magnitude * ( .8 - progress )
transFront = distanceToImpactPos",0,1
3462,Highmaul Raid - Void Storm (Player Version),"local magnitude = 50

transUp = magnitude * ( 1 - progress )
",0,1
3463,Creature - Nightmaw - Low Pounce - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=missileIndex*.5
if missileIndex<5 then
	transFront=remap(missileIndex,1,5,.75,1.5)
else
	transFront=remap(missileIndex,5,12,2.2,5.5)
end
",0,6
3464,"Parabola (-90 Pitch, Fixed Height 15 yards)","local angle = 0
local maxMagnitude = 15
modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3465,Spiral + Parabola (High),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = 1
local wavesPerSec = 2
local angle = 0
local maxMagnitude = startDistance * .50
local spinRate = math.max(360*startDistance/10,180)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (sin(progress*180)*3)*sin(progress*spinRate)
transUp = (sin(progress*180)*3)*cos(progress*spinRate)
",0,1
3466,Iron Docks - Warsong - Shrapnel Blast - RJH,"-- creates a shotgun spray of missiles for use in cone spells
-- the missiles will have some randomness to their spread and speed
-- this version contains special logic for dread spray that allows the missiles near the edges
-- of the cone to stop in midair at some fixed distance to simulate hitting a wall

local wallDist = 3.56					-- in yards
local targetDist = 7					-- in yards
local spreadAmt = 3.2     				-- max distance two missiles can be from each other (correlates to spread angle)
local percentWall = 0.12				-- the percent of the cone spread that should travel the full targetDist (0-1)
local spreadRND = (rand2 - 0.5) / 1	-- how much randomness to add to the each missile's angle
local offsetLeft = .4					-- distance to move the missile impact points left (allows fine tuning of cone direction)

local spread = (-0.5 + (missileIndex / missileCount) + spreadRND) * (spreadAmt * 2)
transRight = progress * (spread + offsetLeft)

if (math.abs(spread + offsetLeft) > (percentWall * spreadAmt)) and (progress >= (wallDist/targetDist)) then
	transFront = (-targetDist * progress) + wallDist
	transRight = (wallDist/targetDist) * (spread + offsetLeft)
end

speedOffset = 1 + missileIndex * 2

--21
--0.6",0,10
3467,Highmaul Raid - Boss - Kargath Bladefist - Blade Fist Amputation,"local angle = 0
local maxMagnitude = startDistance * .6
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 90
",0,1
3468,Creature - Rukhmar - Loose Quills - Missile,"transFront=distanceToImpactPos

modelPitch=cos((progress*720)+90)*180/math.pi
transUp=15*cos(progress*90)
transRight=math.min(5*sin(progress*720),5)
",0,0
3469,Frost Mage T17 4P Missile Effect,"local magnitude = 4

--make a half sphere above the target ~ 4 yards out that converges on the center

--math is hard",0,12
3470,Spiral (Tight) + Parabola (High),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = 1
local wavesPerSec = 2
local angle = 0
local maxMagnitude = startDistance * .50
local spinRate = math.max(360*startDistance/10,180)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (sin(progress*180)*.5)*sin(progress*spinRate)
transUp = (sin(progress*180)*.5)*cos(progress*spinRate)
",0,1
3471,"Parabola (Pitch Spin Fast, High)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 1080

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3472,Talador - Shattrath Solo - Soul Crusher Death - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 1
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1

local radius = progress * startDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1*anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) + noiseFront
transRight = -(cos(curAngle) * radius) + noiseRight
transFront = transFront - distanceToFirePos

scale = math.max(0.1,progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,5
3473,Talador - Shattrath Solo - Soul Crystal Death - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 1
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1

local radius = progress * startDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1 * anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) + noiseFront
transRight = -(cos(curAngle) * radius) + noiseRight
transFront = transFront - distanceToFirePos

scale = math.max(0.1,progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,2
3474,Boomerang (Arc Right),"local angle = 270
local maxMagnitude = startDistance * .2
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3475,Khadgar's Orb Bat (Right),"local angle = 315
local maxMagnitude = startDistance * .2
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3476,Khadgar's Orb Bat (Left),"local angle = 45
local maxMagnitude = startDistance * .2
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3477,Gorgrond 6.0 - Gronn Boulder Throw (RKS),"local angle = 0
local maxMagnitude = startDistance * .20
local spinRate = -200
local yawRate = 45
local rollRate = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelYaw = time * yawRate
modelRoll = time * rollRate",0,1
3478,Forward Spin + Parabola (Low),"local angle = 0
local maxMagnitude = startDistance * .10
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3479,Talador - Shattrath Area - Draw Soul Missile - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 1
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1

transAngle = angle
local rev = 180
local radius = parabola(startDistance / 10)

transRight = sin(progress * rev) * radius * math.pow(1 - progress,0.7) * 0.5 + noiseRight
transUp = parabola(1)
transFront = (-cos(progress * rev) + 1) * radius * math.pow(1 - progress,0.7) * 0.5 + noiseFront
scale = math.max(0.05,parabola(1))
modelYaw = progress * 720",0,1
3480,Talador - Shattrath Solo - Soul Eater Draw Soul Missile - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 1
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1

transAngle = angle
local rev = 180
local radius = parabola(startDistance / 10)

transRight = sin(progress * rev) * radius * math.pow(1 - progress,0.7) * 0.5 + noiseRight
local up = math.max(40 - (startDistance / 10),10)
transUp = parabola(up)
transFront = (-cos(progress * rev) + 1) * radius * math.pow(1 - progress,0.7) * 0.5 + noiseFront
scale = math.max(0.05,parabola(3))
modelYaw = progress * 360 * 10",0,1
3481,Talador - Shattrath Solo - Expel Souls Cosmetic Missile - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

transAngle = angle
local noiseFront = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 1
local noiseRight = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1

transAngle = angle
local rev = 180
local radius = parabola(startDistance / 10)

transRight = sin(progress * rev) * radius * math.pow(1 - progress,0.7) * 0.5 + noiseRight
transUp = parabola(1)
transFront = (-cos(progress * rev) + 1) * radius * math.pow(1 - progress,0.7) * 0.5 + noiseFront
scale = math.max(0.05,progress * 3)
modelYaw = progress * 360 * 10",0,1
3482,"Parabola (Very High, Slight Back Spin)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = -45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3483,7.0 Helheim Dungeon - Ferryman - Fragment Missile - KJD,"local r1 = rand1*2-1
local r2 = rand2*2-1
local function parabola() return (progress * (1-progress) * 4) end

progress = progress*progress
local factor = 1

transRight = parabola() * parabola() * (math.sin(progress*3.14) * factor * r1 + (rand3*2-1))
transUp = parabola() * parabola() * (math.sin(progress*3.14) * factor * r2 + (rand2))
transFront = (rand3*20-10)*(1-progress)*progress

scale = math.max(0.1,parabola())",0,2
3484,Fast Out - Hook Left or Right With Parabola - KJD,"local factor = 3
local maxWidth = 5
local direction = 1
local height = startDistance / 5

if rand1>0.5 then
	direction = -1
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * rand2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = (4 * progress * (1-progress)) * height	--parabolic curve (gamma) * height",0,1
3485,"Parabola (Fast in/out, low)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
 
local parabolicFactor = startDistance*.4
local frontP = HorizontalSCurve(progress,1.2)
local upP    = HorizontalSCurve(progress,1.2)
--if progress < .2 then modelPitch = -20 end
--transFront = (progress * startDistance ) - distanceToFirePos

transFront = (frontP * startDistance ) - distanceToFirePos
local counteract = -.095*transFront
transUp    = counteract + (-1 * (parabolicFactor * (upP * upP ) )) + (upP * parabolicFactor) ",0,1
3486,"Parabola (Fast in/out, low) MRN - TEST","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
 
local parabolicFactor = startDistance*1.25
local frontP = HorizontalSCurve(progress,1.25)
local upP    = HorizontalSCurve(progress,1.25)
--if progress < .2 then modelPitch = -20 end
--transFront = (progress * startDistance ) - distanceToFirePos

transFront = (frontP * startDistance ) - distanceToFirePos
local counteract = -.095*transFront
transUp    = counteract + (-1 * (parabolicFactor * (upP * upP ) )) + (upP * parabolicFactor) ",0,1
3487,Wheeling Missiles,"local outerWheelSpinRate = 360
local outerWheelMag = 2

local p 
if progress > .5 then
   p = (1 - progress)* 2
else
   p = progress * 2
end

local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transUp = outerWheelMag * math.sqrt(p) * cos ( missileAngle )
transRight = outerWheelMag * math.sqrt(p) * sin ( missileAngle )
transFront = -distanceToFirePos + ( (progress * progress) * (distanceToFirePos))",0,3
3488,Spiral (Loose) + Parabola (High),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = 1
local wavesPerSec = 2
local angle = 0
local maxMagnitude = startDistance * .50
local spinRate = math.max(360*startDistance/10,180)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (sin(progress*180))*sin(progress*spinRate)
transUp = (sin(progress*180))*cos(progress*spinRate)
",0,1
3489,Twin Wave - Converge - No Wave Height,"
local waveHeight = 3.3
local wavesPerSec = 2.2
progress = progress*progress
if (missileIndex == 0) then
transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)
--transUp = (waveHeight/2) * (1-progress) * sin(time * wavesPerSec * 360)
end

if (missileIndex == 1) then
transRight = -waveHeight * (1-progress) * sin(time *wavesPerSec * 360)
--transUp = (-waveHeight/2) * (1-progress) * sin(time * wavesPerSec * 360)
end
",0,2
3490,Creature - Arakkoa - Throw - Left,"transRight = -sin(progress*(startDistance*9))*(startDistance*.25)*(1-progress)
transUp = sin(progress*(startDistance*13.5))*(startDistance*.05)*(1-progress)",0,1
3491,Creature - Arakkoa - Throw - Right,"transRight = sin(progress*(startDistance*9))*(startDistance*.25)*(1-progress)
transUp = sin(progress*(startDistance*13.5))*(startDistance*.05)*(1-progress)",0,1
3492,Itano Circus/Macross Missiles (6missiles),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 60

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 16
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor ",0,6
3493,Auchindoun Dungeon 6.0 - Construct - Holy Shield Return - KJD,"local p2 = progress^3
local phase2 = 0.75
local function parabola(m) return (4*m*(1-p2)*p2) end
local maxUp = 30

local startYaw = 90	--	115
local startPitch = 0	--	180
local startRoll = 0	--	-180


transFront = distanceToImpactPos
transUp = 5

if progress < phase2 then
	modelYaw = startYaw
	modelPitch = startPitch
	modelRoll = startRoll
else
    progress = (progress - phase2)/(1 - phase2)
	--transUp = parabola(maxUp) + (progress * 5)
	--transRight = -(progress * 0.5)

	local frontOffset = 7.5
	if startDistance < 10 then
		frontOffset = 2
	end
	transFront = transFront - (progress * (startDistance - frontOffset))
	transUp = transUp + (progress * 4)
	transRight = transRight + (progress * 3)

	modelYaw = startYaw
	modelPitch = startPitch
	modelRoll = startRoll + (progress * -110)
end

faceImpactPos = 1
scale = 1",0,1
3494,Chakram - Swirl Into Target (Clockwise),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transFront=(-cos(1080*progress)*startDistance*(1-progress))+(startDistance*(1-progress))
transRight=sin(1080*progress)*(startDistance/2)*(1-progress)",0,1
3495,Chakram - Swirl Into Target (Counter-Clockwise),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transFront=(-cos(1080*progress)*startDistance*(1-progress))+(startDistance*(1-progress))
transRight=-sin(1080*progress)*(startDistance/2)*(1-progress)",0,1
3496,Overgrown Outpost - Trash - Boss 3 - Glowbulb Pollen,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transFront=1*sin(progress*1080)*(1-progress)
transUp=1*cos(progress*1080)*(1-progress)
transRight=2*sin(progress*540)
",0,1
3497,Shaman - Molten Earth,"faceImpactPos = 1
--local phaseTwoStart = .7
--local p = progress - phaseTwoStart

if launchProgress < 1 then
    transFront = 2 * (1 - sin(launchProgress*90))
    transUp    = 2 * math.pow(launchProgress, 0.3)
    modelPitch = 45 * (1-launchProgress)
    transRight = -2.5
else
    transFront = 0
    transUp    = 2 * (1-progress)
    modelPitch = 0
    transRight = -2.5 * (1-progress)
end



transRight = transRight + (1 - progress) * 2 * cos(rand1*180+90)
transFront = transFront + (1 - progress) * 2 * sin(rand1*180+90)

		                      --YAY MATH
modelYaw = 90 - atan( (startDistance - 2 * sin(rand1*180+90))
		   			  / (2.5 - 2 * cos(rand1*180+90)) ) 

-- -- (1-progress)*((45-startDistance)+10)


if rand2 > 0.5 then
	transRight = -1 * transRight
	modelYaw = -1 * modelYaw
end
",0,0
3498,Shadow Council 6.0 - Soul Eater - Soul Funnel Missile - KJD,"local p,p2 = progress,progress^1.25
local psq = progress^(1/2)
local function parabola(m) m=m or 1 return (m*4*p*(1-p)) end

local startAngle = 0
local degreesPerSec = 180

transAngle = startAngle + ((missileIndex / missileCount) * 360)
transAngle = transAngle + (time * (degreesPerSec + (2 * degreesPerSec * p)))
local radius = (psq * 2)
transMag = radius
transFront = 1 + (p * 1)
transUp = -0.5 * (1-p)
modelRoll = p * 360 * 1
scale = math.max(0.05,parabola(p2))",0,3
3499,Death Knight T17 Frost 4P,"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
scale = progress*3",0,1
3500,Death Knight T17 Frost 4P Steal Soul,"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
scale = progress-1",0,1
3501,Warlock - Incinerate,"local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1.4 * (.8 + (.4 * rand2))


transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
",0,0
3502,Overgrown Outpost - Boss 3 - Post Encounter RP - PyroBarrage,"scale = 0.5 + (2.0 * progress)
local MissileRandoms= { rand1, rand2, rand3, rand1, rand2+rand3, rand1+rand2, rand1+rand3, rand2+rand3 }
transAngle=(missileIndex*360/missileCount)+math.random(-15,15)
transMag=(progress*5)+(MissileRandoms[missileIndex+1]*sin(progress*90))
transFront=6*sin(progress*90)",0,8
3503,"Multi-Shot (7 Missiles, Rolling, Tight, Drunken, Grow x5)","-- spread out as the missiles travel
local outerWheelMag =  progress / 3
local missileAngle


local maxMagnitude = 1.0
local minSpeedScalar = .8
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = (1 - (magnitude * magnitude * magnitude * magnitude)) / 3

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)


if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

modelRoll = (missileIndex + 2) * progress * 360

transMag = outerWheelMag

scale = 5 * progress",0,7
3504,Spires of Arak: Sethe - Shadow Strikes - Missile,"local ReversalMultiplier_A=1.5
local ReversalMultiplier_B=1.5
if rand1 < .5 then ReversalMultiplier_A=ReversalMultiplier_A*-1 end
if rand2 < .5 then ReversalMultiplier_B=ReversalMultiplier_B*-1 end
transRight=(missileIndex+1)*ReversalMultiplier_A*sin(progress*360)*(1-progress)
transUp=(missileIndex+1)*ReversalMultiplier_B*sin(progress*360)*(1-progress)",0,5
3505,Spires of Arak: Sethe - Sonic Strikes - Missile,"local MissileOffsets={ -5,0,5 }
transRight=sin(progress*135)*MissileOffsets[missileIndex+1]
transUp=sin(progress*360)*MissileOffsets[missileIndex+1]
",0,3
3506,Shadowmoon POI - Coalesce the Void - CCW - MRN,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 10
local totalSpiralDegrees = 900

modelRoll = 1080*progress*3

if progress <=  parabolaStart then
	transFront = (sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos) * 1
	transRight = (cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)) * -1
	transUp = (progress) * 10
end

if progress > parabolaStart then
	transFront = (sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos)  * 1
	transRight = (cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)) * -1
	transUp = (parabolaStart) * 10

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3507,Shadowmoon POI - Coalesce the Void - MRN,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 10
local totalSpiralDegrees = 900

modelRoll = 1080*progress*3

if progress <=  parabolaStart then
	transFront = sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)
	transUp = (progress) * 10
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)
	transUp = (parabolaStart) * 10

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3508,Snake Firework,"local waveHeight = .5
local wavesPerSec = 0.5

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
3509,Goren - Missile - Left Side,"faceImpactPos = 1
local phaseTwoStart = .6
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = 3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = 3*(1-p)
    
end

modelYaw = -(1-progress)*20-10

transRight = transRight-cos(rand1*180+90)*2*(1 - p)
transFront = transFront+sin(rand1*180+90)*2*(1 - p)
",0,0
3510,Goren - Missile - Right Side,"faceImpactPos = 1
local phaseTwoStart = .7
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = -3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
     
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = -3*(1-p)
    
end

modelYaw = (1-progress)*20+10

transRight = transRight+cos(rand1*180+90)*2*(1 - p)
transFront = transFront+sin(rand1*180+90)*2*(1 - p)
",0,0
3511,Spiral Tight to Loose to Tight Again,"transRight=sin(progress*180)*sin(progress*360)*1.5
transUp=sin(progress*180)*cos(progress*360)*1.5
",0,1
3512,Highmaul Raid - Earth Fury - Trash - Cosmetic Spell,"local waveHeight = 4
local wavesPerSec = 1.6 * (.8 + (.4 * rand2))


transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * (1-progress) * 2
",0,0
3513,Higmaul Raid - Earth Fury - Trash - Shaman 1 - Stonebolt Volley,"faceImpactPos = 1
--local phaseTwoStart = .7
--local p = progress - phaseTwoStart

if launchProgress < 1 then
    transFront = 2 * (1 - sin(launchProgress*90))
    transUp    = 2 * math.pow(launchProgress, 0.3)
    modelPitch = 45 * (1-launchProgress)
    transRight = -2.5
else
    transFront = 0
    transUp    = 2 * (1-progress)
    modelPitch = 0
    transRight = -2.5 * (1-progress)
end



transRight = transRight + (1 - progress) * 2 * cos(rand1*180+90)
transFront = transFront + (1 - progress) * 2 * sin(rand1*180+90)

		                      --YAY MATH
modelYaw = 90 - atan( (startDistance - 2 * sin(rand1*180+90))
		   			  / (2.5 - 2 * cos(rand1*180+90)) ) 

-- -- (1-progress)*((45-startDistance)+10)


if rand2 > 0.5 then
	transRight = -1 * transRight
	modelYaw = -1 * modelYaw
end
",0,0
3514,Talador - Crystal Rager - Crystalline Burst Orphan Missile - KJD,"--modelPitch = -90
local phase2 = 0.3

if progress < phase2 then
	progress = (progress)/(phase2)
	transUp = progress * 10
else
    progress = (progress - phase2)/(1 - phase2)
	transUp = 10
end",0,0
3515,Highmaul Raid - Earth Fury - Trash - Meteor,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 200 --How high parabola
frontP = math.pow(progress,3)
upP    = math.pow(progress,3)
modelPitch = 120
--transRight = -((1 - frontP) * 250) --Distance to start from dest
transFront = -((1 - frontP) * 300) --Distance to start from dest
transUp    = (-1 *(parabolicFactor * (upP * upP))) + parabolicFactor",0,1
3516,Lunar Shower,"local angle = 180
local maxMagnitude = startDistance * .3


transAngle = angle
transMag = ((progress * 2) - 1)
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,0
3517,Overgrown Outpost - Boss 3 - Spore Image,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local Direction=math.pow(-1,missileIndex)
local waveHeight = 1
local wavesPerSec = 2
local angle = 0
local maxMagnitude = 12--startDistance * .50
local spinRate = 360*6


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (sin(progress*180)*4)*sin(progress*spinRate) * Direction *(1-progress)
transUp = (sin(progress*180)*4)*cos(progress*spinRate) * Direction *(1-progress)
",0,2
3518,Spires of Arak - Venombarb - Firestorm - Missile - Fire,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transUp=sin(progress*180)*startDistance*3/5
transRight=sin(progress*720)*(1-progress)*startDistance/5",0,1
3519,Spires of Arak - Venombarb - Firestorm - Missile - Nature,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transUp=sin(progress*180)*startDistance*3/5
transRight=-sin(progress*720)*(1-progress)*startDistance/5",0,1
3520,"Parabola (Fast in/out, Mid)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 2*distanceToFirePos
frontP = HorizontalSCurve(progress,1.2)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)",0,1
3521,Spinning Scroll (DGK),"local spinRate = 720

modelYaw = 90
modelRoll = time * spinRate",0,1
3522,Talador - Vignette - Glimmerwing - MRN,"local maxSpread = 7

transAngle = 360 * rand1
transMag = progress * rand2 * maxSpread


transFront = (progress * startDistance) - distanceToFirePos",0,10
3523,Burning Blade - Azuka - Sword Missile - MRN,"faceImpactPos = 1

if launchProgress < 1 then
	transFront = 1 + (rand1 * 1.5) 
	transUp    = 5 * math.pow(launchProgress, 0.3)
	transRight = rand2 * 1 * math.pow(launchProgress, 0.3)
else
	transFront = (1 + (rand1 * 1.5)) * (1-progress)
	transUp    = 5 * (1-progress)
	modelPitch = 0
	transRight = rand2 * 1 * (1-progress)
end

if rand2 > 0.5 then
	transRight = -1 * transRight
end

",0,0
3524,Foundry Raid - Iron Maidens - Warrior Maiden - Bloodsoaked Heart,"local revolutions = 6
local theta = -360 + (720 * rand2) * revolutions  
local phi = 180 * (.25 + (rand1 * .5)) * revolutions
local radius = 1.5 + rand2

if rand3 > rand2 then
	phi = -phi
end
	
if launchProgress < 1 then
	launchProgress = launchProgress^2
	
	local curTheta = theta
	local curPhi = phi
	
	if rand3 >.5 then 
		curTheta = theta * launchProgress
	else 
		curPhi =  phi * launchProgress * 2
	end
	
	transUp = 		4 + (radius * cos(curTheta))
	transRight = 	radius * sin(curTheta) * cos(curPhi)
	transFront = 	radius * sin(curTheta) * sin(curPhi) 
	
else
	radius = radius * (1-progress^2)
	transUp = 		4 * (1-(progress^2))
	transUp = 		transUp + radius * cos(theta)
	transRight = 	radius * sin(theta) * cos(phi)
	transFront = 	radius * sin(theta) * sin(phi)
end",0,0
3525,Sorcerer King - Rune Missile,"

--[[local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.5]]
",0,1
3526,Foundry Raid - Iron Maidens - Warrior Maiden - Real Bloodbolt,"local revolutions = 2
local theta = -360 + (720 * rand2) * revolutions  
local phi = 180 * (.25 + (rand1 * .5)) * revolutions
local radius = 1.5 + rand2

if rand3 > rand2 then
	phi = -phi
end
	
if launchProgress < 1 then
	launchProgress = launchProgress^1.5
	
	local curTheta = theta
	local curPhi = phi
	
	if rand3 >.5 then 
		curTheta = theta * launchProgress
	else 
		curPhi =  phi * launchProgress * 2
	end
	
	transUp = 		4 + (radius * cos(curTheta))
	transRight = 	radius * sin(curTheta) * cos(curPhi)
	transFront = 	radius * sin(curTheta) * sin(curPhi) 
	
else
	radius = radius * (1-progress^2)
	transUp = 		4 * (1-(progress^2))
	transUp = 		transUp + radius * cos(theta)
	transRight = 	radius * sin(theta) * cos(phi)
	transFront = 	radius * sin(theta) * sin(phi)
end",0,0
3527,Meteor Strike (Rain),"local magnitude = 15

transUp = magnitude * ( 1 - progress )
faceImpactPos = 1
transRight = (sin((rand1 * 1000) + (time * 100)) + cos((rand2 * 1000) + (time * 200))) * magnitude * (1-progress)


local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = 0.5;

local spinRate = 360
modelRoll = time * spinRate


if missileIndex == 0 then
	speedScalar = 1.5
elseif missileIndex == 1 then
	speedScalar = 1.6
elseif missileIndex == 2 then
	speedScalar = 1.7
else
	speedScalar = 1.8
end",0,4
3528,"Roll 90, Yaw 90","modelRoll = 90
modelYaw = 90",0,0
3529,"Volley (Fountain + Multi Shot, 12 Missiles)","local angle = 0
local maxMagnitude = startDistance * 0.5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local noise = 2;
local outerWheelMag = 4 * (progress)

if ( missileIndex > 12 ) then 
	outerWheelMag = outerWheelMag * 2;
end

local count = missileCount / 2 

local smallAngle = (360/count ) * missileIndex 
local transRight = math.cos(smallAngle) * outerWheelMag + rand1*noise ;
local transFront = math.sin(smallAngle) * outerWheelMag + rand2*noise ;",0,12
3530,Spires of Arak - Lost Veil Anzu - Fungal Giant - Fungal Root,"local Amplitude=math.max((startDistance/10),1)
transRight=Amplitude*sin((progress*360*(startDistance/10)))*(1-progress)
transFront=progress",0,1
3531,Chaotic Missile Arcane 1 shot (Missile Arcane Streak),"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor*(1-progress)",0,1
3532,Highmaul Raid - Arcane Torrent,"local factor = 3
local maxWidth = 5
local direction = 1
local height = startDistance / 5

if rand1>0.5 then
	direction = -1
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * rand2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = 4 * progress * (1-progress) * height

--scale = math.max(math.pow(progress,factor*2),progress)",0,1
3533,Spiral (3 Missiles)(Clustered),"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = .75			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
",0,3
3534,Spiral + Spin (2 Missiles)(Tight),"local spread = .5

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 180

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 360
modelRoll = time * spinRate * 2
",0,2
3535,Twin Wave - Converge - Rotate - MRN,"
local waveHeight = .86
local wavesPerSec = 2.2
progress = progress*progress
if (missileIndex == 0) then
	transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)
	transUp = (1-progress) * sin(time * wavesPerSec * 360)
end

if (missileIndex == 1) then
	transRight = -waveHeight * (1-progress) * sin(time *wavesPerSec * 360)
	transUp = (1-progress) * cos(time * wavesPerSec * 360)
end
",0,2
3536,"Meteor Strike (25 Yards, Yaw spin)","local magnitude = 25
local spinRate = 360*6
transUp = magnitude * ( 1 - progress )

modelYaw = progress*spinRate

",0,1
3537,Roll 90 - Yaw Spin Fast,"local spinRate = -1080

modelYaw = time * spinRate
modelRoll = 90",0,0
3538,Talador - Shattrath Solo - Soul Eater - Soul Void Missile - KJD,"local p,p2 = progress,progress^1.25
local psq = progress^(1/2)
local function parabola(m) m=m or 1 return (m*4*p*(1-p)) end

local startAngle = 0
local degreesPerSec = 180

transAngle = startAngle + ((missileIndex / missileCount) * 360)
transAngle = transAngle + (time * (degreesPerSec + (2 * degreesPerSec * p)))
local radius = (psq * 2)
transMag = radius
transFront = 1 + (p * 1)
transUp = parabola(p2 * 10)
modelRoll = p * 360 * 1
scale = math.max(0.05,parabola(p2))",0,3
3539,Spin (Pitch) + Parabola (High),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = 1
local wavesPerSec = 2
local angle = 0
local maxMagnitude = startDistance * .50
local spinRate = math.max(540*startDistance/10,360)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
--transRight = (sin(progress*180)*.5)*sin(progress*spinRate)
modelPitch=progress*spinRate
transUp = (sin(progress*180)*.5)*cos(progress*spinRate)
",0,1
3540,Foundry Raid - Beastmaster - Fire Missile - KLH,"local waveHeight = 1 * (startDistance / 30)
local wavesPerSec = 1.6 * (.8 + (.4 * rand2))


transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * (1-progress) * 2
",0,0
3541,"Blackrock Depot - Rocket Blossom V2 (1 Missile, Right)","local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end

local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local maxArc = 12
local angle = math.rad((rand1 * 40) + 90)
local x,y = angleToXY(angle)

local factor = 3

if launchProgress < 1 then
	transRight = x * maxArc * math.pow(launchProgress,8)
	transUp = y * maxArc * launchProgress
	
	transRight = transRight + noise1*(2.5*launchProgress)*factor 
	transUp = transUp + noise2*factor
	transFront = transFront + noise3*3*factor 
else
	transRight = x * maxArc
	transUp = y * maxArc
	transRight = (transRight + noise1*2.5*factor)*(1-progress)
	transUp = (transUp + noise2*factor)*(1-progress)
	transFront = (transFront + noise3*3*factor)*(1-progress)
end


",0,1
3542,"Blackrock Depot - Rocket Blossom V2 (1 Missile, Left)","local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end

local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local maxArc = 12
local angle = math.rad((rand1 * 50) + 40)
local x,y = angleToXY(angle)

local factor = 3

if launchProgress < 1 then
	transRight = x * maxArc * math.pow(launchProgress,8)
	transUp = y * maxArc * launchProgress
	
	transRight = transRight + noise1*(2.5*launchProgress)*factor 
	transUp = transUp + noise2*factor
	transFront = transFront + noise3*3*factor 
else
	transRight = x * maxArc
	transUp = y * maxArc
	transRight = (transRight + noise1*2.5*factor)*(1-progress)
	transUp = (transUp + noise2*factor)*(1-progress)
	transFront = (transFront + noise3*3*factor)*(1-progress)
end


",0,1
3543,Parabola (Pitch Spin Slow),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

",0,1
3544,Warlock - Chaos Bolt v1,"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

local outerWheelSpinRate = 360 	-- 1 spin / sec
local outerWheelMag = 1.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if ( rand1 > 0.5 ) then
	missileAngle = missileAngle * -1
end

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount-1)
	missileAngle = missileAngle + anglePerMissile * missileIndex

	if ( progress < 0.5 ) then 
		outerWheelMag = outerWheelMag * 0.5 + progress 
	else
		outerWheelMag = outerWheelMag * ( 0.25 + 0.75*(1-progress ))
	end

	transUp = outerWheelMag * cos ( missileAngle )
	transRight = outerWheelMag * sin ( missileAngle )
	transFront = -1.5 + 0.75 * progress
	scale = 0.25
	faceImpactPos = 1
else
	scale = 1
end
",0,1
3545,Warlock - Incinerate Chaos,"local waveHeight = 0.5 * (startDistance / 30)
local wavesPerSec = 1.6 * (.8 + (.4 * rand2))


transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * (1-progress) * 2
transUp = ((waveHeight * sin((time + rand3) * wavesPerSec * 360)) * sin(progress * 180)) * (1-progress) * 2
",0,0
3546,Spiral (Tight),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = startDistance * .05
local wavesPerSec = 2
local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = math.max(360*startDistance/10,180)

transRight = (sin(progress*180)*waveHeight)*sin(progress*spinRate)
transUp = (sin(progress*180)*waveHeight)*cos(progress*spinRate)
",0,1
3547,Creature - Azsuna (Vault Door Bunny: Electricity FX) PRK,"local up = 20
local front = 1

if missileIndex==1 then
	transFront = progress*front
	transUp = progress*-1*up
else
	transFront = front - progress*front
	transUp = progress*up - up
end
",0,2
3548,Highraid - Sorcerer King Transition Missiles - SLG,"local r1 = rand1*2-1
local r2 = rand2*2-1

progress = progress*progress 
 
transRight = math.sin(progress*3.14) * 8 * r1 + (rand3*2-1)*3
transUp = math.sin(progress*3.14) * 8 * r2 + (rand2*2-1)*3
transFront = (rand3*20-10)*(1-progress)*progress

",0,0
3549,Soul Inhale Missile - CRT,"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 2000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,5
3550,Creature - Arakkoa - Throw - Right + Return,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end
local ActualProgress=progress
if ActualProgress <=.5 then
	progress=remap(progress,0,.5,0,1)
	transRight = sin(progress*(startDistance*9))*(startDistance*.25)*(1-(progress))
	transUp = sin(progress*(startDistance*13.5))*(startDistance*.05)*(1-(progress))
	transFront = 0-distanceToFirePos+progress*totalDistance
elseif ActualProgress >.4 and ActualProgress <=.6 and false then
	transRight = sin(.5*(startDistance*9))*(startDistance*.25)*(.5)
	transUp = sin(.5*(startDistance*13.5))*(startDistance*.05)*(.5)
	transFront = 0-distanceToFirePos+.5*totalDistance
else	
	progress=remap(progress,.5,1,1,0)
	transRight = -sin((1-(progress))*(startDistance*9))*(startDistance*.25)*progress
	transUp = sin((1-(progress))*(startDistance*13.5))*(startDistance*.05)*progress
	transFront = 0-distanceToFirePos+totalDistance-(remap(progress,1,0,0,.5))*totalDistance*2
end",0,1
3551,Warlock - Chaos Bolt (AoE),"transMag = (1 - math.pow(progress * 2 - 1,2)) * startDistance * .1

transRight = progress * sin(missileIndex*120) * 6
transFront = -progress * cos(missileIndex*120) * 6
",0,3
3552,Spires of Arak - Lost Veil Anzu - Head Crab Posession,"	scale=0.1
	local DesiredLoops=360*1
	transRight=sin(progress*DesiredLoops)*(1-progress)*3
	--transUp=cos(progress*DesiredLoops)*(1-progress)
",0,0
3553,Stay At Target,"   transFront=-distanceToFirePos
",0,0
3554,TEST - Warlock: Incinerate (RKS),"local angle = 0
local maxMagnitude = startDistance * .05
local spinRate = 720 * rand1

if ( rand2 > 0.5 ) then
	spinRate = spinRate * -rand3
end

modelRoll = time * spinRate
transAngle = angle
speedScalar = 2
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3555,Item - LFR T17 Mail Agility 4P Missile Effect,,0,0
3556,"Parabola (Random Pitch Spin, Random Height)","local angle = 0
local maxMagnitude = startDistance * .15 * (1+rand1)
local spinRate = 720 * rand2 - 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
3557,"Fast Out - Hook Left, Right, Center (3 Missiles, 10 yards) - MRN","local factor = 6
local maxWidth = 3

local height = 10

if missileIndex == 0 then
	direction = -1
elseif missileIndex == 1 then
	direction = 1
elseif missileIndex == 2 then
	direction = 0
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth)) 
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = math.abs(cos(math.pi * direction)) * progress * (1-progress) * height",0,3
3558,Test Missile - PRK,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

--transAngle = angle
--transMag = (progress * 2) - 1
--transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = totalDistance - totalDistance*progress*2
transUp = totalDistance - totalDistance*progress*2


modelPitch = time * spinRate

",0,1
3559,Azsuna - Ley Siphon (With Object Correction) PRK,"local maxMagnitude = 5


transUp = -maxMagnitude * (1-progress)",0,1
3560,"Parabola (Fast in/out, Very High)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 8*distanceToFirePos
frontP = HorizontalSCurve(progress,1.2)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)",0,1
3561,"Parabola (Yaw Spin, No Pitch)","local angle = 0
local maxMagnitude = startDistance * 2
local spinRateY = 720

transUp = sin(progress * 180) *5
--transAngle = 0
--transMag = (progress * 2) - 1
--transMag = (1 - (transMag * transMag)) * maxMagnitude

faceImpactPos = 1
modelYaw = time * spinRateY
",0,1
3562,6.2 Hellfire Raid - Siegeyard - Fel Iron Totem Missile - KJD,"local factor = 4
local maxWidth = 3
local direction = 1
local height = startDistance / 3

if rand1>0.5 then
	direction = -1
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * rand2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = 4 * progress * (1-progress) * height",0,1
3563,Twin Wave - Converge - Rotate - Tight / More Rotations - MRN,"
local waveHeight = 1.5
local wavesPerSec = .47
progSquare = progress*progress

if (missileIndex == 0) then
	transRight = waveHeight * (1-progress) * cos(wavesPerSec * progress * 360)
	transUp = waveHeight * (1-progress) * sin(wavesPerSec * progress * 360)
end

if (missileIndex == 1) then
	transRight = -waveHeight * (1-progress) * cos(wavesPerSec * progress * 360)
	transUp = -waveHeight * (1-progress) * sin(wavesPerSec * progress * 360)
end
",0,2
3564,6.2 Hellfire Raid - Gorefiend - Sin Curve Z into follow ground,"local heightMax = 3.5
local percentCurved = .45
local factor = math.sqrt((progress/percentCurved))

transUp = math.sin(math.rad(factor * 180)) * (heightMax * (1-progress))

speedScalar = progress * 5",0,0
3565,6.2 Hellfire Raid - Siegeyard - Hurl Crate - KJD,"local angle = 0
local maxMagnitude = startDistance * .2
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
3566,Revamp Paladin Hammer of Justice Missile,"transRight = -(1-progress)*.2
transUp = (1-progress)*.1


modelYaw = (1-progress)*6
modelPitch = (time*1440+10)
faceImpactPos  = 1",0,0
3567,Revamp Healing 3,"transUp = 10--sin(progress*720)*5
",0,1
3568,Revamp Healing 2,"local angle = 0
local maxMagnitude = startDistance * .05 * (rand2*.5+.5)

transAngle = rand1*(360)
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = rand1*(360)+90",0,1
3569,Scott Test 4,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle+90
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
3570,Revamp Healing 4,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor*(1-progress)",0,1
3571,Revamp Healing 5,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor
transUp = progressMult*noise2*4*factor+(progress*progress*10)*(1-(math.pow(progress,15)))
transFront = progressMult*noise3*14*factor*(1-progress)",0,1
3572,7.0 Helheim Dungeon - Trash - Whirlpool of Souls Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
scale = 0.5 + ((1-progress)/2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
3573,Hellfire Raid - Trash - Fel Lord - Charge - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=remap(missileIndex,1,5,2.5,3.2)
if missileIndex<5 then
	transFront=remap(missileIndex,1,5,.75,1.5)
else
	transFront=remap(missileIndex,5,12,2.2,5.5)
end
",0,7
3574,Hellfire Raid - Trash - Fel Lord - Hurl - Axe (Corkscrew CCW),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local progressSpeed = math.pow(progress,1.25) 

transFront = (-cos(progressSpeed*540)+1)*startDistance*math.pow(1-progressSpeed,.7)
transRight = -1*sin(progressSpeed*540)*startDistance*math.pow(1-progressSpeed,.7)

modelRoll=90
modelYaw=time*1080

",0,0
3577,HMC Test,"local angle = 270
local maxMagnitude = startDistance * .2
local spinRate = 720
local modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,3
3578,Meteor Strike (100 Yards) Falls Straight Down,"local magnitude = 100

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3579,Quad Wave - Converge - Rotate - Tight / More Rotations - MRN,"
local waveHeight = .97
local wavesPerSec = 3
progSquare = progress*progress

if (missileIndex == 0) then
	transRight = waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
	transUp = waveHeight * (1-progress) * sin(wavesPerSec * rand3 * progress * 360)
end

if (missileIndex == 1) then
	transRight = -waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
	transUp = -waveHeight * (1-progress) * sin(wavesPerSec * rand3 * progress * 360)
end

if (missileIndex == 2) then
	transRight = waveHeight * (1-progress) * sin(wavesPerSec * rand1 * progress * 360)
	transUp = waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
end

if (missileIndex == 3) then
	transRight = -waveHeight * (1-progress) * sin(wavesPerSec * rand1 * progress * 360)
	transUp = -waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
end",0,4
3580,Pitch Spin (Reverse),"local spinRate = 720
modelPitch = -1 * time * spinRate",0,1
3581,Hellfire Raid - Fel Lord - Recall Axe,"modelPitch = ((1-time)*-360)+(315*sin((time-1)*90))
modelYaw=sin((time-1)*90)*-90",0,1
3582,Shrink (1.0x to 0.5x),scale = ((1 - progress) * (0.5)) + (0.5),0,0
3583,Item - Eviscerating Blade,"local spinRate = 360*8

modelYaw = 180 + time * spinRate
modelRoll = 90",0,1
3584,6.2 Hellfire Raid - Siegeyard - Hellfire Round (Cos1a) - KJD,"local function parabola() return (progress * (1-progress) * 4) end
local maxMagnitude = startDistance * 0.15

transMag = maxMagnitude * parabola()
--transUp = 4.5
--modelPitch = -90 + -45 + (90 * parabola())",0,1
3585,Hellfire Raid - Fel Magnaron - Tank Mech,transUp=missileIndex*1.5,0,3
3586,Hellfire Raid - Fel Lord - Throw Axe,"local spinRate = 1080
modelPitch = time * spinRate",0,1
3587,zzOldItem - Legendary Ring - Missile,"local angle = 0
local maxMagnitude = startDistance * 1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,1
3588,Corkscrew Around Travel Axis + Parabola,"transAngle=(1080/startDistance)*distanceToFirePos
local MaxHeight=8
transUp=sin(progress*180)*MaxHeight
transMag=2",0,0
3589,Creature - Gorefiend - Low Shadow Missile - JMC,"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000
speedScalar = 2",0,1
3590,Face Impact Position,faceImpactPos=1,0,0
3591,Hellfire Raid - Trash - Fel Magnaron - Throw Barrel on Pile,"local Height=20
transAngle=0
transUp=Height*sin(progress*180)
modelRoll=90
modelPitch=progress*360",0,1
3592,Meteor Strike (10 Yards) Falls Straight Down,"local magnitude = 10

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3593,Fast Out - Parabola - KJD,"local factor = 3
local height = startDistance / 5

transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = 4 * progress * (1-progress) * height",0,1
3594,6.2 Hellfire Raid - Summoner - Big Fel Add Summon Projectile 1. ,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 60

local p = HorizontalSCurve(progress,.5)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = HorizontalSCurve(progress,3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), 1)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*20
local noise1 = noise(t1)

local t2 = (time+rand2*400)*20
local noise2 = noise(t2)

local t3 = (time+rand3*400)*20
local noise3 = noise(t3)

local factor = 60
transRight = transRight + progressMult*noise1*2*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*2*factor ",0,6
3595,Meteor Strike (250 Yards),"local magnitude = 250

transUp = magnitude * ( 1 - progress )
",0,1
3596,6.2 Hellfire Raid - Summoner - Lil Fel Add Summon Projectile 1. ,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 30

local p = HorizontalSCurve(progress,.5)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + (rand1 * (maxAngle - minAngle))
local x,y = angleToXY(currentAngle)
local arcProg = HorizontalSCurve(progress,3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), 1)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*10
local noise1 = noise(t1)

local t2 = (time+rand2*400)*10
local noise2 = noise(t2)

local t3 = (time+rand3*400)*10
local noise3 = noise(t3)

local factor = 40
transRight = transRight + progressMult*noise1*2*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*2*factor ",0,1
3597,Demon Hunter Artifact Missile Spam (Chaotic),"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor*(1-progress)
if(missileIndex > 0) then
	speedAbs = 1-(missileCount*0.3)
end",0,1
3598,Hellfire Raid - Trash - Fel Lord - Noxious - Trigger - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=sin(progress*180)*startDistance/(2+rand1)
transRight=sin(progress*360*rand2)*startDistance/(4+rand3)",0,0
3599,Hellfire Raid - Trash - Fel Lord - Lose Soul,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

if progress <=.3 then
	transUp=12*sin(remap(progress,0,.3,0,1)*150)
else
	transUp=(6-(sin(remap(progress,.3,1,0,1080))*4))*(cos(remap(progress,.3,1,0,90)))
	transRight=sin(remap(progress,.3,1,0,180))*6
end
",0,0
3600,Demon Hunter Weapon Tornado MH,"local numSpirals = 10
local radius = 3 * progress * .7

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = 4 * progress

modelPitch = 135

modelRoll =  2160 * progress",0,1
3601,Demon Hunter Weapon Tornado OH,"local numSpirals = 10
local radius = 3 * progress * .7

local curAngle = numSpirals * progress * 360 * -1

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = 4 * progress

modelPitch = 135

modelRoll =  2160 * progress",0,1
3602,"Drunken Fountain (5 Missiles, spiral)","local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = 720

modelRoll = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,5
3603,"Parabola (Pitch Spin, med speed, low) copy","local angle = 0
local maxMagnitude = startDistance * .1
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
3604,Deadly Grace,"local missileTime = 7.5
local riseTime = 6.5
local shotTime = 1
local upness = 0

local capSide = .3*startDistance
local maxSide = 2*capSide*rand1-capSide

local phaseOneStop = riseTime/missileTime
local phaseTwoStart = 1-shotTime/missileTime
local hoverHeight = 3*2*rand2
local frontOffset = 0

local p = progress - phaseTwoStart

if progress <= phaseOneStop then
    transFront = 0-distanceToFirePos+frontOffset*progress/phaseOneStop
    transUp = hoverHeight*progress/phaseOneStop
    
elseif progress <= phaseTwoStart then
	local waitTime = progress-phaseOneStop
	transFront = 0-distanceToFirePos+frontOffset
	transUp = hoverHeight-upness*waitTime
	
else
    transFront = -distanceToFirePos
    p = p/(1 - phaseTwoStart)
    transFront = transFront * (1-p)
    transUp = hoverHeight * (1-p)
    local upnessDelta = -upness*(phaseTwoStart-phaseOneStop)
    transUp = transUp + upnessDelta * (1-p)
end

scale = 1+3*progress

--TURBULENCE
local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.max(0, 2.5*progress-1.5)

local t1 = (time+rand1)*140
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*140
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*140
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 0.08


transRight = (progress * 2) - 1
transRight = (1 - (transRight * transRight)) * maxSide

transRight = transRight + progressMult*noise1*14*factor 
transUp = transUp + progressMult*noise2*8*factor 
transFront = transFront + progressMult*noise3*14*factor 

",0,1
3605,Deadly Grace v2,"local missileTime = 5
local riseTime = 4.5
local shotTime = 0.5
local upness = 0

local capSide = .3*startDistance
local maxSide = 2*capSide*rand1-capSide

local phaseOneStop = riseTime/missileTime
local phaseTwoStart = 1-shotTime/missileTime
local hoverHeight = 2+2*rand2
local frontOffset = 0

local p = progress - phaseTwoStart

if progress <= phaseOneStop then
    transFront = 0-distanceToFirePos+frontOffset*progress/phaseOneStop
    transUp = hoverHeight*progress/phaseOneStop
    
elseif progress <= phaseTwoStart then
	local waitTime = progress-phaseOneStop
	transFront = 0-distanceToFirePos+frontOffset
	transUp = hoverHeight-upness*waitTime
	
else
    transFront = -distanceToFirePos
    p = p/(1 - phaseTwoStart)
    transFront = transFront * (1-p)
    transUp = hoverHeight * (1-p)
    local upnessDelta = -upness*(phaseTwoStart-phaseOneStop)
    transUp = transUp + upnessDelta * (1-p)
end

scale = 1+2*progress

--TURBULENCE
local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.max(0, 2.5*progress-1.5)

local t1 = (time+rand1)*140
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*140
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*140
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 0.08

transAngle = -30 + 60*rand3
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxSide

transRight = transRight + progressMult*noise1*14*factor 
transUp = transUp + progressMult*noise2*8*factor 
transFront = transFront + progressMult*noise3*14*factor 

",0,1
3606,Cosmetic Multi-Shot - 30 Degree Spread,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local RemappedIndex=remap(missileIndex,1,missileCount,-15,15)
transRight=distanceToFirePos*sin(RemappedIndex+(rand1*5)+(rand2*-5))
transUp=sin(90*progress)*remap(rand3,0,1,-.5,1.5)",0,10
3607,Long Spiral In (opposite direction),"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.5*-1
",0,1
3608,River Demon Missile,"local angle = -45+rand1*90
local magnitudeMult = 0.25
local maxMagnitude = startDistance * magnitudeMult
local maxKickBack = 5
local correction = 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transFront = -maxKickBack/maxMagnitude*transMag*correction


--[[

local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 20
local maxUpMagnitude = startDistance * .15
speedscalar = 0.5

--progress = 1 - progress

transAngle = startAngle
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp )) * maxUpMagnitude

--]]",0,1
3609,Chaotic Missile Right Arc,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor+(10*progressMult)
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor 

",0,0
3610,Chaotic Missile Up Arc,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor
transUp = progressMult*noise2*4*factor + (progress*(1-progress))*20
transFront = progressMult*noise3*14*factor 

",0,0
3611,6.2 Hellfire Raid - Construct - Apocalyptic Felburst 1. Missile,"lp = math.min(launchProgress, .8)
scale = .5 + (3 * lp * lp) + (math.sin(lp * math.pi * 18) * .025)

transFront = distanceToImpactPos
if progress < .75 then
	p = progress/.75
	transUp = 15 + (5 * (p*p))
else
	p = (progress - .75)/.25
	transUp  = 20 * (1-(p * p))
end
",0,0
3612,6.2 Hellfire Raid - Construct - Summon Voracious Soulstalker 1. ,"startRadius = 10
p = progress
initialRotation = 0
if missileIndex > 0 then
	initialRotation = 180
end

transFront	= distanceToImpactPos
transUp		= 10 * (1-p*p)

rotateFront = sin(initialRotation + (2880 * p*p)) * (startRadius * (1-p*p))
rotateRight = cos(initialRotation + (2880 * p*p)) * (startRadius * (1-p*p))

transFront = rotateFront + transFront
transRight = rotateRight",0,2
3613,Stormheim - Tattersail - Shoot Gun - MRN,"local maxSpread = 5
transAngle = 360 * rand1

transMag = progress * rand2 * maxSpread
transFront = (progress * startDistance) - distanceToFirePos",0,20
3614,7.0 - Wardens - Fan of Blades,"transRight=(1-progress)*(sin(progress*180)*(startDistance/10*rand1))
transUp=(1-progress)*(sin(progress*360)*(startDistance/10*rand2))
modelYaw=time*(720+(45*rand3))
modelRoll=90",0,0
3615,Chaotic Missile Up Arc,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor
transUp = progressMult*noise2*4*factor + (progress*(1-progress))*20
transFront = progressMult*noise3*14*factor 

",0,1
3616,Chaotic Missile Right Arc,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor+(10*progressMult)
transUp = progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor 

",0,1
3617,7.0 - Wardens - Throw,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

--modelRoll=90
scale=1
--modelYaw=time*(360*5)
local ProgressScaling=(1-(progress*1))
local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,.5,0,.5)
if progress >.5 then
	RemappedProgress=remap(progress,.5,1,.5,-1)
end
transRight=sin(progress*360)*DistanceScaling
transFront=(startDistance*(RemappedProgress))
transUp=sin(progress*270)",0,0
3618,Throw spin and skid,"
local phaseTwoStart = .6
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
	local angle = 0
	local maxMagnitude = startDistance * .1

	transAngle = angle
	transMag = (progress * 2*1.666) - 1
	transMag = (1 - (transMag * transMag)) * maxMagnitude
    transFront = progress*startDistance*.2
    
    
else
    p = p/(1 - phaseTwoStart)
    transFront = progress*startDistance*.2
    transFront = transFront*(1-p)
    modelPitch = 0
    
    
end

modelYaw = math.floor(startDistance*.2)*(math.pow(progress,.5))*180
transUp = .25+(progress*-.5)
",0,1
3619,6.2 Hellfire Raid - Siegeyard - Hellfire Round (Cos1) - KJD,"local function parabola() return (progress * (1-progress) * 4) end
local maxMagnitude = startDistance * 0.15

transMag = maxMagnitude * parabola()
transUp = 4.5
modelPitch = -90 + -45 + (90 * parabola())",0,1
3620,6.2 Hellfire Raid - Gorefiend - Spirit Spew - Missile - MRN,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function direction() local d=1 if (rand3-0.5)>0 then d=-1 end return d end

local startAngle
local maxAngle = 5
local minAngle = 3

scale = parabola(1,1.5,2)

local maxMagnitude = startDistance * 0.35
local angle = (direction()*(progress*180)) + (rand1*180)
local factor = 2

local noise1 = 4 * factor * noise((time+rand1*4)*50)
local noise2 = 5 * factor * noise((time+rand2*4)*50)
local noise3 = 2 * factor * noise((time+rand3*4)*50)

transRight = direction() * parabola(1,2,noise1+(5+5*rand2))
transUp = parabola(1,1,maxMagnitude) + parabola(1,1,noise2)
transFront = parabola(1,1,noise3)",0,1
3621,Shrink (1.0x to 0.33x),scale = ((1 - progress) * (0.67)) + (0.33),0,0
3622,"Parabola (Very High, Spin pitch fast. roll 90, Yaw 90)","local angle = 0
local maxMagnitude = startDistance * .60
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 90
modelYaw = 90",0,0
3623,"7.0 Highmountain - Drogbar ""Fishing"" Mouth Fling (RKS)","local angle = 0
local maxMagnitude = startDistance * .40
local spinRate = 360 * (rand1 + 0.5)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 100 * rand2
modelYaw = 30",0,0
3624,6.2 Hellfire Raid - Gorefiend - Achievement - 01 Summon Comsetic,"startRadius = 6
p = progress
initialRotation = 0
if missileIndex > 0 then
	initialRotation = 180
end

transFront	= distanceToImpactPos
transUp		= 7 * (1-p*p)

rotateFront = sin(initialRotation + (1880 * p*p)) * (startRadius * (1-p*p))
rotateRight = cos(initialRotation + (1880 * p*p)) * (startRadius * (1-p*p))

transFront = rotateFront + transFront
transRight = rotateRight",0,2
3625,Roll 90,modelRoll = 90,0,0
3626,Marks Hunter Windrunner Bow Aimed Shot Multi-Arrow Missile,"speedScalar = 0.2
speedAbs = 4

--custom missile set per missile index
if(missileIndex == 0) then
	transUp = 0
	transRight = -0.65+(progress*0.65)
elseif(missileIndex == 1) then
	transUp = .25
	transRight = -0.75+(progress*0.75)
	modelPitch = 5
elseif(missileIndex == 2) then
	transUp = .5
	transRight = -0.65+(progress*0.65)
	modelPitch = 2.5
elseif(missileIndex == 3) then
	transUp = .5
	transRight = 0.65-(progress*0.65)
	modelPitch = 2.5
elseif(missileIndex == 4) then
	transUp = .25
	transRight = 0.75-(progress*0.75)
	modelPitch = 5
elseif(missileIndex == 5) then
	transUp = 0
	transRight = 0.65-(progress*0.65)
	
end



--transUp = .5+ ((progress * (rand1 - 2)) * 2) + (progress * 2)

--transRight = (progress * (rand2 - .5)) * 1

--speedOffset = 1 + missileIndex * .5",0,6
3627,Fel Apocalypse Missile,"local angle = -75+rand1*180
local magnitudeMult = .6
local maxMagnitude = startDistance * magnitudeMult
local maxKickBack = 2
local correction = 2
local percentScatter = 50
local scatter = (1 - percentScatter/100 + (2*percentScatter*rand2)/100 )

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude * scatter
transFront = -maxKickBack/maxMagnitude*transMag*correction
",0,2
3628,Rain of Arrows,"--rand1: angle, height
--rand2: radius
--rand3: height


local minMagnitude = 30
local maxMagnitude = 100
local magnitude = minMagnitude + rand3*(maxMagnitude-minMagnitude)

local maxRadius = 5

local angle = 360*rand1
local radius = maxRadius*math.sqrt(rand2)

local speed = 50

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

transRight = transRight + radius*math.cos(angle)
transFront = transFront + radius*math.sin(angle)

speedAbs = speed*startDistance/magnitude",0,40
3629,"Rain of Arrows, Glaive Spin","--rand1: angle
--rand2: radius, facing
--rand3: distance


local height = 10

local maxRadius = 5

local angle = 360*rand1
local radius = maxRadius*math.sqrt(rand2)

local speed = 50

local pitchRate = 100

local parab = 0
local parabMax = 20

local sentinelDistanceMin = 30
local sentinelDistanceMax = 150
local sentinelDistance = sentinelDistanceMin + rand3*(sentinelDistanceMax-sentinelDistanceMin)

parab = (progress * 2) - 1
parab = (1 - (parab * parab)) * parabMax

transUp = height * ( 1 - progress )
transUp = transUp + parab

transFront = distanceToImpactPos

transRight = transRight + ( radius + (1-progress)*sentinelDistance ) * math.cos(angle)
transFront = transFront + ( radius + (1-progress)*sentinelDistance ) * math.sin(angle)

local absMagnitude = math.sqrt(sentinelDistance*sentinelDistance + height*height)

speedAbs = speed*startDistance/absMagnitude





modelPitch = 360*rand2

modelYaw = progress*pitchRate",0,20
3630,"Rain of Arrows, Parabola, Far Right","--rand1: angle
--rand2: radius
--rand3: distance


local height = 15

local maxRadius = 5

local spread = math.pi/8
local baseAngle = 5*math.pi/4
local cleanMissileCount = math.max(1,missileCount)
angle = baseAngle - spread/2 + spread*(missileIndex-1)/(cleanMissileCount-1)
local radius = maxRadius*math.sqrt(rand2)

local speed = 95

local parab = 0
local parabMax = 15

local sentinelDistanceMin = 50
local sentinelDistanceMax = 80
local sentinelDistance = sentinelDistanceMin + rand3*(sentinelDistanceMax-sentinelDistanceMin)

parab = (progress * 2) - 1
parab = (1 - (parab * parab)) * parabMax

transUp = height * ( 1 - progress )
transUp = transUp + parab

transFront = distanceToImpactPos

transRight = transRight + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.cos(angle)
transFront = transFront + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.sin(angle)

local absMagnitude = math.sqrt(sentinelDistance*sentinelDistance + height*height)

speedAbs = speed*startDistance/absMagnitude

--if progress>0.99 then
--	speedAbs = speedAbs+40
--end",0,6
3631,"Rain of Arrows, Parabola, Larger Area","--rand1: angle
--rand2: radius
--rand3: distance


local height = 30

local maxRadius = 10

local angle = 360*rand1
local radius = maxRadius*math.sqrt(rand2)

local speed = 50

local parab = 0
local parabMax = 30

local sentinelDistanceMin = 30
local sentinelDistanceMax = 150
local sentinelDistance = sentinelDistanceMin + rand3*(sentinelDistanceMax-sentinelDistanceMin)

parab = (progress * 2) - 1
parab = (1 - (parab * parab)) * parabMax

transUp = height * ( 1 - progress )
transUp = transUp + parab

transFront = distanceToImpactPos

transRight = transRight + ( radius + (1-progress)*sentinelDistance ) * math.cos(angle)
transFront = transFront + ( radius + (1-progress)*sentinelDistance ) * math.sin(angle)

local absMagnitude = math.sqrt(sentinelDistance*sentinelDistance + height*height)

speedAbs = speed*startDistance/absMagnitude",0,40
3632,"Rain of Arrows, Glaive Spin, Large","--rand1: angle
--rand2: radius, facing
--rand3: distance


local height = 10

local maxRadius = 10

local angle = 360*rand1
local radius = maxRadius*math.sqrt(rand2)

local speed = 50

local pitchRate = 100

local parab = 0
local parabMax = 20

local sentinelDistanceMin = 30
local sentinelDistanceMax = 150
local sentinelDistance = sentinelDistanceMin + rand3*(sentinelDistanceMax-sentinelDistanceMin)

parab = (progress * 2) - 1
parab = (1 - (parab * parab)) * parabMax

transUp = height * ( 1 - progress )
transUp = transUp + parab

transFront = distanceToImpactPos

transRight = transRight + ( radius + (1-progress)*sentinelDistance ) * math.cos(angle)
transFront = transFront + ( radius + (1-progress)*sentinelDistance ) * math.sin(angle)

local absMagnitude = math.sqrt(sentinelDistance*sentinelDistance + height*height)

speedAbs = speed*startDistance/absMagnitude





modelPitch = 360*rand2

modelYaw = progress*pitchRate",0,20
3633,Warden Dungeon - Trash - Illidari Infester - Corrupt,"local RandomOffsets={
[1]=rand1+1,
[2]=rand2+1,
[3]=rand3+1,
[4]=rand1 }
transAngle=((missileIndex)*360/missileCount)+(progress*540)+((RandomOffsets[missileIndex+1]-1)*7)
transMag=sin((progress)*180)*(RandomOffsets[missileIndex+1]+1)
",0,4
3634,7.0 Siege Shard - Lift and Launch - Center,"faceImpactPos = 1
local phaseTwoStart = .7
local progressMult
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    --transRight = -3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
     
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 + p) * transUp)
    --modelPitch = 90
	--modelRoll = 90
    --faceImpactPos = 1
    --transRight = -3*(1-p)
    
    ---Parabola test---
    local angle = 0
	local maxMagnitude = startDistance * .3

	transAngle = angle
	transMag = (p * 2) - 1
	transMag = (1 - (transMag * transMag)) * maxMagnitude
	    
end

modelYaw = (1-progress)*20+10


--transRight = transRight+cos(rand1*180+90)*2*(1 - p)
transFront = transFront+sin(rand1*180+90)*2*(1 - p)
--transFront = transFront+cos(rand1*180+90)*2*(1 - p)",0,0
3635,Boomerang (Arc Right) + ModelRoll: 90,"local angle = 270
local maxMagnitude = startDistance * .2
local spinRate = 720
local modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3636,Boomerang + ModelRoll: 90,"local angle = 90
local maxMagnitude = startDistance * .2
local spinRate = 720
local modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3637,7.0 Neltharion's Lair - Boss - Razor Shards Missile Main,"--Change these vars based on your desired needs
--Minimum 2 missiles
--Do not make a >=180 degree cone 

	local coneWidth = 60
	local coneRotation = 65
	local coneNoiseFactor = 0.75
	
	modelPitch = -90


	local coneOffset
	local resultWidthAtDist = math.tan(math.rad(coneWidth/2))*startDistance

	if (missileCount%2)==0 then
		local offsetBase = ((resultWidthAtDist*2)/(missileCount-1))
		if (missileIndex+1)<=(missileCount/2) then
			if missileIndex+1==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*missileIndex)
			end
			transAngle = coneRotation
		else
			if (missileIndex+1)-(missileCount/2)==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*((missileIndex)-(missileCount/2)))
			end
			transAngle = 360 - coneRotation
		end
	else
		if (missileIndex+1)<=(missileCount/2) then
			coneOffset = (resultWidthAtDist) * ((missileIndex+1)/math.floor(missileCount/2))
			transAngle = coneRotation
		elseif (missileIndex+1)>=(missileCount/2) and (missileIndex+1)~=missileCount then
			coneOffset = (resultWidthAtDist) * ( ((missileIndex+1)-math.floor(missileCount/2)) / math.floor(missileCount/2) )
			transAngle = 360 - coneRotation
		else
			coneOffset = 0
			transAngle = 0
		end
	end


	transMag = progress * coneOffset
	transUp = coneNoiseFactor * rand2 * progress",0,6
3638,Fel Barrage Motion,"distanceScalar = math.pow(math.min(startDistance*.1,1),2)

transUp = progress*2-1--sin(progress*180)*3*(1-progress)
transUp = (1 - (transUp * transUp))*(rand2*2+1)*distanceScalar
transFront = (-distanceToFirePos)+progress*distanceToFirePos

--transRight = rand1*sin(progress*180)*3*(1-progress)

transAngle=rand1*200-100
transMag = sin(progress*180)*2*(1-progress)

speedScalar = 1 + (progress/2)",0,0
3639,Corkscrew Around Travel Axis,"transAngle=(1080/startDistance)*distanceToFirePos
local MaxHeight=8
--transUp=sin(progress*180)*MaxHeight
transMag=2",0,0
3640,7.0 Artifacts - Ret Paladin - Weapon Proc Damage 1,"transFront = 0.15 * distanceToImpactPos
transRight = -4*(1-progress)

--[[if(missileIndex == 0) then
	transRight = -1.5
elseif(missileIndex == 1) then
	transRight = -0.5
elseif(missileIndex == 2) then
	transRight = 0.5
elseif(missileIndex == 3) then
	transRight = 1.5
end]]--
",0,1
3641,7.0 Artifacts - Ret Paladin - Weapon Proc Damage 2,"transFront = 0.15 * distanceToImpactPos
transRight = -1.5*(1-progress)",0,1
3642,7.0 Artifacts - Ret Paladin - Weapon Proc Damage 3,"transFront = 0.15 * distanceToImpactPos
transRight = 1.5*(1-progress)",0,1
3643,7.0 Artifacts - Ret Paladin - Weapon Proc Damage 4,"transFront = 0.15 * distanceToImpactPos
transRight = 4*(1-progress)",0,1
3644,7.0 Artifacts - Ret Paladin - Weapon Proc Damage 1 - TerrieTest,"transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude


transFront = 0.15 * distanceToImpactPos
transRight = -4*(1-progress)

local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

--[[if(missileIndex == 0) then
	transRight = -1.5
elseif(missileIndex == 1) then
	transRight = -0.5
elseif(missileIndex == 2) then
	transRight = 0.5
elseif(missileIndex == 3) then
	transRight = 1.5
end]]--


",0,1
3645,Blade Dance,transRight = 10*progress,0,0
3646,Foxflower Scraps,"local angle = 0
local maxMagnitude = startDistance * .15
local rollCap = 30
local pitchCap = 30
local yawCap = 30

local rollRate = (2*rand1-1)*rollCap
local pitchRate = (2*rand2-1)*pitchCap
local yawRate = (2*rand3-1)*yawCap


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = time * rollRate
modelPitch = time * pitchRate
modelYaw = time * yawRate
",0,1
3647,Swirling Mist Missile,"local maxMagnitude = 1.5
local minSpeedScalar = .8
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude*0.5
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (1+3*rand3) * sin(time * 2 * 360) * ( 1 - progress ) * 2",0,1
3648,Helheim Raid - Helya - Turbulent Waters Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 18
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)
modelPitch = -180",0,1
3649,Phoenix Bolt,"local progressMult = sin(progress*180)*(1-progress)*2

local t1 = (time/15 + rand1) * 360
local t2 = (time/15 + rand2) * 360
local wave1 = sin(t1)

local factor = startDistance/10
transRight = progressMult * wave1 * factor
speedAbs = progress * progress * 20

if (startDistance  < 6) then
	transUp = 0
	modelPitch = progressMult *5

else
	transUp = progressMult
	modelPitch = progressMult *30
end

modelRoll = transRight*6

faceImpactPos = 1",0,0
3650,Warden Dungeon - Trash - Shadow Hunter - Charge - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=remap(missileIndex,1,5,.5,1.15)
transFront=remap(missileIndex,1,5,.75,1.5)

",0,5
3651,Rogue - Cannonball Barrage Missile,"faceImpactPos = 1

transFront = progress*-startDistance+startDistance + (1-progress)*-35
transUp = cos(90*progress)*11
--transRight = 10 * (1-progress)",0,1
3652,Flying Feather,"local angle = 0
local maxMagnitude = startDistance * (0.4+0.3*rand2)
local maxOffset = 8
local offsetAngle = 360*rand1
local offset = math.sqrt(rand2)*maxOffset

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local fakeProgress
local div = 8+12*rand1
--if progress<(1/8) then
--	fakeProgress = progress*4
--else
--	fakeProgress = (progress-0.125)*(8/7)*(1/2)+0.5
--end
if progress<(1/div) then
	fakeProgress = progress*(div/2)
else
	fakeProgress = (progress-(1/div))*(div/(div-1))*(1/2)+0.5
end



transUp = (fakeProgress * 2) - 1
transUp = (1 - (transUp * transUp )) * maxMagnitude

transRight = (2*rand1+1)*sinapprox((600+1400*rand3)*progress)
if rand2<0.5 then transRight = -1*transRight end

transUp = transUp+0.25*math.pow(math.abs(transRight),2)

--offset
transRight = transRight + progress*sinapprox(offsetAngle)*offset
transFront = transFront + progress*sinapprox(offsetAngle-90)*offset

",0,1
3653,Spiral (Tight) (2 missiles),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = startDistance * .05
local wavesPerSec = 2
local angle = 180
local maxMagnitude = startDistance * .5
local spinRate = math.max(360*startDistance/10,180)


local missileAngle = spinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transRight = (sin(progress*180)*waveHeight)*sin(progress*spinRate)
transUp = (sin(progress*180)*waveHeight)*cos(progress*spinRate)
",0,2
3654,Spiral + Spin (2 Missiles) (Fast Rotate),"local spread = 1.2

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 720

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 720
modelRoll = time * spinRate
",0,2
3655,Warlock - Channel Demonfire - Damage,"
local maxMagnitude = 0.8	
local p = ((progress * 2) - 1)
local magnitude = (1 - (p * p)) * maxMagnitude

local magnitudeMag		= magnitude * 2
local magnitudeRight 	= magnitude * 1.2
local magnitudeUp 		= magnitude * 0.8
local magnitudeFront 	= magnitude * 2

transMag 	= magnitudeMag
transRight 	= magnitudeRight 	* (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60)))
transUp 	= magnitudeUp 		* (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100)))
transFront 	= magnitudeFront 	* (sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100)))
				- distanceToFirePos * math.pow(1.0 - progress, 0.3)
",0,0
3657,7.0 - Wardens - Throw - One Way,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=2
modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
3658,Warden Dungeon - Boss 1 - Story - Warden's Trap - Throw - One Wa,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=.5
modelYaw=time*(360*5)

local DistanceScaling=(startDistance)/2
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
3659,Missile Script Test,"

if (missileIndex == 0 or missileIndex == 1) then
	transFront = ((-distanceToFirePos)+progress*distanceToFirePos) - sin(progress*360)*2 * ((1-0.5)*rand1+1)
	transRight = sin(progress*360*0.5)*2 * ((1-0.5)*rand1+1)
	transUp = sin(progress*360*0.5) * ((1-0.5)*rand1+1)
elseif (missileIndex == 2 or missileIndex == 3) then
	transFront = ((-distanceToFirePos)+progress*distanceToFirePos) - sin(progress*360)*2 * ((1-0.5)*rand1+1)
	transRight = -sin(progress*360*0.5)*2 * ((1-0.5)*rand1+1)
	transUp = sin(progress*360*0.5) * ((1-0.5)*rand1+1)
end


",0,4
3660,7.0 - Wardens - Malace Shade - Strikethrough,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

transUp=missileIndex*.45
transFront=remap(missileIndex,1,5,.75,1.5)
",0,3
3663,7.0 Artifacts - XP Missiles (CSA),"local angle = 0
local maxMagnitude = startDistance * .10 + (rand1 * 5)
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = time * spinRate


transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude * 1.5
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude",0,5
3664,Monk - Special Delivery - Missile,"local angle = 0
local maxMagnitude = 30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3665,Imp Generator Missile,"local angle = 0

local MIN_MAGNITUDE = 0.20
local MAX_MAGNITUDE = 0.40

local MIN_SPIN = 70
local MAX_SPIN = 210

local magnitude = startDistance * (MIN_MAGNITUDE + rand1*(MAX_MAGNITUDE-MIN_MAGNITUDE))
local spinDirection = 1
if rand3<0.5 then spinDirection = -1 end
local spin = spinDirection*(MIN_SPIN + rand2*(MAX_SPIN-MIN_SPIN))

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * magnitude

modelRoll = time * spin
",0,1
3666,Shrink (50%) / Parabola,"transUp = (progress * (1-progress) * 4) * (startDistance / 10)
scale = math.max(1 - (progress / 2),0.001)",0,1
3667,7.0 Suramar Catacombs - Thirst for Mana Missile,"local r1 = rand1*2-1
local r2 = rand2*2-1

progress = progress*progress 
 
transRight = math.sin(progress*3.14) * 8 * r1 + (rand3*2-1)*3
transUp = math.sin(progress*3.14)  * 8 * r2 + (rand2*2-1)*3
transFront = (rand3*20-10)*(1-progress)*progress

",0,0
3668,7.0 Suramar - Echo Ping,"transFront = -distanceToFirePos*.4
transAngle=(1080/startDistance)*distanceToFirePos
transMag=0.4",0,1
3669,Revamp Rogue - Shuriken Toss Motion,"if (missileIndex == 0) then
	transRight = (-sin(progress * 180) * 2) * (1 - (rand2/2)) + (rand2 / 2)
	transUp = (sin(progress * 180)) * rand1
elseif (missileIndex == 1) then
	transRight = (-sin(progress * 180) * 2) * (1 - (rand2/2)) + (rand2 / 2)
	transUp = (sin(progress * 180)) * rand1 - ((1 - (rand2/4)) * progress)
elseif (missileIndex == 2) then
	transRight = (-sin(progress * 180) * 2) * rand1 + (rand2 / 2)
	transUp = (sin(progress * 180)) * rand1 - ((1 - (rand2/2)) * progress)
end

modelRoll = -45",0,3
3670,Long Spiral In - med altitude,"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (7.5*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.5
",0,1
3671,Warden Dungeon - Boss 4 - Elune's Light - Removed,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local SideAmp=5
local HeightAmp=3
transRight=SideAmp*sin(360/startDistance)*(1-progress)
transUp=HeightAmp*sin(360/startDistance)*(1-progress)
",0,0
3672,Multi-shot Parabola (3 Missiles),"local angle = 0
local maxMagnitude = startDistance * .50
local spread = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transRight = (rand1 - 0.5) * spread * progress
transUp = (rand2 - 0.5) * spread * progress",0,3
3673,Valhallas - Boss 2 - Expel Light - MRN,"local factor = 1.2
transFront = math.pow(math.max(progress,.2),factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
3674,7.0 Helheim Dungeon - Ferryman - Servitor Missile - KJD,"local function parabola()
	return (progress * (1-progress) * 4)
end

progress = progress * progress
local factor = 3

scale = math.max(0.1,parabola())

transRight = parabola() * (math.sin(progress*3.14) * factor * (rand1*2-1))
transUp = parabola() * (math.sin(progress*3.14) * factor * rand2)
transFront = parabola() * factor * (rand3*1.5-0.75)",0,1
3675,Spin (Roll) - 1080 (Throw Glaive),"--[[
speed = 50
launchDelay = .15

travelTime = totalDistance / speed
totalTime = launchDelay + travelTime
actualProgress = (launchProgress*launchDelay + progress*travelTime) / (totalTime)

transFrontExpected =  totalDistance * actualProgress 
transFrontTravelled = totalDistance * progress
transFront = transFrontExpected - transFrontTravelled
--]]

transRight = -(sin(progress*180))*math.pow(startDistance,.3)

modelYaw  = 60",0,1
3676,7.0 Artifacts - Enhance Shaman - Rock Missiles,"--transFront = startDistance * -0.5
transRight = (-2 + (8*rand2))*(1-progress)
",0,1
3677,Fast Out - W/ Noise (1 Missile),"local factor = 2
local maxWidth = 5
local direction = 1
local noiseAmt = startDistance * 0.4

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25))
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,1
3678,Monk - Fists of Fury Revamp Missile Motion (Right),transRight = -sin(progress*180)*1,0,0
3679,Monk - Fists of Fury Revamp Missile Motion (Left),"transRight = sin(progress*180)*1
transUp = progress*(rand1*2-.5)",0,0
3680,Mage - Glacial Spike,"local angle = 0
local maxMagnitude = 1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = -90
transFront = 1.5",0,1
3681,Mage - Glacial Spike Trail,"local angle = 0
local maxMagnitude = 1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = -180
transFront = 0.25",0,1
3682,Drunken Fountain (3 Missiles) (very low),"local angle = 0
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
3683,Renewing Mist Upside Down Tornado Missile 1,"local numSpirals = 10
local radius = 3 * progress * .7

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = 4 * progress

modelPitch = 135

modelRoll =  2160 * progress",0,1
3684,Renewing Mist Upside Down Tornado Missile 2,"local numSpirals = 10
local radius = 3 * progress * .7

local curAngle = numSpirals * progress * 360 * -1

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = 4 * progress

modelPitch = 135

modelRoll =  2160 * progress",0,1
3685,7.0 Engineering - Summon Reaves,"local magnitude = 20
local transUpAdjust = 3

transUp = magnitude * ( 1 - progress ) + transUpAdjust
transFront = distanceToImpactPos

modelPitch = 90",0,1
3686,Black Rook Hold Dungeon - Blade Barrage Missile,"modelPitch = 90+(470*progress)
transUp = 2 * math.sin(math.pi*progress)",0,0
3687,Meteor Strike (20 Yards) Falls Straight Down + Rotate,"local magnitude = 20

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*720",0,1
3688,Meteor Strike (15 Yards) Falls Straight Down + Rotate,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*720",0,1
3689,7.0 Artifacts - Holy Paladin - The Silver Hand - Avenging Wrath ,"local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) -1
if(transMag >= 0) then
	transMag = 0
end
transMag = (1-(transMag * transMag)) * maxMagnitude",0,1
3690,Black Rook Hold Dungeon - Boss 2 Trash - Arrow ,"local maxSpread = 6
if missileIndex ~= 1 then
	transAngle = 90 * math.pow(-1, missileIndex)
	transMag = progress * rand2 * maxSpread
end
progress = math.pow(progress, 1.25)

transFront = (progress * startDistance) - distanceToFirePos",0,12
3691,Meteor Strike (15 Yards) Falls Straight Down + Rotate 1440,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*1440",0,1
3692,Parabola + Spiral,"transUp=(startDistance/5)*sin(progress*180)

transAngle = progress*(360*startDistance/10)
transMag = 1*sin(progress*180)


",0,1
3693,Parabola (Fixed Height - 18-20 yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 18
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
3694,Pepper Breath Missile,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local overshoot = 10
local rightness = 2*rand1-1
local upMult = 0.25
local rightMult = 0.675


local maxKickBack = 2
local correction = 2


transUp = upMult*overshoot*sin(180*progress)
transRight = rightMult*rightness*overshoot*sin(180*progress)
transFront = overshoot*sin(360*progress)-maxKickBack/startDistance*transUp*correction
",0,1
3695,Long Spiral In double,"

progressMult = math.pow(progress,2)

local invert

invert = missileIndex * 2 - 1

--transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
--transFront = (-cos(progressSpeed *360)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = invert*sin(progressMult *360)*math.pow(1-progress,2)*2
transFront = -startDistance*progress+progressMult*startDistance

scale = math.min((1-progress)*.5+.5,.5)*1.3

",0,2
3696,Chaotic Missile Arcane 2 shots Devour Magic,"a = math.pow(sin(progress*180),2)


local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.4,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor * a
transUp = progressMult*noise2*4*factor *a
transFront = progressMult*noise3*14*factor*(1-progress) * a


scale = 1.8-progress",0,2
3697,"Circle caster (1 Missile, 4yd, 4 rotations, pitch, clockwise)","local startAngle = 90
local radius = 4


--modelPitch = time * 720
modelRoll = 90
modelYaw = time * 2000
local waveHeight = 1
local wavesPerSec = 3
--transUp = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

local curAngle = (progress * 1100) + startAngle

if progress < 0.3 then
	radius = radius * progress/0.3
elseif progress > 0.7 then
	radius = radius * (1-progress)/0.3
end
transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
",0,1
3698,"Circle caster (1 Missile, 4yd, 4 rotations, pitch, notclockwise)","local startAngle = -90
local radius = 4


--modelPitch = time * 720
modelRoll = 90
modelYaw = time * 2000
local waveHeight = 1
local wavesPerSec = 3
--transUp = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

local curAngle = -1*((progress * 1100) + startAngle)

if progress < 0.3 then
	radius = radius * progress/0.3
elseif progress > 0.7 then
	radius = radius * (1-progress)/0.3
end
transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
",0,1
3699,Parabola (Fixed Height - 5-7 yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 5
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
3700,Fast Out - Hook Right With Parabola - KJD,"local factor = 3
local maxWidth = 5
local direction = -1
local height = startDistance / 5

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * (0.5 + (rand2/2)))
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = 4 * progress * (1-progress) * height",0,1
3701,adam's tech,"
-- DOUG TEST CODE BELOW
speed = 50
launchDelay = 0.15

travelTime = totalDistance / speed
totalTime = launchDelay + travelTime
actualProgress = (launchProgress*launchDelay + progress*travelTime) / (totalTime)

transFrontExpected =  totalDistance * actualProgress + (sin(actualProgress*180))*math.pow(startDistance,0.75)
transFrontTravelled = totalDistance * progress
--transFront=-startDistance*progress
transFront = transFrontExpected - transFrontTravelled

--transRight = -(sin(actualProgress*270)+actualProgress)*math.pow(startDistance,.3)

transRight = -(sin(actualProgress*180))*math.pow(startDistance,.3)

-- ADAM CODE BELOW
-- p = progress

--transFront = -startDistance*p+(sin(p*180)*progress*startDistance)
--transUp = math.pow(1-progress,3)*4*progress


--transFront = -startDistance*p+(sin(p*270)+progress)*startDistance*1+(math.pow(p,.2)*distanceToFirePos)
--transRight = -sin(progress*360)*startDistance*(1-progress)*.5


--transFront = -(cos(p*360)-1)*math.pow(startDistance,.7)
--transRight = -sin(p*360)*math.pow(startDistance,.5)
",0,1
3702,Fast Out - W/ Noise (2 Missiles),"local factor = 2
local maxWidth = 5
local direction = 1
local noiseAmt = startDistance * 0.4

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25))
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,2
3703,"Fast Out - W/ Noise (2 Missiles), Parabola (5 yards)","local factor = 2
local maxHeight = 5
local direction = 1
local noiseAmt = startDistance * 0.4

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25)) + ((1-progress)*progress*4*maxHeight)
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,2
3704,Warrior - Crackling Thunder,"local waveHeight = 3 * (startDistance / 30)
local wavesPerSec = 1.6 * (.8 + (.4 * rand2))


transRight = (((waveHeight * sin((time + rand1) * wavesPerSec * 360)) 
				* sin(progress * 90)) * (1-progress) * 2) +
				1 * (cos((rand1+time)*1200)+sin((rand3+time)*2700))
scale = 0.6 + 0.7*(1-progress)
transFront = 10*sin(progress*90)*(1-progress)",0,0
3705,Mage - Greater Pyroblast,"local waveHeight = .95
local wavesPerSec = .5

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,1
3706,Right Yaw Spin (Slow),"local spinRate = -180

modelYaw = time * spinRate",0,1
3707,7.0 Violet Hold - Inquisitor - Shield of Eyes Missile,"if missileIndex == 0 then
   startAngle = 45
elseif missileIndex == 1 then
   startAngle = 135
elseif missileIndex == 2 then
   startAngle = 225
else
   startAngle = 315
end

local curAngle = (progress*1440) + startAngle

if progress > .5 then
   transRight = sin(curAngle) * ((8 * (1-progress)) -2)
   transFront = cos(curAngle) * ((8 * (1-progress)) -2)
   if missileIndex%2 == 0 then
      transUp = (15 * (1 - progress)) + (sin(curAngle) * (2.5 * (1-progress)))
   else
      transUp = (15 * (1 - progress)) + (cos(curAngle) * (2.5 * (1-progress)))
   end
else
   transRight = sin(curAngle) * ((8 * progress) -2)
   transFront = cos(curAngle) * ((8 * progress) -2)
   if missileIndex%2 == 0 then
      transUp = (15 * (1 - progress)) + (sin(curAngle) * (2.5 * progress))
   else
      transUp = (15 * (1 - progress)) + (cos(curAngle) * (2.5 * progress))
   end   

end",0,4
3708,Long Spiral In (5 missiles),"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *540)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *540)*startDistance*math.pow(1-progressSpeed ,.7)*.5
",0,5
3709,Parabola (Single Up and Rand Left/Right),"local angle1 = 65
local angle2 = -65
local maxMagnitude = startDistance * .35

transAngle = angle1
if ( rand1 > 0.5 ) then
	transAngle = angle2
end
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3710,7.0 Suramar Raid - Scorpion - Impale Cosmetic Missile - KJD,"local function sina(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function noise(a) return (sina(a)*sina(a*3)*sina(a*.54)*sina(a*7)*sina(a*12)*sina(a*.5)) end
local function parabola(m) return (4*m*(1-progress)*progress) end
local function clamp(v,min,max) if v<min then v=min elseif v>max then v=max end return v end

local noise1 = noise((time+rand1*4)*50) * (1-(math.pow(progress,2))) * 0.5
local noise2 = noise((time+rand2*4)*50) * (1-(math.pow(progress,2))) * 1
local noise3 = noise((time+rand3*4)*50) * (1-(math.pow(progress,2))) * 1

local radius = progress * 100
local width = 10
transRight = (missileIndex*(width/missileCount)) - (width/2) + parabola(noise1)

faceImpactPos = 1
scale = 2 + (rand1 * 2)
modelRoll = -360 * 2 * progress",0,10
3711,Arrow Barrage,"local maxSpread = 6
if missileIndex ~= 1 then
	transAngle = 90 * math.pow(-1, missileIndex)
	transMag = progress * rand2 * maxSpread
end
progress = math.pow(progress, 1.25)

transFront = (progress * startDistance) - distanceToFirePos",0,8
3712,Parabola (Fixed Height - 10-12 yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 10
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
3713,Meteor Strike (100 Yards),"local magnitude = 100

transUp = magnitude * ( 1 - progress )
",0,1
3714,"Meteor Strike (50 Yards, Slow Spin, Slow Rotate)","local magnitude = 50
local spinRate = 150 + (rand1*300)

transUp = magnitude * ( 1 - progress )
modelPitch = time * spinRate
modelYaw = time * spinRate",0,1
3715,"Parabola (Up and Right, Slight)","local angle = -65
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3716,Artifacts - Ashbringer Meteor Strike,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
modelPitch = 0
",0,1
3717,T2Academy Demo,"--[[transFront = -progress*startDistance

transRight = sin(progress*720)*5

transFront = transFront+cos(progress*720)*5

transUp = sin(progress*1440)*.5


local clean = -progress*startDistance
--local clean = 0
transFront = clean+cos(progress*720)*5--*(sin(progress*180))

--]]

transRight = sin(progress*180)*math.pow(1-progress,2)*10",0,1
3718,Orb of Destruction - MRN,"
scale = math.max(launchProgress, 0.1)


local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3719,Soul Vortex (1 Missile),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,1
3720,Dreadblades - Greed Missile,"local clockwiseOrNah = 1

if rand1 > 0.5 then
	clockwiseOrNah = -1
end

--transFront = math.pow(progress,3) * distanceToImpactPos

transFront = -sin(math.pow(progress, 1.5) * 360) * 2 * rand1
transRight = clockwiseOrNah * sin(progress * 360) * 2 * rand2

",0,1
3721,7.0 Suramar Raid - Gul'dan - Liquid Hellfire Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 7

transUp = parabola(1,1,height)",0,1
3722,7.0 Suramar Raid - Gul'dan - Liquid Hellfire Precast KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end
local progressMult = sin(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,2) 
local up = 5 + (rand1 * 2)
local rev = 540 + (rand2 * 360)

transUp = ((progress*up)*math.pow((1-sin(progress*90)),0.3+rand1/3)) * progressMult + ((1-progress)*parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed*rev)+1)*startDistance*math.pow(1-progressSpeed,0.7)*0.5
transRight = sin(progressSpeed*rev)*startDistance*math.pow(1-progressSpeed,0.7)*0.5
scale = scale + (progress * 2 + rand3 * 1.5)",0,1
3723,7.0 Suramar Raid - Gul'dan - Liquid Hellfire Precast Flipped KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end
local progressMult = sin(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,2) 
local up = 5 + (rand1 * 2)
local rev = 540 + (rand2 * 360)

transUp = ((progress*up)*math.pow((1-sin(progress*90)),0.3+rand1/3)) * progressMult + ((1-progress)*parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed*rev)+1)*startDistance*math.pow(1-progressSpeed,0.7)*0.5
transRight = sin(progressSpeed*rev)*startDistance*math.pow(1-progressSpeed,0.7)*0.5*-1
scale = scale + (progress * 2 + rand3 * 1.5)",0,1
3724,7.0 Suramar Raid - Gul'dan - Phase 2 Transition Missile - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end
local p = progress^1.25
local rev = 1440
local radius = 5
local up = 1
local up_var = 6
local split = 0.6

if progress <= split then
	local p = ((progress/split)/2) + (split/2)
	radius = radius * p
end

transFront = (sin((p+rand1)*rev)) * (p * (5*rand2) + radius) - distanceToFirePos
transRight = -(cos((p+rand1)*rev)) * (p * (5*rand1) + radius)
transUp = cos((p+rand2)*2*rev) * p + up + parabola(rand2 * up_var)

local progressmult = 1
if progress > split then
    local p = progress - split
    local offset = 30
    p = p/(1-split)
    p = math.pow(p,4)
    transUp = transUp + p*rand1*offset
    transFront = transFront + p*((-1*offset/2)+(rand2*offset))
    transRight = transRight + p*((-1*offset/2)+(rand3*offset))
    progressmult = 1 - p
end

transFront = transFront * progressmult
transRight = transRight * progressmult

scale = 0.000001 + parabola(2) * (2 * ((progress^3)/2))",0,0
3725,7.0 Suramar Raid - Gul'dan - Watchful Eyes Nuke - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end
local factor = 6
local maxWidth = 3

local height = 5
local depth = 1 + rand1 * 3

local direction = rand2
if direction > 0.66 then direction = -1
elseif direction < 0.33 then direction = 1
else direction = 0
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth)) 
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos + parabola(depth)
transUp = math.abs(cos(math.pi * direction)) * progress * (1-progress) * height",0,1
3726,Stormheim - Nathanos - Cone - MRN,"local maxSpread = 8
transAngle = 90 * math.pow(-1, missileIndex)

transMag = progress * rand2 * maxSpread
transFront = (progress * startDistance) - distanceToFirePos
",0,20
3727,Meteor Strike (200 Yards Underground coming up),"local magnitude = 200

transUp = magnitude * -1 *( 1 - progress )
",0,1
3728,Demon Hunter - Consume Soul,"local TR --initial transRight
local TF --initial transRight

local rightAmount
local frontAmount
local LP = math.pow(launchProgress*2.5,.5) --refactored launchProgress

rightAmount = 2*(rand1+1)
frontAmount = 2*(rand2-.5)

if launchProgress <= .4 then
    TR = LP*rightAmount
    TF = LP*frontAmount
    transUp = sin(LP*180)*LP
    
else
	TR = rightAmount
    TF = frontAmount
     
end

transFront = TF-math.pow(progress,2)*frontAmount

transRight = (math.floor(rand3*2)*2-1)*(TR-math.pow(progress,2)*rightAmount)

faceImpactPos = 1",0,0
3729,Lurking Eruption,"local magnitude = 100
local spinRate = 360*6

transUp = magnitude * -1 *( 1 - progress )
transFront = (distanceToImpactPos -3)


",0,1
3730,Demon Hunter - Consume Soul Smooth,"-- How to Generate more than 3 random numbers
local rand4
local rand5
rand4 = (rand1*10)%1
rand5 = (rand2*10)%1


rightAmount = 2*(rand1+1)
frontAmount = 2*(rand2)

faceImpactPos = 1

transRight = (math.floor(rand3*2)*2-1)*math.pow(sin(progress*180),.5)*rightAmount
transFront = -math.pow(sin(progress*180),.5)*frontAmount
transUp = sin(progress*180)*(rand4-.5)*2+progress*(rand5+.5)

",0,0
3731,"Drunken Fountain (3 Missiles) (Medium, No Speed Scalar)","local angle = 0
local maxMagnitude = startDistance * .9
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude",0,3
3732,Comet Test,transFront = 100,0,0
3733,Timeworn Strand - Earthen Spear,"faceImpactPos = 1
--local phaseTwoStart = .7
--local p = progress - phaseTwoStart

if launchProgress < 1 then
    transFront = 2 * (1 - sin(launchProgress*90))
    transUp    = 2 * math.pow(launchProgress, 0.3)
    modelPitch = 45 * (1-launchProgress)
    transRight = -2.5
else
    transFront = 0
    transUp    = 2 * (1-progress)
    modelPitch = 0
    transRight = -2.5 * (1-progress)
end



transRight = transRight + (1 - progress) * 2 * cos(rand1*180+90)
transFront = transFront + (1 - progress) * 2 * sin(rand1*180+90)

		                      --YAY MATH
modelYaw = 90 - atan( (startDistance - 2 * sin(rand1*180+90))
		   			  / (2.5 - 2 * cos(rand1*180+90)) ) 

-- -- (1-progress)*((45-startDistance)+10)


if rand2 > 0.5 then
	transRight = -1 * transRight
	modelYaw = -1 * modelYaw
end
",0,0
3734,Doomhammer - Unleash Doom ,"
faceImpactPos = 1
local phaseTwoStart = .85
local progressMult
local p = progress - phaseTwoStart 


if progress <= phaseTwoStart then
    transFront = -0-startDistance-sin(progress/phaseTwoStart) - 5
    transUp = math.pow(progress,.3)*2
    --modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    --transRight = -3
    
else  
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * (-startDistance-5)) --* -101
    transUp = ((1 - p/2) * math.pow(progress,.3)*2)
    --modelPitch = sin(modelPitch*0)
    --faceImpactPos = 0
    --transRight = -3*(1-p)
    
end

--modelYaw = (1-progress)*100


--transRight = transRight+cos(rand1*180+90)*2*(1 - p)
--transFront = -transFront+sin(rand1*180+90)*2*(1 - p)


--[[
local radius = startDistance
local right = radius * math.cos(rand1*1*3.14)
local front = radius * math.sin(rand1*1*3.14)

if launchProgress < 1 then
	faceImpactPos = 0
	transRight = right
	transFront = distanceToImpactPos + front
	transUp = 2 * math.pow(launchProgress, 0.3)
	
	modelYaw = math.deg(math.atan2(right,front)) + 180
	
	
	
else
	faceImpactPos = 1
	transRight = right * (1-progress)
	transFront = distanceToImpactPos + (front * (1-progress))
	
	transUp = 2 * (1-progress)
end
--]]
",0,1
3735,Demon Hunter - Create Globe,"--local p = math.pow(progress, 0.25)
--transUp = math.sin
local angle = 0
local maxMagnitude = startDistance * 0.25
local p = progress

progress = math.pow(progress, 2)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScaler = 0.2 + 3 * progress",0,0
3736,7.2.5 World Boss - Lethon - Whirl Missile Cosmetic - KJD,"local radius = progress * totalDistance

local arc = 45
local anglePerMissile = arc / missileCount
local curAngle = 0
local angleOffset = arc * 2.25
--if (missileCount%2)==0 then
--	curAngle = ((missileIndex-1)-((missileCount-1)/4))*anglePerMissile + angleOffset
--else
	curAngle = (((missileIndex-1)-((missileCount-1)/2))/math.floor(missileCount/2))*(arc/2) + angleOffset
--[[

	curAngle = (0[,1,2,3,4] - ((5-1)/2))/2 = 
	
--]]
--end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

--scale = 2*(progress)
faceImpactPos = 1
modelYaw = curAngle-75

local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 3 + (1 * rand2)
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,5
3738,Fast Out - Hook Left With Parabola - KJD,"local factor = 3
local maxWidth = 5
local direction = 1
local height = startDistance / 5

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * (0.5 + (rand2/2)))
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = 4 * progress * (1-progress) * height",0,1
3739,Meteor Strike (20 Yards) Falls Straight Down,"local magnitude = 20

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3740,7.0 Suramar Raid - Scorpion - Crystal Shard Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = startDistance * .5
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)
modelPitch = 10+110
modelRoll = -10",0,1
3741,Cenarius Encounter - Thorns Missile,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 2
local maxKickBack = 5

transAngle = startAngle + ((rand1) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude",0,1
3742,Death Knight - Death's Caress,"local wrap = totalDistance*.5+2
local flip = (missileIndex*2)-1

transFront = sin(270*progress)*wrap+progress*wrap

transRight = -(sin(progress*360))*math.pow(startDistance,.45)*flip

transUp = sin(time*720+(rand1*10000))*sin(progress*180)*.6",0,2
3743,Mistweaver - Mists of Wisdom Missile,"local clockwiseOrNah = 1

if rand1 > 0.5 then
	clockwiseOrNah = -1
end

--transFront = math.pow(progress,3) * distanceToImpactPos

transFront = -sin(math.pow(progress, 2) * 360) * (1 + rand1)
transRight = clockwiseOrNah * sin(progress * 360) * (1 + rand2)

",0,1
3744,Stormheim - Inkbinder - Missile - MRN,,0,0
3745,Parabola + Offset Down 3.5y,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transUp = -3.5",0,1
3746,"Parabola (High, Yaw = 90)","local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = 90",0,1
3747,Cenarius Encounter - Summon Dryad Visual Missile,"progress = progress*progress

local transFront1 = (sin((progress+rand1)*720)) * (progress * (2*rand2) + 13) - distanceToFirePos 
local transRight1 = -(cos((progress+rand1)*720)) * (progress * (2*rand1) + 13)
transUp = cos((progress+rand2)*(400 + 400*rand2)) * (progress + 2) + 4

local progressmult = 5 --Start Radius
if progress > 0.6 then
    local p = progress - 0.6
    p = p/0.4
    p = math.pow(p,4)
    transUp = transUp + p*30
    progressmult = 1 - p
end

local radiusStart = .5
transFront = transFront1 * radiusStart
transRight = transRight1 * radiusStart",0,0
3748,Hunter - Harpoon,"local angle = 0
local maxMagnitude = 1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
3749,Paladin - Holy Wrath,"--transUp = progress*2-1--sin(progress*180)*3*(1-progress)
--transUp = (1 - (transUp * transUp))*(rand2*2+1)

--transRight = rand1*sin(progress*180)*3*(1-progress)

transAngle = (math.sqrt(rand1)*100)
if rand2>0.5 then transAngle = transAngle*-1 end
transMag = sin(progress*180)*(1-progress)*(6*startDistance/24+1)",0,0
3750,7.0 Nightmare Raid - Boss - Shifter - Razor Wing Cosmetic,"	local coneWidth = 60
	local coneRotation = 65
	local coneNoiseFactor = 0.75


speedScalar = ((progress - 1)*(progress - 1))*math.random(1,3)
modelPitch=math.sin(progress*1080*math.pi/180)*math.random(8,27)
modelRoll=progress*1080

	local coneOffset
	local resultWidthAtDist = math.tan(math.rad(coneWidth/2))*startDistance

		if (missileCount%2)==0 then
			local offsetBase = ((resultWidthAtDist*2)/(missileCount-1))
			if (missileIndex+1)<=(missileCount/2) then
				if missileIndex+1==1 then
					coneOffset = (offsetBase/2)
				else
					coneOffset = (offsetBase/2)+(offsetBase*missileIndex)
				end
				transAngle = coneRotation
			else
				if (missileIndex+1)-(missileCount/2)==1 then
					coneOffset = (offsetBase/2)
				else
					coneOffset = (offsetBase/2)+(offsetBase*((missileIndex)-(missileCount/2)))
				end
				transAngle = 360 - coneRotation
			end
		else
			if (missileIndex+1)<=(missileCount/2) then
				coneOffset = (resultWidthAtDist) * ((missileIndex+1)/math.floor(missileCount/2))
				transAngle = coneRotation
			elseif (missileIndex+1)>=(missileCount/2) and (missileIndex+1)~=missileCount then
				coneOffset = (resultWidthAtDist) * ( ((missileIndex+1)-math.floor(missileCount/2)) / math.floor(missileCount/2) )
				transAngle = 360 - coneRotation
			else
				coneOffset = 0
				transAngle = 0
			end
		end


		transMag = progress * coneOffset
		transUp = coneNoiseFactor * rand2 * progress",0,6
3751,Cenarius Encounter - Allies of Nightmare Missile 2,"local r1 = rand1*2-1
local r2 = rand2*2-1

progress = progress*progress 
 
transRight = math.sin(progress*3.14) * 8 * r1 + (rand3*2-1)*3
transUp = math.sin(progress*3.14) * 8 * r2 + (rand2*2-1)*3
transFront = (rand3*20-10)*(1-progress)*progress",0,0
3752,Cenarius Encounter - Allies of Nightmare Missile,"--[[local r1 = rand1*2-1
local r2 = rand2*2-1
 
local transFront1 = (sin((progress+rand1)*720)) * (progress * (2*rand2) + 13) - distanceToFirePos 
local transRight1 = -(cos((progress+rand1)*720)) * (progress * (2*rand1) + 13)
transFront = transFront1
transRight = transRight1
transUp = math.sin(progress*3.14) * 8 * r2 + (rand2*2-1)*3
transFront = (rand3*20-10)*(1-progress)*progress
progress = progress*progress 
--]]
local r1 = rand1*2-1
local r2 = rand2*2-1

progress = progress*progress 
 
transRight = math.sin(progress*3.14) * 8 * r1 + (rand3*2-1)*3
transUp = math.sin(progress*3.14) * 8 * r2 + (rand2*2-1)*3
transFront = (rand3*20-10)*(1-progress)*progress",0,0
3753,Shaman - Stormlash,"local angle = -45
local maxMagnitude = 2.5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch = 90",0,1
3754,Combat Revamp - Shield Throw Offset Right,transRight = (1-progress)*-.5,0,0
3755,7.0 Suramar Raid - Gul'dan - Khadgar - Illidan's Soul A - KJD,"local outerWheelSpinRate = 180 	-- 1 spin / sec
local angleOffset = 0 + (rand1 * 45)
local outerWheelMag = ((progress * 4) * (1-progress) * 4) * 2
local missileAngle = outerWheelSpinRate * time + angleOffset

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transAngle = missileAngle
transMag = outerWheelMag
scale = 1 + (progress * (1-progress) * 4 * 2)",0,1
3756,Spiral Flat 30yd min JS ,"local numSpirals = 5
local minRadius = 30
local radius = minRadius + (10 * progress * (rand1 * 5))

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2 * 5",0,3
3757,Spiral Flat 50yd min JS ,"local numSpirals = 5
local minRadius = 50
local radius = minRadius + (10 * progress * (rand1 * 5))

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = rand2 * 5",0,3
3758,Revamp Mage - Glacial Spike Missile,"faceImpactPos = 1
local phaseTwoStart = .9
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = -distanceToFirePos-sin(progress/phaseTwoStart * (progress*180)) *3
    transUp = math.pow(progress,.3)*2
    modelPitch = (progress*phaseTwoStart)*20
    --transRight = 3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    faceImpactPos = 1
    --transRight = 3*(1-p)
    
end

--modelYaw = -(1-progress)*20-10
--transRight = transRight-cos(rand1*180+90)*2*(1 - p)
--transFront = transFront+sin(rand1*180+90)*2*(1 - p)
",0,0
3759,Spiral Flat 20yd absolute,"local numSpirals = 5
local radius = 10

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

transUp = progress * distanceToFirePos",0,3
3760,Spiral Flat 40yd absolute,"local numSpirals = 5
local radius = 35

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

--transUp = progress * distanceToFirePos",0,5
3761,Spiral Flat 50yd absolute,"local numSpirals = 5
local radius = 50

local curAngle = numSpirals * progress * 360

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)

--transUp = rand2 * 5",0,3
3762,Hunter Flare,"--p = progress * 11

local height = 9.1
local speed = 25
local triggerDuration = 20
local phase2 = (startDistance / speed) / ((startDistance / speed) + triggerDuration)

local p1progress = (progress/phase2)
local p2progress = (progress-phase2)/(1-phase2)

local pow = 0.1
local cirPct = 110
p = progress * ((speed / startDistance) * triggerDuration)

if progress<phase2 then
	--transFront = -startDistance*progress+startDistance*p*.9
	--transUp = sin(p*90)*4+p*5
	
	transFront = -distanceToFirePos
	transFront = transFront + p * startDistance * .9
	transFront = transFront * math.pow(p1progress,pow)
	
	transUp = sin(p1progress*cirPct)*(height)
	transUp = transUp * math.pow(p1progress,pow) + p
else
	--transFront = -startDistance*progress+startDistance*.9+progress*startDistance*.1
	--transUp = height*(1-math.pow(progress,4))
	
	transFront = -distanceToFirePos
	transFront = transFront + startDistance * .9
	transFront = transFront + p2progress * startDistance * .1
	
	transUp = height*(1-sin(p2progress*(180-cirPct)))
end",0,1
3763,"Fast Out - W/ Noise, Parabola (10 yards)","local factor = 2
local maxHeight = 10
local direction = 1
local noiseAmt = startDistance * 0.2

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25)) + ((1-progress)*progress*4*maxHeight)
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,1
3764,Meteor Strike (25 Yards) Left Side Diagonal Down,"local magnitude = 25

transRight = magnitude/2 * (1.0 - progress)
transUp = magnitude * (1.0 - progress)
transFront = distanceToImpactPos",0,1
3765,Boomerang (Arc Right) + ModelRoll: 90 + Grow to 3x,"local angle = 270
local maxMagnitude = startDistance * .2
local spinRate = 720
local modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate
scale=(sin(progress*90)*2)+1
",0,1
3766,Hunter - Sidewinder,"local frequency = startDistance/8
local spread = 6+startDistance/2
local weaveFrequency = 3
local heightMult = .05

local snakeProg = math.pow(progress,0.75)

transRight = sin((snakeProg*180*frequency+120*(missileIndex+rand1/3)))*spread*math.pow(sin(snakeProg*180),.5)*math.pow(snakeProg,1.3)
transUp = cos((snakeProg*180*weaveFrequency*frequency+120*(missileIndex+rand1/3)))*spread*math.pow(sin(snakeProg*180),.5)*math.pow(snakeProg,1.3)*heightMult

transFront = (1-progress) --accounts for weapon scale distances
 
--transRight = sin(progress*180*2)*math.pow(progress,1.5)*10 ",0,3
3767,Revamp Warrior - Bladestorm Decay Missile,"faceImpactPos = 1

local amp = 0.5
local freq = 1
local decay = 2

local n = amp*(sin(progress*freq*360)) 

if n>0.5 then
	transUp = amp*(sin(progress*freq*360))
else
	transUp = amp*(-sin(progress*freq*360))
end

--transFront = 1 - distanceToFirePos",0,1
3768,"Parabola (Very Very VERY High, -90 Pitch)","local angle = 0
local maxMagnitude = startDistance * 1.4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch=-90",0,1
3769,Artifact Mage - Ebon Icicles Missile,"faceImpactPos = 1
local phaseTwoStart = .6
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = -distanceToFirePos-sin(progress/phaseTwoStart * (progress*200)) 
    transUp = math.pow(progress,.2)
    modelPitch = (progress*phaseTwoStart)*20
    --transRight = 3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.2)
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    faceImpactPos = 1
    --transRight = 3*(1-p)
    
end",0,0
3770,Blakc Icicle test,"speedAbs = math.min(120, math.pow(0.8+progress * 8, 8) * 100)

else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.2)
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    faceImpactPos = 1",0,0
3771,"Arcane Missiles (New, 2 Missiles)","local factor = 1.25
local maxWidth = 1

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

--scale = math.max(math.pow(progress,factor*2),progress)",0,2
3772,Warrior - Heroic Throw,modelPitch = time*1800,0,0
3773,Stormheim - Estrid - Arrow Barrage - 03 Cosmetic Cone - MRN,"local maxSpread = 8
transAngle = 90 * math.pow(-1, missileIndex)

transMag = progress * rand2 * maxSpread
transFront = (progress * startDistance) - distanceToFirePos
",0,20
3774,Cosmetic Multi-Shot - 120 Degree Spread,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local RemappedIndex=remap(missileIndex,1,missileCount,-50,50)
transRight=distanceToFirePos*sin(RemappedIndex+(rand1*5)+(rand2*-5))
transUp=sin(90*progress)*remap(rand3,0,1,-.5,1.5)",0,18
3775,7.0 Highmountain - Vignette - Shard - Crystal Missile - RZN,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local RemappedIndex=remap(missileIndex,1,missileCount,-30,30)
transRight=distanceToFirePos*sin(RemappedIndex+(rand1*5)+(rand2*-5))
transUp=sin(90*progress)*remap(rand3,0,1,-.5,1.5)",0,10
3776,Artifact Assassination Rogue - Blades of Sorrow ,"speedAbs = math.min(120, math.pow(0.3+progress * 6, 6) * 100) ",0,0
3777,7.0 Suramar Raid - Dreadlord - Soul Vortex,"local percentOfCircle = 0.35
local startAngle = 0

if missileIndex == 0 then
	radius = 12
    transUp = .5
elseif missileIndex == 1 then
	radius = 12
	startAngle = 60
    transUp = 1
elseif missileIndex == 2 then
	radius = 12
	startAngle = 120
    transUp = 1.5
elseif missileIndex == 3 then
	radius = 13
	startAngle = 180
    transUp = 2
elseif missileIndex == 4 then
	radius = 13
	startAngle = 240
    transUp = 2.5
elseif missileIndex == 5 then
	radius = 14
	startAngle = 300
    transUp = 3
elseif missileIndex == 6 then
	radius = 14
	startAngle = 30
    trasnUp = 3.5
elseif missileIndex == 7 then
	radius = 15
	startAngle = 90
    transUp = 4
elseif missileIndex == 8 then
	radius = 15
	startAngle = 150
    transUp = 4.5
elseif missileIndex == 9 then
	radius = 16
	startAngle = 210
    transUp = 5
elseif missileIndex == 10 then
	radius = 19
	startAngle = 60
    transUp = 5
elseif missileIndex == 11 then
	radius = 20
	startAngle = 180
    transUp = 5
elseif missileIndex == 12 then
	radius = 20
	startAngle = 270
    transUp = 5
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)
transUp = transUp/2

-- spin them a little so they look good from the side
modelRoll = 60 * rand3",0,13
3778,Hunter - Wildfire Bomb,"local blend = math.pow(startDistance/40,1.35)

local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local far = parabola(1,1,startDistance*.1)
local near = 0

transUp = blend*far+(1-blend)*near

scale = 0.95
--modelPitch = time * 360
--modelYaw = time * 45",0,1
3779,Hunter - Dragonsfire Grenade Fire,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

transUp = parabola(1,1,3)
",0,1
3780,7.0 - Wardens - Throw - One Way - No Roll,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=2
modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
3781,Warlock - Tormented Soul Spawn,"a = math.pow(sin(progress*180),2)


local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local progressMult = math.min(0.4,sin(progress*180))*(1-progress)

local t1 = (time+rand1*2+2)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*2+2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*2+2)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor * a
transUp = progressMult*noise2*4*factor + (progress*(1-progress))*10
transFront = progressMult*noise3*14*factor*(1-progress) * a


scale = 1.8-progress",0,3
3782,7.0 Class Hall - Hunter - Campaign - Scenario - Hakkar - Chaotic,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local percentOfCircle = 2
local startAngle = 0
local radius = 3

if launchProgress < 1 then
	local curAngle = (percentOfCircle * launchProgress * 360) + startAngle

	transFront = (sin(curAngle) * radius) - distanceToFirePos
	transRight = (cos(curAngle) * radius)
	transUp	   = (cos(curAngle) * radius) * .5
else
	local parabolicFactor = startDistance*.4
	local frontP = HorizontalSCurve(progress,1.2)
	local upP    = HorizontalSCurve(progress,1.2)

	
	transFront = (frontP * startDistance ) - distanceToFirePos
	local counteract = -.095*transFront
	transUp    = counteract + (-1 * (parabolicFactor * (upP * upP ) )) + (upP * parabolicFactor) 
end",0,1
3783,Spire of Light and Shadow - Precast Missile,"progress = progress * progress
local clockwiseOrNah = 1

if rand1 > 0.5 then
	clockwiseOrNah = -1
end

if rand3 > 0 then
	speedScalar = rand3 * 3
end


--transFront = math.pow(progress,3) * distanceToImpactPos

transFront = clockwiseOrNah * sin(progress * 180)
transRight = clockwiseOrNah * sin(progress * 360) * (1 + rand1)
--transUp = sin(progress * 180)

--transFront = -sin(progress * 360) * (1 + rand1)",0,1
3784,Parabola (Single Up and Rand Left/Right -- Less Extreme),"local angle1 = 30	
local angle2 = -30
local maxMagnitude = startDistance * .1

transAngle = angle1
if ( rand1 > 0.5 ) then
	transAngle = angle2
end
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3785,7.0 Azsuna Adventure - Rare Elite Dead Man's Bay - Goblin,"local maxSpread = 5
transAngle = 360 * rand1
progress = math.pow(progress, 1.5)
transMag = progress * rand2 * maxSpread
transFront = (progress * startDistance) - distanceToFirePos",0,50
3786,7.0. - Class Hall - Mage - Campaign - Felfrost Bolt (1),"local outerWheelSpinRate = 360
local outerWheelMag = .5

local p 
p = (1 - progress)* 2

local missileAngle = outerWheelSpinRate * p

transUp = outerWheelMag * math.sqrt(p) * cos ( missileAngle )
transRight = outerWheelMag * math.sqrt(p) * sin ( missileAngle )
transFront = -distanceToFirePos + ( (progress * progress) * (distanceToFirePos))",0,1
3787,7.0. - Class Hall - Mage - Campaign - Felfrost Bolt (2),"local outerWheelSpinRate = 360
local outerWheelMag = .5

local p 
p = (1 - progress)* 2

local missileAngle = outerWheelSpinRate * p

transUp = outerWheelMag * math.sqrt(p) * cos ( missileAngle + 180)
transRight = outerWheelMag * math.sqrt(p) * sin ( missileAngle + 180)
transFront = -distanceToFirePos + ( (progress * progress) * (distanceToFirePos))",0,1
3788,Orbital Strike (Infernal Low),"local magnitude = totalDistance * 1.5

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3789,"Parabola (High, Yaw Spin) Grow 0.1->1","scale = 0.1 + 0.75 * progress

local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate",0,0
3790,Parabola (Legion Siege Cannon),"local angle = 0
local maxMagnitude = startDistance * .1
modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3791,7.0 - Val'sharah - Ancient Throw Boulder (KMS),"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = -200
local yawRate = 45
local rollRate = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelYaw = time * yawRate
modelRoll = time * rollRate",0,1
3792,7.0 Val'sharah - Nightmare Ancient - Boulder Toss (RKS),"local angle = 0
local maxMagnitude = startDistance * .2
local spinRate = -200
local yawRate = 45
local rollRate = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = 0.7 + 1.2 * progress

modelPitch = time * spinRate
modelYaw = time * yawRate
modelRoll = time * rollRate",0,1
3793,7.0 Kirin Tor Patrols - Artillery - Shoot,"local angle = 0
local maxMagnitude = startDistance * .20

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
scale=time+1",0,1
3794,7.0 Jewelcrafting - JewelCraft Match,"local maxMagnitude = startDistance * .35

local upSlope = 2
local outDistance = 2

local angle = rand1*2*math.pi

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude
transUp = transUp + progress*upSlope

transRight = progress*math.sin(angle)*outDistance
transFront = progress*math.cos(angle)*outDistance
",0,1
3795,7.0 Suramar Raid - Anomaly - Summon Add - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = .5+(.5*rand1)
local wavesPerSec = 1+(1*rand2)
local angle = 0
local maxMagnitude = startDistance * .50
local spinRate = math.max(360*startDistance/10,180)*(.5+(.5*rand3))


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (sin(progress*180)*3)*sin(progress*spinRate)
transUp = (sin(progress*180)*3)*cos(progress*spinRate)
",0,1
3796,7.0 Suramar Raid - Illidan - Manifest Azzinoth Missile - KJD,"local angle = 0
local maxMagnitude = startDistance * .1
local revolutions = 0.5
local spin_offset = 75

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * ((revolutions * 360) + spin_offset)
speedScalar = 0.5",0,1
3797,Helheim Raid - Helya - Corrupted Breath Missile - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end

local radius = 5
local variance = 2
local degrees = 1440

transFront = (sin((progress+rand1)*degrees)) * (progress * (variance*rand2) + radius) + distanceToImpactPos
transRight = -(cos((progress+rand1)*degrees)) * (progress * (variance*rand1) + radius)
transUp = cos((progress+rand2)*(1600 + 1600*rand2)) * (progress + 2) + 2

transFront = parabola(transFront)
transRight = parabola(transRight)
transUp = parabola(transUp)

--scale = math.max(scale * math.pow(1-progress,1/2),0.01)",0,1
3798,7.0 Artifacts - Havoc DH - Warglaives of the Deceiver Offhand,"local startAngle = 90
local radius = 2.5


--modelPitch = time * 720
modelRoll = 75
modelYaw = time * -625
local waveHeight = 6
local wavesPerSec = 3
--transUp = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

local curAngle = (progress * 1550) + startAngle

if progress < 0.3 then
	radius = radius * progress/0.3
elseif progress > 0.7 then
	radius = radius * (1-progress)/0.3
end

if progress < 0.2 then
	scale = progress*5
elseif progress >= 0.2 and progress <= 0.8 then
	scale = 1
elseif progress > 0.8 then
	scale = (1-progress)*5
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
3799,7.0 Artifacts - Havoc DH - Warglaives of the Deceiver Mainhand,"local startAngle = 90
local radius = 4


--modelPitch = time * 720
modelRoll = 75
modelYaw = time * 825
local waveHeight = 6
local wavesPerSec = 3
--transUp = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

local curAngle = -1*((progress * 1550) + startAngle)

if progress < 0.3 then
	radius = radius * progress/0.3
elseif progress > 0.7 then
	radius = radius * (1-progress)/0.3
end

if progress < 0.2 then
	scale = progress*5
elseif progress >= 0.2 and progress <= 0.8 then
	scale = 1
elseif progress > 0.8 then
	scale = (1-progress)*5
end

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
3800,Item - 7.0 - Trinket - Pulse,modelPitch = 180,0,1
3801,Yaw 90,modelYaw = 90,0,1
3802,Marks Hunter Windrunner Bow Aimed Shot Wind Arrow,"faceImpactPos = 1
local phaseTwoStart = .6
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = -distanceToFirePos-sin(progress/phaseTwoStart * (progress*200)) 
    --transUp = math.pow(progress,.2)
    transUp = rand2*1.5
    modelPitch = (progress*phaseTwoStart)*20
    transRight = -.5 + (rand1*1.5)
    
else
    transFront = -distanceToFirePos
    --transUp = math.pow(progress,.2)
    transUp = rand2*1.5
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    faceImpactPos = 1
	transRight = -.5 + (rand1*1.5)
    
end",0,1
3803,"Parabola (one rotation, 300 degrees)","local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 560+180

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * spinRate

",0,1
3804,BFE - Accelerated Missile (Pitched 90),"--local magnitude = totalDistance * 2

--transUp = magnitude * ( 1 - progress )
--transUp = totalDistance + -magnitude * ( progress )
--transFront = distanceToImpactPos
speedScalar = 0.2 + 5 * progress
modelPitch = 120



",0,1
3805,BFE - Accelerated Missile (Faster),speedScalar = 0.2 + 5 * progress,0,1
3806,DO NOT USEBFE - Accelerated Missile (Faster),speedScalar = 0.2 + 5 * progress,0,1
3807,Shattered Souls Missile Motion,"transRight = sin(progress*180)*startDistance*.5

transFront = -sin(progress*360)*startDistance*.1

transUp = sin(progress*180)*sin((rand1*500+270)*(time+rand2*1000))
",0,0
3808,Death Knight - Crystalline Swords,"speedAbs = math.min(120, math.pow(0.3+progress * 3, 3) * 100) ",0,0
3809,Meteor Strike (200 Yards) Falls Straight Down,"local magnitude = 200

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3810,Meteor Strike (400 Yards) Falls Straight Down,"local magnitude = 400

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3811,Lava Fountain Toy,"local angle = 0
local maxMagnitude = startDistance * .75

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

scale = 0.5 + (rand1 * 2)",0,1
3812,Mage - Ebonbolt,"speedAbs = math.min(60, math.pow(0.3+progress * 3, 3) * 20) ",0,1
3813,7.0 Nightmare Raid - Mythic Boss - Shifter - Violent Winds,"	local coneWidth = 60
	local coneRotation = 65
	local coneNoiseFactor = 0.75


speedScalar = ((progress - 1)*(progress - 1))*math.random(1,3)
modelPitch=math.sin(progress*1080*math.pi/180)*math.random(8,27)
modelRoll=progress*1080

	local coneOffset
	local resultWidthAtDist = math.tan(math.rad(coneWidth/2))*startDistance

		if (missileCount%2)==0 then
			local offsetBase = ((resultWidthAtDist*2)/(missileCount-1))
			if (missileIndex+1)<=(missileCount/2) then
				if missileIndex+1==1 then
					coneOffset = (offsetBase/2)
				else
					coneOffset = (offsetBase/2)+(offsetBase*missileIndex)
				end
				transAngle = coneRotation
			else
				if (missileIndex+1)-(missileCount/2)==1 then
					coneOffset = (offsetBase/2)
				else
					coneOffset = (offsetBase/2)+(offsetBase*((missileIndex)-(missileCount/2)))
				end
				transAngle = 360 - coneRotation
			end
		else
			if (missileIndex+1)<=(missileCount/2) then
				coneOffset = (resultWidthAtDist) * ((missileIndex+1)/math.floor(missileCount/2))
				transAngle = coneRotation
			elseif (missileIndex+1)>=(missileCount/2) and (missileIndex+1)~=missileCount then
				coneOffset = (resultWidthAtDist) * ( ((missileIndex+1)-math.floor(missileCount/2)) / math.floor(missileCount/2) )
				transAngle = 360 - coneRotation
			else
				coneOffset = 0
				transAngle = 0
			end
		end


		transMag = progress * coneOffset
		transUp = coneNoiseFactor * rand2 * progress",0,6
3815,Cenarius - Cosmetic Channel Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = 1
local wavesPerSec = 2
local angle = 0
local maxMagnitude = startDistance * .50
local spinRate = math.max(360*startDistance/10,180)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (sin(progress*180))*sin(progress*spinRate)
transUp = (sin(progress*180))*cos(progress*spinRate)
scale = 1 + (1.5 * progress)",0,0
3816,Illidan Origins - RL - (Fast Spin),"local spinRate = 3440

modelPitch = time * spinRate",0,1
3817,Demon Hunter - Shattered Souls Consume Soul Missile Motion,"transRight = sin(progress*180)*startDistance*.5

transFront = -sin(progress*360)*startDistance*.1

transUp = sin(progress*180)*sin((rand1*500+270)*(time+rand2*1000))
",0,0
3818,Demon Hunter - Shattered Souls Consume Soul Missile Motion,"local t = progress

local sideScale = (rand3 * 0.25) + 0.75
if (rand3 > 0.5) then
	sideScale = sideScale * -1.0
end

transRight = sin(t*180)*startDistance*0.4*sideScale

transFront = -sin(t*720)*startDistance*0.05

transUp = sin(t*180)*sin((rand1*500+270)*(time+rand2*1000)) + (1-progress)--+sin(progress*180)*.5

-- Slow finish as it settles into position
out_speedScale = 1.0
if (travelDirection < 0) then
	-- Heading back to DH, so start slow, rather than finish slow
	t = 1.0 - t;
end
if (t > 0.5) then
	out_speedScale = sin(t*180)*0.75 + 0.25
end",0,0
3819,7.0 Artifacts - MM Hunter - Call to the Hunter Missiles,"local angle = (-20*rand1)+(20*rand2)
local maxMagnitude = startDistance * .15 + (rand3)

transRight = .5*(angle-(progress*angle))
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3820,7.0 Suramar Raid - Trash - Magistrix - Sweeping Strike - Jump,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end
local Rectwidth=14
transRight=remap(missileIndex,1,missileCount,-1*Rectwidth/2,Rectwidth/2)+((cos(1080+remap(rand1,0,1,-180,45))*progress)*.1)
transUp=(sin((720+remap(rand2,0,1,-180,90))*progress)*.25)
transFront=remap(rand3,0,1,-.2,.2)",0,20
3821,7.0 Suramar Raid - Trash - Magistrix - Siphon Nightwell,"local Rotations=2
local Rolls=5
local SpiralProgress=Rotations*360*progress
local SpiralCoeffecient=1/24
transFront=SpiralCoeffecient*SpiralProgress*cos(SpiralProgress+180)+distanceToImpactPos
transRight=SpiralCoeffecient*SpiralProgress*sin(SpiralProgress)
transUp=1*rand2*sin(360*5*progress)
modelRoll=(Rolls*rand3)*360*progress",0,0
3822,Priest - Penance,"speedScalar = .5*(progress+0.1)+1
scale = math.min(1,progress*5)

--this used to random left or right, switched to more of a organic feel
local angle1 = rand1*60-30

local maxMagnitude = startDistance * .025

transAngle = angle1

transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,1
3823,Academy - MissileScript,"transRight = sin(360*progress)*-startDistance*(1-progress)*.5


transUp = cos(360*progress)*-startDistance*(1-progress)*.5




",0,1
3824,7.0 Suramar Raid - Illidan - Visions Portal Missile Right - KJD,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 40

if progress <=  parabolaStart then
	transFront = sin(progress * 1530) * 20 - distanceToFirePos
	transRight = cos(progress * 1530) * ((1 - progress) * 20)
	transUp = (progress) * 20 + randomFactor * (cos( progress * (360*2) ) *3)
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * 1530) * 20 - distanceToFirePos
	transRight = cos(parabolaStart * 1530) * ((1 - parabolaStart) * 20)
	transUp = (parabolaStart) * 20 + randomFactor * (cos( parabolaStart * (360*2) ) * 3)

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = (transRight + (rightSign * verticalParabola * 2))

end",0,2
3825,7.0 Suramar Raid - Illidan - Visions Portal Missile Left - KJD,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .7
local parabolicScalar = 40

if progress <=  parabolaStart then
	transFront = sin(progress * 1530) * 20 - distanceToFirePos
	transRight = cos(progress * 1530) * ((1 - progress) * 20)
	transUp = (progress) * 20 + randomFactor * (cos( progress * (360*2) ) *3)
end

if progress > parabolaStart then
	transFront = sin(parabolaStart * 1530) * 20 - distanceToFirePos
	transRight = cos(parabolaStart * 1530) * ((1 - parabolaStart) * 20)
	transUp = (parabolaStart) * 20 + randomFactor * (cos( parabolaStart * (360*2) ) * 3)

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = -1 * (transRight + (rightSign * verticalParabola * 2))

end",0,2
3826,7.0 Neltharion's Lair - Trash - Vileshard Hulk - Piercing Shards,"--Change these vars based on your desired needs
--Minimum 2 missiles
--Do not make a >=180 degree cone 

	local coneWidth = 60
	local coneRotation = 65
	local coneNoiseFactor = 0.75


	local coneOffset
	local resultWidthAtDist = math.tan(math.rad(coneWidth/2))*startDistance

	if (missileCount%2)==0 then
		local offsetBase = ((resultWidthAtDist*2)/(missileCount-1))
		if (missileIndex+1)<=(missileCount/2) then
			if missileIndex+1==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*missileIndex)
			end
			transAngle = coneRotation
		else
			if (missileIndex+1)-(missileCount/2)==1 then
				coneOffset = (offsetBase/2)
			else
				coneOffset = (offsetBase/2)+(offsetBase*((missileIndex)-(missileCount/2)))
			end
			transAngle = 360 - coneRotation
		end
	else
		if (missileIndex+1)<=(missileCount/2) then
			coneOffset = (resultWidthAtDist) * ((missileIndex+1)/math.floor(missileCount/2))
			transAngle = coneRotation
		elseif (missileIndex+1)>=(missileCount/2) and (missileIndex+1)~=missileCount then
			coneOffset = (resultWidthAtDist) * ( ((missileIndex+1)-math.floor(missileCount/2)) / math.floor(missileCount/2) )
			transAngle = 360 - coneRotation
		else
			coneOffset = 0
			transAngle = 0
		end
	end


	transMag = progress * coneOffset
	transUp = coneNoiseFactor * rand2 * progress",0,6
3828,Rogue - Grappling Hook,"local angle = 0
local maxMagnitude = 0.3

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
3829,7.0 Suramar Raid - Anomaly - Tachyon Pulse,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

local RightAmplitude=startDistance/40*5
local UpAmplitude=startDistance/40*2
transRight=sin(progress*2*360)*RightAmplitude*(1-(progress^2)) 
transUp=sin(progress*360)*UpAmplitude*(1-(progress^2))",0,1
3830,7.1 Karazan - Piercing Missiles,"local r1 = rand1*2-1
local r2 = rand2*2-1

progress = progress*progress 
 
transRight = math.sin(progress*3.14) * 2 * r1 + (rand3*2-1)*2
transUp = math.abs(math.sin(progress*3.14)  * 2 * r2 + (rand2*2-1)*2)


",0,0
3831,7.0 Suramar Raid - Gul'dan - Khadgar - Illidan's Soul B - KJD,"local outerWheelSpinRate = 180 	-- 1 spin / sec
local angleOffset = 120 + (rand1 * 45)
local outerWheelMag = ((progress * 4) * (1-progress) * 4) * 2
local missileAngle = outerWheelSpinRate * time + angleOffset

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transAngle = missileAngle
transMag = outerWheelMag
scale = 1 + (progress * (1-progress) * 4 * 2)",0,1
3832,7.0 Suramar Raid - Gul'dan - Khadgar - Illidan's Soul C - KJD,"local outerWheelSpinRate = 180 	-- 1 spin / sec
local angleOffset = 240 + (rand1 * 45)
local outerWheelMag = ((progress * 6) * (1-progress) * 2)
local missileAngle = outerWheelSpinRate * time + angleOffset

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transAngle = missileAngle
transMag = outerWheelMag
scale = 1 + (progress * (1-progress) * 4 * 2)",0,1
3833,7.0 Suramar Raid - Gul'dan - Eye Visual Path Statue End Missile,"local function parabola(m)
	return m * ((1-progress) * progress * 4)
end

local radius = 4 + (progress * parabola(2))
local height = 48.5
local angle = 4 * (progress*360) + (rand1*45) + ((missileIndex/missileCount)*360)

transRight = (cos(angle) * parabola(radius))
transFront = (sin(angle) * parabola(radius)) + distanceToImpactPos
transUp = progress * height

--scale = ((1-progress)*5)*(progress*1)
--speedOffset = (5*rand3) * (((1-progress)/2)+1)",0,2
3834,7.0 Suramar Raid - Gul'dan - Phase 3 Transition Missile - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local factor = 2
local height = 5
local width = 10

transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = parabola(1,rand2*2,height)
transRight = parabola(1,1,(-width/2)+rand1*width)
speedScalar = 1 + (rand3 * 0.75)",0,0
3835,7.0 Suramar Raid - Gul'dan - Intro Spiral Missile - KJD,"local outerWheelSpinRate = 180 + (rand2 * 180) 	-- 1 spin / sec
local angleOffset = 0 + (rand1 * 90)
local outerWheelMag = ((progress * 4) * (1-progress) * 4)/3
local missileAngle = outerWheelSpinRate * time + angleOffset

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transAngle = missileAngle
transMag = outerWheelMag
scale = 1 + (progress * (1-progress) * 4)",0,2
3836,Item - 7.0 - Trinket - Six-Feather Fan,"local angle = 65
if rand1 < 0.5 then
	angle = -65
end

local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3837,7.0 Neltharion's Lair - Vileshard Hulk - Piercing Shards 02,"local maxSpread = 20

transAngle = 360 * rand1
transMag = progress * rand2 * maxSpread


transFront = (progress * startDistance) - distanceToFirePos",0,15
3838,Revamp Druid - Lunar Strike Missile,"speed = 60
launchDelay = 0.3
faceImpactPos = 1
modelPitch = 0


stayInPlace = -startDistance * progress

if (launchProgress < 1) then
	transFront = launchProgress * (launchProgress - (distanceToImpactPos/3))
	transUp = launchProgress + (launchProgress * 2)
	modelPitch = launchProgress * 20
else 
	transFront = (progress * progress) + (launchProgress - (distanceToImpactPos/3))
	transUp = 3 - (progress * 3)
	modelPitch = 20 - (math.pow(progress, 0.5) * 15)
end",0,0
3839,Helheim Raid - Odyn - DNA Script 01 - MRN,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = .4
local parabolicScalar = 10
local totalSpiralDegrees = 1200

modelRoll = 1080*progress*3

if progress <=  parabolaStart then
	transFront = -sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)
	transUp = (progress) * 10
end

if progress > parabolaStart then
	transFront = -sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos
	transRight = cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)
	transUp = (parabolaStart) * 10

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3840,Helheim Raid - Odyn - DNA Script 02 - MRN,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local randomFactor = (rand1 * 8)
local parabolaStart = 0.4
local parabolicScalar = 10
local totalSpiralDegrees = 1200

modelRoll = 1080*progress*3

if progress <=  parabolaStart then
	transFront = (sin(progress * totalSpiralDegrees) * 4 - distanceToFirePos) * 1
	transRight = (cos(progress * totalSpiralDegrees) * ((1 - progress) * 4)) * -1
	transUp = (progress) * 10
end

if progress > parabolaStart then
	transFront = (sin(parabolaStart * totalSpiralDegrees) * 4 - distanceToFirePos)  * 1
	transRight = (cos(parabolaStart * totalSpiralDegrees) * ((1 - parabolaStart) * 4)) * -1
	transUp = (parabolaStart) * 10

	local rightSign
	if transRight > 0 then
		rightSign = -1
	else
		rightSign = 1
	end

    local p = progress - parabolaStart
    p = p/(1 - parabolaStart)

	p = HorizontalSCurve(p, 1.2)
	transRight = ((1 - p) * transRight)
	transUp = ((1 - p) * transUp)
	transFront = ((1 - p) * transFront)


    local verticalParabola = -1 * parabolicScalar * (math.pow(p,2)) + (parabolicScalar * p)
    transUp = transUp + (verticalParabola * 2)
	transRight = transRight + (rightSign * verticalParabola * 2)

end",0,0
3842,Hunter - Harpoon (Hook),"local angle = 0
local maxMagnitude = 1

modelPitch = -90
--modelRoll = 90
modelYaw = 180

transUp = -0.14
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
3843,Artifact - Titanstrike Shotgun Missiles (CSA),"-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

local bulletLayers = 5
local bulletsPerLayer = missileCount / bulletLayers
local anglePerMissile = 360 / bulletsPerLayer
local variationAmt = anglePerMissile * 0.3

if (missileIndex > 0) then
	transAngle = anglePerMissile * missileIndex
    transAngle = transAngle + rand1 * variationAmt
end

local curLayer = 0

while missileIndex > bulletsPerLayer * curLayer do
    curLayer = curLayer + 1
end

transMag = outerWheelMag * (curLayer+1)/bulletLayers + rand2*0.1",0,30
3844,Mage - Flurry Missile,"
local maxMagnitude = 0.8	
local p = ((progress * 2) - 1)
local magnitude = (1 - (p * p)) * maxMagnitude

local magnitudeMag		= magnitude * 4
local magnitudeRight 	= magnitude * 2.5
local magnitudeUp 		= magnitude * 0.2
local magnitudeFront 	= magnitude * 2

transMag 	= magnitudeMag
transRight 	= magnitudeRight 	* (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60)))
transUp 	= magnitudeUp 		* (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100)))
transFront 	= magnitudeFront 	* (sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100)))
				--- distanceToFirePos * math.pow(1.0 - progress, 0.3)
",0,0
3845,Parabola (Super Low),"transUp = sin(math.pow(progress,.8)*180)*startDistance*.08",0,1
3846,Mage - Flurry Missile v2,"
transUp = sin(progress*(rand3*.5+.5)*450+(rand1*360))*(progress*progress*2)*sin(progress*150)*(rand2*.5+1)
transRight = cos(progress*(rand3*.5+.5)*450+(rand1*360))*(progress*progress*2)*sin(progress*150)*(rand2*.5+1)
scale = progress*progress*2+.5",0,0
3847,Revamp Druid - Starsurge Missile,"local angle = 0
local maxMagnitude = startDistance * .125

local waveHeight = .1
local wavesPerSec = 2*(0.5+rand1)

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = waveHeight * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
",0,1
3848,Revamp Druid - Solar Flare,"
local waveHeight = .97
local wavesPerSec = 3
progSquare = progress*progress

if (progress <0.25) then
	if (missileIndex == 0) then
		transRight = waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
		transUp = waveHeight * (1-progress) * sin(wavesPerSec * rand3 * progress * 360)
	end

	if (missileIndex == 1) then
		transRight = -waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
		transUp = -waveHeight * (1-progress) * sin(wavesPerSec * rand3 * progress * 360)
	end

	if (missileIndex == 2) then
		transRight = waveHeight * (1-progress) * sin(wavesPerSec * rand1 * progress * 360)
		transUp = waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
	end

	if (missileIndex == 3) then
		transRight = -waveHeight * (1-progress) * sin(wavesPerSec * rand1 * progress * 360)
		transUp = -waveHeight * (1-progress) * cos(wavesPerSec * rand2 * progress * 360)
	end
	speedScalar = 0.001
else
	transRight = 0
	transUp = 0
	speedScalar = 3
end",0,4
3849,Revamp Druid - Solar Wrath (Less Complex),"
local waveHeight = .3
local wavesPerSec = 2


transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

",0,1
3850,"Rain of Arrows, Parabola, Slight Right","--rand1: angle
--rand2: radius
--rand3: distance


local height = 15

local maxRadius = 5

local spread = math.pi/8
local baseAngle = 11*math.pi/8
local cleanMissileCount = math.max(1,missileCount)
angle = baseAngle - spread/2 + spread*(missileIndex-1)/(cleanMissileCount-1)
local radius = maxRadius*math.sqrt(rand2)

local speed = 95

local parab = 0
local parabMax = 15

local sentinelDistanceMin = 50
local sentinelDistanceMax = 80
local sentinelDistance = sentinelDistanceMin + rand3*(sentinelDistanceMax-sentinelDistanceMin)

parab = (progress * 2) - 1
parab = (1 - (parab * parab)) * parabMax

transUp = height * ( 1 - progress )
transUp = transUp + parab

transFront = distanceToImpactPos

transRight = transRight + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.cos(angle)
transFront = transFront + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.sin(angle)

local absMagnitude = math.sqrt(sentinelDistance*sentinelDistance + height*height)

speedAbs = speed*startDistance/absMagnitude

--if progress>0.99 then
--	speedAbs = speedAbs+40
--end",0,6
3851,"Rain of Arrows, Parabola, Slight Left","--rand1: angle
--rand2: radius
--rand3: distance


local height = 15

local maxRadius = 5

local spread = math.pi/8
local baseAngle = 13*math.pi/8
local cleanMissileCount = math.max(1,missileCount)
angle = baseAngle - spread/2 + spread*(missileIndex-1)/(cleanMissileCount-1)
local radius = maxRadius*math.sqrt(rand2)

local speed = 95

local parab = 0
local parabMax = 15

local sentinelDistanceMin = 50
local sentinelDistanceMax = 80
local sentinelDistance = sentinelDistanceMin + rand3*(sentinelDistanceMax-sentinelDistanceMin)

parab = (progress * 2) - 1
parab = (1 - (parab * parab)) * parabMax

transUp = height * ( 1 - progress )
transUp = transUp + parab

transFront = distanceToImpactPos

transRight = transRight + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.cos(angle)
transFront = transFront + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.sin(angle)

local absMagnitude = math.sqrt(sentinelDistance*sentinelDistance + height*height)

speedAbs = speed*startDistance/absMagnitude

--if progress>0.99 then
--	speedAbs = speedAbs+40
--end",0,6
3852,"Rain of Arrows, Parabola, Far Left","--rand1: angle
--rand2: radius
--rand3: distance


local height = 15

local maxRadius = 5

local spread = math.pi/8
local baseAngle = 7*math.pi/4
local cleanMissileCount = math.max(1,missileCount)
angle = baseAngle - spread/2 + spread*(missileIndex-1)/(cleanMissileCount-1)
local radius = maxRadius*math.sqrt(rand2)

local speed = 95

local parab = 0
local parabMax = 15

local sentinelDistanceMin = 50
local sentinelDistanceMax = 80
local sentinelDistance = sentinelDistanceMin + rand3*(sentinelDistanceMax-sentinelDistanceMin)

parab = (progress * 2) - 1
parab = (1 - (parab * parab)) * parabMax

transUp = height * ( 1 - progress )
transUp = transUp + parab

transFront = distanceToImpactPos

transRight = transRight + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.cos(angle)
transFront = transFront + ( radius + (1-progress)*sentinelDistance - maxRadius*progress*3/4) * math.sin(angle)

local absMagnitude = math.sqrt(sentinelDistance*sentinelDistance + height*height)

speedAbs = speed*startDistance/absMagnitude

--if progress>0.99 then
--	speedAbs = speedAbs+40
--end",0,6
3853,7.1 Karazhan - Trash - Cavalier - Smash,"modelPitch=-90+(progress*90)
modelYaw=0
modelRoll=0
",0,0
3854,Mage - Phoenix Bolt,"

--transFront = progress*-startDistance+math.pow(progress, 1.3)*startDistance

--speedOffset = (progress-0.1)*250
--speedScalar = 3*progress*progress--+0.5 --(progress+0.8)*(progress+0.8)

speed = 50
launchDelay = 0.1

travelTime = totalDistance / speed
totalTime = launchDelay + travelTime
actualProgress = (launchProgress*launchDelay + progress*travelTime) / (totalTime)

transFrontExpected =  totalDistance * actualProgress 
transFrontTravelled = totalDistance * progress
transFront = (transFrontExpected - transFrontTravelled)--(1-actualProgress)

scale = .5 + (2 * math.pow(actualProgress, 0.666))

colorA = distanceToImpactPos

--transUp = (1-actualProgress)",0,1
3855,Void Eruption - SWP,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*40)*70
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*40)*70
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*40)*70
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4


progress = math.pow(progress,3)

local ip = (1-progress)

transRight = -sin(progress*270)*8*ip+progressMult*noise1*8*factor 
transUp = sin(progress*(180+rand2*180))*5*ip*rand1+progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor 
",0,0
3856,Void Eruption - VT,"
--progress = math.pow(progress,rand1*.4+.8)



local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*40)*70
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*40)*70
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*40)*70
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4


progress = math.pow(progress,3)

local ip = (1-progress)

transRight = sin(progress*270)*8*ip+progressMult*noise1*8*factor 
transUp = sin(progress*(180+rand2*180))*5*ip*rand1+progressMult*noise2*4*factor 
transFront = progressMult*noise3*14*factor 
",0,0
3857,7.0 Professions - Alchemy - Potion of the Old War - Female,"if progress<0.6 then
	transFront = -startDistance*progress
else
	transFront = -startDistance*0.6 + 2.5*(progress-0.6)
end

transRight = -2",0,0
3858,7.1 Karazhan - Trash - Rook Move - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

scale=.5
transUp=missileIndex*.5

if missileIndex<5 then
	transFront=remap(missileIndex,1,5,.75,1.5)
else
	transFront=remap(missileIndex,5,12,2.2,5.5)
end
transRight=sin((progress*1080)+(rand1*45*missileIndex))*.35
modelRoll=cos((progress*1080)+(rand1*45*missileIndex))*.35",0,7
3859,7.2 Order Hall - Warrior - Ch5 Q2 - Stolen Crate Missiles - SBV,"local angle = 0
local maxMagnitude = startDistance * 2
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
3860,7.2 Order Hall - Warrior - Ch5 Q2 - Stolen Crate Missile 2 - SBV,"local angle = 0
local maxMagnitude = startDistance * 2
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--modelPitch = time * spinRate
",0,1
3861,Parabola + Spiral (3 Missiles),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local DistanceToUse=startDistance*(1+remap(rand1,0,1,0.75,1.4))

transUp=(DistanceToUse/5)*sin(progress*180)

transAngle = progress*(360*DistanceToUse/10)
transMag = remap(rand2,0,1,0.75,1.4)*sin(progress*180)
transRight = remap(rand3,0,1,-1,1)

",0,3
3862,Item - 7.0 - Suramar Raid Trinket - Proc Meteor Missile,"local magnitude = 25

transRight = magnitude/2 * (1.0 - progress)
if rand1 > 0.5 then
	transRight = transRight * -1
end
transUp = magnitude * (1.0 - progress)
transFront = distanceToImpactPos

--transAngle = rand1 * 180",0,0
3864,Revamp Hunter - Multi-Shot,"--if progress <= 0.01 then
--	scale = 0.001
--elseif progress > 0.001 then
--	scale = 1
--end


if (missileIndex == 0) then
	--transRight = (-sin(progress * 90) * 2) * (1 - (rand2/2)) + (rand2 / 2)
	-- Travel straight into to normal impact
elseif (missileIndex == 1) then
	speedScalar = (1 - (rand1 / 2)) * .5
	transFront = (sin(progress * 90) * 1.5)
	transRight = progress * 2 * (1 - (rand1/2)) + (rand1/2)
	
	scale = (1 - (progress * progress * progress * progress))*.9
	
elseif (missileIndex == 2) then
	speedScalar = (1 - (rand1 / 2)) * .5
	transFront = (sin(progress * 90) * .5)
	transRight = progress * -2 * (1 - (rand2/2)) + (rand2/2)
	if progress > 0.001 then
		scale = 1 - (progress * progress * progress * progress)
	end
end


modelRoll = -45",0,1
3865,Dunkball - Shoot - Long Range,,0,1
3866,Revamp Hunter - Cobra Shot,"local waveHeight = .2
local wavesPerSec = 5 + (rand1 * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 4

scale = progress * 2",0,1
3867,Revamp Hunter - Missile goes slightly past target,"-- NOTE: transFront and travelOffsetUp do not take Z into account, they are flat
transFront = (progress * 10)
--travelOffsetFront = (progress * 10) - 5",0,0
3868,Item - 7.1 - Trinket - Loose Mana Energize - Missile,scale = 0.5,0,0
3869,Item - 7.1 - Trinket - Flame Gale Missile,scale = 0.25 + (progress * 0.75),0,0
3870,Item - 7.1 - Trinket - Holy Bolt Missile,scale = 0.2 + (progress * 0.6),0,0
3872,Revamp Hunter - Arcane Shot,"local angle1 = 10
local angle2 = -10
local maxMagnitude = startDistance * .01

transAngle = angle1
if ( rand1 > 0.5 ) then
	transAngle = angle2
end

transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = .5",0,1
3873,Item - 7.1 - Trinket - Intangible Presence - Missile,"
if missileIndex == 0 then
	transAngle = -70
elseif missileIndex == 2 then
	transAngle = 70
end

local maxMagnitude = startDistance * .4

--transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,3
3874,Item - 7.1 - Trinket - Guardian's Familiar - Missile,scale = 0.5,0,0
3875,Item - 7.0 - Suramar Raid Trinket - Orb of Destruction Cast,"--p = progress * 11

local height = 8
local speed = 10
local triggerDuration = 4
local phase2 = (startDistance / speed) / ((startDistance / speed) + triggerDuration)

local p1progress = (progress/phase2)
local p2progress = (progress-phase2)/(1-phase2)

local pow = 0.1
local cirPct = 110
p = progress * ((speed / startDistance) * triggerDuration)

if progress<phase2 then
	transFront = -distanceToFirePos
	transFront = transFront + p1progress * startDistance * .9
	transFront = transFront * math.pow(p1progress,pow)
	
	transUp = sin(p1progress*cirPct)*(height)
	transUp = transUp * math.pow(p1progress,pow) + p
else
	transFront = -distanceToFirePos
	transFront = transFront + startDistance * .9
	transFront = transFront + p2progress * startDistance * .1
	
	transUp = height*(1-sin(p2progress*(180-cirPct)))
end",0,1
3876,Item - 7.0 - Suramar Raid Trinket - Fel-Crazed Rage Damage,"transRight = ((rand1*3)+2)*sin(progress*180)
if rand2 > 0.5 then
	transRight = transRight * -1
end


local p = progress - 0.5
p = p/(0.5)
transUp = math.pow(progress,.3)*3
if progress > 0.5 then
	transUp = ((1 - p) * transUp)
end",0,0
3877,Revamp Hunter - Barrage,"local offsetRight = 0.3 * rand1
local offsetLeft = -0.3 * rand1
local offsetUp = 0.2 * rand2
local offsetDown = -0.2 * rand2

if progress <= 0.1 then
	scale = 0.001
elseif progress > 0.1 and progress <= 0.95 then
	scale = 1
elseif progress > 0.95 then
	scale = 0.001
end

--speedScalar = (1 - (rand1 / 2)) * .5
--transFront = (sin(progress * 90) * 1.5)

transRight = progress * offsetRight
if ( rand1 > 0.5 ) then
	transRight = progress * offsetLeft
end

transUp = progress * offsetUp
if ( rand1 > 0.5 ) then
	transUp = progress * offsetDown
end


modelRoll = -45",0,1
3878,"Parabola (Grow More, Starting Scale=1)","local angle = 0
local maxMagnitude = startDistance * .25

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1+progress + .01
if (progress > 0.75) then
	scale = scale + 1.5*(progress-0.75)
end",0,1
3879,Revamp Hunter - Black Arrow,"local spinRate = 2000

modelRoll = time * spinRate",0,1
3880,Chakram 9 pattern - Start out Left,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

local FirstLeg=.3333333

if progress<FirstLeg then
	transRight = sin(remap(progress,0,FirstLeg,0,180))*remap(progress,0,FirstLeg,startDistance/2,0)
    transFront = (startDistance*sin(remap(progress,0,FirstLeg,0,90))) - distanceToFirePos
else
	transRight = -sin(remap(progress,FirstLeg,1,0,360))*remap(progress,FirstLeg,1,startDistance/2,startDistance/2)
    transFront = (startDistance)+(sin(remap(progress,FirstLeg,1,0,180))*startDistance)-distanceToFirePos
end",0,1
3881,Boomerang (90 Pitch),"local angle = 90
local maxMagnitude = startDistance * .2
local spinRate = 720

modelPitch = 90
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3882,"Boomerang (Arc Right, 90 Pitch)","local angle = 270
local maxMagnitude = startDistance * .2
local spinRate = 720

modelPitch = 90
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
3883,7.1.5 Holiday - Dinosaurs - Zavas - Summon Larva,"local waveHeight = .5 * (startDistance / 30)
local wavesPerSec = 2 * (.8 + (.4 * rand2))

scale=math.max(progress/4,0.1)
transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) 
transFront=sin(progress)",0,0
3884,Revamp Shaman - Resto Precast Missile,"local startAngle = 0
local degreesPerSec = -230
local maxMagnitude = 1.5
local maxKickBack = 3



transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

speedScalar = .2 + 3 * progress

transUp = sin((progress) * 180)*3

",0,3
3886,"Drunken Fountain (3 Missiles, low, alternate)","local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
3887,Demon Hunter - Vengeance - Spirit Bomb Missile,"scale = 0.4
transRight = -sin(progress*180) * 0.25 * startDistance",0,0
3888,Hunter - Sentinel - Missile Script,"local revolutions = 360*3
local radius = 10
local rotationtime = 18  -- amount of time you spend after the ""sweep in"" phase

local sweepIn 
local sweepCenter
if (time>1.2) then
	sweepIn = 0
	--sweepCenter = 1
else 
	sweepIn = -math.pow(1.2-time,2)*startDistance
	--sweepCenter = sin(time*110)
end	

transUp = 5
transFront = (startDistance-(startDistance*progress))+sin(time*revolutions/rotationtime)*radius+sweepIn
transRight = cos(time/rotationtime*revolutions)*radius--*sweepCenter

modelRoll = 30

",0,0
3889,Frisbee Throw - No Spin (No Yaw),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
3890,Mage - Frost - Ice Lance,"transFront = 0-distanceToFirePos+(math.pow(progress, 3)*startDistance)
",0,1
3891,7.2 Artifacts - God-Queen Challenge - Hurl Axe - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=1
modelYaw=time*(360*3)

local DistanceScaling=(startDistance/20)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
3892,"Itano Circus/Macross Missiles (1 Missile, Large Arc)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(0)
local maxAngle = math.rad(180)
local maxArc = 20

local p = HorizontalSCurve(progress,3)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((rand1* (maxAngle - minAngle)))
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 2
transRight = transRight + progressMult*noise1*4*factor
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor
",0,1
3893,7.2 Tomb Raid - Kil'jaeden - Smoldering Felflame 2. Missile,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end
	
	return returnValue
end

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 30

local p = HorizontalSCurve(progress,15)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + (rand1 * (maxAngle - minAngle))
local x,y = angleToXY(currentAngle)
local arcProg = HorizontalSCurve(progress,3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*20
local noise1 = noise(t1)

local t2 = (time+rand2*400)*20
local noise2 = noise(t2)

local t3 = (time+rand3*400)*20
local noise3 = noise(t3)

local factor = 20
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*2*factor
transFront = transFront + progressMult*noise3*4*factor ",0,1
3894,Suramar - Ancient Manashard Missile,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local phaseTwoStart = .6 + (rand2 * .2)
progress = HorizontalSCurve(progress,5)
local p = progress - phaseTwoStart
local rightOffset
if (rand3 >= .5) then
   rightOffset = 2 + ((rand3 -.5) * 10)
else
   rightOffset = -2 - (rand3 * 10)
end

faceImpactPos = 1
if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*3 + (rand2 * 4)
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = rightOffset
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*3 + (rand2 * 4)
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    transRight = rightOffset *(1-p)
    
end

scale = 0.5
modelPitch = 100
modelYaw = -(math.deg(math.atan2(rightOffset, startDistance)))
",0,0
3895,7.2 Tomb Raid - Soul Engine - Shared - Swap Sides - KLH,"local function sinapprox(v) local t = ((1.1*v/360)*0.5-math.floor((1.1*v/360)*0.5))*2-1 return -4*(t-t*math.abs(t)) end
local function exp(v) return math.pow(progress,v) end
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end
local function noise(a) return (sinapprox(a)*sinapprox(a*3)*sinapprox(a*.54)*sinapprox(a*7)*sinapprox(a*12)*sinapprox(a*.5)) end
local function direction() local d=1 if (rand3-0.5)>0 then d=-1 end return d end

local startAngle
local maxAngle = 5
local minAngle = 3

scale = parabola(1,1.05,1.1)

local maxMagnitude = 5
local angle = (direction()*(progress*90)) + (rand1*90)
local factor = 3

local noise1 = 5 * factor * noise((time+rand1*4)*5)
local noise2 = 5 * factor * noise((time+rand2*4)*5)
local noise3 = 5 * factor * noise((time+rand3*4)*5)

transRight = direction() * parabola(1,2,noise1+(1*rand2))
transUp = parabola(1,1,maxMagnitude) + parabola(1,1,noise2)
transFront = parabola(1,1,noise3)",0,3
3896,Death Knight - Unholy - Death Coil,"
local flip = math.floor(rand3*2)*2-1
local rand4 = (rand3*10)%1
local flip2 = (math.floor(rand4*2)*2-1)+.5 -- because i want flip to be down .5 and up 1.5

transRight = sin(totalProgress *180)*totalProgress *(rand1*2+1)*flip*startDistance*.03
transUp = sin(totalProgress *180)*totalProgress *(rand2*1)*flip2*startDistance*.03

-- overall wave * slant the wave * random (more out than up/down) * positive or negative * tuned for 30 yards
 ",0,0
3897,Mage - Frost - Flurry,"
transUp = (sin(progress*(rand3*.5+.1)*450+(rand1*360))*(progress*progress*2)*sin(progress*150)*(rand2*.5+.75)) + 1
transRight = cos(progress*(rand3*.5+.5)*450+(rand1*360))*(progress*progress*2)*sin(progress*150)*(rand2*.5+1)
scale = 2.5


--scale = progress*progress*2+.5",0,0
3898,"Parabola (High, Roll Spin)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = time * spinRate
",0,0
3899,Meteor Strike (50 Yards) Falls Straight Down + Rotate,"local magnitude = 50

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*720",0,1
3900,Meteor Strike (50 Yards) Falls Straight Down,"local magnitude = 50

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3901,"Throw - Random(Left,Right)","if rand1<.5 then 
	transRight = sin(progress*(startDistance*9))*(startDistance*.25)*(1-progress)
else
	transRight = -sin(progress*(startDistance*9))*(startDistance*.25)*(1-progress)
end
transUp = sin(progress*(startDistance*13.5))*(startDistance*.05)*(1-progress)",0,1
3902,Kil'jaeden - Darkness of a Thousand Souls 2. Missile,"local factor = 7
local maxHeight = 20

local noiseAmt = startDistance * 0.1

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


--transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt)) + ((1-progress)*progress*4*maxHeight)
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,1
3903,Mage - Arcane - Arcane Missiles (Left),"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = 30
local maxMagnitude = startDistance * .3 * rand4 + .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

--transFront = -distanceToFirePos * (1 - progress)
local startSpeedScale = ((rand3 + .5) * 0.1)
local fullSpeedProgress = 0.5 -- progress at which it will be going full speed
if progress > fullSpeedProgress then
	out_speedScale = 1.0
else
	-- Lerp from start speed up to full speed
	local introProgress = (progress * (1.0/fullSpeedProgress))
	out_speedScale = startSpeedScale + (introProgress * (1.0 - startSpeedScale))
end

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
--transFront = (transFront +
--	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = ((rand3 + .5) / 2)

scale = progress^0.5
",0,4
3904,"Mage - Arcane - Arcane Missiles (From sky, use elsewhere)","local angle = 0
local maxMagnitude = startDistance * .25

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,1
3905,Mage - Arcane - Arcane Missiles (Right),"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = -30
local maxMagnitude = startDistance * .3 * rand4 + .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

--transFront = -distanceToFirePos * (1 - progress)
local startSpeedScale = ((rand3 + .5) * 0.1)
local fullSpeedProgress = 0.5 -- progress at which it will be going full speed
if progress > fullSpeedProgress then
	out_speedScale = 1.0
else
	-- Lerp from start speed up to full speed
	local introProgress = (progress * (1.0/fullSpeedProgress))
	out_speedScale = startSpeedScale + (introProgress * (1.0 - startSpeedScale))
end

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
--transFront = (transFront +
--	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = ((rand3 + .5) / 2)

scale = progress^0.5
",0,4
3906,Mage - Arcane - Arcane Missiles (Right v2),"faceImpactPos = 0

local angle = -60
local maxMagnitude = startDistance * .125

local waveHeight = .8
local wavesPerSec = 2*(0.5+rand1)

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = (waveHeight*((rand2+0.5)/2)) * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2
--transUp = (waveHeight*((rand3+0.5)/2)) * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * (maxMagnitude * rand3)


",0,1
3907,Mage - Arcane - Arcane Missiles (Left v2),"faceImpactPos = 0

local angle = 60
local maxMagnitude = startDistance * .125

local waveHeight = .8
local wavesPerSec = 2*(0.5+rand1)

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = (waveHeight*((rand2+0.5)/2)) * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2
--transUp = (waveHeight*((rand3+0.5)/2)) * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * (maxMagnitude * rand3)





",0,1
3908,Bat Swarm,"local maxMagnitude = 5
local minSpeedScalar = 0.5
local maxSpeedScalar = 1.7

local magnitude = (progress * 1.3) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = 5*(sin((rand1 * 100) + (time * 100)) + cos((rand2 * 1000) + (time * 100))) * magnitude
transUp = 5*(sin((rand2 * 100) + (time * 300)) + cos((rand1 * 1000) + (time * 150))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

",0,15
3909,Mage - Arcane - Arcane Barrage,"

transFront = sin(progress*180) * 3
transUp = sin(progress*180) * 1
transRight = (sin((rand1 * 1000) + (time * 3000)) + sin((rand3 * 1000) + (time * 450))) * .05

",0,1
3910,Stay at target dest (use for vfx that have the falling built in),"   transFront=distanceToImpactPos
",0,0
3911,Revamp Hunter - Barrage Cosmetic,"if progress <= 0.1 then
	scale = 0.001
elseif progress > 0.1 and progress <= 0.75 then
	scale = 1
elseif progress > 0.75 then
	scale = 0.001
end

transUp = (rand1-.3)*progress*4",0,1
3912,Infernal Launcher,"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 600
",0,1
3913,Meteor Strike (15 Yards) Falls Straight Down,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos",0,1
3914,Revamp Hunter - Concussive Shot,"--transFront = 0-distanceToFirePos
--transFront = (0-distanceToFirePos) + (math.pow(progress, .4)*startDistance)

speedScalar = distanceToImpactPos * 0.25
transUp = sin(progress *180) * .2


faceImpactPos = 0",0,0
3915,Meteor Strike (2 Yards) Falls Straight Down,"local magnitude = 2

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3916,"7.0 Legion - Radial Pattern (16 Missile, no rand)","local radius = progress * totalDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

--scale = 2*(progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,16
3917,Meteor Strike (20 Yards) Falls Straight Down + Pitch -90,"local magnitude = 20

modelPitch=-90
transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3918,Darren's Arcane Missiles,"local factor = 1.25
local maxWidth = 1

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

--scale = math.max(math.pow(progress,factor*2),progress)",0,2
3919,Falls Straight Down,"local magnitude = 0

transUp = magnitude * ( 1 - progress )
",0,1
3920,Meteors (0.5yrd Offset),"transFront = progress * (rand2 * 1 - 0.5)
transRight = progress * (rand1 * 1 - 0.5)


",0,1
3921,7.2 - Artifact - Ohn'ara,"local prog = 1 - progress
local flip = math.floor(rand1*2)*2-1
transRight = flip*prog
transFront = -9*prog*prog*prog
transUp = 4*prog
faceImpactPos = 1",0,1
3922,"Drunken Missiles (1 Missile, Parabolic, Less Drunk)","local maxMagnitude = 0.2
local minSpeedScalar = .9
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
magnitude = magnitude * 0.25

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local maxMagnitude = startDistance * .10
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
3923,7.2 Artifacts - Death Knight - Crystalline Swords - Behind,"-- How close we are to the target
local prog = 1-progress
-- Select a random value in an arc behind the target for 
local flip = math.floor(rand1*2)*2-1
-- It's fast. 
speedAbs = 30
-- Start behind the target, proceed into them. 
transFront = 0-distanceToFirePos+startDistance + (1-progress)*5
startDistance = totalDistance
faceImpactPos = 1
transRight = flip*prog
scale=progress+1
-- turn it around so it stabs the target
modelPitch = -180",0,0
3924,Missile Snippets - AWK,"progress -- returns 0 to 1 over lifetime of the missile
(1-progress) -- returns 1 to 0 over the lifetime of the missile

-- cleaning off missile motion
transFront = 0-distanceToFirePos -- removes all missile motion, keeps it at caster
transFront = 0-distanceToFirePos+startDistance-- removes all missile motion, keeps it at target

faceImpactPos = 1 --always faces the target, otherwise faces the travel direction


-- variable that randomly chooses 1 or -1; allows you to fire randomly from left or right if you use transRight = flip * X
local flip = math.floor(rand1+.5)*2-1


-- noise curve motion package
local t1 = (time+rand1)*90
local noise1 = sin(t1)*sin(t1*3)*sin(t1*.54)*sin(t1*7)*sin(t1*12)*sin(t1*.5) --use on transRight, transUp or transFront


-- how to generate additional random numbers if you need more than 3
local rand4 = (rand1*10)%1
local rand5 = (rand2*10)%1


-- using launch delay and making the missile still fire as a clean path
speed = 50 --these currently need to match the spell
launchDelay = 0.15 --these currently need to match the spell

travelTime = totalDistance / speed
totalTime = launchDelay + travelTime
actualProgress = (launchProgress*launchDelay + progress*travelTime) / (totalTime) --after this point use actualProgress instead of Progress

transFrontExpected =  totalDistance * actualProgress 
transFrontTravelled = totalDistance * progress
transFront = transFrontExpected - transFrontTravelled



-- useful examples
transFront = 0-distanceToFirePos+startDistance+(1-progress)*10 -- fires a missile from behind the target, 10 yards away

--provides -1 or +1 depending on missile index when firing two missiles
flip = missileIndex * 2 - 1

",0,1
3925,Mage - Arcane - Arcane Missiles (Right) [BUG EXAMPLE],"faceImpactPos = 0

local angle = -20
local maxMagnitude = startDistance * .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (((1 - (transMag * transMag)) * (maxMagnitude)) * progress) * progress

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))* (progress^0.1)
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)* (progress^0.5)
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

--speedScalar = 1 - (progress * .5)
if rand3 > 0 then
	speedScalar = ((rand3 + .5) / 2)
end",0,3
3926,Mage - Arcane - Arcane Missiles (Left) [BUG EXAMPLE],"faceImpactPos = 0

local angle = 20
local maxMagnitude = startDistance * .4 --was .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (((1 - (transMag * transMag)) * (maxMagnitude))* progress) * progress

transFront = (-distanceToFirePos * (1 - progress))

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2)) * (progress^0.1)
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude) * (progress^0.5)
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

--speedScalar = 1 - (progress * .5)
if rand3 > 0 then
	speedScalar = ((rand3 + .5) / 2)
end

",0,3
3927,Death Knight - Death Grip Jump,"progress = math.pow(progress,.9)

local angle = 0
local maxMagnitude = 0.2 * startDistance

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


local outerWheelSpinRate = 360 	-- 2 spin / sec
local outerWheelMag = 2.5			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = (1*sin(180*progress)) * outerWheelMag * cos ( missileAngle )
transRight = (1*sin(180*progress)) * outerWheelMag * sin ( missileAngle )

scale = sin(progress*120+10)*.8+rand1*.8",0,3
3928,Parabola (Fixed Height - 13-15 yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 13
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
3929,Item - 7.2 - Tomb Raid Trinket - Spear of Anguish Missile,"
--if progress < 0.2 then
--	speedScalar = 0.2 + (0.3 * (progress/0.2))
--end",0,0
3930,Death Knight - Death Grip Jump V2,"transUp = (progress * progress *2) - distanceToFirePos
transFront = (progress * startDistance) - distanceToFirePos",0,3
3931,Rolling Bomb (Spin Rate 360),"local spinRate = 360

modelPitch = time * spinRate",0,1
3932,Mage - Fire - Fireball,"local clockwiseOrNah = 1

if rand1 > 0.5 then
	clockwiseOrNah = -1
end

--transFront = math.pow(progress,3) * distanceToImpactPos

transFront = -sin(math.pow(progress, 2) * 2000) * (0.03)
transRight = clockwiseOrNah * sin(progress * 2000) * (0.03)

",0,1
3933,8.0 Warfronts - Horde Demolisher Missile,"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
--scale=time+1",0,1
3934,Mage - Fire - Pyroblast Missile,"faceImpactPos = 1
local phaseTwoStart = .6
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = -distanceToFirePos-sin(progress/phaseTwoStart * (progress*180)) * 0.5
    
else
    transFront = -distanceToFirePos 
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    faceImpactPos = 1
    
end
",0,0
3935,7.3 Argus Raid - Aggramar - Embers - 02 Missile - MRN,"local angle = 0
local maxMagnitude = startDistance * .3

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,1
3936,Demon Hunter - Havoc - Hungering Glaive - Cast,"spinRate = 900
launchDelay = 0.3
growTime = 0.4
scaleGrowth = 1.5

if startDistance > 5 then

	if time < launchDelay then
		scale = 0.0001
		speedScalar = 0.01
	elseif time < (launchDelay + growTime) then
		scale = 1 + (((time - launchDelay) / growTime) * scaleGrowth)
	else
		scale = 1 + scaleGrowth
	end

else
	scale = 1 + scaleGrowth
end
modelYaw = time*spinRate
",0,1
3937,Meteor Strike (8 Yards) Falls Straight Down + Pitch -90,"local magnitude = 8

modelPitch=-90
transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3938,7.2.5 Chromie Scenario - Void Decimation - PRK,"local startPositions =
{
	{-50, -50, 0},
	{-50,  50, 0},
	{ 50,  50, 0},
	{ 50, -50, 0}
}

local maxMagnitude = 25

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude

for i=1, #startPositions do
	if i==missileIndex then
		transRight = startPosition[i][1]*(1-progress)
		transFront = startPosition[i][2]*(1-progress)
	end
end",0,4
3939,Priest - Holy - Holy Precast Left,"--[[
local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = ((sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude) *progress^0.2
transUp = ((sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude) *progress^0.2
transFront = (transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude) *progress^0.2
]]--

local flip = missileIndex*2-1

local p = math.pow(math.max(progress*2-1,0),1.5)

local phaseBreak = 1 --choose the point you want to start smoothly transitioning to phase 2
local phaseTransition = math.max(progress*(1+phaseBreak)-phaseBreak,0)

local helixMult = 1
local helixOffset = .5
--helix motion phase 1
local p1tR = cos(time*400+90)*2*(p+1)*(math.pow(math.min(progress*2, 1),1.2))*math.pow((1-progress),1.8)*2.5*flip
local p1tF = -startDistance*progress + sin(time*400+90)*2*(math.pow(math.min(progress*2, 1),1.2))*(1-progress)*1.5

local p1tU = sin(progress*180)*2.5*progress*2






--combine them
transRight = p1tR
transFront = p1tF + p*startDistance
transUp = p1tU + p*sin(progress*180)*(sin(rand2 * 1000) + cos(rand1 * 400))

",0,2
3940,"1001 Needles (Circular Shotgun, no pitch) - AJB","local startAngle = 45
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 1
local numCenterMiss = 3
modelPitch = 0


if missileIndex < numCenterMiss then
	transMag = 0.25
	transAngle = startAngle + ((missileIndex / numCenterMiss) * 360) + (time * degreesPerSec)
else
	transAngle = startAngle + ((missileIndex / (missileCount - numCenterMiss)) * 360) + (time * degreesPerSec)
	transMag = 0.5
end

transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = (transMag * -maxKickBack) + (progress * 2)
transMag = transMag * maxMagnitude
",0,10
3941,8.0 Nazmir - Q: 47242 Parabola (SPECIAL - DO NOT REUSE),"local angle = 0
local maxMagnitude = startDistance * .33

transUp = (1 - progress) * 10
transFront = - (1 - progress) * 30
transRight = (1 - progress) * 30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
3942,Mage - Frost - Ice Lance Right Hand,transRight = (1-progress)*-1,0,0
3943,Mage - Frost - Ice Lance Left Hand,transRight = (1-progress)*1,0,0
3944,Item - 7.2 - Tomb Raid Trinket - Umbral Moonglaives 1,"local startAngle = 90 * missileIndex
local curAngle = -1*((progress * 3500) + startAngle) --* (progress/3 + 1.0)

scale = 0.45 + (0.15 - (rand1 * 0.3))

local frontMax = 8 - (4 * sin(40*missileIndex))
local rightMax = 4 + (4 * sin(40*missileIndex))

transFront = frontMax * (sin(curAngle))-- + (30 * missileIndex))-- + sin(curAngle + 30)*missileIndex
transRight = rightMax * (cos(curAngle))-- + (90 * missileIndex))-- + cos(curAngle + 60)*missileIndex
--transUp = 1 + (2.0 * (((2.0 * progress) - 1.0) * sin(curAngle)))
--modelRoll = 30",0,4
3945,Item - 7.2 - Tomb Raid Trinket - Umbral Moonglaives 2,"local startAngle = 90
local curAngle = -1*((progress * 2000) + startAngle) --* (progress/3 + 1.0)

scale = 0.75 + (0.15 - (rand1 * 0.3))

transFront = 4 * cos(curAngle)
transRight = 8 * sin(curAngle)
transUp = 1 + (2.0 * (((2.0 * progress) - 1.0) * sin(curAngle)))
modelRoll = 30",0,1
3946,Item - 7.2 - Tomb Raid Trinket - Umbral Moonglaives 3,"local startAngle = 45
local curAngle = -1*((progress * 2000) + startAngle) * (progress/3 + 1.0)

scale = 0.75 + (0.15 - (rand1 * 0.3))
transFront = 7.5 * cos(curAngle)
transRight = 4 * sin(curAngle)
transUp = 1 + sin(curAngle)
modelRoll = 30",0,1
3947,Item - 7.2 - Tomb Raid Trinket - Umbral Moonglaives 4,"local startAngle = 180
local curAngle = -1*((progress * 2000) + startAngle) * (progress/3 + 1.0)

scale = 0.75 + (0.15 - (rand1 * 0.3))
transFront = 3.5 * cos(curAngle)
transRight = 7 * sin(curAngle)
transUp = 1 + cos(curAngle)
modelRoll = 30",0,1
3948,Item - 7.2 - Tomb Raid Trinket - Tarnished Sentinel Medallion 2,"transAngle = -720 * time

transMag = 3

if progress < 0.2 then
	transMag = progress / 0.2
elseif progress >= 0.8 then
	transMag = (1.0 - progress) / 0.2
else
	transMag = 1
end",0,0
3949,8.0 Nazmir - Q: 47242 - Short Parabola (SPECIAL - DO NOT REUSE),"local angle = 0
local maxMagnitude = startDistance * .1

transUp = (1 - progress) * 20
transFront = - (1 - progress) * 50
transRight = (1 - progress) * 50

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
3950,"7.2.5 - Toy - Juggle Sphere, Slow","transUp = sin(180*progress)*6.5

local spinRate = 1420
modelPitch = time * spinRate
",0,1
3951,"7.2.5 - Toy - Juggle Sphere, Fast","transUp = sin(180*progress)*11

local spinRate = 1600
modelPitch = time * spinRate
",0,1
3952,"7.2.5 - Toy - Juggle Sphere, Medium","transUp = sin(180*progress)*8.5

local spinRate = 1500
modelPitch = time * spinRate
",0,1
3953,"7.2.5 - Toy - Juggle Sphere, Self","transUp = sin(180*progress)*5

local spinRate = 1420
modelPitch = time * spinRate
",0,1
3954,7.2.5 - Toy - Big to Small to Big (Slight Shift Upwards),"local m1x=0.4    --the first progress point where the missile is smallest
local m1y=0.4    --the scale of the missile at the point above

local m2x=0.6    --the first progress opint where the missile begins growing again
local m2y=0.4    --the scale of the missile at the point above


local slope
local intercept
if (progress <m1x) then
                slope=(1-m1y)/(0-m1x)
                intercept=1
elseif (progress<m2x) then
                slope=(m1y-m2y)/(m1x-m2x)
                intercept=m1y-slope*m1x
else
                slope=(m2y-1)/(m2x-1)
                intercept=1-slope
end
scale=slope*progress+intercept

transUp=1.5",0,1
3955,7.2 Tomb Raid - Kil'jaeden - Rupturing Singularity 1. Trigger,"local magnitude = 15
local maxScale		= 8
local minScale		= 2
scale = 2 + ((maxScale - minScale) * progress)
transUp = 3.5 + magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3980,Fel Reaver Boss Missiles,"
local maxMagnitude = 0.8	
local p = ((progress * 2) - 1)
local magnitude = (1 - (p * p)) * maxMagnitude

local magnitudeMag		= magnitude * 4
local magnitudeRight 	= magnitude * 3.5
local magnitudeUp 		= magnitude * 0.2
local magnitudeFront 	= magnitude * 2

transMag 	= magnitudeMag
transRight 	= magnitudeRight 	* (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60)))
transUp 	= magnitudeUp 		* (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100)))
transFront 	= magnitudeFront 	* (sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100)))

local slowProgressStart = 0.4
local slowProgressEnd = 1.5
local slowSpeed = 0.5
local finalSpeed = 12

speedScalar = finalSpeed

if ( progress > slowProgressStart and progress < slowProgressEnd ) then
   speedScalar = slowSpeed
end",0,1
3981,Fel Reaver - Annhilation Missile,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = -30
local maxMagnitude = startDistance * .3 * rand4 + .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 1000) + (time * 450)) + sin((rand1 * 1000) + (time * 150))) * magnitude)
transFront = (transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

local slowProgressStart = 0.4
local slowProgressEnd = 0.35
local slowSpeed = 0.3
local finalSpeed = 1

speedScalar = finalSpeed

if ( progress > slowProgressStart and progress < slowProgressEnd ) then
   speedScalar = slowSpeed
end

",0,1
3982,Spiral Vortex (8 Missiles) (Randomized) + Grow (15x),"local startAngle = 0
local degreesPerSec = 360*rand1
local maxMagnitude = 3*rand2
local maxKickBack = 10*rand3

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
scale=1+(15*progress)
",0,8
3983,Priest - Shadow - Void Eruption Missile 1,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = -45
local maxMagnitude = startDistance

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
transFront = (transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = 1 - (progress * .5)
if rand3 > 0 then
	speedScalar = ((rand3 + .5) / 2)
end

scale = progress^0.5
",0,1
3984,Priest - Shadow - Void Bolt Missile,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
transFront = (transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = 1 - (progress * .5)
if rand3 > 0 then
	speedScalar = ((rand3 + .5) / 2)
end

scale = progress^0.5
",0,1
3985,7_3_Void_Stalker_Contract_Void Stalker_Missile_Right_to_Left,"--Start 8yds past the target and 8yds to the right
local radius = 8

--flip = missileIndex * 2 - 1

transFront = 0-distanceToFirePos+startDistance+(1-progress*2)*radius
transRight = (1-progress*2)*-radius

--transFront = 0-distanceToFirePos+startDistance+(1-progress*2)*radius
--transRight = (1-progress*2)*radius",0,0
3986,7_3_Void_Stalker_Contract_Void Stalker_Missile_Left_to_Right,"--Start 8yds past the target and 8yds to the right
local radius = 8

--flip = missileIndex * 2 - 1

transFront = 0-distanceToFirePos+startDistance+(1-progress*2)*radius
transRight = (1-progress*2)*radius",0,0
3987,"Parabola (Very High, Grow - 3)","local angle = 0
local maxMagnitude = startDistance * .60

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
local MaxMissileScaleIncrease=2
modelScale=1+(progress*MaxMissileScaleIncrease)",0,1
3988,Meteor Strike (30 Yards) Falls Straight Down,"local magnitude = 30

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
3989,Shaman Precast Missiles,"local phaseBreak = 1 --choose the point you want to start smoothly transitioning to phase 2
local phaseTransition = math.max(progress*(1+phaseBreak)-phaseBreak,0)

local helixMult = 1
local helixOffset = .5

--helix motion phase 1
local p1tR = cos(missileIndex*120+time*400*(rand1*helixMult+helixOffset))*1.3
local p1tF = -startDistance*progress + sin(missileIndex*120+time*400*(rand1*helixMult+helixOffset))*1.3


local helixHeight = 3

if startDistance < 10 then
	helixHeight = 2
end

local p1tU = (-cos(progress*270)*.5+.6-progress*.5)*helixHeight

--traversal motion phase 2
local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude * phaseTransition

local p2tF = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

local p2tR = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
local p2tU = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude*3
p2tF = p2tF + (sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

--speedScalar = 1 - (rand1)


--combine them
transRight = p1tR*(1-phaseTransition) + p2tR*phaseTransition
transFront = p1tF*(1-phaseTransition) + p2tF*phaseTransition
transUp = p1tU*(1-phaseTransition) + p2tU*phaseTransition


scale = progress*progress*1.5+.5",0,3
3990,"Meteor Strike (50 Yards) Falls Straight Down (4s, Gravity)","local height = ((9.8*4)*4)

transUp = height * ( 1 - progress*progress )
transFront = distanceToImpactPos",0,1
3991,Stand Still at End,transFront = distanceToFirePos,0,1
3992,Missile Snippets 2 - AWK,"--Allows you to split the missile lifecycle into two distinct sets of motion and blend between them starting at phaseBreak
local phaseBreak = .3 --choose the point in progress you want to start smoothly transitioning to phase 2
local phaseTransition = math.max(progress*(1+phaseBreak)-phaseBreak,0)
--multiply phase 1 motion by (1-phaseTransition) and phase 2 motion by phaseTransition",0,0
3994,Shaman Precast Missiles debug,"local phaseBreak = 1 --choose the point you want to start smoothly transitioning to phase 2
local phaseTransition = math.max(progress*(1+phaseBreak)-phaseBreak,0)

local helixMult = 1
local helixOffset = .5
--helix motion phase 1
local p1tR = cos(missileIndex*120+time*400*(rand1*helixMult+helixOffset))*1.3
local p1tF = -startDistance*progress + sin(missileIndex*120+time*400*(rand1*helixMult+helixOffset))*1.3

local p1tU = (-cos(progress*270)*.5+.6-progress*.5)*13

--traversal motion phase 2
local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude * phaseTransition

local p2tF = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

local p2tR = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
local p2tU = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude*3
p2tF = p2tF + (sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

--speedScalar = 1 - (rand1)





--combine them
transRight = p1tR
transFront = p1tF
transUp = p1tU + 4


",0,3
3995,Priest - Holy - Holy Precast Right,"--[[
local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = ((sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude) *progress^0.2
transUp = ((sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude) *progress^0.2
transFront = (transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude) *progress^0.2
	
]]--


scale = .01",0,1
3996,Tier 21 Frost DK Icy Missile,"faceImpactPos = 1
local phaseTwoStart = .9
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = distanceToImpactPos - 10
    --transUp = math.pow(progress,.2)
    transUp = rand2*1.5
    modelPitch = (progress*phaseTwoStart)*20
    transRight = -.5 + (rand1*3.5)
    
else
    transFront = -distanceToFirePos
    --transUp = math.pow(progress,.2)
    transUp = rand2*1.5
    transFront = 1-progress
    p = p/(1 - phaseTwoStart)
    --transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    faceImpactPos = 1
	transRight = -.5 + (rand1*3.5)
    
end",0,1
3997,"Parabola (High, Yaw Spin, Roll Wobble) Grow 1->3","scale = 1 + (2 * progress)

local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 720
local rollRate = 1440


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
modelRoll = sin(time*rollRate)*15",0,0
3998,Spiral Vortex (8 Missiles) (Randomized) + Grow (3x),"local startAngle = 0
local degreesPerSec = 360*rand1
local maxMagnitude = 3*rand2
local maxKickBack = 10*rand3

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
scale=1+(2*progress)
",0,8
3999,Radial Missiles - 16,"local radius = progress * totalDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1*anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

scale = 2*(progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,16
4000,Radial Missiles - 8,"local radius = progress * totalDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1*anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

scale = 2*(progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,8
4001,Parabola (High) (Accelerate) (Variance),"local angle = -5+(10*rand1)
local maxMagnitude = (startDistance * (.15+(rand2*.15)))

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = 0.7 + 2 * progress",0,1
4002,Shaman Precast Missiles - Healing Rain,"local phaseBreak = 1 --choose the point you want to start smoothly transitioning to phase 2
local phaseTransition = math.max(progress*(1+phaseBreak)-phaseBreak,0)

local helixMult = 1
local helixOffset = .5
--helix motion phase 1
local helixRadius = progress^2*10
local p1tR = cos(missileIndex*120+time*400)*helixRadius
local p1tF = -startDistance*progress + sin(missileIndex*120+time*400)*helixRadius+startDistance*(math.pow(progress,2))


local p1tU = (-cos(progress*270)*.5+.6-progress*.5)


--combine them
transRight = p1tR
transFront = p1tF
transUp = p1tU

 
scale = progress*progress*1.5+.5",0,3
4003,NPC - Glaive (No Parabola),"local spinRate = 1080

modelYaw = time * spinRate
",0,1
4004,8.0 Islands - Pirate - Southsea - Coin Missile,"local function parabola(m) return (4*m*(1-progress)*(progress)) end
local maxWidth = 1.5
local magnitude = math.min(startDistance/maxWidth,maxWidth)
local direction = 1
local currentTime = direction * time * 1000

if rand1>0.5 then
	direction = -1
end

transRight = direction * parabola(magnitude)
transUp = parabola(magnitude)
modelRoll = currentTime * (30 + (30 * rand1))
modelPitch = currentTime * (15 + (15 * rand2))",0,1
4005,8.0 Islands - Pirate - Southsea - Distraction Coin Missile,"local function parabola(m) return (4*m*(1-progress)*(progress)) end
local maxMagnitude = 5 + (5 + rand3)
local magnitude = math.min(startDistance/maxMagnitude,maxMagnitude)
local direction = 1

if rand1*rand2>0.25 then
	direction = -1
end

local currentTime = direction * time * 1000

transUp = parabola(magnitude)
modelRoll = currentTime * (30 + (30 * rand1))
modelPitch = currentTime * (15 + (15 * rand2))",0,1
4006,8.0 Islands - Pirate - Southsea - Glittering Scrap Coin Missile,"local direction = 1

if rand1*rand2>0.25 then
	direction = -1
end

local currentTime = direction * time * 1000
modelRoll = currentTime * (30 + (30 * rand1))
modelPitch = currentTime * (15 + (15 * rand2))",0,1
4007,Item - 7.3 - Antorus Raid Trinket - Prototype Decimator Missile,"
-- Fireball
local clockwiseOrNah = 1

if rand1 > 0.5 then
	clockwiseOrNah = -1
end

--transFront = math.pow(progress,3) * distanceToImpactPos

transFront = -sin(math.pow(progress, 2) * 2000) * (0.03)
transRight = clockwiseOrNah * sin(progress * 2000) * (0.03)


-- Annihilation Missile
--faceImpactPos = 0
--
--local rand4 = (rand1*10)%1
--
--local angle = -30
--local maxMagnitude = startDistance * .3 * rand4 + .2

--transAngle = angle
--transMag = (progress * 2) - 1
--transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2
--
--transFront = -distanceToFirePos * (1 - progress)
--
--local magnitude = transMag * .1
--
--transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
--transUp = ((sin((rand2 * 1000) + (time * 450)) + sin((rand1 * 1000) + (time * 150))) * magnitude)
--transFront = (transFront +
--	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)
--
--local slowProgressStart = 0.4
--local slowProgressEnd = 0.35
--local slowSpeed = 0.3
--local finalSpeed = 1
--
--speedScalar = finalSpeed
--
--if ( progress > slowProgressStart and progress < slowProgressEnd ) then
--   speedScalar = slowSpeed


end",0,1
4008,7.3.2 Illidan Quest - Crystal Disspation - Druid Missile (RKS),"local angle = 0
local maxMagnitude = startDistance * .25

local waveHeight = 5
local wavesPerSec = 1

local spinRate = -15


transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch =  -1 *time * spinRate",0,1
4009,Cinderflame Orb,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = -30
local maxMagnitude = startDistance * .3 * rand4 + 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .3

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
transFront = (transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = 1 - (progress * .5)
if rand3 > 0 then
	speedScalar = ((rand3 + .5) / 2)
end

scale = progress^0.5
",0,1
4010,Item - 7.3 Raid - Electrostatic Lasso,"local angle = 0
local maxMagnitude = startDistance * .15

scale = 1.7
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4011,8.0 Outlaw Town Dungeon - Boss 1 - Azurite Pow - Shoot Gun - MRN,"local maxSpread = 10
transAngle = 360 * rand1

transMag = progress * rand2 * maxSpread
transFront = (progress * startDistance) - distanceToFirePos",0,20
4012,7.3.2 WarCouncil - Chaos Pulse Missiles (TLD),"local angle = 0
local maxMagnitude = startDistance * .10 + (rand1 * 5)
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = time * spinRate


transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude * 1.5
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude",0,1
4013,Item - 7.3 - Antorus - Vitality Resonator Missile Right,"local angle = 0
local maxMagnitude = startDistance * .10

local glaiveCurveWidth = -8
transRight = cos(progress * 90) * (progress * glaiveCurveWidth)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000",0,3
4014,Item - 7.3 - Antorus - Vitality Resonator Missile Left,"local angle = 0
local maxMagnitude = startDistance * .10

local glaiveCurveWidth = 8
transRight = cos(progress * 90) * (progress * glaiveCurveWidth)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000


",0,3
4016,Item - 7.3 Raid - Antorus - Sheath of Asara - Missile,"--speedAbs = math.max(time - 0.3, 0) * 150


--1 * progress * progress * progress

--speedAbs = math.min(120, math.pow(0.3+progress * 3, 3) * 100) 

",0,0
4018,Priest - Shadow - Void Eruption Missile 2,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = 45
local maxMagnitude = startDistance

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
transFront = (transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = 1 - (progress * .5)
if rand3 > 0 then
	speedScalar = ((rand3 + .5) / 2)
end

scale = progress^0.5
",0,1
4019,Item - 7.3 - Antorus - Vitality Resonator Missile Middle,"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000


",0,3
4020,Item - 7.3 Raid - Antorus - Prototype Personnel Decimator,"
local maxMagnitude = 0.7	
local p = ((progress * 2) - 1)
local magnitude = (1 - (p * p)) * maxMagnitude

local magnitudeMag		= magnitude * 1--4
local magnitudeRight 	= magnitude * 1--3.5
local magnitudeUp 		= magnitude * 1--0.2
local magnitudeFront 	= magnitude * 1--2

transMag 	= magnitudeMag
transRight 	= magnitudeRight 	* (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60)))
transUp 	= magnitudeUp 		* (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100)))
transFront 	= magnitudeFront 	* (sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100)))

local slowProgressStart = 0.0
local slowProgressEnd = 1.5
local slowSpeed = 0.5
local finalSpeed = 12

speedScalar = finalSpeed

if ( progress > slowProgressStart and progress < slowProgressEnd ) then
   speedScalar = slowSpeed
end",0,1
4021,Item - 7.3 Raid - Antorus - Trinket Intellect - Norgannon,"local phaseBreak = 1 --choose the point you want to start smoothly transitioning to phase 2
local phaseTransition = math.max(progress*(1+phaseBreak)-phaseBreak,0)

local helixMult = 1
local helixOffset = .5
--helix motion phase 1
local p1tR = cos(rand1*360+time*400*(rand1*helixMult+helixOffset))*1.3
local p1tF = -startDistance*progress + sin(rand1*360+time*400*(rand1*helixMult+helixOffset))*1.3

local helixHeight = 3
if startDistance < 10 then
	helixHeight = 2
end

local p1tU = (-cos(progress*270)*.5+.6-progress*.5)*helixHeight

--traversal motion phase 2
local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude * phaseTransition

local p2tF = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

local p2tR = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
local p2tU = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude*3
p2tF = p2tF + (sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

--speedScalar = 1 - (rand1)





--combine them
transRight = p1tR*(1-phaseTransition) + p2tR*phaseTransition
transFront = p1tF*(1-phaseTransition) + p2tF*phaseTransition
transUp = p1tU*(1-phaseTransition) + p2tU*phaseTransition

scale = progress*progress*0.5+.3",0,1
4022,"Parabola Fast in, Slow Out","	local ArcHeight=2
	transFront=((startDistance-distanceToFirePos)*(math.log(progress)+3)/4)
	transUp=sin(progress*180)*ArcHeight",0,0
4023,7.3 Argus Raid - Keeper - Gate Visual Open - Fire - KLH,"local angle = 0
local maxMagnitude = startDistance * .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .4

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,3
4024,8.0 Islands - The Headhunters - Berserker Zar'ri - Throw Axe (R),"local angle = -45
local maxMagnitude = startDistance * .05
local spinRate = 1080


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch = time * spinRate
modelRoll = 45
rollOrder = 1
pitchOrder = 2
yawOrder = 3",0,1
4025,8.0 Islands - The Headhunters - Berserker Zar'ri - Throw Axe (L),"local angle = 45
local maxMagnitude = startDistance * .05
local spinRate = 1080


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch = time * spinRate
modelRoll = -45
rollOrder = 1
pitchOrder = 2
yawOrder = 3





",0,1
4026,8.0 - Nazmir - Blood Troll - Missile Var 1,"local waveHeight = .1
local wavesPerSec = 3 + (rand1 * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2

--scale = progress * 2",0,1
4027,ArgusTitan Rain,"local magnitude = 10

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
4028,8.0 Islands - AI - Jaina's Angels - Squallshaper Solice - Arctic,"
transUp = (1-progress)*3*sin(progress*(rand3*.5+.1)*450+(rand1*360))*(progress*progress*2)*sin(progress*150)*(rand2*.5+.75)
transRight = (1-progress)*3*cos(progress*(rand3*.5+.5)*450+(rand1*360))*(progress*progress*2)*sin(progress*150)*(rand2*.5+1)
scale = 2.5

--scale = progress*progress*2+.5",0,0
4029,"7.0 Legion - Radial Pattern (8 Missile, no rand)","local radius = progress * totalDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

--scale = 2*(progress)
faceImpactPos = 1
modelYaw = curAngle-75",0,8
4030,Hunter - Survival - Core - Surv8 v3 Wild Axes - Missiles,"local angle = -65
local maxRoll = 40
local maxMagnitude = startDistance * .1
maxMagnitude = math.min(3, maxMagnitude)

if missileIndex == 1 then
	angle = angle * -1
	maxRoll = maxRoll * -1
end

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = (progress * 2) - 1
modelRoll = (1 - (modelRoll * modelRoll)) * maxRoll",0,2
4031,7.3 Argus Raid - Death Titan - P1 Titan Buff,"scale = .25 + (progress *.75)

factor = 20
transUp = distanceToImpactPos + 1
transUp = transUp + (-factor * progress * progress) + (factor*progress)",0,0
4032,Hunter - Survival - Talent - Arctic Bola - Missile,"modelPitch = 180

local angle = 65
local maxRoll = -20
local maxMagnitude = startDistance * .1
maxMagnitude = math.min(3, maxMagnitude)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = (progress * 2) - 1
modelRoll = (1 - (modelRoll * modelRoll)) * maxRoll",0,1
4033,"Parabola (Roll Spin, Medium-High)","local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 3000",0,1
4034,Hunter - Survival - Talent - Chakrams - Missiles A,"
local m = missileIndex*2-1
--transRight = math.pow(sin(progress * 180),.3) * 2 * m
transRight = sin(progress * 360) * 2 * m

--transFront = -startDistance*progress+math.pow(sin(180*progress),1)*math.max(14, startDistance)

transFront = -startDistance*progress+(cos(progress*180)*-.5+.5)*startDistance
",0,2
4035,Hunter - Survival - Talent - Chakrams - Missiles B,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 5
local maxKickBack = 5
local m = missileIndex*2-1

transAngle = startAngle + (240) + (time * degreesPerSec)
transAngle = transAngle * m

transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

transFront = transFront + -distanceToFirePos * (1 - progress)
",0,2
4036,Accelerated Missile (use progress^4),"transFront = 0-distanceToFirePos+(math.pow(progress,4)*startDistance)
",0,1
4037,"Accelerated Missile (Slower in, Faster Out)","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local PreSlowInLimit=.1
local SlowInLimit=.6
if progress<=PreSlowInLimit then
	transFront = 0-distanceToFirePos+(math.pow(remap(progress,0,PreSlowInLimit,0,.3),4)*startDistance)
elseif progress<SlowInLimit then
	transFront = 0-distanceToFirePos+(math.pow(remap(progress,PreSlowInLimit,SlowInLimit,.3,.5),4)*startDistance)
else 
	transFront = 0-distanceToFirePos+(math.pow(remap(progress,SlowInLimit,1,.5,1),4)*startDistance)
end
",0,1
4038,Chakram - Swirl Into Target (Clockwise) (1 Orbits),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transFront=(-cos(360*progress)*startDistance*(1-progress))+(startDistance*(1-progress))
transRight=sin(360*progress)*(startDistance/2)*(1-progress)",0,1
4039,Chakram - Swirl Into Target (Clockwise) (2 Orbits),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transFront=(-cos(720*progress)*startDistance*(1-progress))+(startDistance*(1-progress))
transRight=sin(720*progress)*(startDistance/2)*(1-progress)",0,1
4040,Chakram - Swirl Into Target (Counter-Clockwise) (2 Orbits),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transFront=(-cos(720*progress)*startDistance*(1-progress))+(startDistance*(1-progress))
transRight=-sin(720*progress)*(startDistance/2)*(1-progress)",0,1
4041,Chakram - Swirl Into Target (Counter-Clockwise) (1 Orbits),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transFront=(-cos(360*progress)*startDistance*(1-progress))+(startDistance*(1-progress))
transRight=-sin(360*progress)*(startDistance/2)*(1-progress)",0,1
4042,8.0 Islands - AI - Gazlowe's Greasemonkeys - Skaggit - Rock-It!,"local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)


maxMagnitude = startDistance * .25 * progress

transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4043,"Parabola (Fast in/out, High) (5 Missiles)","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end
local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end
local Noise=1
if missileIndex==1 then
elseif missileIndex==2 then Noise=rand1
elseif missileIndex==3 then Noise=rand2
elseif missileIndex==4 then Noise=rand3
elseif missileIndex==5 then Noise=rand1+rand2
end
local parabolicFactor = 4*distanceToFirePos
frontP = HorizontalSCurve(progress,1+Noise)
upP    = HorizontalSCurve(progress,1+Noise)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)
transRight = sin(remap(missileIndex,1,5,-90,90)*progress)*3",0,5
4044,8FX - KulTiras - Storm Priest - Missiles (Right),"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = -30
local maxMagnitude = startDistance * .3 * rand4 + .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

--transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
--transFront = (transFront +
	--(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = 1 - (progress * .5)
if rand3 > 0 then
	speedScalar = ((rand3 + .5) / 2)
end

scale = progress^0.5
",0,4
4045,Parabola (90 Yaw),"local angle = 0
local maxMagnitude = startDistance * .15
modelYaw = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4046,Warlock - Destro - Chaos Bolt (Secondary),"
local waveHeight = 1.2
local wavesPerSec = 5

--speedAbs = .1+500*progress*progress*progress*progress*progress*progress
transFront = progress



if (missileIndex == 0) then
transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
end

if (missileIndex == 1) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end

if (missileIndex == 2) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec * 360 * ((rand3+0.5)/2)) 
end




--scale = 1+2*progress

",0,3
4047,Warlock - Destro - Chaos Bolt (Main),"
faceImpactPos = 1

",0,0
4048,Spin (Yaw),"
modelYaw = progress * 600",0,1
4049,Warlock - Destro - Incinerate,"local waveHeight = 1.5 * (startDistance / 30)
local wavesPerSec = 2 * (.8 + (.4 * rand2))

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
transUp = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 4

faceImpactPos = 0

transUp = progress^6*(sin(progress * 180) * 25)

scale = 0.5+ (progress*2)",0,1
4050,Parabola (90 degree angle),"local angle = 90
local maxMagnitude = startDistance * .5
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = 90
modelRoll = time * spinRate
",0,1
4051,8.0 Outlaw Town Dungeon - Spinning Mug - SAN,"local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
modelPitch = -60",0,1
4053,Francesco Test - Internal Only - Missile,"local flip = math.floor(rand3*2)*2-1
local rand4 = (rand3*10)%1
local flip2 = (math.floor(rand4*2)*2-1)+.5 -- because i want flip to be down .5 and up 1.5


--colorA = progress
--colorR = 0.1
--colorG = 0
--colorB = 0

--transfront = transFrontTotalProgress

--minimumDurationAsLaunchDelay = 1

transRight = sin(totalProgress*180)*totalProgress*(rand1*2+1)*flip*startDistance*.03
transUp = sin(totalProgress*180)*totalProgress*(rand2*1)*flip2*startDistance*.03

-- overall wave * slant the wave * random (more out than up/down) * positive or negative * tuned for 30 yards
 ",0,0
4054,"Parabola (-90 Pitch, Fixed Height 7 yards)","local angle = 0
local maxMagnitude = 7
modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4055,Azerite Test Missile Chest,"local rand4 = (rand1*10)%1
local rand5 = (rand2*10)%1
local rand6 = (rand3*10)%1
local rand7 = (rand4*10)%1
local rand8 = (rand5*10)%1
local rand9 = (rand6*10)%1
local rand10 = (rand7*10)%1
local rand11 = (rand7*10)%1

local flip = math.floor(rand6+.5)*2-1
local flip2 = math.floor(rand7+.5)*2-1



transUp = sin(progress*180)*sin(progress*rand2*1200+(rand11*1000))*rand3
transRight = sin(360*progress)*flip*(rand4*3+1.5)
transFront = -(cos(360*progress)-1)*startDistance*.5
scale = rand5*.1+.05

speedAbs = (rand1+(2*rand10))*3*missileIndex

transUp = transUp+sin(progress*180)*5*(rand9*1.1-.3)


transRight = transRight+rand7*(1-progress)
transUp = transUp+(rand8*2-1)*(1-progress)",0,5
4056,Azerite Test Missile Bar,"local rand4 = (rand1*10)%1
local rand5 = (rand2*10)%1
local rand6 = (rand3*10)%1
local rand7 = (rand4*10)%1
local rand8 = (rand5*10)%1
local rand9 = (rand6*10)%1
local rand10 = (rand7*10)%1
local rand11 = (rand7*10)%1

local flip = math.floor(rand6+.5)*2-1
local flip2 = math.floor(rand11+.5)*2-1



transUp = sin(204*progress)*2.1
transRight = progress*rand1*.45
scale = (rand5*.1+.05)*(1-progress)*(1-progress)+.03
transFront = -1

speedAbs = (rand1+(2*rand10))*6*missileIndex


transRight = transRight+ sin(180*progress)*flip*(rand4*3+1.5)*sin(progress*180*rand7)
transUp = transUp + sin(progress*180)*sin(progress*rand2*900+(rand11*1000))*rand3

transRight = transRight + sin(progress*180)*cos(progress*rand2*600+(rand11*1000))*flip2",0,5
4057,Warlock - Destro - Soul Fire,"local waveHeight = 0.2 * (startDistance / 30)
local wavesPerSec = 3 * (.8 + (.4 * rand2))

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
transUp = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 4

faceImpactPos = 0

transUp = progress^6*(sin(progress * 180) * 10)

--scale = 0.5+ (progress*2)",0,1
4058,Warlock - Destro - Incinerate V2,"
local waveHeight = 1.2
local wavesPerSec = 1.6



transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

if rand2>0.5 then transRight = -1*transRight end

scale = 0.3 + (progress)

--speedAbs = rand1*10-5
local randomSpeedAmount = 0.25
out_speedScale = (1 - randomSpeedAmount) + (rand1 * randomSpeedAmount)",0,1
4059,Warlock - Destro - Soul Fire,"local angle = 0
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4060,Aspect of the Eagle,scale = .85,0,0
4061,Warlock - Bilescourge Bomber Missile v1,"local magnitude = 8.5
local flip

flip = rand1

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*rand2*360

if flip <= 0.5 then
	transRight = (rand2*3) + (3*rand1*progress)
elseif flip > 0.5 then
	transRight = -(rand2*3) - (3*rand1*progress)
end",0,1
4064,"Parabola (Very High, No Pitch)","local angle = 0
local maxMagnitude = startDistance * .60

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch=0",0,1
4065,"Up, then Down (uses transup=startDistance*2/5*sin(progress*180))","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end


transUp=sin(progress*180)*startDistance*2/5

modelPitch=remap(progress,0,1,80,-80)
",0,0
4066,Pitch Model 180,"modelPitch = 180
modelRoll = 0
modelYaw = 0",0,1
4067,Kings' Rest - Boss 3 Trash - Spectral Beastmaster - Poison Barra,"local maxSpread = 8
if missileIndex ~= 1 then
	transAngle = 60 * math.pow(-1, missileIndex)
	transMag = progress * maxSpread
	if missileIndex > 3 then
		transMag = transMag * rand2
	end
end

transFront = (progress * startDistance) - distanceToFirePos",0,20
4068,"Spin (Yaw, Roll = 90)","modelRoll=90
modelYaw = progress * 600",0,1
4069,Boomerang Test,"
local m = missileIndex*2-1
--transRight = math.pow(sin(progress * 180),.3) * 2 * m
transRight = sin(progress * 360) * 2 * m

--transFront = -startDistance*progress+math.pow(sin(180*progress),1)*math.max(14, startDistance)

transFront = -startDistance*progress+(cos(progress*180)*-.5+.5)*startDistance
",0,2
4070,Kings' Rest - Boss 3 Trash - Spirit Summon Missile 1. Trigger,"local factor = 2
local maxHeight = 1
local direction = 1
local noiseAmt = 6

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25)) + ((1-progress)*progress*4*maxHeight)
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,1
4071,Hunter - Wildfire Infusion - Volatile Dust,"local blend = math.pow(startDistance/40,1.35)

local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local far = parabola(1,1,startDistance*.1)
local near = 0

transUp = blend*far+(1-blend)*near

--scale = 0.95
--modelPitch = time * 360
--modelYaw = time * 45",0,1
4072,Hunter - Wildfire Infusion - Shrapnel Dust,"local blend = math.pow(startDistance/40,1.35)

local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local far = parabola(1,1,startDistance*.1)
local near = 0

transUp = blend*far+(1-blend)*near

scale = 5.0
--modelPitch = time * 360
--modelYaw = time * 45",0,1
4073,Hunter - Wildfire Infusion - Pheromone Dust,"local blend = math.pow(startDistance/40,1.35)

local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local far = parabola(1,1,startDistance*.1)
local near = 0

transUp = blend*far+(1-blend)*near

scale = 0.5
--modelPitch = time * 360
--modelYaw = time * 45",0,1
4074,"8.0 Zandalar Intro - Rocket Blossom (1 Missile, Right, Down)","local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local maxArc = 3

local p = math.pow(progress,3)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = math.rad((rand1 * 40) + 90)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( math.abs(math.sin(progress*math.rad(720)) * (1-progress)), .8)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 3
transRight = transRight + progressMult*noise1*2.5*factor 
ransUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*3*factor 



",0,1
4075,"Parabola (High, Pitch Spin Slow, Model Rolled 90)","local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 90
",0,1
4076,"Parabola (Super- High, Pitch Spin Slow, Model Rolled 90)","local angle = 0
local maxMagnitude = startDistance * 3
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 90
",0,1
4077,Cluster Bomb - 4 Tight formation Missiles  (MDE),"local angle = 0
local maxMagnitude = startDistance * .2
local spread = 1

-- lower is closer
local distBetweenMissiles = 0.12


speedScalar = 1.2 - (missileIndex * distBetweenMissiles)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

-- missile impact location variance left/right/up/down. don't mess with the first impact
if missileIndex > 0 then
	transUp = (rand2 - 1) * spread * progress
	transRight = (rand2 - 1) * spread * progress
end

if missileIndex == 0 then
	scale = 1.5
elseif missileIndex == 1 then
	scale = 1.2
else
	scale = 1
end",0,4
4078,Azerite Armor - Tier 1 - Hunter - Wildfire Cluster,"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 0.6",0,1
4079,"Coin Missiles (New, 3 Missiles)","local factor = 1.25
local maxWidth = 2

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

--scale = math.max(math.pow(progress,factor*2),progress)",0,3
4080,"Coin Missiles (New, 1 Missiles)","local factor = 1.25
local maxWidth = 2

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

--scale = math.max(math.pow(progress,factor*2),progress)",0,1
4081,Garona Blade Flip,"local spinRate = -1800
scale = math.max(1 - progress,0.01)
modelRoll = time * spinRate
modelPitch = time * spinRate


-- distance = X (totalDistance / 2)
-- acceleration due to gravity = -9.8
-- velocity = v0 + a * t
-- position = p0 + v0 * t + 0.5 a * t * t

--local initialPosition = 0;
--local initialVelocity = 9.8; 
--local initialDistance = startDistance - initialPosition;


--local travelTime = initialDistance / initialVelocity;



--local t = travelTime * progress

--transUp = initialPosition + initialVelocity * t + -9.8 * t * t
--transFront = 0


local angle = 0
local maxMagnitude = startDistance * .3

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
4082,Spiral Vortex In-Out Motion - 5 Missiles (Disc Boss),"local startAngle = 0
local degreesPerSec = 200
local maxMagnitude = 3
local maxKickBack = 5
speedOffset = 1
local maxMagnitude = startDistance * .05
scale = 1 + (0.5 * progress)


transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = .25 + progress
transMag = (transMag * transMag * 1.5) - 1
transMag = (.1 + (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

",0,5
4083,Doug Test - Missile Script,transRight = sin(180*progress) * 5,0,0
4084,Hunter - Survival - Talent - Chakrams - Missiles A - Doug Test,"
local m = missileIndex*2-1
--transRight = math.pow(sin(progress * 180),.3) * 2 * m
transRight = sin(progress * 720) * 2 * m

--transFront = -startDistance*progress+math.pow(sin(180*progress),1)*math.max(14, startDistance)

transFront = -startDistance*progress+(cos(progress*180)*-.5+.5)*startDistance
",0,2
4085,"Parabola (Pitch Spin Fast, Low)","local angle = 0
local maxMagnitude = startDistance * .10
local spinRate = 1080

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
4086,Battle Pet - Trainer Battle - Rocket Barrage,"local angle = 0
local maxMagnitude = startDistance * 1
local spread = 2

-- lower is closer
local distBetweenMissiles = 1


speedAbs = 0.1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

-- missile impact location variance left/right/up/down. don't mess with the first impact
if missileIndex > 0 then
	transRight = rand2 * spread * progress
	transFront = rand3 * spread * progress
end",0,1
4087,8.0 Stormsong - Monastery - Escort - Avoidance Missile - GJC,"
transAngle = 0	

local splitPoint = 0.5
local spreadX = (rand1-.5)*1.5
local spreadY = (rand2-.5)*1.5
local spreadAmt = 3
local height = 12

--speedAbs = startDistance / 7.5

if progress < splitPoint then
	transMag = (1 - (((progress*3.33)-1)^2)) * height
	speedAbs = speedAbs * .5
else
	transRight = spreadAmt*spreadX*(progress-splitPoint)/(1-splitPoint)
	transFront = spreadAmt*spreadY*(progress-splitPoint)/(1-splitPoint)
    transMag = (1 - (progress*1.43) +0.43) * height
	speedAbs = speedAbs * (1.2+progress)^3
end

",0,6
4088,Raise (10 Yards) Straight Up,"local magnitude = 10

transUp = magnitude * ( progress )
transFront = distanceToImpactPos
",0,1
4187,"Drunken Fountain (3 Missiles) (low, no scalar)","local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
4188,World - Islands - Azerite - Absorb Resource - High (>5 yds),"
local waveHeight = 1.2
local wavesPerSec = 1.3

--speedAbs = .1+500*progress*progress*progress*progress*progress*progress
transFront = progress



if (missileIndex == 0) then
transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end

if (missileIndex == 1) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end

if (missileIndex == 2) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec * 360 * ((rand3+0.5)/2)) 
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end




--scale = 1+2*progress

",0,3
4189,"8.0 QRP - Drustvar - Soul Embers - Random, Accelerate","--local angle = 0
--local maxMagnitude = startDistance * .10

--transAngle = angle
--transMag = (progress * 2) - 1
--transMag = (1 - (transMag * transMag)) * maxMagnitude

transUp = sin(180*progress)*2
transRight = -sin(180*progress)*1.5

speedScalar = 1 + (time*time*time*time*time*time)/700",0,1
4190,World - Islands - Azerite - Absorb Resource - High (<5 yds),"local percentOfCircle = 1
local startAngle = 0
local startRadius = 5 * ((rand1 + 0.5)/2)
local radius = 0

if missileIndex == 0 then
	startAngle = 0
elseif missileIndex == 1 then
    startAngle = 120
elseif missileIndex == 2 then
    startAngle = 240
end

if progress == 0 then
	radius = startRadius - startRadius
elseif progress < 0.5 then
	radius = startRadius * (1/0.5) - startRadius
elseif progress >= 0.3 then
	radius = startRadius * (1/progress) - startRadius
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius)
transRight = (cos(curAngle) * radius)

out_speedScale = ((rand2 + 1)/2) +0.5



",0,3
4191,"8.0 Islands - Azerite Gain - High, 5+ Yards","local waveHeight = 1
local wavesPerSec = 1


if (missileIndex == 0 or missileIndex == 3) then
transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1 * 360 * ((rand2+0.5)/2))
end

if (missileIndex == 1 or missileIndex == 4) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end

if (missileIndex == 2 or missileIndex == 5) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec * 360 * ((rand3+0.5)/2)) 
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.4 * 360 * ((rand2+0.5)/2))
end

transFront = progress*progress*progress*progress
--transUp = sin(progress*progress*180) * 2

speedOffset = rand1*5

--scale = 1+2*progress

",0,5
4192,8.0 Allied Races - Mag'har Orc - Unlock Scenario - Turret Blast ,"local angle = 0
local maxMagnitude = startDistance * 0.10
local spinRateP = 0
local spinRateY = 1080
local spinRateR = 0

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRateP
modelYaw = time * spinRateY
modelRoll = time * spinRateR",0,1
4193,"Drunken Fountain (1 Missile, no speed adjustement)","local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
4194,"Drunken Fountain (1 Missile, Low)","local angle = 0
local maxMagnitude = startDistance * .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
4195,Meteor Strike (15 Yards) Falls Straight Down + Set Pitch to -90,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
modelPitch=-90",0,1
4196,Warlock - Demonology - Shadowbolt Missile,"local flip

flip = rand1

transFront = progress

if flip <= 0.5 then
	transRight = sin(progress * 180) * 1.3 *rand2
	transUp = sin(progress * 180) * 2 *rand1
end

if flip > 0.5 then
	transRight = -sin(progress * 180) * 1.3 *rand3
	transUp = sin(progress * 180) * 2 *rand2
end



",0,1
4197,Warlock - Demonology - Imp Fel Firebolt Missile,"local waveHeight = 0.1
local wavesPerSec = 3
local flip

flip = rand1

transFront = progress

if flip <= 0.5 then
	transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
	transUp = waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end

if flip > 0.5 then
	transRight = -waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
	transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end



",0,1
4198,Warlock - Bilescourge Bomber Missile Secondary,"local magnitude = 10
local flip

flip = rand1


transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*rand2*180

if flip <= 0.5 then
	transRight = (rand2*5) + (5*rand1*progress)
elseif flip > 0.5 then
	transRight = -(rand2*5) + (5*rand1*progress)
end",0,1
4199,Warlock - Bilescourge Bomber Missile v2,"--[[

local radius = 10*math.pow((1-sin(progress*90)),0.30+rand3/5)


local curAngle = (progress * (rand2/5+0.9)) * 222.5 --+ 360 * (missileIndex + rand1/3) / missileCount


--transFront = startDistance - (sin(curAngle) * radius) - distanceToFirePos
transFront = (1-progress)*startDistance-(sin(curAngle) * radius)
transRight = (cos(curAngle) * radius)
transUp = 10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25

modelYaw = progress * 35

]]--

local flip = math.floor(rand1+.5)*2-1

transRight = sin(progress*180)*(rand2*3+1)*flip
transUp = 5.8-math.pow(progress,rand3*2+2)*5.8

scale = .6",0,1
4200,Azerite Missile Circle Player (Clockwise),"local startAngle = 90
local radius = 15

local magnitude = 10



--modelPitch = time * 720
modelRoll = 90
modelYaw = time * 2000
local waveHeight = 15
--local wavesPerSec = 1
--transUp = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

local curAngle = (progress * 500) + startAngle

if progress < 0.3 then
	radius = radius * progress/0.3
elseif progress > 0.7 then
	radius = radius * (1-progress)/0.3
end
transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
4201,Azerite Missile Circle Player (Counter clockwise),"local startAngle = 90
local radius = 15

local magnitude = 10



--modelPitch = time * 720
modelRoll = 90
modelYaw = time * 2000
local waveHeight = 15
--local wavesPerSec = 1
--transUp = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

local curAngle = -1*(progress * 500) + startAngle

if progress < 0.3 then
	radius = radius * progress/0.3
elseif progress > 0.7 then
	radius = radius * (1-progress)/0.3
end
transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
4202,Azerite - Tier 1 - Drustvar - Ruinous Bolt,scale = 0.5,0,0
4203,8.0 Allied Races - Mag'har Orc - Liquid Hellfire,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 7

scale=math.max(.1,progress)
transUp = parabola(1,1,height)",0,1
4204,Azerite - Tier 1 - Stormsong - Tidal Surge,"faceImpactPos = 1
local phaseTwoStart = .6
local p = progress - phaseTwoStart
local startTrans = missileIndex * 3 - 1.5


if progress <= phaseTwoStart then
    transFront = 0-distanceToFirePos-sin(progress/phaseTwoStart)
    transUp = math.pow(progress,.3)*2
    modelPitch = (phaseTwoStart-progress*phaseTwoStart)*30
    transRight = startTrans
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    
    modelPitch = 0
    --faceImpactPos = 1
    --transRight = startTrans*(1-p)
    --transUp = sin(p*180*4)*.5
	--transRight =  startTrans*(1-p) * cos(p*180*4*startTrans)*.5
	
	transUp = transUp * (1 - p)
	--local flip = missileIndex * 2 - 1
	--transUp = transUp * 1.5 * sin(p*180*3*flip)
	
	transRight = startTrans * (1 - p)
	transRight = transRight * cos(p*180*3)
end

--transUp = sin(progress*180*cycles)*radius
--transRight = cos(progress*180*cycles)*radius",0,2
4205,"Drunken Fountain (1 Missile, Very Low)","local angle = 0
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
4207,Item - 8.0 Raid - Uldir - Trinket Intellect - Vigilant's Bloodsh,"--transUp = sin(progress*180*3) * 2
--transRight = cos(progress*180*3) * 2",0,1
4208,Sarah - Test - Test missile playground,"transFront = progress - distanceToFirePos

transFront = -sin(progress*180) * 8

transUp = sin(progress*180) * (progress^10) * 20






--transFront = progress - distanceToFirePos
--transFront = -sin(progress*180) * 8
--transUp = (1-progress) * 5",0,1
4209,Hunter - Survival - Serpent Sting,"--transFront = sin(progress*180) * 3
--transRight = sin(progress*180) * (progress^10) * 10
--transUp = sin(progress*180) * (progress^15) * 15
--[[

-- GBerger trying a thing:
local minDistReq = 8
local distForBite = 6

if startDistance > minDistReq then
	--transRight = -sin(progress*180) * (progress^10) * 10
	--if missileIndex == 0 then
	--	transRight = -transRight
	--end
	if distanceToImpactPos < distForBite then
		local phaseProgress = 1.0 - (distanceToImpactPos / distForBite)
		transUp = sin(phaseProgress*180) * (phaseProgress^8) * 10
	end
end
]]--

-- Akugler's pass

startSin = startDistance

transRight=0
transUp=0
transFront=0
indexFlip = (missileIndex*2-1)

transRight = indexFlip*10*(sin(progress*180))*math.pow(progress,10)
--transUp = 10*(sin(progress*180))*math.pow(progress,10)
--modelRoll = 90 * indexFlip

",0,2
4210,"Itano Circus/Macross Missiles (2 Missiles, Large Arc)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(0)
local maxAngle = math.rad(180)
local maxArc = 20

local p = HorizontalSCurve(progress,3)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((rand1* (maxAngle - minAngle)))
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 2
transRight = transRight + progressMult*noise1*4*factor
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor
",0,2
4211,Itano Circus/Macross Missiles (2 Missiles),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(80)
local maxAngle = math.rad(120)
local maxArc = 10

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 2
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor 

scale = 3 * (arcProg)",0,2
4212,Hunter - Survival - Raptor Strike - Ranged,"transFront = progress - distanceToFirePos
transFront = -sin(progress*360) * 10
",0,0
4213,"Drunken Fountain (5 Missiles, spiral, no speed scalar)","local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = 720

modelRoll = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,5
4214,8.0 Azerite Armor - M.E.N.D. - Saw - Poison Vial,"modelPitch = 90
modelRoll = 0
modelYaw = 0

transFront = -0.45",0,1
4215,8.0 Azerite Armor - M.E.N.D. - Saw - Spike,"modelPitch = 90
modelRoll = 0
modelYaw = 0

transFront = -0.3",0,1
4216,Test - FX - Trevor's Test Missile Script,"local waveHeight = 1.2
local wavesPerSec = 1.3


transFront = progress


transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))


",0,1
4217,3 missiles,,0,3
4218,Hunter - Survival - Serpent Sting 2,"--transFront = sin(progress*180) * 3
--transRight = sin(progress*180) * (progress^10) * 10
--transUp = sin(progress*180) * (progress^15) * 15
--[[

-- GBerger trying a thing:
local minDistReq = 8
local distForBite = 6

if startDistance > minDistReq then
	--transRight = -sin(progress*180) * (progress^10) * 10
	--if missileIndex == 0 then
	--	transRight = -transRight
	--end
	if distanceToImpactPos < distForBite then
		local phaseProgress = 1.0 - (distanceToImpactPos / distForBite)
		transUp = sin(phaseProgress*180) * (phaseProgress^8) * 10
	end
end
]]--

-- Akugler's pass

startSin = startDistance

transRight=0
transUp=0
transFront=0
indexFlip = -1

--transRight = indexFlip*5*(sin(progress*180))*math.pow(progress,5)
modelRoll = 90 * indexFlip

",0,1
4219,World - Islands - Azerite - Absorb Resource - Low (>5 yds),"local waveHeight = 1.2
local wavesPerSec = 1.3

transFront = progress


transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))


",0,1
4220,World - Islands - Azerite - Absorb Resource - Low (<5 yds),"local percentOfCircle = 1
local startAngle = 0
local startRadius = 5 * ((rand1 + 0.5)/2)
local radius = 0

startAngle = rand1 * 360

if progress == 0 then
	radius = startRadius - startRadius
elseif progress < 0.5 then
	radius = startRadius * (1/0.5) - startRadius
elseif progress >= 0.3 then
	radius = startRadius * (1/progress) - startRadius
end

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius)
transRight = (cos(curAngle) * radius)

out_speedScale = ((rand2 + 1)/2) +0.5



",0,1
4221,Chakrams Boomerang Missile,"--[[transFront = sin(progress*180)*5
transRight = sin(progress*360)*5
]]--

cleanFront = 0
if progress <.5 then
	cleanFront = -progress*2*startDistance 
else
	cleanFront = -(1-progress)*2*startDistance  
end

transFront = cleanFront + sin(progress*180)*startDistance
transRight = sin(progress*360)*5
",0,2
4222,"Drunken Missiles (5 Missile, Parabolic)","local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)


transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,5
4223,8.1.5 Brawler's Guild - Robe-Robbing Robert - Cloth Scrap Visual,"local missileTime = 3
local riseTime = .4
local swingRampUpTime = .75
local radius = 5 + 5*rand2

local phaseOneStop = riseTime/missileTime
local hoverHeight = 2 + 2*rand1

local p = progress - phaseOneStop

if progress <= phaseOneStop then
    transFront = 0-distanceToFirePos
    transUp = hoverHeight*progress/phaseOneStop
    
else
    --p = p/(1 - phaseOneStop)
    transFront = radius*sin(360*rand3)*(p)
    transRight = radius*cos(360*rand3)*(p)
    transUp = hoverHeight*(1-p)
end

scale = .2 + .1*rand2




local progressMult = math.min(1, math.max(0, (1/(swingRampUpTime-riseTime))*progress + riseTime/(riseTime-swingRampUpTime)))

local swingSize = 2
local swingRight = swingSize * cos(progress*90*missileIndex) * progressMult
local swingUp = -1*swingSize* math.sqrt(math.abs(sin(progress*90*missileIndex))) * progressMult


transRight = transRight + swingRight
transUp = transUp + swingUp
",0,9
4225,8.1 Zuldazar Raid - Boss - Loa Council - Cosmetic Missile ,"	local coneWidth = 90
	local coneRotation = 65
	local coneNoiseFactor = 0.75


--speedScalar = ((progress - 1)*(progress - 1))*math.random(1,3)
--modelPitch=math.sin(progress*1080*math.pi/180)*math.random(8,27)
--modelRoll=progress*1080

	local coneOffset
	local resultWidthAtDist = math.tan(math.rad(coneWidth/2))*startDistance

		if (missileCount%2)==0 then
			local offsetBase = ((resultWidthAtDist*2)/(missileCount-1))
			if (missileIndex+1)<=(missileCount/2) then
				if missileIndex+1==1 then
					coneOffset = (offsetBase/2)
				else
					coneOffset = (offsetBase/2)+(offsetBase*missileIndex)
				end
				transAngle = coneRotation
			else
				if (missileIndex+1)-(missileCount/2)==1 then
					coneOffset = (offsetBase/2)
				else
					coneOffset = (offsetBase/2)+(offsetBase*((missileIndex)-(missileCount/2)))
				end
				transAngle = 360 - coneRotation
			end
		else
			if (missileIndex+1)<=(missileCount/2) then
				coneOffset = (resultWidthAtDist) * ((missileIndex+1)/math.floor(missileCount/2))
				transAngle = coneRotation
			elseif (missileIndex+1)>=(missileCount/2) and (missileIndex+1)~=missileCount then
				coneOffset = (resultWidthAtDist) * ( ((missileIndex+1)-math.floor(missileCount/2)) / math.floor(missileCount/2) )
				transAngle = 360 - coneRotation
			else
				coneOffset = 0
				transAngle = 0
			end
		end


		transMag = progress * coneOffset
		transUp = coneNoiseFactor * rand2 * progress",0,6
4226,Rogue - Secret Technique v1,"--[[
local maxUp = 3
local maxRight = 3
local mult = 0

if progress < 0.5 then
	mult = progress / 0.5
else 
	mult = (0.5 - (progress - 0.5)) / 0.5
end

transUp = maxUp * mult
transRight = maxRight * mult
--]]
local angle = 45
local maxMagnitude = 1.5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4227,Rogue - Secret Technique - A,"local angle = 45
local maxMagnitude = 2

scale = 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4228,Rogue - Secret Technique - B,"local angle = -45
local maxMagnitude = 2

scale = 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4229,Glaive + Parabola (High) + Always Arrive in ~4 Sec,"if (time < 4) then
	speedAbs = distanceToImpactPos / (4 - time)
else
	speedAbs = 100000
end

local spinRate = 1080

modelYaw = time * spinRate

local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4230,Kings' Rest - Boss 3 - Summon Visual,"local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude",0,3
4231,Fathom Fall - Anchor Missile,modelPitch = 90,0,0
4232,8.1 Zuldazar Raid - Duo - Mage - Special - Phoenix Strike,"local magnitude=20
--magnitude*cos((9.487*progress)^2)
transUp=magnitude*cos(((13.416*progress)^2)/2)
--transFront=distanceToImpactPos",0,1
4233,Falls Straight Down (Actually does!),"local magnitude = 20

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
",0,1
4234,Stay in Place - For Use With Things That Animate Falling Down,"modelRoll=0
modelYaw=rand1*360
modelPitch=0
transUp=0
transFront=distanceToImpactPos
faceImpactPos=1",0,0
4235,Fiery Keg Smash - Missile,"local angle = 0
local maxMagnitude = startDistance * .5
modelYaw =90
modelPitch=(sin(progress*720)*30)
modelRoll=1080*progress
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4236,Glaive + Parabola (High) + Always Arrive in ~4 Sec + Rand Offset,"if (time < 4) then
	speedAbs = distanceToImpactPos / (4 - time)
else
	speedAbs = 100000
end

local spinRate = 1080

modelYaw = time * spinRate

local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transUp = 6.5 + (rand1 * -3.5)
transRight = rand2*8",0,1
4237,8.1 Tyrande - A - 04b - Reveal Enemies Missile - GJC,"local revolutions = 360*3
local radius = 2
local rotationtime = 18  -- amount of time you spend after the ""sweep in"" phase

local sweepIn 
local sweepCenter
if (time>1.2) then
	sweepIn = 0
	--sweepCenter = 1
else 
	sweepIn = -math.pow(1.2-time,2)*startDistance
	--sweepCenter = sin(time*110)
end	

transUp = 5
transFront = (startDistance-(startDistance*progress))+sin(time*revolutions/rotationtime)*radius+sweepIn
transRight = -cos(time/rotationtime*revolutions)*radius--*sweepCenter

modelRoll = -30

",0,0
4238,Cannonball Barrage Off Screen (Further),"faceImpactPos = 1

transFront = progress*-startDistance+startDistance + (1-progress)*-50
transUp = cos(90*progress)*11
--transRight = 10 * (1-progress)",0,1
4239,"Parabola (Fixed Height - 5-8 yards, Fast Out Inverted) - KJD","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 5
local variance = 3
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 5
transFront = math.pow(progress,1/factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4240,Azerite - Tier 1 - Darkshore - Endless Hunger,"local angle = 0
local maxMagnitude = startDistance * .40

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4241,Glaive + Parabola,"local spinRate = 1080

modelYaw = time * spinRate

local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4242,Parabola (High) + Always Arrive in ~4 Sec,"if (time < 4) then
	speedAbs = distanceToImpactPos / (4 - time)
else
	speedAbs = 100000
end

local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4243,Kali testing Spin,"--local spread = 1.5

--local startAngle = 360 * missileIndex / missileCount;
--local degreesPerSec = 1080

--transAngle = startAngle + (time * degreesPerSec)
--transMag = spread;

--local spinRate = 360
--modelRoll = time * spinRate


local waveHeight = 1.25
local wavesPerSec = 1.5
progSquare = progress*progress

if (missileIndex == 0) then
	transRight = waveHeight * (1-progress) * cos(wavesPerSec * progress * 360)
	transUp = waveHeight * (1-progress) * sin(wavesPerSec * progress * 360)
end

if (missileIndex == 1) then
	transRight = -waveHeight * (1-progress) * cos(wavesPerSec * progress * 360)
	transUp = -waveHeight * (1-progress) * sin(wavesPerSec * progress * 360)
end
",0,2
4244,GBerger Test Missile Script,,0,0
4245,"Cone of 3 Missiles, 30deg","if missileIndex==1 then
	transAngle=-90
	transMag=sin(15)*totalDistance*progress
elseif missileIndex==2 then
else
	transAngle=90
	transMag=sin(15)*totalDistance*progress
end",0,3
4246,Razdunk's Big Red Button,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

-- Add Upward Arc
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * startDistance * .15

transFront = transFront + -distanceToFirePos * (1 - progress)",0,3
4247,"Drunken Missiles (3 Missile, Parabolic)","local maxMagnitude = 1.5
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)


transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,3
4248,Azerite Armor - Tier 1 - Generic - Seductive Power (Reverse),"local angle = 0
local maxMagnitude = startDistance * .35

local waveHeight = .8
local wavesPerSec = 2*(0.5+rand1)

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = waveHeight * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,1
4249,Azerite Armor - Tier 1 - Generic - Seductive Power,"local angle = 0
local maxMagnitude = startDistance * .35

local waveHeight = .8
local wavesPerSec = 2*(0.5+rand1)

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = waveHeight * sin((time) * wavesPerSec * 360) * ( 1 - progress ) * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,1
4250,"Gear Missiles (New, 2 Missiles)","local factor = 1.25
local maxWidth = 2

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

--scale = math.max(math.pow(progress,factor*2),progress)",0,2
4251,"Gear Missiles (New, 1 Missiles)","local factor = 1.25
local maxWidth = 2

local function parabola(m) m=m or 1 return (m*4*progress*(1-progress)) end

local percent = (missileIndex / missileCount)
local totalAngle = 180
transAngle = (percent * totalAngle) + ((totalAngle/2)/missileCount)
transAngle = transAngle - 90
transMag = parabola(maxWidth)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

--scale = math.max(math.pow(progress,factor*2),progress)",0,1
4252,"Gattling Spray ( Loose Spread-  Multi Shot, 2 Missiles)","local startAngle = 45
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 1
local numCenterMiss = 3
modelPitch = 0


if missileIndex < numCenterMiss then
	transMag = 0.25
	transAngle = startAngle + ((missileIndex / numCenterMiss) * 360) + (time * degreesPerSec)
else
	transAngle = startAngle + ((missileIndex / (missileCount - numCenterMiss)) * 360) + (time * degreesPerSec)
	transMag = 0.3
end

transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = (transMag * -maxKickBack) + (progress * 2)
--transMag = transMag * maxMagnitude +(1*rand2) * progress


transAngle = 360*rand1
transMag = (2+2*rand2) * progress

--transUp = (progress * 2) - 1
--transUp = (1 - (transUp * transUp)) * maxMagnitude
transFront = 1.3 * progress",0,2
4253,Hunter - Scorpid Sting,"local angle1 = 10
local angle2 = -10
local maxMagnitude = startDistance * .01
local waveHeight = .01
local wavesPerSec = 2 + (rand1 * 3)

transAngle = angle1
if ( rand1 > 0.5 ) then
	transAngle = angle2
end
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2

scale = 1.0",0,1
4254,Hunter - Generic Shot - Low Parabola,"local angle1 = 10
local angle2 = -10
local maxMagnitude = startDistance * .01

transAngle = angle1
if ( rand1 > 0.5 ) then
	transAngle = angle2
end

transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4255,Azerite - Warlock - Affliction - Pandemic Invocation,"local startAngle = missileIndex * (30 + (10 * rand1))
	if rand2 > 0.5 then
		startAngle = -startAngle
	end
local degreesPerSec = 90
local maxMagnitude = 1.75
local maxKickBack = 5

transAngle = startAngle + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
",0,3
4256,Kali Necro Test - Sin Curve Z into follow ground,"local heightMax = 1.5
local percentCurved = .4
local factor = math.sqrt((progress/percentCurved))
if rand1<.5 then 
	transRight = sin(progress*(startDistance*5))*(startDistance*.25)*(1-progress)
else
	transRight = -sin(progress*(startDistance*5))*(startDistance*.25)*(1-progress)
end
transUp = math.sin(math.rad(factor * 200)) * (heightMax * (1-progress))

speedScalar = progress * 3.5

scale = .25 + progress + .05
if (progress > 0.75) then
	scale = 1
end
",0,0
4257,Parabola (-45 Pitch),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4258,Cluster Bomb - 6 Loose formation Missiles  (MDE),"local angle = 0
local maxMagnitude = startDistance * .2
local spread = 3

-- lower is closer
local distBetweenMissiles = 0.10


speedScalar = 1.2 - (missileIndex * distBetweenMissiles)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

-- missile impact location variance left/right/up/down. don't mess with the first impact
if missileIndex > 0 then
	transUp = (rand2 - 1) * spread * progress
	transRight = (rand2 - 1) * spread * progress
end

if missileIndex == 0 then
	scale = 1.5
elseif missileIndex == 1 then
	scale = 1.2
else
	scale = 1
end",0,6
4260,Grow (1 -> 5) and Accelerate,"scale = 1 + 5 * progress
speedScalar = 0.2 + 3 * progress",0,1
4261,"Parabola (High, Yaw Spin, Roll Wobble) Grow 1->3 (16 Missiles )","--scale = 1 + (1.5 * progress)

local angle = 0
local maxMagnitude = startDistance * .2
local spread = 2
local spinRate = 720
local rollRate = 1440
local distBetweenMissiles = 0.10

speedScalar = 1 + (missileIndex * .2)

modelYaw = time * spinRate
modelRoll = sin(time*rollRate)*15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

if missileIndex > 0 then
	transUp = (rand2 - 1) * spread * progress
	transRight = (rand2 - .5) * spread * progress
end

if missileIndex == 0 then
	scale = 1.5
elseif missileIndex == 3 then
	scale = 3
elseif missileIndex == 6 then
	scale = 1.5
elseif missileIndex == 12 then
	scale = 2

else
	scale = 1
end",0,16
4262,9.0 - Maw - Test Spell - Invoke Armaments v2,"scale = 2.0
modelRoll = time*720",0,0
4263,9.0 - Maw - Test Spell - Invoke Armaments v2 - Missile 2,"scale = 0.4
transFront = 2.0
transUp = 0.1",0,0
4264,"Parabola (Roll 600, Very High, not based on distance)","local angle = 0
local maxMagnitude = 20

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 600
",0,1
4265,"Parabola (Roll 600, High, not based on distance)","local angle = 0
local maxMagnitude = 10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 600
",0,1
4267,Spiral Vortex (5 Missiles) Wide + Parabola (Low),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 5

local maxMagnitude = startDistance * .13
scale = 1 + (1.3 * progress)


transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
transUp = 15 * progress * (1-progress)",0,5
4268,"Start slow, End Fast","out_speedScale = 0.1 + 35 * progress * progress
transUp  = (1.4 - 2 * rand1) * (1 - progress)",0,1
4269,Slide Object Along Ground - Ease - EZ,"transFront=((startDistance-distanceToFirePos)*(math.log(progress)+3)/3)
",0,1
4270,Rocket Spiral (x1),"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

-- Add Upward Arc
transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * startDistance * .15

transFront = transFront + -distanceToFirePos * (1 - progress)",0,1
4271,"Parabola (Fixed Height - 6-15 yards, Fast Out) - KJD","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 6
local variance = 6
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4272,8.2 - Azerite Essence - Azerite Energy Bolt,"local flip

flip = rand1

transFront = progress

if flip <= 0.5 then
	transRight = sin(progress * 180) * 1.3 *rand2
	transUp = sin(progress * 180) * 2 *rand1
end

if flip > 0.5 then
	transRight = -sin(progress * 180) * 1.3 *rand3
	transUp = sin(progress * 180) * 2 *rand2
end



",0,1
4273,8.2 - Azerite Essence - Healer - Time Manipulation - Minor,"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,1
4274,Sea Giant - Hurl Massive Stone,"local angle = 0
local maxMagnitude = startDistance * .35
local spinRate = 300
local yawRate = 45
local rollRate = 45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = 0.7 + 1.2 * progress

modelPitch = time * spinRate
modelYaw = time * yawRate
modelRoll = time * rollRate",0,1
4275,8.2 - Azerite Essence - DPS - Crit Missile Procs - Minor Missile,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 1
local maxKickBack = 1
out_speedScale = progress

transAngle = startAngle + (rand1*360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

transFront = transFront + -distanceToFirePos * (1 - progress)",0,1
4276,CFX - Azerite - Crucible of Flame - Rank 4,"faceImpactPos = 1
local phaseTwoStart = .9
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = -distanceToFirePos-sin(progress/phaseTwoStart * (progress*180)) *3
    transUp = math.pow(progress,.3)*2
    --transRight = 3
    
else
    transFront = -distanceToFirePos
    transUp = math.pow(progress,.3)*2
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    faceImpactPos = 1
    --transRight = 3*(1-p)
    
end

--modelYaw = -(1-progress)*20-10
--transRight = transRight-cos(rand1*180+90)*2*(1 - p)
--transFront = transFront+sin(rand1*180+90)*2*(1 - p)
",0,0
4277,8.2 Nazjatar Raid - Azshara - Arcane Missiles,"local factor = 2
local maxWidth = 4
local percent = (missileIndex / missileCount)
local totalAngle = 360
local ExtraOffsetForward=2
local switch = 0
local OffsetV = 11
local OffsetH = 7
local OffsetVRand = 7

local function parabola(m) 
	m=m or 1 
	return (m*4*progress*(1-progress)) 
end

OffsetH = OffsetH * rand3
OffsetVRand = OffsetVRand * rand1

transAngle = ((progress*totalAngle)+(percent*360))
transMag = (1-progress)*factor + parabola(maxWidth * rand1)
transUp = (1-progress)*(OffsetV + OffsetVRand)
transRight = (1-progress)*OffsetH

scale = math.max(math.pow(progress,factor*2),progress)
switch = rand2


-- invert the random positioning 
if switch > 0.5 then
	OffsetH = OffsetH * -1
	transAngle = transAngle * -1
	OffsetVRand = OffsetVRand * -1
end",0,1
4278,"Parabola (High, Roll Spin) Grow 1->3","scale=1+(2*progress)

local angle=0
local maxMagnitude=startDistance * .3
local spinRate=720

transAngle=angle
transMag=(progress*2)-1
transMag=(1-(transMag*transMag))*maxMagnitude

modelRoll=time*spinRate",0,0
4279,9.0 Maw - Armory - Power - Vitality Guillotine,"local startAngle = 0
local degreesPerSec = 0
local maxMagnitude = 3
local maxKickBack = 5

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack+(1-progress)--*2
transMag = transMag * maxMagnitude

if progress < 0.5 then
	scale = 0.75 + 0.5 * progress
end",0,1
4280,8.2 - Azerite Essence - Speaker's Boon - Shard Summon Missile,"local startAngle = 0
local degreesPerSec = -230
local maxMagnitude = 1.0
local maxKickBack = 1



transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

speedScalar = .2 + 3 * progress

transUp = sin((progress) * 180)*2

",0,2
4281,8.2 - Azerite Essences - Azerite Spike,"faceImpactPos = 1
--local phaseTwoStart = .7
--local p = progress - phaseTwoStart

scale = 0.7

if launchProgress < 1 then
    transFront = 2 * (1 - sin(launchProgress*90))
    transUp    = 2 * math.pow(launchProgress, 0.3)
    modelPitch = 45 * (1-launchProgress)
    transRight = -2.5
else
    transFront = 0
    transUp    = 2 * (1-progress)
    modelPitch = 0
    transRight = -2.5 * (1-progress)
end



transRight = transRight + (1 - progress) * 2 * cos(rand1*180+90)
transFront = transFront + (1 - progress) * 2 * sin(rand1*180+90)

		                      --YAY MATH
modelYaw = 90 - atan( (startDistance - 2 * sin(rand1*180+90))
		   			  / (2.5 - 2 * cos(rand1*180+90)) ) 

-- -- (1-progress)*((45-startDistance)+10)


if rand2 > 0.5 then
	transRight = -1 * transRight
	modelYaw = -1 * modelYaw
end
",0,0
4283,8.2 Nazjatar Raid - Azshara - Absorbing Arcane Orb,"local Mag=5
local Rotation=270

transUp=(progress*(1-progress))*Mag*sin(progress*Rotation)
transRight=(progress*(1-progress))*Mag*cos(progress*Rotation)
--Now to rotate
transFront=transRight*sin(360*rand1)
transRight=transRight*cos(360*rand1)",0,1
4284,8.2 Nazjatar Raid - Azshara - Energize Ancient Ward,"local RotationalRate=1080
transFront=(sin(progress*RotationalRate)*6)*(progress*(1-progress))
transRight=(cos(progress*RotationalRate)*6)*(progress*(1-progress))
",0,1
4286,8.2 - Azerite Essence - Healer - Heal Storage - Major,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = -30
local maxMagnitude = startDistance * .3 * rand4 + .2

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

--transFront = -distanceToFirePos * (1 - progress)
local startSpeedScale = ((rand3 + .5) * 0.2)
local fullSpeedProgress = 0.5 -- progress at which it will be going full speed
if progress > fullSpeedProgress then
	out_speedScale = 1.0
else
	-- Lerp from start speed up to full speed
	local introProgress = (progress * (1.0/fullSpeedProgress))
	out_speedScale = startSpeedScale + (introProgress * (1.0 - startSpeedScale))
end

local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*2))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)
--transFront = (transFront +
--	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude)

--speedScalar = ((rand3 + .5) / 2)

scale = 2 * progress^0.5
",0,3
4287,"Drunken Missiles Slow (1 Missile) Start Slow, End Fast","local maxMagnitude = 0.5
local minSpeedScalar = .9
local maxSpeedScalar = 1.1

local angle = 0
local maxArcMagnitude = startDistance * .75


local magnitude = (progress * 1.9) - 1
magnitude = (1 - (magnitude * magnitude * magnitude * magnitude)) * maxMagnitude

transRight = (sin((rand1 * 1000) + (time * 700)) + cos((rand2 * 1000) + (time * 100))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxArcMagnitude

transUp  = (1.4 - 2 * rand1) * (1 - progress)",0,1
4288,Azerite - Unbound - Missiles,"local angle = 0
local maxMagnitude = startDistance * .25

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1- (transMag * transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 120))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)",0,1
4289,The Unbound Force v2,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = 30
if rand4 > 0.5 then angle = -30 end
local maxMagnitude = startDistance * .3 + .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

--transFront = -distanceToFirePos * (1 - progress)
local startSpeedScale = ((rand3 + .5) * 0.1)
local fullSpeedProgress = 0.5 -- progress at which it will be going full speed
local magnitude = transMag * .1

transRight = ((sin((rand1 * 2000) + (time * 600)) + sin((rand3 * 2000) + (time * 90))) * (magnitude*5))
transUp = ((sin((rand2 * 2000) + (time * 450)) + sin((rand1 * 2000) + (time * 150))) * magnitude)

scale = progress^0.5
",0,1
4290,8.2 - Azerite Essences - Azerite Spike v2,"faceImpactPos = 1

scale = 0.7

--[[
if launchProgress < 1 then
    transFront = 2 * (1 - sin(launchProgress*90))
    --transUp    = 2 * math.pow(launchProgress, 0.3)
    modelPitch = 45 * (1-launchProgress)
else
    transFront = 0
    --transUp    = 2 * (1-progress)
    modelPitch = 0
end
--]]

--transFront = transFront + (1 - progress) * 2 * sin(rand1*180+90)

		                      --YAY MATH
--modelYaw = 90 - atan( (startDistance - 2 * sin(rand1*180+90))
--		   			  / (2.5 - 2 * cos(rand1*180+90)) ) 

--modelYaw = -1 * modelYaw",0,0
4291,Parabola - Regenerative Coral,"
transUp = 50 * math.sin(math.remap(progress, 0, 1, 0, 2*math.pi))",0,1
4292,Parabola (Fixed Height - 40-ish yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 40
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
4293,Parabola (No Rotation),"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelPitch=0
modelYaw=0
modelRoll=0",0,1
4294,8.2 Nazjatar Raid - Azshara - Void - Missiles,"local factor = 2
local maxWidth = 4
local percent = (missileIndex / missileCount)
local totalAngle = 360
local ExtraOffsetForward=2
local switch = 0
local OffsetV = -2
local OffsetH = 4
local OffsetVRand = 0

local function parabola(m) 
	m=m or 1 
	return (m*4*progress*(1-progress)) 
end

OffsetH = OffsetH * rand3
OffsetVRand = OffsetVRand * rand1

transAngle = ((progress*totalAngle)+(percent*360))
transMag = (1-progress)*factor + parabola(maxWidth * rand1)
transUp = (1-progress)*(OffsetV + OffsetVRand)
transRight = (1-progress)*OffsetH

scale = math.max(math.pow(progress,factor*2),progress)
switch = rand2


-- invert the random positioning 
if switch > 0.5 then
	OffsetH = OffsetH * -1
	transAngle = transAngle * -1
	OffsetVRand = OffsetVRand * -1
end",0,1
4295,8.2 Nazjatar Raid - Azshara - Reversal and Inversion,"--Inputs:
--startDistance
--Outputs:
--transRight
--transFront
--transUp
transRight=1*sin(progress*180)*startDistance/2
transUp=sin(progress*180)*startDistance/2
transFront=sin(progress*90)*startDistance-distanceToFirePos
",0,0
4296,Sin Curve Z into follow ground + Scale,"local heightMax = 3
local percentCurved = .4
local factor = math.sqrt((progress/percentCurved))
if rand1<.5 then 
	transRight = sin(progress*(startDistance*5))*(startDistance*.4)*(1-progress)
else
	transRight = -sin(progress*(startDistance*5))*(startDistance*.4)*(1-progress)
end
transUp = math.sin(math.rad(factor * 200)) * (heightMax * (1-progress))

speedScalar = progress * 3

scale = .75 + progress + .15
if (progress > 0.5) then
	scale = 1.4
end
",0,0
4297,Item - 8.2 Raid - Caster Trinket - Leviathan's Lure,"local angle = 0
local maxMagnitude = startDistance * .30
local heightMax = 3
local percentCurved = .4
local factor = math.sqrt((progress/percentCurved))

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

if rand1<.5 then 
	transRight = sin(progress*(startDistance*5))*(startDistance*.4)*(1-progress)
else
	transRight = -sin(progress*(startDistance*5))*(startDistance*.4)*(1-progress)
end
transUp = math.sin(math.rad(factor * 200)) * (heightMax * (1-progress))

speedScalar = progress * 3

scale = .75 + progress + .15
if (progress > 0.5) then
	scale = 1.4
end
",0,0
4298,8.2 Nazjatar Raid - Azshara - Phase 4 - Cosmetic Awesomeness,"--Inputs:
--startDistance
--Outputs:
--transRight
--transFront
--transUp
local Acceleration=3
local MyProgress=(math.pow(progress-1,Acceleration)+1)
transRight=1*sin(MyProgress*180)*startDistance/2
transUp=sin(MyProgress*180)*10
transAngle=MyProgress*360
transMag=sin(180*MyProgress)*4
",0,0
4299,8.2 Nazjatar Raid - Azshara - Phase 4 - Cosmetic Awesome Breath,"--Inputs:
--startDistance
--Outputs:
--transRight
--transFront
--transUp
--transRight=1*sin(progress*180)*startDistance/2
local Acceleration=3
local MyProgress=(math.pow(progress-1,Acceleration)+1)
transUp=15*(1-math.pow(math.max(0,math.abs((2*MyProgress)-1)*2-1),3))--sin(progress*180)*15
transAngle=sin(MyProgress*90)*1080
transMag=(1-MyProgress)*3",0,0
4300,Kali testing 1,"faceImpactPos = 0

local rand4 = (rand1*10)%1

local angle = 30
if rand4 > 0.5 then angle = -30 end
local maxMagnitude = startDistance * .3 + .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

--transFront = -distanceToFirePos * (1 - progress)
local startSpeedScale = ((rand3 + .5) * 0.1)
local fullSpeedProgress = 0.5 -- progress at which it will be going full speed
local magnitude = transMag * .1

transRight = ((sin((rand1 * 7000) + (time * 600)) + sin((rand3 * 7000) + (time * 90))) * (magnitude*5))
transUp = ((sin((rand2 * 7000) + (time * 450)) + sin((rand1 * 7000) + (time * 150))) * magnitude)

---scale = progress^0.5
",0,1
4301,Kali testing 2 - Slow/Fast,"faceImpactPos = 0
speedScalar = 0.3 + 5 * progress * progress
--local rand4 = (rand1*10)%1

--local angle = 30
--if rand4 > 0.5 then angle = -30 end
local maxMagnitude = startDistance * .3 + .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2


transFront = (-3 + 1 * rand1) * (1 - progress)
--local startSpeedScale = ((rand3 + .5) * 0.1)
--local fullSpeedProgress = 0.5 -- progress at which it will be going full speed
local magnitude = transMag * .1

--transRight = ((sin((rand1 * 7000) + (time * 600)) + sin((rand3 * 7000) + (time * 90))) * (magnitude*5))
--transUp = ((sin((rand2 * 7000) + (time * 450)) + sin((rand1 * 7000) + (time * 150))) * magnitude)
transUp  = (1.4 + 2 * rand1) * (1 - progress)


---scale = progress^0.5
",0,1
4302,8.2 Nazjatar Raid - Azshara - Divide and Conquer - Cosmetic,"local MaxUpMag=1.5
local MaxRightMag=.5
--transUp=MaxUpMag*sin(progress*360)
--transRight=MaxRightMag*sin(progress*360)
transAngle=progress*360
transMag=MaxUpMag*sin(progress*360)
",0,0
4303,Parabola (Very VERY High) + Fast Spin,"local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 1440

modelPitch = time * spinRate

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4304,Parabola (Very VERY High) + Slow Spin,"local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 250

modelPitch = time * spinRate

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4305,VoEB - Arrow Tile Trap -Falls Straight Down (Actually does!) x 5,"local magnitude = 20
local MaxOffset=1
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos+((rand2*MaxOffset)*sin((rand1*180)-90))
transRight=distanceToImpactPos+((rand3*MaxOffset)*sin((rand2*180)-90))
out_speedScale=rand1+1
",0,5
4308,"Straight, constant","transUp=0
",0,0
4309,"Drunken Missiles (1 Missile, Less Drunk)","local maxMagnitude = 0.25
local minSpeedScalar = 0.75
local maxSpeedScalar = 1.25
-- This value should be less than 1 to reduce total magnitude --
local magnitudeReduction = 0.75

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
-- Scale down total magnitude --
magnitude = magnitude * magnitudeReduction

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
",0,1
4310,"Parabola (Roll 600, Med, not based on distance)","local angle = 0
local maxMagnitude = 6

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 600
",0,1
4311,"Parabola (High, No Spin) Grow 1->3","scale = 1 + 2 * progress

local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

",0,1
4312,Snake Toward Target - 1 Wave,"local waveHeight = .5 * startDistance

transRight = waveHeight * sin(progress * 360) * ( 1 - progress )
--transFront = progress*startDistance ",0,1
4313,Raise (10 Yards) Straight Up (Fade?),"local magnitude = 10

transUp = magnitude * ( progress )
transFront = -distanceToFirePos 
",0,1
4314,Spin (Roll 400),modelRoll = progress * 400,0,1
4315,Snake Toward Target - 1 Wave (Grows from 1 to 2 scale),"local waveHeight = .5 * startDistance

transRight = waveHeight * sin(progress * 360) * ( 1 - progress )
scale=(1+progress)
",0,1
4316,8.3 Raid - Wrathion - Burning Cataclysm,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 0

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
speedScalar = 0.2 + 2 * progress",0,1
4317,zzzOLD,"transFront=math.remap(progress,0,1,1,75)
transRight=0
scale=math.remap(progress,0,1,1,7.75)
faceImpactPos=0
",0,0
4318,9.0 - Drunken Missile - FX - EZ,"--[[local r1 = rand1*2-1
local r2 = rand2*2-1
 
local transFront1 = (sin((progress+rand1)*720)) * (progress * (2*rand2) + 13) - distanceToFirePos 
local transRight1 = -(cos((progress+rand1)*720)) * (progress * (2*rand1) + 13)
transFront = transFront1
transRight = transRight1
transUp = math.sin(progress*3.14) * 8 * r2 + (rand2*2-1)*3
transFront = (rand3*20-10)*(1-progress)*progress
progress = progress*progress 
--]]
local r1 = rand1*2-1
local r2 = rand2*2-1

if progress < 0.94 then
	progress = progress*progress 
 
	transRight = math.sin(progress*3.14) * 3 * r1 + (rand3-0.5)*2
	transUp = math.sin(progress*3.14) * 3 *  (rand2-0.4)
	transFront = (rand3*15-10)*(1-progress)*progress
end

if progress > 0.94 then
	progress = 1.0
	
end",0,0
4319,8.3 N'Zoth Raid - Zone - Open Shortcut Door Missile,"local startAngle = 0
local degreesPerSec = 90 + 90*rand3
local maxMagnitude = 3 + 5*rand2 
local maxKickBack = 5 + 5*rand1

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,1
4320,"Drunken Missiles (3 Missiles, Less Drunk)","local maxMagnitude = 0.25
local minSpeedScalar = 0.75
local maxSpeedScalar = 1.25
-- This value should be less than 1 to reduce total magnitude --
local magnitudeReduction = 0.75

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
-- Scale down total magnitude --
magnitude = magnitude * magnitudeReduction

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
",0,3
4321,Paladin - Hammer of Wrath,"local angle = -30

local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4322,9.0 Maw - Calcis - Soul Shard Find Ground - PRK,"-- As it moves forward, the missile does the following:
-- - Between 1-4 loops in the forward plane (loop-de-loops)
-- - Between 1-4 loops around the line of motion (barrel rolls, sorta)
-- - Moves between 80% and 120% of actual speed

local function Spread(min, max, randToUse)
	return min + (max-min)*randToUse
end

local function SpreadInt(min, max, randToUse)
	local randInt = math.floor(randToUse*(max+1-min))
	return min + randInt
end


local loopWidth = totalDistance * 0.4
local loopHeight = totalDistance * 0.5
local barrelHeight = 5


local frontLoops = SpreadInt(1,4, rand1)
local barrelLoops = SpreadInt(1,4, rand2)

transFront = loopWidth * sin(progress*360*frontLoops)
transUp = loopHeight * sin(progress*180)


local barrelUp = barrelHeight * sin(progress*360*barrelLoops)
local barrelRight = barrelHeight * cos(progress*360*barrelLoops)
barrelUp = barrelUp * progress * (1-progress) * 4
barrelRight = barrelRight * progress * (1-progress) * 4

transUp = transUp + barrelUp
transRight = barrelRight

out_speedScale = Spread(0.8, 2, rand3)",0,0
4323,9.0 Maw - Calcis - Soul Shard Find Ground - PRK,"-- As it moves forward, the missile does the following:
-- - Between 1-4 loops in the forward plane (loop-de-loops)
-- - Between 1-4 loops around the line of motion (barrel rolls, sorta)
-- - Moves between 80% and 120% of actual speed

local function Spread(min, max, randToUse)
	return min + (max-min)*randToUse
end

local function SpreadInt(min, max, randToUse)
	local randInt = math.floor(randToUse*(max+1-min))
	return min + randInt
end


local loopWidth = totalDistance * 0.4
local loopHeight = totalDistance * 0.2
local barrelHeight = 5


local frontLoops = SpreadInt(1,4, rand1)
local barrelLoops = SpreadInt(1,4, rand2)

transFront = loopWidth * sin(progress*360*frontLoops)
transUp = loopHeight * sin(progress*180)


local barrelUp = barrelHeight * sin(progress*360*barrelLoops)
local barrelRight = barrelHeight * cos(progress*360*barrelLoops)
barrelUp = barrelUp * progress * (1-progress) * 4
barrelRight = barrelRight * progress * (1-progress) * 4

transUp = transUp + barrelUp
transRight = barrelRight

out_speedScale = Spread(0.8, 1.2, rand3)",0,0
4325,9.0 - Cannon Vortex (3 Missiles) - FX - EZ,"local startAngle = 0
local degreesPerSec = 780
local maxMagnitude = 2.5
local factor = 3
local scalOverTime = 1


if missileIndex == 0 then
	-- Controlling the Center Missile
	if startDistance > 12 then
		-- Controlling the Center Missiles scale over time
		transFront = math.pow(progress,factor) * distanceToFirePos
		transFront = transFront - distanceToFirePos*progress
		scalOverTime = scalOverTime + (time + (transFront*1000))
		scale = scalOverTime
		elseif startDistance < 13 then
		-- If close to target disable the scale over time
		transFront = math.pow(progress,factor) * distanceToFirePos
		transFront = transFront - distanceToFirePos*progress
		scale = 1
	end
	
	elseif missileIndex >= 1 then
	-- Controlling the outer Smaller Missiles
		if startDistance > 12 then
			maxMagnitude = (maxMagnitude - (time*3))
			transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
			transMag = progress
			transMag = (transMag * transMag * 2.13) - 1
			transMag = (1 - (transMag * transMag))
			transFront = transFront - 3
			transFront = (transFront + transMag * ((-1)*(totalDistance/2)))*progress
			transMag = transMag * maxMagnitude

			elseif startDistance < 13 then
				out_speedScale = 0.1 + 35 * progress * progress
				--transUp  = (1 - 3 * rand1) * (1 - progress)
				--transRight = (1 - 3 * rand2) * (1 - progress)
		end
	scale = 0.6
end



",0,3
4326,"Accelerated Missile (Slower in, Faster Out) (No Pitch, No Roll)","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local PreSlowInLimit=.3
local SlowInLimit=.6
if progress<=PreSlowInLimit then
	transFront = 0-distanceToFirePos+(math.pow(remap(progress,0,PreSlowInLimit,0,.3),4)*startDistance)
elseif progress<SlowInLimit then
	transFront = 0-distanceToFirePos+(math.pow(remap(progress,PreSlowInLimit,SlowInLimit,.3,.5),4)*startDistance)
else 
	transFront = 0-distanceToFirePos+(math.pow(remap(progress,SlowInLimit,1,.5,1),4)*startDistance)
end
modelPitch=0
modelRoll=0",0,1
4327,Parabola - Ballistic Missile (MaxHeight 9),"--[[
	Remaps pitch from -90 to +90 as the missile progresses
--]]
local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local MaxHeight=math.min(math.max(startDistance/3,5),9)
modelPitch=remap(progress,0,1,-90,90)
transUp=sin(progress*180)*MaxHeight
transFront=(sin(progress*90)*startDistance)-distanceToFirePos
",0,0
4328,9.0 Maldraxxus Arena - Boss - Lich - Haunt,"--****************************************************************************************************************************************
--	Travels just in front of the target, then spirals around once																		**
--	Straight travel is .5 progress time, final .5 is spiraling																			**
--****************************************************************************************************************************************

--[[local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

if progress<.25 then
	--transFront=(.7/.25*progress)*startDistance-distanceToFirePos
	transFront=(1/.25*progress)*(startDistance-5)-distanceToFirePos
else	
	transFront=startDistance-distanceToFirePos
	--Now to add in the spiraling...
	local FrontTheta=remap(progress,.25,1,-90,450)
	local RightTheta=remap(progress,.25,1,  0,540)
	local Radius=5*(1-math.pow((remap(progress,.25,1,0,1)),3.5))
	transFront=transFront+((sin(FrontTheta)*Radius))
	transRight=-sin(RightTheta)*Radius
end--]]
",0,0
4329,9.0 Maw - Soul Enters Soulkeeper - PRK,"local phaseOneEnd = .1
local phaseTwoEnd = .75 --also the distance at which to hover
local hoverHeight = 2


if progress <= phaseOneEnd then
    transFront = progress*(totalDistance*phaseTwoEnd-phaseOneEnd)/phaseOneEnd
    transUp = hoverHeight*progress/phaseOneEnd
    
elseif progress <= phaseTwoEnd then
	local waitTime = progress-phaseOneEnd
	transFront = totalDistance*phaseTwoEnd*(1-progress)
	transUp = hoverHeight
	
else
    --do nothing with transFront for now
    local p = (progress-phaseTwoEnd)/(1-phaseTwoEnd)
    transUp = hoverHeight*(1-p)
end

",0,1
4331,9.0 - Cannon Fast Out - FX - EZ,"local startAngle = 0
local degreesPerSec = 780
local maxMagnitude = 2.5
local factor = 3
local scalOverTime = 1


if missileIndex == 0 then
	-- Controlling the Center Missile
	if startDistance > 12 then
		-- Controlling the Center Missiles scale over time
		transFront = math.pow(progress,factor) * distanceToFirePos
		transFront = transFront - distanceToFirePos*progress
		scalOverTime = scalOverTime + (time + (transFront*1000))
		scale = scalOverTime
		elseif startDistance < 13 then
		-- If close to target disable the scale over time
		transFront = math.pow(progress,factor) * distanceToFirePos
		transFront = transFront - distanceToFirePos*progress
		scale = 1
	end
	
	elseif missileIndex >= 1 then
	-- Controlling the outer Smaller Missiles
		if startDistance > 5 then
			maxMagnitude = (maxMagnitude - (time*3))
			transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
			transMag = progress
			transMag = (transMag * transMag * 2.13) - 1
			transMag = (1 - (transMag * transMag))
			transFront = transFront - 3
			transFront = (transFront + transMag * ((-1)*(totalDistance/2)))*progress
			transMag = transMag * maxMagnitude

			elseif startDistance < 13 then
				out_speedScale = 0.1 + 35 * progress * progress
				--transUp  = (1 - 3 * rand1) * (1 - progress)
				--transRight = (1 - 3 * rand2) * (1 - progress)
		end
	scale = 0.6
end
",0,3
4332,9.0 Maw - Jailer's Tower - Corkscrew Around Travel Axis - Small,"--transAngle=(1080/startDistance)*distanceToFirePos
transAngle=31*distanceToFirePos
local MaxHeight=8
--transUp=sin(progress*180)*MaxHeight
transMag=0.5",0,0
4333,9.0 Ardenweald - Bastion Campaign - Seed Missile - RRB,"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = .75			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )

modelPitch = 90
modelRoll = 0
modelYaw = 0",0,3
4334,Parabola (90 Pitch) (Low),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = 90

transAngle = angle
transMag = (progress * 1) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4335,Maldraxxsus Swing (1 Missile),"local angle = 160+40*missileIndex
local maxDrop = 1

if (progress <= 0.1) then
	transMag = maxDrop*10*progress
	modelPitch = -1*maxDrop
elseif (progress <= 0.3) then
	transMag = maxDrop
	modelPitch = -5*maxDrop
else
	transMag = -maxDrop*progress/0.7 + (maxDrop/0.7)
end

transAngle = angle

speedScalar = 0.1 + (5 * time * time * time * time)",0,1
4336,Yaw 180,modelYaw=180,0,0
4337,"Frisbee - Right, then Left (Not Natural)","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/8)
local RemappedProgress=remap(progress,0,1,90,-90)

transRight=sin(-progress*360)*(1-progress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
4338,"Frisbee - Left, then Right (Natural)","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/8)
local RemappedProgress=remap(progress,0,1,90,-90)

transRight=sin(progress*360)*(1-progress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
4339,9FX - Covenant - Necrolord - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

local RightAmplitude=startDistance/60*5
local UpAmplitude=startDistance/60*2
transRight=sin(progress*2*360)*RightAmplitude*(1-(progress^2)) 
transUp=sin(progress*360)*UpAmplitude*(1-(progress^2))",0,1
4340,9.0 Maw Intro - Expel Anima (Small) CRT,"local maxMagnitude = 1.0
local minSpeedScalar = 1.0
local maxSpeedScalar = 1.0
local randscalar = 100
local timescalar = 50
 
local angle = 0
local maxMagnitude = startDistance * .35

local magnitude = (progress * 1.9) - 1

local Xmagnitude = 4 
local Ymagnitude = 2

transRight = (sin((rand1 * randscalar * progress)+ (time * randscalar)) + sin((rand2 * randscalar * progress))) * Xmagnitude
transUp = (sin((rand2 * randscalar * progress) + (time * randscalar)) + sin((rand1 * randscalar * progress) + (time * timescalar))) * Ymagnitude
transUp = transUp - 0
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4341,9.0 - Ardenweald - Creatures - Tirnenn - Vine Lance,"modelYaw = 90
modelPitch = 360 * time",0,0
4342,9.0 Bastion City Dungeon - Charged Spear - Periodic Beams,"modelRoll=progress*1080
transRight=(1-progress)*sin(progress*360)
transUp=(1-progress)*sin(progress*360)",0,0
4343,9.0 Revendreth Raid - Anima Caster - Life Link - Warning Visual,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local AngularProgress

if progress<=33/100 then
	AngularProgress=remap(progress,0,.33,0,1)
elseif progress<=66/100 then
	AngularProgress=remap(progress,.34,.66,0,1)
else
	AngularProgress=remap(progress,.67,1,0,1)
end

transFront=(sin(AngularProgress*90)*startDistance)-distanceToFirePos",0,0
4344,"9.0 Covenant - Necrolord - Rogue - Straight Out, Curve Upwards","local waveHeight = 1.5 * (startDistance / 30)
local wavesPerSec = 2 * (.8 + (.4 * rand2))

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
transUp = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 4

faceImpactPos = 0

transUp = progress^6*(sin(progress * 180) * 25)",0,1
4345,9.0 Revendreth Raid - Broker Curator - Bouncing Pulse,"local factor = 3
local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

transUp = parabola(1,5,1)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
faceImpactPos = 1",0,1
4346,9.0 Covenant Exploration - Hunter - Maldraxxus - Bouncing Glaive,"local angle = 90
local maxMagnitude = startDistance * .2
local spinRate = 720

transAngle = angle
transUp = 10
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelYaw = time * spinRate",0,1
4347,"Parabola (Pitch Spin Reverse, High)","local angle = 0
local maxMagnitude = math.min(8,math.max(3,startDistance * .40))
local spinRate = -540

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * spinRate
",0,1
4348,"Drunken Fountain (3 Missiles) (High, No Scalar)","local angle = 0
local maxMagnitude = startDistance * 1.5
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,3
4349,"Drunken Fountain (3 Missiles, No Scalar)","local angle = 0
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude",0,3
4350,9.0 - Ardenweald - Creatures - Gorm (Caster) - Acid Meteor VFX,"local randRotation = rand1*360
local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local remappedProgress = remap(progress, 0, 1, -1, 1)

transRight = startDistance*(1-(math.abs(remappedProgress)^3.5))*(cos(randRotation))
transFront = startDistance*(1-(math.abs(remappedProgress)^3.5))*(sin(randRotation))

--[[transRight = ((sin(progress*180)*(startDistance))*(1-math.abs(remappedProgress))^3.5)*cos(randRotation)
transFront = ((sin(progress*180)*(startDistance))*(1-math.abs(remappedProgress))^3.5)*sin(randRotation)--]]",0,0
4351,"Shrink (5.0x to 0.5x, exponential 2)","local initScale = 5
local targetScale = 0.5
local scaledProgress = math.pow(progress,2)
scale = ((1 - scaledProgress) * (initScale - targetScale)) + (targetScale)",0,0
4352,Ardenweald Missile - Butterfly ,"local waveHeight = 1.2
local wavesPerSec = 1.3


transFront = progress


transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))


",0,1
4353,Sanguine Depths - Manifestation Missile,"local angle = 0
local maxMagnitude = startDistance * 3

transAngle = angle	
speedScalar = 1
if progress < 0.3 then
	transMag = (1 - (((progress*3.33)-1)^2)) * 5
	--speedScalar = .3
else
	--transMag = (1 - (progress*1.43) +0.43) * 35
	--speedScalar = 20 * progress * progress * progress * progress
end


if progress <= .3 then
	transRight = (cos(progress*3000)) * 2 * (1-progress)
	transUp = (sin(progress*3000)) * 2 * (1-progress)
end",0,1
4354,9.0 Revendreth Raid - Vile Occultist - Vile Proclamation 02 Miss,"
local waveHeight = 1.2
local wavesPerSec = 1.6



transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

if rand2>0.5 then transRight = -1*transRight end

scale = 0.3 + (progress)

--speedAbs = rand1*10-5
local randomSpeedAmount = 0.25
out_speedScale = (1 - randomSpeedAmount) + (rand1 * randomSpeedAmount)",0,1
4355,9.0 Halls of Atonement - Trash - Crossbow Volley 4. Visual - SAN,"local maxSpread = 6
if missileIndex ~= 1 then
	transAngle = 90 * math.pow(-1, missileIndex)
	transMag = progress * rand2 * maxSpread
end
progress = math.pow(progress, 1.25)

transFront = (progress * startDistance) - distanceToFirePos",0,12
4356,"Yaw=90, Roll=90",modelYaw=90 ,0,0
4357,9.0 Covenant - Warlock - Necrolord - Decimating Bolt - Left,"local waveHeight = .2 * startDistance

transRight = waveHeight * sin(progress * 360) * ( 1 - progress )
--transFront = progress*startDistance ",0,1
4358,9.0 Covenant - Warlock - Necrolord - Decimating Bolt - Right,"local waveHeight = .2 * startDistance

transRight = -1 * waveHeight * sin(progress * 360) * ( 1 - progress )
--transFront = progress*startDistance ",0,1
4359,"Pitch 90, Roll 180","modelPitch = 90
modelRoll = 180
modelYaw = 0",0,0
4360,9FX - Anima - Maw - Missile - Large,"local function parabola(a,b,m) return (((1-progress)*a)*((progress)*b)*m*4) end
function noise(t)
	return	math.sin(t) *
			math.sin(t * 3) *
			math.sin(t * 6) * 
			math.sin(t * 9) *
			math.sin(t * 12)
end

local noiseAmountX = 6	--left/right noise
local noiseAmountY = 2	--up/down noise
local factor = 5	--this is a 1/x power function
transFront = math.pow(progress,1/factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

faceImpactPos = 1

--Add noise
local farParabolaX = progress * noise((time + rand1)) * noiseAmountX
local farParabolaY = progress * noise((time + rand2)) * noiseAmountY
transRight = transRight + parabola(1,farParabolaX,2)
transUp = transUp + parabola(1,farParabolaY,3)",0,1
4361,Sylvar (Bow) Barbed Shot,"local angle1 = 10
local angle2 = -10
local maxMagnitude = startDistance * .01

transAngle = angle1
if ( rand1 > 0.5 ) then
	transAngle = angle2
end

transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4362,Spiral + Parabola (5 Missiles) (Random Offset),"local waveHeight = 1
local wavesPerSec = 2
local spinRate = 720
local maxHeight=math.max(1.5,rand1*10)
local MaxHorizontalMag=math.max(startDistance*.15,1)
if rand2<.5 then
	MaxHorizontalMag=MaxHorizontalMag*-1
end


transUp=sin(progress*180)*maxHeight
transRight=sin(progress*180)*MaxHorizontalMag

",0,5
4363,Knuckleball,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

local HorizontalWave=2

local WaveTiming1=remap(rand1,0,1,.2,.4)
local WaveTiming2=remap(rand1,0,1,.6,.9)

if progress<WaveTiming1 then
	transRight=sin(remap(progress,0,WaveTiming1,0,360))*HorizontalWave*remap(rand2,0,1,.2,.4)
elseif progress>WaveTiming1*1.5 and progress<WaveTiming2 then
	transRight=-sin(remap(progress,WaveTiming1*1.5,WaveTiming2,0,360))*HorizontalWave*remap(rand3,0,1,.5,1)
else
end
transFront=progress*progress",0,0
4364,Parabola (Fixed Height - 6 yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 6
local variance = 0

transUp = parabola(1,1,height)",0,1
4365,"9.0 Spiral (2rev/20yd, 1.5 yard radius)","local radius = 1.5
local startAngle = (360 * (missileIndex / missileCount)) + (360 * rand1)
local degreesPerSec = 360 * 2

transAngle = startAngle + (distanceToFirePos/20 * degreesPerSec)
transMag = radius",0,1
4366,"9.0 Spiral (-2rev/20yd, 1.5 yard radius)","local radius = 1.5
local startAngle = (-360 * (missileIndex / missileCount)) + (360 * rand1)
local degreesPerSec = -360 * 2

transAngle = startAngle + (distanceToFirePos/20 * degreesPerSec)
transMag = radius",0,1
4367,9.0 Anima Caster - Expose Desires - Show Rank 3,"local startAngle = 0
local degreesPerSec = 540
local maxMagnitude = 5
local maxKickBack = 10

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
--transMag = 1 - progress
--transMag = (transMag * transMag * 2) - 1
--transMag = (1 - (transMag * transMag))
transMag = 1
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude * (sin(progress*540))
",0,7
4368,9.0 Anima Caster - Bottled Anima - Show Rank 3,"local startAngle = 0
local degreesPerSec = 0
local maxMagnitude = 5
local maxKickBack = 10

if missileIndex==1 then
	transAngle=280
	transMag = maxMagnitude * (sin(progress*180))
elseif missileIndex==2 then
	transAngle=0
	transMag = maxMagnitude/4 * (sin(progress*180))
else
	transAngle=80
	transMag = maxMagnitude * (sin(progress*180))
end

--modelPitch=sin((progress*100))*180
transFront=(sin(progress*90)*startDistance)-distanceToFirePos

",0,3
4369,Spin (Pitch 180) + Parabola,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = .5
local wavesPerSec = 1
local angle = 0
local maxMagnitude = startDistance * .1
local spinRate = math.max(540*startDistance/10,360)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
--transRight = (sin(progress*180)*.5)*sin(progress*spinRate)
modelPitch=progress*spinRate
transUp = (sin(progress*180)*.5)*cos(progress*spinRate)",0,1
4370,9.0 Covenant - Warrior - Night Fae  - Ancient Aftershock,"local waveHeight = 1.2
local wavesPerSec = 1.3
local maxMagnitude = startDistance * .05

transFront = progress


transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,1
4371,9.0 Dungeon - The Other Side - Zone - Draw Bwonsamdi's Mojo,"local function parabola(m) return (4 * m * (1 - progress) * progress) end
local progressMult = sin(progress * 180) * (1 - progress) * 2
local progressSpeed = math.pow(progress, 2) 


local frontRightPct = 0.95
local radius = 5 + (5 * (math.min(startDistance,40) / 40))
local up = 0 + (rand1 * 2)
local rev = 1 * (180 + (360 * (10 / math.max(startDistance,10)))) + (rand2 * 180)

transUp = ((progress * up) * math.pow((1 - sin(progress * 90)),(1 - frontRightPct) + rand1 / 3)) * progressMult + ((1 - progress) * parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed * rev) + 1) * radius * math.pow(1 - progressSpeed, frontRightPct)
transRight = sin(progressSpeed * rev) * radius * math.pow(1 - progressSpeed, frontRightPct)
scale = scale + (parabola(2) + parabola(rand3 * 1.5))",0,1
4372,9.0 Dungeon - The Other Side - Zone - Draw Bwonsamdi's Mojo Inv,"local function parabola(m) return (4 * m * (1 - progress) * progress) end
local progressMult = sin(progress * 180) * (1 - progress) * 2
local progressSpeed = math.pow(progress, 2) 


local frontRightPct = 0.95
local radius = 5 + (5 * (math.min(startDistance,40) / 40))
local up = 0 + (rand1 * 2)
local rev = -1 * (180 + (360 * (10 / math.max(startDistance,10)))) + (rand2 * 180)

transUp = ((progress * up) * math.pow((1 - sin(progress * 90)),(1 - frontRightPct) + rand1 / 3)) * progressMult + ((1 - progress) * parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed * rev) + 1) * radius * math.pow(1 - progressSpeed, frontRightPct)
transRight = sin(progressSpeed * rev) * radius * math.pow(1 - progressSpeed, frontRightPct)
scale = scale + (parabola(2) + parabola(rand3 * 1.5))",0,1
4373,9.0 Anima Caster - Sins of the Past - Show Rank 2,"function Remap(value, min1, max1, min2, max2)
	local range = (value - min1) / (max1 - min1)
	local output = (range * (max2 - min2)) + min2
	return output
end

local FastInFastOut=(1-math.pow(math.max(0,math.abs(Remap(progress,0,1,-1,1)*2)-1),3))


transUp=Remap(startDistance,0,100,10,12)*FastInFastOut 
",0,1
4375,9.0 - Ardenweald - Creatures - Quest Boss - Krelnor Anima Lance,"modelPitch = 180
modelRoll = 0
modelYaw = 0

speedScalar = 0.02 + 10 * progress",0,0
4376,9.0 Dungeon - The Other Side - Mueh'zala - Shatter Reality Later,"local function parabola(m) return (4*m*(1-progress)*progress) end
local progressMult = sin(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,2) 
local up = 0 + (rand1 * 5)
local direction = rand2
if direction > 0.5 then direction = -1
else direction = 1
end
local rev = direction * 180 + (rand3 * 180)

transUp = ((progress*up)*math.pow((1-sin(progress*90)),0.3+rand1/3)) * progressMult + ((1-progress)*parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed*rev)+1)*startDistance*math.pow(1-progressSpeed,0.7)*0.5
transRight = sin(progressSpeed*rev)*startDistance*math.pow(1-progressSpeed,0.7)*0.5
scale = scale + ((1-progress) * 5) + (progress * 2)",0,1
4377,9.0 Dungeon - The Other Side - Mueh'zala - Shatter Reality BwonR,"local function parabola(m) return (4*m*(1-progress)*progress) end
local progressMult = sin(progress*180)*(1-progress)*2
local progressSpeed = math.pow(progress,2) 
local up = 5 + (rand1 * 2)
local rev = -540 + (rand2 * 360)

transUp = ((progress*up)*math.pow((1-sin(progress*90)),0.3+rand1/3)) * progressMult + ((1-progress)*parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed*rev)+1)*startDistance*math.pow(1-progressSpeed,0.7)*0.5
transRight = sin(progressSpeed*rev)*startDistance*math.pow(1-progressSpeed,0.7)*0.5
scale = scale + (progress * 2 + rand3 * 1.5)",0,1
4378,"Parabola (High, Pitch Spin, Roll 90) ","local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 720
local WobbleRate = 1080

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time*spinRate
modelRoll =  90+(sin(time*WobbleRate)*10)",0,0
4379,Disappear - (Sets Alpha to Zero),colorA=0,0,0
4380,Ken's Test Missile 2,"local function parabola(a,b,m) return (((1-progress)*a)*((progress)*b)*m*4) end
function noise(t)
	return	math.sin(t) *
			math.sin(t * 3) *
			math.sin(t * 6) * 
			math.sin(t * 9) *
			math.sin(t * 12)
end

local noiseAmountX = 6	--left/right noise
local noiseAmountY = 2	--up/down noise
local factor = 5	--this is a 1/x power function
transFront = math.pow(progress,1/factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

faceImpactPos = 1

--Add noise
local farParabolaX = progress * noise((time + rand1)) * noiseAmountX
local farParabolaY = progress * noise((time + rand2)) * noiseAmountY
transRight = transRight + parabola(1,farParabolaX,1)
transUp = transUp + parabola(1,farParabolaY,1)",0,1
4381,Giggy's Test Missile - Wiggle,"local function parabola(a,b,m) return (((1-progress)*a)*((progress)*b)*m*4) end
function noise(t)
	return	math.sin(t) *
			math.sin(t * 3) *
			math.sin(t * 6) * 
			math.sin(t * 9) *
			math.sin(t * 12)
end

local noiseAmountX = 6	--left/right noise
local noiseAmountY = 2	--up/down noise
local factor = 5	--this is a 1/x power function
transFront = math.pow(progress,1/factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

faceImpactPos = 1

--Add noise
local farParabolaX = progress * noise((time + rand1)) * noiseAmountX
local farParabolaY = progress * noise((time + rand2)) * noiseAmountY
transRight = transRight + parabola(1,farParabolaX,2)
transUp = transUp + parabola(1,farParabolaY,3)",0,1
4382,Giggy's TestMissile-WildWiggle(DontUseAsIs_Flickers off),"local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.44 - math.floor(t1*.44))*1.6-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(.7,sin(progress*90))*(1-progress)

local t1 = (time+rand1)*35
local noise1 = sinapprox(t1)*sinapprox(t1*20)*sinapprox(t1*20)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*3)

local t2 = (time+rand2)*38
local noise2 = sinapprox(t2)*sinapprox(t2*20)*sinapprox(t2*20)*sinapprox(t2*15)*sinapprox(t2*20)*sinapprox(t2*3)

local t3 = (time+rand3)*10
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*3)

local factor = 1
transRight = progressMult*noise1*20*factor 
transUp = progressMult*noise2*7*factor 
transFront = progressMult*noise3*14*factor

local angle = 0
local maxMagnitude = startDistance *.04

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4383,Itano Circus/Macross Missiles (3missiles),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 60

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 16
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor ",0,3
4384,Long Spiral In (Less Spirals),"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *360)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *360)*startDistance*math.pow(1-progressSpeed ,.7)*.5
",0,1
4385,"Long Spiral In (Less Spirals, opposite direction)","

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *360)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *360)*startDistance*math.pow(1-progressSpeed ,.7)*.5*-1
",0,1
4386,Ardenweal Missile - Butterfly Slow Out,"local waveHeight = 1.2
local wavesPerSec = 2
--local startAngle = 0
--local degreesPerSec = 180
--local maxMagnitude = 3
--local maxKickBack = 0
transFront = progress

if rand1<.5 then 
	transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
else
	transRight = waveHeight * (-sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
end

transUp = waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
speedScalar = 0.1 + (1.01 * time)



--transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
--transMag = 1 - progress
--transMag = (transMag * transMag * 2) - 1
--transMag = (1 - (transMag * transMag))
--transFront = transMag * -maxKickBack
--transMag = transMag * maxMagnitude
--speedScalar = 0.2 + 2 * progress",0,1
4387,9.0 Covenant - Venthyr - Theotar - Wasteland Propriety,"modelYaw = time * 800

local maxMagnitude = startDistance * .15
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4388,9.0 Covenant - Venthyr - Theotar - Wasteland Propriety No Yaw,"local maxMagnitude = startDistance * .15
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4389,"Parabola (Pitch Spin, Reverse) Grow 1->3","scale = 1 + 2 * progress

local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = -360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,1
4390,Chakram 9 pattern - Start out Left (Radius Clamped to 6),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

local FirstLeg=.3333333
local LoopSize=startDistance/2
if LoopSize>6 then LoopSize=6 end

if progress<FirstLeg then
	transRight = sin(remap(progress,0,FirstLeg,0,180))*remap(progress,0,FirstLeg,LoopSize,0)
    transFront = (startDistance*sin(remap(progress,0,FirstLeg,0,90))) - distanceToFirePos
else
	transRight = -sin(remap(progress,FirstLeg,1,0,360))*remap(progress,FirstLeg,1,LoopSize,LoopSize)
    transFront = (startDistance)+(sin(remap(progress,FirstLeg,1,0,180))*startDistance)-distanceToFirePos
end",0,1
4391,Chakram - Swirl Into Target (Clockwise) (1 Orbits) (1/4),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end



transFront=(-cos(360*progress)*startDistance*(1-progress))+(startDistance*(1-progress))
transRight=sin(360*progress)*(startDistance/4)*(1-progress)",0,1
4392,Frisbee Throw - No Spin (No Yaw) +No Z,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
--transUp=sin(progress*360)*(1-progress)",0,0
4393,Parabola (Very Very VERY High) + Slow Spin,"local angle = 0
local maxMagnitude = startDistance * 1.4
local spinRate = 250

modelPitch = time * spinRate

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4394,9.0 Revendreth Raid - Lantern,"scale = 0.5 + 1 * progress

local angle = 0
local maxMagnitude = startDistance * .1
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate",0,0
4395,Stay in Place - (Pitch -90),"modelRoll=0
modelYaw=rand1*360
modelPitch=-90
transUp=0
transFront=distanceToImpactPos
faceImpactPos=1",0,0
4396,"Parabola (Fixed Height - 3-5 yards, Fast Out, FaceImpactPos","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos


faceImpactPos = 1",0,1
4397,Frisbee Throw - No Spin (No Yaw) +No Z + Roll 90,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
--transUp=sin(progress*360)*(1-progress)",0,0
4398,Frisbee Throw - No Spin (No Yaw) + No Z + Roll 90 (L to R),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
--transUp=sin(progress*360)*(1-progress)",0,0
4399,Frisbee Throw - No Spin (No Yaw) + No Z + Roll 90 (R to L),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=-cos(RemappedProgress)*DistanceScaling
--transUp=sin(progress*360)*(1-progress)",0,0
4400,Itano Circus/Macross Missiles (3missiles)(Smaller Arc),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(30)
local maxAngle = math.rad(180)
local maxArc = 30

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 16
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor ",0,3
4401,9.0 - Bastion  - Soulbind - Pelagos - Test of Faith,"local startAngle = -90
local degreesPerSec = 0
local maxMagnitude = 3
local maxKickBack = 6

progress = 1 - progress

transAngle = startAngle + 180*rand1
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,1
4402,9.0 - Bastion - Path of Ascension - Soulbind - Pelagos - Unleash,"local randRotation = rand1*360
local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local remappedProgress = remap(progress, 0, 1, -1, 1)
local ampRemap = 3

transRight = (startDistance/ampRemap)*(1-(math.abs(remappedProgress)^6))*(sin(randRotation))
transFront = (startDistance/ampRemap)*(1-(math.abs(remappedProgress)^6))*(cos(randRotation))

--[[transRight = ((sin(progress*180)*(startDistance))*(1-math.abs(remappedProgress))^3.5)*cos(randRotation)
transFront = ((sin(progress*180)*(startDistance))*(1-math.abs(remappedProgress))^3.5)*sin(randRotation)--]]",0,0
4404,"Soul Vortex (3 Missiles, Tight, No Kickback, 270 deg/sec)","local startAngle = 0
local degreesPerSec = 270
local maxMagnitude = 1.25
local maxKickBack = 0

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude

--transUp = distanceToImpactPos - distanceToFirePos",0,3
4405,Spiral (Tightens to Zero),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = startDistance * .05
local wavesPerSec = 2
local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = math.max(360*startDistance/10,180)

transRight = (sin(progress*180)*waveHeight)*sin(progress*spinRate)*(1-progress)
transUp = (sin(progress*180)*waveHeight)*cos(progress*spinRate)*(1-progress)
",0,1
4407,"Frisbee Throw - No Spin (No Yaw, Pitch-90)","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
modelYaw=-90
scale=1
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
4408,9.0 Dungeon - The Other Side - Mueh'zala - SR B->D Left,"local function parabola(m) return (4 * m * (1 - progress) * progress) end
local progressMult = sin(progress * 180) * (1 - progress) * 2
local progressSpeed = math.pow(progress, 2) 


local frontRightPct = 0.95
local radius = 5 + (5 * (math.min(startDistance,40) / 40))
local up = 0 + (rand1 * 2)
local rev = 1 * (180 + (360 * (10 / math.max(startDistance,10)))) + (rand2 * 180)

transUp = ((progress * up) * math.pow((1 - sin(progress * 90)),(1 - frontRightPct) + rand1 / 3)) * progressMult + ((1 - progress) * parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed * rev) + 1) * radius * math.pow(1 - progressSpeed, frontRightPct)
transRight = sin(progressSpeed * rev) * radius * math.pow(1 - progressSpeed, frontRightPct)
scale = scale + (parabola(2) + parabola(rand3 * 1.5))",0,1
4409,9.0 Dungeon - The Other Side - Mueh'zala - SR B->D Right,"local function parabola(m) return (4 * m * (1 - progress) * progress) end
local progressMult = sin(progress * 180) * (1 - progress) * 2
local progressSpeed = math.pow(progress, 2) 


local frontRightPct = 0.95
local radius = 5 + (5 * (math.min(startDistance,40) / 40))
local up = 0 + (rand1 * 2)
local rev = -1 * (180 + (360 * (10 / math.max(startDistance,10)))) + (rand2 * 180)

transUp = ((progress * up) * math.pow((1 - sin(progress * 90)),(1 - frontRightPct) + rand1 / 3)) * progressMult + ((1 - progress) * parabola(-2) * rand3) + (progress * 1)
transFront = (-cos(progressSpeed * rev) + 1) * radius * math.pow(1 - progressSpeed, frontRightPct)
transRight = sin(progressSpeed * rev) * radius * math.pow(1 - progressSpeed, frontRightPct)
scale = scale + (parabola(2) + parabola(rand3 * 1.5))",0,1
4410,Giggy's TestMissile Slow to Fast Progress,out_speedScale = .4 + 10 * progress * progress,0,1
4411,Giggy's TestMissile Slow to Fast Progress Mild Acceleration,out_speedScale = .4 + 7 * progress * progress,0,1
4412,Progenitor - Missile - High - Slow to Fast (Progress based),out_speedScale = .4 + 10 * progress * progress,0,1
4413,Progenitor - Missile - Low - Slow to Fast (Progress based),out_speedScale = .4 + 5 * progress * progress,0,1
4414,"Drunken Missiles (1 Missile, Higher Parabolic, Less Drunk)","local maxMagnitude = 0.2
local minSpeedScalar = .9
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
magnitude = magnitude * 0.25

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4415,9.0 Maw - Ratgusher - Ratball 1. Missile - PRK,"local offsetAmp = 5
local offsetRightMult = 7
local offsetFrontMult = 9
local offsetUpMult = 11
local offsetDiv = 13

transRight = offsetAmp * ((missileIndex * offsetRightMult) % offsetDiv)/offsetDiv - offsetAmp/2
transFront = offsetAmp * ((missileIndex * offsetFrontMult) % offsetDiv)/offsetDiv - offsetAmp/2
transUp = offsetAmp * ((missileIndex * offsetUpMult) % offsetDiv)/offsetDiv - offsetAmp/2
",0,9
4416,9.0 Maw - Ratgusher - Ratball 1. Missile - PRK,"local offsetAmp = 1
local offsetRightMult = 17
local offsetFrontMult = 19
local offsetUpMult = 18
local offsetDiv = 23

local rotateAmp = 360

local maxMagnitude = 9

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude

transRight = offsetAmp * ((missileIndex * offsetRightMult) % offsetDiv)/offsetDiv - offsetAmp/2
transFront = offsetAmp * ((missileIndex * offsetFrontMult) % offsetDiv)/offsetDiv - offsetAmp/2
transUp = transUp + offsetAmp * ((missileIndex * offsetUpMult) % offsetDiv)/offsetDiv - offsetAmp/2

modelYaw = rotateAmp * ((missileIndex * offsetRightMult) % offsetDiv)/offsetDiv * progress
modelPitch = rotateAmp * ((missileIndex * offsetFrontMult) % offsetDiv)/offsetDiv * progress
modelRoll = rotateAmp * ((missileIndex * offsetUpMult) % offsetDiv)/offsetDiv * progress

",0,9
4417,9.0 Maw - Ratgusher - Ratball 1. Missile - PRK,"local offsetAmp = .7
local offsetRightMult = 17
local offsetFrontMult = 19
local offsetUpMult = 18
local offsetDiv = 23

local rotateAmp = 360

local maxMagnitude = startDistance * .15

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude

transRight = offsetAmp * ((missileIndex * offsetRightMult) % offsetDiv)/offsetDiv - offsetAmp/2
transFront = offsetAmp * ((missileIndex * offsetFrontMult) % offsetDiv)/offsetDiv - offsetAmp/2
transUp = transUp + (offsetAmp * ((missileIndex * offsetUpMult) % offsetDiv)/offsetDiv - offsetAmp/2)

modelYaw = rotateAmp * ((missileIndex * offsetRightMult) % offsetDiv)/offsetDiv
modelPitch = rotateAmp * ((missileIndex * offsetFrontMult) % offsetDiv)/offsetDiv
modelRoll = rotateAmp * ((missileIndex * offsetUpMult) % offsetDiv)/offsetDiv

",0,9
4418,"Drunken Fountain (5 Missiles, Very Low)","local angle = 0
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,5
4419,9.1 Dungeon - Broker City - Fan Mail Missile Motion - RZN,"local radius = progress * totalDistance

local anglePerMissile = 360 / (missileCount)
local curAngle = (progress) * 45 + rand1*anglePerMissile 
curAngle = curAngle + anglePerMissile * missileIndex

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = -(cos(curAngle) * radius)

faceImpactPos = 1
modelYaw = curAngle-75
--modelRoll = 90",0,12
4420,"Parabola (High, -90 Pitch)","local angle = 0
local maxMagnitude = startDistance * .3
modelPitch = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4421,9.0 Dungeon - Sanguine Depths - Boss 02 - TRINKET - Overflowing ,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

if time <= 0 then
	scale = 0.001
else
	scale = 1
end",0,1
4422,Frisbee Throw (Twin) ,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=1

local DistanceScaling=(startDistance/8)
local RemappedProgress=remap(progress,0,1,90,-90)

if missileIndex==1 then
	transRight=sin(progress*360)*(1-progress)*DistanceScaling
	transUp=sin(progress*360)*(1-progress)
else
	transRight=sin(-progress*360)*(1-progress)*DistanceScaling
	transUp=sin(progress*360)*(1-progress)
end",0,2
4423,Otherside Mist Missile Reverse,"local clockwiseOrNah = 1

--transFront = math.pow(progress,3) * distanceToImpactPos

transFront = -sin(math.pow(-progress, 2) * 360) * (1 + rand1)
transRight = clockwiseOrNah * sin(-progress * 360) * (1 + rand2)

",0,1
4424,Otherside Mist Missile Standard,"local clockwiseOrNah = 1

--transFront = math.pow(progress,3) * distanceToImpactPos

transFront = -sin(math.pow(progress, 2) * 360) * (1 + rand1)
transRight = clockwiseOrNah * sin(progress * 360) * (1 + rand2)

",0,1
4425,9.1 Dungeon - Broker City - Ninja - Energy Star (Physical),"modelYaw=90
modelRoll=-90",0,0
4426,Grow (1 -> 2),scale = 1 + (1 * progress),0,1
4427,Parabola (Grow 1->2),"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1 + (1 * progress)",0,1
4428,9.1 Dungeon - Broker City - Ninja - Dimensional Slide - Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local InitialHoldTime=.05
local PostHoldTravelTime=.15
local ImpactWarningTime=.25
if progress<=InitialHoldTime then
	transFront = -distanceToFirePos
	colorA=0
elseif progress<PostHoldTravelTime then
	transFront = (remap(progress,InitialHoldTime,PostHoldTravelTime,0,1)*startDistance)-distanceToFirePos
	colorA=0
else 
	transFront = startDistance-distanceToFirePos
	scale=math.min(remap(progress,PostHoldTravelTime,ImpactWarningTime,.1,1),1)
	colorA=1
end
modelPitch=0
modelRoll=0
modelYaw=0
faceImpactPos=1",0,1
4429,"Parabola (Roll Spin, Medium, Grow .2 -> 1)","local angle = 0
local maxMagnitude = startDistance * .20

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 1000
scale = .2+(.8*progress)",0,1
4430,Meteor Strike (12 Yards) Falls Straight Down,"local magnitude = 12

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
4431,9.1 Dungeon - Broker City - Mailroom - Dummy Package Missile,"local magnitude = 28
local spinRate = 540
local rollRate = 360

if ( rand1 > 0.5 ) then
	spinRate = spinRate * -1
end

modelRoll = time * spinRate
modelPitch = time * rollRate


transUp = magnitude * ( progress )
transFront = distanceToImpactPos

speedScalar = 0.2 + 0.2*rand3",0,1
4433,"Soul Vortex (3 Missiles, Tight Kickback, Mag, Parabola Height)","local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end

local startAngle = rand1 * 360
local degreesPerSec = 360
local maxMagnitude = 3
local maxKickBack = 3
local maxHeight = 3
local radius = 1

transMag = parabola(radius)
transFront = parabola(1,-1 * maxKickBack)
transUp = parabola(maxHeight)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,3
4434,"Fast Out - W/ Noise (1 Missiles), Parabola (1 yards)","local factor = 2
local maxHeight = 1
local direction = 1
local noiseAmt = startDistance * 0.2

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25)) + ((1-progress)*progress*4*maxHeight)
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,1
4435,"Soul Vortex (1 Missiles, Tight Kickback, Mag, Parabola Height)","local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end

local startAngle = rand1 * 360
local degreesPerSec = 360
local maxMagnitude = 3
local maxKickBack = 3
local maxHeight = 3
local radius = 1

transMag = parabola(radius)
transFront = parabola(1,-1 * maxKickBack)
transUp = parabola(maxHeight)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,1
4436,9.0 - Cannon Vortex - Less Spin (3 Missiles) - FX - EZ,"local startAngle = 0
local degreesPerSec = 720
local maxMagnitude = 2.2
local factor = 3
local scalOverTime = 1.2




local minSpeedScalar = 0.8
local maxSpeedScalar = 1


if missileIndex == 0 then
	-- Controlling the Center Missile
	
	if startDistance > 12 then
		-- Controlling the Center Missiles scale over time
		transFront = math.pow(progress,factor) * distanceToFirePos
		transFront = transFront - distanceToFirePos*progress
		scalOverTime = scalOverTime * progress
		scale = scalOverTime
		elseif startDistance < 13 then
		-- If close to target disable the scale over time
		transFront = math.pow(progress,factor) * distanceToFirePos
		transFront = transFront - distanceToFirePos*progress
		scale = 1

	end
	
	elseif missileIndex >= 1 then
	-- Controlling the outer Smaller Missiles
		if startDistance > 12 then
			maxMagnitude = (maxMagnitude - (time*3))
			transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)

			transMag = progress
			

			transMag = (transMag * transMag * 2.13) - 1
			transMag = (1 - (transMag * transMag))

			transFront = transFront - 3
			
			transFront = (transFront + ((transMag/2)) * ((-1)*(totalDistance/2)))*progress
			transMag = transMag * maxMagnitude
			

			
			



			
			
			
			
			



			elseif startDistance < 13 then
				out_speedScale = 0.1 + 35 * progress * progress
		end
	scale = 0.6
end



",0,3
4437,"Giggy Test - Parabola Fast in, Slow Out","	local ArcHeight=2
	transFront=((startDistance-distanceToFirePos)*(math.log(progress)+3)/20)
	transUp=sin(progress*180)*ArcHeight
	
	local angle = 0
local maxMagnitude = startDistance * .50

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4438,Falls Straight down - 3 missiles (Scale1-2x),"
local magnitude = {
	[0]=20,[1]=18,[2]=22
	}
	
transRight=cos(rand1*360)*rand3*4
transFront=sin(rand1*360)*rand2*4
transUp = magnitude[missileIndex] * ( 1 - progress )
transFront=distanceToImpactPos
scale=1+progress

",0,3
4439,Rain of Arrows (10 missiles),"--rand1: angle, height
--rand2: radius
--rand3: height


local minMagnitude = 30
local maxMagnitude = 100
local magnitude = minMagnitude + rand3*(maxMagnitude-minMagnitude)

local maxRadius = 5

local angle = 360*rand1
local radius = maxRadius*math.sqrt(rand2)

local speed = 50

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

transRight = transRight + radius*math.cos(angle)
transFront = transFront + radius*math.sin(angle)

speedAbs = speed*startDistance/magnitude",0,10
4440,Frisbee Throw - No Z + Roll 90 (R to L) (2 spins/s),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=1
modelYaw=time*(360*2)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=-cos(RemappedProgress)*DistanceScaling
--transUp=sin(progress*360)*(1-progress)",0,0
4441,Frisbee Throw - No Z + Roll 90 (L to R) (2 Spins/s),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=90
scale=1
modelYaw=time*(360*2)

local DistanceScaling=(startDistance/10)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=cos(RemappedProgress)*DistanceScaling
--transUp=sin(progress*360)*(1-progress)",0,0
4442,Grow (3 -> 5) + Yaw Spin (360/s),"scale = 3 + (2 * progress)
modelYaw=360*time",0,1
4443,9.1 Dungeon - Broker City - Ninja - Mitsuwaza - Dummy Missile,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

scale = 3 + (2 * progress)
modelRoll=90
modelPitch=360*time 
",0,1
4444,9.1 Dungeon - Broker City - Ninja - Hurl Relocators - R -> L,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=remap(progress,0,1,.3,1)
local RemappedForwardProgress=remap(progress,0,.8,progress,1)
trasnsFront=RemappedForwardProgress-distanceToFirePos
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/8)
local RemappedProgress=remap(progress,0,1,90,-90)

transRight=sin(-progress*360)*(1-progress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
4445,9.1 Dungeon - Broker City - Ninja - Recall Relocators - R -> L,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=remap(progress,0,1,1,.1)
local RemappedForwardProgress=remap(progress,0,.8,progress,1)
trasnsFront=RemappedForwardProgress-distanceToFirePos
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/8)
local RemappedProgress=remap(progress,0,1,90,-90)

transRight=sin(-progress*360)*(1-progress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
4446,9.1 Dungeon - Broker City - Ninja - Recall Relocators - L -> R,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=remap(progress,0,1,1,.1)
local RemappedForwardProgress=remap(progress,0,.8,progress,1)
trasnsFront=RemappedForwardProgress-distanceToFirePos
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/8)
local RemappedProgress=remap(progress,0,1,-90,90)

transRight=sin(progress*360)*(1-progress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
4447,9.1 Dungeon - Broker City - Ninja - Hurl Relocators - L -> R,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

modelRoll=0
scale=remap(progress,0,1,.3,1)
local RemappedForwardProgress=remap(progress,0,.8,progress,1)
trasnsFront=RemappedForwardProgress-distanceToFirePos
--modelYaw=time*(360*5)

local DistanceScaling=(startDistance/8)
local RemappedProgress=remap(progress,0,1,90,-90)

transRight=sin(progress*360)*(1-progress)*DistanceScaling
transUp=sin(progress*360)*(1-progress)",0,0
4448,"Start slow, End Fast (no offset)",out_speedScale = 0.2 + 35 * progress * progress,0,1
4449,"Drunken Fountain (1 Missile, Low, Low Mag)","local angle = 0
local maxMagnitude = startDistance * .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .05

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
4450,9.1 Raid - Torghast - Ner'zhul - Orb of Torment - Summon - Missi,"scale = 1 + (2 * progress)
transMag = 2*progress",0,1
4451,Falls Straight Down (Actually does!)(Lower),"local magnitude = 10

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
",0,1
4452,Falls Straight Down (Actually does!)(Lower)(grows),"local magnitude = 10

scale = progress
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
",0,1
4453,9.1 Raid - Torghast - Sylvanas - Add Spiked Guard Destabilize Mi,"local function parabola(a,b,m) return (((1-progress)*a)*((progress)*b)*m*4) end
function noise(t)
	return	math.sin(t) *
			math.sin(t * 3) *
			math.sin(t * 6) * 
			math.sin(t * 9) *
			math.sin(t * 12)
end

local noiseAmountX = 6	--left/right noise
local noiseAmountY = 2	--up/down noise
local factor = 5	--this is a 1/x power function
transFront = math.pow(progress,1/factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

faceImpactPos = 1

--Add noise
local farParabolaX = progress * noise((time + rand1)) * noiseAmountX
local farParabolaY = progress * noise((time + rand2)) * noiseAmountY
transRight = transRight + parabola(1,farParabolaX,2)
transUp = transUp + parabola(1,farParabolaY,3)",0,1
4454,"Parabola (Medium, Roll Spin) Grow 1->5","scale=1+(4*progress)

local angle=0
local maxMagnitude=startDistance * .2
local spinRate=720

transAngle=angle
transMag=(progress*2)-1
transMag=(1-(transMag*transMag))*maxMagnitude

modelRoll=time*spinRate",0,0
4455,Candlemancer - All - Core - Blaze Missile,"
local function sinapprox(v)
     local t1 = 1.8*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 2
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*8*factor 
transFront = progressMult*noise3*14*factor ",0,1
4456,Candlemancer - All - Core - Mend Precast Missile,"transAngle=(1080/startDistance)*distanceToFirePos
local MaxHeight=4
transUp=sin(progress*180)*MaxHeight
transMag=2
scale = 2",0,0
4457,"1001 Needles (Circular Shotgun, Larger Circle, More Random)","local startAngle = 45
local degreesPerSec = 0
local maxMagnitude = 2.75
local maxKickBack = 1
local numCenterMiss = 1
modelPitch = 0


if missileIndex < numCenterMiss then
	transMag = .25
	transAngle = startAngle + ((missileIndex / numCenterMiss) * 360) + (time * degreesPerSec)
else
	transAngle = startAngle + ((missileIndex / (missileCount - numCenterMiss)) * 360) + (time * degreesPerSec)
	transMag = 1.15
end

transMag = (transMag * transMag * (1.5+(rand2/2)) - 1)
transMag = (1 - (transMag * transMag))
transFront = (transMag * -maxKickBack) + (progress * 2)
transMag = transMag * maxMagnitude
",0,7
4458,Cluster Bomb - 6 Loose formation Missiles (wider spread)  (MDE),"local angle = 0
local maxMagnitude = startDistance * .2
local spread = 8

-- lower is closer
local distBetweenMissiles = 0.10


speedScalar = 1.2 - (missileIndex * distBetweenMissiles)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

-- missile impact location variance left/right/up/down. don't mess with the first impact
if missileIndex > 0 then
	transUp = (rand2 - 1) * spread * progress
	transRight = (rand2 - 1) * spread * progress
end

if missileIndex == 0 then
	scale = 1.5
elseif missileIndex == 1 then
	scale = 1.2
else
	scale = 1
end",0,6
4459,9.1 Raid - Torghast - Sylvanas - Chains v3 Arrow,"local magnitude = time * 100
transUp = magnitude
faceImpactPos = 1
modelPitch = -80",0,1
4460,Pitch -100,modelPitch = -100,0,0
4461,"Start slow, End Fast (no offset) + Scale 1 to 3","out_speedScale = 0.2 + 35 * progress * progress
scale=1+(2*progress)",0,1
4462,Corkscrew Around Travel Axis Narrow,"transAngle=(1080/startDistance)*distanceToFirePos
local MaxHeight=2
--transUp=sin(progress*180)*MaxHeight
transMag=.2",0,0
4463,9.1 - Dungeon - Broker City - Trash - Zo Cartel - Pull Rotate,"transUp=0
local spinRate = 90
scale = 0 + 2 * progress
modelYaw = time * spinRate",0,0
4464,9.1 - Dungeon - Broker City - Trash - Zo Cartel - Pull Rotate 2,"transUp=0
local spinRate = 90
scale = 1 + 2 * progress
modelYaw = time * spinRate",0,0
4465,9.1 Raid - Torghast - Sylvanas - Windrunner Smoke Missile,"local function parabola(m) return (4*m*(1-progress)*progress) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(height) - 3",0,1
4466,"TestDont Use----Drunken Missiles (1 Missile, Parabolic, No Flip)","local function parabola(a,b,m) return (((1-progress)*a)*((progress)*b)*m*4) end
function noise(t)
	return	math.sin(t) *
			math.sin(t * 3) *
			math.sin(t * 6) * 
			math.sin(t * 9) *
			math.sin(t * 12)
end

local noiseAmountX = 6	--left/right noise
local noiseAmountY = 2	--up/down noise
local factor = 5	--this is a 1/x power function
transFront = math.pow(progress,1/factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

faceImpactPos = 1

--Add noise
local farParabolaX = progress * noise((time + rand1)) * noiseAmountX
local farParabolaY = progress * noise((time + rand2)) * noiseAmountY
transRight = transRight + parabola(1,farParabolaX,2)
transUp = transUp + parabola(2,farParabolaY,10)",0,1
4467,9.1 Raid - Torghast - Ner'zhul - Remove Armor Piece,"local angle = 0
local spinRate = 360
local scalOverTime = 1


scale = 2
modelYaw = time * spinRate

local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 3.5*distanceToFirePos
frontP = HorizontalSCurve(progress,13)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)

--faceImpactPos=1

scalOverTime = scalOverTime + (time + (progress+1))
scale = scalOverTime

if scale > 3.2 then
	scale = 3.2
end
",0,1
4468,9.1 Raid - Torghast - Tarragrue - Anima Powers - KLH,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 5

local p = HorizontalSCurve(progress,.5)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + (rand1 * (maxAngle - minAngle))
local x,y = angleToXY(currentAngle)
local arcProg = HorizontalSCurve(progress,3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), 1)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*10
local noise1 = noise(t1)

local t2 = (time+rand2*400)*10
local noise2 = noise(t2)

local t3 = (time+rand3*400)*10
local noise3 = noise(t3)

local factor = 40
transRight = transRight + progressMult*noise1*2*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*2*factor ",0,3
4469,Parabola (Fixed Height - 25-30 yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 25
local variance = 5
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
4470,"Parabola, 3 Missiles in Rapid Succession (Lower)","local angle = 0
local maxMagnitude = startDistance * .25
local spread = 5

speedScalar = 1 + (missileIndex * .2)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transUp = (rand2 - 0.5) * spread * progress",0,3
4471,9.1 Raid - Torghast - Tarragrue - Mist - Missile to Center - KLH,"local waveHeight = 2.5 * (startDistance / 30)
local wavesPerSec = 1.0 * (.8 + (.4 * rand2))


transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
",0,1
4472,9.1 Raid - Torghast - Sylvanas - Banshee Fury Missile,"local factor = 3
local maxWidth = 5
local direction = 1
local height = 10 + (startDistance / 5)

if rand1>0.5 then
	direction = -1
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * rand2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = (4 * progress * (1-progress)) * height	--parabolic curve (gamma) * height",0,1
4473,Parabola (Roller Coaster),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local MaxMagnitude=15
transAngle = 0
local TippingPoint_Up=-0.5
local TippingPoint_Down=0.5
local Travel_Y=remap(progress,0,1,-1,1)
transMag =(1-math.pow(math.max(0,math.abs(Travel_Y)*2-1),0.5))*MaxMagnitude

local Travel_X

if Travel_Y<=TippingPoint_Up then
	Travel_X=sin(remap(Travel_Y,-1,TippingPoint_Up,0,90))*remap(Travel_Y,-1,TippingPoint_Up,0,.25)*startDistance
	--modelPitch=remap(Travel_Y,0,TippingPoint_Up,0,90)
elseif Travel_Y<=TippingPoint_Down then
	Travel_X=.25*startDistance
	modelPitch=remap(Travel_Y,TippingPoint_Up,TippingPoint_Down,-90,60)
	faceImpactPos=1
else
	Travel_X=remap(Travel_Y,TippingPoint_Down,1,.25,1)*startDistance
end

transFront=Travel_X-distanceToFirePos





",0,1
4474,Spin (Roll -600),modelRoll = progress * -600,0,1
4475,"Parabola (Corkscrew Up, Roller Coaster Down)","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local MaxMagnitude=remap(rand1,0,1,10,15)
local TippingPoint_Up=0.75
local TippingPoint_Down=0.5
local CorkscrewRadius=3
local StartingRotation=remap(rand2,0,1,0,359)
transAngle = 0
if progress<TippingPoint_Up then
	transUp=sin(90*remap(progress,0,TippingPoint_Up,0,1))*remap(progress,0,TippingPoint_Up,0,MaxMagnitude)
	transRight=cos(remap(progress,0,TippingPoint_Up,StartingRotation,StartingRotation+1080))*sin(remap(progress,0,TippingPoint_Up,0,180))*CorkscrewRadius
	transFront=sin(remap(progress,0,TippingPoint_Up,StartingRotation,StartingRotation+1080))*sin(remap(progress,0,TippingPoint_Up,0,180))*CorkscrewRadius
else
	transUp=MaxMagnitude*remap(progress,TippingPoint_Up,1,1,0)
	transFront=remap(progress,TippingPoint_Up,1,0,startDistance)
end



transFront=transFront-distanceToFirePos





",0,1
4476,"Candlemancer - All - Core - Bronze Talon (Sweep Right, Arc Left)","local angle = 40 + (rand1 * 20)
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4477,"Candlemancer - All - Core - Bronze Talon (Sweep Left, Arc Right)","local angle = -1 * (40 + (rand1 * 20))
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4479,Hook Left or Right - KJD,"local factor = 3
local maxWidth = 10
local direction = 1

if rand1>0.5 then
	direction = -1
end

transRight = direction * math.min(startDistance/maxWidth,maxWidth) * rand2",0,1
4480,Fast Out Hook Left | Right + Parabola + Scale Start 0.5+,"local factor = 3
local maxWidth = 5
local direction = 1
local height = startDistance / 5

if rand1>0.5 then
	direction = -1
end

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * rand2)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = (4 * progress * (1-progress)) * height	--parabolic curve (gamma) * height

scale = 0.5 + (progress / 2)",0,1
4481,Flower Back then forward (4 Missiles),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end


local MyForwardOffset
local FlowerSize=1
local MyProgressTippingPoint=remap(rand1,0,1,.2,.4)
local DistanceScale=math.ceil(startDistance/5)
local MissileLookup={
		[0]={   1*DistanceScale,   1*DistanceScale},
		[1]={  -1*DistanceScale,   1*DistanceScale},
		[2]={ 1.5*DistanceScale,   0*DistanceScale},
		[3]={-1.5*DistanceScale,   0*DistanceScale},
		[4]={   1*DistanceScale,   1*DistanceScale},
	}

faceImpactPos =0

--x=((y-1)^2-1
if progress<MyProgressTippingPoint then
	MyForwardOffset=-FlowerSize*sin(remap(progress,0,MyProgressTippingPoint,0,180))
	transRight=MissileLookup[missileIndex][1]*FlowerSize*sin(remap(progress,0,MyProgressTippingPoint,0,90))
	transUp=MissileLookup[missileIndex][2]*FlowerSize*sin(remap(progress,0,MyProgressTippingPoint,0,90))
else
	MyForwardOffset=remap(progress,MyProgressTippingPoint,1,0,startDistance)
	transRight=remap(progress,MyProgressTippingPoint,1,FlowerSize*MissileLookup[missileIndex][1],0)
	transUp=remap(progress,MyProgressTippingPoint,1,MissileLookup[missileIndex][2]*FlowerSize,0)
end





transFront=MyForwardOffset-distanceToFirePos",0,4
4482,9.1 Raid - Torghast - Sylvanas - Ruin Missile,out_speedScale = 0.85,0,0
4483,Flower Back then forward (4 Missiles) (Greater Timing Offsets),"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end


local MyForwardOffset
local FlowerSize=1
local MyProgressTippingPoint=remap(rand1,0,1,.1,.8)
local DistanceScale=math.ceil(startDistance/5)
local MissileLookup={
		[0]={   1*DistanceScale,   1*DistanceScale},
		[1]={  -1*DistanceScale,   1*DistanceScale},
		[2]={ 1.5*DistanceScale,   0*DistanceScale},
		[3]={-1.5*DistanceScale,   0*DistanceScale},
		[4]={   1*DistanceScale,   1*DistanceScale},
	}

faceImpactPos =0

--x=((y-1)^2-1
if progress<MyProgressTippingPoint then
	MyForwardOffset=-FlowerSize*sin(remap(progress,0,MyProgressTippingPoint,0,180))
	transRight=MissileLookup[missileIndex][1]*FlowerSize*sin(remap(progress,0,MyProgressTippingPoint,0,90))
	transUp=MissileLookup[missileIndex][2]*FlowerSize*sin(remap(progress,0,MyProgressTippingPoint,0,90))
else
	MyForwardOffset=remap(progress,MyProgressTippingPoint,1,0,startDistance)
	transRight=remap(progress,MyProgressTippingPoint,1,FlowerSize*MissileLookup[missileIndex][1],0)
	transUp=remap(progress,MyProgressTippingPoint,1,MissileLookup[missileIndex][2]*FlowerSize,0)
end





transFront=MyForwardOffset-distanceToFirePos",0,4
4484,Pitch Spin (Reverse) (scale 1 to 2),"local spinRate = 720
modelPitch = -1 * time * spinRate
scale=progress+1",0,1
4485,Meteor Strike (5 Yards) Falls Straight Down + Rotate 1440,"local magnitude = 5

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*1440",0,1
4486,9.1 Maw - Tormentors of Torghast - Meteorfall Proc - 06 Missile ,"local magnitude = 1.5

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*1300",0,1
4487,"Meteor Strike (3 Yards, Slow Spin, Slow Rotate)","local magnitude = 3
local spinRate = 250 + (rand1*300)

transUp = magnitude * ( 1 - progress )
modelPitch = time * spinRate
modelYaw = time * spinRate",0,1
4488,Meteor Strike (3 Yards) Falls Straight Down + Roll,"local magnitude = 3

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelPitch = (progress+rand1)*360",0,1
4489,Meteor Strike (4 Yards) Falls Straight Down + Roll,"local magnitude = 15

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelPitch = (progress+rand1)*360",0,1
4490,Parabola (Fixed Height - 60-ish yards) - KJD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 60
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
4491,9.1 Raid - Torghast - Sylvanas - Phase 3 J -> A,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end
local function parabola(v) return v * (progress * (1-progress) * 4) end
local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(80)
local maxAngle = math.rad(120)
local maxArc = 10

local p = math.pow(progress,3)

transFront = (1 * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 10
transRight = transRight + progressMult*noise1*4*factor 
transUp = math.abs(transUp + progressMult*noise2*1*factor)
transFront = transFront + progressMult*noise3*4*factor 

scale = 1 + 1 * (arcProg)
local degreesPerSec = 180
transMag = 1 + parabola(5) + parabola(parabola(1))
transAngle = ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,3
4492,9.1 Raid - Torghast - Sylvanas - Anduin - Blasphemy Missile A,"local function parabola(v) return v * (progress * (1-progress) * 4) end
local function abs(v) return math.max(v,-1*v) end
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

transRight = 0
transUp = 0
transFront = -distanceToFirePos * (1 - progress)

local degreesPerSec = 360
local maxMag = 5
local upMag = 10
local chaosMag = 5
local startAngle = 0

transRight =	(sinapprox((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * chaosMag + transRight
transUp =		(sinapprox((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * chaosMag + transUp
transFront =	(sinapprox((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * chaosMag + transFront

transRight = parabola(transRight)
transFront = parabola(transFront)
transUp = parabola(abs(transUp)) + parabola(upMag)

transMag = parabola(maxMag)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)

scale = 1 + parabola(1)",0,1
4493,9.1 Raid - Torghast - Sylvanas - Anduin - Blasphemy Missile B,"local function parabola(v) return v * (progress * (1-progress) * 4) end
local function abs(v) return math.max(v,-1*v) end
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
end

transRight = 0
transUp = 0
transFront = -distanceToFirePos * (1 - progress)

local degreesPerSec = 360
local maxMag = 5
local upMag = 10
local chaosMag = 5
local startAngle = 180

transRight =	(sinapprox((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * chaosMag + transRight
transUp =		(sinapprox((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * chaosMag + transUp
transFront =	(sinapprox((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * chaosMag + transFront

transRight = parabola(transRight)
transFront = parabola(transFront)
transUp = parabola(abs(transUp)) + parabola(upMag)

transMag = parabola(maxMag)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)

scale = 1 + parabola(1)",0,1
4494,Meteor Strike (4 Yards) Falls Straight Down,"local magnitude = 4

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
4495,9.1 Raid - Torghast - Sylvanas - P3 JailerMythicMissileDebris,"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end
local function parabola() return (progress * (1-progress) * 4) end
local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(80)
local maxAngle = math.rad(120)
local maxArc = 30

local p = math.pow(progress,3)

transFront = (1 * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 10
transRight = transRight + progressMult*noise1*4*factor 
transUp = math.abs(transUp + progressMult*noise2*1*factor)
transFront = transFront + progressMult*noise3*4*factor 

scale = 1 + 0.5 * (arcProg)
local degreesPerSec = 120
transMag = 3 + parabola(parabola(30))
transAngle = ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,3
4496,9.1 - Shards of Domination - Runeword - Winds of Winter - (2) D,"speedAbs = math.min(120, math.pow(0.3+progress * 3, 3) * 100) ",0,0
4497,9.1 Item - Sylvanas Quiver Missile Motion,"local startAngle = (rand1*100) - 50
local degreesPerSec = 0
local maxMagnitude = 1.75
local maxKickBack = 5

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack+(1-progress)*2
transMag = transMag * maxMagnitude

if progress < 0.5 then
	scale = 0.75 + 0.5 * progress
end",0,1
4498,"Parabola (High, Pitch Spin, 90 Yaw)","local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 120

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

modelYaw = 90
",0,1
4499,Candlemancer - Dream Slip,"local frequency = startDistance/8
local spread =  1
local weaveFrequency = 3
local heightMult = .05

local snakeProg = math.pow(progress,0.75)

transRight = sin((snakeProg*180*frequency+120*(missileIndex+rand1/3)))*spread*math.pow(sin(snakeProg*180),.5)*math.pow(snakeProg,1.3)
transUp = cos((snakeProg*180*weaveFrequency*frequency+120*(missileIndex+rand1/3)))*spread*math.pow(sin(snakeProg*180),.5)*math.pow(snakeProg,1.3)*heightMult

transFront = (1-progress) --accounts for weapon scale distances
 
--transRight = sin(progress*180*2)*math.pow(progress,1.5)*10 ",0,1
4502,Grow (.1 -> .3),scale = .1+(.3*progress),0,1
4503,WoWLabs - BR: Missile - Missle Tumble,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4504,"Parabola (Top Spin, Slower)","local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
4505,9.2 Raid - Progenitor - Constellar - Shatter Sphere Missile,"local function parabola(m) return (4*m*(1-progress)*progress) end
local startAngle = 0
local degreesPerSec = 180
local maxRadius = 2
local minMagnitude = 3
local maxMagnitude = 5

local direction = 1
if rand3 > 0.5 then
	direction = -1
end

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec * direction)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))

transMag = transMag * (minMagnitude + parabola(maxMagnitude - minMagnitude))

local factor = 0.75 + (rand1 * 3)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

transUp = parabola((-1 * maxRadius) + (rand2 * (maxRadius * 2))) * (1 - progress)

scale = 0.5 + parabola(0.5)",0,3
4506,Falls Straight Down (Actually does!)(Lower)(fall at 90 Percent),"local magnitude = 10
print(progress)
if progress > .9 then
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
end
if progress < .9 then
transUp = magnitude+math.random(-1,1)
end",0,1
4507,Class - Evoker - Emerald Blossom,"faceImpactPos = 0

local maxMagnitude = startDistance * .3 + .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

local magnitude = transMag * .1

transUp = ((sin((rand2 * 7000) + (time * 450)) + sin((rand1 * 7000) + (time * 150))) * magnitude)
",0,0
4509,Battle Pet - Dive Bomb (Meteor High Slow),"local magnitude = totalDistance * 5

out_speedScale = 0.60
modelRoll = 180

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos + 1
",0,1
4511,"Parabola (Up and Left, Slight)","local angle = 65
local maxMagnitude = startDistance * .05

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4512,"Meteor Strike (500 Yards, pitch 270 degree)","local magnitude = 500

transUp = magnitude * ( 1 - progress )

modelPitch = 270",0,1
4513,"Drunken Fountain (1 Missile) (High, No Scalar, less drunk)","local angle = 0
local maxMagnitude = startDistance * 1.5
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .05

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
4514,9.2 Raid - Progenitor - Constellar - Quasar Spawn Missile (5yd),"local radius = 5
local degreesPerSec = 180 + (progress * 180)
local perMissileDegreeOffset = ((missileIndex / missileCount) * 360) + (progress * 180)
local maxHeight = 30
local progressSq = progress * progress
local invProgress = (1 - progress)
local invProgressSq = (1 - progressSq)

transFront = distanceToImpactPos + ((radius * invProgressSq) * math.cos(time * math.rad(degreesPerSec + perMissileDegreeOffset)))
transRight = ((radius * invProgressSq) * math.sin(time * math.rad(degreesPerSec + perMissileDegreeOffset)))
transUp = invProgress * maxHeight",0,3
4515,9.2 Raid - Progenitor - Constellar - Quasar Spawn Missile (7yd),"local radius = 7
local degreesPerSec = 360 + (progress * 180)
local perMissileDegreeOffset = ((missileIndex / missileCount) * 360) + (progress * 180)
local maxHeight = 30
local progressSq = progress * progress
local invProgress = (1 - progress)
local invProgressSq = (1 - progressSq)

transFront = distanceToImpactPos + ((radius * invProgressSq) * math.cos(time * math.rad(degreesPerSec + perMissileDegreeOffset)))
transRight = ((radius * invProgressSq) * math.sin(time * math.rad(degreesPerSec + perMissileDegreeOffset)))
transUp = invProgress * maxHeight",0,3
4516,9.2 Raid - Progenitor - Constellar - Falling Star Missile,"local maxHeight = 90
local progressSq = progress * progress
local invProgress = (1 - progress)
local invProgressSq = (1 - progressSq)

transFront = distanceToImpactPos
transRight = 0
transUp = invProgress * maxHeight
faceImpactPos = 1",0,1
4517,"Circle around caster (N Missiles, 2yd Radius)","local percentOfCircle = 1
local startAngle = 0
local radius = 2

startAngle = ((missileIndex + 1) / missileCount) * 360

local curAngle = (percentOfCircle * progress * 360) + startAngle

transFront = (sin(curAngle) * radius) - distanceToFirePos
transRight = (cos(curAngle) * radius)",0,1
4518,Parabola (Very VERY High) (x4),"local angle = 0
local maxMagnitude = startDistance * (.45 + rand1/2)

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,4
4520,Accelerated Missile (Based on Time) (Reduced Copy fromn 2882),out_speedScale = 1 + (5 * time * time * time),0,1
4522,Parabola + Faster Speed for Index Num,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = .5 + (missileIndex * 5)",0,1
4523,Evoker - Living Flame Heal,"-- Start fast, end slower
out_speedScale = 0.5 + (1.0 * (1.0 - progress) * (1.0 - progress))

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1.4 * (.8 + (.4 * rand2))

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end",0,1
4524,Evoker - Devastation - Talent - Firestorm,"--local spread = 1.5

--local startAngle = 360 * missileIndex / missileCount;
--local degreesPerSec = 1080

--transAngle = startAngle + (time * degreesPerSec)
--transMag = spread;

--local spinRate = 360
--modelRoll = time * spinRate


local waveHeight = 1.25
local wavesPerSec = 1.5
progSquare = progress*progress

if (missileIndex == 0) then
	transRight = waveHeight * (1-progress) * cos(wavesPerSec * progress * 360)
	transUp = waveHeight * (1-progress) * sin(wavesPerSec * progress * 360)
end

if (missileIndex == 1) then
	transRight = -waveHeight * (1-progress) * cos(wavesPerSec * progress * 360)
	transUp = -waveHeight * (1-progress) * sin(wavesPerSec * progress * 360)
end",0,0
4526,Parabola (0.6x Scale),"local angle = 0
local maxMagnitude = startDistance * .15

scale = 0.66

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4530,Parabola (Very High),"local angle = 0
local maxMagnitude = startDistance * .50

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4531,BLB - Throw Long Pass,"
	local angle = 0
	local maxMagnitude = startDistance * 0.75

	transAngle = angle
	transMag = (progress * 2) - 1
	transMag = (1 - (transMag * transMag)) * maxMagnitude

--if (progress > 0.40 and progress < 0.80) then
	
--	local ceiling = 0.25
	
--	transMag = (ceiling * 2) - 1
--	transMag = (1 - (transMag * transMag)) * maxMagnitude

--end",0,1
4532,Grow (1 -> 2.5)(Pitch 1080)(Parabola),"scale = 1 + (1.5 * progress)
modelPitch = 1080*progress
local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4533,Evoker - Source of Magic - Energize,"-- Start fast, end slower
out_speedScale = 0.5 + (1.0 * (1.0 - progress) * (1.0 - progress))

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 0.5 * (startDistance / 30)
local wavesPerSec = 1.4 * (.8 + (.4 * rand2))

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end",0,1
4534,Spinning Wave (less Mag),"local startAngle = 0
local finalAngle = 720
local wavesPerSec = 1
local maxMagnitude = 1

transAngle = startAngle + ((finalAngle - startAngle) * progress)
transMag = sin(time * wavesPerSec * 360) * maxMagnitude",0,1
4535,10.0 Raid - Primalist - Ice Spider - Boss - Web Attach - KLH,"local magnitude = 50
modelYaw = 90

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
4536,3 Missiles in Rapid Succession (.3 Spread),"-- lower is closer
local distBetweenMissiles = 1
-- spread out as the missiles travel
local outerWheelMag = 0.5 * progress
local missileAngle

speedScalar = 1 - (missileIndex * distBetweenMissiles)

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	transAngle = anglePerMissile * missileIndex
end

transMag = outerWheelMag
",0,3
4537,10.0 Prologue - Storms - Earth - Environmental Hazard - Boulder ,"local angle = 0
local maxMagnitude = startDistance * 6
local maxMagnitude = 200
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate
",0,1
4538,Med to Small to Big Scale,"local m1x=0.0    --the first progress point where the missile is smallest
local m1y=0.1    --the scale of the missile at the point above

local m2x=0.4    --the first progress opint where the missile begins growing again
local m2y=0.1    --the scale of the missile at the point above


local slope
local intercept
if (progress <m1x) then
                slope=(1-m1y)/(0-m1x)
                intercept=1
elseif (progress<m2x) then
                slope=(m1y-m2y)/(m1x-m2x)
                intercept=m1y-slope*m1x
else
                slope=(m2y-1)/(m2x-1)
                intercept=1-slope
end
scale=slope*progress+intercept
",0,1
4541,Shaman - All - Talent - Primordial Wave - Skill - Missile A,"transAngle = 720 * time
local magCap, pStart, pEnd = 0.5, 0.1, 0.9
if progress < pStart then
	transMag = magCap * (progress / pStart)
elseif progress > pEnd then
	transMag = magCap * ((1.0 - progress) / (1.0 - pEnd))
else
	transMag = magCap
end",0,0
4542,Shaman - All - Talent - Primordial Wave - Skill - Missile B,"transAngle = 120 + (720 * time)

local magCap, pStart, pEnd = 0.5, 0.1, 0.9
if progress < pStart then
	transMag = magCap * (progress / pStart)
elseif progress > pEnd then
	transMag = magCap * ((1.0 - progress) / (1.0 - pEnd))
else
	transMag = magCap
end",0,0
4543,Shaman - All - Talent - Primordial Wave - Skill - Missile C,"transAngle = 240 + (720 * time)

local magCap, pStart, pEnd = 0.5, 0.1, 0.9
if progress < pStart then
	transMag = magCap * (progress / pStart)
elseif progress > pEnd then
	transMag = magCap * ((1.0 - progress) / (1.0 - pEnd))
else
	transMag = magCap
end",0,0
4544,Warrior - All - Talent - Spear of Bastion - Skill - Skyjump,"modelPitch = -90
transFront = 2",0,0
4545,"Parabola (Fixed Height - 40-ish yards, Starts Scaled Down) - SRC","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 40
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

scale = 0.5 + (progress * 0.5)",0,1
4546,"Drunken Missiles (1 Missile, More Drunk)","local maxMagnitude = 3.0
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
",0,1
4547,Kali testing 3,"faceImpactPos = 0

--local rand4 = (rand1*10)%1

--local angle = 30
--if rand4 > 0.5 then angle = -30 end
local maxMagnitude = startDistance * .3 + .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = ((1 - (transMag * progress^0.1)) * (maxMagnitude)) * progress^2

--transFront = -distanceToFirePos * (1 - progress)
--local startSpeedScale = ((rand3 + .5) * 0.1)
--local fullSpeedProgress = 0.5 -- progress at which it will be going full speed
local magnitude = transMag * .1

--transRight = ((sin((rand1 * 7000) + (time * 600)) + sin((rand3 * 7000) + (time * 90))) * (magnitude*5))
transUp = ((sin((rand2 * 7000) + (time * 450)) + sin((rand1 * 7000) + (time * 150))) * magnitude)

---scale = progress^0.5
",0,1
4548,10.0 Lowlands - Siege on Dragonbane Keep - Radial Fire Wave (L,"local radius=(progress*29)
local curAngle=0
local anglePerMissile = 360/missileCount
curAngle=curAngle+anglePerMissile*missileIndex
transFront=(sin(curAngle)*radius)-distanceToFirePos
transRight=(cos(curAngle)*radius)
scale=math.max(0.2,progress*.4)
",0,60
4549,"Parabola, 6 Missiles in Rapid Succession","local angle = 0
local maxMagnitude = startDistance * 0.1
local spread = 5--5

speedScalar = 1 + (missileIndex * 0.2)--.2

transAngle = angle
transMag = (progress * 2) - 1--progress * 2
transMag = (1 - (transMag * transMag)) * maxMagnitude

transUp = (rand2 - 0.5) * spread * progress--(rand2 - 0.5)",0,6
4550,10.0 Dungeon - Life Pools - Boss 3 - Rider Winds of Change Cosme,"local function parabola(m) return (4*m*(1-progress)*progress) end
faceImpactPos = 1
transUp = math.sin(10 * time)",0,0
4551,Parabola (-90 to -45) (Flag Throw)(scale 1 ->3),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = -90 + 45 * progress

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

faceImpactPos = 0

scale = 1 + 2 * progress",0,1
4552,Soul Vortex (7 Missiles - Resynced) (Parabola) Aqua Torrent JJC,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 2
local maxKickBack = startDistance * .65
local maxUpMagnitude = startDistance * .1
speedscalar = .5
local arcAngle = 30*rand1-30

--progress = 1 - progress

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude


transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp )) * maxUpMagnitude",0,7
4553,10.0 Raid - Primalist - Boss - Council - MYTHIC - Missile 1,"
local startAngle = 360 * 0.25

local degreesPerSec = 270

transAngle = startAngle + (time * degreesPerSec)
transMag = 1.0

local spinRate = 360
modelRoll = time * spinRate",0,1
4554,10.0 Raid - Primalist - Boss - Council - MYTHIC - Missile 2,"
local startAngle = 360 * 0.5

local degreesPerSec = 270

transAngle = startAngle + (time * degreesPerSec)
transMag = 1.0

local spinRate = 360
modelRoll = time * spinRate",0,1
4555,10.0 Raid - Primalist - Boss - Council - MYTHIC - Missile 3,"
local startAngle = 360 * 0.75

local degreesPerSec = 270

transAngle = startAngle + (time * degreesPerSec)
transMag = 1.0

local spinRate = 360
modelRoll = time * spinRate",0,1
4556,10.0 Raid - Primalist - Boss - Council - MYTHIC - Missile 4,"
local startAngle = 360

local degreesPerSec = 270

transAngle = startAngle + (time * degreesPerSec)
transMag = 1.0

local spinRate = 360
modelRoll = time * spinRate",0,1
4557,Parabola (-45 Pitch) Scale Over Time - FX - EZ,"local angle = 0
local maxMagnitude = startDistance * .15
--local scalOverTime = 1
local scale = 0.5
modelPitch = -45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 0.5 + (progress/2)
if scale > 1 then
	scale = 1
end",0,1
4558,Chaotic Missile Up Arc - Slow then Fast,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local spinRate = 60
modelRoll = time * spinRate
speedScalar = 0.2 + 3 * progress * progress

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor
transUp = progressMult*noise2*4*factor + (progress*(1-progress))*40
transFront = progressMult*noise3*14*factor 

",0,0
4559,10.0 Raid - Primalist - Broodkeeper - Rapid Incubation Egg Drop,"local function parabola(m) return (4*m*(1-progress)*(progress)) end


local angle = 0
local spinRate = 120
local height = .5



transUp = parabola(height)

modelPitch = time * parabola(spinRate)
scale = 0.5",0,1
4560,WoWLabs - BR: Spell - Offensive - Bouncing Bolt - 1. Missile,"local angle = 0
local maxMagnitude = startDistance * .40

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 6000",0,0
4561,10.0 Raid - Primalist - Broodkeeper - Flamebolt Volley Precast,"--gamma curve function
local function parabola(m) return (4*m*(1-progress)*progress) end
--rotation function
local function rotate(t,d) return (math.cos(t)+((d or 1)*math.sin(t))) end

local radius = parabola(4)
local numCycles = parabola(12)
local theta = time * numCycles

if missileIndex==0 then
	transRight	= radius * rotate(theta,-1)
	transUp		= radius * rotate(theta)
elseif missileIndex==1 then
	transFront	= radius * rotate(theta)
	transUp		= radius * rotate(theta,-1)
elseif missileIndex==2 then
	transRight	= radius * rotate(theta)
	transFront	= radius * rotate(theta,-1)
end

--Start the missile at the impact pos
transFront = transFront - distanceToImpactPos ",0,3
4562,10.0 Unique Creature - Trinket - Tamed Eagle - Eagle Missile,"local angle = 180
local maxMagnitude = startDistance * .3

transAngle = angle
transMag = (progress * 2.5) - 1
transMag = (1 - (transMag * transMag)) * (maxMagnitude / 0.8)

--[[if progress <= 0.5 then
	transMag = (progress * 2.5) - 1
	transMag = (1 - (transMag * transMag)) * maxMagnitude
else
	transMag = (progress * 2.5) - 1
	transMag = (1 - (transMag * transMag)) * (maxMagnitude / 3)
end--]]",0,1
4565,10.0 Raid - Broodkeeper - Rapid Incubation Target Hatching A,"local function parabola(m) return (4*m*(1-progress)*progress) end
local startAngle = 0
local degreesPerSec = 180
local maxRadius = 2
local minMagnitude = 3
local maxMagnitude = 5
local overrideMissileIndex = 1
local overrideMissileCount = 3

local direction = 1
if rand3 > 0.5 then
	direction = -1
end

transAngle = startAngle + (((overrideMissileIndex or missileIndex) / (overrideMissileCount or missileCount)) * 360) + (time * degreesPerSec * direction)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))

transMag = transMag * (minMagnitude + parabola(maxMagnitude - minMagnitude))

local factor = 0.75 + (rand1 * 3)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

transUp = parabola((-1 * maxRadius) + (rand2 * (maxRadius * 2))) * (1 - progress)

scale = 0.5 + parabola(0.5)",0,1
4566,10.0 Raid - Broodkeeper - Rapid Incubation Target Hatching B,"local function parabola(m) return (4*m*(1-progress)*progress) end
local startAngle = 0
local degreesPerSec = 180
local maxRadius = 2
local minMagnitude = 3
local maxMagnitude = 5
local overrideMissileIndex = 2
local overrideMissileCount = 3

local direction = 1
if rand3 > 0.5 then
	direction = -1
end

transAngle = startAngle + (((overrideMissileIndex or missileIndex) / (overrideMissileCount or missileCount)) * 360) + (time * degreesPerSec * direction)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))

transMag = transMag * (minMagnitude + parabola(maxMagnitude - minMagnitude))

local factor = 0.75 + (rand1 * 3)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

transUp = parabola((-1 * maxRadius) + (rand2 * (maxRadius * 2))) * (1 - progress)

scale = 0.5 + parabola(0.5)",0,1
4567,10.0 Raid - Broodkeeper - Rapid Incubation Target Hatching C,"local function parabola(m) return (4*m*(1-progress)*progress) end
local startAngle = 0
local degreesPerSec = 180
local maxRadius = 2
local minMagnitude = 3
local maxMagnitude = 5
local overrideMissileIndex = 3
local overrideMissileCount = 3

local direction = 1
if rand3 > 0.5 then
	direction = -1
end

transAngle = startAngle + (((overrideMissileIndex or missileIndex) / (overrideMissileCount or missileCount)) * 360) + (time * degreesPerSec * direction)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))

transMag = transMag * (minMagnitude + parabola(maxMagnitude - minMagnitude))

local factor = 0.75 + (rand1 * 3)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

transUp = parabola((-1 * maxRadius) + (rand2 * (maxRadius * 2))) * (1 - progress)

scale = 0.5 + parabola(0.5)",0,1
4568,Parabola (Random) - Manic Grieftorch - ZGS,"local maxMagnitude = startDistance * (0.5*(0.5+(rand2/2)))

transUp = (1-math.pow((progress*2)-1,2)) * maxMagnitude",0,1
4569,"Falls Straight Down (Actually does!), Pitch=90,Roll=180","local magnitude = 40

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos

modelPitch = 90
modelRoll = 180
modelYaw = 0",0,1
4570,10.0 Raid - Primalist - Ice Spider - Caustic Eruption,"local angle = 0
local maxMagnitude = 4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4571,"Up, then Down + Always Miss - Left or Right, Miss by 1-2 yd","local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
end

transAngle = -90+math.floor(rand1*10)*180
transMag = progress*(1.8+1.8*rand2)
transFront = progress*3

transUp=sin(progress*180)*startDistance*2/5

modelPitch=remap(progress,0,1,80,-80)
",0,0
4573,Ruby Whelp Shell - Curing Whiff - Missile,"-- Start fast, end slower
out_speedScale = 0.5 + (1.0 * (1.0 - progress) * (1.0 - progress))

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1.4 * (.8 + (.4 * rand2))

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end",0,0
4574,Straight Missile - FX,,0,1
4575,Parabola (Fixed Height - 3-10 yards) - KJD,"local function parabola(m) return (4*m*(1-progress)*progress) end

local height = 3
local variance = 7
height = height + (rand1 * variance)

transUp = parabola(height)",0,1
4576,Item Spin - Parabola - FX,"local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

local waveHeight = .5
local wavesPerSec = 1
local angle = 0
local maxMagnitude = startDistance * .1
local spinRate = math.max(540*startDistance/10,360)


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
--transRight = (sin(progress*180)*.5)*sin(progress*spinRate)
modelPitch=progress*spinRate
transUp = (sin(progress*180)*.5)*cos(progress*spinRate)",0,1
4577,Item - Parabola - FX,"
local angle = 0
local maxMagnitude = startDistance * .1


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4578,Parabola (High) (Grow 0 to 1),"local angle = 0
local maxMagnitude = startDistance * .30

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = progress",0,1
4579,"Fountain (Very High, faster spin)","local angle = 0
local maxMagnitude = startDistance * 0.6
local spinRate = 520

modelPitch = time * spinRate


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--transFront = -distanceToFirePos * (1 - progress)
",0,1
4580,10.0.7 Baine Questline - Accessory - Trinket - Test - Parabola - ZGS,"local angle = 0
local maxMagnitude = startDistance * .4

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = progress * 275
--modelRoll = progress * 175",0,1
4582,GBerger Test Missile - 3 missile spiral,"local outerWheelSpinRate = -360 	-- 1 spin / sec
local outerWheelMag = 2			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

--[[
transFront = outerWheelMag * cos ( missileAngle ) * (1 - progress) * 2
transRight = outerWheelMag * sin ( missileAngle ) * (1 - progress) * 2
--]]


transAngle = missileAngle
transMag = ((progress * 2) - 1)
transMag = (1 - (transMag * transMag)) * outerWheelMag

transUp = ((progress * 2) - 1)
transUp = (1 - (transUp * transUp)) * 1
",0,3
4583,"Spin (Yaw, Roll=270) (Throw Glaive) (Equipped Weapon)","--[[
speed = 50
launchDelay = .15

travelTime = totalDistance / speed
totalTime = launchDelay + travelTime
actualProgress = (launchProgress*launchDelay + progress*travelTime) / (totalTime)

transFrontExpected =  totalDistance * actualProgress 
transFrontTravelled = totalDistance * progress
transFront = transFrontExpected - transFrontTravelled
--]]

transRight = -(sin(progress*180))*math.pow(startDistance,.3)

modelRoll=270
modelYaw = progress * 500",0,1
4586,10.1.5 Dungeon - Infinite - Infinite Drakonid - Eon Chop - Weapon Throw - SRC,"local angle = 0
local maxMagnitude = startDistance * 0.1
local spinRateP = 720
local spinRateY = 10

transAngle = angle
--transMag = (progress * 2) - 1
--transMag = (1 - (transMag * transMag)) * maxMagnitude


modelPitch = time * spinRateP
modelYaw = time * spinRateY",0,1
4587,10.1 Raid - Aberrus - Sarkareth - Asteroid - 07 Missile To Hole - KLH,"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * 540
modelRoll = progress * 720
modelYaw = progress * 360

scale = 1

if time > 3.5 then
	scale = 1 - (time - 3.5)
end",0,1
4589,10.1 Raid - Aberrus - Sarkareth - P2-P3 Bombs - 06a Timer - KLH,"
local magnitude = {
	[0]=15,[1]=16,[2]=13,[3]=14,[4]=12,[5]=17
	}
	
--transRight=cos(rand1*360)*rand3*2
--transFront=sin(rand1*360)*rand2*2
transUp = magnitude[missileIndex] * ( 1 - progress )
transFront=distanceToImpactPos
scale=1
",0,1
4590,"Start slow, End Less Fast, Pitch 90","out_speedScale = 0.1 + 5 * progress * progress
transUp  = (1.4 - 2 * rand1) * (1 - progress)

modelPitch = 90",0,1
4591,9.0 - Drunken Missile - Very Drunk - FX - EZ,"local r1 = rand1*10-2
local r2 = rand2*10-2

if progress < 0.999 then
	progress = progress*progress 
 
	transRight = math.sin(progress*3.14) * 3 * r1 + (rand3-0.5)*2
	transUp = math.sin(progress*3.14) * 3 *  (rand2-0.4)
	transFront = (rand3*15-10)*(1-progress)*progress
end

if progress > 0.999 then
	progress = 1.0
	
end",0,0
4592,9.0 - Drunken Missile - Very Drunk - Random Scale - FX - EZ,"local r1 = rand1*10-2
local r2 = rand2*10-2

scale = 1 + 2*rand3

if progress < 0.999 then
	progress = progress*progress 
 
	transRight = math.sin(progress*3.14) * 3 * r1 + (rand3-0.5)*2
	transUp = math.sin(progress*3.14) * 3 *  (rand2-0.4)
	transFront = (rand3*15-10)*(1-progress)*progress
end

if progress > 0.999 then
	progress = 1.0
	
end",0,0
4593,10.1.5 Dungeon - Infinite - Boss - Evil Chromie - Tank Hit Line 2b. Cosmetic Missile (CHTL),"local growFactor = 3
local speedFactor = 2.5

scale = 0.6 + math.pow(progress,growFactor)

speedScalar = 0.3 + speedFactor * progress
",0,1
4594,10.1 Raid - Aberrus - Djaradin Assault - LT - Hunter - Spear 03a Radial Visual,"local radius=(progress*60)
local curAngle=0
local anglePerMissile = 360/missileCount

modelPitch = -90

curAngle=curAngle+anglePerMissile*missileIndex
transFront=(sin(curAngle)*radius)-distanceToFirePos
transRight=(cos(curAngle)*radius)

scale = 5+progress + .01
if (progress > 0.6) then
	scale = scale + 1*(progress-0.6)
end

if (progress > 0.95) then
	scale = .1
	transUp = -10
end",0,45
4597,10.1 Raid - Aberrus - Sarkareth - P3 Ascension - 08 Missile 3 - KLH,"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * 270
modelRoll = progress * 360
modelYaw = progress * 180

scale = 1 + 1 * progress",0,1
4598,10.1 Raid - Aberrus - Sarkareth - P3 Ascension - 08 Missile Blossom - KLH,"local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--modelPitch = progress * 270
--modelRoll = progress * 360
--modelYaw = progress * 180

scale = 1",0,1
4599,Evoker - Spec 3 - Core - Echoing Strike,"local angle = rand2 * 100

if rand1 > 0.5 then
	angle = angle * -1
end

local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4600,10.1 Raid - Aberrus - Sarkareth - P3 Supernova - 09 Dummy Miss - KLH,"local maxMagnitude = 0.25
local minSpeedScalar = 0.75
local maxSpeedScalar = 1.25
-- This value should be less than 1 to reduce total magnitude --
local magnitudeReduction = 0.2

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
-- Scale down total magnitude --
magnitude = magnitude * magnitudeReduction

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
",0,1
4601,Test - Ken - Motion 1,modelPitch = time * 360,0,1
4602,10.1 - Niffen Cave Dive - Sniff - Missile (LQM),"modelYaw = 90
scale = 1
colorA = 1
if time < 0.7 and time > 0.3 then
	out_speedScale = 0.2
end

if distanceToImpactPos < 2 then
	colorA =  colorA * math.clamp((distanceToImpactPos - 1) / 1, 0, 1)
end

if distanceToFirePos < 4 then
	colorA =  colorA * math.clamp((distanceToFirePos - 2) / 1, 0, 1)
end

",0,0
4604,10.1 Raid - Aberrus - Sarkareth - Boss - Stars - 01 Missile - KLH,"local magnitude = 40

transRight = magnitude/2 * (1.0 - progress)
transUp = magnitude * (1.0 - progress)

local function remap(value, min1, max1, min2, max2)
	if ((value == nil) or (min1 == nil) or (max1 == nil) or (min2 == nil) or (max2 == nil)) then return nil; end
	return min2 + (value - min1) * (max2 - min2) / (max1 - min1)
end

--transUp=missileIndex*.45
transFront=remap(missileIndex,1,5,.75,1.5)
--transFront = distanceToImpactPos",0,1
4605,"Parabola (Fast in/out, MidHigh)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 3*distanceToFirePos
frontP = HorizontalSCurve(progress,1.2)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)",0,1
4606,Engineering Missile Swarm - Itano Circus/Macross Missiles (1 missile),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(40)
local maxAngle = math.rad(200)
local maxArc = 8

local p = math.pow(progress,6)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.3)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg * .8

local progressMult = math.pow( math.abs(math.sin(progress*math.rad(720)) * (1-progress)), .2)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 3
transRight = transRight + progressMult*noise1*2.5*factor 
ransUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*3*factor ",0,1
4607,10.1 Endgame (WQ/Daily) - Fyrakk Assaults - Accessory - Trinket - Orb Launcher - Missile,"local angle = 0
local angleVariance = 60
local maxMagnitude = startDistance * .15 * (1+rand1)
local spinRate = 720 * rand2 - 360

if rand3 < .5 then
	angle = rand3*-angleVariance
else
	angle = rand3*angleVariance
end

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRate

if progress > .9 then
	out_speedScale = .25
elseif progress > .75 then
	out_speedScale = .5
elseif time < .2 then
	out_speedScale = .01
else
	out_speedScale = 4
end",0,1
4609,Itano Circus/Macross Missiles (1 missile - Real),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(20)
local maxAngle = math.rad(180)
local maxArc = 60

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 16
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor ",0,1
4610,10.1 Raid - Aberrus - Kazzara - Hellsteel Fragment - AD,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 960
modelYaw = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = -time * spinRate",0,0
4611,10.1 Raid - Aberrus - Sarkareth - P3 Ascension - Missile 2 - KLH,"local magnitude = 110

transRight = magnitude/-2 * (1-progress)
transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos",0,1
4612,10.1.5 Dungeon - Infinite - Boss 4 - Iridikron - Add Creation Missile - SRC,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 7
local variance = 1
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 1
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4613,"Parabola (Pitch Spin, low speed, low)","local angle = 0
local maxMagnitude = startDistance * 0.1
local spinRate = 0

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

speedScalar = 0.125",0,1
4614,10.1 Raid - Aberrus - Sarkareth - P2-P3 Bombs (Carrying) - 04 Timer 14 yd - KLH,"
local magnitude = 14
	
--transRight=cos(rand1*360)*rand3*2
--transFront=sin(rand1*360)*rand2*2
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
scale=1
",0,1
4615,10.1 Raid - Aberrus - Sarkareth - P2-P3 Bombs (Carrying) - 04 Timer 12 yd - KLH,"
local magnitude = 12
	
--transRight=cos(rand1*360)*rand3*2
--transFront=sin(rand1*360)*rand2*2
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
scale=1
",0,1
4616,10.1 Raid - Aberrus - Sarkareth - P2-P3 Bombs (Carrying) - 04 Timer 09 yd - KLH,"
local magnitude = 9
	
--transRight=cos(rand1*360)*rand3*2
--transFront=sin(rand1*360)*rand2*2
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
scale=1
",0,1
4617,10.1 Raid - Aberrus - Sarkareth - P2-P3 Bombs (Carrying) - 04 Timer 06 yd - KLH,"
local magnitude = 6
	
--transRight=cos(rand1*360)*rand3*2
--transFront=sin(rand1*360)*rand2*2
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
scale=1
",0,1
4618,10.1 Raid - Aberrus - Sarkareth - P2-P3 Bombs (Carrying) - 04 Timer 03 yd - KLH,"
local magnitude = 3
	
--transRight=cos(rand1*360)*rand3*2
--transFront=sin(rand1*360)*rand2*2
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
scale=1
",0,1
4619,"Parabola (High, Pitch Spin Slow) (0.45 Mag) - ZGS","local angle = 0
local maxMagnitude = startDistance * .45
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

",0,1
4620,10.1 Raid - Aberrus - Sarkareth - P1 Fire - 02 Missile - KLH,"local magnitude = 40

transUp = (magnitude * ( 1 - progress )) - .5
transFront=distanceToImpactPos
",0,1
4621,10.1 Raid - Aberrus - Sarkareth - P1 Bombs - 02 Missile - KLH,"local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 4*distanceToFirePos
frontP = HorizontalSCurve(progress,1.2)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)

if time < 1.0 then
	scale = time
else
	scale = 1
end",0,1
4622,9.0 - Drunken Missile - Very Drunk - Random Scale (0.5 to 1.5) - FX ,"local r1 = rand1*10-2
local r2 = rand2*10-2

scale = .5 + 1*rand3

if progress < 0.999 then
	progress = progress*progress 
 
	transRight = math.sin(progress*3.14) * 3 * r1 + (rand3-0.5)*2
	transUp = math.sin(progress*3.14) * 3 *  (rand2-0.4)
	transFront = (rand3*15-10)*(1-progress)*progress
end

if progress > 0.999 then
	progress = 1.0
	
end",0,0
4624,10.1.5 Dungeon - Infinite - Deios - Focusing Ritual Dragon to Nozdormu Missile,"local function parabola(m) return (4*m*(1-progress)*progress) end

local maxHeight = 10
local direction = 1
local noiseAmt = parabola(10)

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transFront		= transFront + parabola(progressMult*noise1*(noiseAmt*.25))
transRight		= transRight + parabola(progressMult*noise2*(noiseAmt*.25))
transUp			= transUp + (progressMult*noise3*(noiseAmt*.25)) + parabola(maxHeight)


local mult = 2
local factor = 3
local maxRotationDegrees = 180
local progressMult = sin(progress*180)*(1-progress)*mult
local progressSpeed = math.pow(progress,factor)


transFront = (-cos(progressSpeed * maxRotationDegrees)+1) * startDistance * math.pow(1 - progressSpeed ,0.7) * 0.5
transRight = sin(progressSpeed * maxRotationDegrees) * startDistance * math.pow(1 - progressSpeed ,0.7) * 0.5
",0,0
4625,10.1 Raid - Aberrus - Djaradin Assault - LT - Lavacaster - Magma Shield 04 Cosmetic Missile - KRY,"local angle = 30
local maxMagnitude = startDistance * .5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .1

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

speedScalar = 1 - (progress * .5)
scale = 1 + 1*rand1

--[[local waveHeight = 1
local wavesPerSec = 2
local spinRate = 720
local maxHeight=math.max(1.5,rand1*10)
local MaxHorizontalMag=math.max(startDistance*.15,1)

if rand2<.5 then
	MaxHorizontalMag=MaxHorizontalMag*-1
end

scale = 1 + 1*rand1
transUp=sin(progress*180)*maxHeight
transRight=sin(progress*180)*MaxHorizontalMag]]--

",0,1
4626,10.1.5 Time Rifts - Despawn FX - Missile - PRK,"local maxMagnitude = startDistance * .05
local startRiseHeight = 0.5
local startRiseProgress = 0.3

faceImpactPos = 1

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude
if progress<startRiseProgress then
	transUp = transUp + startRiseHeight*progress/startRiseProgress
	transFront = -totalDistance*progress
else
	transUp = transUp + startRiseHeight
	transFront = -totalDistance*(1-progress)*(startRiseProgress/(1-startRiseProgress))
end


",0,0
4627,Chaotic Missile Slight Up Arc,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = 1.4
transRight = progressMult*noise1*14*factor
transUp = progressMult*noise2*4*factor + (progress*(1-progress))*10
transFront = progressMult*noise3*14*factor 

",0,0
4628,10.1.5 Dungeon - Infinite - Boss 4 - Iridikron - Vessel Effects - Missile Motion,"local function parabola(m) return (4*m*(1-progress)*progress) end

local overallMagnitudeOfRandomTranslations = 4
overallMagnitudeOfRandomTranslations = parabola(overallMagnitudeOfRandomTranslations)

local angleMax = 360 -- the angle functions seem to take degrees, not radians
local minSpeedScalar = 1
local maxSpeedScalar = 2

transRight = (sin((rand1 * angleMax) + (time * 10)) + cos((rand2 * angleMax)) + (time * 2)) * overallMagnitudeOfRandomTranslations
transUp = (sin((rand2 * angleMax) + (time * 7)) + cos((rand1 * angleMax)) + (time * 3)) * overallMagnitudeOfRandomTranslations

--transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * overallMagnitudeOfRandomTranslations
--transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * overallMagnitudeOfRandomTranslations

-- purely a visual missle, so there aren't issues with using this
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
",0,1
4629,10.1.5 Dungeon - Infinite - Boss 4 - Iridikron - Vessel Effects - Missile Up Parabola,"local maxMagnitude = 3.0
local minSpeedScalar = .7
local maxSpeedScalar = 1.5

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

local function parabola(m) return (4*m*(1-progress)*progress) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(height)
",0,1
4630,10.1.5 Dungeon - Infinite - Clock - Achievement Portal Line Missile,"local function parabola(m) return (4*m*((1-progress))*(progress)) end

local height = 4
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(height)

local factor = 3
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

local transMag = parabola(1) * parabola(5)
local transAngle = rand2 * 360

faceImpactPos = 1
scale = 0.25 + parabola(0.75)",0,1
4631,10.1.5 Time Rifts - Crankshot - PRK,"	if missileIndex == 1 then
		out_speedScale = rand1/1.5 + 1
		transRight = progress * (rand1 - .50) + .5
		transUp = progress * (rand2 - .50)
	elseif missileIndex == 2 then
		out_speedScale = rand2/1.5 + 1
		transRight = progress * (rand2 - .50) - .5
		transUp = progress * (rand3 - .50)
	else
		out_speedScale = rand3/1.5 + 1
		transRight = progress * (rand2 - .50)
		transUp = progress * (rand1 - .50) + .5
	end",0,0
4632,"Meteor Strike (50 Yards, Spin slow)","local magnitude = 50
local spinRate = 700

transUp = magnitude * ( 1 - progress )
modelPitch = time * spinRate
",0,1
4634,Warlock - Malefic Rapture,"

transMag = (1 - math.pow(progress * 2 - 1,2)) * startDistance * .1



scale = 0.1 + (progress*1)
local randomSpeedAmount = 0.25
out_speedScale = (1 - randomSpeedAmount) + (rand1 * randomSpeedAmount)",0,1
4635,10.1.5 Dungeon - Infinite - Boss - Evil Chromie - Tank Hit Line 2b. Cosmetic Missile (CHTL),"local spread = 10

local startAngle = 360 * missileIndex / missileCount + 180;
local degreesPerSec = 360

transAngle = startAngle + (time * degreesPerSec)
transMag = spread --* (1-progress);

local pause = 0.2	

if ( progress < pause ) then 
	transFront = 0;
else
	progress = progress - pause + pause * progress
    transFront = progress*progress*progress
end

local spinRate = 360
modelRoll = time * spinRate
",0,20
4636,Paladin - Daybreak Missile,"-- Start slow, end faster
out_speedScale = 0.5 + (0.5 * (1 + progress) * (1 + progress))

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1 * (.8 + (.4 * rand2))

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end",0,1
4637,10.1.5 Dungeon - Infinite - Boss 5 - Tyr - Spark of Tyr - Missile Motion - SAHM,"local angle = 180
local maxMagnitude = startDistance * .3 --0.6

transAngle = angle
transMag = (progress * 2) - 1
transMag = 1 - ((transMag * transMag) * maxMagnitude)",0,1
4638,Descend from Above - 100 yds,"
transUp = (1 - progress) * 100",0,0
4639,10.1.5 Dungeon - Infinite - Deios - Infinite Corruption Small Missile,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 10
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
local maxWidth = 10
local direction = 1

if rand3>0.5 then
	direction = -1
end

transRight = direction * math.min(startDistance/maxWidth,maxWidth) * rand2",0,1
4640,10.1.5 Dungeon - Infinite - Deios - Infinite Corruption Large Missile,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 10
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
local maxWidth = 3
local direction = 1

if rand3>0.5 then
	direction = -1
end

transRight = direction * math.min(startDistance/maxWidth,maxWidth) * rand2",0,1
4641,Priest - Heaven's Wrath,"speedScalar = .5*(progress+0.1)+1
scale = math.min(1,progress*5)
transUp=sin(progress*180)*startDistance/14
--this used to random left or right, switched to more of a organic feel
local angle1 = rand1*60-30

local maxMagnitude = startDistance * .025

transAngle = angle1

transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude


",0,1
4642,Descend from Above - 300 yds,"
transUp = (1 - progress) * 300",0,0
4643,"Parabola (Fixed Height - 3-5 yards, With Noise) - KJD","local function parabola(m) return (4*m*(1-progress)*progress) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(height)

---[[
local factor = 2
local maxWidth = 5
local noiseAmt = startDistance * 0.4

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25))
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos
--]]",0,1
4644,Missile Tumble,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4646,10.2 Raid - Dream - Boss - Emerald Council - Dryad - Poisonous Javelin - 02. Missile - ARB ,"modelYaw = 180
scale = 1.5

local angle = 0
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4647,10.2 Raid - Dream - Weaver - Rain - 02 Missile - KRY,"local magnitude = 40
scale = .5 + 1*rand1
transUp = (magnitude * ( 1 - progress )) - .5
transFront=distanceToImpactPos
",0,0
4648,10.2 Raid - Dream - Weaver - Tank Hit Missile - KRY,"local angle = 360*rand1
local maxMagnitude = startDistance * .2
local spinRate = 720
scale = .75
modelRoll = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
modelRoll = time * spinRate
",0,0
4649,Parabola (-90 degree angle),"local angle = -90
local maxMagnitude = startDistance * .5
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = -90
modelRoll = time * spinRate
",0,1
4650,10.2 Raid - Dream - Weaver - Continuum - Beam Cast - KRY,faceImpactPos=1,0,1
4651,"Parabola (Fixed Height - 10 yards, Fast Out Inverted) - CHTL","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 10
local variance = 0
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 5
transFront = math.pow(progress,1/factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4652,"10.2 Professions - Legendary - Enchanting - Order, Slow","local missileSpeed = 3.9
local startSpeed = 20
local p0 = 0

local travelTime = (startDistance / missileSpeed)
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

--transFront = -distanceToFirePos

--local spinRate = 1420
--modelPitch = time * spinRate
",0,1
4653,"Unbound Order(Other, Medium)","local missileSpeed = 6
local startSpeed = 15
local p0 = 0

local travelTime = (startDistance / missileSpeed)
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

--transFront = -distanceToFirePos

--[[local spinRate = 1500
modelPitch = time * spinRate
--]]",0,1
4654,"Unbound Order(Other, Fast)","local missileSpeed = 9
local startSpeed = 20
local p0 = 0

local travelTime = (startDistance / missileSpeed)
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

--transFront = -distanceToFirePos
--[[
local spinRate = 1600
modelPitch = time * spinRate
--]]",0,1
4655,10.2 Raid - Dream - Igira Channeler - Missile Motion,"local function parabola(m) return (4*m*(1-progress)*progress) end

local overallMagnitudeOfRandomTranslations = 4
overallMagnitudeOfRandomTranslations = parabola(overallMagnitudeOfRandomTranslations)

local angleMax = 360 -- the angle functions seem to take degrees, not radians
local minSpeedScalar = 1
local maxSpeedScalar = 1.5

transRight = (sin((rand1 * angleMax) + (time * 10)) + cos((rand2 * angleMax)) + (time * 2)) * overallMagnitudeOfRandomTranslations
transUp = (sin((rand2 * angleMax/2) + (time * 7)) + cos((rand1 * angleMax/2)) + (time * 3)) * overallMagnitudeOfRandomTranslations

--transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * overallMagnitudeOfRandomTranslations
--transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * overallMagnitudeOfRandomTranslations

-- purely a visual missle, so there aren't issues with using this
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
",0,1
4656,10.2 Raid - Dream - Boss - Fiery Ancient - Intermission - Boss Debuff 01 Effect - CHTL,"local maxMagnitude = 4
local minSpeedScalar = .8
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude*0.5
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (1+3*rand3) * sin(time * 2 * 360) * ( 1 - progress ) * 8",0,0
4657,9.0 - Drunken Missile - Long Range Drunk - FX - EZ,"local r1 = rand1*12-2
local r2 = rand2*6-2

if progress < 0.9999 then
	progress = progress*progress 
 
	transRight = math.sin(progress*12) * r1 + (rand3-0.5)*2
	transUp = math.sin(progress*11) * 3 *  (rand2-0.4)*2
	transFront = (rand3*15-10)*(1-progress)*progress
end

if progress > 0.9999 then
	progress = 1.0
	
end",0,0
4658,Spin (Roll) - 1080 (Throw Glaive Left Hand),"--[[
speed = 50
launchDelay = .15

travelTime = totalDistance / speed
totalTime = launchDelay + travelTime
actualProgress = (launchProgress*launchDelay + progress*travelTime) / (totalTime)

transFrontExpected =  totalDistance * actualProgress 
transFrontTravelled = totalDistance * progress
transFront = transFrontExpected - transFrontTravelled
--]]

transRight = (sin(progress*180))*math.pow(startDistance,.3)

modelYaw  = 60",0,1
4660,10.2 Raid - Dream - Weaver - Add Summon - Visual Missile - KRY,"local angle = 90
local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = progress * 360
modelRoll = progress * 360
modelYaw = progress * 360

scale = 3


",0,1
4661,Parabola (25 Pitch),"local angle = 0
local maxMagnitude = startDistance * .15
modelPitch = 25

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4662,10.2 Raid - Dream - Boss - Keeper of the Flame - P1 Soak - Falling Ember - SAHM,"
-- [[
-- fall down

local magnitude = 18 -- match offset in spell script 87462

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos


modelPitch = 90
modelRoll = 180
modelYaw = 0

-- snake 1/2 freq
--local waveHeight = .8
--local wavesPerSec = 1

--transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2
--]]
--[[
--rotation function
local function rotate(t,d) return (math.cos(t)+((d or 1)*math.sin(t))) end
local rightMaxSway = 5
local rightPower = 3
local upTotalDist = 20
local upMaxSway = 2
local upPower = 2
local numCycles = 4
local theta = time * numCycles
--shift the missile left/right over time
local leftRightDirection = rotate(theta,-1)
transRight = rightMaxSway * leftRightDirection
transRight = transRight * (1 - (progress ^ rightPower))
--drop the missile in place over time, but add some vertical goosing based on the left/right movement
transUp = (upTotalDist * (1 - progress)) + math.abs((leftRightDirection ^ upPower) * (upMaxSway * (1 - progress)))
--move the missile ahead to be above the impact pos
transFront = distanceToImpactPos
--Adjust the missile orientation
modelPitch = 90
modelRoll = 180
modelYaw = 0
--]]",0,0
4663,Test - Ken - Test Soak For Scott,"--rotation function
local function rotate(t,d) return (math.cos(t)+((d or 1)*math.sin(t))) end

local rightMaxSway = 5
local rightPower = 3

local upTotalDist = 40
local upMaxSway = 2
local upPower = 2

local numCycles = 6

local theta = time * numCycles

--shift the missile left/right over time
local leftRightDirection = rotate(theta,-1)
transRight = rightMaxSway * leftRightDirection
transRight = transRight * (1 - (progress ^ rightPower))

--drop the missile in place over time, but add some vertical goosing based on the left/right movement
transUp = (upTotalDist * (1 - progress)) + math.abs((leftRightDirection ^ upPower) * (upMaxSway * (1 - progress)))

--move the missile ahead to be above the impact pos
transFront = distanceToImpactPos 

--Adjust the missile orientation
modelPitch = 90
modelRoll = 180
modelYaw = 0",0,0
4664,10.2 Raid - Dream - Zone - RP - Fyrakk Visual Stalker - Periodic VFX Missile Motion - SRC,"local function parabola(m) return (4*m*(1-progress)*progress) end

local overallMagnitudeOfRandomTranslations = 4
overallMagnitudeOfRandomTranslations = parabola(overallMagnitudeOfRandomTranslations)

local angleMax = 360 -- the angle functions seem to take degrees, not radians
local minSpeedScalar = 1
local maxSpeedScalar = 2

transRight = (sin((rand1 * angleMax) + (time * 10)) + cos((rand2 * angleMax)) + (time * 2)) * overallMagnitudeOfRandomTranslations
transUp = (sin((rand2 * angleMax) + (time * 7)) + cos((rand1 * angleMax)) + (time * 3)) * overallMagnitudeOfRandomTranslations

--transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * overallMagnitudeOfRandomTranslations
--transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * overallMagnitudeOfRandomTranslations

-- purely a visual missle, so there aren't issues with using this
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
",0,1
4665,Spiral Vortex (3 Missiles) (Randomized) + Grow (3x),"local startAngle = 0
local degreesPerSec = 360*rand1
local maxMagnitude = 3*rand2
local maxKickBack = 10*rand3

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude
scale=1+(2*progress)
",0,3
4666,10.2 Dream - Rare Elite - Greedy Gessie - Look for Food - 03. Missile: Orangeroot - ARB ,"local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 180
scale = 0.75

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

",0,0
4667,"Parabola (Pitch Spin Slow, High, Model Rolled 90)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
modelRoll = 90
",0,1
4668,Combat Revamp - Storm Bolt Throw Offset Right,"transRight = (1-progress)*-.62
transFront = (1-progress)*-1.5

local angle = 0
local maxMagnitude = startDistance * .05
modelPitch = 5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,0
4669,Descend from Above - 30 yds,"
transUp = (1 - progress) * 30",0,0
4670,Descend from Above - 20 yds,"
transUp = (1 - progress) * 20",0,0
4671,Descend from Above - 10 yds,"
transUp = (1 - progress) * 10",0,0
4672,Parabola (Fixed Height - 12-30 yards) - SRC,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 12
local variance = 18
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
4673,11.0 Dungeon - Airship - Cultist - Collapsing Rift Missile,"local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local height = 3
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
local powerMotion = math.pow(progress,factor)
local forwardEmphasis = powerMotion * (progress * 3) * parabola()
transFront = powerMotion
transFront = transFront * distanceToFirePos
transFront = transFront - distanceToFirePos
transFront = transFront + forwardEmphasis

local scaleMin = 1
local scaleMax = 3
scale = scaleMin + ((scaleMax - scaleMin) * (progress))",0,1
4674,"10.2 Professions - Legendary - Enchanting - Order, Self","local missileSpeed = 0.42
local startSpeed = 20
local p0 = 0.5

local travelTime = (startDistance / missileSpeed) - 2.5
local v0 = startSpeed
local acc = (v0*travelTime + p0) / (travelTime*travelTime)

transUp = -acc*time*time + v0*time + p0

--local spinRate = 1080
--modelPitch = time * spinRate
",0,1
4675,Liang Test,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 20
local variance = 6
height = height + (rand1 * variance)

transUp = parabola(1.2,1.2,height)

local factor = 2
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4676,10.2 Raid - Dream - Weaver - Full Bloom - 2 Cosmetic Missile - KRY,"
local waveHeight = 1.2
local wavesPerSec = 1.6

--modelPitch = 90+15

transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)

if rand2>0.5 then transRight = -1*transRight end

scale = 0.8 + (progress)

--speedAbs = rand1*10-5
--local randomSpeedAmount = 0.25
--out_speedScale = (1 - randomSpeedAmount) + (rand1 * randomSpeedAmount)",0,1
4677,10.2 Raid - Dream - Boss - Fiery Ancient - Area Denial - 01 Cover - Chloe Test,"local outerWheelSpinRate = 180 	-- 1 spin / sec
local outerWheelMag = 10			-- 1 yard
local missileAngle = outerWheelSpinRate * time

if (missileIndex > 0) then
	local anglePerMissile = 360 / (missileCount)
	missileAngle = missileAngle + anglePerMissile * missileIndex
end

transFront = outerWheelMag * cos ( missileAngle )
transRight = outerWheelMag * sin ( missileAngle )
transUp = -distanceToFirePos",0,6
4678,10.2 Raid - Dream - Boss - Fiery Ancient - Intermission - Soaks - Missile (CHTL),"local angle = 0
local maxMagnitude = startDistance * .75

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = progress

transFront = -distanceToFirePos * (1 - progress)",0,1
4680,7.0 Nightmare Dungeon - Corrupted Water Elemental - Water Bomb 1. Missile,"local magnitude = 15
scale = 2

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos	",0,0
4681,Sarah's Test Missile,"local maxMagnitude = startDistance * .15
transAngle = 360*rand1
transMag = (5+5*rand2) * progress

transUp = (progress * 2) - 1
transUp = (1 - (transUp * transUp)) * maxMagnitude
transFront = 1.3 * progress

if progress < .95 then
   colorA = 0
else
   colorA = 1
end",0,1
4682,11.0 Z1 - Max Level - Storm Rook Sidewinder (RPS),"faceImpactPos=1
transAngle=(1080/startDistance)*distanceToFirePos
local MaxHeight=8
transMag=5",0,0
4683,11.0 Z1 - Max Level - Storm Rook Sidewinder Reverse (RPS),"faceImpactPos=1
transAngle=(-1080/startDistance)*distanceToFirePos
local MaxHeight=8
transMag=5",0,0
4684,Evoker - Chrono Flame,"-- Start fast, end slower
out_speedScale = 0.5 + (1.0 * (1.0 - progress) * (1.0 - progress))

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1.4 * (.8 + (.4 * rand2))

colorA = 0.5


transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end",0,1
4685,Evoker - Chrono Flame (Damage),"
modelRoll = 720

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 0.8 * (startDistance / 30)
local wavesPerSec = 3.4 * (.8 + (.4))

--transRight = ((waveHeight * sin((time) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2
--transUp = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2

--transUp = ((waveHeight * sin((time) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
",0,1
4686,Evoker - Thread of Fate,"modelRoll = 90
colorA = 0.4


local slowProgressStart = 0.4
local slowProgressEnd = 0.65
local slowSpeed = 0.3
local finalSpeed = 0.85

speedScalar = finalSpeed

if ( progress > slowProgressStart and progress < slowProgressEnd ) then
   speedScalar = slowSpeed
end
",0,0
4687,"Parabola (Fixed Height - 10-12 yards, With Noise)","local function parabola(m) return (4*m*(1-progress)*progress) end

local height = 10
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(height)

---[[
local factor = 2
local maxWidth = 12
local noiseAmt = startDistance * 0.4

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25))
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos
--]]",0,1
4688,"Drunken Missiles (1 Missile, Very High Parabolic, Less Drunk)","local maxMagnitude = 1
local minSpeedScalar = .9
local maxSpeedScalar = startDistance * 3

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
magnitude = magnitude * 0.25

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4689,"Parabola (Fixed Height - 8-10 yards, Fast Out)","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 8
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4690,"Fast Out - Hook Left and Right (2 Missiles, 10 yards) - KJD","local function parabola(m) return (4*(m or 1)*(1-progress)*progress) end

local factor = 2
local maxWidth = 3

local height = 10

if missileIndex == 0 then
	direction = -1
elseif missileIndex == 1 then
	direction = 1
end

transRight = direction * (parabola() * math.min(startDistance/maxWidth,maxWidth)) 
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = parabola(maxWidth)",0,2
4691,Fast Out - Hook Left With Higher Parabola,"local factor = 3
local maxWidth = 7
local direction = 1
local height = startDistance / 3.5

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * (0.5 + (rand2/2)))
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = 4 * progress * (1-progress) * height",0,1
4692,Fast Out - Hook Right With Higher Parabola,"local factor = 3
local maxWidth = 7
local direction = -1
local height = startDistance / 3.5

transRight = direction * ((progress) * (1-progress) * 4 * math.min(startDistance/maxWidth,maxWidth) * (0.5 + (rand2/2)))
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos
transUp = 4 * progress * (1-progress) * height",0,1
4693,10.2.7 Timewalking Season - Pandaria - Incendiary Terror - Missile (19711),"local r1 = rand1*5-2
local r2 = rand2*5-2

local height = startDistance / 3.5

if progress < 0.9999 then
	progress = progress*progress 
 
	transRight = math.sin(progress*5) * r1 + (rand3-0.5)*2
	transUp = 4 * progress * (1-progress) * height
	transFront = (rand3*15-10)*(1-progress)*progress
end

if progress > 0.9999 then
	progress = 1.0
	
end

scale = 0.5 + (progress/2)
if scale > 1 then
	scale = 1
end",0,1
4694,Swirling Mist Missile v2,"


local maxMagnitude = 1.5
local minSpeedScalar = .8
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude*0.5

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end


local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = (1+3*rand3) * sin(time * 2 * 360) * ( 1 - progress ) * 2



-- Start fast, end slower
out_speedScale = 0.5 + (1.0 * (1.0 - progress) * (1.0 - progress))",0,1
4696,11.0 Dungeon - Brewery - Laborer LT - Throw Chair - ARB,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

scale = 1.5

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,0
4697,11.0 Dungeon - Brewery - Chef Mini-boss - High Steaks - 02. Missile - ARB ,"local angle = 0
local maxMagnitude = startDistance * 0.6
local spinRate = -260

scale = 0.45

modelPitch = time * spinRate


transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--transFront = -distanceToFirePos * (1 - progress)
",0,0
4698,Dread Spray (Shotgun) (Range36)(Wider)(MDE),"-- creates a shotgun spray of missiles for use in cone spells
-- the missiles will have some randomness to their spread and speed
-- this version contains special logic for dread spray that allows the missiles near the edges
-- of the cone to stop in midair at some fixed distance to simulate hitting a wall

local wallDist = 17.8					-- in yards
local targetDist = 30					-- in yards
local spreadAmt = 24					-- max distance two missiles can be from each other (correlates to spread angle)
local percentWall = 1				-- the percent of the cone spread that should travel the full targetDist (0-1)
local spreadRND = (rand2 - 0.5) / 1	-- how much randomness to add to the each missile's angle
local offsetLeft = 0					-- distance to move the missile impact points left (allows fine tuning of cone direction)

local spread = (-0.5 + (missileIndex / missileCount) ) * (spreadAmt * 2)
transRight = progress * (spread + offsetLeft)

if (math.abs(spread + offsetLeft) > (percentWall * spreadAmt)) and (progress >= (wallDist/targetDist)) then
	transFront = (-targetDist * progress) + wallDist
	transRight = (wallDist/targetDist) * (spread + offsetLeft)
end

--+ spreadRND

--21
--0.6",0,10
4701,11.0 Dungeon - Old City - Trash - Boss 1 - RP - Sonic Channel Cosmetic 2. Missile - KRY,scale = .8,0,1
4702,11.0 Dungeon - Brewery - Overseer Boss - BOSS - Cinderbrew Bomb - Detonate - Dummy Missile ,"
scale = 0.45",0,0
4706,Falls Straight Down - 100y,"local magnitude = 175

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
",0,1
4711,11.0 Dungeon - Brewery - Overseer Boss - BOSS - Cinderbrew Bomb - ARB,"local angle = 0
local maxMagnitude = startDistance * .3
local spinRate = 180

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

",0,0
4714,Falls Straight Down - Mag 50,"local magnitude = 50

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
",0,1
4716,11.0 Dungeon - City of Threads - Boss 4 (Evolutionary) - Trial and Error,"local spread = 0.75

local startAngle = 360 * missileIndex / missileCount;
local degreesPerSec = 720

transAngle = startAngle + (time * degreesPerSec)
transMag = spread;

local spinRate = 720
modelRoll = time * spinRate
",0,2
4717,11.0 Delves - Companion Equipment - Brann Bronzebeard - Idol - Taunt Dummy - Model Pitch 90 Roll 90 Yaw -270 - ZGS,"modelPitch = 90
modelRoll = 90
modelYaw = -270",0,1
4718,"Drunken Fountain (1 Missile, Medium Low)","local angle = 0
local maxMagnitude = startDistance * 0.6

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

transFront = -distanceToFirePos * (1 - progress)

local magnitude = transMag * .15

transRight = (sin((rand1 * 1000) + (time * 400)) + cos((rand3 * 1000) + (time * 60))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 300)) + cos((rand1 * 1000) + (time * 100))) * magnitude
transFront = transFront +
	(sin((rand3 * 1000) + (time * 300)) + cos((rand2 * 1000) + (time * 100))) * magnitude

",0,1
4719,11.0 Dungeon - Brewery - Trash - Bee Wrangler - Line Attack - 02a Cosmetic Missile - CHTL,"--out_speedScale = 0.5 + 35 * progress * progress
--transFront=((startDistance-distanceToFirePos)*(math.log(progress)+3)/4)
--transFront=((startDistance-distanceToFirePos)*(math.log(progress)+3)/20)
	local ArcHeight=1
	transFront=((startDistance-distanceToFirePos)*(math.log(progress)+2)/30)
	transUp=sin(progress*180)*ArcHeight

scale=0.5+(3*progress)",0,1
4721,11.0 Delves - Brann Bronzebeard - Companion Equipment - Relic - Dirt Mound Buffs - 2. Visual Missile - Parabola,"local angle = 0
local maxMagnitude = startDistance * .45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4723,11.0 Delves - Kobold - Accessory - Trinket - Everburning Lantern - Ranged DPS - 04 Missiles Motiom,"local function parabola(m) return (4*m*(1-progress)*progress) end

local overallMagnitudeOfRandomTranslations = 4
overallMagnitudeOfRandomTranslations = parabola(overallMagnitudeOfRandomTranslations)

local angleMax = 360 -- the angle functions seem to take degrees, not radians
local minSpeedScalar = 1
local maxSpeedScalar = 1.5

transRight = (sin((rand1 * angleMax) + (time * 10)) + cos((rand2 * angleMax)) + (time * 2)) * overallMagnitudeOfRandomTranslations
transUp = (sin((rand2 * angleMax/2) + (time * 7)) + cos((rand1 * angleMax/2)) + (time * 3)) * overallMagnitudeOfRandomTranslations

--transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * overallMagnitudeOfRandomTranslations
--transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * overallMagnitudeOfRandomTranslations

-- purely a visual missle, so there aren't issues with using this
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)
",0,1
4724,11.0 Z3 - Complex Repeatable - Astral Glimmer,"transUp = sin(180*progress)*5
",0,1
4725,Meteor Strike (8 Yards) Falls Straight Down + Roll (Fast),"local magnitude = 8
local spinRate = 500

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelPitch = (progress+rand1)*spinRate",0,1
4726,Evoker - Well of Flame,"local frequency = startDistance/8
local spread = startDistance/2
local weaveFrequency = 3
local heightMult = .05

local snakeProg = math.pow(progress,0.75)

transRight = sin((snakeProg*180*frequency+120*(missileIndex+rand1/3)))*spread*math.pow(sin(snakeProg*180),.5)*math.pow(snakeProg,1.3)
transUp = cos((snakeProg*180*weaveFrequency*frequency+120*(missileIndex+rand1/3)))*spread*math.pow(sin(snakeProg*180),.5)*math.pow(snakeProg,1.3)*heightMult

transFront = (1-progress) --accounts for weapon scale distances
 
--transRight = sin(progress*180*2)*math.pow(progress,1.5)*10 ",0,3
4727,Monk - Conduit of the Celestials - Flight of the Red Crane,"local waveHeight = .1
local wavesPerSec = 1 + (rand1 * 3)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 4",0,1
4728,Meteor Strike (20-40 Yards) Left Side Diagonal Down,"local magnitude = 20

transRight = magnitude/2 * (1.0 - progress)
transUp = magnitude * (1.0 - progress)
transFront = distanceToImpactPos",0,1
4729,Meteor Strike (20-40 Yards) Right Side Diagonal Down,"local magnitude = 20

transRight = -magnitude/2 * (1.0 - progress)
transUp = magnitude * (1.0 - progress)
transFront = distanceToImpactPos",0,1
4731,"Snake (3 Missiles, half amp, rand wave, half freq)","local waveHeight = 0.2 + (rand2 * 2)
local wavesPerSec = 1.0 + (rand2 * missileIndex * 0.2)

transRight = waveHeight * sin(time * wavesPerSec * 360) * ( 1 - progress ) * 2",0,3
4732,Matt V Test,"local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end

local startAngle = rand1 * 360
local degreesPerSec = 0 -- how fast the missiles spiral
local maxMagnitude = 6 -- how far out the missiles spread
local maxKickBack = 0 -- how much the missiles ""kick back"" before moving forward
local maxHeight = 0 -- Height of the missile's ""arc"" of motion
local radius = 3

transMag = parabola(radius)
transFront = parabola(1,-1 * maxKickBack)
transUp = parabola(maxHeight)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,6
4733,11.0 Dungeon - City of Threads - RP - Boss 3 - Orb Absorb Missile,"local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end

local startAngle = rand1 * 360
local degreesPerSec = 0 -- how fast the missiles spiral
local maxMagnitude = 6 -- how far out the missiles spread
local maxKickBack = 0 -- how much the missiles ""kick back"" before moving forward
local maxHeight = 0 -- Height of the missile's ""arc"" of motion
local radius = 3

transMag = parabola(radius)
transFront = parabola(1,-1 * maxKickBack)
transUp = parabola(maxHeight)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,6
4738,Evoker - Engulf Heal,"

-- Start fast, end slower
out_speedScale = 0.5 + (1.0 * (1.0 - progress) * (1.0 - progress))

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1.4 * (.8 + (.4 * rand2))

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end",0,1
4739,Potion Throw,"local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = 90
modelRoll = time * spinRate
",0,1
4741,11.0 Dungeon - Airship - Cultist - Collapsing Darkness Precast Missile,"local function parabola(m,a,b) return (4*m*(a or 1*(1-progress))*(b or 1*progress)) end
local startAngle = 0
local degreesPerSec = 180
local maxUp = 5
local minMagnitude = 2
local maxMagnitude = 5

local direction = 1
if rand3 > 0.5 then
	direction = -1
end

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec * direction)
transMag = (1 - progress)
transMag = ((1 - progress) * (1 - progress) * 2) - 1
transMag = (1 - (transMag * transMag))

transMag = transMag * (minMagnitude + parabola(maxMagnitude - minMagnitude))

local factor = 0.75 + (rand1 * 3)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

transUp = parabola((-1 * maxUp) + (rand2 * (maxUp * 2))) * (1 - progress)

scale = 0.5 + parabola(0.5)",0,3
4742,JZB Test,transUp=0,0,0
4743,Item - 11.0 Raid - Trinket - Sik'ran's Shadow Arsenal - Bow Cone,"local maxSpread = 6
transAngle = 45 * math.pow(-1, missileIndex)

transMag = progress * rand2 * maxSpread
transFront = (progress * startDistance) - distanceToFirePos
",0,2
4744,11.0 Delves - Z1 - Nerubian - General Boss - Burning Cart - 08 Fire Missile - KLH,"local waveHeight = 1.5 * (startDistance / 30)
local wavesPerSec = 2 * (.8 + (.4 * rand2))

if rand2>0.5 then wavesPerSec = -1*wavesPerSec end

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
--transUp = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 4

faceImpactPos = 0

--transUp = progress^6*(sin(progress * 180) * 25)

scale = 0.5+ (progress*2)",0,1
4745,"Soul Vortex (2 Missiles, Tight Kickback, Mag, Parabola Height)","local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end

local startAngle = rand1 * 360
local degreesPerSec = 360
local maxMagnitude = 3
local maxKickBack = 3
local maxHeight = 3
local radius = 1

transMag = parabola(radius)
transFront = parabola(1,-1 * maxKickBack)
transUp = parabola(maxHeight)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,2
4746,Missile - 2s Delay,speedScalar = .5*(progress+0.2)+1,0,0
4747,Missile - 3s Delay,speedScalar = .5*(progress+0.3)+1,0,0
4748,Missile - 4s Delay,speedScalar = .5*(progress+0.4)+1,0,0
4749,Missile - 5s Delay,speedScalar = .5*(progress+0.5)+1,0,0
4750,Simple Rapid Missiles,"local angle = 0
local maxMagnitude = startDistance * .50
local spread = 5

speedScalar = 1 + (missileIndex * 2)",0,20
4751,Swoop In,"local angle = 0
local maxMagnitude = distanceToImpactPos * .3

transAngle = angle
transMag = ((1 - progress^2) * maxMagnitude) - progress",0,1
4753,"Drunken Missiles (1 Missile, Low Parabolic)","
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = 0.05 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4754,Mage - Frost Splinter,"-- Start fast, end slower
-- out_speedScale = 0.125 + (1.0 * (1.0 + progress) * (1.0 + progress))
speedScalar = 0.3 + 5 * progress * progress

-- Add some wibblewobble, courtesy of Incinerate.
local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1.4 * (.2 + (.4 * rand2))

transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 2
if rand2 > 0.5 then
	transRight = -1 * transRight
end",0,1
4755,10.2.7 Timewalking Season - Pandaria - Artifact - Stat Upgrade - Visual (OJF),"-- parabola with spin
local angle = 0 ;
local maxMagnitude = startDistance * .2 ;

local paraAngle = angle ;
local paraMag = (progress * 2) - 1 ;
paraMag = (1 - (paraMag * paraMag)) * maxMagnitude ;

-- spinning wave translate
local waves = 1.5 ;
local maxMagnitude = 2 ;

local spinMag = sin(progress * waves * 360) * maxMagnitude ;

-- interpolate from parabola with spin to spinning wave based on progress
local paraAngleValue = paraAngle * ( 1 - progress ) ;

local paraMagValue = paraMag ;
local spinMagValue = spinMag * progress * time ;

local interpolatedMag = paraMagValue + spinMagValue ;

transAngle = paraAngleValue ;
transMag = interpolatedMag ;

-- generic roll independent of either motion calculation
modelRoll = progress * 1000 ;

local scaleFloor = 0.2 ;
local newScale = 1 - (progress / 1.3) ;

if newScale <= scaleFloor then
	newScale = scaleFloor ;
end

scale = newScale ;

local minSpeed = 0.15 ;
local newSpeed = (1 + (progress * time * 1.75) ) * (distanceToImpactPos / 10) ; 

if newSpeed <= minSpeed then 
	newSpeed = minSpeed ;
end 

out_speedScale = newSpeed ;",0,1
4756,11.0 Theater - Comedy Play - Overseer Boss - Heart Breaker - 02. Missile - ARB,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 720

scale = 2 

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,0
4757,"Falls Straight Down (Actually does!), Pitch=90","local magnitude = 40

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos

modelPitch = 90",0,1
4758,"Drunken Missiles (1 Missile, Medium Parabolic)","
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = 0.1 -- higher = more parabolic
local maxMagnitude = startDistance * .05
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4759,"Drunken Missiles (1 Missile, Medium Parabolic, Less Drunk)","
local magnitudeReduction = .25
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
magnitude = magnitude * magnitudeReduction

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = 0.1 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360 * magnitudeReduction

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4760,"Drunken Missiles (1 Missile, Low Parabolic, Less Drunk)","
local magnitudeReduction = .25
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
magnitude = magnitude * magnitudeReduction

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = 0.05 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360 * magnitudeReduction

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4761,11.0 Raid - Nerubian - Boss - Queen - P2 - Ascended Void Speaker - Shared Health (Lower Missile) - SRC,"
local magnitudeReduction = .25
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
magnitude = magnitude * magnitudeReduction

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = 0 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360 * magnitudeReduction

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4762,Swoop Out - High (2x),"local angle = 0
local maxMagnitude = distanceToFirePos * 2

transAngle = angle
transMag = ((progress^2) * maxMagnitude) + progress",0,1
4763,Priest - Void Blast,"local waveHeight = 1.8 * (startDistance / 30)
local wavesPerSec = 1.4 * (.8 + (.4 * rand2))


transRight = ((waveHeight * sin((time + rand1) * wavesPerSec * 360)) * sin(progress * 180)) * math.pow(1-progress,0.4) * 1
",0,3
4764,"Parabola (High, Pitch Spin Slow) (0.65 Mag) - ZGS","local angle = 0
local maxMagnitude = startDistance * .65
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

",0,1
4765,"Parabola (High, Pitch Spin Slow) (0.8 Mag) - ZGS","local angle = 0
local maxMagnitude = startDistance * .8
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

",0,1
4766,Paladin - Divine Arbiter Motion,"--transUp = progress*2-1--sin(progress*180)*3*(1-progress)
--transUp = (1 - (transUp * transUp))*(rand2*2+1)

--transRight = rand1*sin(progress*180)*3*(1-progress)

transAngle = (math.sqrt(rand1)*100)
if rand2>0.5 then transAngle = transAngle*-1 end
transMag = sin(progress*180)*(1-progress)*(6*startDistance/24+1)",0,0
4767,Fall Straight Down (Max Height: 70 - No Model Squish),"local maxHeight = 70
local progressSq = progress * progress
local invProgress = (1 - progress)
local invProgressSq = (1 - progressSq)

transFront = distanceToImpactPos
transRight = 0
transUp = invProgress * maxHeight
faceImpactPos = 1",0,1
4768,11.0 Raid - Nerubian - Boss - Queen - P2 - Ascended Void Speaker - Shared Health (Upper Missile) - SRC,"
local magnitudeReduction = .25
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)
magnitude = magnitude * magnitudeReduction

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = 0.075 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360 * magnitudeReduction

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4769,"Fast Out - W/ Noise, Parabola (Low)","local factor = 2
local maxHeight = startDistance * 0.25
local direction = 1
local noiseAmt = startDistance * 0.25

function noise (time)
	return math.sin(time)*math.sin(time*3)*math.sin(time*.54)*math.sin(time*7)*math.sin(time*12)*math.sin(time*.5)
end
local progressMult = math.sin(math.pi * progress)

local t1 = (time+(rand1*300))
local noise1 = noise(t1)

local t2 = (time+(rand2*300))
local noise2 = noise(t2)

local t3 = (time+(rand3*300))
local noise3 = noise(t3)


transRight = transRight + (progressMult*noise1*noiseAmt)
transUp    = transUp + (progressMult*noise2*(noiseAmt*.25)) + ((1-progress)*progress*4*maxHeight)
transFront = math.pow(progress,factor) * distanceToFirePos + ((progressMult*noise3) *noiseAmt)
transFront = transFront - distanceToFirePos",0,1
4770,"Parabola (Fixed Height - 6-8 yards, Fast Out)","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 6
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

local factor = 3
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4771,Meteor Strike (80 Yards) Right Side Diagonal Down,"local magnitude = 80

transRight = magnitude/-2 * (1-progress)
transUp = magnitude * ( .8 - progress )
transFront = distanceToImpactPos",0,1
4772,"Parabola (-45 Pitch, .25 Arc) Scale Large Over Time - FX - EZ","local maxMagnitude = startDistance * .25 --adjust this for a higher Arc
local scale = 0.5


modelPitch = -45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 0.5 + (progress/2)
if scale > 1 then
	scale = 1
end
",0,1
4773,Long Spiral In (Alot Less Spirals),"

local progressMult = sin(progress*180)*(1-progress)*2

local progressSpeed = math.pow(progress,3) 


transUp = (10*math.pow((1-sin(progress*90)),0.3+rand1/3) + 0.25) * progressMult
transFront = (-cos(progressSpeed *180)+1)*startDistance*math.pow(1-progressSpeed ,.7)*.5
transRight = sin(progressSpeed *180)*startDistance*math.pow(1-progressSpeed ,.7)*.5
",0,1
4774,"Parabola (Fast in/out, MidLow)","local function HorizontalSCurve(progress, exponent)
	local returnValue = 0
    if (exponent >= 2 or progress >= .5) then
       returnValue = math.pow((2 * progress - 1), exponent)
   	    returnValue = (returnValue + 1)/2
        if (exponent%2 == 0) then
            if progress < .5 then
               returnValue = 1 - returnValue 
		    end
        end
    elseif (exponent < 2) then
        if progress < .5 then
          returnValue = math.pow((-2 * progress + 1), exponent)
          returnValue = 1 - ((returnValue + 1)/2)
        end
	end

	return returnValue
end

local parabolicFactor = 1*distanceToFirePos
frontP = HorizontalSCurve(progress,1.2)
upP    = HorizontalSCurve(progress,1.5)
transFront = (frontP * distanceToFirePos) - distanceToFirePos
transUp    = (-1 *(parabolicFactor * (upP * upP))) + (upP * parabolicFactor)",0,1
4775,"Parabola (-45 Pitch, .25 Arc) Scale Small Over Time - FX - EZ","local maxMagnitude = startDistance * .25 --adjust this for a higher Arc
local scale = 0.5

launchDelay = 1.0
--speedScalar = .5*(progress+0.1)+1

modelPitch = -45

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 1 - (progress/2)
if scale < 0.5 then
	scale = 0.5
end
",0,1
4776,11.0 Dungeon - Monastery - Trash - Multi-Shot - JRN,"local maxSpread = 6
if missileIndex ~= 1 then
	transAngle = 90 * math.pow(-1, missileIndex)
	transMag = progress * rand2 * maxSpread
end
progress = math.pow(progress, 1.25)

transFront = (progress * startDistance) - distanceToFirePos",0,0
4777,11.0 Raid - Nerubian - Boss - Hulk - Jugernaut Charge,"local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 3
local maxKickBack = 5
local maxMagnitude = startDistance * .08
scale = 1 + (1.3 * progress)


transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transFront = transMag * -maxKickBack
transMag = transMag * maxMagnitude",0,4
4778,11.0 Dungeon - Airship - Zone - RP Flying v2 Lamplighter Missile,"local function parabola(m) return progress*(1-progress)*4*m end
local factor = 3
local maxWidth = 5
local maxHeight = 7.5

local direction = 1
local height = (startDistance / (maxHeight*(1/2))) + (rand3 * (maxHeight*(1/2)))	--likely did the math wrong, but it looks good
local width = (maxWidth*(1/3)) + (maxWidth*(2/3)) * rand2

if rand1>0.5 then
	direction = -1
end

transUp = parabola(height)
transRight = parabola(direction * width)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos",0,1
4779,Parabola (High) (Variance),"local angle = -5+(50*rand1) 
local maxMagnitude = (startDistance * (.15+(rand2*.15)))

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4780,11.0 Raid - Nerubian - Flying - Infested Spawn Missile,"local function parabola(m) return (4*m*(1-progress)*progress) end

local height = 10
local variance = 5
local rollVariance = 30
height = height + (rand1 * variance)

transAngle = (rollVariance * rand2) - (rollVariance / 2)
transMag = parabola(height)
scale = 1 + parabola(0.25)",0,1
4781,11.0 Dungeon - Airship - Flying - Poison Wave Missile,"local function parabola(m,a,b) return (4*m*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local height = 10
local variance = 2
local degreesPerSec = 180
local spiralMaxMagnitude = 5
local startAngle = 0

height = height + (rand1 * variance)
transUp = parabola(height)

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)
transMag = parabola(spiralMaxMagnitude)

--[[
local startAngle = 0
local degreesPerSec = 180
local maxMagnitude = 2.5
local maxKickBack = 0

--progress = 1 - progress

transMag = progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))
transMag = transMag * maxMagnitude
transFront = transMag * -maxKickBack

--transUp = distanceToImpactPos - distanceToFirePos
--]]",0,3
4782,"Parabola (Fixed Height - 10-12 yards, Roll Spin) - MSN","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 10
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)
modelRoll = progress * 3000",0,1
4783,11.0 Raid - Nerubian - Flying - Web Breath Precast Missile,"--gamma curve function
local function parabola(m,a,b) return (4*m*((1-progress)*(a or 1))*(progress * (b or 1))) end
--rotation function
local function rotate(t,d) return (math.cos(t)+((d or 1)*math.sin(t))) end

local radius = parabola(3)
local numCycles = parabola(10)
local maxKickback = -15
local theta = time * numCycles

if missileIndex==0 then
	transRight	= radius * rotate(theta,-1)
	transUp		= radius * rotate(theta)
elseif missileIndex==1 then
	transFront	= radius * rotate(theta)
	transUp		= radius * rotate(theta,-1)
elseif missileIndex==2 then
	transRight	= radius * rotate(theta)
	transFront	= radius * rotate(theta,-1)
end

transUp = transUp + parabola(3,1,-1.5)",0,3
4784,11.0 Raid - Nerubian - Flying - Web Breath Precast Hand Missile,"local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local factor = 3
local radius = 3
local radiusVariance = 3

local direction = 1
if rand1 > 0.5 then
	direction = -1
end

transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

local startAngle = (360 * (missileIndex / missileCount)) + (360 * rand2)
local degreesPerSec = 360 * 2 * direction

transAngle = startAngle + (distanceToFirePos/20 * degreesPerSec)
transMag = parabola(radius + (rand3 * radiusVariance))

scale = 0.5 + (progress / 2)",0,1
4785,11.0 Raid - Nerubian - Flying - Web Breath Missile,"local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local direction = 1
if rand1 > 0.5 then
	direction = -1
end

local factor = 3
local radius = 4
local radiusVariance = 3

transUp = parabola(8)

if missileIndex > 0 then

	local myIndex, myCount = missileIndex - 1, missileCount - 1

	local startAngle = (360 * (myIndex / myCount)) + (360 * rand2)
	local degreesPerSec = 1 * (360 * direction)

	transAngle = startAngle + (time * degreesPerSec)
	transMag = 0.5 + parabola(radius + (rand3 * radiusVariance))
else
	scale = 0.75 + (progress / 2) + parabola(0.75)
end


scale = 0.5 + (progress / 2) + parabola(0.5)

--faceImpactPos = 1",0,4
4786,Itano Circus/Macross Missiles (4missiles)(Smaller Arc)(Less Crazy),"local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end

local function angleToXY (angle)
	return math.cos(angle), math.sin(angle)
end

local minAngle = math.rad(50)
local maxAngle = math.rad(180)
local maxArc = 16

local p = math.pow(progress,12)

transFront = (p * distanceToFirePos) - distanceToFirePos

currentAngle = minAngle + ((missileIndex * (maxAngle - minAngle)) / missileCount)
local x,y = angleToXY(currentAngle)
local arcProg = math.pow(p,.2)
arcProg = math.sin(arcProg * math.pi)
transRight = x * maxArc * arcProg
transUp = y * maxArc * arcProg

local progressMult = math.pow( sinapprox(progress*180) * (1-progress), .5)

function noise (time)
	return sinapprox(time)*sinapprox(time*3)*sinapprox(time*.54)*sinapprox(time*7)*sinapprox(time*12)*sinapprox(time*.5)
end
local t1 = (time+rand1*400)*50
local noise1 = noise(t1)

local t2 = (time+rand2*400)*50
local noise2 = noise(t2)

local t3 = (time+rand3*400)*50
local noise3 = noise(t3)

local factor = 2
transRight = transRight + progressMult*noise1*4*factor 
transUp = transUp + progressMult*noise2*1*factor
transFront = transFront + progressMult*noise3*4*factor 

scale = 3 * (arcProg)",0,4
4787,11.0 Raid - Nerubian - Flying - Acid Pool Missile,"local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local direction = 1
if rand1 > 0.5 then
	direction = -1
end

local factor = 3
local radius = 4
local radiusVariance = 3

transUp = parabola(8)

if missileIndex > 0 then

	local myIndex, myCount = missileIndex - 1, missileCount - 1

	local startAngle = (360 * (myIndex / myCount)) + (360 * rand2)
	local degreesPerSec = 1 * (180 * direction)

	transAngle = startAngle + (time * degreesPerSec) + (progress * 360)
	transMag = 0.5 + parabola(parabola(radius + (rand3 * radiusVariance)))
else
	scale = 1.25 + (progress / 2) + parabola(1.5)
end


scale = 0.5 + (progress / 2) + parabola(0.5)

--faceImpactPos = 1",0,6
4788,11.0 Endgame - Radiant Chords - Harmony Restoration (Regular Pickup) 2a. Cosmetic Missile,"local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end

local startAngle = rand1 * 360
local degreesPerSec = 0 -- how fast the missiles spiral
local maxMagnitude = 3 -- how far out the missiles spread
local maxKickBack = 0 -- how much the missiles ""kick back"" before moving forward
local maxHeight = 3 -- Height of the missile's ""arc"" of motion
local radius = 3

transMag = parabola(radius)
transFront = parabola(1,-1 * maxKickBack)
transUp = parabola(maxHeight)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,3
4789,11.0 Endgame - Radiant Chords - Harmony Restoration (Big Pickup) 2a. Cosmetic Missile,"local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end

local startAngle = rand1 * 360
local degreesPerSec = 0 -- how fast the missiles spiral
local maxMagnitude = 6 -- how far out the missiles spread
local maxKickBack = 0 -- how much the missiles ""kick back"" before moving forward
local maxHeight = 4 -- Height of the missile's ""arc"" of motion
local radius = 3

transMag = parabola(radius)
transFront = parabola(1,-1 * maxKickBack)
transUp = parabola(maxHeight)
transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec)",0,6
4790,Potion Throw v2,"local angle = 0
local maxMagnitude = startDistance * .5
local spinRate = 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = 90
modelRoll = time * spinRate
",0,1
4791,11.0 - Drunken Missile (Slow) - FX - CML,"--[[local r1 = rand1*2-1
local r2 = rand2*2-1
 
local transFront1 = (sin((progress+rand1)*720)) * (progress * (2*rand2) + 13) - distanceToFirePos 
local transRight1 = -(cos((progress+rand1)*720)) * (progress * (2*rand1) + 13)
transFront = transFront1
transRight = transRight1
transUp = math.sin(progress*3.14) * 8 * r2 + (rand2*2-1)*3
transFront = (rand3*20-10)*(1-progress)*progress
progress = progress*progress 
--]]
local r1 = rand1*2-1
local r2 = rand2*2-1

if progress < 0.94 then
	progress = progress*progress
 
	transRight = math.sin(progress*3.14) * 2 * r1 + (rand3-0.5)*2
	transUp = math.sin(progress*3.14) * 2 *  (rand2-0.4)
	transFront = (rand3*15-10)*(1-progress)*progress
end

if progress > 0.94 then
progress = 1.0
	
end",0,0
4792,Warlock - Mortal Coil,"
local waveHeight = 0.6
local wavesPerSec = 2



transRight = waveHeight * (1-progress) * sin(time * wavesPerSec * 360)



--speedAbs = rand1*10-5
local randomSpeedAmount = 0.25
out_speedScale = (1 - randomSpeedAmount) + (0.5 * randomSpeedAmount)",0,1
4793,Falls Straight Down - Mag 20,"local magnitude = 20

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
",0,1
4794,Falls Straight Down - Mag 30,"local magnitude = 30

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
",0,1
4795,Evoker - Engulf (Left),"--[[local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude--]]

--scale = 0.2 + (progress*1.2)


local angle = 90

local maxMagnitude = startDistance * .10

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4796,Parabola (Fixed Height - 7-9 yards) - AD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 7
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
4797,11.0 Raid - Nerubian - Boss - Queen - P2 - Ascended Void Speaker - Radiating Gloom (1.02 Missile Visual) - SRC,"
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = .18 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4798,11.0 Raid - Nerubian - Boss - Queen - P2 - Ascended Void Speaker - Radiating Gloom (1.02 Visual {LFR}) - SRC,"
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = .1 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4800,11.0 Raid - Nerubian - Flying - Web Breath Mythic Beam Missile,"local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local direction = 1
if rand1 > 0.5 then
	direction = -1
end

local factor = 3
local radius = 4
local radiusVariance = 3


if missileIndex > 0 then

	local myIndex, myCount = missileIndex - 1, missileCount - 1

	local startAngle = (360 * (myIndex / myCount)) + (360 * rand2)
	local degreesPerSec = 1 * (360 * direction)

	transAngle = startAngle + (time * degreesPerSec)
	transMag = 0.5 + parabola(radius + (rand3 * radiusVariance))
else
	scale = 0.75 + (progress / 2) + parabola(0.75)
end


scale = 0.5 + (progress / 2) + parabola(0.5)

--faceImpactPos = 1",0,3
4801,11.0 Raid - Nerubian - Boss - Queen - P2 - Devoted Worshipper - Death Rift Missile) - SRC,"local magnitude = 14

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
4802,11.0 Raid - Nerubian - Boss - Queen - P2 - General - Portal Indicator Missiles (Is Spool) - SRC,"
local magnitude = (progress * 1.9) - 1
magnitude = 1 - (magnitude * magnitude * magnitude * magnitude)

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude

local angle = 0
local parabolicScalar = 0.06 -- higher = more parabolic
local maxMagnitude = startDistance * parabolicScalar
local spinRate = 360

modelPitch = time * spinRate
transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4803,Grow (1 -> 2.5) and fade,"scale = 1 + (1.5 * progress)
colorA = 1 + (-1.0 * progress)",0,1
4805,11.1 Raid - Undermine - Boss - Junkyard - Incinerator,"local angle = 0
local maxMagnitude = startDistance * 1.25
local spinRate = 720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

--modelPitch = time * spinRate
",0,1
4806,Parabola (Fixed Height - 45 yards) - SRC,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 45
local variance = 0
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
4807,Hunter - Hero Talent - Dark Ranger - Proc Shadow Arrows - Damage,"faceImpactPos = 1
local phaseTwoStart = .6
local p = progress - phaseTwoStart

if progress <= phaseTwoStart then
    transFront = -distanceToFirePos-sin(progress/phaseTwoStart * (progress*200)) 
    --transUp = math.pow(progress,.2)
    transUp = rand2*1.5
    modelPitch = (progress*phaseTwoStart)*20
    transRight = -.10 + (rand1*1.5)
    
else
    transFront = -distanceToFirePos
    --transUp = math.pow(progress,.2)
    transUp = rand2*1.5
    
    p = p/(1 - phaseTwoStart)
    transFront = ((1 - p) * transFront)
    transUp = ((1 - p) * transUp)
    modelPitch = 0
    faceImpactPos = 1
	transRight = -.10 + (rand1*1.5)
    
end",0,1
4808,11.1 Raid - Undermine - Boss - Biker Gang - Burning Shrapnel - ARB,"local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = 960
modelYaw = -90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelRoll = -time * spinRate",0,0
4809,Meteor Strike (1 Yards) Falls Straight Down + Rotate,"local magnitude = 1

transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos

modelRoll = (progress)*720",0,1
4810,11.1.5 Nightfall - Toy - Juggle Flame - Holy Fire Missile (OJF),"--transUp = sin(progress*180) * startDistance

local heightScalar = 3.5 ;

local adjustedProgress = (progress * 180) - 7 ;

transUp = (sin(adjustedProgress) * heightScalar) ;

--transUp = heightScalar ;

-- transUp = time * heightScalar ;

-- transMag = time * heightScalar ;",0,0
4811,11.1 Raid - Undermine - Boss - Arena - Gorilla - Tank Hit - 01b Cast Visual - JZM,"local maxWidth = 10
local direction = 1
local angle = 0
local maxMagnitude = startDistance * .50

if rand2>0.5 then
	direction = -1
end

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude
transRight = direction * math.min(startDistance/maxWidth,maxWidth) * rand2",0,1
4812,11.1 Raid - Undermine - Boss - Arena - Gorilla - Missile Ult - 02b Channel Visual - JZM,"local height = (rand1*30)+1.5
transUp = height - height*progress
scale = .1+(7*progress*rand2)",0,1
4813,Parabola (Fixed Height - 15 yards),"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 15

transUp = parabola(1,1,height)",0,1
4814,11.1 Raid - Undermine - Gallywix - Test Missile 01,"--gamma curve function
local function parabola(m) return (4*m*(1-progress)*progress) end
--rotation function
local function rotate(t,d) return (math.cos(t)+((d or 1)*math.sin(t))) end



--[[
colorR = 1.0001 - (progress / 2)
colorG = 1.0001 - (progress / 2)
colorB = 1.0001 - (progress / 2)
--]]

local progressCubed = math.pow(progress,3)
local maxScale = 2.5
local radius = parabola(4)
local numCycles = 1--parabola(1)
local theta = time * numCycles

scale = scale + parabola(maxScale * progress)
colorA = 1 - (progressCubed)

--transRight	= radius * rotate(theta,-1)
transUp		= radius * rotate(theta)
	
transUp = transUp + parabola(5)",0,1
4815,Slide Along Ground - JZM,"speedScalar = 0.1 + (35 * progress) * progress
transUp  = (1.4 - 2 * rand1) * (1 - progress)
",0,1
4816,11.1 Raid - Undermine - Gallywix - BBBB Late Bomb Missile,"local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local height = 7.5
local variance = 10
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

modelPitch = time * 360
modelScale = 0.25 + parabola(0.75)

local direction = 1
if rand1 > 0.5 then
	direction = -1
end

local radius = 1.5
local radiusVariance = 0.2

local startAngle = 0
if missileCount > 1 then
	local myIndex, myCount = missileIndex - 1, missileCount - 1
	startAngle = (360 * (myIndex / myCount)) + (360 * rand2)
end
local degreesPerSec = (direction * 360 * 0.5)

transAngle = startAngle + (time * degreesPerSec)
transMag = 0.5 + parabola(radius + (rand3 * radiusVariance))
",0,1
4817,"Parabola (Fixed Height - 20-25 yards, Pitch Spin)","local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local height = 20
local variance = 5
height = height + (rand1 * variance)
local degreesPerSec = 45

transUp = parabola(height)
modelPitch = time * degreesPerSec",0,1
4818,"Parabola (Yaw Spin, Slow)","local angle = 0
local maxMagnitude = startDistance * 0.25
local spinRateY = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRateY",0,1
4819,"Parabola (Fixed Height - 5-10 yards, Pitch Spin)","local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local height = 5
local variance = 5
height = height + (rand1 * variance)
local degreesPerSec = 45

transUp = parabola(height)
modelPitch = time * degreesPerSec",0,1
4820,Shaman Windfury Motion,"--transUp = progress*2-1--sin(progress*180)*3*(1-progress)
--transUp = (1 - (transUp * transUp))*(rand2*2+1)

--transRight = rand1*sin(progress*180)*3*(1-progress)

transAngle = (math.sqrt(rand1)*90)
if rand2>0.5 then transAngle = transAngle*-1 end
transMag = sin(progress*180)*(1-progress)*(6*startDistance/12+1)",0,0
4821,Shaman - Enhancement - Windfury Missile (Left Low),"local angle = 65
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4822,Shaman - Enhancement - Windfury - Low,"local angle1 = 65
local angle2 = -65
local maxMagnitude = startDistance * .35

transAngle = angle1
if ( rand1 > 0.5 ) then
	transAngle = angle2
end
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4823,Half Death's Caress,"local wrap = totalDistance*.5+2
local flip = (missileIndex*2)-1

transFront = sin(270*progress)*wrap+progress*wrap

transRight = -(sin(progress*360))*math.pow(startDistance,.45)*flip

transUp = sin(time*720+(rand1*10000))*sin(progress*180)*.6",0,1
4824,FX Wavey Missile - Caitlin,"
local waveHeight = 1.2
local wavesPerSec = 1.3

--speedAbs = .1+500*progress*progress*progress*progress*progress*progress
transFront = progress



if (missileIndex == 0) then
transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end




--scale = 1+2*progress

",0,1
4825,FX Wavey Multi Missiles - Caitlin,"
local waveHeight = 1.2
local wavesPerSec = 1.3

--speedAbs = .1+500*progress*progress*progress*progress*progress*progress
transFront = progress



if (missileIndex == 0) then
transRight = waveHeight * (sin(progress*180)) * sin(time * wavesPerSec*0.7 * 360 * ((rand1+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end

if (missileIndex == 1) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end

if (missileIndex == 2) then
transRight = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec * 360 * ((rand3+0.5)/2)) 
transUp = -waveHeight * (sin(progress*180)) * sin(time *wavesPerSec*1.2 * 360 * ((rand2+0.5)/2))
end




--scale = 1+2*progress

",0,3
4827,11.1 Raid - Undermine - Trash - Junkyard - Goblin Sapper Bot - Bombs Missile - TJA,"local angle = 0
local maxMagnitude = startDistance * .5 * (1+rand1)
local spinRate = 720 * rand2 - 360

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate

local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 20
local variance = 5
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,1
4828,"Parabola (Yaw Spin, Slow, High)","local angle = 0
local maxMagnitude = 5 + startDistance * 0.25
local spinRateY = 90

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelYaw = time * spinRateY",0,1
4829,11.1 Creature Template - Kajamite Elemental - T1 - Fighter - Kaja'mite Bolt - 01. Effect - ARB,"local angle = 0
local maxMagnitude = startDistance * .15
local spinRate = 960

scale = 0.1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate
",0,0
4830,Test Missile - CGT,"local wrap = totalDistance*.5+2
local flip = (missileIndex*2)-1
speedScalar = (.5*(progress+0.1)+1)*missileIndex

transFront = sin(270*progress)*wrap+progress*wrap

transRight = -(sin(progress*360))*math.pow(startDistance,.45)*flip

transUp = sin(time*720+(rand1*10000))*sin(progress*180)*.6",0,1
4833,11.0.7 Void Zone - Player Spell - Offensive - Celestial Barrage [1] 4. Script Effect,"
local function sinapprox(v)
     local t1 = 1.1*v/360
     local t2 = (t1*0.5 - math.floor(t1*0.5))*2-1
     return -4*(t2 - t2 * math.abs(t2))
     --return sin(v)
end


local progressMult = math.min(0.6,sin(progress*180))*(1-progress)

local t1 = (time+rand1*4)*50
local noise1 = sinapprox(t1)*sinapprox(t1*3)*sinapprox(t1*.54)*sinapprox(t1*7)*sinapprox(t1*12)*sinapprox(t1*.5)

local t2 = (time+rand2*4)*50
local noise2 = sinapprox(t2)*sinapprox(t2*3)*sinapprox(t2*.54)*sinapprox(t2*7)*sinapprox(t2*10)*sinapprox(t2*.5)

local t3 = (time+rand3*4)*50
local noise3 = sinapprox(t3)*sinapprox(t3*3)*sinapprox(t3*.54)*sinapprox(t3*7)*sinapprox(t3*10)*sinapprox(t3*.5)

local factor = .2
transRight = progressMult*noise1*14*factor
transUp = progressMult*noise2*4*factor + (progress*(1-progress))*10
transFront = progressMult*noise3*14*factor 

",0,0
4834,Meteor Strike (150 Yards) Falls Straight Down + Pitch -90,"local magnitude = 150

modelPitch=-90
transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
4835,11.1 Dungeon - Waterworks - Boss - Bog Beast - Mudslide - AD,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 8
local variance = 4
height = height + (rand1 * variance)

transUp = parabola(1,1,height)",0,0
4836,Meteor Strike (30 Yards) Left Side Diagonal Down,"local magnitude = 30

transRight = magnitude/2 * (1.0 - progress)
transUp = magnitude * (1.0 - progress)
transFront = distanceToImpactPos",0,1
4838,"Falls Straight Down (Actually does!), Pitch=-90","local magnitude = 40

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos

modelPitch = -90",0,1
4839,"Falls Straight Down (Actually does!), Pitch=270","local magnitude = 40

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos

modelPitch = 270",0,1
4840,"Falls Straight Down (Actually does!), Pitch=270, Offset Up 2.5y","local magnitude = 40

transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos

modelPitch = 270
transUp = transUp + 2.5",0,1
4841,11.1 Delves - Season 2 - Curio - Utility 7 [1] - 9. Trigger on Missile Impact,"local angle = 0
local maxMagnitude = startDistance * 2

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

speedScalar = 0.4 + 2 * progress

local progressMult = math.min(0.6,sin(progress*180))*(1-progress)


local t1 = (time+rand1)*90
local noise1 = sin(t1)*sin(t1*3)*sin(t1*.54)*sin(t1*7)*sin(t1*12)*sin(t1*.5)

local t2 = (time+rand2)*90
local noise2 = sin(t2)*sin(t2*3)*sin(t2*.54)*sin(t2*7)*sin(t2*10)*sin(t2*.5)

local t3 = (time+rand3)*90
local noise3 = sin(t3)*sin(t3*3)*sin(t3*.54)*sin(t3*7)*sin(t3*10)*sin(t3*.5)

local factor = 0.62
transRight = progressMult*noise1*14*factor 
transUp = progressMult*noise2*8*factor 
transFront = progressMult*noise3*14*factor ",0,1
4842,"Meteor Strike (2 Yards) Falls Straight Down, Roll 0","local magnitude = 2
modelRoll=0
transUp = magnitude * ( 1 - progress )
transFront = distanceToImpactPos
",0,1
4844,11.1 Delve - Underpin - Megacluster Munitions - JRN,"local spinRate = 1080
local magnitude = 50

modelPitch = time * spinRate
transUp = magnitude * (1 - progress )
transFront = distanceToImpactPos
",0,0
4845,Reverse Engineered Goblin Death Bomb,"local angle = 0
local maxMagnitude = startDistance * .35

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4846,"Parabola (Low, Up and Left OR Right (50%))","
local angle

if math.random(1, 2) == 1 then
	angle = -65
else
	angle = 65
end

local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4848,11.1 Delve - Underpin - Megacluster Minitions - JRN,"local magnitude = 5
local spinRate = 540

transUp = 0.99 * magnitude * ( progress )
modelPitch = time * spinRate",0,0
4849,11.1 Delves - Affix - Explode Charge Throw Missile,"local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local height = 7.5
local variance = 10
height = height + (rand1 * variance)

transUp = parabola(1,1,height)

modelPitch = time * 360
modelScale = 0.25 + parabola(0.75)

local direction = 1
if rand1 > 0.5 then
	direction = -1
end

local radius = 1.5
local radiusVariance = 0.2

local startAngle = 0
if missileCount > 1 then
	local myIndex, myCount = missileIndex - 1, missileCount - 1
	startAngle = (360 * (myIndex / myCount)) + (360 * rand2)
end
local degreesPerSec = (direction * 360 * 0.5)

transAngle = startAngle + (time * degreesPerSec)
transMag = 0.5 + parabola(radius + (rand3 * radiusVariance))
",0,1
4850,"Parabola (High, Back Spin)","local angle = 0
local maxMagnitude = startDistance * .30
local spinRate = -720

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

modelPitch = time * spinRate",0,1
4851,11.1 Raid - Undermine - Boss - Arena - Gorilla - Missile Ult - 04 Targetted Missile - JZM,"local function parabola(m,a,b)
	local a,b = a or 1, b or 1
	return (a * progress) * (b * (1 - progress)) * 4 * m
end


local startAngle = 0
local degreesPerSec = 115
local maxKickBack = 15 - (rand2 * 10)
local maxHeight = 20 - (rand3 *15)
local radius = 5
local maxWidth = 5 + (rand2 * 10) + (rand1 * 15)
local direction = 1

if rand1>0.5 then
	direction = -1
end

transUp = parabola(maxHeight)
transFront = parabola(1,-1 * maxKickBack)
transRight = direction * parabola(maxWidth)
transMag = parabola(radius)
transAngle = ((progress^2/1-progress) * startAngle) + (time * degreesPerSec)",0,1
4852,"Parabola (Fixed Height - 18-20 yards, Pitch Spin)","local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 18
local variance = 2
height = height + (rand1 * variance)
local degreesPerSec = 45

transUp = parabola(1,1,height)
modelPitch = time * degreesPerSec",0,1
4853,"Parabola (Fixed Height - 20-25 yards, Fast Pitch Spin)","local function parabola(m,a,b) return (4*(m or 1)*((1-progress)*(a or 1))*((progress)*(b or 1))) end

local height = 20
local variance = 5
height = height + (rand1 * variance)
local degreesPerSec = 120

transUp = parabola(height)
modelPitch = time * degreesPerSec",0,1
4856,Parabola (1 missile),"local angle = 0
local maxMagnitude = startDistance * .1

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4857,11.1 Delve - Underpin - Parabola very high + fast spin - JRN,"local angle = 0
local maxMagnitude = startDistance * .90
local spinRate = 1440

modelPitch = time * spinRate

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude",0,1
4858,11.1 Raid - Undermine - Boss - Casino - BOSS - Reels - 05 Timer 14yd/19s - KLH,"
local magnitude = 14
	
--transRight=cos(rand1*360)*rand3*2
--transFront=sin(rand1*360)*rand2*2
transUp = magnitude * ( 1 - progress )
transFront=distanceToImpactPos
scale=1

modelYaw = 1
modelPitch = 1
modelRoll = 1

faceImpactPos = 1",0,1
4867,11.1 Raid - Undermine - Gallywix - Giga Coils Machine Target Cosmetic Missile,"local function parabola(m) return (4*m*(1-progress)*progress) end
local startAngle = 0
local degreesPerSec = 180
local maxRadius = 8
local minMagnitude = 5
local maxMagnitude = 15

local direction = 1
if rand3 > 0.5 then
	direction = -1
end

transAngle = startAngle + ((missileIndex / missileCount) * 360) + (time * degreesPerSec * direction)
transMag = 1 - progress
transMag = (transMag * transMag * 2) - 1
transMag = (1 - (transMag * transMag))

transMag = transMag * (minMagnitude + parabola(maxMagnitude - minMagnitude))

local factor = 0.75 + (rand1 * 3)
transFront = math.pow(progress,factor) * distanceToFirePos
transFront = transFront - distanceToFirePos

transUp = parabola(5) + parabola((-1 * maxRadius) + (rand2 * (maxRadius * 2))) * (1 - progress)

scale = 0.75 + parabola(0.5)

local alphaThreshold = 0.95
local minAlpha = 0.25
if progress > alphaThreshold then	--last x% fades slightly
	colorA = math.min(1,minAlpha + (((1 - progress)/alphaThreshold) * (1 - minAlpha)))
end",0,3
4869,11.1 Raid - Undermine - Boss - Refinery - Conveyor Weapon Spawn Visual - Magnet - CHTL,"local angle = 0
local maxMagnitude = startDistance * .15

transAngle = angle
transMag = (progress * 2) - 1
transMag = (1 - (transMag * transMag)) * maxMagnitude

scale = 0.2 + (0.8 * progress)",0,1
4882,11.1 Raid - Undermine - Gallywix - BBBB Mech Shoot Tank Missile (Directed) v2,"local function parabola(a,b,m) return (4*m*((1-progress)*a)*((progress)*b)) end

local height = 5
local variance = 2
height = height + (rand1 * variance)

transUp = parabola(1,1,height)
local spinRate = 30
local initPitch = -60
modelPitch = initPitch + (time * spinRate)",0,1
4889,11.1 Raid - Undermine - Gallywix - Mythic Rockets AOE Missile,"local function parabola(m) return 4*m*(1-progress)*progress end

local height = 13
local variance = 5
height = height + (rand1 * variance)

transUp = parabola(height)

scale = 1 + parabola(parabola(.5))",0,1
4922,"Multi-Shot (4 Missiles, Rolling, Tight, Drunken)","
local missileAngle


local maxMagnitude = 1.0
local minSpeedScalar = .8
local maxSpeedScalar = 1.2

local magnitude = (progress * 1.9) - 1
magnitude = (1 - (magnitude * magnitude * magnitude * magnitude)) / 3

transRight = (sin((rand1 * 1000) + (time * 1000)) + cos((rand2 * 1000) + (time * 200))) * magnitude
transUp = (sin((rand2 * 1000) + (time * 700)) + cos((rand1 * 1000) + (time * 300))) * magnitude
speedScalar = minSpeedScalar + ((maxSpeedScalar - minSpeedScalar) * rand3)


",0,4
